STACK_USAGE("do_int80_syscall_32", 24),
STACK_USAGE("__do_fast_syscall_32", 56),
STACK_USAGE("do_fast_syscall_32", 16),
STACK_USAGE("do_SYSENTER_32", 0),
STACK_USAGE("__do_sys_ni_syscall", 0),
STACK_USAGE("do_syscall_64", 24),
STACK_USAGE("fixup_vdso_exception", 8),
STACK_USAGE("__vdso_gettimeofday", 40),
STACK_USAGE("__vdso_time", 8),
STACK_USAGE("__vdso_clock_gettime", 96),
STACK_USAGE("__vdso_clock_getres", 8),
STACK_USAGE("__llvm_retpoline_r11", 0),
STACK_USAGE("vdso32_setup", 0),
STACK_USAGE("sysenter_setup", 0),
STACK_USAGE("ia32_binfmt_init", 0),
STACK_USAGE("__vdso_gettimeofday", 60),
STACK_USAGE("__vdso_time", 4),
STACK_USAGE("__vdso_clock_gettime", 100),
STACK_USAGE("__vdso_clock_gettime64", 108),
STACK_USAGE("__vdso_clock_getres", 16),
STACK_USAGE("__llvm_retpoline_eax", 0),
STACK_USAGE("__llvm_retpoline_ecx", 0),
STACK_USAGE("__llvm_retpoline_edi", 0),
STACK_USAGE("__llvm_retpoline_edx", 0),
STACK_USAGE("__vdso_getcpu", 8),
STACK_USAGE("__llvm_retpoline_r11", 0),
STACK_USAGE("vdso_join_timens", 40),
STACK_USAGE("vvar_fault", 32),
STACK_USAGE("map_vdso", 56),
STACK_USAGE("map_vdso_once", 40),
STACK_USAGE("arch_get_vdso_data", 0),
STACK_USAGE("arch_setup_additional_pages", 16),
STACK_USAGE("compat_arch_setup_additional_pages", 0),
STACK_USAGE("arch_syscall_is_vdso_sigreturn", 0),
STACK_USAGE("vdso_setup", 0),
STACK_USAGE("init_vdso", 0),
STACK_USAGE("init_vdso_image", 0),
STACK_USAGE("vdso_fault", 0),
STACK_USAGE("vdso_mremap", 0),
STACK_USAGE("__bpf_trace_emulate_vsyscall", 0),
STACK_USAGE("__traceiter_emulate_vsyscall", 16),
STACK_USAGE("perf_trace_emulate_vsyscall", 56),
STACK_USAGE("trace_event_raw_event_emulate_vsyscall", 72),
STACK_USAGE("trace_raw_output_emulate_vsyscall", 24),
STACK_USAGE("emulate_vsyscall", 48),
STACK_USAGE("gate_vma_name", 0),
STACK_USAGE("get_gate_vma", 0),
STACK_USAGE("in_gate_area", 0),
STACK_USAGE("in_gate_area_no_mm", 0),
STACK_USAGE("set_vsyscall_pgtable_user_bits", 32),
STACK_USAGE("map_vsyscall", 0),
STACK_USAGE("vsyscall_setup", 16),
STACK_USAGE("warn_bad_vsyscall", 24),
STACK_USAGE("write_ok_or_segv", 32),
STACK_USAGE("amd_pmu_enable_virt", 0),
STACK_USAGE("amd_pmu_disable_virt", 0),
STACK_USAGE("amd_pmu_event_map", 0),
STACK_USAGE("amd_pmu_addr_offset", 0),
STACK_USAGE("amd_pmu_hw_config", 8),
STACK_USAGE("amd_pmu_cpu_prepare", 8),
STACK_USAGE("amd_pmu_cpu_starting", 24),
STACK_USAGE("amd_pmu_cpu_dead", 8),
STACK_USAGE("amd_pmu_disable_all", 32),
STACK_USAGE("amd_pmu_disable_event", 24),
STACK_USAGE("amd_pmu_handle_irq", 0),
STACK_USAGE("amd_get_event_constraints", 48),
STACK_USAGE("amd_put_event_constraints", 0),
STACK_USAGE("event_show", 0),
STACK_USAGE("umask_show", 0),
STACK_USAGE("edge_show", 0),
STACK_USAGE("inv_show", 0),
STACK_USAGE("cmask_show", 0),
STACK_USAGE("amd_get_event_constraints_f15h", 0),
STACK_USAGE("amd_get_event_constraints_f17h", 0),
STACK_USAGE("amd_put_event_constraints_f17h", 0),
STACK_USAGE("amd_event_sysfs_show", 0),
STACK_USAGE("amd_core_pmu_init", 0),
STACK_USAGE("amd_pmu_init", 0),
STACK_USAGE("perf_ibs_suspend", 8),
STACK_USAGE("perf_ibs_resume", 8),
STACK_USAGE("x86_pmu_amd_ibs_dying_cpu", 8),
STACK_USAGE("amd_ibs_init", 16),
STACK_USAGE("native_read_msr", 8),
STACK_USAGE("perf_ibs_init", 0),
STACK_USAGE("get_ibs_fetch_count", 0),
STACK_USAGE("get_ibs_op_count", 0),
STACK_USAGE("perf_ibs_start", 32),
STACK_USAGE("perf_ibs_stop", 48),
STACK_USAGE("perf_ibs_add", 32),
STACK_USAGE("perf_ibs_del", 24),
STACK_USAGE("perf_ibs_read", 0),
STACK_USAGE("rand_en_show", 0),
STACK_USAGE("cnt_ctl_show", 0),
STACK_USAGE("perf_ibs_handle_irq", 696),
STACK_USAGE("perf_ibs_nmi_handler", 24),
STACK_USAGE("perf_ibs_pmu_init", 24),
STACK_USAGE("perf_event_ibs_init", 0),
STACK_USAGE("__get_ibs_caps", 8),
STACK_USAGE("get_ibs_caps", 0),
STACK_USAGE("ibs_eilvt_valid", 32),
STACK_USAGE("ibs_eilvt_setup", 56),
STACK_USAGE("x86_pmu_amd_ibs_starting_cpu", 8),
STACK_USAGE("_iommu_cpumask_show", 0),
STACK_USAGE("perf_iommu_event_init", 0),
STACK_USAGE("perf_iommu_start", 72),
STACK_USAGE("perf_iommu_read", 24),
STACK_USAGE("perf_iommu_stop", 24),
STACK_USAGE("perf_iommu_add", 56),
STACK_USAGE("perf_iommu_del", 32),
STACK_USAGE("_init_events_attrs", 16),
STACK_USAGE("init_one_iommu", 32),
STACK_USAGE("amd_iommu_pc_init", 16),
STACK_USAGE("csource_show", 0),
STACK_USAGE("devid_show", 0),
STACK_USAGE("domid_show", 0),
STACK_USAGE("pasid_show", 0),
STACK_USAGE("devid_mask_show", 0),
STACK_USAGE("domid_mask_show", 0),
STACK_USAGE("pasid_mask_show", 0),
STACK_USAGE("_iommu_event_show", 0),
STACK_USAGE("amd_uncore_start", 8),
STACK_USAGE("amd_uncore_stop", 24),
STACK_USAGE("amd_uncore_add", 16),
STACK_USAGE("amd_uncore_del", 16),
STACK_USAGE("amd_uncore_event_init", 0),
STACK_USAGE("amd_uncore_attr_show_cpumask", 0),
STACK_USAGE("__uncore_event12_show", 0),
STACK_USAGE("__uncore_event14_show", 0),
STACK_USAGE("__uncore_event8_show", 0),
STACK_USAGE("__uncore_umask_show", 0),
STACK_USAGE("__uncore_coreid_show", 0),
STACK_USAGE("__uncore_slicemask_show", 0),
STACK_USAGE("__uncore_threadmask8_show", 0),
STACK_USAGE("__uncore_threadmask2_show", 0),
STACK_USAGE("__uncore_enallslices_show", 0),
STACK_USAGE("__uncore_enallcores_show", 0),
STACK_USAGE("__uncore_sliceid_show", 0),
STACK_USAGE("amd_uncore_cpu_up_prepare", 32),
STACK_USAGE("amd_uncore_cpu_starting", 48),
STACK_USAGE("amd_uncore_cpu_online", 48),
STACK_USAGE("amd_uncore_cpu_down_prepare", 56),
STACK_USAGE("amd_uncore_cpu_dead", 24),
STACK_USAGE("amd_uncore_init", 16),
STACK_USAGE("amd_uncore_exit", 0),
STACK_USAGE("amd_uncore_read", 24),
STACK_USAGE("x86_perf_event_update", 32),
STACK_USAGE("__x86_pmu_enable_event", 24),
STACK_USAGE("collect_events", 16),
STACK_USAGE("native_read_msr", 8),
STACK_USAGE("x86_perf_rdpmc_index", 0),
STACK_USAGE("x86_pmu_enable", 64),
STACK_USAGE("x86_perf_event_set_period", 40),
STACK_USAGE("x86_pmu_enable_event", 8),
STACK_USAGE("x86_pmu_add", 312),
STACK_USAGE("x86_pmu_start", 32),
STACK_USAGE("perf_event_print_debug", 112),
STACK_USAGE("x86_pmu_stop", 24),
STACK_USAGE("x86_pmu_del", 32),
STACK_USAGE("x86_pmu_handle_irq", 376),
STACK_USAGE("perf_events_lapic_init", 0),
STACK_USAGE("perf_event_nmi_handler", 16),
STACK_USAGE("x86_pmu_prepare_cpu", 0),
STACK_USAGE("x86_pmu_dead_cpu", 0),
STACK_USAGE("x86_pmu_online_cpu", 8),
STACK_USAGE("x86_pmu_starting_cpu", 0),
STACK_USAGE("x86_pmu_dying_cpu", 0),
STACK_USAGE("pmu_check_apic", 0),
STACK_USAGE("events_sysfs_show", 16),
STACK_USAGE("events_ht_sysfs_show", 8),
STACK_USAGE("events_hybrid_sysfs_show", 64),
STACK_USAGE("is_visible", 8),
STACK_USAGE("x86_event_sysfs_show", 40),
STACK_USAGE("_x86_pmu_read", 0),
STACK_USAGE("x86_pmu_show_pmu_cap", 24),
STACK_USAGE("x86_pmu_update_cpu_context", 0),
STACK_USAGE("init_hw_perf_events", 48),
STACK_USAGE("x86_pmu_read", 0),
STACK_USAGE("x86_pmu_start_txn", 16),
STACK_USAGE("x86_pmu_cancel_txn", 8),
STACK_USAGE("x86_pmu_commit_txn", 296),
STACK_USAGE("allocate_fake_cpuc", 32),
STACK_USAGE("x86_pmu_event_init", 32),
STACK_USAGE("perf_clear_dirty_counters", 48),
STACK_USAGE("check_hw_exists", 88),
STACK_USAGE("x86_pmu_event_mapped", 8),
STACK_USAGE("x86_pmu_event_unmapped", 0),
STACK_USAGE("x86_pmu_event_idx", 0),
STACK_USAGE("get_attr_rdpmc", 0),
STACK_USAGE("set_attr_rdpmc", 24),
STACK_USAGE("max_precise_show", 0),
STACK_USAGE("x86_pmu_sched_task", 0),
STACK_USAGE("x86_pmu_swap_task_ctx", 0),
STACK_USAGE("perf_check_microcode", 0),
STACK_USAGE("x86_pmu_check_period", 16),
STACK_USAGE("x86_pmu_aux_output_match", 0),
STACK_USAGE("x86_pmu_filter_match", 0),
STACK_USAGE("arch_perf_update_userpage", 48),
STACK_USAGE("perf_callchain_kernel", 144),
STACK_USAGE("perf_callchain_user", 24),
STACK_USAGE("perf_instruction_pointer", 8),
STACK_USAGE("perf_misc_flags", 8),
STACK_USAGE("perf_get_x86_pmu_capability", 0),
STACK_USAGE("hw_perf_event_destroy", 0),
STACK_USAGE("hw_perf_lbr_event_destroy", 0),
STACK_USAGE("x86_reserve_hardware", 32),
STACK_USAGE("x86_release_hardware", 24),
STACK_USAGE("x86_add_exclusive", 16),
STACK_USAGE("x86_del_exclusive", 0),
STACK_USAGE("x86_setup_perfctr", 24),
STACK_USAGE("x86_pmu_max_precise", 0),
STACK_USAGE("x86_pmu_hw_config", 8),
STACK_USAGE("x86_pmu_disable_all", 48),
STACK_USAGE("perf_guest_get_msrs", 0),
STACK_USAGE("x86_pmu_disable", 0),
STACK_USAGE("x86_pmu_enable_all", 16),
STACK_USAGE("x86_get_pmu", 0),
STACK_USAGE("perf_assign_events", 208),
STACK_USAGE("x86_schedule_events", 88),
STACK_USAGE("bts_buffer_free_aux", 0),
STACK_USAGE("bts_update", 32),
STACK_USAGE("__bts_event_start", 32),
STACK_USAGE("bts_event_start", 24),
STACK_USAGE("bts_event_stop", 40),
STACK_USAGE("intel_bts_enable_local", 0),
STACK_USAGE("intel_bts_disable_local", 0),
STACK_USAGE("bts_buffer_reset", 64),
STACK_USAGE("intel_bts_interrupt", 48),
STACK_USAGE("bts_event_del", 0),
STACK_USAGE("bts_event_add", 24),
STACK_USAGE("bts_event_destroy", 0),
STACK_USAGE("bts_event_init", 16),
STACK_USAGE("bts_event_read", 0),
STACK_USAGE("bts_init", 0),
STACK_USAGE("bts_buffer_setup_aux", 48),
STACK_USAGE("__x86_pmu_enable_event", 24),
STACK_USAGE("x86_pmu_disable_event", 8),
STACK_USAGE("perf_allow_cpu", 8),
STACK_USAGE("intel_pmu_disable_all", 8),
STACK_USAGE("__intel_pmu_enable_all", 24),
STACK_USAGE("intel_pmu_enable_all", 0),
STACK_USAGE("__intel_pmu_snapshot_branch_stack", 32),
STACK_USAGE("intel_pmu_snapshot_branch_stack", 48),
STACK_USAGE("intel_pmu_snapshot_arch_branch_stack", 40),
STACK_USAGE("intel_pmu_nhm_enable_all", 16),
STACK_USAGE("intel_tfa_commit_scheduling", 0),
STACK_USAGE("intel_tfa_pmu_enable_all", 0),
STACK_USAGE("intel_set_masks", 16),
STACK_USAGE("intel_clear_masks", 8),
STACK_USAGE("intel_pmu_disable_event", 24),
STACK_USAGE("intel_pmu_assign_event", 0),
STACK_USAGE("intel_pmu_del_event", 8),
STACK_USAGE("icl_set_topdown_event_period", 16),
STACK_USAGE("adl_set_topdown_event_period", 0),
STACK_USAGE("update_saved_topdown_regs", 48),
STACK_USAGE("icl_update_topdown_event", 104),
STACK_USAGE("adl_update_topdown_event", 0),
STACK_USAGE("intel_pmu_read_event", 8),
STACK_USAGE("intel_pmu_enable_event", 40),
STACK_USAGE("intel_pmu_add_event", 8),
STACK_USAGE("intel_pmu_save_and_restart", 8),
STACK_USAGE("intel_pmu_handle_irq", 376),
STACK_USAGE("__intel_shared_reg_get_constraints", 64),
STACK_USAGE("x86_get_event_constraints", 0),
STACK_USAGE("intel_start_scheduling", 0),
STACK_USAGE("intel_commit_scheduling", 32),
STACK_USAGE("intel_stop_scheduling", 0),
STACK_USAGE("intel_get_event_constraints", 64),
STACK_USAGE("intel_put_event_constraints", 24),
STACK_USAGE("intel_pebs_aliases_core2", 0),
STACK_USAGE("intel_pebs_aliases_snb", 0),
STACK_USAGE("intel_pebs_aliases_ivb", 0),
STACK_USAGE("intel_pebs_aliases_skl", 0),
STACK_USAGE("core_pmu_hw_config", 32),
STACK_USAGE("intel_pmu_hw_config", 24),
STACK_USAGE("intel_guest_get_msrs", 8),
STACK_USAGE("core_guest_get_msrs", 56),
STACK_USAGE("core_pmu_enable_event", 0),
STACK_USAGE("core_pmu_enable_all", 24),
STACK_USAGE("hsw_hw_config", 8),
STACK_USAGE("hsw_get_event_constraints", 8),
STACK_USAGE("icl_get_event_constraints", 8),
STACK_USAGE("spr_get_event_constraints", 16),
STACK_USAGE("glp_get_event_constraints", 0),
STACK_USAGE("tnt_get_event_constraints", 0),
STACK_USAGE("tfa_get_event_constraints", 24),
STACK_USAGE("adl_get_event_constraints", 8),
STACK_USAGE("adl_hw_config", 8),
STACK_USAGE("adl_get_hybrid_cpu_type", 0),
STACK_USAGE("bdw_limit_period", 0),
STACK_USAGE("nhm_limit_period", 0),
STACK_USAGE("spr_limit_period", 0),
STACK_USAGE("event_show", 0),
STACK_USAGE("umask_show", 0),
STACK_USAGE("edge_show", 0),
STACK_USAGE("pc_show", 0),
STACK_USAGE("any_show", 0),
STACK_USAGE("inv_show", 0),
STACK_USAGE("cmask_show", 0),
STACK_USAGE("in_tx_show", 0),
STACK_USAGE("in_tx_cp_show", 0),
STACK_USAGE("intel_event_sysfs_show", 0),
STACK_USAGE("intel_cpuc_prepare", 32),
STACK_USAGE("intel_pmu_cpu_prepare", 0),
STACK_USAGE("flip_smm_bit", 0),
STACK_USAGE("intel_pmu_cpu_starting", 64),
STACK_USAGE("intel_pmu_cpu_dying", 0),
STACK_USAGE("intel_cpuc_finish", 8),
STACK_USAGE("intel_pmu_cpu_dead", 16),
STACK_USAGE("intel_pmu_sched_task", 16),
STACK_USAGE("intel_pmu_swap_task_ctx", 0),
STACK_USAGE("intel_pmu_check_period", 16),
STACK_USAGE("intel_pmu_aux_output_match", 0),
STACK_USAGE("intel_pmu_filter_match", 8),
STACK_USAGE("offcore_rsp_show", 0),
STACK_USAGE("ldlat_show", 0),
STACK_USAGE("frontend_show", 0),
STACK_USAGE("intel_pmu_event_map", 0),
STACK_USAGE("intel_clovertown_quirk", 0),
STACK_USAGE("intel_check_pebs_isolation", 0),
STACK_USAGE("intel_pebs_isolation_quirk", 0),
STACK_USAGE("intel_snb_check_microcode", 0),
STACK_USAGE("check_msr", 40),
STACK_USAGE("intel_sandybridge_quirk", 0),
STACK_USAGE("intel_arch_events_quirk", 40),
STACK_USAGE("intel_nehalem_quirk", 0),
STACK_USAGE("intel_ht_bug", 0),
STACK_USAGE("freeze_on_smi_show", 0),
STACK_USAGE("freeze_on_smi_store", 24),
STACK_USAGE("update_tfa_sched", 0),
STACK_USAGE("show_sysctl_tfa", 0),
STACK_USAGE("set_sysctl_tfa", 24),
STACK_USAGE("branches_show", 0),
STACK_USAGE("pmu_name_show", 0),
STACK_USAGE("tsx_is_visible", 0),
STACK_USAGE("pebs_is_visible", 0),
STACK_USAGE("lbr_is_visible", 0),
STACK_USAGE("exra_is_visible", 0),
STACK_USAGE("default_is_visible", 0),
STACK_USAGE("hybrid_events_is_visible", 0),
STACK_USAGE("hybrid_tsx_is_visible", 16),
STACK_USAGE("hybrid_format_is_visible", 16),
STACK_USAGE("intel_hybrid_get_attr_cpus", 0),
STACK_USAGE("intel_pmu_init", 64),
STACK_USAGE("fixup_ht_bug", 16),
STACK_USAGE("test_msr", 0),
STACK_USAGE("__cstate_core_event_show", 0),
STACK_USAGE("__cstate_pkg_event_show", 0),
STACK_USAGE("cstate_get_attr_cpumask", 0),
STACK_USAGE("cstate_pmu_event_init", 16),
STACK_USAGE("cstate_pmu_event_update", 24),
STACK_USAGE("cstate_pmu_event_start", 16),
STACK_USAGE("cstate_pmu_event_stop", 24),
STACK_USAGE("cstate_pmu_event_del", 24),
STACK_USAGE("cstate_pmu_event_add", 16),
STACK_USAGE("cstate_cpu_exit", 16),
STACK_USAGE("cstate_cpu_init", 8),
STACK_USAGE("cstate_probe", 8),
STACK_USAGE("cstate_init", 16),
STACK_USAGE("cstate_pmu_init", 8),
STACK_USAGE("cstate_pmu_exit", 0),
STACK_USAGE("intel_pmu_pebs_sched_task", 312),
STACK_USAGE("pebs_update_state", 24),
STACK_USAGE("intel_pmu_pebs_add", 8),
STACK_USAGE("intel_pmu_pebs_enable", 32),
STACK_USAGE("intel_pmu_pebs_del", 8),
STACK_USAGE("intel_pmu_pebs_disable", 312),
STACK_USAGE("intel_pmu_pebs_enable_all", 0),
STACK_USAGE("intel_pmu_pebs_disable_all", 0),
STACK_USAGE("get_data_src", 0),
STACK_USAGE("setup_pebs_fixed_sample_data", 208),
STACK_USAGE("setup_pebs_adaptive_sample_data", 88),
STACK_USAGE("intel_pmu_auto_reload_read", 312),
STACK_USAGE("intel_pmu_save_and_restart_reload", 48),
STACK_USAGE("intel_pmu_drain_pebs_core", 256),
STACK_USAGE("intel_pmu_pebs_event_update_no_drain", 40),
STACK_USAGE("intel_pmu_drain_pebs_nhm", 552),
STACK_USAGE("intel_pmu_drain_pebs_icl", 440),
STACK_USAGE("intel_ds_init", 8),
STACK_USAGE("perf_restore_debug_store", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("init_debug_store_on_cpu", 0),
STACK_USAGE("fini_debug_store_on_cpu", 0),
STACK_USAGE("release_pebs_buffer", 40),
STACK_USAGE("release_bts_buffer", 24),
STACK_USAGE("release_ds_buffers", 16),
STACK_USAGE("reserve_ds_buffers", 104),
STACK_USAGE("intel_pmu_enable_bts", 16),
STACK_USAGE("intel_pmu_disable_bts", 8),
STACK_USAGE("intel_pmu_drain_bts_buffer", 568),
STACK_USAGE("intel_pmu_pebs_data_source_nhm", 0),
STACK_USAGE("intel_pebs_constraints", 0),
STACK_USAGE("intel_pmu_pebs_data_source_skl", 0),
STACK_USAGE("knc_pmu_event_map", 0),
STACK_USAGE("knc_pmu_disable_all", 8),
STACK_USAGE("knc_pmu_enable_all", 8),
STACK_USAGE("knc_pmu_disable_event", 0),
STACK_USAGE("knc_pmu_enable_event", 0),
STACK_USAGE("knc_pmu_handle_irq", 376),
STACK_USAGE("event_show", 0),
STACK_USAGE("umask_show", 0),
STACK_USAGE("edge_show", 0),
STACK_USAGE("inv_show", 0),
STACK_USAGE("cmask_show", 0),
STACK_USAGE("knc_pmu_init", 0),
STACK_USAGE("intel_pmu_setup_lbr_filter", 0),
STACK_USAGE("intel_pmu_lbr_filter", 216),
STACK_USAGE("intel_pmu_store_pebs_lbrs", 24),
STACK_USAGE("intel_pmu_lbr_init_core", 0),
STACK_USAGE("intel_pmu_lbr_init_nhm", 0),
STACK_USAGE("intel_pmu_lbr_init_snb", 0),
STACK_USAGE("intel_pmu_lbr_init_hsw", 8),
STACK_USAGE("intel_pmu_lbr_init_skl", 8),
STACK_USAGE("intel_pmu_lbr_init_atom", 0),
STACK_USAGE("intel_pmu_lbr_init_slm", 0),
STACK_USAGE("intel_pmu_lbr_init_knl", 0),
STACK_USAGE("intel_pmu_lbr_init", 0),
STACK_USAGE("intel_pmu_arch_lbr_init", 56),
STACK_USAGE("x86_perf_get_lbr", 0),
STACK_USAGE("intel_pmu_lbr_reset_32", 8),
STACK_USAGE("intel_pmu_lbr_reset_64", 8),
STACK_USAGE("intel_pmu_arch_lbr_reset", 0),
STACK_USAGE("intel_pmu_lbr_reset", 8),
STACK_USAGE("lbr_from_signext_quirk_wr", 0),
STACK_USAGE("intel_pmu_lbr_restore", 80),
STACK_USAGE("intel_pmu_arch_lbr_restore", 32),
STACK_USAGE("intel_pmu_arch_lbr_xrstors", 0),
STACK_USAGE("intel_pmu_lbr_save", 80),
STACK_USAGE("intel_pmu_arch_lbr_save", 40),
STACK_USAGE("intel_pmu_arch_lbr_xsaves", 0),
STACK_USAGE("intel_pmu_lbr_swap_task_ctx", 0),
STACK_USAGE("intel_pmu_lbr_sched_task", 24),
STACK_USAGE("intel_pmu_lbr_add", 16),
STACK_USAGE("release_lbr_buffers", 16),
STACK_USAGE("reserve_lbr_buffers", 24),
STACK_USAGE("intel_pmu_lbr_del", 8),
STACK_USAGE("intel_pmu_lbr_enable_all", 16),
STACK_USAGE("intel_pmu_lbr_disable_all", 8),
STACK_USAGE("intel_pmu_lbr_read_32", 56),
STACK_USAGE("intel_pmu_lbr_read_64", 88),
STACK_USAGE("intel_pmu_store_lbr", 56),
STACK_USAGE("intel_pmu_arch_lbr_read", 0),
STACK_USAGE("intel_pmu_arch_lbr_read_xsave", 16),
STACK_USAGE("intel_pmu_lbr_read", 8),
STACK_USAGE("p4_pmu_handle_irq", 376),
STACK_USAGE("p4_pmu_schedule_events", 152),
STACK_USAGE("cccr_show", 0),
STACK_USAGE("escr_show", 0),
STACK_USAGE("ht_show", 0),
STACK_USAGE("p4_pmu_init", 16),
STACK_USAGE("p4_pmu_event_map", 0),
STACK_USAGE("p4_hw_config", 48),
STACK_USAGE("p4_pmu_disable_event", 0),
STACK_USAGE("p4_pmu_disable_all", 16),
STACK_USAGE("__p4_pmu_enable_event", 40),
STACK_USAGE("p4_pmu_enable_event", 16),
STACK_USAGE("p4_pmu_enable_all", 16),
STACK_USAGE("p6_pmu_event_map", 0),
STACK_USAGE("p6_pmu_disable_all", 8),
STACK_USAGE("p6_pmu_enable_all", 8),
STACK_USAGE("p6_pmu_disable_event", 0),
STACK_USAGE("p6_pmu_enable_event", 0),
STACK_USAGE("event_show", 0),
STACK_USAGE("umask_show", 0),
STACK_USAGE("edge_show", 0),
STACK_USAGE("pc_show", 0),
STACK_USAGE("inv_show", 0),
STACK_USAGE("cmask_show", 0),
STACK_USAGE("p6_pmu_rdpmc_quirk", 0),
STACK_USAGE("p6_pmu_init", 0),
STACK_USAGE("pt_show", 0),
STACK_USAGE("cyc_show", 0),
STACK_USAGE("pt_buffer_reset_markers", 32),
STACK_USAGE("pwr_evt_show", 0),
STACK_USAGE("fup_on_ptw_show", 0),
STACK_USAGE("mtc_show", 0),
STACK_USAGE("tsc_show", 0),
STACK_USAGE("noretcomp_show", 0),
STACK_USAGE("ptw_show", 0),
STACK_USAGE("branch_show", 0),
STACK_USAGE("event_show", 0),
STACK_USAGE("notnt_show", 0),
STACK_USAGE("mtc_period_show", 0),
STACK_USAGE("cyc_thresh_show", 0),
STACK_USAGE("psb_period_show", 0),
STACK_USAGE("pt_buffer_setup_aux", 64),
STACK_USAGE("pt_buffer_free_aux", 16),
STACK_USAGE("pt_event_addr_filters_validate", 0),
STACK_USAGE("pt_event_addr_filters_sync", 32),
STACK_USAGE("pt_timing_attr_show", 0),
STACK_USAGE("intel_pt_interrupt", 32),
STACK_USAGE("intel_pt_handle_vmx", 48),
STACK_USAGE("pt_event_start", 56),
STACK_USAGE("pt_event_stop", 32),
STACK_USAGE("pt_event_snapshot_aux", 48),
STACK_USAGE("pt_event_del", 0),
STACK_USAGE("pt_event_add", 16),
STACK_USAGE("pt_event_read", 0),
STACK_USAGE("pt_event_destroy", 8),
STACK_USAGE("pt_event_init", 16),
STACK_USAGE("cpu_emergency_stop_pt", 0),
STACK_USAGE("is_intel_pt_event", 0),
STACK_USAGE("pt_init", 48),
STACK_USAGE("pt_pmu_hw_init", 8),
STACK_USAGE("pt_config_buffer", 24),
STACK_USAGE("intel_pt_validate_cap", 8),
STACK_USAGE("intel_pt_validate_hw_cap", 8),
STACK_USAGE("pt_handle_status", 32),
STACK_USAGE("pt_cap_show", 8),
STACK_USAGE("pt_read_offset", 24),
STACK_USAGE("pt_topa_entry_for_page", 0),
STACK_USAGE("uncore_pci_find_dev_pmu", 40),
STACK_USAGE("uncore_pci_pmu_register", 56),
STACK_USAGE("uncore_event_show", 8),
STACK_USAGE("uncore_pci_probe", 40),
STACK_USAGE("uncore_pci_remove", 24),
STACK_USAGE("uncore_pmu_to_box", 0),
STACK_USAGE("uncore_bus_notify", 24),
STACK_USAGE("uncore_pci_sub_bus_notify", 0),
STACK_USAGE("uncore_pci_sub_driver_init", 56),
STACK_USAGE("uncore_pci_bus_notify", 0),
STACK_USAGE("uncore_msr_read_counter", 8),
STACK_USAGE("uncore_pci_pmus_register", 40),
STACK_USAGE("uncore_pci_init", 40),
STACK_USAGE("uncore_pci_exit", 32),
STACK_USAGE("uncore_mmio_exit_box", 0),
STACK_USAGE("uncore_change_context", 72),
STACK_USAGE("uncore_mmio_read_counter", 0),
STACK_USAGE("uncore_event_cpu_offline", 48),
STACK_USAGE("uncore_box_ref", 112),
STACK_USAGE("uncore_event_cpu_online", 48),
STACK_USAGE("type_pmu_register", 24),
STACK_USAGE("uncore_msr_pmus_register", 16),
STACK_USAGE("uncore_cpu_init", 16),
STACK_USAGE("uncore_get_constraint", 32),
STACK_USAGE("uncore_mmio_init", 24),
STACK_USAGE("intel_uncore_init", 24),
STACK_USAGE("intel_uncore_exit", 0),
STACK_USAGE("uncore_put_constraint", 0),
STACK_USAGE("uncore_shared_reg_config", 24),
STACK_USAGE("uncore_perf_event_update", 32),
STACK_USAGE("uncore_pmu_hrtimer", 96),
STACK_USAGE("uncore_pmu_start_hrtimer", 0),
STACK_USAGE("uncore_pmu_cancel_hrtimer", 0),
STACK_USAGE("uncore_freerunning_counter", 0),
STACK_USAGE("uncore_pcibus_to_dieid", 8),
STACK_USAGE("uncore_assign_events", 88),
STACK_USAGE("uncore_pmu_event_start", 16),
STACK_USAGE("uncore_pmu_event_stop", 32),
STACK_USAGE("uncore_pmu_event_add", 88),
STACK_USAGE("uncore_die_to_segment", 32),
STACK_USAGE("uncore_pmu_event_del", 40),
STACK_USAGE("uncore_pmu_event_read", 32),
STACK_USAGE("uncore_validate_group", 56),
STACK_USAGE("uncore_pmu_event_init", 16),
STACK_USAGE("__find_pci2phy_map", 24),
STACK_USAGE("uncore_pmu_enable", 8),
STACK_USAGE("uncore_pmu_disable", 8),
STACK_USAGE("uncore_get_attr_cpumask", 0),
STACK_USAGE("uncore_get_alias_name", 0),
STACK_USAGE("uncore_pmu_register", 16),
STACK_USAGE("uncore_types_exit", 40),
STACK_USAGE("uncore_type_init", 56),
STACK_USAGE("intel_uncore_has_discovery_tables", 144),
STACK_USAGE("intel_uncore_clear_discovery_tables", 16),
STACK_USAGE("__uncore_event_show", 0),
STACK_USAGE("__uncore_umask_show", 0),
STACK_USAGE("__uncore_edge_show", 0),
STACK_USAGE("__uncore_inv_show", 0),
STACK_USAGE("__uncore_thresh_show", 0),
STACK_USAGE("intel_generic_uncore_msr_init_box", 0),
STACK_USAGE("intel_generic_uncore_msr_disable_box", 0),
STACK_USAGE("intel_generic_uncore_msr_enable_box", 0),
STACK_USAGE("intel_generic_uncore_msr_enable_event", 0),
STACK_USAGE("intel_generic_uncore_msr_disable_event", 0),
STACK_USAGE("intel_generic_uncore_pci_init_box", 0),
STACK_USAGE("intel_generic_uncore_pci_disable_box", 0),
STACK_USAGE("intel_generic_uncore_pci_enable_box", 0),
STACK_USAGE("intel_generic_uncore_pci_enable_event", 0),
STACK_USAGE("intel_generic_uncore_pci_disable_event", 0),
STACK_USAGE("intel_generic_uncore_pci_read_counter", 32),
STACK_USAGE("intel_generic_uncore_mmio_init_box", 24),
STACK_USAGE("intel_generic_uncore_mmio_disable_box", 0),
STACK_USAGE("intel_generic_uncore_mmio_enable_box", 0),
STACK_USAGE("intel_generic_uncore_mmio_enable_event", 0),
STACK_USAGE("intel_generic_uncore_mmio_disable_event", 0),
STACK_USAGE("intel_uncore_generic_init_uncores", 40),
STACK_USAGE("intel_uncore_generic_uncore_cpu_init", 0),
STACK_USAGE("intel_uncore_generic_uncore_pci_init", 0),
STACK_USAGE("intel_uncore_generic_uncore_mmio_init", 0),
STACK_USAGE("nhmex_rbox_put_constraint", 0),
STACK_USAGE("nhmex_rbox_hw_config", 0),
STACK_USAGE("nhmex_rbox_msr_enable_event", 24),
STACK_USAGE("__uncore_xbr_mm_cfg_show", 0),
STACK_USAGE("__uncore_xbr_match_show", 0),
STACK_USAGE("__uncore_xbr_mask_show", 0),
STACK_USAGE("__uncore_qlx_cfg_show", 0),
STACK_USAGE("__uncore_iperf_cfg_show", 0),
STACK_USAGE("nhmex_uncore_cpu_init", 0),
STACK_USAGE("__uncore_event_show", 0),
STACK_USAGE("__uncore_event5_show", 0),
STACK_USAGE("__uncore_umask_show", 0),
STACK_USAGE("__uncore_edge_show", 0),
STACK_USAGE("__uncore_inv_show", 0),
STACK_USAGE("__uncore_thresh8_show", 0),
STACK_USAGE("__uncore_counter_show", 0),
STACK_USAGE("__uncore_match_show", 0),
STACK_USAGE("__uncore_mask_show", 0),
STACK_USAGE("nhmex_uncore_msr_init_box", 0),
STACK_USAGE("nhmex_uncore_msr_exit_box", 0),
STACK_USAGE("nhmex_uncore_msr_disable_box", 24),
STACK_USAGE("nhmex_uncore_msr_enable_box", 24),
STACK_USAGE("nhmex_uncore_msr_disable_event", 0),
STACK_USAGE("nhmex_uncore_msr_enable_event", 0),
STACK_USAGE("nhmex_bbox_hw_config", 0),
STACK_USAGE("nhmex_bbox_msr_enable_event", 8),
STACK_USAGE("nhmex_sbox_hw_config", 0),
STACK_USAGE("nhmex_sbox_msr_enable_event", 8),
STACK_USAGE("nhmex_mbox_get_shared_reg", 40),
STACK_USAGE("nhmex_mbox_get_constraint", 56),
STACK_USAGE("nhmex_mbox_put_constraint", 0),
STACK_USAGE("nhmex_mbox_hw_config", 40),
STACK_USAGE("nhmex_mbox_msr_enable_event", 40),
STACK_USAGE("__uncore_count_mode_show", 0),
STACK_USAGE("__uncore_storage_mode_show", 0),
STACK_USAGE("__uncore_wrap_mode_show", 0),
STACK_USAGE("__uncore_flag_mode_show", 0),
STACK_USAGE("__uncore_inc_sel_show", 0),
STACK_USAGE("__uncore_set_flag_sel_show", 0),
STACK_USAGE("__uncore_filter_cfg_en_show", 0),
STACK_USAGE("__uncore_filter_match_show", 0),
STACK_USAGE("__uncore_filter_mask_show", 0),
STACK_USAGE("__uncore_dsp_show", 0),
STACK_USAGE("__uncore_thr_show", 0),
STACK_USAGE("__uncore_fvc_show", 0),
STACK_USAGE("__uncore_pgt_show", 0),
STACK_USAGE("__uncore_map_show", 0),
STACK_USAGE("__uncore_iss_show", 0),
STACK_USAGE("__uncore_pld_show", 0),
STACK_USAGE("nhmex_rbox_get_constraint", 48),
STACK_USAGE("imc_uncore_pci_init", 32),
STACK_USAGE("snb_uncore_pci_init", 0),
STACK_USAGE("ivb_uncore_pci_init", 0),
STACK_USAGE("hsw_uncore_pci_init", 0),
STACK_USAGE("bdw_uncore_pci_init", 0),
STACK_USAGE("skl_uncore_pci_init", 0),
STACK_USAGE("nhm_uncore_msr_disable_box", 0),
STACK_USAGE("nhm_uncore_msr_enable_box", 0),
STACK_USAGE("nhm_uncore_msr_enable_event", 0),
STACK_USAGE("nhm_uncore_cpu_init", 0),
STACK_USAGE("__uncore_imc_init_box", 56),
STACK_USAGE("tgl_uncore_imc_freerunning_init_box", 0),
STACK_USAGE("tgl_l_uncore_mmio_init", 0),
STACK_USAGE("tgl_uncore_mmio_init", 0),
STACK_USAGE("adl_uncore_imc_init_box", 8),
STACK_USAGE("adl_uncore_mmio_disable_box", 0),
STACK_USAGE("adl_uncore_mmio_enable_box", 0),
STACK_USAGE("adl_uncore_imc_freerunning_init_box", 0),
STACK_USAGE("adl_uncore_mmio_init", 0),
STACK_USAGE("__uncore_event_show", 0),
STACK_USAGE("__uncore_umask_show", 0),
STACK_USAGE("__uncore_chmask_show", 0),
STACK_USAGE("__uncore_edge_show", 0),
STACK_USAGE("__uncore_inv_show", 0),
STACK_USAGE("__uncore_cmask5_show", 0),
STACK_USAGE("__uncore_cmask8_show", 0),
STACK_USAGE("__uncore_threshold_show", 0),
STACK_USAGE("snb_uncore_msr_enable_event", 0),
STACK_USAGE("snb_uncore_msr_disable_event", 0),
STACK_USAGE("snb_uncore_msr_init_box", 0),
STACK_USAGE("snb_uncore_msr_enable_box", 0),
STACK_USAGE("snb_uncore_msr_exit_box", 0),
STACK_USAGE("snb_uncore_cpu_init", 0),
STACK_USAGE("skl_uncore_msr_init_box", 8),
STACK_USAGE("skl_uncore_msr_enable_box", 0),
STACK_USAGE("skl_uncore_msr_exit_box", 0),
STACK_USAGE("skl_uncore_cpu_init", 0),
STACK_USAGE("icl_uncore_cpu_init", 8),
STACK_USAGE("rkl_uncore_msr_init_box", 0),
STACK_USAGE("tgl_uncore_cpu_init", 8),
STACK_USAGE("adl_uncore_msr_init_box", 0),
STACK_USAGE("adl_uncore_msr_enable_box", 0),
STACK_USAGE("adl_uncore_msr_disable_box", 0),
STACK_USAGE("adl_uncore_msr_exit_box", 0),
STACK_USAGE("uncore_freerunning_hw_config", 0),
STACK_USAGE("adl_uncore_cpu_init", 8),
STACK_USAGE("snb_uncore_imc_init_box", 56),
STACK_USAGE("snb_uncore_imc_enable_box", 0),
STACK_USAGE("snb_uncore_imc_disable_box", 0),
STACK_USAGE("snb_uncore_imc_enable_event", 0),
STACK_USAGE("snb_uncore_imc_disable_event", 0),
STACK_USAGE("snb_uncore_imc_event_init", 24),
STACK_USAGE("snb_uncore_imc_hw_config", 0),
STACK_USAGE("snb_pci2phy_map_init", 24),
STACK_USAGE("snbep_cbox_get_constraint", 0),
STACK_USAGE("snbep_cbox_hw_config", 0),
STACK_USAGE("snbep_pcu_get_constraint", 56),
STACK_USAGE("snbep_pcu_put_constraint", 0),
STACK_USAGE("snbep_pcu_hw_config", 0),
STACK_USAGE("snbep_uncore_cpu_init", 0),
STACK_USAGE("snbep_qpi_hw_config", 0),
STACK_USAGE("snbep_qpi_enable_event", 24),
STACK_USAGE("snbep_pci2phy_map_init", 88),
STACK_USAGE("snbep_uncore_pci_init", 0),
STACK_USAGE("ivbep_uncore_msr_init_box", 0),
STACK_USAGE("ivbep_uncore_pci_init_box", 0),
STACK_USAGE("ivbep_cbox_filter_mask", 0),
STACK_USAGE("ivbep_cbox_get_constraint", 0),
STACK_USAGE("ivbep_cbox_hw_config", 0),
STACK_USAGE("ivbep_cbox_enable_event", 16),
STACK_USAGE("ivbep_uncore_cpu_init", 0),
STACK_USAGE("ivbep_uncore_irp_enable_event", 0),
STACK_USAGE("ivbep_uncore_irp_disable_event", 0),
STACK_USAGE("ivbep_uncore_irp_read_counter", 32),
STACK_USAGE("ivbep_uncore_pci_init", 0),
STACK_USAGE("knl_cha_filter_mask", 0),
STACK_USAGE("knl_cha_get_constraint", 0),
STACK_USAGE("knl_cha_hw_config", 0),
STACK_USAGE("knl_uncore_cpu_init", 0),
STACK_USAGE("knl_uncore_imc_enable_box", 0),
STACK_USAGE("knl_uncore_imc_enable_event", 0),
STACK_USAGE("knl_uncore_pci_init", 0),
STACK_USAGE("hswep_ubox_hw_config", 0),
STACK_USAGE("hswep_cbox_filter_mask", 0),
STACK_USAGE("hswep_cbox_get_constraint", 0),
STACK_USAGE("hswep_cbox_hw_config", 0),
STACK_USAGE("hswep_cbox_enable_event", 16),
STACK_USAGE("hswep_uncore_sbox_msr_init_box", 48),
STACK_USAGE("hswep_pcu_hw_config", 0),
STACK_USAGE("hswep_uncore_cpu_init", 16),
STACK_USAGE("hswep_uncore_irp_read_counter", 32),
STACK_USAGE("hswep_uncore_pci_init", 0),
STACK_USAGE("bdx_uncore_cpu_init", 16),
STACK_USAGE("bdx_uncore_pci_init", 0),
STACK_USAGE("skx_cha_filter_mask", 0),
STACK_USAGE("skx_cha_get_constraint", 0),
STACK_USAGE("skx_cha_hw_config", 0),
STACK_USAGE("skx_iio_enable_event", 0),
STACK_USAGE("skx_iio_mapping_visible", 0),
STACK_USAGE("skx_iio_mapping_show", 0),
STACK_USAGE("skx_iio_get_topology", 64),
STACK_USAGE("pmu_iio_set_mapping", 136),
STACK_USAGE("skx_iio_set_mapping", 0),
STACK_USAGE("skx_iio_cleanup_mapping", 16),
STACK_USAGE("skx_uncore_cpu_init", 24),
STACK_USAGE("skx_upi_uncore_pci_init_box", 0),
STACK_USAGE("skx_m2m_uncore_pci_init_box", 0),
STACK_USAGE("skx_uncore_pci_init", 0),
STACK_USAGE("snr_cha_hw_config", 0),
STACK_USAGE("snr_cha_enable_event", 8),
STACK_USAGE("snr_iio_mapping_visible", 0),
STACK_USAGE("sad_cfg_iio_topology", 64),
STACK_USAGE("snr_iio_get_topology", 0),
STACK_USAGE("snr_iio_set_mapping", 0),
STACK_USAGE("snr_iio_cleanup_mapping", 16),
STACK_USAGE("snr_pcu_hw_config", 0),
STACK_USAGE("snr_uncore_cpu_init", 0),
STACK_USAGE("snr_m2m_uncore_pci_init_box", 0),
STACK_USAGE("__uncore_event_show", 0),
STACK_USAGE("__uncore_event2_show", 0),
STACK_USAGE("__uncore_event_ext_show", 0),
STACK_USAGE("__uncore_use_occ_ctr_show", 0),
STACK_USAGE("snr_uncore_pci_enable_event", 16),
STACK_USAGE("__uncore_umask_show", 0),
STACK_USAGE("__uncore_umask_ext_show", 0),
STACK_USAGE("__uncore_umask_ext2_show", 0),
STACK_USAGE("__uncore_umask_ext3_show", 0),
STACK_USAGE("__uncore_umask_ext4_show", 0),
STACK_USAGE("__uncore_qor_show", 0),
STACK_USAGE("__uncore_edge_show", 0),
STACK_USAGE("snr_uncore_pci_init", 0),
STACK_USAGE("__uncore_tid_en_show", 0),
STACK_USAGE("__uncore_tid_en2_show", 0),
STACK_USAGE("__uncore_inv_show", 0),
STACK_USAGE("__uncore_thresh9_show", 0),
STACK_USAGE("snr_uncore_mmio_map", 64),
STACK_USAGE("__uncore_thresh8_show", 0),
STACK_USAGE("__uncore_thresh6_show", 0),
STACK_USAGE("__uncore_thresh5_show", 0),
STACK_USAGE("snr_uncore_mmio_init_box", 8),
STACK_USAGE("__uncore_occ_sel_show", 0),
STACK_USAGE("snr_uncore_mmio_disable_box", 0),
STACK_USAGE("__uncore_occ_invert_show", 0),
STACK_USAGE("snr_uncore_mmio_enable_box", 0),
STACK_USAGE("__uncore_occ_edge_show", 0),
STACK_USAGE("uncore_freerunning_hw_config", 0),
STACK_USAGE("snr_uncore_mmio_enable_event", 0),
STACK_USAGE("__uncore_occ_edge_det_show", 0),
STACK_USAGE("__uncore_ch_mask_show", 0),
STACK_USAGE("snr_uncore_mmio_disable_event", 0),
STACK_USAGE("__uncore_ch_mask2_show", 0),
STACK_USAGE("__uncore_fc_mask_show", 0),
STACK_USAGE("__uncore_fc_mask2_show", 0),
STACK_USAGE("__uncore_filter_tid_show", 0),
STACK_USAGE("__uncore_filter_tid2_show", 0),
STACK_USAGE("__uncore_filter_tid3_show", 0),
STACK_USAGE("__uncore_filter_tid4_show", 0),
STACK_USAGE("__uncore_filter_tid5_show", 0),
STACK_USAGE("__uncore_filter_cid_show", 0),
STACK_USAGE("__uncore_filter_link_show", 0),
STACK_USAGE("snr_uncore_mmio_init", 0),
STACK_USAGE("__uncore_filter_link2_show", 0),
STACK_USAGE("__uncore_filter_link3_show", 0),
STACK_USAGE("icx_cha_hw_config", 0),
STACK_USAGE("__uncore_filter_nid_show", 0),
STACK_USAGE("__uncore_filter_nid2_show", 0),
STACK_USAGE("__uncore_filter_state_show", 0),
STACK_USAGE("__uncore_filter_state2_show", 0),
STACK_USAGE("__uncore_filter_state3_show", 0),
STACK_USAGE("icx_iio_mapping_visible", 0),
STACK_USAGE("__uncore_filter_state4_show", 0),
STACK_USAGE("__uncore_filter_state5_show", 0),
STACK_USAGE("__uncore_filter_rem_show", 0),
STACK_USAGE("__uncore_filter_loc_show", 0),
STACK_USAGE("icx_iio_get_topology", 0),
STACK_USAGE("__uncore_filter_nm_show", 0),
STACK_USAGE("icx_iio_set_mapping", 0),
STACK_USAGE("icx_iio_cleanup_mapping", 16),
STACK_USAGE("__uncore_filter_not_nm_show", 0),
STACK_USAGE("__uncore_filter_local_show", 0),
STACK_USAGE("__uncore_filter_all_op_show", 0),
STACK_USAGE("__uncore_filter_nnm_show", 0),
STACK_USAGE("__uncore_filter_opc_show", 0),
STACK_USAGE("__uncore_filter_opc2_show", 0),
STACK_USAGE("__uncore_filter_opc3_show", 0),
STACK_USAGE("__uncore_filter_opc_0_show", 0),
STACK_USAGE("__uncore_filter_opc_1_show", 0),
STACK_USAGE("__uncore_filter_nc_show", 0),
STACK_USAGE("__uncore_filter_c6_show", 0),
STACK_USAGE("__uncore_filter_isoc_show", 0),
STACK_USAGE("__uncore_filter_band0_show", 0),
STACK_USAGE("__uncore_filter_band1_show", 0),
STACK_USAGE("__uncore_filter_band2_show", 0),
STACK_USAGE("__uncore_filter_band3_show", 0),
STACK_USAGE("icx_uncore_cpu_init", 24),
STACK_USAGE("__uncore_match_rds_show", 0),
STACK_USAGE("__uncore_match_rnid30_show", 0),
STACK_USAGE("__uncore_match_rnid4_show", 0),
STACK_USAGE("__uncore_match_dnid_show", 0),
STACK_USAGE("__uncore_match_mc_show", 0),
STACK_USAGE("__uncore_match_opc_show", 0),
STACK_USAGE("__uncore_match_vnw_show", 0),
STACK_USAGE("__uncore_match0_show", 0),
STACK_USAGE("__uncore_match1_show", 0),
STACK_USAGE("__uncore_mask_rds_show", 0),
STACK_USAGE("__uncore_mask_rnid30_show", 0),
STACK_USAGE("__uncore_mask_rnid4_show", 0),
STACK_USAGE("__uncore_mask_dnid_show", 0),
STACK_USAGE("__uncore_mask_mc_show", 0),
STACK_USAGE("icx_uncore_pci_init", 0),
STACK_USAGE("__uncore_mask_opc_show", 0),
STACK_USAGE("icx_uncore_imc_init_box", 8),
STACK_USAGE("__uncore_mask_vnw_show", 0),
STACK_USAGE("__uncore_mask0_show", 0),
STACK_USAGE("__uncore_mask1_show", 0),
STACK_USAGE("snbep_uncore_pci_disable_box", 32),
STACK_USAGE("icx_uncore_imc_freerunning_init_box", 0),
STACK_USAGE("icx_uncore_mmio_init", 0),
STACK_USAGE("spr_uncore_msr_enable_event", 8),
STACK_USAGE("spr_uncore_msr_disable_event", 8),
STACK_USAGE("spr_cha_hw_config", 0),
STACK_USAGE("snbep_uncore_pci_enable_box", 32),
STACK_USAGE("alias_show", 72),
STACK_USAGE("spr_uncore_mmio_enable_event", 0),
STACK_USAGE("snbep_uncore_pci_enable_event", 0),
STACK_USAGE("spr_uncore_pci_enable_event", 16),
STACK_USAGE("snbep_uncore_pci_disable_event", 0),
STACK_USAGE("snbep_uncore_pci_read_counter", 32),
STACK_USAGE("spr_uncore_imc_freerunning_init_box", 0),
STACK_USAGE("uncore_get_uncores", 16),
STACK_USAGE("snbep_uncore_pci_init_box", 0),
STACK_USAGE("spr_uncore_cpu_init", 8),
STACK_USAGE("spr_uncore_pci_init", 0),
STACK_USAGE("spr_uncore_mmio_init", 0),
STACK_USAGE("snbep_uncore_msr_disable_box", 16),
STACK_USAGE("snbep_uncore_msr_enable_box", 16),
STACK_USAGE("snbep_uncore_msr_enable_event", 16),
STACK_USAGE("snbep_uncore_msr_disable_event", 0),
STACK_USAGE("snbep_uncore_msr_init_box", 0),
STACK_USAGE("snbep_cbox_put_constraint", 0),
STACK_USAGE("__snbep_cbox_get_constraint", 72),
STACK_USAGE("snbep_cbox_filter_mask", 0),
STACK_USAGE("event_show", 0),
STACK_USAGE("msr_event_init", 0),
STACK_USAGE("test_aperfmperf", 0),
STACK_USAGE("msr_event_update", 24),
STACK_USAGE("msr_event_start", 16),
STACK_USAGE("test_ptsc", 0),
STACK_USAGE("msr_event_stop", 0),
STACK_USAGE("msr_event_del", 0),
STACK_USAGE("msr_event_add", 16),
STACK_USAGE("msr_init", 0),
STACK_USAGE("test_irperf", 0),
STACK_USAGE("test_therm_status", 0),
STACK_USAGE("test_intel", 0),
STACK_USAGE("perf_msr_probe", 64),
STACK_USAGE("not_visible", 0),
STACK_USAGE("rapl_hrtimer_handle", 72),
STACK_USAGE("rapl_pmu_event_start", 32),
STACK_USAGE("rapl_pmu_event_stop", 48),
STACK_USAGE("rapl_pmu_event_add", 40),
STACK_USAGE("rapl_pmu_event_del", 0),
STACK_USAGE("rapl_pmu_event_init", 0),
STACK_USAGE("rapl_pmu_event_read", 32),
STACK_USAGE("rapl_get_attr_cpumask", 0),
STACK_USAGE("event_show", 0),
STACK_USAGE("test_msr", 0),
STACK_USAGE("rapl_cpu_offline", 16),
STACK_USAGE("rapl_cpu_online", 24),
STACK_USAGE("rapl_advertise", 24),
STACK_USAGE("cleanup_rapl_pmus", 8),
STACK_USAGE("init_rapl_pmus", 8),
STACK_USAGE("rapl_pmu_init", 32),
STACK_USAGE("intel_rapl_exit", 0),
STACK_USAGE("zhaoxin_pmu_disable_all", 0),
STACK_USAGE("zhaoxin_pmu_enable_all", 0),
STACK_USAGE("zhaoxin_pmu_disable_fixed", 24),
STACK_USAGE("zhaoxin_pmu_disable_event", 8),
STACK_USAGE("zhaoxin_pmu_enable_fixed", 32),
STACK_USAGE("zhaoxin_pmu_enable_event", 24),
STACK_USAGE("zhaoxin_pmu_handle_irq", 376),
STACK_USAGE("zhaoxin_pmu_event_map", 0),
STACK_USAGE("zhaoxin_get_event_constraints", 0),
STACK_USAGE("event_show", 0),
STACK_USAGE("umask_show", 0),
STACK_USAGE("edge_show", 0),
STACK_USAGE("inv_show", 0),
STACK_USAGE("cmask_show", 0),
STACK_USAGE("zhaoxin_event_sysfs_show", 0),
STACK_USAGE("zhaoxin_arch_events_quirk", 40),
STACK_USAGE("zhaoxin_pmu_init", 32),
STACK_USAGE("ia32_classify_syscall", 0),
STACK_USAGE("__ia32_compat_sys_rt_sigreturn", 40),
STACK_USAGE("get_sigframe", 48),
STACK_USAGE("ia32_setup_frame", 48),
STACK_USAGE("ia32_setup_rt_frame", 72),
STACK_USAGE("ia32_restore_sigcontext", 120),
STACK_USAGE("__ia32_compat_sys_sigreturn", 48),
STACK_USAGE("early_acpi_parse_madt_lapic_addr_ovr", 8),
STACK_USAGE("acpi_parse_madt_lapic_entries", 120),
STACK_USAGE("__acpi_map_table", 0),
STACK_USAGE("mp_config_acpi_legacy_irqs", 48),
STACK_USAGE("acpi_parse_madt_ioapic_entries", 8),
STACK_USAGE("__acpi_unmap_table", 0),
STACK_USAGE("early_acpi_process_madt", 0),
STACK_USAGE("acpi_parse_madt", 0),
STACK_USAGE("acpi_process_madt", 8),
STACK_USAGE("disable_acpi_irq", 0),
STACK_USAGE("disable_acpi_pci", 0),
STACK_USAGE("disable_acpi_xsdt", 0),
STACK_USAGE("dmi_disable_acpi", 0),
STACK_USAGE("dmi_ignore_irq0_timer_override", 0),
STACK_USAGE("acpi_generic_reduced_hw_init", 0),
STACK_USAGE("acpi_boot_table_init", 0),
STACK_USAGE("early_acpi_boot_init", 8),
STACK_USAGE("acpi_register_lapic", 8),
STACK_USAGE("acpi_boot_init", 8),
STACK_USAGE("parse_acpi", 16),
STACK_USAGE("parse_acpi_bgrt", 0),
STACK_USAGE("parse_pci", 0),
STACK_USAGE("acpi_mps_check", 0),
STACK_USAGE("parse_acpi_skip_timer_override", 0),
STACK_USAGE("parse_acpi_use_timer_override", 0),
STACK_USAGE("setup_acpi_sci", 16),
STACK_USAGE("__acpi_acquire_global_lock", 0),
STACK_USAGE("__acpi_release_global_lock", 0),
STACK_USAGE("arch_reserve_mem_area", 0),
STACK_USAGE("x86_default_set_root_pointer", 0),
STACK_USAGE("x86_default_get_root_pointer", 0),
STACK_USAGE("acpi_parse_x2apic", 0),
STACK_USAGE("acpi_parse_lapic", 16),
STACK_USAGE("acpi_parse_sapic", 8),
STACK_USAGE("acpi_parse_lapic_addr_ovr", 8),
STACK_USAGE("acpi_parse_x2apic_nmi", 16),
STACK_USAGE("acpi_parse_lapic_nmi", 16),
STACK_USAGE("mp_override_legacy_irq", 16),
STACK_USAGE("mp_register_ioapic_irq", 64),
STACK_USAGE("acpi_parse_ioapic", 40),
STACK_USAGE("acpi_sci_ioapic_setup", 32),
STACK_USAGE("acpi_parse_int_src_ovr", 8),
STACK_USAGE("acpi_parse_nmi_src", 0),
STACK_USAGE("acpi_pic_sci_set_trigger", 8),
STACK_USAGE("acpi_gsi_to_irq", 32),
STACK_USAGE("acpi_isa_irq_to_gsi", 0),
STACK_USAGE("acpi_register_gsi_pic", 8),
STACK_USAGE("acpi_register_gsi_ioapic", 128),
STACK_USAGE("acpi_unregister_gsi_ioapic", 8),
STACK_USAGE("acpi_register_gsi", 0),
STACK_USAGE("acpi_unregister_gsi", 0),
STACK_USAGE("acpi_map_cpu", 40),
STACK_USAGE("acpi_unmap_cpu", 0),
STACK_USAGE("acpi_register_ioapic", 80),
STACK_USAGE("acpi_unregister_ioapic", 8),
STACK_USAGE("acpi_ioapic_registered", 8),
STACK_USAGE("acpi_parse_sbf", 0),
STACK_USAGE("acpi_parse_hpet", 16),
STACK_USAGE("hpet_insert_resource", 0),
STACK_USAGE("acpi_parse_fadt", 0),
STACK_USAGE("cpc_ffh_supported", 0),
STACK_USAGE("cpc_read_ffh", 16),
STACK_USAGE("cpc_write_ffh", 40),
STACK_USAGE("amd_set_max_freq_ratio", 56),
STACK_USAGE("init_freq_invariance_cppc", 0),
STACK_USAGE("acpi_processor_ffh_cstate_probe_cpu", 16),
STACK_USAGE("acpi_processor_ffh_cstate_probe", 40),
STACK_USAGE("acpi_processor_ffh_cstate_enter", 8),
STACK_USAGE("ffh_cstate_init", 0),
STACK_USAGE("ffh_cstate_exit", 0),
STACK_USAGE("acpi_processor_power_init_bm_check", 0),
STACK_USAGE("acpi_sleep_setup", 16),
STACK_USAGE("init_s4_sigcheck", 0),
STACK_USAGE("acpi_get_wakeup_address", 0),
STACK_USAGE("x86_acpi_enter_sleep_state", 0),
STACK_USAGE("x86_acpi_suspend_lowlevel", 32),
STACK_USAGE("text_poke", 24),
STACK_USAGE("text_poke_kgdb", 0),
STACK_USAGE("text_poke_copy", 40),
STACK_USAGE("do_sync_core", 0),
STACK_USAGE("text_poke_sync", 0),
STACK_USAGE("poke_int3_handler", 0),
STACK_USAGE("text_poke_bp_batch", 120),
STACK_USAGE("text_poke_loc_init", 160),
STACK_USAGE("text_poke_finish", 0),
STACK_USAGE("text_poke_queue", 32),
STACK_USAGE("text_poke_bp", 32),
STACK_USAGE("optimize_nops", 216),
STACK_USAGE("apply_alternatives", 344),
STACK_USAGE("debug_alt", 0),
STACK_USAGE("apply_retpolines", 216),
STACK_USAGE("setup_noreplace_smp", 0),
STACK_USAGE("apply_ibt_endbr", 72),
STACK_USAGE("alternatives_smp_module_add", 72),
STACK_USAGE("alternatives_smp_module_del", 8),
STACK_USAGE("alternatives_enable_smp", 64),
STACK_USAGE("alternatives_text_reserved", 16),
STACK_USAGE("apply_paravirt", 328),
STACK_USAGE("int3_exception_notify", 0),
STACK_USAGE("int3_selftest", 16),
STACK_USAGE("alternative_instructions", 0),
STACK_USAGE("text_poke_early", 40),
STACK_USAGE("__text_poke", 120),
STACK_USAGE("flush_gart", 8),
STACK_USAGE("dma_map_area", 56),
STACK_USAGE("gart_map_page", 16),
STACK_USAGE("gart_unmap_page", 24),
STACK_USAGE("gart_unmap_sg", 16),
STACK_USAGE("dma_map_cont", 72),
STACK_USAGE("gart_map_sg", 96),
STACK_USAGE("gart_alloc_coherent", 56),
STACK_USAGE("gart_free_coherent", 40),
STACK_USAGE("check_iommu_size", 0),
STACK_USAGE("read_aperture", 48),
STACK_USAGE("enable_gart_translations", 48),
STACK_USAGE("set_up_gart_resume", 0),
STACK_USAGE("gart_resume", 16),
STACK_USAGE("init_amd_gatt", 80),
STACK_USAGE("gart_iommu_shutdown", 40),
STACK_USAGE("gart_iommu_init", 120),
STACK_USAGE("gart_parse_options", 32),
STACK_USAGE("alloc_iommu", 48),
STACK_USAGE("amd_nb_num", 0),
STACK_USAGE("amd_nb_has_feature", 0),
STACK_USAGE("node_to_amd_nb", 0),
STACK_USAGE("__amd_smn_rw", 40),
STACK_USAGE("amd_smn_read", 0),
STACK_USAGE("amd_smn_write", 16),
STACK_USAGE("amd_cache_northbridges", 80),
STACK_USAGE("early_is_amd_nb", 0),
STACK_USAGE("amd_get_mmconfig_range", 24),
STACK_USAGE("amd_get_subcaches", 24),
STACK_USAGE("amd_set_subcaches", 48),
STACK_USAGE("amd_flush_garts", 64),
STACK_USAGE("__fix_erratum_688", 0),
STACK_USAGE("fix_erratum_688", 16),
STACK_USAGE("init_amd_nbs", 16),
STACK_USAGE("allocate_aperture", 24),
STACK_USAGE("find_cap", 48),
STACK_USAGE("read_agp", 96),
STACK_USAGE("search_agp_bridge", 56),
STACK_USAGE("parse_gart_mem", 0),
STACK_USAGE("early_gart_iommu_check", 112),
STACK_USAGE("gart_iommu_hole_init", 128),
STACK_USAGE("gart_mem_pfn_is_ram", 0),
STACK_USAGE("gart_oldmem_pfn_is_ram", 0),
STACK_USAGE("exclude_from_core", 0),
STACK_USAGE("setup_boot_APIC_clock", 0),
STACK_USAGE("setup_secondary_APIC_clock", 0),
STACK_USAGE("__sysvec_apic_timer_interrupt", 16),
STACK_USAGE("sysvec_apic_timer_interrupt", 16),
STACK_USAGE("setup_profiling_timer", 0),
STACK_USAGE("clear_local_APIC", 8),
STACK_USAGE("apic_soft_disable", 0),
STACK_USAGE("disable_local_APIC", 0),
STACK_USAGE("lapic_shutdown", 24),
STACK_USAGE("sync_Arb_IDs", 0),
STACK_USAGE("__apic_intr_mode_select", 8),
STACK_USAGE("apic_intr_mode_select", 0),
STACK_USAGE("init_bsp_APIC", 0),
STACK_USAGE("apic_intr_mode_init", 8),
STACK_USAGE("setup_local_APIC", 112),
STACK_USAGE("parse_lapic", 0),
STACK_USAGE("setup_apicpmtimer", 0),
STACK_USAGE("end_local_APIC_setup", 16),
STACK_USAGE("apic_ap_setup", 0),
STACK_USAGE("validate_x2apic", 16),
STACK_USAGE("enable_IR_x2apic", 0),
STACK_USAGE("init_apic_mappings", 0),
STACK_USAGE("register_lapic_address", 8),
STACK_USAGE("handle_spurious_interrupt", 16),
STACK_USAGE("__spurious_interrupt", 0),
STACK_USAGE("spurious_interrupt", 24),
STACK_USAGE("__sysvec_spurious_apic_interrupt", 0),
STACK_USAGE("sysvec_spurious_apic_interrupt", 16),
STACK_USAGE("__sysvec_error_interrupt", 16),
STACK_USAGE("sysvec_error_interrupt", 16),
STACK_USAGE("disconnect_bsp_APIC", 8),
STACK_USAGE("arch_match_cpu_phys_id", 0),
STACK_USAGE("apic_id_is_primary_thread", 4),
STACK_USAGE("generic_processor_info", 40),
STACK_USAGE("hard_smp_processor_id", 0),
STACK_USAGE("native_apic_wait_icr_idle", 0),
STACK_USAGE("__irq_msi_compose_msg", 0),
STACK_USAGE("x86_msi_msg_get_destid", 0),
STACK_USAGE("apic_set_eoi_write", 0),
STACK_USAGE("native_safe_apic_wait_icr_idle", 16),
STACK_USAGE("apic_bsp_up_setup", 8),
STACK_USAGE("apic_bsp_setup", 0),
STACK_USAGE("lapic_suspend", 24),
STACK_USAGE("lapic_resume", 40),
STACK_USAGE("native_apic_icr_write", 32),
STACK_USAGE("init_lapic_sysfs", 0),
STACK_USAGE("set_multi", 0),
STACK_USAGE("native_apic_icr_read", 8),
STACK_USAGE("apic_is_clustered_box", 0),
STACK_USAGE("setup_disableapic", 0),
STACK_USAGE("setup_nolapic", 0),
STACK_USAGE("parse_lapic_timer_c2_ok", 0),
STACK_USAGE("parse_disable_apic_timer", 0),
STACK_USAGE("parse_nolapic_timer", 0),
STACK_USAGE("apic_set_verbosity", 8),
STACK_USAGE("lapic_insert_resource", 0),
STACK_USAGE("apic_set_disabled_cpu_apicid", 16),
STACK_USAGE("apic_set_extnmi", 16),
STACK_USAGE("lapic_get_maxlvt", 0),
STACK_USAGE("__setup_APIC_LVTT", 24),
STACK_USAGE("setup_APIC_eilvt", 48),
STACK_USAGE("lapic_next_event", 0),
STACK_USAGE("lapic_next_deadline", 0),
STACK_USAGE("read_apic_id", 0),
STACK_USAGE("lapic_timer_shutdown", 0),
STACK_USAGE("lapic_timer_set_periodic", 8),
STACK_USAGE("lapic_timer_set_oneshot", 8),
STACK_USAGE("lapic_timer_broadcast", 0),
STACK_USAGE("apic_validate_deadline_timer", 16),
STACK_USAGE("setup_APIC_timer", 8),
STACK_USAGE("__lapic_update_tsc_freq", 0),
STACK_USAGE("lapic_update_tsc_freq", 0),
STACK_USAGE("kvm_set_cpu_l1tf_flush_l1d", 0),
STACK_USAGE("lapic_cal_handler", 8),
STACK_USAGE("calibrate_by_pmtimer", 40),
STACK_USAGE("lapic_init_clockevent", 0),
STACK_USAGE("apic_needs_pit", 0),
STACK_USAGE("calibrate_APIC_clock", 64),
STACK_USAGE("apic_flat_calc_apicid", 0),
STACK_USAGE("default_check_apicid_used", 0),
STACK_USAGE("default_ioapic_phys_id_map", 0),
STACK_USAGE("default_cpu_present_to_apicid", 0),
STACK_USAGE("default_check_phys_apicid_present", 0),
STACK_USAGE("default_apic_id_valid", 0),
STACK_USAGE("apic_default_calc_apicid", 0),
STACK_USAGE("native_apic_mem_write", 0),
STACK_USAGE("flat_probe", 0),
STACK_USAGE("native_apic_mem_read", 0),
STACK_USAGE("physflat_acpi_madt_oem_check", 16),
STACK_USAGE("physflat_init_apic_ldr", 0),
STACK_USAGE("physflat_probe", 0),
STACK_USAGE("flat_acpi_madt_oem_check", 0),
STACK_USAGE("flat_init_apic_ldr", 8),
STACK_USAGE("flat_send_IPI_mask", 32),
STACK_USAGE("flat_send_IPI_mask_allbutself", 40),
STACK_USAGE("default_inquire_remote_apic", 0),
STACK_USAGE("flat_get_apic_id", 0),
STACK_USAGE("set_apic_id", 0),
STACK_USAGE("flat_apic_id_registered", 0),
STACK_USAGE("flat_phys_pkg_id", 0),
STACK_USAGE("physid_set_mask_of_physid", 16),
STACK_USAGE("noop_init_apic_ldr", 0),
STACK_USAGE("noop_send_IPI", 0),
STACK_USAGE("noop_send_IPI_mask", 0),
STACK_USAGE("noop_send_IPI_mask_allbutself", 0),
STACK_USAGE("noop_send_IPI_allbutself", 0),
STACK_USAGE("noop_send_IPI_all", 0),
STACK_USAGE("noop_send_IPI_self", 0),
STACK_USAGE("noop_apic_wait_icr_idle", 0),
STACK_USAGE("noop_apic_icr_write", 0),
STACK_USAGE("noop_wakeup_secondary_cpu", 0),
STACK_USAGE("noop_safe_apic_wait_icr_idle", 0),
STACK_USAGE("noop_apic_icr_read", 0),
STACK_USAGE("noop_phys_pkg_id", 0),
STACK_USAGE("noop_get_apic_id", 0),
STACK_USAGE("noop_probe", 0),
STACK_USAGE("noop_apic_id_registered", 0),
STACK_USAGE("noop_apic_read", 0),
STACK_USAGE("noop_apic_write", 0),
STACK_USAGE("hw_nmi_get_sample_period", 0),
STACK_USAGE("nmi_raise_cpu_backtrace", 0),
STACK_USAGE("arch_trigger_cpumask_backtrace", 0),
STACK_USAGE("nmi_cpu_backtrace_handler", 0),
STACK_USAGE("register_nmi_cpu_backtrace_handler", 0),
STACK_USAGE("mp_map_pin_to_irq", 152),
STACK_USAGE("mp_map_gsi_to_irq", 8),
STACK_USAGE("mp_unmap_irq", 16),
STACK_USAGE("IO_APIC_get_PCI_irq_vector", 56),
STACK_USAGE("setup_IO_APIC_irqs", 56),
STACK_USAGE("ioapic_zap_locks", 0),
STACK_USAGE("apic_is_x2apic_enabled", 16),
STACK_USAGE("print_IO_APIC", 328),
STACK_USAGE("mpc_ioapic_id", 0),
STACK_USAGE("mpc_ioapic_addr", 0),
STACK_USAGE("print_IO_APICs", 40),
STACK_USAGE("enable_IO_APIC", 24),
STACK_USAGE("native_restore_boot_irq_mode", 24),
STACK_USAGE("restore_boot_irq_mode", 0),
STACK_USAGE("notimercheck", 0),
STACK_USAGE("delay_with_tsc", 0),
STACK_USAGE("delay_without_tsc", 16),
STACK_USAGE("timer_irq_works", 24),
STACK_USAGE("startup_ioapic_irq", 32),
STACK_USAGE("ioapic_ack_level", 48),
STACK_USAGE("ioapic_ir_ack_level", 32),
STACK_USAGE("disable_ioapic_support", 0),
STACK_USAGE("ioapic_configure_entry", 40),
STACK_USAGE("ioapic_set_affinity", 24),
STACK_USAGE("parse_noapic", 0),
STACK_USAGE("ioapic_irq_get_chip_state", 48),
STACK_USAGE("mp_save_irq", 8),
STACK_USAGE("mask_lapic_irq", 0),
STACK_USAGE("unmask_lapic_irq", 0),
STACK_USAGE("ack_lapic_irq", 0),
STACK_USAGE("unlock_ExtINT_logic", 56),
STACK_USAGE("disable_timer_pin_setup", 0),
STACK_USAGE("mp_alloc_timer_irq", 120),
STACK_USAGE("check_timer", 80),
STACK_USAGE("alloc_ioapic_saved_registers", 16),
STACK_USAGE("mp_irqdomain_create", 144),
STACK_USAGE("setup_IO_APIC", 8),
STACK_USAGE("arch_early_ioapic_init", 8),
STACK_USAGE("ioapic_resume", 40),
STACK_USAGE("ioapic_init_ops", 0),
STACK_USAGE("arch_dynirq_lower_bound", 0),
STACK_USAGE("ioapic_setup_resources", 48),
STACK_USAGE("io_apic_init_mappings", 48),
STACK_USAGE("ioapic_insert_resources", 16),
STACK_USAGE("native_io_apic_read", 0),
STACK_USAGE("mp_find_ioapic", 8),
STACK_USAGE("mp_find_ioapic_pin", 0),
STACK_USAGE("mp_register_ioapic", 136),
STACK_USAGE("mp_unregister_ioapic", 24),
STACK_USAGE("mp_ioapic_registered", 0),
STACK_USAGE("mp_irqdomain_alloc", 80),
STACK_USAGE("ioapic_read_entry", 32),
STACK_USAGE("mp_irqdomain_free", 32),
STACK_USAGE("mp_irqdomain_activate", 16),
STACK_USAGE("mp_irqdomain_deactivate", 16),
STACK_USAGE("mp_irqdomain_ioapic_idx", 0),
STACK_USAGE("ioapic_write_entry", 24),
STACK_USAGE("add_pin_to_irq_node", 32),
STACK_USAGE("replace_pin_at_irq_node", 0),
STACK_USAGE("mask_ioapic_irq", 16),
STACK_USAGE("unmask_ioapic_irq", 16),
STACK_USAGE("__eoi_ioapic_pin", 40),
STACK_USAGE("clear_IO_APIC_pin", 64),
STACK_USAGE("clear_IO_APIC", 24),
STACK_USAGE("save_ioapic_entries", 80),
STACK_USAGE("mask_ioapic_entries", 64),
STACK_USAGE("restore_ioapic_entries", 64),
STACK_USAGE("find_irq_entry", 0),
STACK_USAGE("find_isa_irq_pin", 0),
STACK_USAGE("find_isa_irq_apic", 0),
STACK_USAGE("irq_is_level", 0),
STACK_USAGE("__acpi_get_override_irq", 32),
STACK_USAGE("acpi_get_override_irq", 0),
STACK_USAGE("ioapic_set_alloc_attr", 32),
STACK_USAGE("mp_check_pin_attr", 24),
STACK_USAGE("alloc_isa_irq_from_domain", 48),
STACK_USAGE("__default_send_IPI_shortcut", 8),
STACK_USAGE("__default_send_IPI_dest_field", 16),
STACK_USAGE("apic_ipi_shorthand", 16),
STACK_USAGE("default_send_IPI_single_phys", 40),
STACK_USAGE("default_send_IPI_mask_sequence_phys", 56),
STACK_USAGE("default_send_IPI_mask_allbutself_phys", 64),
STACK_USAGE("print_ipi_mode", 0),
STACK_USAGE("default_send_IPI_single", 0),
STACK_USAGE("default_send_IPI_allbutself", 0),
STACK_USAGE("default_send_IPI_all", 0),
STACK_USAGE("default_send_IPI_self", 0),
STACK_USAGE("apic_smt_update", 0),
STACK_USAGE("apic_send_IPI_allbutself", 0),
STACK_USAGE("native_smp_send_reschedule", 0),
STACK_USAGE("native_send_call_func_single_ipi", 0),
STACK_USAGE("native_send_call_func_ipi", 16),
STACK_USAGE("pci_msi_prepare", 16),
STACK_USAGE("native_create_pci_msi_domain", 16),
STACK_USAGE("x86_create_pci_msi_domain", 0),
STACK_USAGE("dmar_msi_compose_msg", 8),
STACK_USAGE("dmar_msi_write_msg", 0),
STACK_USAGE("dmar_msi_init", 0),
STACK_USAGE("dmar_alloc_hwirq", 120),
STACK_USAGE("dmar_free_hwirq", 0),
STACK_USAGE("arch_restore_msi_irqs", 0),
STACK_USAGE("msi_set_affinity", 120),
STACK_USAGE("default_setup_apic_routing", 16),
STACK_USAGE("default_acpi_madt_oem_check", 40),
STACK_USAGE("irq_force_complete_move", 16),
STACK_USAGE("lapic_can_unplug_cpu", 24),
STACK_USAGE("print_APIC_field", 16),
STACK_USAGE("print_local_APIC", 16),
STACK_USAGE("apic_update_irq_cfg", 32),
STACK_USAGE("print_local_APICs", 16),
STACK_USAGE("print_PIC", 0),
STACK_USAGE("setup_show_lapic", 32),
STACK_USAGE("apic_update_vector", 48),
STACK_USAGE("print_ICs", 0),
STACK_USAGE("reserve_irq_vector_locked", 16),
STACK_USAGE("assign_vector_locked", 64),
STACK_USAGE("assign_irq_vector_any_locked", 24),
STACK_USAGE("assign_managed_vector", 32),
STACK_USAGE("trace_vector_setup", 0),
STACK_USAGE("clear_irq_vector", 32),
STACK_USAGE("x86_vector_deactivate", 24),
STACK_USAGE("x86_vector_activate", 32),
STACK_USAGE("x86_vector_free_irqs", 56),
STACK_USAGE("lock_vector_lock", 0),
STACK_USAGE("x86_vector_alloc_irqs", 88),
STACK_USAGE("unlock_vector_lock", 0),
STACK_USAGE("init_irq_alloc_info", 0),
STACK_USAGE("x86_fwspec_is_ioapic", 24),
STACK_USAGE("kvm_set_cpu_l1tf_flush_l1d", 0),
STACK_USAGE("x86_fwspec_is_hpet", 24),
STACK_USAGE("x86_vector_select", 16),
STACK_USAGE("arch_probe_nr_irqs", 0),
STACK_USAGE("copy_irq_alloc_info", 0),
STACK_USAGE("lapic_assign_legacy_vector", 0),
STACK_USAGE("lapic_update_legacy_vectors", 8),
STACK_USAGE("lapic_assign_system_vectors", 8),
STACK_USAGE("arch_early_irq_init", 0),
STACK_USAGE("lapic_online", 16),
STACK_USAGE("lapic_offline", 0),
STACK_USAGE("apic_set_affinity", 16),
STACK_USAGE("apic_retrigger_irq", 16),
STACK_USAGE("apic_ack_irq", 0),
STACK_USAGE("apic_ack_edge", 24),
STACK_USAGE("irqd_cfg", 0),
STACK_USAGE("x86_vector_msi_compose_msg", 0),
STACK_USAGE("free_moved_vector", 32),
STACK_USAGE("__sysvec_irq_move_cleanup", 24),
STACK_USAGE("sysvec_irq_move_cleanup", 16),
STACK_USAGE("__send_cleanup_vector", 8),
STACK_USAGE("irq_cfg", 0),
STACK_USAGE("send_cleanup_vector", 8),
STACK_USAGE("irq_complete_move", 16),
STACK_USAGE("main", 8),
STACK_USAGE("common", 0),
STACK_USAGE("audit_classify_arch", 0),
STACK_USAGE("audit_classify_syscall", 0),
STACK_USAGE("audit_classes_init", 0),
STACK_USAGE("sbf_write", 16),
STACK_USAGE("sbf_read", 16),
STACK_USAGE("sbf_init", 16),
STACK_USAGE("check_corruption", 32),
STACK_USAGE("start_periodic_check_for_corruption", 0),
STACK_USAGE("set_corruption_check", 16),
STACK_USAGE("set_corruption_check_period", 16),
STACK_USAGE("set_corruption_check_size", 24),
STACK_USAGE("setup_bios_corruption_check", 80),
STACK_USAGE("cpu_has_amd_erratum", 32),
STACK_USAGE("set_dr_addr_mask", 0),
STACK_USAGE("amd_get_highest_perf", 0),
STACK_USAGE("amd_get_nodes_per_socket", 0),
STACK_USAGE("bsp_init_amd", 24),
STACK_USAGE("early_init_amd", 16),
STACK_USAGE("rdrand_cmdline", 8),
STACK_USAGE("init_amd", 104),
STACK_USAGE("cpu_detect_tlb_amd", 8),
STACK_USAGE("arch_freq_prepare_all", 48),
STACK_USAGE("arch_freq_get_on_cpu", 32),
STACK_USAGE("aperfmperf_snapshot_khz", 56),
STACK_USAGE("aperfmperf_get_khz", 16),
STACK_USAGE("update_stibp_msr", 0),
STACK_USAGE("cpu_bugs_smt_update", 8),
STACK_USAGE("ssb_parse_cmdline", 88),
STACK_USAGE("__ssb_select_mitigation", 8),
STACK_USAGE("ssb_select_mitigation", 0),
STACK_USAGE("arch_prctl_spec_ctrl_set", 0),
STACK_USAGE("arch_prctl_spec_ctrl_get", 0),
STACK_USAGE("x86_spec_ctrl_setup_ap", 0),
STACK_USAGE("l1tf_select_mitigation", 8),
STACK_USAGE("l1tf_cmdline", 8),
STACK_USAGE("x86_virt_spec_ctrl", 24),
STACK_USAGE("cpu_show_common", 40),
STACK_USAGE("cpu_show_meltdown", 0),
STACK_USAGE("cpu_show_spectre_v1", 0),
STACK_USAGE("cpu_show_spectre_v2", 0),
STACK_USAGE("cpu_show_spec_store_bypass", 0),
STACK_USAGE("cpu_show_l1tf", 0),
STACK_USAGE("cpu_show_mds", 0),
STACK_USAGE("cpu_show_tsx_async_abort", 0),
STACK_USAGE("cpu_show_itlb_multihit", 8),
STACK_USAGE("cpu_show_srbds", 0),
STACK_USAGE("x86_amd_ssb_disable", 0),
STACK_USAGE("mds_select_mitigation", 0),
STACK_USAGE("wrmsrl", 0),
STACK_USAGE("mds_print_mitigation", 0),
STACK_USAGE("mds_cmdline", 16),
STACK_USAGE("taa_select_mitigation", 0),
STACK_USAGE("tsx_async_abort_parse_cmdline", 16),
STACK_USAGE("update_srbds_msr", 8),
STACK_USAGE("srbds_select_mitigation", 0),
STACK_USAGE("srbds_parse_cmdline", 8),
STACK_USAGE("l1d_flush_select_mitigation", 0),
STACK_USAGE("l1d_flush_parse_cmdline", 0),
STACK_USAGE("spectre_v1_select_mitigation", 0),
STACK_USAGE("nospectre_v1_cmdline", 0),
STACK_USAGE("retpoline_module_ok", 8),
STACK_USAGE("unpriv_ebpf_notify", 0),
STACK_USAGE("spectre_v2_parse_user_cmdline", 88),
STACK_USAGE("spectre_v2_user_select_mitigation", 32),
STACK_USAGE("check_bugs", 8),
STACK_USAGE("spectre_v2_parse_cmdline", 88),
STACK_USAGE("spectre_v2_select_mitigation", 24),
STACK_USAGE("populate_cache_leaves", 136),
STACK_USAGE("cache_disable_0_show", 24),
STACK_USAGE("cache_disable_1_show", 24),
STACK_USAGE("store_cache_disable", 80),
STACK_USAGE("cache_disable_0_store", 0),
STACK_USAGE("cache_disable_1_store", 0),
STACK_USAGE("subcaches_show", 8),
STACK_USAGE("subcaches_store", 40),
STACK_USAGE("cache_private_attrs_is_visible", 16),
STACK_USAGE("cache_get_priv_group", 16),
STACK_USAGE("amd_init_l3_cache", 32),
STACK_USAGE("cpuid4_cache_lookup_regs", 56),
STACK_USAGE("cacheinfo_amd_init_llc_id", 12),
STACK_USAGE("cacheinfo_hygon_init_llc_id", 8),
STACK_USAGE("init_amd_cacheinfo", 8),
STACK_USAGE("init_hygon_cacheinfo", 8),
STACK_USAGE("init_intel_cacheinfo", 152),
STACK_USAGE("init_cache_level", 0),
STACK_USAGE("init_centaur", 32),
STACK_USAGE("early_init_centaur", 0),
STACK_USAGE("get_cpu_cap", 16),
STACK_USAGE("get_cpu_address_sizes", 8),
STACK_USAGE("x86_read_arch_cap_msr", 8),
STACK_USAGE("cpu_set_bug_bits", 8),
STACK_USAGE("cpu_parse_early_param", 184),
STACK_USAGE("early_identify_cpu", 8),
STACK_USAGE("early_cpu_init", 0),
STACK_USAGE("check_null_seg_clears_base", 32),
STACK_USAGE("identify_cpu", 56),
STACK_USAGE("setup_cpu_local_masks", 0),
STACK_USAGE("default_init", 8),
STACK_USAGE("identify_boot_cpu", 0),
STACK_USAGE("identify_secondary_cpu", 16),
STACK_USAGE("setup_noclflush", 0),
STACK_USAGE("print_cpu_info", 16),
STACK_USAGE("setup_clearcpuid", 0),
STACK_USAGE("syscall_init", 0),
STACK_USAGE("cpu_init_exception_handling", 64),
STACK_USAGE("cpu_init", 40),
STACK_USAGE("cpu_init_secondary", 0),
STACK_USAGE("microcode_check", 280),
STACK_USAGE("arch_smt_update", 0),
STACK_USAGE("x86_nopcid_setup", 8),
STACK_USAGE("x86_noinvpcid_setup", 8),
STACK_USAGE("setup_disable_smep", 0),
STACK_USAGE("setup_disable_smap", 0),
STACK_USAGE("native_write_cr0", 0),
STACK_USAGE("native_write_cr4", 0),
STACK_USAGE("cr4_update_irqsoff", 0),
STACK_USAGE("cr4_read_shadow", 0),
STACK_USAGE("cr4_init", 8),
STACK_USAGE("x86_nofsgsbase_setup", 8),
STACK_USAGE("setup_disable_pku", 0),
STACK_USAGE("ibt_save", 8),
STACK_USAGE("ibt_restore", 16),
STACK_USAGE("cet_disable", 0),
STACK_USAGE("filter_cpuid_features", 16),
STACK_USAGE("load_percpu_segment", 0),
STACK_USAGE("load_direct_gdt", 16),
STACK_USAGE("load_fixmap_gdt", 16),
STACK_USAGE("switch_to_new_gdt", 16),
STACK_USAGE("detect_num_cpu_cores", 8),
STACK_USAGE("cpu_detect_cache_sizes", 8),
STACK_USAGE("get_llc_id", 0),
STACK_USAGE("detect_ht_early", 16),
STACK_USAGE("detect_ht", 32),
STACK_USAGE("get_cpu_vendor", 32),
STACK_USAGE("cpu_detect", 32),
STACK_USAGE("clear_cpu_cap", 200),
STACK_USAGE("setup_clear_cpu_cap", 200),
STACK_USAGE("init_ia32_feat_ctl", 48),
STACK_USAGE("nosgx", 0),
STACK_USAGE("bsp_init_hygon", 16),
STACK_USAGE("early_init_hygon", 16),
STACK_USAGE("init_hygon", 48),
STACK_USAGE("cpu_detect_tlb_hygon", 8),
STACK_USAGE("parse_nopv", 0),
STACK_USAGE("detect_hypervisor_vendor", 32),
STACK_USAGE("init_hypervisor_platform", 0),
STACK_USAGE("split_lock_verify_msr", 24),
STACK_USAGE("sld_state_setup", 104),
STACK_USAGE("__split_lock_setup", 8),
STACK_USAGE("handle_guest_split_lock", 16),
STACK_USAGE("handle_user_split_lock", 16),
STACK_USAGE("handle_bus_lock", 8),
STACK_USAGE("switch_to_sld", 0),
STACK_USAGE("split_lock_setup", 8),
STACK_USAGE("sld_setup", 0),
STACK_USAGE("get_this_hybrid_cpu_type", 8),
STACK_USAGE("early_init_intel", 24),
STACK_USAGE("bsp_init_intel", 0),
STACK_USAGE("init_intel", 32),
STACK_USAGE("intel_detect_tlb", 40),
STACK_USAGE("ring3mwait_disable", 0),
STACK_USAGE("energy_perf_bias_show", 24),
STACK_USAGE("energy_perf_bias_store", 48),
STACK_USAGE("intel_epb_online", 8),
STACK_USAGE("intel_epb_offline", 8),
STACK_USAGE("intel_epb_init", 16),
STACK_USAGE("intel_epb_save", 8),
STACK_USAGE("intel_epb_restore", 24),
STACK_USAGE("pconfig_target_supported", 0),
STACK_USAGE("intel_pconfig_init", 8),
STACK_USAGE("x86_match_cpu", 0),
STACK_USAGE("x86_cpu_has_min_microcode_rev", 0),
STACK_USAGE("show", 0),
STACK_USAGE("store", 0),
STACK_USAGE("get_name", 0),
STACK_USAGE("allocate_threshold_blocks", 72),
STACK_USAGE("threshold_block_release", 0),
STACK_USAGE("mce_threshold_remove_device", 56),
STACK_USAGE("mce_threshold_create_device", 80),
STACK_USAGE("smca_get_long_name", 0),
STACK_USAGE("smca_get_bank_type", 0),
STACK_USAGE("default_deferred_error_interrupt", 0),
STACK_USAGE("threshold_restart_bank", 32),
STACK_USAGE("amd_filter_mce", 0),
STACK_USAGE("kvm_set_cpu_l1tf_flush_l1d", 0),
STACK_USAGE("mce_amd_feature_init", 264),
STACK_USAGE("amd_mce_is_memory_error", 0),
STACK_USAGE("__sysvec_deferred_error", 0),
STACK_USAGE("sysvec_deferred_error", 16),
STACK_USAGE("_log_error_bank", 184),
STACK_USAGE("amd_deferred_error_interrupt", 16),
STACK_USAGE("log_and_reset_block", 56),
STACK_USAGE("amd_threshold_interrupt", 40),
STACK_USAGE("show_interrupt_enable", 0),
STACK_USAGE("show_threshold_limit", 0),
STACK_USAGE("store_interrupt_enable", 64),
STACK_USAGE("store_threshold_limit", 56),
STACK_USAGE("show_error_count", 32),
STACK_USAGE("mce_start", 48),
STACK_USAGE("mce_end", 48),
STACK_USAGE("mce_check_crashing_cpu", 0),
STACK_USAGE("mce_setup", 16),
STACK_USAGE("kill_me_now", 0),
STACK_USAGE("__bpf_trace_mce_record", 0),
STACK_USAGE("__traceiter_mce_record", 16),
STACK_USAGE("perf_trace_mce_record", 56),
STACK_USAGE("trace_event_raw_event_mce_record", 72),
STACK_USAGE("trace_raw_output_mce_record", 40),
STACK_USAGE("kill_me_maybe", 16),
STACK_USAGE("touch_nmi_watchdog", 0),
STACK_USAGE("kill_me_never", 16),
STACK_USAGE("queue_task_work", 24),
STACK_USAGE("unexpected_machine_check", 0),
STACK_USAGE("mce_log", 0),
STACK_USAGE("do_machine_check", 264),
STACK_USAGE("mce_register_decode_chain", 0),
STACK_USAGE("mce_unregister_decode_chain", 0),
STACK_USAGE("mce_adjust_timer_default", 0),
STACK_USAGE("mce_timer_fn", 40),
STACK_USAGE("__print_mce", 16),
STACK_USAGE("mce_timer_kick", 56),
STACK_USAGE("mce_notify_irq", 8),
STACK_USAGE("__mcheck_cpu_init_generic", 32),
STACK_USAGE("__mcheck_cpu_init_clear_banks", 32),
STACK_USAGE("__mcheck_cpu_init_vendor", 8),
STACK_USAGE("mce_start_timer", 40),
STACK_USAGE("filter_mce", 0),
STACK_USAGE("print_mce", 8),
STACK_USAGE("exc_machine_check", 24),
STACK_USAGE("noist_exc_machine_check", 16),
STACK_USAGE("mcheck_cpu_init", 48),
STACK_USAGE("mcheck_cpu_clear", 0),
STACK_USAGE("__mce_disable_bank", 8),
STACK_USAGE("mce_disable_bank", 16),
STACK_USAGE("mcheck_enable", 32),
STACK_USAGE("wait_for_panic", 8),
STACK_USAGE("mcheck_init", 8),
STACK_USAGE("vendor_disable_error_reporting", 32),
STACK_USAGE("mce_syscore_suspend", 0),
STACK_USAGE("mce_syscore_shutdown", 0),
STACK_USAGE("mce_syscore_resume", 0),
STACK_USAGE("mce_cpu_restart", 8),
STACK_USAGE("mce_panic", 48),
STACK_USAGE("mce_disable_cmci", 0),
STACK_USAGE("mce_enable_ce", 8),
STACK_USAGE("show_bank", 0),
STACK_USAGE("set_bank", 48),
STACK_USAGE("set_ignore_ce", 40),
STACK_USAGE("set_cmci_disabled", 24),
STACK_USAGE("store_int_with_restart", 24),
STACK_USAGE("mce_device_release", 0),
STACK_USAGE("mce_device_remove", 24),
STACK_USAGE("mce_cpu_dead", 0),
STACK_USAGE("mce_cpu_online", 48),
STACK_USAGE("mce_cpu_pre_down", 16),
STACK_USAGE("mce_init_banks", 16),
STACK_USAGE("mcheck_init_device", 16),
STACK_USAGE("mcheck_disable", 0),
STACK_USAGE("mce_get_debugfs_dir", 0),
STACK_USAGE("fake_panic_get", 0),
STACK_USAGE("fake_panic_set", 0),
STACK_USAGE("fake_panic_fops_open", 0),
STACK_USAGE("mcheck_debugfs_init", 0),
STACK_USAGE("mcheck_late_init", 0),
STACK_USAGE("msr_to_offset", 8),
STACK_USAGE("ex_handler_msr_mce", 8),
STACK_USAGE("mce_rdmsrl", 8),
STACK_USAGE("mce_wrmsrl", 16),
STACK_USAGE("mce_gather_info", 16),
STACK_USAGE("cpumask_setall", 0),
STACK_USAGE("cpumask_and", 0),
STACK_USAGE("mce_available", 0),
STACK_USAGE("mce_irq_work_cb", 0),
STACK_USAGE("mce_usable_address", 0),
STACK_USAGE("mce_is_memory_error", 0),
STACK_USAGE("mce_is_correctable", 0),
STACK_USAGE("mce_early_notifier", 0),
STACK_USAGE("uc_decode_notifier", 32),
STACK_USAGE("on_thread_stack", 0),
STACK_USAGE("mce_default_notifier", 0),
STACK_USAGE("mce_read_aux", 16),
STACK_USAGE("machine_check_poll", 192),
STACK_USAGE("quirk_skylake_repmov", 24),
STACK_USAGE("mce_timed_out", 16),
STACK_USAGE("num_online_cpus", 0),
STACK_USAGE("mce_cmp", 0),
STACK_USAGE("mce_reign", 40),
STACK_USAGE("mce_gen_pool_init", 24),
STACK_USAGE("mce_gen_pool_prepare_records", 32),
STACK_USAGE("mce_gen_pool_process", 16),
STACK_USAGE("mce_gen_pool_empty", 0),
STACK_USAGE("mce_gen_pool_add", 16),
STACK_USAGE("mce_intel_cmci_poll", 8),
STACK_USAGE("mce_intel_hcpu_update", 0),
STACK_USAGE("cmci_toggle_interrupt_mode", 72),
STACK_USAGE("cmci_intel_adjust_timer", 8),
STACK_USAGE("intel_threshold_interrupt", 24),
STACK_USAGE("cmci_discover", 64),
STACK_USAGE("cmci_recheck", 24),
STACK_USAGE("__cmci_disable_bank", 24),
STACK_USAGE("cmci_clear", 24),
STACK_USAGE("cmci_rediscover_work_func", 8),
STACK_USAGE("cmci_rediscover", 8),
STACK_USAGE("cmci_reenable", 8),
STACK_USAGE("cmci_disable_bank", 16),
STACK_USAGE("intel_init_cmci", 8),
STACK_USAGE("intel_init_lmce", 16),
STACK_USAGE("intel_clear_lmce", 8),
STACK_USAGE("mce_intel_feature_init", 16),
STACK_USAGE("mce_intel_feature_clear", 0),
STACK_USAGE("intel_filter_mce", 0),
STACK_USAGE("is_copy_from_user", 144),
STACK_USAGE("error_context", 32),
STACK_USAGE("mce_severity_amd", 8),
STACK_USAGE("mce_severity_intel", 32),
STACK_USAGE("mce_severity", 0),
STACK_USAGE("s_start", 0),
STACK_USAGE("s_next", 0),
STACK_USAGE("s_stop", 0),
STACK_USAGE("s_show", 0),
STACK_USAGE("severities_coverage_open", 0),
STACK_USAGE("severities_coverage_write", 0),
STACK_USAGE("severities_debugfs_init", 0),
STACK_USAGE("default_threshold_interrupt", 0),
STACK_USAGE("__sysvec_threshold", 0),
STACK_USAGE("sysvec_threshold", 16),
STACK_USAGE("kvm_set_cpu_l1tf_flush_l1d", 0),
STACK_USAGE("verify_patch", 16),
STACK_USAGE("scan_containers", 64),
STACK_USAGE("apply_microcode_early_amd", 48),
STACK_USAGE("__load_ucode_amd", 104),
STACK_USAGE("load_ucode_amd_bsp", 64),
STACK_USAGE("load_ucode_amd_ap", 104),
STACK_USAGE("save_microcode_in_initrd_amd", 104),
STACK_USAGE("reload_ucode_amd", 8),
STACK_USAGE("collect_cpu_info_amd", 8),
STACK_USAGE("apply_microcode_amd", 48),
STACK_USAGE("load_microcode_amd", 64),
STACK_USAGE("request_microcode_amd", 104),
STACK_USAGE("request_microcode_user", 0),
STACK_USAGE("microcode_fini_cpu_amd", 0),
STACK_USAGE("init_amd_microcode", 8),
STACK_USAGE("exit_amd_microcode", 24),
STACK_USAGE("check_loader_disabled_bsp", 8),
STACK_USAGE("load_ucode_bsp", 16),
STACK_USAGE("load_ucode_ap", 16),
STACK_USAGE("save_microcode_in_initrd", 8),
STACK_USAGE("find_microcode_in_initrd", 8),
STACK_USAGE("reload_early_microcode", 24),
STACK_USAGE("collect_cpu_info_local", 16),
STACK_USAGE("apply_microcode_local", 16),
STACK_USAGE("__reload_late", 40),
STACK_USAGE("reload_store", 40),
STACK_USAGE("version_show", 0),
STACK_USAGE("pf_show", 0),
STACK_USAGE("mc_device_add", 40),
STACK_USAGE("mc_device_remove", 8),
STACK_USAGE("microcode_bsp_resume", 0),
STACK_USAGE("mc_cpu_starting", 40),
STACK_USAGE("mc_cpu_online", 8),
STACK_USAGE("mc_cpu_down_prep", 0),
STACK_USAGE("microcode_init", 104),
STACK_USAGE("save_microcode_patch", 72),
STACK_USAGE("microcode_sanity_check", 24),
STACK_USAGE("scan_microcode", 56),
STACK_USAGE("collect_cpu_info_early", 40),
STACK_USAGE("load_builtin_intel_microcode", 120),
STACK_USAGE("apply_microcode_early", 24),
STACK_USAGE("save_microcode_in_initrd_intel", 96),
STACK_USAGE("__load_ucode_intel", 136),
STACK_USAGE("load_ucode_intel_bsp", 32),
STACK_USAGE("load_ucode_intel_ap", 32),
STACK_USAGE("reload_ucode_intel", 72),
STACK_USAGE("collect_cpu_info", 24),
STACK_USAGE("apply_microcode_intel", 56),
STACK_USAGE("generic_load_microcode", 136),
STACK_USAGE("request_microcode_fw", 136),
STACK_USAGE("request_microcode_user", 80),
STACK_USAGE("init_intel_microcode", 0),
STACK_USAGE("ms_hyperv_platform", 32),
STACK_USAGE("hv_get_nmi_reason", 0),
STACK_USAGE("hv_nmi_unknown", 0),
STACK_USAGE("hv_get_tsc_khz", 8),
STACK_USAGE("ms_hyperv_init_platform", 16),
STACK_USAGE("ms_hyperv_x2apic_available", 0),
STACK_USAGE("ms_hyperv_msi_ext_dest_id", 8),
STACK_USAGE("x86_get_mtrr_mem_range", 24),
STACK_USAGE("mtrr_cleanup", 0),
STACK_USAGE("disable_mtrr_trim_setup", 0),
STACK_USAGE("amd_special_default_mtrr", 24),
STACK_USAGE("mtrr_trim_uncached_memory", 120),
STACK_USAGE("mtrr_type_lookup_variable", 64),
STACK_USAGE("mtrr_type_lookup", 80),
STACK_USAGE("fill_mtrr_var_range", 0),
STACK_USAGE("get_fixed_ranges", 24),
STACK_USAGE("mtrr_save_fixed_ranges", 0),
STACK_USAGE("print_fixed", 0),
STACK_USAGE("print_mtrr_state", 24),
STACK_USAGE("mtrr_bp_pat_init", 16),
STACK_USAGE("get_mtrr_state", 40),
STACK_USAGE("k8_check_syscfg_dram_mod_en", 32),
STACK_USAGE("mtrr_state_warn", 8),
STACK_USAGE("mtrr_wrmsr", 32),
STACK_USAGE("generic_get_free_region", 80),
STACK_USAGE("generic_get_mtrr", 64),
STACK_USAGE("prepare_set", 32),
STACK_USAGE("post_set", 24),
STACK_USAGE("generic_set_all", 88),
STACK_USAGE("generic_set_mtrr", 72),
STACK_USAGE("generic_validate_add_page", 0),
STACK_USAGE("generic_have_wrcomb", 8),
STACK_USAGE("positive_have_wrcomb", 0),
STACK_USAGE("mtrr_ioctl", 136),
STACK_USAGE("mtrr_attrib_to_str", 0),
STACK_USAGE("mtrr_close", 40),
STACK_USAGE("mtrr_seq_show", 80),
STACK_USAGE("mtrr_open", 8),
STACK_USAGE("mtrr_if_init", 8),
STACK_USAGE("mtrr_write", 152),
STACK_USAGE("set_num_var_ranges", 8),
STACK_USAGE("mtrr_rendezvous_handler", 0),
STACK_USAGE("mtrr_add_page", 120),
STACK_USAGE("mtrr_add", 0),
STACK_USAGE("mtrr_del_page", 104),
STACK_USAGE("mtrr_del", 0),
STACK_USAGE("arch_phys_wc_add", 24),
STACK_USAGE("arch_phys_wc_del", 0),
STACK_USAGE("arch_phys_wc_index", 0),
STACK_USAGE("mtrr_save", 8),
STACK_USAGE("mtrr_restore", 48),
STACK_USAGE("mtrr_bp_init", 8),
STACK_USAGE("mtrr_ap_init", 32),
STACK_USAGE("mtrr_save_state", 0),
STACK_USAGE("set_mtrr_ops", 0),
STACK_USAGE("set_mtrr_aps_delayed_init", 0),
STACK_USAGE("mtrr_aps_init", 32),
STACK_USAGE("mtrr_bp_restore", 0),
STACK_USAGE("mtrr_init_finialize", 0),
STACK_USAGE("reserve_perfctr_nmi", 0),
STACK_USAGE("release_perfctr_nmi", 0),
STACK_USAGE("reserve_evntsel_nmi", 0),
STACK_USAGE("release_evntsel_nmi", 0),
STACK_USAGE("c_start", 8),
STACK_USAGE("c_next", 8),
STACK_USAGE("c_stop", 0),
STACK_USAGE("show_cpuinfo", 32),
STACK_USAGE("x86_rdrand_setup", 0),
STACK_USAGE("x86_init_rdrand", 8),
STACK_USAGE("init_scattered_cpuid_features", 40),
STACK_USAGE("detect_extended_topology_early", 8),
STACK_USAGE("detect_extended_topology", 56),
STACK_USAGE("tsx_clear_cpuid", 8),
STACK_USAGE("tsx_dev_mode_disable", 16),
STACK_USAGE("tsx_init", 16),
STACK_USAGE("tsx_disable", 8),
STACK_USAGE("tsx_ap_init", 8),
STACK_USAGE("tsx_enable", 8),
STACK_USAGE("enable_c02_show", 0),
STACK_USAGE("enable_c02_store", 24),
STACK_USAGE("max_time_show", 0),
STACK_USAGE("max_time_store", 24),
STACK_USAGE("umwait_init", 8),
STACK_USAGE("umwait_update_control_msr", 0),
STACK_USAGE("umwait_cpu_online", 16),
STACK_USAGE("umwait_cpu_offline", 0),
STACK_USAGE("umwait_syscore_resume", 0),
STACK_USAGE("vmware_get_tsc_khz", 0),
STACK_USAGE("setup_vmw_sched_clock", 0),
STACK_USAGE("parse_no_stealacc", 0),
STACK_USAGE("vmware_sched_clock", 0),
STACK_USAGE("vmware_cyc2ns_setup", 8),
STACK_USAGE("vmware_steal_clock", 0),
STACK_USAGE("vmware_pv_guest_cpu_reboot", 8),
STACK_USAGE("vmware_pv_reboot_notify", 0),
STACK_USAGE("vmware_smp_prepare_boot_cpu", 24),
STACK_USAGE("vmware_cpu_online", 40),
STACK_USAGE("vmware_cpu_down_prepare", 24),
STACK_USAGE("activate_jump_labels", 0),
STACK_USAGE("vmware_paravirt_ops_setup", 8),
STACK_USAGE("vmware_set_capabilities", 0),
STACK_USAGE("vmware_platform_setup", 24),
STACK_USAGE("vmware_platform", 32),
STACK_USAGE("vmware_legacy_x2apic_available", 8),
STACK_USAGE("early_init_zhaoxin", 12),
STACK_USAGE("init_zhaoxin", 40),
STACK_USAGE("cpuid_open", 0),
STACK_USAGE("cpuid_device_create", 8),
STACK_USAGE("cpuid_device_destroy", 0),
STACK_USAGE("cpuid_devnode", 0),
STACK_USAGE("cpuid_init", 16),
STACK_USAGE("cpuid_exit", 0),
STACK_USAGE("cpuid_smp_cpuid", 8),
STACK_USAGE("cpuid_read", 248),
STACK_USAGE("kdump_nmi_shootdown_cpus", 0),
STACK_USAGE("crash_smp_send_stop", 0),
STACK_USAGE("native_machine_crash_shutdown", 32),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("cpu_crash_vmclear_loaded_vmcss", 8),
STACK_USAGE("cpu_emergency_vmxoff", 24),
STACK_USAGE("kdump_nmi_callback", 8),
STACK_USAGE("arch_crash_save_vmcoreinfo", 0),
STACK_USAGE("copy_oldmem_page", 40),
STACK_USAGE("copy_oldmem_page_encrypted", 40),
STACK_USAGE("elfcorehdr_read", 0),
STACK_USAGE("show_opcodes", 104),
STACK_USAGE("show_ip", 16),
STACK_USAGE("cpu_entry_stack", 0),
STACK_USAGE("show_iret_regs", 16),
STACK_USAGE("show_regs_if_on_stack", 16),
STACK_USAGE("show_trace_log_lvl", 264),
STACK_USAGE("task_stack_page", 0),
STACK_USAGE("show_stack", 8),
STACK_USAGE("show_stack_regs", 0),
STACK_USAGE("oops_begin", 32),
STACK_USAGE("in_task_stack", 16),
STACK_USAGE("oops_end", 24),
STACK_USAGE("__die_header", 24),
STACK_USAGE("__die_body", 24),
STACK_USAGE("__die", 32),
STACK_USAGE("die", 40),
STACK_USAGE("die_addr", 40),
STACK_USAGE("show_regs", 8),
STACK_USAGE("queued_spin_lock_slowpath", 0),
STACK_USAGE("in_entry_stack", 16),
STACK_USAGE("get_stack_info_noinstr", 32),
STACK_USAGE("get_stack_info", 24),
STACK_USAGE("stack_type_name", 0),
STACK_USAGE("e820__mapped_any", 8),
STACK_USAGE("e820__finish_early_params", 0),
STACK_USAGE("e820_type_to_string", 0),
STACK_USAGE("e820_type_to_iores_desc", 0),
STACK_USAGE("__e820__mapped_all", 0),
STACK_USAGE("e820__reserve_resources", 56),
STACK_USAGE("e820__reserve_resources_late", 32),
STACK_USAGE("e820__memory_setup_default", 16),
STACK_USAGE("e820__memory_setup", 16),
STACK_USAGE("e820__memblock_setup", 24),
STACK_USAGE("e820__mapped_all", 0),
STACK_USAGE("e820__get_entry_type", 0),
STACK_USAGE("__e820__range_add", 0),
STACK_USAGE("e820__range_add", 0),
STACK_USAGE("e820_print_type", 0),
STACK_USAGE("e820__print_table", 24),
STACK_USAGE("cpcompare", 0),
STACK_USAGE("e820__update_table", 40),
STACK_USAGE("__append_e820_table", 16),
STACK_USAGE("__e820__range_update", 88),
STACK_USAGE("e820__range_update", 0),
STACK_USAGE("e820__range_remove", 64),
STACK_USAGE("e820__update_table_print", 0),
STACK_USAGE("e820_search_gap", 0),
STACK_USAGE("e820__setup_pci_gap", 32),
STACK_USAGE("e820__reallocate_tables", 0),
STACK_USAGE("e820__memory_setup_extended", 24),
STACK_USAGE("e820__register_nosave_regions", 48),
STACK_USAGE("e820__register_nvs_regions", 8),
STACK_USAGE("e820__memblock_alloc_reserved", 16),
STACK_USAGE("e820_end_pfn", 16),
STACK_USAGE("e820__end_of_ram_pfn", 0),
STACK_USAGE("e820__end_of_low_ram_pfn", 0),
STACK_USAGE("parse_memopt", 32),
STACK_USAGE("parse_memmap_one", 56),
STACK_USAGE("e820__mapped_raw_any", 8),
STACK_USAGE("parse_memmap_opt", 16),
STACK_USAGE("e820__reserve_setup_data", 32),
STACK_USAGE("ati_ixp4x0_rev", 32),
STACK_USAGE("ati_bugs", 0),
STACK_USAGE("ati_bugs_contd", 40),
STACK_USAGE("intel_remapping_check", 24),
STACK_USAGE("i830_tseg_size", 8),
STACK_USAGE("i845_tseg_size", 8),
STACK_USAGE("i830_stolen_base", 16),
STACK_USAGE("i845_stolen_base", 16),
STACK_USAGE("i85x_stolen_base", 16),
STACK_USAGE("i865_stolen_base", 8),
STACK_USAGE("fix_hypertransport_config", 32),
STACK_USAGE("gen3_stolen_base", 0),
STACK_USAGE("gen11_stolen_base", 32),
STACK_USAGE("i830_stolen_size", 0),
STACK_USAGE("gen3_stolen_size", 0),
STACK_USAGE("gen6_stolen_size", 0),
STACK_USAGE("gen8_stolen_size", 0),
STACK_USAGE("chv_stolen_size", 0),
STACK_USAGE("gen9_stolen_size", 0),
STACK_USAGE("intel_graphics_stolen", 40),
STACK_USAGE("via_bugs", 0),
STACK_USAGE("intel_graphics_quirks", 24),
STACK_USAGE("force_disable_hpet", 0),
STACK_USAGE("apple_airport_reset", 56),
STACK_USAGE("nvidia_hpet_check", 0),
STACK_USAGE("check_dev_quirk", 72),
STACK_USAGE("early_pci_scan_bus", 24),
STACK_USAGE("early_quirks", 0),
STACK_USAGE("nvidia_bugs", 0),
STACK_USAGE("io_serial_out", 0),
STACK_USAGE("early_serial_write", 32),
STACK_USAGE("early_serial_hw_init", 24),
STACK_USAGE("early_serial_init", 40),
STACK_USAGE("mem32_serial_out", 0),
STACK_USAGE("mem32_serial_in", 0),
STACK_USAGE("early_pci_serial_init", 96),
STACK_USAGE("early_vga_write", 16),
STACK_USAGE("early_console_register", 0),
STACK_USAGE("setup_early_printk", 24),
STACK_USAGE("io_serial_in", 0),
STACK_USAGE("reserve_bios_regions", 0),
STACK_USAGE("fpu__init_check_bugs", 16),
STACK_USAGE("__bpf_trace_x86_fpu", 0),
STACK_USAGE("perf_trace_x86_fpu", 56),
STACK_USAGE("trace_event_raw_event_x86_fpu", 72),
STACK_USAGE("trace_raw_output_x86_fpu", 24),
STACK_USAGE("save_fpregs_to_fpstate", 32),
STACK_USAGE("restore_fpregs_from_fpstate", 40),
STACK_USAGE("fpu_reset_from_exception_fixup", 0),
STACK_USAGE("local_bh_disable", 0),
STACK_USAGE("fpu_alloc_guest_fpstate", 40),
STACK_USAGE("fpu_free_guest_fpstate", 0),
STACK_USAGE("fpu_enable_guest_xfd_features", 0),
STACK_USAGE("fpu_update_guest_xfd", 16),
STACK_USAGE("fpu_sync_guest_vmexit_xfd_state", 16),
STACK_USAGE("fpu_swap_kvm_fpstate", 56),
STACK_USAGE("local_bh_enable", 0),
STACK_USAGE("fpu_copy_guest_fpstate_to_uabi", 8),
STACK_USAGE("fpu_copy_uabi_to_guest_fpstate", 24),
STACK_USAGE("__traceiter_x86_fpu_before_save", 16),
STACK_USAGE("kernel_fpu_begin_mask", 56),
STACK_USAGE("__traceiter_x86_fpu_after_save", 16),
STACK_USAGE("kernel_fpu_end", 0),
STACK_USAGE("fpu_sync_fpstate", 32),
STACK_USAGE("__traceiter_x86_fpu_before_restore", 16),
STACK_USAGE("fpregs_activate", 8),
STACK_USAGE("fpstate_init_user", 0),
STACK_USAGE("fpstate_reset", 0),
STACK_USAGE("__traceiter_x86_fpu_after_restore", 16),
STACK_USAGE("fpu_clone", 56),
STACK_USAGE("irq_fpu_usable", 0),
STACK_USAGE("__traceiter_x86_fpu_regs_activated", 16),
STACK_USAGE("fpu_thread_struct_whitelist", 0),
STACK_USAGE("fpu__drop", 8),
STACK_USAGE("__traceiter_x86_fpu_regs_deactivated", 16),
STACK_USAGE("__traceiter_x86_fpu_init_state", 16),
STACK_USAGE("fpu__clear_user_states", 24),
STACK_USAGE("fpu_flush_thread", 16),
STACK_USAGE("__traceiter_x86_fpu_dropped", 16),
STACK_USAGE("switch_fpu_return", 24),
STACK_USAGE("fpregs_assert_state_consistent", 8),
STACK_USAGE("fpregs_mark_activate", 8),
STACK_USAGE("fpu__exception_code", 0),
STACK_USAGE("__traceiter_x86_fpu_copy_src", 16),
STACK_USAGE("__traceiter_x86_fpu_copy_dst", 16),
STACK_USAGE("__traceiter_x86_fpu_xstate_check_failed", 16),
STACK_USAGE("fpu__init_system_generic", 0),
STACK_USAGE("fpu__init_system", 24),
STACK_USAGE("fpu__init_cpu", 16),
STACK_USAGE("xstateregs_get", 24),
STACK_USAGE("xstateregs_set", 48),
STACK_USAGE("regset_fpregs_active", 0),
STACK_USAGE("__convert_from_fxsr", 16),
STACK_USAGE("regset_xregset_fpregs_active", 0),
STACK_USAGE("convert_from_fxsr", 0),
STACK_USAGE("convert_to_fxsr", 0),
STACK_USAGE("fpregs_get", 680),
STACK_USAGE("fpregs_set", 160),
STACK_USAGE("xfpregs_get", 24),
STACK_USAGE("xfpregs_set", 568),
STACK_USAGE("os_xsave", 24),
STACK_USAGE("copy_fpstate_to_sigframe", 176),
STACK_USAGE("local_bh_disable", 0),
STACK_USAGE("os_xrstor_safe", 32),
STACK_USAGE("local_bh_enable", 0),
STACK_USAGE("fpu__restore_sig", 256),
STACK_USAGE("fpu__alloc_mathframe", 0),
STACK_USAGE("fpu__get_fpstate_size", 0),
STACK_USAGE("__copy_xstate_to_uabi_buf", 176),
STACK_USAGE("copy_xstate_to_uabi_buf", 0),
STACK_USAGE("copy_uabi_to_xstate", 128),
STACK_USAGE("copy_uabi_from_kernel_to_xstate", 0),
STACK_USAGE("copy_sigframe_from_user_to_xstate", 0),
STACK_USAGE("xsaves", 0),
STACK_USAGE("xrstors", 0),
STACK_USAGE("fpstate_clear_xstate_component", 8),
STACK_USAGE("xfeature_get_offset", 16),
STACK_USAGE("xfd_validate_state", 24),
STACK_USAGE("xfd_update_static_branch", 0),
STACK_USAGE("fpstate_free", 0),
STACK_USAGE("__xfd_enable_feature", 88),
STACK_USAGE("xfd_enable_feature", 0),
STACK_USAGE("xstate_get_guest_group_perm", 0),
STACK_USAGE("fpu__init_cpu_xstate", 16),
STACK_USAGE("fpu_xstate_prctl", 72),
STACK_USAGE("proc_pid_arch_status", 8),
STACK_USAGE("local_bh_disable", 0),
STACK_USAGE("setup_xstate_cache", 40),
STACK_USAGE("print_xstate_feature", 8),
STACK_USAGE("print_xstate_features", 0),
STACK_USAGE("print_xstate_offset_size", 64),
STACK_USAGE("os_xrstor_booting", 0),
STACK_USAGE("local_bh_enable", 0),
STACK_USAGE("setup_init_fpu_buf", 0),
STACK_USAGE("xfeature_size", 8),
STACK_USAGE("__xstate_dump_leaves", 16),
STACK_USAGE("check_xtile_data_against_struct", 8),
STACK_USAGE("check_xstate_against_struct", 24),
STACK_USAGE("xstate_calculate_size", 24),
STACK_USAGE("paranoid_xstate_size_valid", 56),
STACK_USAGE("get_xsaves_size_no_independent", 8),
STACK_USAGE("init_xstate_size", 32),
STACK_USAGE("fpu__init_disable_system_xstate", 24),
STACK_USAGE("fpu__init_system_xstate", 16),
STACK_USAGE("fpu__resume_cpu", 0),
STACK_USAGE("__raw_xsave_addr", 16),
STACK_USAGE("get_xsave_addr", 0),
STACK_USAGE("cpu_has_xfeatures", 8),
STACK_USAGE("arch_set_user_pkey_access", 0),
STACK_USAGE("ftrace_modify_code_direct", 40),
STACK_USAGE("ftrace_make_nop", 0),
STACK_USAGE("ftrace_make_call", 0),
STACK_USAGE("ftrace_modify_call", 0),
STACK_USAGE("ftrace_update_ftrace_func", 16),
STACK_USAGE("ftrace_replace_code", 64),
STACK_USAGE("arch_ftrace_update_code", 0),
STACK_USAGE("ftrace_arch_code_modify_prepare", 0),
STACK_USAGE("set_ftrace_ops_ro", 32),
STACK_USAGE("arch_ftrace_update_trampoline", 72),
STACK_USAGE("ftrace_arch_code_modify_post_process", 0),
STACK_USAGE("arch_ftrace_trampoline_func", 24),
STACK_USAGE("arch_ftrace_trampoline_free", 8),
STACK_USAGE("ftrace_enable_ftrace_graph_caller", 0),
STACK_USAGE("ftrace_disable_ftrace_graph_caller", 0),
STACK_USAGE("prepare_ftrace_return", 32),
STACK_USAGE("ftrace_graph_func", 0),
STACK_USAGE("__startup_64", 40),
STACK_USAGE("__startup_secondary_64", 0),
STACK_USAGE("__early_make_pgtable", 72),
STACK_USAGE("do_early_exception", 16),
STACK_USAGE("copy_bootdata", 8),
STACK_USAGE("x86_64_start_kernel", 16),
STACK_USAGE("x86_64_start_reservations", 0),
STACK_USAGE("early_setup_idt", 0),
STACK_USAGE("startup_64_setup_env", 0),
STACK_USAGE("hpet_enable", 40),
STACK_USAGE("hpet_setup", 16),
STACK_USAGE("hpet_late_init", 8),
STACK_USAGE("hpet_disable", 0),
STACK_USAGE("disable_hpet", 0),
STACK_USAGE("hpet_register_irq_handler", 0),
STACK_USAGE("hpet_unregister_irq_handler", 0),
STACK_USAGE("hpet_rtc_timer_init", 32),
STACK_USAGE("hpet_mask_rtc_irq_bit", 0),
STACK_USAGE("hpet_set_rtc_irq_bit", 8),
STACK_USAGE("hpet_set_alarm_time", 0),
STACK_USAGE("is_hpet_enabled", 0),
STACK_USAGE("hpet_set_periodic_freq", 0),
STACK_USAGE("hpet_rtc_dropped_irq", 0),
STACK_USAGE("_hpet_print_config", 24),
STACK_USAGE("hpet_rtc_interrupt", 64),
STACK_USAGE("hpet_reserve_platform_timers", 168),
STACK_USAGE("hpet_restart_counter", 0),
STACK_USAGE("hpet_resume_counter", 0),
STACK_USAGE("hpet_clkevt_set_state_periodic", 16),
STACK_USAGE("hpet_clkevt_set_state_oneshot", 0),
STACK_USAGE("hpet_clkevt_set_state_shutdown", 0),
STACK_USAGE("hpet_clkevt_legacy_resume", 0),
STACK_USAGE("hpet_clkevt_set_next_event", 0),
STACK_USAGE("hpet_init_clockevent", 0),
STACK_USAGE("hpet_legacy_clockevent_register", 8),
STACK_USAGE("hpet_msi_unmask", 0),
STACK_USAGE("hpet_msi_mask", 0),
STACK_USAGE("hpet_msi_write_msg", 0),
STACK_USAGE("hpet_msi_init", 32),
STACK_USAGE("hpet_msi_free", 0),
STACK_USAGE("hpet_clkevt_msi_resume", 40),
STACK_USAGE("hpet_msi_interrupt_handler", 0),
STACK_USAGE("hpet_cpuhp_online", 40),
STACK_USAGE("hpet_cpuhp_dead", 16),
STACK_USAGE("hpet_select_clockevents", 136),
STACK_USAGE("hpet_readl", 0),
STACK_USAGE("read_hpet", 48),
STACK_USAGE("hpet_cfg_working", 8),
STACK_USAGE("hpet_counting", 16),
STACK_USAGE("mwait_pc10_supported", 8),
STACK_USAGE("hpet_is_pc10_damaged", 8),
STACK_USAGE("arch_uninstall_hw_breakpoint", 16),
STACK_USAGE("arch_bp_generic_fields", 0),
STACK_USAGE("arch_check_bp_in_kernelspace", 0),
STACK_USAGE("hw_breakpoint_arch_parse", 48),
STACK_USAGE("flush_ptrace_hw_breakpoint", 8),
STACK_USAGE("hw_breakpoint_restore", 0),
STACK_USAGE("hw_breakpoint_exceptions_notify", 32),
STACK_USAGE("hw_breakpoint_pmu_read", 0),
STACK_USAGE("encode_dr7", 0),
STACK_USAGE("decode_dr7", 0),
STACK_USAGE("arch_install_hw_breakpoint", 24),
STACK_USAGE("i8237A_resume", 0),
STACK_USAGE("i8237A_init_ops", 8),
STACK_USAGE("pit_timer_init", 0),
STACK_USAGE("make_8259A_irq", 8),
STACK_USAGE("mask_and_ack_8259A", 24),
STACK_USAGE("i8259A_resume", 0),
STACK_USAGE("i8259A_suspend", 0),
STACK_USAGE("i8259A_shutdown", 0),
STACK_USAGE("mask_8259A", 0),
STACK_USAGE("unmask_8259A", 0),
STACK_USAGE("probe_8259A", 8),
STACK_USAGE("init_8259A", 16),
STACK_USAGE("legacy_pic_noop", 0),
STACK_USAGE("legacy_pic_uint_noop", 0),
STACK_USAGE("legacy_pic_int_noop", 0),
STACK_USAGE("legacy_pic_irq_pending_noop", 0),
STACK_USAGE("legacy_pic_probe", 0),
STACK_USAGE("i8259A_init_ops", 0),
STACK_USAGE("mask_8259A_irq", 8),
STACK_USAGE("disable_8259A_irq", 8),
STACK_USAGE("unmask_8259A_irq", 8),
STACK_USAGE("enable_8259A_irq", 8),
STACK_USAGE("i8259A_irq_pending", 16),
STACK_USAGE("load_current_idt", 0),
STACK_USAGE("idt_setup_from_table", 0),
STACK_USAGE("idt_setup_early_traps", 0),
STACK_USAGE("idt_setup_traps", 0),
STACK_USAGE("idt_setup_early_pf", 0),
STACK_USAGE("idt_setup_apic_and_irq_gates", 16),
STACK_USAGE("idt_setup_early_handler", 0),
STACK_USAGE("idt_invalidate", 0),
STACK_USAGE("alloc_intr_gate", 0),
STACK_USAGE("io_delay_init", 0),
STACK_USAGE("io_delay_param", 16),
STACK_USAGE("native_io_delay", 0),
STACK_USAGE("dmi_io_delay_0xed_port", 0),
STACK_USAGE("__ia32_sys_ioperm", 0),
STACK_USAGE("__x64_sys_ioperm", 0),
STACK_USAGE("__ia32_sys_iopl", 0),
STACK_USAGE("__se_sys_iopl", 24),
STACK_USAGE("__x64_sys_iopl", 0),
STACK_USAGE("io_bitmap_share", 16),
STACK_USAGE("io_bitmap_exit", 8),
STACK_USAGE("ksys_ioperm", 40),
STACK_USAGE("__traceiter_threshold_apic_entry", 16),
STACK_USAGE("__traceiter_threshold_apic_exit", 16),
STACK_USAGE("__traceiter_deferred_error_apic_entry", 16),
STACK_USAGE("__traceiter_deferred_error_apic_exit", 16),
STACK_USAGE("__traceiter_thermal_apic_entry", 16),
STACK_USAGE("__traceiter_thermal_apic_exit", 16),
STACK_USAGE("__bpf_trace_vector_config", 0),
STACK_USAGE("__traceiter_vector_config", 40),
STACK_USAGE("perf_trace_vector_config", 72),
STACK_USAGE("trace_event_raw_event_vector_config", 96),
STACK_USAGE("trace_raw_output_vector_config", 24),
STACK_USAGE("__bpf_trace_x86_irq_vector", 0),
STACK_USAGE("perf_trace_x86_irq_vector", 56),
STACK_USAGE("trace_event_raw_event_x86_irq_vector", 72),
STACK_USAGE("trace_raw_output_x86_irq_vector", 24),
STACK_USAGE("__bpf_trace_vector_mod", 0),
STACK_USAGE("perf_trace_vector_mod", 80),
STACK_USAGE("trace_event_raw_event_vector_mod", 104),
STACK_USAGE("trace_raw_output_vector_mod", 24),
STACK_USAGE("__traceiter_vector_update", 48),
STACK_USAGE("__traceiter_vector_clear", 48),
STACK_USAGE("arch_irq_stat_cpu", 0),
STACK_USAGE("__bpf_trace_vector_reserve", 0),
STACK_USAGE("perf_trace_vector_reserve", 64),
STACK_USAGE("trace_event_raw_event_vector_reserve", 80),
STACK_USAGE("trace_raw_output_vector_reserve", 24),
STACK_USAGE("__traceiter_vector_reserve_managed", 24),
STACK_USAGE("__traceiter_vector_reserve", 24),
STACK_USAGE("__bpf_trace_vector_alloc", 0),
STACK_USAGE("__traceiter_vector_alloc", 40),
STACK_USAGE("perf_trace_vector_alloc", 72),
STACK_USAGE("trace_event_raw_event_vector_alloc", 96),
STACK_USAGE("trace_raw_output_vector_alloc", 24),
STACK_USAGE("arch_irq_stat", 0),
STACK_USAGE("__common_interrupt", 32),
STACK_USAGE("common_interrupt", 24),
STACK_USAGE("__bpf_trace_vector_alloc_managed", 0),
STACK_USAGE("__traceiter_vector_alloc_managed", 32),
STACK_USAGE("perf_trace_vector_alloc_managed", 72),
STACK_USAGE("trace_event_raw_event_vector_alloc_managed", 88),
STACK_USAGE("trace_raw_output_vector_alloc_managed", 24),
STACK_USAGE("__bpf_trace_vector_activate", 0),
STACK_USAGE("perf_trace_vector_activate", 72),
STACK_USAGE("trace_event_raw_event_vector_activate", 96),
STACK_USAGE("trace_raw_output_vector_activate", 24),
STACK_USAGE("__sysvec_x86_platform_ipi", 16),
STACK_USAGE("sysvec_x86_platform_ipi", 16),
STACK_USAGE("dummy_handler", 0),
STACK_USAGE("kvm_set_posted_intr_wakeup_handler", 0),
STACK_USAGE("__traceiter_vector_activate", 40),
STACK_USAGE("__traceiter_vector_deactivate", 40),
STACK_USAGE("__bpf_trace_vector_teardown", 0),
STACK_USAGE("__traceiter_vector_teardown", 32),
STACK_USAGE("perf_trace_vector_teardown", 72),
STACK_USAGE("trace_event_raw_event_vector_teardown", 88),
STACK_USAGE("trace_raw_output_vector_teardown", 24),
STACK_USAGE("sysvec_kvm_posted_intr_ipi", 16),
STACK_USAGE("__sysvec_kvm_posted_intr_wakeup_ipi", 0),
STACK_USAGE("sysvec_kvm_posted_intr_wakeup_ipi", 16),
STACK_USAGE("sysvec_kvm_posted_intr_nested_ipi", 16),
STACK_USAGE("__bpf_trace_vector_setup", 0),
STACK_USAGE("__traceiter_vector_setup", 32),
STACK_USAGE("perf_trace_vector_setup", 72),
STACK_USAGE("trace_event_raw_event_vector_setup", 88),
STACK_USAGE("trace_raw_output_vector_setup", 24),
STACK_USAGE("fixup_irqs", 40),
STACK_USAGE("__bpf_trace_vector_free_moved", 0),
STACK_USAGE("__traceiter_vector_free_moved", 40),
STACK_USAGE("perf_trace_vector_free_moved", 72),
STACK_USAGE("trace_event_raw_event_vector_free_moved", 96),
STACK_USAGE("trace_raw_output_vector_free_moved", 24),
STACK_USAGE("ack_bad_irq", 8),
STACK_USAGE("__sysvec_thermal", 0),
STACK_USAGE("sysvec_thermal", 16),
STACK_USAGE("__traceiter_local_timer_entry", 16),
STACK_USAGE("__traceiter_local_timer_exit", 16),
STACK_USAGE("__traceiter_spurious_apic_entry", 16),
STACK_USAGE("__traceiter_spurious_apic_exit", 16),
STACK_USAGE("__traceiter_error_apic_entry", 16),
STACK_USAGE("__traceiter_error_apic_exit", 16),
STACK_USAGE("__traceiter_x86_platform_ipi_entry", 16),
STACK_USAGE("__traceiter_x86_platform_ipi_exit", 16),
STACK_USAGE("arch_show_interrupts", 24),
STACK_USAGE("__traceiter_irq_work_entry", 16),
STACK_USAGE("__traceiter_irq_work_exit", 16),
STACK_USAGE("kvm_set_cpu_l1tf_flush_l1d", 0),
STACK_USAGE("perf_perm_irq_work_exit", 0),
STACK_USAGE("trace_init_perf_perm_irq_work_exit", 0),
STACK_USAGE("__traceiter_reschedule_entry", 16),
STACK_USAGE("__traceiter_reschedule_exit", 16),
STACK_USAGE("__traceiter_call_function_entry", 16),
STACK_USAGE("__traceiter_call_function_exit", 16),
STACK_USAGE("__traceiter_call_function_single_entry", 16),
STACK_USAGE("__traceiter_call_function_single_exit", 16),
STACK_USAGE("irq_init_percpu_irqstack", 72),
STACK_USAGE("__sysvec_irq_work", 0),
STACK_USAGE("sysvec_irq_work", 16),
STACK_USAGE("arch_irq_work_raise", 0),
STACK_USAGE("kvm_set_cpu_l1tf_flush_l1d", 0),
STACK_USAGE("init_ISA_irqs", 16),
STACK_USAGE("init_IRQ", 24),
STACK_USAGE("native_init_IRQ", 0),
STACK_USAGE("sched_set_itmt_support", 8),
STACK_USAGE("sched_clear_itmt_support", 0),
STACK_USAGE("arch_asym_cpu_priority", 0),
STACK_USAGE("sched_set_itmt_core_prio", 32),
STACK_USAGE("sched_itmt_update_handler", 56),
STACK_USAGE("jump_label_transform", 16),
STACK_USAGE("arch_jump_label_transform", 0),
STACK_USAGE("arch_jump_label_transform_queue", 16),
STACK_USAGE("arch_jump_label_transform_apply", 0),
STACK_USAGE("arch_jump_label_transform_static", 0),
STACK_USAGE("arch_jump_entry_size", 120),
STACK_USAGE("__jump_label_patch", 168),
STACK_USAGE("boot_params_kdebugfs_init", 16),
STACK_USAGE("arch_kdebugfs_init", 0),
STACK_USAGE("setup_data_read", 40),
STACK_USAGE("create_setup_data_node", 56),
STACK_USAGE("create_setup_data_nodes", 56),
STACK_USAGE("kprobe_fault_handler", 24),
STACK_USAGE("arch_populate_kprobe_blacklist", 0),
STACK_USAGE("arch_init_kprobes", 0),
STACK_USAGE("arch_trampoline_kprobe", 0),
STACK_USAGE("synthesize_reljump", 0),
STACK_USAGE("synthesize_relcall", 0),
STACK_USAGE("can_boost", 16),
STACK_USAGE("recover_probed_instruction", 32),
STACK_USAGE("arch_adjust_kprobe_addr", 0),
STACK_USAGE("__copy_instruction", 88),
STACK_USAGE("alloc_insn_page", 8),
STACK_USAGE("kprobe_emulate_ifmodifiers", 0),
STACK_USAGE("kprobe_emulate_ret", 0),
STACK_USAGE("kprobe_emulate_call", 0),
STACK_USAGE("kprobe_emulate_jmp", 0),
STACK_USAGE("kprobe_emulate_jcc", 0),
STACK_USAGE("kprobe_emulate_loop", 0),
STACK_USAGE("kprobe_emulate_call_indirect", 0),
STACK_USAGE("kprobe_emulate_jmp_indirect", 0),
STACK_USAGE("arch_prepare_kprobe", 192),
STACK_USAGE("arch_arm_kprobe", 32),
STACK_USAGE("arch_disarm_kprobe", 32),
STACK_USAGE("arch_remove_kprobe", 8),
STACK_USAGE("kprobe_post_process", 8),
STACK_USAGE("setup_singlestep", 32),
STACK_USAGE("resume_singlestep", 0),
STACK_USAGE("reenter_kprobe", 32),
STACK_USAGE("kprobe_int3_handler", 40),
STACK_USAGE("kprobe_ftrace_handler", 56),
STACK_USAGE("arch_prepare_kprobe_ftrace", 0),
STACK_USAGE("optimized_callback", 24),
STACK_USAGE("arch_check_optimized_kprobe", 24),
STACK_USAGE("__recover_optprobed_insn", 24),
STACK_USAGE("arch_within_optimized_kprobe", 0),
STACK_USAGE("arch_remove_optimized_kprobe", 16),
STACK_USAGE("arch_prepare_optimized_kprobe", 264),
STACK_USAGE("arch_optimize_kprobes", 48),
STACK_USAGE("arch_unoptimize_kprobe", 56),
STACK_USAGE("arch_unoptimize_kprobes", 72),
STACK_USAGE("setup_detour_execution", 8),
STACK_USAGE("type_show", 64),
STACK_USAGE("setup_data_data_read", 72),
STACK_USAGE("version_show", 0),
STACK_USAGE("create_setup_data_node", 88),
STACK_USAGE("get_setup_data_total_num", 24),
STACK_USAGE("boot_params_data_read", 8),
STACK_USAGE("create_setup_data_nodes", 64),
STACK_USAGE("boot_params_ksysfs_init", 16),
STACK_USAGE("get_setup_data_size", 32),
STACK_USAGE("kvm_spinlock_init", 8),
STACK_USAGE("kvm_disable_host_haltpoll", 0),
STACK_USAGE("kvm_enable_host_haltpoll", 0),
STACK_USAGE("arch_haltpoll_enable", 16),
STACK_USAGE("arch_haltpoll_disable", 16),
STACK_USAGE("kvm_async_pf_task_wait_schedule", 176),
STACK_USAGE("apf_task_wake_all", 40),
STACK_USAGE("kvm_async_pf_task_wake", 32),
STACK_USAGE("kvm_read_and_reset_apf_flags", 8),
STACK_USAGE("__kvm_handle_async_pf", 32),
STACK_USAGE("__sysvec_kvm_asyncpf_interrupt", 16),
STACK_USAGE("sysvec_kvm_asyncpf_interrupt", 16),
STACK_USAGE("paravirt_ops_setup", 8),
STACK_USAGE("kvm_guest_apic_eoi_write", 0),
STACK_USAGE("kvm_guest_cpu_init", 16),
STACK_USAGE("kvm_steal_clock", 0),
STACK_USAGE("kvm_guest_cpu_offline", 16),
STACK_USAGE("kvm_cpu_online", 16),
STACK_USAGE("pv_tlb_flush_supported", 8),
STACK_USAGE("pv_ipi_supported", 8),
STACK_USAGE("__send_ipi_mask", 120),
STACK_USAGE("parse_no_kvmapf", 0),
STACK_USAGE("kvm_send_ipi_mask", 0),
STACK_USAGE("kvm_send_ipi_mask_allbutself", 24),
STACK_USAGE("setup_efi_kvm_sev_migration", 0),
STACK_USAGE("parse_no_stealacc", 0),
STACK_USAGE("kvm_smp_send_call_func_ipi", 16),
STACK_USAGE("kvm_flush_tlb_multi", 24),
STACK_USAGE("kvm_set_cpu_l1tf_flush_l1d", 0),
STACK_USAGE("kvm_alloc_cpumask", 8),
STACK_USAGE("kvm_smp_prepare_boot_cpu", 0),
STACK_USAGE("kvm_cpu_down_prepare", 16),
STACK_USAGE("kvm_suspend", 8),
STACK_USAGE("kvm_resume", 24),
STACK_USAGE("kvm_pv_guest_cpu_reboot", 0),
STACK_USAGE("kvm_pv_reboot_notify", 0),
STACK_USAGE("kvm_crash_shutdown", 8),
STACK_USAGE("kvm_guest_init", 8),
STACK_USAGE("kvm_io_delay", 0),
STACK_USAGE("__kvm_cpuid_base", 32),
STACK_USAGE("kvm_para_available", 0),
STACK_USAGE("kvm_arch_para_features", 8),
STACK_USAGE("kvm_arch_para_hints", 8),
STACK_USAGE("kvm_detect", 0),
STACK_USAGE("kvm_apic_init", 0),
STACK_USAGE("kvm_msi_ext_dest_id", 8),
STACK_USAGE("kvm_init_platform", 0),
STACK_USAGE("activate_jump_labels", 0),
STACK_USAGE("kvm_kick_cpu", 8),
STACK_USAGE("kvm_wait", 32),
STACK_USAGE("kvm_get_tsc_khz", 0),
STACK_USAGE("kvm_get_preset_lpj", 0),
STACK_USAGE("kvm_check_and_clear_guest_paused", 8),
STACK_USAGE("kvm_cs_enable", 0),
STACK_USAGE("kvm_save_sched_clock_state", 0),
STACK_USAGE("kvm_restore_sched_clock_state", 0),
STACK_USAGE("kvm_setup_secondary_clock", 0),
STACK_USAGE("kvmclock_disable", 0),
STACK_USAGE("kvmclock_init_mem", 16),
STACK_USAGE("kvm_setup_vsyscall_timeinfo", 0),
STACK_USAGE("kvmclock_setup_percpu", 0),
STACK_USAGE("kvmclock_init", 16),
STACK_USAGE("parse_no_kvmclock", 0),
STACK_USAGE("parse_no_kvmclock_vsyscall", 0),
STACK_USAGE("kvm_get_wallclock", 16),
STACK_USAGE("kvm_set_wallclock", 0),
STACK_USAGE("kvm_clock_get_cycles", 0),
STACK_USAGE("kvm_sched_clock_read", 0),
STACK_USAGE("flush_ldt", 16),
STACK_USAGE("fill_ldt", 0),
STACK_USAGE("native_set_ldt", 16),
STACK_USAGE("map_ldt_struct", 104),
STACK_USAGE("unmap_ldt_struct", 72),
STACK_USAGE("free_ldt_pgtables", 160),
STACK_USAGE("install_ldt", 24),
STACK_USAGE("load_mm_ldt", 0),
STACK_USAGE("free_ldt_struct", 8),
STACK_USAGE("ldt_dup_context", 184),
STACK_USAGE("destroy_context_ldt", 16),
STACK_USAGE("ldt_arch_exit_mmap", 160),
STACK_USAGE("write_ldt", 88),
STACK_USAGE("__ia32_sys_modify_ldt", 0),
STACK_USAGE("__se_sys_modify_ldt", 48),
STACK_USAGE("__x64_sys_modify_ldt", 0),
STACK_USAGE("switch_ldt", 16),
STACK_USAGE("alloc_pgt_page", 8),
STACK_USAGE("machine_kexec_prepare", 136),
STACK_USAGE("machine_kexec_cleanup", 8),
STACK_USAGE("machine_kexec", 104),
STACK_USAGE("mem_region_callback", 0),
STACK_USAGE("kexec_mark_crashkres", 16),
STACK_USAGE("arch_kexec_protect_crashkres", 0),
STACK_USAGE("arch_kexec_unprotect_crashkres", 0),
STACK_USAGE("arch_kexec_post_alloc_pages", 0),
STACK_USAGE("arch_kexec_pre_free_pages", 0),
STACK_USAGE("fam10h_check_enable_mmcfg", 216),
STACK_USAGE("set_check_enable_amd_mmconf", 0),
STACK_USAGE("check_enable_amd_mmconf_dmi", 0),
STACK_USAGE("cmp_range", 0),
STACK_USAGE("apply_relocate_add", 96),
STACK_USAGE("module_finalize", 104),
STACK_USAGE("module_arch_cleanup", 0),
STACK_USAGE("module_alloc", 0),
STACK_USAGE("MP_ioapic_info", 32),
STACK_USAGE("print_mp_irq_info", 0),
STACK_USAGE("MP_lintsrc_info", 0),
STACK_USAGE("smp_check_mpc", 24),
STACK_USAGE("smp_dump_mptable", 16),
STACK_USAGE("smp_read_mpc", 72),
STACK_USAGE("construct_default_ioirq_mptable", 64),
STACK_USAGE("construct_ioapic_table", 32),
STACK_USAGE("construct_default_ISA_mptable", 64),
STACK_USAGE("get_mpc_size", 16),
STACK_USAGE("check_physptr", 40),
STACK_USAGE("default_get_smp_config", 16),
STACK_USAGE("MP_processor_info", 16),
STACK_USAGE("smp_reserve_memory", 8),
STACK_USAGE("smp_scan_config", 32),
STACK_USAGE("default_find_smp_config", 0),
STACK_USAGE("get_MP_intsrc_index", 0),
STACK_USAGE("check_irq_src", 16),
STACK_USAGE("check_slot", 0),
STACK_USAGE("replace_intsrc_all", 80),
STACK_USAGE("MP_bus_info", 24),
STACK_USAGE("update_mptable_setup", 0),
STACK_USAGE("parse_alloc_mptable_opt", 16),
STACK_USAGE("e820__memblock_alloc_reserved_mpc_new", 0),
STACK_USAGE("update_mp_table", 88),
STACK_USAGE("msr_write", 64),
STACK_USAGE("msr_ioctl", 72),
STACK_USAGE("msr_open", 8),
STACK_USAGE("msr_device_create", 8),
STACK_USAGE("msr_device_destroy", 0),
STACK_USAGE("msr_devnode", 0),
STACK_USAGE("msr_init", 16),
STACK_USAGE("msr_exit", 0),
STACK_USAGE("set_allow_writes", 8),
STACK_USAGE("get_allow_writes", 0),
STACK_USAGE("msr_read", 64),
STACK_USAGE("__bpf_trace_nmi_handler", 0),
STACK_USAGE("__traceiter_nmi_handler", 32),
STACK_USAGE("perf_trace_nmi_handler", 72),
STACK_USAGE("trace_event_raw_event_nmi_handler", 88),
STACK_USAGE("trace_raw_output_nmi_handler", 24),
STACK_USAGE("nmi_handle", 64),
STACK_USAGE("__register_nmi_handler", 32),
STACK_USAGE("unregister_nmi_handler", 48),
STACK_USAGE("pci_serr_error", 24),
STACK_USAGE("io_check_error", 24),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("unknown_nmi_error", 24),
STACK_USAGE("default_do_nmi", 32),
STACK_USAGE("exc_nmi", 24),
STACK_USAGE("exc_nmi_noist", 0),
STACK_USAGE("stop_nmi", 0),
STACK_USAGE("restart_nmi", 0),
STACK_USAGE("local_touch_nmi", 0),
STACK_USAGE("setup_unknown_nmi_panic", 0),
STACK_USAGE("nmi_warning_debugfs", 0),
STACK_USAGE("__native_queued_spin_unlock", 0),
STACK_USAGE("pv_is_native_spin_unlock", 0),
STACK_USAGE("__native_vcpu_is_preempted", 0),
STACK_USAGE("pv_is_native_vcpu_is_preempted", 0),
STACK_USAGE("paravirt_set_cap", 0),
STACK_USAGE("native_steal_clock", 0),
STACK_USAGE("paravirt_set_sched_clock", 0),
STACK_USAGE("paravirt_disable_iospace", 0),
STACK_USAGE("paravirt_enter_lazy_mmu", 0),
STACK_USAGE("paravirt_leave_lazy_mmu", 0),
STACK_USAGE("paravirt_flush_lazy_mmu", 0),
STACK_USAGE("paravirt_get_lazy_mode", 0),
STACK_USAGE("tlb_remove_page", 8),
STACK_USAGE("default_banner", 0),
STACK_USAGE("paravirt_BUG", 0),
STACK_USAGE("native_pv_lock_init", 0),
STACK_USAGE("paravirt_patch", 0),
STACK_USAGE("pci_iommu_init", 16),
STACK_USAGE("via_no_dac_cb", 0),
STACK_USAGE("via_no_dac", 8),
STACK_USAGE("pci_iommu_alloc", 16),
STACK_USAGE("iommu_setup", 24),
STACK_USAGE("sort_iommu_table", 88),
STACK_USAGE("check_iommu_entries", 0),
STACK_USAGE("pci_swiotlb_detect_override", 0),
STACK_USAGE("pci_swiotlb_detect_4gb", 0),
STACK_USAGE("pci_swiotlb_init", 0),
STACK_USAGE("pci_swiotlb_late_init", 0),
STACK_USAGE("add_pcspkr", 104),
STACK_USAGE("perf_reg_validate", 0),
STACK_USAGE("perf_reg_abi", 0),
STACK_USAGE("perf_get_regs_user", 16),
STACK_USAGE("perf_reg_value", 0),
STACK_USAGE("x86_pnpbios_disabled", 0),
STACK_USAGE("x86_early_init_platform_quirks", 0),
STACK_USAGE("find_oprom", 72),
STACK_USAGE("pci_map_biosrom", 0),
STACK_USAGE("pci_unmap_biosrom", 0),
STACK_USAGE("pci_biosrom_size", 0),
STACK_USAGE("romchecksum", 48),
STACK_USAGE("probe_roms", 64),
STACK_USAGE("arch_release_task_struct", 0),
STACK_USAGE("exit_thread", 8),
STACK_USAGE("copy_thread", 64),
STACK_USAGE("flush_thread", 8),
STACK_USAGE("disable_TSC", 16),
STACK_USAGE("get_tsc_mode", 16),
STACK_USAGE("set_tsc_mode", 16),
STACK_USAGE("force_reload_TR", 32),
STACK_USAGE("enable_cpuid", 0),
STACK_USAGE("arch_setup_new_exec", 8),
STACK_USAGE("native_tss_update_io_bitmap", 40),
STACK_USAGE("speculative_store_bypass_ht_init", 32),
STACK_USAGE("speculation_ctrl_update_tif", 0),
STACK_USAGE("speculation_ctrl_update", 72),
STACK_USAGE("speculation_ctrl_update_current", 0),
STACK_USAGE("__switch_to_xtra", 56),
STACK_USAGE("arch_cpu_idle_enter", 0),
STACK_USAGE("arch_cpu_idle_dead", 0),
STACK_USAGE("arch_cpu_idle", 0),
STACK_USAGE("default_idle", 0),
STACK_USAGE("stop_this_cpu", 16),
STACK_USAGE("amd_e400_idle", 0),
STACK_USAGE("mwait_idle", 0),
STACK_USAGE("select_idle_routine", 16),
STACK_USAGE("arch_dup_task_struct", 8),
STACK_USAGE("amd_e400_c1e_apic_setup", 16),
STACK_USAGE("arch_post_acpi_subsys_init", 8),
STACK_USAGE("idle_setup", 8),
STACK_USAGE("arch_align_stack", 8),
STACK_USAGE("arch_randomize_brk", 0),
STACK_USAGE("__get_wchan", 152),
STACK_USAGE("do_arch_prctl_common", 0),
STACK_USAGE("native_read_msr", 8),
STACK_USAGE("release_thread", 0),
STACK_USAGE("__rdgsbase_inactive", 0),
STACK_USAGE("__wrgsbase_inactive", 0),
STACK_USAGE("wrmsrl", 0),
STACK_USAGE("current_save_fsgs", 32),
STACK_USAGE("x86_fsgsbase_read_task", 24),
STACK_USAGE("x86_gsbase_read_cpu_inactive", 24),
STACK_USAGE("x86_gsbase_write_cpu_inactive", 24),
STACK_USAGE("x86_fsbase_read_task", 24),
STACK_USAGE("x86_gsbase_read_task", 24),
STACK_USAGE("x86_fsbase_write_task", 0),
STACK_USAGE("x86_gsbase_write_task", 0),
STACK_USAGE("start_thread_common", 56),
STACK_USAGE("start_thread", 0),
STACK_USAGE("compat_start_thread", 0),
STACK_USAGE("__switch_to", 72),
STACK_USAGE("set_personality_64bit", 0),
STACK_USAGE("__show_regs", 80),
STACK_USAGE("set_personality_ia32", 0),
STACK_USAGE("do_arch_prctl_64", 32),
STACK_USAGE("__ia32_sys_arch_prctl", 24),
STACK_USAGE("__x64_sys_arch_prctl", 24),
STACK_USAGE("__ia32_compat_sys_arch_prctl", 0),
STACK_USAGE("KSTK_ESP", 0),
STACK_USAGE("genregs32_get", 64),
STACK_USAGE("genregs32_set", 40),
STACK_USAGE("regs_query_register_offset", 8),
STACK_USAGE("compat_arch_ptrace", 24),
STACK_USAGE("regs_query_register_name", 0),
STACK_USAGE("update_regset_xstate_info", 0),
STACK_USAGE("task_user_regset_view", 0),
STACK_USAGE("send_sigtrap", 0),
STACK_USAGE("user_single_step_report", 0),
STACK_USAGE("putreg", 0),
STACK_USAGE("getreg", 0),
STACK_USAGE("genregs_get", 56),
STACK_USAGE("genregs_set", 40),
STACK_USAGE("ptrace_triggered", 0),
STACK_USAGE("ptrace_get_debugreg", 0),
STACK_USAGE("ptrace_set_debugreg", 240),
STACK_USAGE("ioperm_active", 0),
STACK_USAGE("ioperm_get", 16),
STACK_USAGE("ptrace_disable", 0),
STACK_USAGE("arch_ptrace", 16),
STACK_USAGE("putreg32", 8),
STACK_USAGE("getreg32", 0),
STACK_USAGE("pvclock_read_wallclock", 24),
STACK_USAGE("pvclock_set_pvti_cpu0_va", 0),
STACK_USAGE("pvclock_get_pvti_cpu0_va", 0),
STACK_USAGE("pvclock_set_flags", 0),
STACK_USAGE("pvclock_tsc_khz", 0),
STACK_USAGE("pvclock_touch_watchdogs", 0),
STACK_USAGE("pvclock_resume", 0),
STACK_USAGE("pvclock_read_flags", 0),
STACK_USAGE("pvclock_clocksource_read", 32),
STACK_USAGE("quirk_intel_irqbalance", 24),
STACK_USAGE("old_ich_force_enable_hpet", 24),
STACK_USAGE("old_ich_force_enable_hpet_user", 0),
STACK_USAGE("vt8237_force_enable_hpet", 24),
STACK_USAGE("ati_force_enable_hpet", 56),
STACK_USAGE("nvidia_force_enable_hpet", 24),
STACK_USAGE("force_hpet_resume", 24),
STACK_USAGE("e6xx_force_enable_hpet", 0),
STACK_USAGE("force_disable_hpet_msi", 0),
STACK_USAGE("quirk_amd_nb_node", 32),
STACK_USAGE("amd_disable_seq_and_redirect_scrub", 24),
STACK_USAGE("quirk_intel_brickland_xeon_ras_cap", 16),
STACK_USAGE("quirk_intel_purley_xeon_ras_cap", 24),
STACK_USAGE("early_platform_quirks", 0),
STACK_USAGE("ich_force_enable_hpet", 24),
STACK_USAGE("set_pci_reboot", 0),
STACK_USAGE("set_kbd_reboot", 0),
STACK_USAGE("reboot_init", 0),
STACK_USAGE("vmxoff_nmi", 16),
STACK_USAGE("mach_reboot_fixups", 0),
STACK_USAGE("native_machine_emergency_restart", 48),
STACK_USAGE("set_acpi_reboot", 0),
STACK_USAGE("native_machine_shutdown", 16),
STACK_USAGE("__cpu_emergency_vmxoff", 16),
STACK_USAGE("native_machine_restart", 0),
STACK_USAGE("native_machine_halt", 0),
STACK_USAGE("native_machine_power_off", 0),
STACK_USAGE("set_bios_reboot", 0),
STACK_USAGE("machine_power_off", 0),
STACK_USAGE("machine_shutdown", 0),
STACK_USAGE("machine_emergency_restart", 0),
STACK_USAGE("machine_restart", 0),
STACK_USAGE("machine_halt", 0),
STACK_USAGE("machine_crash_shutdown", 0),
STACK_USAGE("crash_nmi_callback", 32),
STACK_USAGE("nmi_shootdown_cpus", 24),
STACK_USAGE("run_crash_ipi_callback", 32),
STACK_USAGE("nmi_panic_self_stop", 24),
STACK_USAGE("set_efi_reboot", 8),
STACK_USAGE("machine_real_restart", 16),
STACK_USAGE("arch_remove_reservations", 8),
STACK_USAGE("arch_rethook_fixup_return", 0),
STACK_USAGE("arch_rethook_prepare", 0),
STACK_USAGE("arch_rethook_trampoline_callback", 8),
STACK_USAGE("rtc_cmos_read", 0),
STACK_USAGE("rtc_cmos_write", 0),
STACK_USAGE("update_persistent_clock64", 24),
STACK_USAGE("read_persistent_clock64", 0),
STACK_USAGE("add_rtc_cmos", 32),
STACK_USAGE("mach_set_rtc_mmss", 64),
STACK_USAGE("mach_get_cmos_time", 64),
STACK_USAGE("register_kernel_offset_dumper", 0),
STACK_USAGE("extend_brk", 0),
STACK_USAGE("reserve_brk", 0),
STACK_USAGE("relocate_initrd", 32),
STACK_USAGE("early_reserve_initrd", 0),
STACK_USAGE("reserve_initrd", 32),
STACK_USAGE("parse_setup_data", 32),
STACK_USAGE("memblock_x86_reserve_range_setup_data", 32),
STACK_USAGE("reserve_crashkernel_low", 48),
STACK_USAGE("reserve_crashkernel", 32),
STACK_USAGE("reserve_standard_io_resources", 8),
STACK_USAGE("snb_gfx_workaround_needed", 16),
STACK_USAGE("trim_snb_memory", 16),
STACK_USAGE("trim_bios_range", 0),
STACK_USAGE("__brk_reservation_fn_dmi_alloc__", 0),
STACK_USAGE("e820_add_kernel_range", 16),
STACK_USAGE("early_reserve_memory", 0),
STACK_USAGE("dump_kernel_offset", 0),
STACK_USAGE("setup_arch", 8),
STACK_USAGE("pcpu_populate_pte", 0),
STACK_USAGE("setup_per_cpu_areas", 16),
STACK_USAGE("pcpu_cpu_distance", 0),
STACK_USAGE("pcpu_cpu_to_node", 0),
STACK_USAGE("__do_sys_rt_sigreturn", 320),
STACK_USAGE("init_sigframe_size", 0),
STACK_USAGE("get_sigframe_size", 0),
STACK_USAGE("arch_do_signal_or_restart", 192),
STACK_USAGE("signal_fault", 32),
STACK_USAGE("strict_sas_size", 0),
STACK_USAGE("sigaltstack_size_valid", 24),
STACK_USAGE("sigaction_compat_abi", 0),
STACK_USAGE("smp_stop_nmi_callback", 0),
STACK_USAGE("__sysvec_reboot", 0),
STACK_USAGE("sysvec_reboot", 16),
STACK_USAGE("native_stop_other_cpus", 32),
STACK_USAGE("sysvec_reschedule_ipi", 16),
STACK_USAGE("__sysvec_call_function", 0),
STACK_USAGE("sysvec_call_function", 16),
STACK_USAGE("__sysvec_call_function_single", 0),
STACK_USAGE("sysvec_call_function_single", 16),
STACK_USAGE("nonmi_ipi_setup", 0),
STACK_USAGE("kvm_set_cpu_l1tf_flush_l1d", 0),
STACK_USAGE("cpu_emergency_vmxoff", 24),
STACK_USAGE("common_cpu_up", 24),
STACK_USAGE("native_cpu_up", 72),
STACK_USAGE("arch_update_cpu_topology", 0),
STACK_USAGE("arch_disable_smp_support", 0),
STACK_USAGE("disable_smp", 8),
STACK_USAGE("smp_sanity_check", 0),
STACK_USAGE("smp_cpu_index_default", 8),
STACK_USAGE("smp_prepare_cpus_common", 8),
STACK_USAGE("native_smp_prepare_cpus", 0),
STACK_USAGE("arch_thaw_secondary_cpus_begin", 0),
STACK_USAGE("arch_thaw_secondary_cpus_end", 0),
STACK_USAGE("native_smp_prepare_boot_cpu", 8),
STACK_USAGE("calculate_max_logical_packages", 0),
STACK_USAGE("native_smp_cpus_done", 8),
STACK_USAGE("_setup_possible_cpus", 16),
STACK_USAGE("prefill_possible_map", 16),
STACK_USAGE("smp_callin", 24),
STACK_USAGE("cpu_disable_common", 64),
STACK_USAGE("native_cpu_disable", 8),
STACK_USAGE("common_cpu_die", 16),
STACK_USAGE("native_cpu_die", 8),
STACK_USAGE("play_dead_common", 16),
STACK_USAGE("cond_wakeup_cpu0", 0),
STACK_USAGE("hlt_play_dead", 0),
STACK_USAGE("native_play_dead", 32),
STACK_USAGE("arch_set_max_freq_ratio", 0),
STACK_USAGE("skx_set_max_freq_ratio", 40),
STACK_USAGE("init_counter_refs", 16),
STACK_USAGE("init_freq_invariance", 48),
STACK_USAGE("disable_freq_invariance_workfn", 0),
STACK_USAGE("arch_scale_freq_tick", 16),
STACK_USAGE("start_secondary", 0),
STACK_USAGE("cpu_smt_mask", 0),
STACK_USAGE("cpu_cpu_mask", 0),
STACK_USAGE("topology_is_primary_thread", 0),
STACK_USAGE("topology_smt_supported", 0),
STACK_USAGE("topology_phys_to_logical_pkg", 24),
STACK_USAGE("topology_phys_to_logical_die", 32),
STACK_USAGE("topology_update_package_map", 24),
STACK_USAGE("topology_update_die_map", 48),
STACK_USAGE("smp_store_boot_cpu_info", 8),
STACK_USAGE("smp_store_cpu_info", 16),
STACK_USAGE("topology_sane", 16),
STACK_USAGE("match_smt", 0),
STACK_USAGE("x86_core_flags", 0),
STACK_USAGE("x86_smt_flags", 0),
STACK_USAGE("x86_cluster_flags", 0),
STACK_USAGE("set_cpu_sibling_map", 64),
STACK_USAGE("cpu_coregroup_mask", 0),
STACK_USAGE("cpu_clustergroup_mask", 0),
STACK_USAGE("__inquire_remote_apic", 16),
STACK_USAGE("cpu_init_udelay", 16),
STACK_USAGE("smp_quirk_init_udelay", 0),
STACK_USAGE("wakeup_secondary_cpu_via_nmi", 16),
STACK_USAGE("wakeup_cpu0_nmi", 0),
STACK_USAGE("arch_stack_walk_user", 40),
STACK_USAGE("arch_stack_walk", 168),
STACK_USAGE("arch_stack_walk_reliable", 168),
STACK_USAGE("arch_static_call_transform", 32),
STACK_USAGE("__static_call_transform", 0),
STACK_USAGE("convert_ip_to_linear", 24),
STACK_USAGE("set_task_blockstep", 40),
STACK_USAGE("enable_step", 80),
STACK_USAGE("user_enable_single_step", 0),
STACK_USAGE("user_enable_block_step", 0),
STACK_USAGE("user_disable_single_step", 8),
STACK_USAGE("__ia32_sys_ia32_sync_file_range", 0),
STACK_USAGE("__x64_sys_ia32_sync_file_range", 0),
STACK_USAGE("__ia32_sys_ia32_fadvise64", 0),
STACK_USAGE("__x64_sys_ia32_fadvise64", 0),
STACK_USAGE("__ia32_sys_ia32_fallocate", 0),
STACK_USAGE("__x64_sys_ia32_fallocate", 0),
STACK_USAGE("cp_stat64", 32),
STACK_USAGE("__ia32_compat_sys_ia32_stat64", 160),
STACK_USAGE("__ia32_compat_sys_ia32_lstat64", 160),
STACK_USAGE("__ia32_compat_sys_ia32_fstat64", 160),
STACK_USAGE("__ia32_compat_sys_ia32_fstatat64", 160),
STACK_USAGE("__ia32_compat_sys_ia32_mmap", 32),
STACK_USAGE("__ia32_compat_sys_ia32_clone", 112),
STACK_USAGE("__ia32_sys_ia32_truncate64", 0),
STACK_USAGE("__x64_sys_ia32_truncate64", 0),
STACK_USAGE("__ia32_sys_ia32_ftruncate64", 0),
STACK_USAGE("__x64_sys_ia32_ftruncate64", 0),
STACK_USAGE("__ia32_sys_ia32_pread64", 0),
STACK_USAGE("__x64_sys_ia32_pread64", 0),
STACK_USAGE("__ia32_sys_ia32_pwrite64", 0),
STACK_USAGE("__x64_sys_ia32_pwrite64", 0),
STACK_USAGE("__ia32_sys_ia32_fadvise64_64", 0),
STACK_USAGE("__x64_sys_ia32_fadvise64_64", 0),
STACK_USAGE("__ia32_sys_ia32_readahead", 0),
STACK_USAGE("__x64_sys_ia32_readahead", 0),
STACK_USAGE("arch_get_unmapped_area", 136),
STACK_USAGE("arch_get_unmapped_area_topdown", 120),
STACK_USAGE("align_vdso_addr", 0),
STACK_USAGE("control_va_addr_alignment", 8),
STACK_USAGE("__ia32_sys_mmap", 0),
STACK_USAGE("__x64_sys_mmap", 0),
STACK_USAGE("time_init", 0),
STACK_USAGE("clocksource_arch_init", 8),
STACK_USAGE("profile_pc", 16),
STACK_USAGE("timer_interrupt", 0),
STACK_USAGE("setup_default_timer_irq", 0),
STACK_USAGE("hpet_time_init", 0),
STACK_USAGE("x86_late_time_init", 0),
STACK_USAGE("do_set_thread_area", 72),
STACK_USAGE("__ia32_sys_set_thread_area", 0),
STACK_USAGE("__x64_sys_set_thread_area", 0),
STACK_USAGE("load_gs_index", 24),
STACK_USAGE("do_get_thread_area", 40),
STACK_USAGE("__ia32_sys_get_thread_area", 0),
STACK_USAGE("__x64_sys_get_thread_area", 0),
STACK_USAGE("regset_tls_active", 0),
STACK_USAGE("regset_tls_get", 72),
STACK_USAGE("regset_tls_set", 120),
STACK_USAGE("set_tls_desc", 40),
STACK_USAGE("arch_unregister_cpu", 0),
STACK_USAGE("topology_init", 8),
STACK_USAGE("enable_cpu0_hotplug", 0),
STACK_USAGE("arch_register_cpu", 24),
STACK_USAGE("trace_clock_x86_tsc", 0),
STACK_USAGE("trace_pagefault_reg", 0),
STACK_USAGE("trace_pagefault_unreg", 0),
STACK_USAGE("exc_debug", 64),
STACK_USAGE("noist_exc_debug", 56),
STACK_USAGE("math_error", 48),
STACK_USAGE("exc_coprocessor_error", 16),
STACK_USAGE("exc_simd_coprocessor_error", 16),
STACK_USAGE("exc_spurious_interrupt_bug", 8),
STACK_USAGE("exc_device_not_available", 48),
STACK_USAGE("trap_init", 0),
STACK_USAGE("do_trap", 72),
STACK_USAGE("do_error_trap", 64),
STACK_USAGE("exc_divide_error", 16),
STACK_USAGE("exc_overflow", 16),
STACK_USAGE("exc_control_protection", 24),
STACK_USAGE("ibt_selftest", 0),
STACK_USAGE("ibt_setup", 8),
STACK_USAGE("handle_invalid_op", 8),
STACK_USAGE("handle_bug", 8),
STACK_USAGE("exc_invalid_op", 16),
STACK_USAGE("exc_coproc_segment_overrun", 16),
STACK_USAGE("exc_invalid_tss", 24),
STACK_USAGE("exc_segment_not_present", 24),
STACK_USAGE("exc_stack_segment", 24),
STACK_USAGE("exc_alignment_check", 40),
STACK_USAGE("handle_stack_overflow", 32),
STACK_USAGE("exc_double_fault", 64),
STACK_USAGE("exc_bounds", 32),
STACK_USAGE("get_kernel_gp_address", 160),
STACK_USAGE("exc_general_protection", 168),
STACK_USAGE("do_int3", 8),
STACK_USAGE("do_int3_user", 24),
STACK_USAGE("exc_int3", 16),
STACK_USAGE("sync_regs", 8),
STACK_USAGE("is_valid_bugaddr", 0),
STACK_USAGE("fixup_bad_iret", 216),
STACK_USAGE("cpufreq_register_tsc_scaling", 0),
STACK_USAGE("detect_art", 8),
STACK_USAGE("tsc_resume", 0),
STACK_USAGE("read_tsc", 0),
STACK_USAGE("tsc_cs_mark_unstable", 0),
STACK_USAGE("tsc_cs_tick_stable", 0),
STACK_USAGE("tsc_cs_enable", 0),
STACK_USAGE("mark_tsc_unstable", 8),
STACK_USAGE("check_system_tsc_reliable", 0),
STACK_USAGE("unsynchronized_tsc", 8),
STACK_USAGE("convert_art_to_tsc", 0),
STACK_USAGE("convert_art_ns_to_tsc", 0),
STACK_USAGE("__set_cyc2ns_scale", 64),
STACK_USAGE("tsc_refine_calibration_work", 56),
STACK_USAGE("init_tsc_clocksource", 0),
STACK_USAGE("determine_cpu_tsc_frequencies", 8),
STACK_USAGE("tsc_enable_sched_clock", 0),
STACK_USAGE("tsc_early_init", 0),
STACK_USAGE("tsc_init", 0),
STACK_USAGE("calibrate_delay_is_known", 0),
STACK_USAGE("cyc2ns_init_boot_cpu", 16),
STACK_USAGE("cyc2ns_init_secondary_cpus", 48),
STACK_USAGE("native_sched_clock", 0),
STACK_USAGE("native_sched_clock_from_tsc", 0),
STACK_USAGE("sched_clock", 0),
STACK_USAGE("using_native_sched_clock", 0),
STACK_USAGE("check_tsc_unstable", 0),
STACK_USAGE("notsc_setup", 0),
STACK_USAGE("tsc_setup", 8),
STACK_USAGE("tsc_read_refs", 32),
STACK_USAGE("native_calibrate_tsc", 8),
STACK_USAGE("tsc_early_khz_setup", 0),
STACK_USAGE("cyc2ns_read_begin", 0),
STACK_USAGE("pit_hpet_ptimer_calibrate_cpu", 128),
STACK_USAGE("native_calibrate_cpu_early", 40),
STACK_USAGE("cyc2ns_read_end", 0),
STACK_USAGE("native_calibrate_cpu", 0),
STACK_USAGE("recalibrate_cpu_khz", 0),
STACK_USAGE("tsc_save_sched_clock_state", 0),
STACK_USAGE("tsc_restore_sched_clock_state", 40),
STACK_USAGE("time_cpufreq_notifier", 56),
STACK_USAGE("cpu_khz_from_msr", 24),
STACK_USAGE("start_sync_check_timer", 0),
STACK_USAGE("tsc_store_and_check_tsc_adjust", 32),
STACK_USAGE("check_tsc_warp", 72),
STACK_USAGE("check_tsc_sync_source", 32),
STACK_USAGE("mark_tsc_async_resets", 0),
STACK_USAGE("check_tsc_sync_target", 40),
STACK_USAGE("queued_spin_lock_slowpath", 0),
STACK_USAGE("tsc_verify_tsc_adjust", 24),
STACK_USAGE("tsc_sync_check_timer_fn", 0),
STACK_USAGE("umip_printk", 136),
STACK_USAGE("force_sig_info_umip_fault", 16),
STACK_USAGE("fixup_umip_exception", 200),
STACK_USAGE("unwind_recover_ret_addr", 16),
STACK_USAGE("orc_sort_swap", 16),
STACK_USAGE("orc_sort_cmp", 0),
STACK_USAGE("unwind_module_init", 40),
STACK_USAGE("unwind_init", 40),
STACK_USAGE("unwind_get_return_address", 8),
STACK_USAGE("unwind_get_return_address_ptr", 0),
STACK_USAGE("deref_stack_reg", 24),
STACK_USAGE("unwind_next_frame", 88),
STACK_USAGE("__unwind_start", 32),
STACK_USAGE("arch_uprobe_abort_xol", 24),
STACK_USAGE("arch_uprobe_skip_sstep", 16),
STACK_USAGE("arch_uretprobe_hijack_return_addr", 48),
STACK_USAGE("arch_uretprobe_is_alive", 0),
STACK_USAGE("default_pre_xol_op", 0),
STACK_USAGE("default_post_xol_op", 48),
STACK_USAGE("default_abort_op", 0),
STACK_USAGE("branch_emulate_op", 48),
STACK_USAGE("push_emulate_op", 40),
STACK_USAGE("branch_post_xol_op", 0),
STACK_USAGE("arch_uprobe_analyze_insn", 152),
STACK_USAGE("arch_uprobe_pre_xol", 32),
STACK_USAGE("arch_uprobe_xol_was_trapped", 0),
STACK_USAGE("arch_uprobe_post_xol", 32),
STACK_USAGE("arch_uprobe_exception_notify", 0),
STACK_USAGE("apicid_phys_pkg_id", 8),
STACK_USAGE("vsmp_apic_post_init", 0),
STACK_USAGE("vsmp_init", 0),
STACK_USAGE("set_vsmp_ctl", 24),
STACK_USAGE("detect_vsmp_box", 0),
STACK_USAGE("vsmp_cap_cpus", 16),
STACK_USAGE("default_nmi_init", 0),
STACK_USAGE("enc_status_change_prepare_noop", 0),
STACK_USAGE("enc_status_change_finish_noop", 0),
STACK_USAGE("enc_tlb_flush_required_noop", 0),
STACK_USAGE("enc_cache_flush_required_noop", 0),
STACK_USAGE("default_get_nmi_reason", 0),
STACK_USAGE("x86_init_noop", 0),
STACK_USAGE("x86_init_uint_noop", 0),
STACK_USAGE("iommu_init_noop", 0),
STACK_USAGE("iommu_shutdown_noop", 0),
STACK_USAGE("bool_x86_init_noop", 0),
STACK_USAGE("x86_op_int_noop", 0),
STACK_USAGE("x86_wallclock_init", 0),
STACK_USAGE("is_ISA_range", 0),
STACK_USAGE("kvm_check_async_pf_completion", 72),
STACK_USAGE("kvm_setup_async_pf", 40),
STACK_USAGE("kvm_async_pf_wakeup_all", 48),
STACK_USAGE("kvm_async_pf_init", 8),
STACK_USAGE("kvm_async_pf_deinit", 0),
STACK_USAGE("kvm_async_pf_vcpu_init", 0),
STACK_USAGE("async_pf_execute", 80),
STACK_USAGE("kvm_clear_async_pf_completion_queue", 56),
STACK_USAGE("kvm_stats_read", 80),
STACK_USAGE("kvm_coalesced_mmio_init", 16),
STACK_USAGE("kvm_coalesced_mmio_free", 0),
STACK_USAGE("kvm_vm_ioctl_register_coalesced_mmio", 48),
STACK_USAGE("kvm_vm_ioctl_unregister_coalesced_mmio", 56),
STACK_USAGE("coalesced_mmio_write", 48),
STACK_USAGE("coalesced_mmio_destructor", 0),
STACK_USAGE("kvm_cpu_dirty_log_size", 0),
STACK_USAGE("kvm_dirty_ring_push", 0),
STACK_USAGE("kvm_dirty_ring_get_page", 0),
STACK_USAGE("kvm_dirty_ring_free", 8),
STACK_USAGE("kvm_dirty_ring_get_rsvd_entries", 0),
STACK_USAGE("kvm_dirty_ring_soft_full", 0),
STACK_USAGE("kvm_reset_dirty_gfn", 56),
STACK_USAGE("kvm_dirty_ring_alloc", 24),
STACK_USAGE("kvm_dirty_ring_reset", 48),
STACK_USAGE("irqfd_shutdown", 32),
STACK_USAGE("kvm_arch_set_irq_inatomic", 0),
STACK_USAGE("irqfd_wakeup", 168),
STACK_USAGE("irqfd_ptable_queue_proc", 0),
STACK_USAGE("irqfd_update", 248),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("kvm_arch_irq_bypass_stop", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("kvm_arch_irq_bypass_start", 0),
STACK_USAGE("kvm_arch_update_irqfd_routing", 0),
STACK_USAGE("kvm_arch_irqfd_route_changed", 0),
STACK_USAGE("kvm_arch_irqfd_allowed", 0),
STACK_USAGE("irqfd_inject", 16),
STACK_USAGE("kvm_irq_has_notifier", 48),
STACK_USAGE("kvm_notify_acked_gsi", 16),
STACK_USAGE("kvm_notify_acked_irq", 48),
STACK_USAGE("kvm_register_irq_ack_notifier", 24),
STACK_USAGE("kvm_unregister_irq_ack_notifier", 24),
STACK_USAGE("kvm_eventfd_init", 8),
STACK_USAGE("kvm_irqfd", 112),
STACK_USAGE("kvm_irqfd_release", 24),
STACK_USAGE("kvm_irq_routing_update", 112),
STACK_USAGE("irqfd_resampler_ack", 40),
STACK_USAGE("kvm_irqfd_init", 8),
STACK_USAGE("kvm_irqfd_exit", 0),
STACK_USAGE("ioeventfd_write", 0),
STACK_USAGE("ioeventfd_destructor", 16),
STACK_USAGE("kvm_assign_ioeventfd_idx", 64),
STACK_USAGE("kvm_deassign_ioeventfd_idx", 56),
STACK_USAGE("irqfd_resampler_shutdown", 48),
STACK_USAGE("kvm_ioeventfd", 32),
STACK_USAGE("kvm_free_irq_routing", 40),
STACK_USAGE("kvm_arch_irq_routing_update", 0),
STACK_USAGE("kvm_arch_can_set_irq_routing", 0),
STACK_USAGE("kvm_set_irq_routing", 64),
STACK_USAGE("kvm_irq_map_gsi", 32),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("kvm_irq_map_chip_pin", 32),
STACK_USAGE("kvm_send_userspace_msi", 72),
STACK_USAGE("kvm_set_irq", 264),
STACK_USAGE("kvm_arch_post_init_vm", 0),
STACK_USAGE("kvm_arch_pre_destroy_vm", 0),
STACK_USAGE("kvm_arch_create_vm_debugfs", 0),
STACK_USAGE("put_page", 0),
STACK_USAGE("__bpf_trace_kvm_ioapic_delayed_eoi_inj", 0),
STACK_USAGE("__traceiter_kvm_ioapic_delayed_eoi_inj", 16),
STACK_USAGE("perf_trace_kvm_ioapic_delayed_eoi_inj", 56),
STACK_USAGE("trace_event_raw_event_kvm_ioapic_delayed_eoi_inj", 72),
STACK_USAGE("trace_raw_output_kvm_ioapic_delayed_eoi_inj", 40),
STACK_USAGE("kvm_get_kvm", 0),
STACK_USAGE("kvm_get_kvm_safe", 8),
STACK_USAGE("kvm_put_kvm", 72),
STACK_USAGE("kvm_put_kvm_no_destroy", 0),
STACK_USAGE("kvm_vm_release", 8),
STACK_USAGE("kvm_get_inactive_memslots", 24),
STACK_USAGE("kvm_replace_memslot", 48),
STACK_USAGE("__bpf_trace_kvm_msi_set_irq", 0),
STACK_USAGE("__traceiter_kvm_msi_set_irq", 24),
STACK_USAGE("perf_trace_kvm_msi_set_irq", 64),
STACK_USAGE("trace_event_raw_event_kvm_msi_set_irq", 80),
STACK_USAGE("trace_raw_output_kvm_msi_set_irq", 40),
STACK_USAGE("kvm_swap_active_memslots", 56),
STACK_USAGE("kvm_arch_mmu_notifier_invalidate_range", 0),
STACK_USAGE("kvm_arch_guest_memory_reclaimed", 0),
STACK_USAGE("kvm_is_zone_device_pfn", 0),
STACK_USAGE("kvm_set_memslot", 72),
STACK_USAGE("kvm_check_memslot_overlap", 56),
STACK_USAGE("__bpf_trace_kvm_ack_irq", 0),
STACK_USAGE("__traceiter_kvm_ack_irq", 24),
STACK_USAGE("perf_trace_kvm_ack_irq", 64),
STACK_USAGE("trace_event_raw_event_kvm_ack_irq", 80),
STACK_USAGE("trace_raw_output_kvm_ack_irq", 24),
STACK_USAGE("__kvm_set_memory_region", 80),
STACK_USAGE("kvm_is_reserved_pfn", 0),
STACK_USAGE("kvm_set_memory_region", 24),
STACK_USAGE("kvm_vm_ioctl_set_memory_region", 24),
STACK_USAGE("vcpu_load", 16),
STACK_USAGE("kvm_vm_ioctl_get_dirty_log", 80),
STACK_USAGE("__bpf_trace_kvm_mmio", 0),
STACK_USAGE("__traceiter_kvm_mmio", 40),
STACK_USAGE("perf_trace_kvm_mmio", 80),
STACK_USAGE("trace_event_raw_event_kvm_mmio", 96),
STACK_USAGE("trace_raw_output_kvm_mmio", 24),
STACK_USAGE("vcpu_put", 8),
STACK_USAGE("kvm_vm_ioctl_clear_dirty_log", 64),
STACK_USAGE("gfn_to_memslot", 24),
STACK_USAGE("kvm_vcpu_gfn_to_memslot", 32),
STACK_USAGE("kvm_is_visible_gfn", 0),
STACK_USAGE("kvm_vcpu_is_visible_gfn", 0),
STACK_USAGE("__bpf_trace_kvm_userspace_exit", 0),
STACK_USAGE("__traceiter_kvm_userspace_exit", 24),
STACK_USAGE("perf_trace_kvm_userspace_exit", 64),
STACK_USAGE("trace_event_raw_event_kvm_userspace_exit", 80),
STACK_USAGE("trace_kvm_userspace_exit", 0),
STACK_USAGE("trace_raw_output_kvm_userspace_exit", 24),
STACK_USAGE("kvm_host_page_size", 32),
STACK_USAGE("gfn_to_hva_memslot", 8),
STACK_USAGE("gfn_to_hva", 16),
STACK_USAGE("kvm_vcpu_gfn_to_hva", 16),
STACK_USAGE("gfn_to_hva_memslot_prot", 8),
STACK_USAGE("gfn_to_hva_prot", 24),
STACK_USAGE("kvm_vcpu_gfn_to_hva_prot", 24),
STACK_USAGE("ack_flush", 0),
STACK_USAGE("__bpf_trace_kvm_fpu", 0),
STACK_USAGE("__traceiter_kvm_fpu", 16),
STACK_USAGE("perf_trace_kvm_fpu", 56),
STACK_USAGE("trace_event_raw_event_kvm_fpu", 72),
STACK_USAGE("trace_raw_output_kvm_fpu", 24),
STACK_USAGE("hva_to_pfn", 104),
STACK_USAGE("__bpf_trace_kvm_async_get_page_class", 0),
STACK_USAGE("perf_trace_kvm_async_get_page_class", 64),
STACK_USAGE("trace_event_raw_event_kvm_async_get_page_class", 80),
STACK_USAGE("trace_raw_output_kvm_async_get_page_class", 24),
STACK_USAGE("__gfn_to_pfn_memslot", 8),
STACK_USAGE("gfn_to_pfn_prot", 32),
STACK_USAGE("gfn_to_pfn_memslot", 8),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("gfn_to_pfn_memslot_atomic", 32),
STACK_USAGE("kvm_vcpu_gfn_to_pfn_atomic", 32),
STACK_USAGE("gfn_to_pfn", 16),
STACK_USAGE("kvm_vcpu_gfn_to_pfn", 16),
STACK_USAGE("gfn_to_page_many_atomic", 8),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("gfn_to_page", 24),
STACK_USAGE("kvm_release_pfn", 8),
STACK_USAGE("kvm_vcpu_map", 40),
STACK_USAGE("kvm_vcpu_unmap", 32),
STACK_USAGE("__traceiter_kvm_try_async_get_page", 24),
STACK_USAGE("kvm_vcpu_gfn_to_page", 24),
STACK_USAGE("kvm_release_page_clean", 8),
STACK_USAGE("kvm_release_pfn_clean", 8),
STACK_USAGE("kvm_release_page_dirty", 0),
STACK_USAGE("kvm_release_pfn_dirty", 8),
STACK_USAGE("kvm_make_vcpus_request_mask", 80),
STACK_USAGE("kvm_set_pfn_dirty", 8),
STACK_USAGE("kvm_set_pfn_accessed", 8),
STACK_USAGE("__traceiter_kvm_async_pf_doublefault", 24),
STACK_USAGE("kvm_read_guest_page", 48),
STACK_USAGE("kvm_vcpu_read_guest_page", 48),
STACK_USAGE("kvm_read_guest", 64),
STACK_USAGE("kvm_vcpu_read_guest", 64),
STACK_USAGE("__bpf_trace_kvm_async_pf_nopresent_ready", 0),
STACK_USAGE("perf_trace_kvm_async_pf_nopresent_ready", 64),
STACK_USAGE("trace_event_raw_event_kvm_async_pf_nopresent_ready", 80),
STACK_USAGE("trace_raw_output_kvm_async_pf_nopresent_ready", 24),
STACK_USAGE("kvm_vcpu_read_guest_atomic", 40),
STACK_USAGE("kvm_write_guest_page", 72),
STACK_USAGE("kvm_vcpu_write_guest_page", 72),
STACK_USAGE("kvm_write_guest", 40),
STACK_USAGE("kvm_vcpu_write_guest", 40),
STACK_USAGE("__kvm_gfn_to_hva_cache_init", 40),
STACK_USAGE("kvm_gfn_to_hva_cache_init", 40),
STACK_USAGE("kvm_write_guest_offset_cached", 64),
STACK_USAGE("kvm_make_all_cpus_request_except", 80),
STACK_USAGE("kvm_write_guest_cached", 0),
STACK_USAGE("__traceiter_kvm_async_pf_not_present", 24),
STACK_USAGE("kvm_read_guest_offset_cached", 64),
STACK_USAGE("kvm_read_guest_cached", 0),
STACK_USAGE("kvm_clear_guest", 40),
STACK_USAGE("mark_page_dirty_in_slot", 32),
STACK_USAGE("__traceiter_kvm_async_pf_ready", 24),
STACK_USAGE("mark_page_dirty", 16),
STACK_USAGE("kvm_vcpu_mark_page_dirty", 16),
STACK_USAGE("kvm_sigset_activate", 0),
STACK_USAGE("kvm_sigset_deactivate", 8),
STACK_USAGE("__bpf_trace_kvm_async_pf_completed", 0),
STACK_USAGE("__traceiter_kvm_async_pf_completed", 24),
STACK_USAGE("perf_trace_kvm_async_pf_completed", 64),
STACK_USAGE("trace_event_raw_event_kvm_async_pf_completed", 80),
STACK_USAGE("trace_raw_output_kvm_async_pf_completed", 24),
STACK_USAGE("kvm_vcpu_check_block", 32),
STACK_USAGE("kvm_vcpu_block", 32),
STACK_USAGE("kvm_make_all_cpus_request", 0),
STACK_USAGE("kvm_vcpu_halt", 80),
STACK_USAGE("kvm_flush_remote_tlbs", 8),
STACK_USAGE("kvm_vcpu_wake_up", 8),
STACK_USAGE("kvm_vcpu_kick", 16),
STACK_USAGE("__bpf_trace_kvm_halt_poll_ns", 0),
STACK_USAGE("__traceiter_kvm_halt_poll_ns", 40),
STACK_USAGE("perf_trace_kvm_halt_poll_ns", 72),
STACK_USAGE("trace_event_raw_event_kvm_halt_poll_ns", 96),
STACK_USAGE("trace_kvm_halt_poll_ns", 0),
STACK_USAGE("trace_raw_output_kvm_halt_poll_ns", 24),
STACK_USAGE("kvm_vcpu_yield_to", 16),
STACK_USAGE("kvm_arch_dy_runnable", 0),
STACK_USAGE("kvm_arch_dy_has_pending_interrupt", 0),
STACK_USAGE("kvm_vcpu_on_spin", 80),
STACK_USAGE("kvm_vcpu_fault", 8),
STACK_USAGE("kvm_vcpu_mmap", 0),
STACK_USAGE("kvm_vcpu_release", 0),
STACK_USAGE("create_vcpu_fd", 56),
STACK_USAGE("mmu_memory_cache_alloc_obj", 0),
STACK_USAGE("kvm_create_vcpu_debugfs", 56),
STACK_USAGE("kvm_vm_ioctl_create_vcpu", 48),
STACK_USAGE("__bpf_trace_kvm_dirty_ring_push", 0),
STACK_USAGE("__traceiter_kvm_dirty_ring_push", 32),
STACK_USAGE("perf_trace_kvm_dirty_ring_push", 72),
STACK_USAGE("trace_event_raw_event_kvm_dirty_ring_push", 88),
STACK_USAGE("trace_raw_output_kvm_dirty_ring_push", 24),
STACK_USAGE("kvm_mmu_topup_memory_cache", 24),
STACK_USAGE("kvm_vcpu_stats_read", 0),
STACK_USAGE("kvm_vcpu_ioctl_get_stats_fd", 72),
STACK_USAGE("kvm_vcpu_ioctl", 136),
STACK_USAGE("kvm_mmu_memory_cache_nr_free_objects", 0),
STACK_USAGE("kvm_mmu_free_memory_cache", 8),
STACK_USAGE("__bpf_trace_kvm_dirty_ring_reset", 0),
STACK_USAGE("__traceiter_kvm_dirty_ring_reset", 16),
STACK_USAGE("perf_trace_kvm_dirty_ring_reset", 56),
STACK_USAGE("trace_event_raw_event_kvm_dirty_ring_reset", 72),
STACK_USAGE("trace_raw_output_kvm_dirty_ring_reset", 24),
STACK_USAGE("kvm_vcpu_compat_ioctl", 48),
STACK_USAGE("kvm_mmu_memory_cache_alloc", 0),
STACK_USAGE("kvm_device_mmap", 0),
STACK_USAGE("kvm_device_ioctl", 48),
STACK_USAGE("kvm_device_release", 24),
STACK_USAGE("kvm_device_from_filp", 0),
STACK_USAGE("kvm_register_device_ops", 0),
STACK_USAGE("kvm_unregister_device_ops", 0),
STACK_USAGE("kvm_ioctl_create_device", 56),
STACK_USAGE("__bpf_trace_kvm_dirty_ring_exit", 0),
STACK_USAGE("__traceiter_kvm_dirty_ring_exit", 16),
STACK_USAGE("perf_trace_kvm_dirty_ring_exit", 56),
STACK_USAGE("trace_event_raw_event_kvm_dirty_ring_exit", 72),
STACK_USAGE("trace_raw_output_kvm_dirty_ring_exit", 24),
STACK_USAGE("kvm_vm_ioctl_check_extension_generic", 0),
STACK_USAGE("__bpf_trace_kvm_vcpu_wakeup", 0),
STACK_USAGE("__traceiter_kvm_vcpu_wakeup", 32),
STACK_USAGE("perf_trace_kvm_vcpu_wakeup", 72),
STACK_USAGE("trace_event_raw_event_kvm_vcpu_wakeup", 88),
STACK_USAGE("trace_raw_output_kvm_vcpu_wakeup", 24),
STACK_USAGE("kvm_vm_ioctl_reset_dirty_pages", 56),
STACK_USAGE("__bpf_trace_kvm_unmap_hva_range", 0),
STACK_USAGE("__traceiter_kvm_unmap_hva_range", 24),
STACK_USAGE("perf_trace_kvm_unmap_hva_range", 64),
STACK_USAGE("trace_event_raw_event_kvm_unmap_hva_range", 80),
STACK_USAGE("trace_raw_output_kvm_unmap_hva_range", 24),
STACK_USAGE("kvm_vm_ioctl_enable_cap", 0),
STACK_USAGE("kvm_vm_ioctl_enable_cap_generic", 32),
STACK_USAGE("kvm_vm_stats_read", 0),
STACK_USAGE("kvm_vm_ioctl_get_stats_fd", 16),
STACK_USAGE("kvm_vm_ioctl", 144),
STACK_USAGE("__bpf_trace_kvm_set_spte_hva", 0),
STACK_USAGE("__traceiter_kvm_set_spte_hva", 16),
STACK_USAGE("perf_trace_kvm_set_spte_hva", 56),
STACK_USAGE("trace_event_raw_event_kvm_set_spte_hva", 72),
STACK_USAGE("trace_raw_output_kvm_set_spte_hva", 24),
STACK_USAGE("kvm_destroy_vcpus", 48),
STACK_USAGE("kvm_vm_compat_ioctl", 64),
STACK_USAGE("__bpf_trace_kvm_age_hva", 0),
STACK_USAGE("__traceiter_kvm_age_hva", 24),
STACK_USAGE("perf_trace_kvm_age_hva", 64),
STACK_USAGE("trace_event_raw_event_kvm_age_hva", 80),
STACK_USAGE("trace_kvm_age_hva", 0),
STACK_USAGE("trace_raw_output_kvm_age_hva", 24),
STACK_USAGE("file_is_kvm", 0),
STACK_USAGE("kvm_mmu_notifier_invalidate_range", 48),
STACK_USAGE("kvm_dev_ioctl", 136),
STACK_USAGE("hardware_enable_nolock", 8),
STACK_USAGE("kvm_starting_cpu", 8),
STACK_USAGE("hardware_disable_nolock", 0),
STACK_USAGE("kvm_dying_cpu", 0),
STACK_USAGE("hardware_disable_all", 0),
STACK_USAGE("__bpf_trace_kvm_test_age_hva", 0),
STACK_USAGE("__traceiter_kvm_test_age_hva", 16),
STACK_USAGE("perf_trace_kvm_test_age_hva", 56),
STACK_USAGE("trace_event_raw_event_kvm_test_age_hva", 72),
STACK_USAGE("trace_raw_output_kvm_test_age_hva", 24),
STACK_USAGE("hardware_enable_all", 8),
STACK_USAGE("kvm_reboot", 0),
STACK_USAGE("kvm_io_bus_sort_cmp", 0),
STACK_USAGE("__kvm_io_bus_write", 80),
STACK_USAGE("kvm_io_bus_write", 64),
STACK_USAGE("kvm_io_bus_write_cookie", 88),
STACK_USAGE("kvm_io_bus_read", 88),
STACK_USAGE("kvm_io_bus_register_dev", 80),
STACK_USAGE("kvm_null_fn", 0),
STACK_USAGE("kvm_io_bus_unregister_dev", 56),
STACK_USAGE("kvm_io_bus_get_dev", 80),
STACK_USAGE("kvm_debugfs_release", 8),
STACK_USAGE("kvm_stat_data_get", 56),
STACK_USAGE("kvm_stat_data_clear", 48),
STACK_USAGE("kvm_stat_data_open", 32),
STACK_USAGE("vm_stat_get", 16),
STACK_USAGE("vm_stat_clear", 16),
STACK_USAGE("vm_stat_fops_open", 0),
STACK_USAGE("vm_stat_readonly_fops_open", 0),
STACK_USAGE("vcpu_stat_get", 64),
STACK_USAGE("vcpu_stat_clear", 64),
STACK_USAGE("vcpu_stat_fops_open", 0),
STACK_USAGE("vcpu_stat_readonly_fops_open", 0),
STACK_USAGE("kvm_uevent_notify_change", 40),
STACK_USAGE("kvm_init_debug", 24),
STACK_USAGE("kvm_suspend", 0),
STACK_USAGE("kvm_resume", 8),
STACK_USAGE("kvm_sched_in", 16),
STACK_USAGE("kvm_sched_out", 0),
STACK_USAGE("kvm_get_running_vcpu", 8),
STACK_USAGE("kvm_get_running_vcpus", 0),
STACK_USAGE("kvm_guest_state", 8),
STACK_USAGE("kvm_guest_get_ip", 8),
STACK_USAGE("kvm_register_perf_callbacks", 0),
STACK_USAGE("kvm_unregister_perf_callbacks", 0),
STACK_USAGE("check_processor_compat", 8),
STACK_USAGE("kvm_init", 72),
STACK_USAGE("kvm_exit", 0),
STACK_USAGE("kvm_vm_worker_thread", 48),
STACK_USAGE("kvm_vm_create_worker_thread", 160),
STACK_USAGE("kvm_mmu_notifier_change_pte", 160),
STACK_USAGE("kvm_inc_notifier_count", 0),
STACK_USAGE("__bpf_trace_kvm_set_irq", 0),
STACK_USAGE("__traceiter_kvm_set_irq", 32),
STACK_USAGE("perf_trace_kvm_set_irq", 72),
STACK_USAGE("trace_event_raw_event_kvm_set_irq", 88),
STACK_USAGE("trace_raw_output_kvm_set_irq", 24),
STACK_USAGE("kvm_mmu_notifier_invalidate_range_start", 160),
STACK_USAGE("kvm_dec_notifier_count", 0),
STACK_USAGE("kvm_mmu_notifier_invalidate_range_end", 80),
STACK_USAGE("xa_insert", 32),
STACK_USAGE("kvm_mmu_notifier_clear_flush_young", 160),
STACK_USAGE("kvm_mmu_notifier_clear_young", 160),
STACK_USAGE("kvm_mmu_notifier_test_young", 152),
STACK_USAGE("kvm_mmu_notifier_release", 32),
STACK_USAGE("kvm_pm_notifier_call", 0),
STACK_USAGE("kvm_get_vcpu_by_id", 56),
STACK_USAGE("kvm_destroy_vm_debugfs", 24),
STACK_USAGE("__kvm_memslots", 16),
STACK_USAGE("id_to_memslot", 0),
STACK_USAGE("__bpf_trace_kvm_ioapic_set_irq", 0),
STACK_USAGE("__traceiter_kvm_ioapic_set_irq", 32),
STACK_USAGE("perf_trace_kvm_ioapic_set_irq", 72),
STACK_USAGE("trace_event_raw_event_kvm_ioapic_set_irq", 88),
STACK_USAGE("trace_raw_output_kvm_ioapic_set_irq", 64),
STACK_USAGE("kvm_gfn_to_pfn_cache_refresh", 88),
STACK_USAGE("kmap", 8),
STACK_USAGE("kvm_gfn_to_pfn_cache_unmap", 32),
STACK_USAGE("gfn_to_pfn_cache_invalidate_start", 216),
STACK_USAGE("kvm_gfn_to_pfn_cache_init", 48),
STACK_USAGE("kvm_gfn_to_pfn_cache_destroy", 32),
STACK_USAGE("kvm_gfn_to_pfn_cache_check", 40),
STACK_USAGE("__release_gpc", 8),
STACK_USAGE("kvm_vfio_update_coherency", 40),
STACK_USAGE("kvm_vfio_set_attr", 64),
STACK_USAGE("kvm_vfio_has_attr", 0),
STACK_USAGE("kvm_vfio_destroy", 48),
STACK_USAGE("kvm_vfio_create", 16),
STACK_USAGE("kvm_vfio_ops_init", 0),
STACK_USAGE("kvm_vfio_ops_exit", 0),
STACK_USAGE("do_cpuid_func", 88),
STACK_USAGE("kvm_dev_ioctl_get_cpuid", 96),
STACK_USAGE("kvm_find_cpuid_entry", 0),
STACK_USAGE("kvm_cpuid", 80),
STACK_USAGE("kvm_emulate_cpuid", 32),
STACK_USAGE("kvm_update_pv_runtime", 0),
STACK_USAGE("__kvm_update_cpuid_runtime", 40),
STACK_USAGE("kvm_update_cpuid_runtime", 0),
STACK_USAGE("cpuid_query_maxphyaddr", 0),
STACK_USAGE("kvm_vcpu_reserved_gpa_bits_raw", 0),
STACK_USAGE("kvm_set_cpuid", 56),
STACK_USAGE("xstate_required_size", 8),
STACK_USAGE("kvm_vcpu_ioctl_set_cpuid", 48),
STACK_USAGE("kvm_vcpu_ioctl_set_cpuid2", 32),
STACK_USAGE("kvm_vcpu_ioctl_get_cpuid2", 16),
STACK_USAGE("kvm_set_cpu_caps", 8),
STACK_USAGE("do_host_cpuid", 8),
STACK_USAGE("vcpu_get_timer_advance_ns", 0),
STACK_USAGE("kvm_mmu_rmaps_stat_open", 16),
STACK_USAGE("kvm_mmu_rmaps_stat_release", 16),
STACK_USAGE("kvm_arch_create_vm_debugfs", 0),
STACK_USAGE("vcpu_timer_advance_ns_fops_open", 0),
STACK_USAGE("vcpu_get_guest_mode", 0),
STACK_USAGE("vcpu_guest_mode_fops_open", 0),
STACK_USAGE("vcpu_get_tsc_offset", 0),
STACK_USAGE("vcpu_tsc_offset_fops_open", 0),
STACK_USAGE("vcpu_get_tsc_scaling_ratio", 0),
STACK_USAGE("vcpu_tsc_scaling_fops_open", 0),
STACK_USAGE("vcpu_get_tsc_scaling_frac_bits", 0),
STACK_USAGE("vcpu_tsc_scaling_frac_fops_open", 0),
STACK_USAGE("kvm_arch_create_vcpu_debugfs", 16),
STACK_USAGE("kvm_mmu_rmaps_stat_show", 200),
STACK_USAGE("em_bsf_c", 8),
STACK_USAGE("em_bsr_c", 8),
STACK_USAGE("fetch_register_operand", 0),
STACK_USAGE("em_fninit", 8),
STACK_USAGE("em_fnstcw", 24),
STACK_USAGE("em_fnstsw", 24),
STACK_USAGE("kvm_read_sse_reg", 16),
STACK_USAGE("decode_abs", 16),
STACK_USAGE("get_descriptor_ptr", 64),
STACK_USAGE("write_segment_descriptor", 32),
STACK_USAGE("__load_segment_descriptor", 120),
STACK_USAGE("writeback", 56),
STACK_USAGE("push", 56),
STACK_USAGE("em_push", 0),
STACK_USAGE("emulate_pop", 64),
STACK_USAGE("em_pop", 0),
STACK_USAGE("em_popf", 48),
STACK_USAGE("local_bh_disable", 0),
STACK_USAGE("em_enter", 64),
STACK_USAGE("em_leave", 40),
STACK_USAGE("em_push_sreg", 40),
STACK_USAGE("em_pop_sreg", 64),
STACK_USAGE("em_pusha", 32),
STACK_USAGE("em_pushf", 0),
STACK_USAGE("em_popa", 80),
STACK_USAGE("__emulate_int_real", 64),
STACK_USAGE("emulate_int_real", 40),
STACK_USAGE("em_iret", 56),
STACK_USAGE("em_jmp_far", 48),
STACK_USAGE("em_jmp_abs", 0),
STACK_USAGE("em_call_near_abs", 16),
STACK_USAGE("em_cmpxchg8b", 24),
STACK_USAGE("em_ret", 24),
STACK_USAGE("em_ret_far", 64),
STACK_USAGE("em_ret_far_imm", 48),
STACK_USAGE("em_cmpxchg", 16),
STACK_USAGE("em_lseg", 24),
STACK_USAGE("em_rsm", 616),
STACK_USAGE("reg_rmw", 24),
STACK_USAGE("writeback_registers", 32),
STACK_USAGE("em_syscall", 72),
STACK_USAGE("em_sysenter", 80),
STACK_USAGE("em_sysexit", 80),
STACK_USAGE("emulator_io_permited", 88),
STACK_USAGE("string_registers_quirk", 32),
STACK_USAGE("local_bh_enable", 0),
STACK_USAGE("emulator_task_switch", 272),
STACK_USAGE("string_addr_inc", 40),
STACK_USAGE("em_das", 8),
STACK_USAGE("em_aam", 8),
STACK_USAGE("em_aad", 8),
STACK_USAGE("em_call", 8),
STACK_USAGE("em_call_far", 88),
STACK_USAGE("em_ret_near_imm", 48),
STACK_USAGE("em_xchg", 0),
STACK_USAGE("em_imul_3op", 8),
STACK_USAGE("em_cwd", 8),
STACK_USAGE("em_rdpid", 24),
STACK_USAGE("em_rdtsc", 24),
STACK_USAGE("em_rdpmc", 32),
STACK_USAGE("em_mov", 0),
STACK_USAGE("em_movbe", 8),
STACK_USAGE("em_cr_write", 8),
STACK_USAGE("em_dr_write", 8),
STACK_USAGE("em_wrmsr", 24),
STACK_USAGE("em_rdmsr", 24),
STACK_USAGE("em_mov_rm_sreg", 40),
STACK_USAGE("em_mov_sreg_rm", 24),
STACK_USAGE("em_sldt", 40),
STACK_USAGE("em_lldt", 16),
STACK_USAGE("em_str", 40),
STACK_USAGE("em_ltr", 16),
STACK_USAGE("em_invlpg", 24),
STACK_USAGE("em_clts", 8),
STACK_USAGE("em_hypercall", 8),
STACK_USAGE("emulate_store_desc_ptr", 56),
STACK_USAGE("em_sgdt", 0),
STACK_USAGE("em_sidt", 0),
STACK_USAGE("em_lgdt_lidt", 80),
STACK_USAGE("em_lgdt", 0),
STACK_USAGE("em_lidt", 0),
STACK_USAGE("em_smsw", 16),
STACK_USAGE("em_lmsw", 16),
STACK_USAGE("em_loop", 8),
STACK_USAGE("em_jcxz", 8),
STACK_USAGE("em_in", 48),
STACK_USAGE("em_out", 8),
STACK_USAGE("em_cli", 16),
STACK_USAGE("em_sti", 16),
STACK_USAGE("em_cpuid", 48),
STACK_USAGE("em_sahf", 8),
STACK_USAGE("em_lahf", 8),
STACK_USAGE("em_bswap", 0),
STACK_USAGE("em_clflush", 0),
STACK_USAGE("em_clflushopt", 0),
STACK_USAGE("em_movsxd", 0),
STACK_USAGE("em_fxsave", 568),
STACK_USAGE("fxregs_fixup", 552),
STACK_USAGE("em_fxrstor", 568),
STACK_USAGE("em_xsetbv", 24),
STACK_USAGE("check_cr_access", 0),
STACK_USAGE("check_dr_read", 32),
STACK_USAGE("check_dr_write", 32),
STACK_USAGE("check_svme", 24),
STACK_USAGE("check_svme_pa", 24),
STACK_USAGE("check_rdtsc", 16),
STACK_USAGE("check_rdpmc", 24),
STACK_USAGE("check_perm_in", 8),
STACK_USAGE("check_perm_out", 8),
STACK_USAGE("decode_imm", 24),
STACK_USAGE("decode_operand", 32),
STACK_USAGE("emulator_check_intercept", 48),
STACK_USAGE("x86_decode_insn", 88),
STACK_USAGE("x86_page_table_writing_insn", 0),
STACK_USAGE("string_insn_completed", 0),
STACK_USAGE("flush_pending_x87_faults", 24),
STACK_USAGE("fetch_possible_mmx_operand", 16),
STACK_USAGE("init_decode_cache", 0),
STACK_USAGE("x86_emulate_insn", 112),
STACK_USAGE("emulator_invalidate_register_cache", 0),
STACK_USAGE("emulator_writeback_register_cache", 32),
STACK_USAGE("emulator_can_use_gpa", 0),
STACK_USAGE("register_address_increment", 32),
STACK_USAGE("linearize", 88),
STACK_USAGE("assign_eip", 64),
STACK_USAGE("__do_insn_fetch_bytes", 72),
STACK_USAGE("decode_register", 24),
STACK_USAGE("kvm_hv_setup_tsc_page", 64),
STACK_USAGE("kvm_hv_request_tsc_page_update", 16),
STACK_USAGE("hv_check_msr_access", 0),
STACK_USAGE("kvm_hv_set_msr_common", 96),
STACK_USAGE("kvm_hv_get_msr_common", 80),
STACK_USAGE("sparse_set_to_vcpu_mask", 216),
STACK_USAGE("kvm_hv_flush_tlb", 344),
STACK_USAGE("synic_get", 56),
STACK_USAGE("local_bh_disable", 0),
STACK_USAGE("kvm_hv_set_cpuid", 24),
STACK_USAGE("kvm_hv_notify_acked_sint", 48),
STACK_USAGE("kvm_hv_set_enforce_cpuid", 16),
STACK_USAGE("kvm_hv_hypercall_complete", 32),
STACK_USAGE("kvm_hv_hypercall_complete_userspace", 0),
STACK_USAGE("kvm_hvcall_signal_event", 24),
STACK_USAGE("kvm_hv_hypercall", 536),
STACK_USAGE("kvm_hv_init_vm", 8),
STACK_USAGE("kvm_hv_destroy_vm", 32),
STACK_USAGE("kvm_vm_ioctl_hv_eventfd", 48),
STACK_USAGE("kvm_get_hv_cpuid", 472),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("kvm_hv_syndbg_complete_userspace", 0),
STACK_USAGE("local_bh_enable", 0),
STACK_USAGE("synic_set_irq", 56),
STACK_USAGE("kvm_hv_synic_set_irq", 8),
STACK_USAGE("kvm_hv_synic_send_eoi", 32),
STACK_USAGE("kvm_hv_irq_routing_update", 40),
STACK_USAGE("stimer_cleanup", 16),
STACK_USAGE("stimer_timer_callback", 8),
STACK_USAGE("kvm_hv_process_stimers", 152),
STACK_USAGE("kvm_hv_vcpu_uninit", 16),
STACK_USAGE("synic_update_vector", 48),
STACK_USAGE("kvm_hv_assist_page_enabled", 0),
STACK_USAGE("kvm_hv_get_assist_page", 0),
STACK_USAGE("kvm_hv_vcpu_init", 32),
STACK_USAGE("kvm_hv_activate_synic", 16),
STACK_USAGE("kvm_hv_msr_partition_wide", 0),
STACK_USAGE("pit_get_count", 24),
STACK_USAGE("pit_latch_count", 24),
STACK_USAGE("kvm_pit_ack_irq", 0),
STACK_USAGE("__kvm_migrate_pit_timer", 24),
STACK_USAGE("pit_do_work", 40),
STACK_USAGE("pit_timer_fn", 8),
STACK_USAGE("kvm_pit_set_reinject", 24),
STACK_USAGE("pit_load_count", 40),
STACK_USAGE("kvm_pit_load_count", 32),
STACK_USAGE("pit_ioport_write", 56),
STACK_USAGE("pit_ioport_read", 64),
STACK_USAGE("speaker_ioport_write", 32),
STACK_USAGE("speaker_ioport_read", 64),
STACK_USAGE("pit_mask_notifer", 0),
STACK_USAGE("kvm_create_pit", 40),
STACK_USAGE("kvm_free_pit", 24),
STACK_USAGE("pic_update_irq", 0),
STACK_USAGE("kvm_pic_update_irq", 8),
STACK_USAGE("kvm_pic_set_irq", 48),
STACK_USAGE("kvm_pic_clear_all", 16),
STACK_USAGE("kvm_pic_read_irq", 32),
STACK_USAGE("pic_ioport_write", 56),
STACK_USAGE("picdev_write", 24),
STACK_USAGE("picdev_read", 56),
STACK_USAGE("pic_unlock", 40),
STACK_USAGE("picdev_master_write", 0),
STACK_USAGE("picdev_master_read", 0),
STACK_USAGE("picdev_slave_write", 0),
STACK_USAGE("picdev_slave_read", 0),
STACK_USAGE("picdev_elcr_write", 0),
STACK_USAGE("picdev_elcr_read", 0),
STACK_USAGE("kvm_pic_init", 48),
STACK_USAGE("kvm_pic_destroy", 24),
STACK_USAGE("pic_clear_isr", 16),
STACK_USAGE("__rtc_irq_eoi_tracking_restore_one", 16),
STACK_USAGE("kvm_rtc_eoi_tracking_restore_one", 16),
STACK_USAGE("kvm_rtc_eoi_tracking_restore_all", 32),
STACK_USAGE("ioapic_set_irq", 88),
STACK_USAGE("kvm_ioapic_scan_entry", 40),
STACK_USAGE("kvm_arch_post_irq_ack_notifier_list_update", 0),
STACK_USAGE("ioapic_service", 56),
STACK_USAGE("kvm_ioapic_set_irq", 48),
STACK_USAGE("kvm_ioapic_clear_all", 24),
STACK_USAGE("kvm_ioapic_eoi_inject_work", 64),
STACK_USAGE("kvm_ioapic_update_eoi", 96),
STACK_USAGE("ioapic_mmio_read", 56),
STACK_USAGE("ioapic_mmio_write", 216),
STACK_USAGE("kvm_ioapic_init", 32),
STACK_USAGE("kvm_ioapic_destroy", 24),
STACK_USAGE("kvm_get_ioapic", 24),
STACK_USAGE("kvm_set_ioapic", 72),
STACK_USAGE("kvm_cpu_get_interrupt", 8),
STACK_USAGE("kvm_inject_pending_timer_irqs", 0),
STACK_USAGE("__kvm_migrate_timers", 8),
STACK_USAGE("kvm_arch_irqfd_allowed", 0),
STACK_USAGE("kvm_cpu_has_pending_timer", 0),
STACK_USAGE("kvm_cpu_has_extint", 8),
STACK_USAGE("kvm_cpu_has_injectable_intr", 8),
STACK_USAGE("kvm_cpu_has_interrupt", 8),
STACK_USAGE("kvm_set_msi_irq", 40),
STACK_USAGE("kvm_set_msi", 48),
STACK_USAGE("kvm_hv_set_sint", 0),
STACK_USAGE("kvm_arch_set_irq_inatomic", 56),
STACK_USAGE("kvm_request_irq_source_id", 24),
STACK_USAGE("kvm_free_irq_source_id", 24),
STACK_USAGE("kvm_register_irq_mask_notifier", 32),
STACK_USAGE("kvm_unregister_irq_mask_notifier", 24),
STACK_USAGE("kvm_fire_mask_notifiers", 56),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("kvm_arch_can_set_irq_routing", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("kvm_set_routing_entry", 0),
STACK_USAGE("kvm_set_pic_irq", 0),
STACK_USAGE("kvm_intr_is_single_vcpu", 64),
STACK_USAGE("kvm_set_ioapic_irq", 0),
STACK_USAGE("kvm_setup_default_irq_routing", 0),
STACK_USAGE("kvm_setup_empty_irq_routing", 0),
STACK_USAGE("kvm_arch_post_irq_routing_update", 0),
STACK_USAGE("kvm_scan_ioapic_routes", 112),
STACK_USAGE("kvm_arch_irq_routing_update", 0),
STACK_USAGE("kvm_irq_delivery_to_apic", 248),
STACK_USAGE("kvm_irq_delivery_to_apic_fast", 96),
STACK_USAGE("kvm_intr_is_single_vcpu_fast", 72),
STACK_USAGE("__apic_accept_irq", 56),
STACK_USAGE("kvm_apic_pending_eoi", 0),
STACK_USAGE("kvm_bitmap_or_dest_vcpus", 96),
STACK_USAGE("kvm_apic_compare_prio", 0),
STACK_USAGE("apic_set_eoi", 56),
STACK_USAGE("kvm_apic_set_eoi_accelerated", 16),
STACK_USAGE("kvm_apic_send_ipi", 40),
STACK_USAGE("__apic_read", 32),
STACK_USAGE("kvm_lapic_reg_read", 56),
STACK_USAGE("trace_kvm_hv_timer_state", 0),
STACK_USAGE("apic_mmio_read", 0),
STACK_USAGE("kvm_can_use_hv_timer", 0),
STACK_USAGE("cancel_apic_timer", 24),
STACK_USAGE("apic_update_lvtt", 24),
STACK_USAGE("__kvm_wait_lapic_expire", 32),
STACK_USAGE("kvm_wait_lapic_expire", 0),
STACK_USAGE("apic_timer_expired", 16),
STACK_USAGE("update_target_expiration", 64),
STACK_USAGE("kvm_lapic_hv_timer_in_use", 0),
STACK_USAGE("cancel_hv_timer", 24),
STACK_USAGE("start_sw_timer", 72),
STACK_USAGE("restart_apic_timer", 40),
STACK_USAGE("kvm_lapic_expired_hv_timer", 40),
STACK_USAGE("kvm_lapic_switch_to_hv_timer", 0),
STACK_USAGE("kvm_lapic_switch_to_sw_timer", 8),
STACK_USAGE("kvm_apic_map_free", 0),
STACK_USAGE("kvm_lapic_restart_hv_timer", 0),
STACK_USAGE("__start_apic_timer", 56),
STACK_USAGE("kvm_lapic_reg_write", 32),
STACK_USAGE("kvm_recalculate_apic_map", 88),
STACK_USAGE("apic_mmio_write", 16),
STACK_USAGE("kvm_lapic_set_eoi", 8),
STACK_USAGE("kvm_apic_write_nodecode", 0),
STACK_USAGE("kvm_free_lapic", 16),
STACK_USAGE("kvm_get_lapic_tscdeadline_msr", 0),
STACK_USAGE("kvm_set_lapic_tscdeadline_msr", 16),
STACK_USAGE("kvm_lapic_set_tpr", 0),
STACK_USAGE("kvm_lapic_get_cr8", 0),
STACK_USAGE("kvm_lapic_set_base", 32),
STACK_USAGE("kvm_apic_update_apicv", 0),
STACK_USAGE("kvm_lapic_reset", 32),
STACK_USAGE("apic_has_pending_timer", 0),
STACK_USAGE("kvm_apic_local_deliver", 0),
STACK_USAGE("kvm_apic_nmi_wd_deliver", 0),
STACK_USAGE("apic_timer_fn", 24),
STACK_USAGE("kvm_create_lapic", 32),
STACK_USAGE("kvm_apic_has_interrupt", 24),
STACK_USAGE("kvm_apic_accept_pic_intr", 0),
STACK_USAGE("trace_kvm_apic", 0),
STACK_USAGE("kvm_inject_apic_timer_irqs", 8),
STACK_USAGE("kvm_get_apic_interrupt", 48),
STACK_USAGE("kvm_apic_get_state", 32),
STACK_USAGE("kvm_apic_set_state", 48),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("__kvm_migrate_apic_timer", 16),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("kvm_lapic_sync_from_vapic", 40),
STACK_USAGE("kvm_lapic_sync_to_vapic", 56),
STACK_USAGE("kvm_lapic_set_vapic_addr", 16),
STACK_USAGE("kvm_x2apic_icr_write", 16),
STACK_USAGE("kvm_x2apic_msr_write", 16),
STACK_USAGE("kvm_x2apic_msr_read", 24),
STACK_USAGE("kvm_hv_vapic_msr_write", 16),
STACK_USAGE("kvm_hv_vapic_msr_read", 24),
STACK_USAGE("kvm_lapic_set_pv_eoi", 16),
STACK_USAGE("kvm_apic_accept_events", 32),
STACK_USAGE("kvm_lapic_exit", 0),
STACK_USAGE("kvm_apic_set_version", 16),
STACK_USAGE("__kvm_apic_update_irr", 16),
STACK_USAGE("kvm_apic_update_irr", 16),
STACK_USAGE("kvm_apic_clear_irr", 16),
STACK_USAGE("trace_kvm_eoi", 0),
STACK_USAGE("kvm_lapic_find_highest_irr", 8),
STACK_USAGE("kvm_apic_set_irq", 0),
STACK_USAGE("__pv_send_ipi", 64),
STACK_USAGE("kvm_pv_send_ipi", 88),
STACK_USAGE("apic_update_ppr", 32),
STACK_USAGE("kvm_apic_update_ppr", 0),
STACK_USAGE("kvm_apic_match_dest", 0),
STACK_USAGE("kvm_vector_to_index", 40),
STACK_USAGE("kvm_apic_map_get_dest_lapic", 64),
STACK_USAGE("ept_sync_page", 96),
STACK_USAGE("paging32_sync_page", 96),
STACK_USAGE("paging64_sync_page", 96),
STACK_USAGE("__bpf_trace_kvm_mmu_set_bit_class", 0),
STACK_USAGE("perf_trace_kvm_mmu_set_bit_class", 72),
STACK_USAGE("trace_event_raw_event_kvm_mmu_set_bit_class", 88),
STACK_USAGE("trace_raw_output_kvm_mmu_set_bit_class", 24),
STACK_USAGE("drop_spte", 40),
STACK_USAGE("drop_large_spte", 48),
STACK_USAGE("rmap_write_protect", 40),
STACK_USAGE("__rmap_clear_dirty", 48),
STACK_USAGE("__traceiter_kvm_mmu_set_accessed_bit", 32),
STACK_USAGE("kvm_pdptr_read", 16),
STACK_USAGE("trace_kvm_mmu_set_accessed_bit", 0),
STACK_USAGE("kvm_arch_mmu_enable_log_dirty_pt_masked", 80),
STACK_USAGE("__traceiter_kvm_mmu_set_dirty_bit", 32),
STACK_USAGE("trace_kvm_mmu_set_dirty_bit", 0),
STACK_USAGE("kvm_cpu_dirty_log_size", 0),
STACK_USAGE("kvm_mmu_slot_gfn_write_protect", 64),
STACK_USAGE("kvm_vcpu_write_protect_gfn", 40),
STACK_USAGE("__bpf_trace_kvm_mmu_walker_error", 0),
STACK_USAGE("__traceiter_kvm_mmu_walker_error", 16),
STACK_USAGE("perf_trace_kvm_mmu_walker_error", 56),
STACK_USAGE("trace_event_raw_event_kvm_mmu_walker_error", 72),
STACK_USAGE("trace_kvm_mmu_walker_error", 0),
STACK_USAGE("trace_raw_output_kvm_mmu_walker_error", 24),
STACK_USAGE("kvm_unmap_gfn_range", 104),
STACK_USAGE("kvm_set_spte_gfn", 144),
STACK_USAGE("__bpf_trace_kvm_mmu_get_page", 0),
STACK_USAGE("__traceiter_kvm_mmu_get_page", 24),
STACK_USAGE("perf_trace_kvm_mmu_get_page", 64),
STACK_USAGE("trace_event_raw_event_kvm_mmu_get_page", 80),
STACK_USAGE("trace_kvm_mmu_get_page", 0),
STACK_USAGE("trace_raw_output_kvm_mmu_get_page", 72),
STACK_USAGE("kvm_age_gfn", 128),
STACK_USAGE("kvm_test_age_gfn", 96),
STACK_USAGE("kvm_mmu_mark_parents_unsync", 16),
STACK_USAGE("nonpaging_sync_page", 0),
STACK_USAGE("vcpu_cache_mmio_info", 48),
STACK_USAGE("__bpf_trace_kvm_mmu_page_class", 0),
STACK_USAGE("perf_trace_kvm_mmu_page_class", 56),
STACK_USAGE("trace_event_raw_event_kvm_mmu_page_class", 72),
STACK_USAGE("trace_raw_output_kvm_mmu_page_class", 64),
STACK_USAGE("__mmu_unsync_walk", 48),
STACK_USAGE("kvm_unlink_unsync_page", 16),
STACK_USAGE("__traceiter_kvm_mmu_sync_page", 16),
STACK_USAGE("mmu_sync_children", 432),
STACK_USAGE("__traceiter_kvm_mmu_unsync_page", 16),
STACK_USAGE("kvm_mmu_get_page", 128),
STACK_USAGE("__traceiter_kvm_mmu_prepare_zap_page", 16),
STACK_USAGE("__bpf_trace_mark_mmio_spte", 0),
STACK_USAGE("__traceiter_mark_mmio_spte", 32),
STACK_USAGE("perf_trace_mark_mmio_spte", 72),
STACK_USAGE("trace_event_raw_event_mark_mmio_spte", 88),
STACK_USAGE("trace_raw_output_mark_mmio_spte", 24),
STACK_USAGE("link_shadow_page", 32),
STACK_USAGE("mmu_page_zap_pte", 56),
STACK_USAGE("__kvm_mmu_prepare_zap_page", 408),
STACK_USAGE("ept_update_accessed_dirty_bits", 80),
STACK_USAGE("paging32_update_accessed_dirty_bits", 72),
STACK_USAGE("paging64_update_accessed_dirty_bits", 72),
STACK_USAGE("__bpf_trace_handle_mmio_page_fault", 0),
STACK_USAGE("__traceiter_handle_mmio_page_fault", 32),
STACK_USAGE("perf_trace_handle_mmio_page_fault", 72),
STACK_USAGE("trace_event_raw_event_handle_mmio_page_fault", 88),
STACK_USAGE("trace_raw_output_handle_mmio_page_fault", 24),
STACK_USAGE("kvm_mmu_commit_zap_page", 40),
STACK_USAGE("kvm_mmu_zap_oldest_mmu_pages", 80),
STACK_USAGE("make_mmu_pages_available", 8),
STACK_USAGE("kvm_mmu_change_mmu_pages", 80),
STACK_USAGE("kvm_mmu_unprotect_page", 80),
STACK_USAGE("mmu_try_to_unsync_pages", 64),
STACK_USAGE("__bpf_trace_fast_page_fault", 0),
STACK_USAGE("__traceiter_fast_page_fault", 48),
STACK_USAGE("perf_trace_fast_page_fault", 80),
STACK_USAGE("trace_event_raw_event_fast_page_fault", 104),
STACK_USAGE("trace_raw_output_fast_page_fault", 40),
STACK_USAGE("mmu_set_spte", 136),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("direct_pte_prefetch_many", 136),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("kvm_flush_remote_tlbs_with_address", 32),
STACK_USAGE("kvm_mmu_max_mapping_level", 96),
STACK_USAGE("kvm_mmu_hugepage_adjust", 24),
STACK_USAGE("__bpf_trace_kvm_mmu_zap_all_fast", 0),
STACK_USAGE("__traceiter_kvm_mmu_zap_all_fast", 16),
STACK_USAGE("mark_mmio_spte", 24),
STACK_USAGE("perf_trace_kvm_mmu_zap_all_fast", 56),
STACK_USAGE("trace_event_raw_event_kvm_mmu_zap_all_fast", 72),
STACK_USAGE("trace_raw_output_kvm_mmu_zap_all_fast", 24),
STACK_USAGE("disallowed_hugepage_adjust", 0),
STACK_USAGE("__direct_map", 80),
STACK_USAGE("kvm_handle_bad_page", 0),
STACK_USAGE("__bpf_trace_check_mmio_spte", 0),
STACK_USAGE("__traceiter_check_mmio_spte", 32),
STACK_USAGE("perf_trace_check_mmio_spte", 72),
STACK_USAGE("trace_event_raw_event_check_mmio_spte", 88),
STACK_USAGE("trace_raw_output_check_mmio_spte", 24),
STACK_USAGE("kvm_mmu_free_roots", 80),
STACK_USAGE("kvm_mmu_free_guest_mode_roots", 0),
STACK_USAGE("__bpf_trace_kvm_mmu_set_spte", 0),
STACK_USAGE("__traceiter_kvm_mmu_set_spte", 32),
STACK_USAGE("perf_trace_kvm_mmu_set_spte", 72),
STACK_USAGE("trace_event_raw_event_kvm_mmu_set_spte", 88),
STACK_USAGE("trace_raw_output_kvm_mmu_set_spte", 24),
STACK_USAGE("ept_walk_addr_generic", 136),
STACK_USAGE("paging32_walk_addr_generic", 128),
STACK_USAGE("paging64_walk_addr_generic", 128),
STACK_USAGE("kvm_mmu_sync_roots", 16),
STACK_USAGE("__bpf_trace_kvm_mmu_spte_requested", 0),
STACK_USAGE("__traceiter_kvm_mmu_spte_requested", 16),
STACK_USAGE("perf_trace_kvm_mmu_spte_requested", 56),
STACK_USAGE("trace_event_raw_event_kvm_mmu_spte_requested", 72),
STACK_USAGE("trace_kvm_mmu_spte_requested", 0),
STACK_USAGE("trace_raw_output_kvm_mmu_spte_requested", 24),
STACK_USAGE("kvm_mmu_sync_prev_roots", 0),
STACK_USAGE("nonpaging_gva_to_gpa", 0),
STACK_USAGE("mmio_info_in_cache", 48),
STACK_USAGE("handle_mmio_page_fault", 152),
STACK_USAGE("shadow_page_table_clear_flood", 32),
STACK_USAGE("__bpf_trace_kvm_tdp_mmu_spte_changed", 0),
STACK_USAGE("__traceiter_kvm_tdp_mmu_spte_changed", 48),
STACK_USAGE("perf_trace_kvm_tdp_mmu_spte_changed", 80),
STACK_USAGE("trace_event_raw_event_kvm_tdp_mmu_spte_changed", 104),
STACK_USAGE("trace_raw_output_kvm_tdp_mmu_spte_changed", 24),
STACK_USAGE("kvm_faultin_pfn", 112),
STACK_USAGE("is_page_fault_stale", 24),
STACK_USAGE("direct_page_fault", 88),
STACK_USAGE("nonpaging_page_fault", 0),
STACK_USAGE("kvm_handle_page_fault", 56),
STACK_USAGE("kvm_tdp_page_fault", 16),
STACK_USAGE("__bpf_trace_kvm_mmu_split_huge_page", 0),
STACK_USAGE("__traceiter_kvm_mmu_split_huge_page", 40),
STACK_USAGE("perf_trace_kvm_mmu_split_huge_page", 72),
STACK_USAGE("trace_event_raw_event_kvm_mmu_split_huge_page", 96),
STACK_USAGE("trace_raw_output_kvm_mmu_split_huge_page", 24),
STACK_USAGE("kvm_mmu_new_pgd", 64),
STACK_USAGE("get_cr3", 8),
STACK_USAGE("reset_guest_paging_metadata", 56),
STACK_USAGE("kvm_calc_shadow_root_page_role_common", 8),
STACK_USAGE("shadow_mmu_init_context", 40),
STACK_USAGE("kvm_init_shadow_npt_mmu", 48),
STACK_USAGE("mmu_spte_update_no_track", 24),
STACK_USAGE("kvm_init_shadow_ept_mmu", 16),
STACK_USAGE("kvm_init_mmu", 80),
STACK_USAGE("kvm_mmu_after_set_cpuid", 16),
STACK_USAGE("kvm_mmu_reset_context", 16),
STACK_USAGE("kvm_mmu_load", 152),
STACK_USAGE("kvm_mmu_unload", 16),
STACK_USAGE("__kvm_mmu_free_obsolete_roots", 0),
STACK_USAGE("kvm_mmu_free_obsolete_roots", 8),
STACK_USAGE("mmu_spte_update", 40),
STACK_USAGE("kvm_mmu_pte_write", 136),
STACK_USAGE("kvm_mmu_page_fault", 128),
STACK_USAGE("kvm_mmu_invalidate_gva", 32),
STACK_USAGE("ept_prefetch_gpte", 64),
STACK_USAGE("paging32_prefetch_gpte", 48),
STACK_USAGE("paging64_prefetch_gpte", 56),
STACK_USAGE("kvm_mmu_invlpg", 24),
STACK_USAGE("kvm_mmu_invpcid_gva", 40),
STACK_USAGE("kvm_configure_mmu", 0),
STACK_USAGE("__kvm_mmu_create", 8),
STACK_USAGE("kvm_mmu_create", 24),
STACK_USAGE("mmu_spte_clear_track_bits", 40),
STACK_USAGE("kvm_mmu_zap_all_fast", 64),
STACK_USAGE("kvm_mmu_invalidate_zap_pages_in_memslot", 0),
STACK_USAGE("kvm_mmu_init_vm", 8),
STACK_USAGE("kvm_mmu_uninit_vm", 8),
STACK_USAGE("kvm_zap_gfn_range", 208),
STACK_USAGE("kvm_mmu_slot_remove_write_access", 104),
STACK_USAGE("kvm_mmu_try_split_huge_pages", 0),
STACK_USAGE("kvm_mmu_slot_try_split_huge_pages", 40),
STACK_USAGE("kvm_mmu_zap_collapsible_sptes", 152),
STACK_USAGE("kvm_arch_flush_remote_tlbs_memslot", 40),
STACK_USAGE("kvm_mmu_slot_leaf_clear_dirty", 72),
STACK_USAGE("kvm_mmu_zap_all", 72),
STACK_USAGE("kvm_mmu_invalidate_mmio_sptes", 0),
STACK_USAGE("mmu_shrink_scan", 120),
STACK_USAGE("mmu_shrink_count", 0),
STACK_USAGE("set_nx_huge_pages", 56),
STACK_USAGE("kvm_mmu_x86_module_init", 0),
STACK_USAGE("kvm_mmu_vendor_module_init", 16),
STACK_USAGE("kvm_mmu_destroy", 16),
STACK_USAGE("kvm_mmu_vendor_module_exit", 0),
STACK_USAGE("set_nx_huge_pages_recovery_param", 24),
STACK_USAGE("walk_shadow_page_lockless_begin", 24),
STACK_USAGE("ept_fetch", 152),
STACK_USAGE("paging32_fetch", 152),
STACK_USAGE("paging64_fetch", 152),
STACK_USAGE("kvm_nx_lpage_recovery_worker", 112),
STACK_USAGE("kvm_mmu_post_init_vm", 16),
STACK_USAGE("kvm_mmu_pre_destroy_vm", 0),
STACK_USAGE("walk_shadow_page_lockless_end", 0),
STACK_USAGE("__bpf_trace_kvm_mmu_pagetable_walk", 0),
STACK_USAGE("__traceiter_kvm_mmu_pagetable_walk", 24),
STACK_USAGE("perf_trace_kvm_mmu_pagetable_walk", 64),
STACK_USAGE("trace_event_raw_event_kvm_mmu_pagetable_walk", 80),
STACK_USAGE("trace_kvm_mmu_pagetable_walk", 0),
STACK_USAGE("trace_raw_output_kvm_mmu_pagetable_walk", 32),
STACK_USAGE("kvm_mmu_gfn_disallow_lpage", 0),
STACK_USAGE("kvm_mmu_gfn_allow_lpage", 0),
STACK_USAGE("account_huge_nx_page", 0),
STACK_USAGE("ept_page_fault", 344),
STACK_USAGE("paging32_page_fault", 192),
STACK_USAGE("paging64_page_fault", 344),
STACK_USAGE("unaccount_huge_nx_page", 0),
STACK_USAGE("__bpf_trace_kvm_mmu_paging_element", 0),
STACK_USAGE("__traceiter_kvm_mmu_paging_element", 24),
STACK_USAGE("perf_trace_kvm_mmu_paging_element", 64),
STACK_USAGE("trace_event_raw_event_kvm_mmu_paging_element", 80),
STACK_USAGE("trace_kvm_mmu_paging_element", 0),
STACK_USAGE("trace_raw_output_kvm_mmu_paging_element", 24),
STACK_USAGE("__pte_list_remove", 0),
STACK_USAGE("ept_invlpg", 112),
STACK_USAGE("paging32_invlpg", 120),
STACK_USAGE("paging64_invlpg", 112),
STACK_USAGE("pte_list_count", 0),
STACK_USAGE("ept_gva_to_gpa", 320),
STACK_USAGE("paging32_gva_to_gpa", 168),
STACK_USAGE("paging64_gva_to_gpa", 320),
STACK_USAGE("kvm_slot_page_track_add_page", 24),
STACK_USAGE("kvm_slot_page_track_remove_page", 0),
STACK_USAGE("kvm_slot_page_track_is_active", 0),
STACK_USAGE("kvm_page_track_cleanup", 0),
STACK_USAGE("kvm_page_track_init", 0),
STACK_USAGE("kvm_page_track_register_notifier", 16),
STACK_USAGE("kvm_page_track_write_tracking_enabled", 0),
STACK_USAGE("kvm_page_track_unregister_notifier", 24),
STACK_USAGE("kvm_page_track_write", 64),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("kvm_page_track_flush_slot", 48),
STACK_USAGE("kvm_page_track_free_memslot", 8),
STACK_USAGE("kvm_page_track_create_memslot", 8),
STACK_USAGE("kvm_page_track_write_tracking_alloc", 16),
STACK_USAGE("make_spte", 72),
STACK_USAGE("make_huge_page_split_spte", 0),
STACK_USAGE("make_nonleaf_spte", 0),
STACK_USAGE("kvm_mmu_changed_pte_notifier_make_spte", 0),
STACK_USAGE("mark_spte_for_access_track", 16),
STACK_USAGE("kvm_mmu_set_mmio_spte_mask", 0),
STACK_USAGE("kvm_mmu_set_ept_masks", 0),
STACK_USAGE("kvm_mmu_reset_all_pte_masks", 8),
STACK_USAGE("make_mmio_spte", 32),
STACK_USAGE("kvm_is_mmio_pfn", 16),
STACK_USAGE("spte_has_volatile_bits", 0),
STACK_USAGE("tdp_iter_next", 32),
STACK_USAGE("tdp_iter_restart", 24),
STACK_USAGE("tdp_iter_start", 0),
STACK_USAGE("spte_to_child_pt", 0),
STACK_USAGE("kvm_tdp_mmu_zap_invalidated_roots", 0),
STACK_USAGE("kvm_tdp_mmu_invalidate_all_roots", 40),
STACK_USAGE("kvm_tdp_mmu_map", 192),
STACK_USAGE("kvm_tdp_mmu_unmap_gfn_range", 0),
STACK_USAGE("kvm_tdp_mmu_age_gfn_range", 184),
STACK_USAGE("kvm_tdp_mmu_test_age_gfn", 168),
STACK_USAGE("kvm_tdp_mmu_set_spte_gfn", 184),
STACK_USAGE("kvm_tdp_mmu_put_root", 24),
STACK_USAGE("kvm_tdp_mmu_wrprot_slot", 192),
STACK_USAGE("kvm_tdp_mmu_try_split_huge_pages", 240),
STACK_USAGE("kvm_tdp_mmu_clear_dirty_slot", 184),
STACK_USAGE("kvm_tdp_mmu_clear_dirty_pt_masked", 216),
STACK_USAGE("kvm_tdp_mmu_zap_collapsible_sptes", 184),
STACK_USAGE("kvm_mmu_init_tdp_mmu", 16),
STACK_USAGE("kvm_tdp_mmu_write_protect_gfn", 192),
STACK_USAGE("kvm_tdp_mmu_get_walk", 144),
STACK_USAGE("kvm_tdp_mmu_fast_pf_get_last_sptep", 144),
STACK_USAGE("tdp_mmu_next_root", 64),
STACK_USAGE("trace_mark_mmio_spte", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("tdp_mmu_init_sp", 0),
STACK_USAGE("tdp_mmu_init_child_sp", 24),
STACK_USAGE("kvm_tdp_mmu_get_vcpu_root_hpa", 56),
STACK_USAGE("kvm_tdp_mmu_write_spte", 32),
STACK_USAGE("trace_kvm_mmu_split_huge_page", 0),
STACK_USAGE("kvm_mmu_uninit_tdp_mmu", 8),
STACK_USAGE("__handle_changed_spte", 112),
STACK_USAGE("tdp_mmu_set_spte_atomic", 32),
STACK_USAGE("__tdp_mmu_set_spte", 56),
STACK_USAGE("tdp_mmu_iter_cond_resched", 24),
STACK_USAGE("tdp_mmu_free_sp_rcu_callback", 8),
STACK_USAGE("__tdp_mmu_zap_root", 160),
STACK_USAGE("tdp_mmu_zap_root", 24),
STACK_USAGE("kvm_tdp_mmu_zap_sp", 32),
STACK_USAGE("tdp_mmu_zap_root_work", 16),
STACK_USAGE("kvm_tdp_mmu_zap_leafs", 200),
STACK_USAGE("kvm_tdp_mmu_zap_all", 24),
STACK_USAGE("msr_mtrr_valid", 0),
STACK_USAGE("kvm_mtrr_set_msr", 48),
STACK_USAGE("kvm_mtrr_get_msr", 24),
STACK_USAGE("kvm_vcpu_mtrr_init", 0),
STACK_USAGE("kvm_mtrr_valid", 24),
STACK_USAGE("mtrr_lookup_next", 0),
STACK_USAGE("kvm_mtrr_get_guest_memory_type", 104),
STACK_USAGE("kvm_mtrr_check_gfn_range_consistency", 88),
STACK_USAGE("cmp_u64", 0),
STACK_USAGE("reprogram_gp_counter", 56),
STACK_USAGE("reprogram_fixed_counter", 40),
STACK_USAGE("reprogram_counter", 16),
STACK_USAGE("kvm_pmu_handle_event", 56),
STACK_USAGE("kvm_pmu_is_valid_rdpmc_ecx", 0),
STACK_USAGE("is_vmware_backdoor_pmc", 0),
STACK_USAGE("kvm_pmu_rdpmc", 64),
STACK_USAGE("kvm_pmu_deliver_pmi", 8),
STACK_USAGE("kvm_pmu_is_valid_msr", 16),
STACK_USAGE("kvm_pmu_get_msr", 0),
STACK_USAGE("kvm_pmu_set_msr", 16),
STACK_USAGE("kvm_pmu_refresh", 0),
STACK_USAGE("kvm_pmu_reset", 8),
STACK_USAGE("kvm_pmu_init", 8),
STACK_USAGE("kvm_pmu_cleanup", 88),
STACK_USAGE("kvm_pmu_destroy", 8),
STACK_USAGE("kvm_pmi_trigger_fn", 8),
STACK_USAGE("kvm_pmu_trigger_event", 88),
STACK_USAGE("kvm_vm_ioctl_set_pmu_event_filter", 80),
STACK_USAGE("kvm_perf_overflow", 0),
STACK_USAGE("pmc_reprogram_counter", 152),
STACK_USAGE("trace_kvm_nested_vmenter_failed", 0),
STACK_USAGE("nested_enlightened_vmentry", 72),
STACK_USAGE("nested_get_evmcs_version", 0),
STACK_USAGE("nested_evmcs_filter_control_msr", 0),
STACK_USAGE("nested_evmcs_check_controls", 8),
STACK_USAGE("nested_enable_evmcs", 0),
STACK_USAGE("nested_vmx_load_cr3", 40),
STACK_USAGE("kvm_pdptr_read", 16),
STACK_USAGE("vmx_set_vmx_msr", 0),
STACK_USAGE("vmx_get_vmx_msr", 0),
STACK_USAGE("nested_vmx_succeed", 8),
STACK_USAGE("copy_shadow_to_vmcs12", 80),
STACK_USAGE("copy_enlightened_to_vmcs12", 0),
STACK_USAGE("trace_kvm_nested_vmenter_failed", 0),
STACK_USAGE("nested_vmx_failInvalid", 8),
STACK_USAGE("nested_vmx_fail", 16),
STACK_USAGE("nested_vmx_handle_enlightened_vmptrld", 48),
STACK_USAGE("nested_sync_vmcs12_to_shadow", 96),
STACK_USAGE("vmx_preemption_timer_fn", 0),
STACK_USAGE("vmx_switch_vmcs", 24),
STACK_USAGE("nested_vmx_check_nmi_controls", 0),
STACK_USAGE("nested_vmx_check_eptp", 8),
STACK_USAGE("vmcs_clear", 16),
STACK_USAGE("vmcs_load", 16),
STACK_USAGE("nested_vmx_check_controls", 24),
STACK_USAGE("free_nested", 40),
STACK_USAGE("nested_vmx_check_host_state", 24),
STACK_USAGE("nested_vmx_check_guest_state", 56),
STACK_USAGE("vpid_sync_context", 24),
STACK_USAGE("nested_get_vmcs12_pages", 88),
STACK_USAGE("vpid_sync_vcpu_addr", 24),
STACK_USAGE("vmx_get_nested_state_pages", 8),
STACK_USAGE("nested_vmx_write_pml_buffer", 32),
STACK_USAGE("nested_vmx_free_vcpu", 8),
STACK_USAGE("nested_vmx_enter_non_root_mode", 856),
STACK_USAGE("nested_vmx_run", 48),
STACK_USAGE("nested_ept_inject_page_fault", 64),
STACK_USAGE("nested_mark_vmcs12_pages_dirty", 16),
STACK_USAGE("nested_vmx_preemption_timer_pending", 0),
STACK_USAGE("vmx_check_nested_events", 80),
STACK_USAGE("sync_vmcs02_to_vmcs12_rare", 24),
STACK_USAGE("copy_vmcs02_to_vmcs12_rare", 40),
STACK_USAGE("sync_vmcs02_to_vmcs12", 48),
STACK_USAGE("load_vmcs12_host_state", 120),
STACK_USAGE("nested_vmx_restore_host_state", 104),
STACK_USAGE("nested_vmx_vmexit", 168),
STACK_USAGE("nested_vmx_triple_fault", 0),
STACK_USAGE("get_vmx_mem_address", 112),
STACK_USAGE("vmx_inject_page_fault_nested", 0),
STACK_USAGE("nested_vmx_pmu_refresh", 16),
STACK_USAGE("nested_vmx_get_vmptr", 80),
STACK_USAGE("enter_vmx_operation", 48),
STACK_USAGE("handle_vmon", 40),
STACK_USAGE("nested_release_vmcs12", 24),
STACK_USAGE("handle_vmoff", 8),
STACK_USAGE("handle_vmclear", 48),
STACK_USAGE("handle_vmlaunch", 0),
STACK_USAGE("handle_vmresume", 0),
STACK_USAGE("handle_vmread", 112),
STACK_USAGE("is_shadow_field_rw", 0),
STACK_USAGE("is_shadow_field_ro", 0),
STACK_USAGE("handle_vmwrite", 112),
STACK_USAGE("set_current_vmptr", 32),
STACK_USAGE("handle_vmptrld", 40),
STACK_USAGE("handle_vmptrst", 80),
STACK_USAGE("handle_invept", 88),
STACK_USAGE("handle_invvpid", 88),
STACK_USAGE("handle_vmfunc", 40),
STACK_USAGE("nested_vmx_check_io_bitmaps", 64),
STACK_USAGE("nested_vmx_exit_handled_vmcs_access", 56),
STACK_USAGE("nested_vmx_reflect_vmexit", 80),
STACK_USAGE("vmx_get_nested_state", 176),
STACK_USAGE("vmx_leave_nested", 8),
STACK_USAGE("vmx_set_nested_state", 64),
STACK_USAGE("nested_vmx_set_vmcs_shadowing_bitmap", 24),
STACK_USAGE("nested_vmx_setup_ctls_msrs", 32),
STACK_USAGE("nested_vmx_hardware_unsetup", 0),
STACK_USAGE("nested_vmx_hardware_setup", 56),
STACK_USAGE("nested_cache_shadow_vmcs12", 16),
STACK_USAGE("nested_ept_get_eptp", 0),
STACK_USAGE("nested_vmx_check_apic_access_controls", 0),
STACK_USAGE("nested_vmx_check_apicv_controls", 0),
STACK_USAGE("nested_vmx_check_pml_controls", 0),
STACK_USAGE("nested_vmx_check_shadow_vmcs_controls", 0),
STACK_USAGE("nested_vmx_load_msr", 72),
STACK_USAGE("intel_pmc_idx_to_pmc", 16),
STACK_USAGE("intel_is_valid_rdpmc_ecx", 0),
STACK_USAGE("intel_rdpmc_ecx_to_pmc", 8),
STACK_USAGE("pmc_update_sample_period", 0),
STACK_USAGE("intel_pmu_lbr_is_compatible", 8),
STACK_USAGE("intel_pmu_lbr_is_enabled", 16),
STACK_USAGE("intel_pmu_is_valid_lbr_msr", 24),
STACK_USAGE("intel_is_valid_msr", 48),
STACK_USAGE("intel_msr_idx_to_pmc", 24),
STACK_USAGE("intel_pmu_create_guest_lbr_event", 152),
STACK_USAGE("intel_pmu_handle_lbr_msrs_access", 176),
STACK_USAGE("intel_pmu_get_msr", 88),
STACK_USAGE("intel_pmu_set_msr", 128),
STACK_USAGE("intel_pmu_refresh", 80),
STACK_USAGE("pmc_read_counter", 40),
STACK_USAGE("intel_pmu_init", 16),
STACK_USAGE("intel_pmu_reset", 80),
STACK_USAGE("intel_pmu_deliver_pmi", 24),
STACK_USAGE("vmx_update_intercept_for_lbr_msrs", 24),
STACK_USAGE("vmx_passthrough_lbr_msrs", 8),
STACK_USAGE("intel_pmu_cleanup", 8),
STACK_USAGE("intel_pmc_perf_hw_id", 0),
STACK_USAGE("intel_pmc_is_enabled", 0),
STACK_USAGE("vmx_vcpu_pi_put", 0),
STACK_USAGE("pi_wakeup_handler", 16),
STACK_USAGE("pi_init_cpu", 0),
STACK_USAGE("pi_has_pending_interrupt", 0),
STACK_USAGE("vmx_pi_start_assignment", 0),
STACK_USAGE("vmx_pi_update_irte", 0),
STACK_USAGE("vmx_vcpu_pi_load", 48),
STACK_USAGE("pt_load_msr", 24),
STACK_USAGE("pt_save_msr", 32),
STACK_USAGE("vmx_set_host_fs_gs", 72),
STACK_USAGE("is_64_bit_mode", 16),
STACK_USAGE("vmx_prepare_switch_to_guest", 64),
STACK_USAGE("vmx_write_guest_kernel_gs_base", 16),
STACK_USAGE("vmx_vcpu_load_vmcs", 80),
STACK_USAGE("native_read_msr", 8),
STACK_USAGE("vmx_vcpu_load", 16),
STACK_USAGE("vmx_vcpu_put", 56),
STACK_USAGE("vmx_emulation_required", 0),
STACK_USAGE("vmx_get_rflags", 8),
STACK_USAGE("vmx_set_rflags", 40),
STACK_USAGE("vmx_get_if_flag", 0),
STACK_USAGE("vmx_get_interrupt_shadow", 0),
STACK_USAGE("vmx_set_interrupt_shadow", 16),
STACK_USAGE("vmx_rtit_ctl_check", 48),
STACK_USAGE("vmx_can_emulate_instruction", 8),
STACK_USAGE("skip_emulated_instruction", 16),
STACK_USAGE("vmx_update_emulated_instruction", 0),
STACK_USAGE("vmx_skip_emulated_instruction", 0),
STACK_USAGE("vmx_clear_hlt", 0),
STACK_USAGE("guest_has_spec_ctrl_msr", 16),
STACK_USAGE("vmx_queue_exception", 56),
STACK_USAGE("vmx_setup_uret_msrs", 40),
STACK_USAGE("guest_has_pred_cmd_msr", 16),
STACK_USAGE("vmx_get_l2_tsc_offset", 0),
STACK_USAGE("vmx_get_l2_tsc_multiplier", 0),
STACK_USAGE("cpu_has_vmx_wbinvd_exit", 0),
STACK_USAGE("vmx_write_tsc_offset", 8),
STACK_USAGE("vmx_write_tsc_multiplier", 8),
STACK_USAGE("nested_vmx_allowed", 8),
STACK_USAGE("vmx_get_msr_feature", 24),
STACK_USAGE("vmx_get_msr", 32),
STACK_USAGE("read_msr", 8),
STACK_USAGE("nested_vmx_truncate_sysenter_addr", 8),
STACK_USAGE("vcpu_supported_debugctl", 24),
STACK_USAGE("vmx_set_msr", 120),
STACK_USAGE("vmx_cache_reg", 16),
STACK_USAGE("cpu_has_kvm_support", 16),
STACK_USAGE("vmx_disabled_by_bios", 0),
STACK_USAGE("vmx_setup_l1d_flush", 24),
STACK_USAGE("vmx_hardware_enable", 64),
STACK_USAGE("vmx_hardware_disable", 40),
STACK_USAGE("adjust_vmx_controls", 40),
STACK_USAGE("setup_vmcs_config", 80),
STACK_USAGE("vmx_write_encls_bitmap", 0),
STACK_USAGE("alloc_vmcs_cpu", 16),
STACK_USAGE("free_vmcs", 0),
STACK_USAGE("free_loaded_vmcs", 8),
STACK_USAGE("alloc_loaded_vmcs", 40),
STACK_USAGE("alloc_kvm_area", 48),
STACK_USAGE("fix_rmode_seg", 104),
STACK_USAGE("vmx_set_efer", 40),
STACK_USAGE("rdmsrl_safe", 24),
STACK_USAGE("vmx_flush_tlb_all", 32),
STACK_USAGE("vmx_flush_tlb_current", 24),
STACK_USAGE("vmx_flush_tlb_gva", 24),
STACK_USAGE("vmx_flush_tlb_guest", 24),
STACK_USAGE("vmx_ept_load_pdptrs", 40),
STACK_USAGE("ept_save_pdptrs", 16),
STACK_USAGE("vmx_set_cr0", 192),
STACK_USAGE("construct_eptp", 0),
STACK_USAGE("vmx_load_mmu_pgd", 40),
STACK_USAGE("vmx_is_valid_cr4", 0),
STACK_USAGE("vmx_set_cr4", 72),
STACK_USAGE("vmx_get_segment", 48),
STACK_USAGE("vmx_get_segment_base", 32),
STACK_USAGE("vmx_get_cpl", 0),
STACK_USAGE("vmentry_l1d_flush_set", 24),
STACK_USAGE("__vmx_set_segment", 80),
STACK_USAGE("vmx_set_segment", 8),
STACK_USAGE("vmx_get_cs_db_l_bits", 16),
STACK_USAGE("vmx_get_idt", 8),
STACK_USAGE("vmx_set_idt", 24),
STACK_USAGE("vmx_get_gdt", 8),
STACK_USAGE("vmx_set_gdt", 24),
STACK_USAGE("rmode_segment_valid", 40),
STACK_USAGE("data_segment_valid", 32),
STACK_USAGE("tr_valid", 32),
STACK_USAGE("ldtr_valid", 32),
STACK_USAGE("__vmx_guest_state_valid", 72),
STACK_USAGE("vmentry_l1d_flush_get", 0),
STACK_USAGE("cpu_has_vmx_intel_pt", 8),
STACK_USAGE("seg_setup", 24),
STACK_USAGE("allocate_vpid", 8),
STACK_USAGE("free_vpid", 8),
STACK_USAGE("vmx_disable_intercept_for_msr", 32),
STACK_USAGE("vmx_enable_intercept_for_msr", 32),
STACK_USAGE("vmread_error", 8),
STACK_USAGE("vmx_update_msr_bitmap_x2apic", 16),
STACK_USAGE("pt_update_intercept_for_msr", 32),
STACK_USAGE("vmx_guest_apic_has_interrupt", 8),
STACK_USAGE("vmwrite_error", 16),
STACK_USAGE("vmx_get_perf_capabilities", 8),
STACK_USAGE("vmx_msr_filter_changed", 40),
STACK_USAGE("vmclear_error", 16),
STACK_USAGE("vmptrld_error", 16),
STACK_USAGE("vmx_deliver_interrupt", 32),
STACK_USAGE("invvpid_error", 24),
STACK_USAGE("vmx_set_constant_host_state", 88),
STACK_USAGE("invept_error", 24),
STACK_USAGE("set_cr4_guest_host_mask", 8),
STACK_USAGE("vmx_refresh_apicv_exec_ctrl", 48),
STACK_USAGE("vmx_secondary_exec_control", 24),
STACK_USAGE("trace_kvm_cr", 0),
STACK_USAGE("vmx_vcpu_reset", 168),
STACK_USAGE("vmx_enable_irq_window", 24),
STACK_USAGE("vmx_enable_nmi_window", 32),
STACK_USAGE("vmx_inject_irq", 32),
STACK_USAGE("vmx_inject_nmi", 8),
STACK_USAGE("vmx_get_nmi_mask", 8),
STACK_USAGE("vmx_set_nmi_mask", 24),
STACK_USAGE("vmx_nmi_blocked", 0),
STACK_USAGE("vmx_nmi_allowed", 0),
STACK_USAGE("vmx_interrupt_blocked", 0),
STACK_USAGE("vmx_interrupt_allowed", 0),
STACK_USAGE("vmx_set_tss_addr", 48),
STACK_USAGE("vmx_set_identity_map_addr", 0),
STACK_USAGE("rmode_exception", 8),
STACK_USAGE("handle_rmode_exception", 16),
STACK_USAGE("handle_machine_check", 0),
STACK_USAGE("vmx_guest_inject_ac", 8),
STACK_USAGE("handle_exception_nmi", 64),
STACK_USAGE("handle_external_interrupt", 0),
STACK_USAGE("handle_triple_fault", 0),
STACK_USAGE("handle_io", 8),
STACK_USAGE("vmx_patch_hypercall", 0),
STACK_USAGE("handle_desc", 0),
STACK_USAGE("handle_cr", 80),
STACK_USAGE("vmx_get_exit_qual", 8),
STACK_USAGE("handle_dr", 64),
STACK_USAGE("vmx_sync_dirty_debug_regs", 24),
STACK_USAGE("vmx_set_dr7", 8),
STACK_USAGE("handle_tpr_below_threshold", 0),
STACK_USAGE("handle_interrupt_window", 24),
STACK_USAGE("handle_invlpg", 8),
STACK_USAGE("cpu_has_broken_vmx_preemption_timer", 8),
STACK_USAGE("handle_apic_access", 8),
STACK_USAGE("handle_apic_eoi_induced", 8),
STACK_USAGE("handle_apic_write", 8),
STACK_USAGE("handle_task_switch", 56),
STACK_USAGE("handle_ept_violation", 40),
STACK_USAGE("handle_ept_misconfig", 16),
STACK_USAGE("possible_passthrough_msr_slot", 0),
STACK_USAGE("handle_nmi_window", 24),
STACK_USAGE("vmx_vcpu_pre_run", 0),
STACK_USAGE("is_valid_passthrough_msr", 16),
STACK_USAGE("handle_pause", 8),
STACK_USAGE("handle_monitor_trap", 0),
STACK_USAGE("handle_invpcid", 56),
STACK_USAGE("handle_pml_full", 16),
STACK_USAGE("handle_preemption_timer", 0),
STACK_USAGE("handle_vmx_instruction", 0),
STACK_USAGE("handle_encls", 0),
STACK_USAGE("handle_bus_lock_vmexit", 0),
STACK_USAGE("vmx_get_exit_info", 40),
STACK_USAGE("vmx_dump_sel", 48),
STACK_USAGE("vmx_dump_dtsel", 32),
STACK_USAGE("dump_vmcs", 104),
STACK_USAGE("vmx_find_uret_msr", 8),
STACK_USAGE("vmx_set_guest_uret_msr", 24),
STACK_USAGE("crash_vmclear_local_loaded_vmcss", 40),
STACK_USAGE("vmx_handle_exit", 64),
STACK_USAGE("vmx_l1d_flush", 24),
STACK_USAGE("__loaded_vmcs_clear", 24),
STACK_USAGE("vmx_update_cr8_intercept", 8),
STACK_USAGE("vmx_set_virtual_apic_mode", 24),
STACK_USAGE("vmx_set_apic_access_page_addr", 24),
STACK_USAGE("vmx_hwapic_isr_update", 16),
STACK_USAGE("vmx_set_rvi", 24),
STACK_USAGE("vmx_hwapic_irr_update", 0),
STACK_USAGE("vmx_sync_pir_to_irr", 32),
STACK_USAGE("vmx_load_eoi_exitmap", 40),
STACK_USAGE("vmx_apicv_post_state_restore", 0),
STACK_USAGE("loaded_vmcs_clear", 0),
STACK_USAGE("vmx_handle_exit_irqoff", 192),
STACK_USAGE("vmx_has_emulated_msr", 0),
STACK_USAGE("__vmx_complete_interrupts", 40),
STACK_USAGE("vmx_cancel_injection", 8),
STACK_USAGE("vmx_update_host_rsp", 8),
STACK_USAGE("vmx_vcpu_enter_exit", 24),
STACK_USAGE("vmx_vcpu_run", 272),
STACK_USAGE("vmx_read_guest_seg_selector", 16),
STACK_USAGE("vmx_read_guest_seg_base", 16),
STACK_USAGE("vmx_vcpu_free", 16),
STACK_USAGE("vmx_vcpu_create", 80),
STACK_USAGE("vmx_read_guest_seg_ar", 16),
STACK_USAGE("vmx_vm_init", 0),
STACK_USAGE("vmx_check_processor_compat", 160),
STACK_USAGE("vmx_update_exception_bitmap", 48),
STACK_USAGE("vmx_get_mt_mask", 16),
STACK_USAGE("vmx_vcpu_after_set_cpuid", 64),
STACK_USAGE("vmx_set_cpu_caps", 0),
STACK_USAGE("vmx_request_immediate_exit", 0),
STACK_USAGE("vmx_check_intercept", 0),
STACK_USAGE("vmx_set_hv_timer", 56),
STACK_USAGE("vmx_cancel_hv_timer", 0),
STACK_USAGE("vmx_sched_in", 0),
STACK_USAGE("vmx_update_cpu_dirty_logging", 40),
STACK_USAGE("vmx_setup_mce", 0),
STACK_USAGE("vmx_smi_allowed", 0),
STACK_USAGE("vmx_enter_smm", 8),
STACK_USAGE("vmx_leave_smm", 8),
STACK_USAGE("vmx_enable_smi_window", 0),
STACK_USAGE("vmx_apic_init_signal_blocked", 0),
STACK_USAGE("vmx_migrate_timers", 16),
STACK_USAGE("vmx_hardware_unsetup", 8),
STACK_USAGE("vmx_check_apicv_inhibit_reasons", 0),
STACK_USAGE("vmx_handle_intel_pt_intr", 0),
STACK_USAGE("clear_atomic_switch_msr_special", 40),
STACK_USAGE("hardware_setup", 32),
STACK_USAGE("vmx_find_loadstore_msr_slot", 0),
STACK_USAGE("clear_atomic_switch_msr", 32),
STACK_USAGE("vmx_exit", 0),
STACK_USAGE("vmx_init", 8),
STACK_USAGE("add_atomic_switch_msr_special", 72),
STACK_USAGE("add_atomic_switch_msr", 64),
STACK_USAGE("trace_kvm_ple_window_update", 0),
STACK_USAGE("__bpf_trace_kvm_smm_transition", 0),
STACK_USAGE("__traceiter_kvm_smm_transition", 32),
STACK_USAGE("perf_trace_kvm_smm_transition", 72),
STACK_USAGE("trace_event_raw_event_kvm_smm_transition", 88),
STACK_USAGE("trace_raw_output_kvm_smm_transition", 24),
STACK_USAGE("complete_emulated_pio", 0),
STACK_USAGE("complete_emulated_mmio", 48),
STACK_USAGE("__bpf_trace_kvm_pi_irte_update", 0),
STACK_USAGE("__traceiter_kvm_pi_irte_update", 56),
STACK_USAGE("perf_trace_kvm_pi_irte_update", 80),
STACK_USAGE("trace_event_raw_event_kvm_pi_irte_update", 104),
STACK_USAGE("trace_raw_output_kvm_pi_irte_update", 24),
STACK_USAGE("kvm_arch_vcpu_ioctl_run", 72),
STACK_USAGE("kvm_emulate_xsetbv", 24),
STACK_USAGE("__get_regs", 16),
STACK_USAGE("kvm_arch_vcpu_ioctl_get_regs", 16),
STACK_USAGE("__set_regs", 32),
STACK_USAGE("kvm_arch_vcpu_ioctl_set_regs", 16),
STACK_USAGE("__get_sregs_common", 48),
STACK_USAGE("kvm_is_valid_cr4", 0),
STACK_USAGE("__get_sregs2", 16),
STACK_USAGE("kvm_arch_vcpu_ioctl_get_sregs", 16),
STACK_USAGE("kvm_arch_vcpu_ioctl_get_mpstate", 24),
STACK_USAGE("kvm_arch_vcpu_ioctl_set_mpstate", 24),
STACK_USAGE("kvm_task_switch", 56),
STACK_USAGE("kvm_post_set_cr4", 32),
STACK_USAGE("__bpf_trace_kvm_hv_notify_acked_sint", 0),
STACK_USAGE("__traceiter_kvm_hv_notify_acked_sint", 24),
STACK_USAGE("perf_trace_kvm_hv_notify_acked_sint", 64),
STACK_USAGE("trace_event_raw_event_kvm_hv_notify_acked_sint", 80),
STACK_USAGE("trace_raw_output_kvm_hv_notify_acked_sint", 24),
STACK_USAGE("__set_sregs_common", 80),
STACK_USAGE("__set_sregs2", 32),
STACK_USAGE("kvm_arch_vcpu_ioctl_set_sregs", 40),
STACK_USAGE("kvm_arch_vcpu_ioctl_set_guest_debug", 64),
STACK_USAGE("__bpf_trace_kvm_hv_synic_set_irq", 0),
STACK_USAGE("__traceiter_kvm_hv_synic_set_irq", 40),
STACK_USAGE("perf_trace_kvm_hv_synic_set_irq", 72),
STACK_USAGE("trace_event_raw_event_kvm_hv_synic_set_irq", 96),
STACK_USAGE("trace_raw_output_kvm_hv_synic_set_irq", 24),
STACK_USAGE("kvm_arch_vcpu_ioctl_translate", 40),
STACK_USAGE("kvm_arch_vcpu_ioctl_get_fpu", 16),
STACK_USAGE("kvm_arch_vcpu_ioctl_set_fpu", 16),
STACK_USAGE("kvm_arch_vcpu_precreate", 8),
STACK_USAGE("kvm_arch_vcpu_create", 24),
STACK_USAGE("kvm_set_cr4", 32),
STACK_USAGE("__bpf_trace_kvm_hv_synic_send_eoi", 0),
STACK_USAGE("__traceiter_kvm_hv_synic_send_eoi", 24),
STACK_USAGE("perf_trace_kvm_hv_synic_send_eoi", 64),
STACK_USAGE("trace_event_raw_event_kvm_hv_synic_send_eoi", 80),
STACK_USAGE("trace_raw_output_kvm_hv_synic_send_eoi", 24),
STACK_USAGE("kvm_arch_vcpu_postcreate", 24),
STACK_USAGE("kvm_arch_vcpu_destroy", 32),
STACK_USAGE("kvm_vcpu_reset", 80),
STACK_USAGE("kvm_vcpu_deliver_sipi_vector", 56),
STACK_USAGE("kvm_arch_hardware_enable", 88),
STACK_USAGE("__bpf_trace_kvm_hv_synic_set_msr", 0),
STACK_USAGE("__traceiter_kvm_hv_synic_set_msr", 40),
STACK_USAGE("perf_trace_kvm_hv_synic_set_msr", 72),
STACK_USAGE("trace_event_raw_event_kvm_hv_synic_set_msr", 96),
STACK_USAGE("trace_raw_output_kvm_hv_synic_set_msr", 24),
STACK_USAGE("kvm_invalidate_pcid", 24),
STACK_USAGE("kvm_arch_hardware_disable", 0),
STACK_USAGE("kvm_arch_hardware_setup", 88),
STACK_USAGE("__bpf_trace_kvm_xen_hypercall", 0),
STACK_USAGE("__traceiter_kvm_xen_hypercall", 48),
STACK_USAGE("perf_trace_kvm_xen_hypercall", 88),
STACK_USAGE("trace_event_raw_event_kvm_xen_hypercall", 104),
STACK_USAGE("trace_raw_output_kvm_xen_hypercall", 24),
STACK_USAGE("kvm_arch_hardware_unsetup", 0),
STACK_USAGE("kvm_arch_check_processor_compat", 24),
STACK_USAGE("kvm_vcpu_is_reset_bsp", 0),
STACK_USAGE("kvm_vcpu_is_bsp", 0),
STACK_USAGE("kvm_arch_sched_in", 0),
STACK_USAGE("kvm_arch_free_vm", 8),
STACK_USAGE("kvm_arch_init_vm", 24),
STACK_USAGE("kvm_arch_post_init_vm", 0),
STACK_USAGE("__bpf_trace_kvm_hv_stimer_set_config", 0),
STACK_USAGE("__traceiter_kvm_hv_stimer_set_config", 40),
STACK_USAGE("perf_trace_kvm_hv_stimer_set_config", 72),
STACK_USAGE("trace_event_raw_event_kvm_hv_stimer_set_config", 96),
STACK_USAGE("trace_raw_output_kvm_hv_stimer_set_config", 24),
STACK_USAGE("kvm_arch_sync_events", 8),
STACK_USAGE("__x86_set_memory_region", 96),
STACK_USAGE("kvm_arch_pre_destroy_vm", 0),
STACK_USAGE("kvm_arch_destroy_vm", 48),
STACK_USAGE("kvm_arch_free_memslot", 8),
STACK_USAGE("memslot_rmap_alloc", 24),
STACK_USAGE("kvm_set_cr3", 56),
STACK_USAGE("kvm_arch_memslots_updated", 40),
STACK_USAGE("__bpf_trace_kvm_hv_stimer_set_count", 0),
STACK_USAGE("__traceiter_kvm_hv_stimer_set_count", 40),
STACK_USAGE("perf_trace_kvm_hv_stimer_set_count", 72),
STACK_USAGE("trace_event_raw_event_kvm_hv_stimer_set_count", 96),
STACK_USAGE("trace_raw_output_kvm_hv_stimer_set_count", 24),
STACK_USAGE("kvm_arch_prepare_memory_region", 48),
STACK_USAGE("kvm_arch_commit_memory_region", 40),
STACK_USAGE("kvm_arch_flush_shadow_all", 0),
STACK_USAGE("kvm_arch_flush_shadow_memslot", 0),
STACK_USAGE("kvm_arch_vcpu_runnable", 16),
STACK_USAGE("kvm_arch_dy_has_pending_interrupt", 0),
STACK_USAGE("kvm_arch_dy_runnable", 8),
STACK_USAGE("kvm_arch_vcpu_in_kernel", 0),
STACK_USAGE("kvm_arch_vcpu_get_ip", 8),
STACK_USAGE("kvm_arch_vcpu_should_kick", 0),
STACK_USAGE("kvm_arch_interrupt_allowed", 0),
STACK_USAGE("kvm_get_linear_rip", 32),
STACK_USAGE("__bpf_trace_kvm_hv_stimer_start_periodic", 0),
STACK_USAGE("__traceiter_kvm_hv_stimer_start_periodic", 40),
STACK_USAGE("perf_trace_kvm_hv_stimer_start_periodic", 80),
STACK_USAGE("trace_event_raw_event_kvm_hv_stimer_start_periodic", 96),
STACK_USAGE("trace_raw_output_kvm_hv_stimer_start_periodic", 24),
STACK_USAGE("kvm_is_linear_rip", 8),
STACK_USAGE("kvm_get_rflags", 8),
STACK_USAGE("kvm_set_rflags", 24),
STACK_USAGE("kvm_arch_async_page_ready", 96),
STACK_USAGE("kvm_find_async_pf_gfn", 0),
STACK_USAGE("kvm_can_do_async_pf", 8),
STACK_USAGE("kvm_arch_async_page_not_present", 48),
STACK_USAGE("kvm_arch_async_page_present", 56),
STACK_USAGE("kvm_set_cr8", 0),
STACK_USAGE("kvm_arch_async_page_present_queued", 0),
STACK_USAGE("kvm_arch_can_dequeue_async_page_present", 16),
STACK_USAGE("__bpf_trace_kvm_hv_stimer_start_one_shot", 0),
STACK_USAGE("__traceiter_kvm_hv_stimer_start_one_shot", 40),
STACK_USAGE("perf_trace_kvm_hv_stimer_start_one_shot", 80),
STACK_USAGE("trace_event_raw_event_kvm_hv_stimer_start_one_shot", 96),
STACK_USAGE("trace_raw_output_kvm_hv_stimer_start_one_shot", 24),
STACK_USAGE("kvm_arch_start_assignment", 0),
STACK_USAGE("kvm_arch_end_assignment", 0),
STACK_USAGE("kvm_arch_has_assigned_device", 0),
STACK_USAGE("kvm_arch_register_noncoherent_dma", 0),
STACK_USAGE("kvm_arch_unregister_noncoherent_dma", 0),
STACK_USAGE("kvm_arch_has_noncoherent_dma", 0),
STACK_USAGE("kvm_arch_has_irq_bypass", 0),
STACK_USAGE("kvm_arch_irq_bypass_add_producer", 16),
STACK_USAGE("kvm_arch_irq_bypass_del_producer", 8),
STACK_USAGE("kvm_arch_update_irqfd_routing", 0),
STACK_USAGE("kvm_arch_irqfd_route_changed", 0),
STACK_USAGE("kvm_get_cr8", 0),
STACK_USAGE("kvm_vector_hashing_enabled", 0),
STACK_USAGE("kvm_arch_no_poll", 0),
STACK_USAGE("kvm_spec_ctrl_test_value", 56),
STACK_USAGE("kvm_fixup_and_inject_pf_error", 56),
STACK_USAGE("kvm_handle_memory_failure", 88),
STACK_USAGE("kvm_handle_invpcid", 112),
STACK_USAGE("complete_sev_es_emulated_mmio", 40),
STACK_USAGE("__bpf_trace_kvm_hv_stimer_callback", 0),
STACK_USAGE("__traceiter_kvm_hv_stimer_callback", 24),
STACK_USAGE("perf_trace_kvm_hv_stimer_callback", 64),
STACK_USAGE("trace_event_raw_event_kvm_hv_stimer_callback", 80),
STACK_USAGE("trace_raw_output_kvm_hv_stimer_callback", 24),
STACK_USAGE("kvm_update_dr7", 16),
STACK_USAGE("kvm_sev_es_mmio_write", 72),
STACK_USAGE("kvm_sev_es_mmio_read", 72),
STACK_USAGE("complete_sev_es_emulated_outs", 48),
STACK_USAGE("complete_sev_es_emulated_ins", 48),
STACK_USAGE("kvm_sev_es_string_io", 48),
STACK_USAGE("__bpf_trace_kvm_hv_stimer_expiration", 0),
STACK_USAGE("__traceiter_kvm_hv_stimer_expiration", 40),
STACK_USAGE("perf_trace_kvm_hv_stimer_expiration", 72),
STACK_USAGE("trace_event_raw_event_kvm_hv_stimer_expiration", 96),
STACK_USAGE("trace_raw_output_kvm_hv_stimer_expiration", 24),
STACK_USAGE("kvm_x86_init", 0),
STACK_USAGE("kvm_x86_exit", 0),
STACK_USAGE("kvm_set_dr", 24),
STACK_USAGE("__bpf_trace_kvm_hv_stimer_cleanup", 0),
STACK_USAGE("__traceiter_kvm_hv_stimer_cleanup", 24),
STACK_USAGE("perf_trace_kvm_hv_stimer_cleanup", 64),
STACK_USAGE("trace_event_raw_event_kvm_hv_stimer_cleanup", 80),
STACK_USAGE("trace_raw_output_kvm_hv_stimer_cleanup", 24),
STACK_USAGE("kvm_get_dr", 0),
STACK_USAGE("__bpf_trace_kvm_apicv_inhibit_changed", 0),
STACK_USAGE("__traceiter_kvm_apicv_inhibit_changed", 32),
STACK_USAGE("perf_trace_kvm_apicv_inhibit_changed", 72),
STACK_USAGE("trace_event_raw_event_kvm_apicv_inhibit_changed", 88),
STACK_USAGE("trace_raw_output_kvm_apicv_inhibit_changed", 24),
STACK_USAGE("kvm_emulate_rdpmc", 40),
STACK_USAGE("__bpf_trace_kvm_apicv_accept_irq", 0),
STACK_USAGE("__traceiter_kvm_apicv_accept_irq", 40),
STACK_USAGE("perf_trace_kvm_apicv_accept_irq", 72),
STACK_USAGE("trace_event_raw_event_kvm_apicv_accept_irq", 96),
STACK_USAGE("trace_raw_output_kvm_apicv_accept_irq", 40),
STACK_USAGE("__bpf_trace_kvm_avic_incomplete_ipi", 0),
STACK_USAGE("__traceiter_kvm_avic_incomplete_ipi", 48),
STACK_USAGE("perf_trace_kvm_avic_incomplete_ipi", 80),
STACK_USAGE("trace_event_raw_event_kvm_avic_incomplete_ipi", 104),
STACK_USAGE("trace_raw_output_kvm_avic_incomplete_ipi", 24),
STACK_USAGE("__bpf_trace_kvm_avic_unaccelerated_access", 0),
STACK_USAGE("__traceiter_kvm_avic_unaccelerated_access", 48),
STACK_USAGE("perf_trace_kvm_avic_unaccelerated_access", 80),
STACK_USAGE("trace_event_raw_event_kvm_avic_unaccelerated_access", 104),
STACK_USAGE("trace_raw_output_kvm_avic_unaccelerated_access", 40),
STACK_USAGE("__bpf_trace_kvm_avic_ga_log", 0),
STACK_USAGE("__traceiter_kvm_avic_ga_log", 24),
STACK_USAGE("perf_trace_kvm_avic_ga_log", 64),
STACK_USAGE("trace_event_raw_event_kvm_avic_ga_log", 80),
STACK_USAGE("trace_raw_output_kvm_avic_ga_log", 24),
STACK_USAGE("__bpf_trace_kvm_hv_timer_state", 0),
STACK_USAGE("__traceiter_kvm_hv_timer_state", 24),
STACK_USAGE("perf_trace_kvm_hv_timer_state", 64),
STACK_USAGE("trace_event_raw_event_kvm_hv_timer_state", 80),
STACK_USAGE("trace_raw_output_kvm_hv_timer_state", 24),
STACK_USAGE("__bpf_trace_kvm_hv_flush_tlb", 0),
STACK_USAGE("__traceiter_kvm_hv_flush_tlb", 32),
STACK_USAGE("perf_trace_kvm_hv_flush_tlb", 72),
STACK_USAGE("trace_event_raw_event_kvm_hv_flush_tlb", 88),
STACK_USAGE("trace_raw_output_kvm_hv_flush_tlb", 24),
STACK_USAGE("__bpf_trace_kvm_hv_flush_tlb_ex", 0),
STACK_USAGE("__traceiter_kvm_hv_flush_tlb_ex", 40),
STACK_USAGE("perf_trace_kvm_hv_flush_tlb_ex", 80),
STACK_USAGE("trace_event_raw_event_kvm_hv_flush_tlb_ex", 96),
STACK_USAGE("trace_raw_output_kvm_hv_flush_tlb_ex", 24),
STACK_USAGE("__bpf_trace_kvm_hv_send_ipi", 0),
STACK_USAGE("__traceiter_kvm_hv_send_ipi", 24),
STACK_USAGE("perf_trace_kvm_hv_send_ipi", 64),
STACK_USAGE("trace_event_raw_event_kvm_hv_send_ipi", 80),
STACK_USAGE("trace_raw_output_kvm_hv_send_ipi", 24),
STACK_USAGE("__bpf_trace_kvm_hv_send_ipi_ex", 0),
STACK_USAGE("__traceiter_kvm_hv_send_ipi_ex", 32),
STACK_USAGE("perf_trace_kvm_hv_send_ipi_ex", 72),
STACK_USAGE("trace_event_raw_event_kvm_hv_send_ipi_ex", 88),
STACK_USAGE("trace_raw_output_kvm_hv_send_ipi_ex", 24),
STACK_USAGE("__bpf_trace_kvm_pio", 0),
STACK_USAGE("__traceiter_kvm_pio", 48),
STACK_USAGE("perf_trace_kvm_pio", 88),
STACK_USAGE("trace_event_raw_event_kvm_pio", 104),
STACK_USAGE("trace_kvm_pio", 0),
STACK_USAGE("trace_raw_output_kvm_pio", 24),
STACK_USAGE("__bpf_trace_kvm_pv_tlb_flush", 0),
STACK_USAGE("__traceiter_kvm_pv_tlb_flush", 24),
STACK_USAGE("perf_trace_kvm_pv_tlb_flush", 64),
STACK_USAGE("trace_event_raw_event_kvm_pv_tlb_flush", 80),
STACK_USAGE("trace_raw_output_kvm_pv_tlb_flush", 24),
STACK_USAGE("__bpf_trace_kvm_nested_vmenter_failed", 0),
STACK_USAGE("__traceiter_kvm_nested_vmenter_failed", 24),
STACK_USAGE("perf_trace_kvm_nested_vmenter_failed", 80),
STACK_USAGE("trace_event_raw_event_kvm_nested_vmenter_failed", 96),
STACK_USAGE("trace_raw_output_kvm_nested_vmenter_failed", 32),
STACK_USAGE("kvm_get_msr_feature", 16),
STACK_USAGE("do_get_msr_feature", 48),
STACK_USAGE("__bpf_trace_kvm_hv_syndbg_set_msr", 0),
STACK_USAGE("__traceiter_kvm_hv_syndbg_set_msr", 40),
STACK_USAGE("perf_trace_kvm_hv_syndbg_set_msr", 80),
STACK_USAGE("trace_event_raw_event_kvm_hv_syndbg_set_msr", 96),
STACK_USAGE("trace_raw_output_kvm_hv_syndbg_set_msr", 24),
STACK_USAGE("__kvm_valid_efer", 24),
STACK_USAGE("__bpf_trace_kvm_hv_syndbg_get_msr", 0),
STACK_USAGE("__traceiter_kvm_hv_syndbg_get_msr", 40),
STACK_USAGE("perf_trace_kvm_hv_syndbg_get_msr", 80),
STACK_USAGE("trace_event_raw_event_kvm_hv_syndbg_get_msr", 96),
STACK_USAGE("trace_raw_output_kvm_hv_syndbg_get_msr", 24),
STACK_USAGE("kvm_valid_efer", 0),
STACK_USAGE("set_efer", 32),
STACK_USAGE("__bpf_trace_kvm_vmgexit_enter", 0),
STACK_USAGE("__traceiter_kvm_vmgexit_enter", 24),
STACK_USAGE("perf_trace_kvm_vmgexit_enter", 64),
STACK_USAGE("trace_event_raw_event_kvm_vmgexit_enter", 80),
STACK_USAGE("trace_raw_output_kvm_vmgexit_enter", 24),
STACK_USAGE("__bpf_trace_kvm_vmgexit_exit", 0),
STACK_USAGE("__traceiter_kvm_vmgexit_exit", 24),
STACK_USAGE("kvm_enable_efer_bits", 0),
STACK_USAGE("perf_trace_kvm_vmgexit_exit", 64),
STACK_USAGE("trace_event_raw_event_kvm_vmgexit_exit", 80),
STACK_USAGE("trace_raw_output_kvm_vmgexit_exit", 24),
STACK_USAGE("kvm_msr_allowed", 56),
STACK_USAGE("__bpf_trace_kvm_vmgexit_msr_protocol_enter", 0),
STACK_USAGE("__traceiter_kvm_vmgexit_msr_protocol_enter", 24),
STACK_USAGE("perf_trace_kvm_vmgexit_msr_protocol_enter", 64),
STACK_USAGE("trace_event_raw_event_kvm_vmgexit_msr_protocol_enter", 80),
STACK_USAGE("trace_raw_output_kvm_vmgexit_msr_protocol_enter", 24),
STACK_USAGE("__bpf_trace_kvm_vmgexit_msr_protocol_exit", 0),
STACK_USAGE("__traceiter_kvm_vmgexit_msr_protocol_exit", 32),
STACK_USAGE("perf_trace_kvm_vmgexit_msr_protocol_exit", 72),
STACK_USAGE("trace_event_raw_event_kvm_vmgexit_msr_protocol_exit", 88),
STACK_USAGE("trace_raw_output_kvm_vmgexit_msr_protocol_exit", 24),
STACK_USAGE("__kvm_set_msr", 64),
STACK_USAGE("__bpf_trace_kvm_entry", 0),
STACK_USAGE("__traceiter_kvm_entry", 16),
STACK_USAGE("perf_trace_kvm_entry", 64),
STACK_USAGE("trace_event_raw_event_kvm_entry", 72),
STACK_USAGE("trace_raw_output_kvm_entry", 24),
STACK_USAGE("kvm_clear_apicv_inhibit", 16),
STACK_USAGE("__kvm_get_msr", 64),
STACK_USAGE("kvm_inject_gp", 0),
STACK_USAGE("kvm_get_msr_with_filter", 24),
STACK_USAGE("srcu_read_unlock", 16),
STACK_USAGE("kvm_get_msr", 16),
STACK_USAGE("kvm_set_msr", 24),
STACK_USAGE("complete_emulated_msr_access", 0),
STACK_USAGE("complete_emulated_rdmsr", 0),
STACK_USAGE("__bpf_trace_kvm_fast_mmio", 0),
STACK_USAGE("__traceiter_kvm_fast_mmio", 16),
STACK_USAGE("perf_trace_kvm_fast_mmio", 56),
STACK_USAGE("trace_event_raw_event_kvm_fast_mmio", 72),
STACK_USAGE("trace_raw_output_kvm_fast_mmio", 24),
STACK_USAGE("complete_fast_msr_access", 0),
STACK_USAGE("complete_fast_rdmsr", 0),
STACK_USAGE("kvm_emulate_rdmsr", 48),
STACK_USAGE("kvm_lapic_enabled", 0),
STACK_USAGE("kvm_emulate_wrmsr", 48),
STACK_USAGE("kvm_emulate_as_nop", 24),
STACK_USAGE("kvm_emulate_invd", 24),
STACK_USAGE("kvm_emulate_mwait", 24),
STACK_USAGE("kvm_handle_invalid_op", 0),
STACK_USAGE("kvm_emulate_monitor", 24),
STACK_USAGE("kvm_vcpu_exit_request", 8),
STACK_USAGE("handle_fastpath_set_msr_irqoff", 40),
STACK_USAGE("__bpf_trace_kvm_cpuid", 0),
STACK_USAGE("__traceiter_kvm_cpuid", 64),
STACK_USAGE("perf_trace_kvm_cpuid", 88),
STACK_USAGE("trace_event_raw_event_kvm_cpuid", 104),
STACK_USAGE("trace_raw_output_kvm_cpuid", 24),
STACK_USAGE("do_get_msr", 48),
STACK_USAGE("trace_kvm_mmio", 0),
STACK_USAGE("kvm_write_wall_clock", 88),
STACK_USAGE("kvm_write_system_time", 8),
STACK_USAGE("kvm_get_time_scale", 4),
STACK_USAGE("kvm_set_tsc_khz", 56),
STACK_USAGE("trace_kvm_fpu", 0),
STACK_USAGE("kvm_scale_tsc", 0),
STACK_USAGE("kvm_read_l1_tsc", 0),
STACK_USAGE("kvm_calc_nested_tsc_offset", 0),
STACK_USAGE("kvm_calc_nested_tsc_multiplier", 0),
STACK_USAGE("kvm_vcpu_write_tsc_offset", 24),
STACK_USAGE("__kvm_synchronize_tsc", 48),
STACK_USAGE("__bpf_trace_kvm_apic", 0),
STACK_USAGE("__traceiter_kvm_apic", 32),
STACK_USAGE("perf_trace_kvm_apic", 72),
STACK_USAGE("trace_event_raw_event_kvm_apic", 88),
STACK_USAGE("trace_raw_output_kvm_apic", 32),
STACK_USAGE("kvm_synchronize_tsc", 72),
STACK_USAGE("adjust_tsc_offset_host", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("kvm_get_walltime_and_clockread", 40),
STACK_USAGE("pvclock_update_vm_gtod_copy", 64),
STACK_USAGE("kvm_start_pvclock_update", 8),
STACK_USAGE("kvm_end_pvclock_update", 40),
STACK_USAGE("get_kvmclock", 96),
STACK_USAGE("get_kvmclock_ns", 56),
STACK_USAGE("kvm_setup_pvclock_page", 72),
STACK_USAGE("kvmclock_update_fn", 40),
STACK_USAGE("kvmclock_sync_fn", 8),
STACK_USAGE("set_msr_mce", 40),
STACK_USAGE("kvm_pv_enable_async_pf", 24),
STACK_USAGE("__bpf_trace_kvm_exit", 0),
STACK_USAGE("__traceiter_kvm_exit", 24),
STACK_USAGE("perf_trace_kvm_exit", 72),
STACK_USAGE("trace_event_raw_event_kvm_exit", 80),
STACK_USAGE("trace_raw_output_kvm_exit", 56),
STACK_USAGE("kvm_service_local_tlb_flush_requests", 8),
STACK_USAGE("__bpf_trace_kvm_inj_virq", 0),
STACK_USAGE("__traceiter_kvm_inj_virq", 16),
STACK_USAGE("perf_trace_kvm_inj_virq", 56),
STACK_USAGE("trace_event_raw_event_kvm_inj_virq", 72),
STACK_USAGE("trace_raw_output_kvm_inj_virq", 24),
STACK_USAGE("kvm_set_msr_common", 72),
STACK_USAGE("kvm_on_user_return", 40),
STACK_USAGE("__bpf_trace_kvm_inj_exception", 0),
STACK_USAGE("__traceiter_kvm_inj_exception", 32),
STACK_USAGE("perf_trace_kvm_inj_exception", 72),
STACK_USAGE("trace_event_raw_event_kvm_inj_exception", 88),
STACK_USAGE("trace_raw_output_kvm_inj_exception", 24),
STACK_USAGE("__bpf_trace_kvm_hypercall", 0),
STACK_USAGE("__traceiter_kvm_hypercall", 48),
STACK_USAGE("perf_trace_kvm_hypercall", 88),
STACK_USAGE("trace_event_raw_event_kvm_hypercall", 104),
STACK_USAGE("trace_raw_output_kvm_hypercall", 24),
STACK_USAGE("kvm_get_msr_common", 32),
STACK_USAGE("__bpf_trace_kvm_page_fault", 0),
STACK_USAGE("__traceiter_kvm_page_fault", 24),
STACK_USAGE("perf_trace_kvm_page_fault", 64),
STACK_USAGE("trace_event_raw_event_kvm_page_fault", 80),
STACK_USAGE("trace_raw_output_kvm_page_fault", 24),
STACK_USAGE("kvm_add_user_return_msr", 24),
STACK_USAGE("__bpf_trace_kvm_msr", 0),
STACK_USAGE("__traceiter_kvm_msr", 40),
STACK_USAGE("perf_trace_kvm_msr", 72),
STACK_USAGE("trace_event_raw_event_kvm_msr", 96),
STACK_USAGE("trace_kvm_msr", 0),
STACK_USAGE("trace_raw_output_kvm_msr", 24),
STACK_USAGE("kvm_find_user_return_msr", 0),
STACK_USAGE("msr_io", 88),
STACK_USAGE("kvm_vm_ioctl_check_extension", 0),
STACK_USAGE("trace_kvm_dirty_ring_exit", 0),
STACK_USAGE("kvm_set_user_return_msr", 32),
STACK_USAGE("__bpf_trace_kvm_cr", 0),
STACK_USAGE("__traceiter_kvm_cr", 32),
STACK_USAGE("perf_trace_kvm_cr", 72),
STACK_USAGE("trace_event_raw_event_kvm_cr", 88),
STACK_USAGE("trace_raw_output_kvm_cr", 24),
STACK_USAGE("kvm_arch_dev_ioctl", 56),
STACK_USAGE("wbinvd_ipi", 0),
STACK_USAGE("kvm_arch_vcpu_load", 16),
STACK_USAGE("__bpf_trace_kvm_pic_set_irq", 0),
STACK_USAGE("__traceiter_kvm_pic_set_irq", 48),
STACK_USAGE("perf_trace_kvm_pic_set_irq", 80),
STACK_USAGE("trace_event_raw_event_kvm_pic_set_irq", 104),
STACK_USAGE("trace_raw_output_kvm_pic_set_irq", 24),
STACK_USAGE("kvm_arch_vcpu_put", 32),
STACK_USAGE("kvm_get_apic_base", 0),
STACK_USAGE("kvm_vcpu_ioctl_set_lapic", 24),
STACK_USAGE("kvm_vcpu_ioctl_interrupt", 0),
STACK_USAGE("kvm_get_apic_mode", 0),
STACK_USAGE("kvm_vcpu_ioctl_x86_setup_mce", 0),
STACK_USAGE("kvm_set_apic_base", 48),
STACK_USAGE("kvm_vcpu_ioctl_x86_set_mce", 8),
STACK_USAGE("kvm_vcpu_ioctl_x86_get_vcpu_events", 16),
STACK_USAGE("kvm_vcpu_ioctl_x86_set_vcpu_events", 16),
STACK_USAGE("__bpf_trace_kvm_apic_ipi", 0),
STACK_USAGE("__traceiter_kvm_apic_ipi", 24),
STACK_USAGE("perf_trace_kvm_apic_ipi", 64),
STACK_USAGE("trace_event_raw_event_kvm_apic_ipi", 80),
STACK_USAGE("trace_raw_output_kvm_apic_ipi", 64),
STACK_USAGE("kvm_vcpu_ioctl_x86_set_debugregs", 16),
STACK_USAGE("kvm_spurious_fault", 0),
STACK_USAGE("kvm_vcpu_ioctl_x86_set_xcrs", 8),
STACK_USAGE("__bpf_trace_kvm_apic_accept_irq", 0),
STACK_USAGE("__traceiter_kvm_apic_accept_irq", 40),
STACK_USAGE("perf_trace_kvm_apic_accept_irq", 72),
STACK_USAGE("trace_event_raw_event_kvm_apic_accept_irq", 96),
STACK_USAGE("trace_raw_output_kvm_apic_accept_irq", 40),
STACK_USAGE("kvm_vcpu_ioctl_enable_cap", 32),
STACK_USAGE("kvm_arch_vcpu_ioctl", 192),
STACK_USAGE("__bpf_trace_kvm_eoi", 0),
STACK_USAGE("__traceiter_kvm_eoi", 24),
STACK_USAGE("perf_trace_kvm_eoi", 64),
STACK_USAGE("trace_event_raw_event_kvm_eoi", 80),
STACK_USAGE("trace_raw_output_kvm_eoi", 24),
STACK_USAGE("kvm_deliver_exception_payload", 0),
STACK_USAGE("__bpf_trace_kvm_pv_eoi", 0),
STACK_USAGE("__traceiter_kvm_pv_eoi", 24),
STACK_USAGE("perf_trace_kvm_pv_eoi", 64),
STACK_USAGE("trace_event_raw_event_kvm_pv_eoi", 80),
STACK_USAGE("trace_raw_output_kvm_pv_eoi", 24),
STACK_USAGE("kvm_arch_vcpu_fault", 0),
STACK_USAGE("kvm_vm_ioctl_get_irqchip", 0),
STACK_USAGE("kvm_vm_ioctl_set_irqchip", 24),
STACK_USAGE("kvm_vm_ioctl_get_pit", 24),
STACK_USAGE("__bpf_trace_kvm_nested_vmrun", 0),
STACK_USAGE("__traceiter_kvm_nested_vmrun", 56),
STACK_USAGE("perf_trace_kvm_nested_vmrun", 80),
STACK_USAGE("trace_event_raw_event_kvm_nested_vmrun", 104),
STACK_USAGE("trace_raw_output_kvm_nested_vmrun", 24),
STACK_USAGE("kvm_vm_ioctl_set_pit", 32),
STACK_USAGE("kvm_vm_ioctl_set_pit2", 32),
STACK_USAGE("kvm_vm_ioctl_reinject", 24),
STACK_USAGE("kvm_arch_sync_dirty_log", 40),
STACK_USAGE("kvm_vm_ioctl_irq_line", 16),
STACK_USAGE("kvm_vm_ioctl_enable_cap", 32),
STACK_USAGE("__bpf_trace_kvm_nested_intercepts", 0),
STACK_USAGE("__traceiter_kvm_nested_intercepts", 48),
STACK_USAGE("perf_trace_kvm_nested_intercepts", 80),
STACK_USAGE("trace_event_raw_event_kvm_nested_intercepts", 104),
STACK_USAGE("trace_raw_output_kvm_nested_intercepts", 24),
STACK_USAGE("kvm_multiple_exception", 16),
STACK_USAGE("kvm_arch_pm_notifier", 48),
STACK_USAGE("kvm_arch_vm_ioctl", 448),
STACK_USAGE("__bpf_trace_kvm_nested_vmexit", 0),
STACK_USAGE("__traceiter_kvm_nested_vmexit", 24),
STACK_USAGE("perf_trace_kvm_nested_vmexit", 72),
STACK_USAGE("trace_event_raw_event_kvm_nested_vmexit", 80),
STACK_USAGE("trace_raw_output_kvm_nested_vmexit", 56),
STACK_USAGE("__bpf_trace_kvm_nested_vmexit_inject", 0),
STACK_USAGE("__traceiter_kvm_nested_vmexit_inject", 48),
STACK_USAGE("perf_trace_kvm_nested_vmexit_inject", 80),
STACK_USAGE("trace_event_raw_event_kvm_nested_vmexit_inject", 104),
STACK_USAGE("trace_raw_output_kvm_nested_vmexit_inject", 48),
STACK_USAGE("__bpf_trace_kvm_hv_hypercall", 0),
STACK_USAGE("__traceiter_kvm_hv_hypercall", 48),
STACK_USAGE("perf_trace_kvm_hv_hypercall", 80),
STACK_USAGE("trace_event_raw_event_kvm_hv_hypercall", 104),
STACK_USAGE("trace_raw_output_kvm_hv_hypercall", 24),
STACK_USAGE("vcpu_mmio_read", 48),
STACK_USAGE("kvm_get_segment", 0),
STACK_USAGE("translate_nested_gpa", 0),
STACK_USAGE("kvm_mmu_gva_to_gpa_read", 32),
STACK_USAGE("kvm_mmu_gva_to_gpa_fetch", 32),
STACK_USAGE("kvm_mmu_gva_to_gpa_write", 32),
STACK_USAGE("kvm_mmu_gva_to_gpa_system", 0),
STACK_USAGE("kvm_fetch_guest_virt", 48),
STACK_USAGE("__bpf_trace_kvm_nested_intr_vmexit", 0),
STACK_USAGE("__traceiter_kvm_nested_intr_vmexit", 16),
STACK_USAGE("perf_trace_kvm_nested_intr_vmexit", 56),
STACK_USAGE("trace_event_raw_event_kvm_nested_intr_vmexit", 72),
STACK_USAGE("trace_raw_output_kvm_nested_intr_vmexit", 24),
STACK_USAGE("kvm_read_guest_virt", 64),
STACK_USAGE("emulator_read_std", 64),
STACK_USAGE("kvm_read_guest_phys_system", 0),
STACK_USAGE("kvm_queue_exception", 0),
STACK_USAGE("emulator_write_std", 72),
STACK_USAGE("kvm_write_guest_virt_system", 64),
STACK_USAGE("kvm_requeue_exception", 0),
STACK_USAGE("handle_ud", 96),
STACK_USAGE("vcpu_is_mmio_gpa", 72),
STACK_USAGE("kvm_queue_exception_p", 0),
STACK_USAGE("__bpf_trace_kvm_invlpga", 0),
STACK_USAGE("__traceiter_kvm_invlpga", 32),
STACK_USAGE("perf_trace_kvm_invlpga", 72),
STACK_USAGE("trace_event_raw_event_kvm_invlpga", 88),
STACK_USAGE("trace_raw_output_kvm_invlpga", 24),
STACK_USAGE("emulator_write_phys", 32),
STACK_USAGE("read_prepare", 16),
STACK_USAGE("read_emulate", 0),
STACK_USAGE("write_emulate", 32),
STACK_USAGE("write_mmio", 48),
STACK_USAGE("read_exit_mmio", 0),
STACK_USAGE("write_exit_mmio", 0),
STACK_USAGE("emulator_read_write_onepage", 104),
STACK_USAGE("kvm_complete_insn_gp", 24),
STACK_USAGE("emulator_read_write", 64),
STACK_USAGE("emulator_read_emulated", 0),
STACK_USAGE("emulator_write_emulated", 0),
STACK_USAGE("emulator_cmpxchg_emulated", 112),
STACK_USAGE("__bpf_trace_kvm_skinit", 0),
STACK_USAGE("__traceiter_kvm_skinit", 24),
STACK_USAGE("perf_trace_kvm_skinit", 64),
STACK_USAGE("trace_event_raw_event_kvm_skinit", 80),
STACK_USAGE("trace_raw_output_kvm_skinit", 24),
STACK_USAGE("__emulator_pio_in", 48),
STACK_USAGE("kvm_inject_page_fault", 0),
STACK_USAGE("emulator_pio_in_emulated", 32),
STACK_USAGE("emulator_pio_out", 48),
STACK_USAGE("emulator_pio_out_emulated", 0),
STACK_USAGE("emulator_invlpg", 0),
STACK_USAGE("kvm_emulate_wbinvd_noskip", 16),
STACK_USAGE("kvm_emulate_wbinvd", 24),
STACK_USAGE("emulator_wbinvd", 0),
STACK_USAGE("emulator_get_dr", 0),
STACK_USAGE("emulator_set_dr", 0),
STACK_USAGE("emulator_get_cr", 8),
STACK_USAGE("emulator_set_cr", 16),
STACK_USAGE("kvm_inject_emulated_page_fault", 24),
STACK_USAGE("emulator_get_cpl", 0),
STACK_USAGE("emulator_get_gdt", 0),
STACK_USAGE("emulator_get_idt", 0),
STACK_USAGE("emulator_set_gdt", 0),
STACK_USAGE("emulator_set_idt", 0),
STACK_USAGE("emulator_get_cached_segment_base", 0),
STACK_USAGE("emulator_get_segment", 56),
STACK_USAGE("emulator_set_segment", 32),
STACK_USAGE("emulator_get_msr_with_filter", 16),
STACK_USAGE("emulator_set_msr_with_filter", 32),
STACK_USAGE("emulator_get_msr", 16),
STACK_USAGE("emulator_set_msr", 24),
STACK_USAGE("emulator_get_smbase", 0),
STACK_USAGE("emulator_set_smbase", 0),
STACK_USAGE("emulator_check_pmc", 0),
STACK_USAGE("emulator_read_pmc", 0),
STACK_USAGE("emulator_halt", 0),
STACK_USAGE("emulator_intercept", 0),
STACK_USAGE("emulator_get_cpuid", 0),
STACK_USAGE("emulator_guest_has_long_mode", 8),
STACK_USAGE("emulator_guest_has_movbe", 8),
STACK_USAGE("emulator_guest_has_fxsr", 8),
STACK_USAGE("kvm_inject_nmi", 0),
STACK_USAGE("emulator_guest_has_rdpid", 8),
STACK_USAGE("emulator_read_gpr", 16),
STACK_USAGE("emulator_write_gpr", 0),
STACK_USAGE("emulator_set_nmi_mask", 0),
STACK_USAGE("emulator_get_hflags", 0),
STACK_USAGE("emulator_exiting_smm", 0),
STACK_USAGE("emulator_leave_smm", 0),
STACK_USAGE("emulator_triple_fault", 0),
STACK_USAGE("emulator_set_xcr", 8),
STACK_USAGE("__bpf_trace_kvm_emulate_insn", 0),
STACK_USAGE("__traceiter_kvm_emulate_insn", 24),
STACK_USAGE("kvm_queue_exception_e", 0),
STACK_USAGE("perf_trace_kvm_emulate_insn", 72),
STACK_USAGE("trace_event_raw_event_kvm_emulate_insn", 80),
STACK_USAGE("trace_kvm_emulate_insn", 0),
STACK_USAGE("trace_raw_output_kvm_emulate_insn", 56),
STACK_USAGE("inject_emulated_exception", 32),
STACK_USAGE("kvm_requeue_exception_e", 0),
STACK_USAGE("init_emulate_ctxt", 32),
STACK_USAGE("kvm_inject_realmode_interrupt", 32),
STACK_USAGE("kvm_require_cpl", 16),
STACK_USAGE("__kvm_prepare_emulation_failure_exit", 88),
STACK_USAGE("kvm_prepare_emulation_failure_exit", 72),
STACK_USAGE("handle_emulation_failure", 88),
STACK_USAGE("reexecute_instruction", 32),
STACK_USAGE("kvm_require_dr", 16),
STACK_USAGE("kvm_smm_changed", 16),
STACK_USAGE("__bpf_trace_vcpu_match_mmio", 0),
STACK_USAGE("__traceiter_vcpu_match_mmio", 40),
STACK_USAGE("perf_trace_vcpu_match_mmio", 72),
STACK_USAGE("trace_event_raw_event_vcpu_match_mmio", 96),
STACK_USAGE("trace_raw_output_vcpu_match_mmio", 24),
STACK_USAGE("trace_vcpu_match_mmio", 0),
STACK_USAGE("kvm_vcpu_do_singlestep", 8),
STACK_USAGE("kvm_skip_emulated_instruction", 24),
STACK_USAGE("load_pdptrs", 88),
STACK_USAGE("x86_decode_emulated_instruction", 48),
STACK_USAGE("x86_emulate_instruction", 64),
STACK_USAGE("__bpf_trace_kvm_write_tsc_offset", 0),
STACK_USAGE("__traceiter_kvm_write_tsc_offset", 32),
STACK_USAGE("perf_trace_kvm_write_tsc_offset", 72),
STACK_USAGE("trace_event_raw_event_kvm_write_tsc_offset", 88),
STACK_USAGE("trace_raw_output_kvm_write_tsc_offset", 24),
STACK_USAGE("kvm_vcpu_srcu_read_lock", 24),
STACK_USAGE("kvm_emulate_instruction", 0),
STACK_USAGE("kvm_emulate_instruction_from_buffer", 0),
STACK_USAGE("complete_fast_pio_out_port_0x7e", 0),
STACK_USAGE("complete_fast_pio_out", 24),
STACK_USAGE("kvm_vcpu_srcu_read_unlock", 24),
STACK_USAGE("complete_fast_pio_in", 48),
STACK_USAGE("kvm_fast_pio", 48),
STACK_USAGE("kvmclock_cpu_down_prep", 0),
STACK_USAGE("tsc_khz_changed", 8),
STACK_USAGE("__bpf_trace_kvm_update_master_clock", 0),
STACK_USAGE("__traceiter_kvm_update_master_clock", 32),
STACK_USAGE("perf_trace_kvm_update_master_clock", 72),
STACK_USAGE("trace_event_raw_event_kvm_update_master_clock", 88),
STACK_USAGE("trace_raw_output_kvm_update_master_clock", 32),
STACK_USAGE("kvm_post_set_cr0", 24),
STACK_USAGE("kvmclock_cpufreq_notifier", 72),
STACK_USAGE("kvmclock_cpu_online", 8),
STACK_USAGE("pvclock_gtod_update_fn", 48),
STACK_USAGE("pvclock_irq_work_fn", 0),
STACK_USAGE("pvclock_gtod_notify", 16),
STACK_USAGE("kvm_arch_init", 16),
STACK_USAGE("__bpf_trace_kvm_track_tsc", 0),
STACK_USAGE("__traceiter_kvm_track_tsc", 48),
STACK_USAGE("perf_trace_kvm_track_tsc", 80),
STACK_USAGE("trace_event_raw_event_kvm_track_tsc", 104),
STACK_USAGE("trace_raw_output_kvm_track_tsc", 56),
STACK_USAGE("kvm_arch_exit", 0),
STACK_USAGE("kvm_set_cr0", 48),
STACK_USAGE("kvm_emulate_halt_noskip", 0),
STACK_USAGE("kvm_emulate_halt", 16),
STACK_USAGE("kvm_emulate_ap_reset_hold", 16),
STACK_USAGE("kvm_pv_kick_cpu_op", 32),
STACK_USAGE("kvm_apicv_activated", 0),
STACK_USAGE("set_or_clear_apicv_inhibit", 0),
STACK_USAGE("kvm_sched_yield", 24),
STACK_USAGE("complete_hypercall_exit", 40),
STACK_USAGE("kvm_emulate_hypercall", 176),
STACK_USAGE("emulator_fix_hypercall", 48),
STACK_USAGE("__bpf_trace_kvm_pml_full", 0),
STACK_USAGE("__traceiter_kvm_pml_full", 16),
STACK_USAGE("perf_trace_kvm_pml_full", 56),
STACK_USAGE("trace_event_raw_event_kvm_pml_full", 72),
STACK_USAGE("trace_raw_output_kvm_pml_full", 24),
STACK_USAGE("kvm_check_nested_events", 0),
STACK_USAGE("__bpf_trace_kvm_ple_window_update", 0),
STACK_USAGE("__traceiter_kvm_ple_window_update", 32),
STACK_USAGE("perf_trace_kvm_ple_window_update", 72),
STACK_USAGE("trace_event_raw_event_kvm_ple_window_update", 88),
STACK_USAGE("trace_raw_output_kvm_ple_window_update", 24),
STACK_USAGE("kvm_lmsw", 0),
STACK_USAGE("kvm_load_guest_xsave_state", 8),
STACK_USAGE("__bpf_trace_kvm_pvclock_update", 0),
STACK_USAGE("__traceiter_kvm_pvclock_update", 24),
STACK_USAGE("perf_trace_kvm_pvclock_update", 64),
STACK_USAGE("trace_event_raw_event_kvm_pvclock_update", 80),
STACK_USAGE("trace_raw_output_kvm_pvclock_update", 24),
STACK_USAGE("kvm_load_host_xsave_state", 0),
STACK_USAGE("kvm_make_scan_ioapic_request_mask", 0),
STACK_USAGE("kvm_make_scan_ioapic_request", 0),
STACK_USAGE("kvm_vcpu_update_apicv", 16),
STACK_USAGE("__kvm_set_or_clear_apicv_inhibit", 48),
STACK_USAGE("__bpf_trace_kvm_hv_hypercall_done", 0),
STACK_USAGE("__traceiter_kvm_hv_hypercall_done", 16),
STACK_USAGE("perf_trace_kvm_hv_hypercall_done", 56),
STACK_USAGE("trace_event_raw_event_kvm_hv_hypercall_done", 72),
STACK_USAGE("trace_raw_output_kvm_hv_hypercall_done", 24),
STACK_USAGE("kvm_set_or_clear_apicv_inhibit", 32),
STACK_USAGE("vcpu_scan_ioapic", 16),
STACK_USAGE("vcpu_load_eoi_exitmap", 72),
STACK_USAGE("kvm_arch_mmu_notifier_invalidate_range", 24),
STACK_USAGE("kvm_arch_guest_memory_reclaimed", 0),
STACK_USAGE("__kvm_request_immediate_exit", 0),
STACK_USAGE("vcpu_enter_guest", 680),
STACK_USAGE("__bpf_trace_kvm_wait_lapic_expire", 0),
STACK_USAGE("__traceiter_kvm_wait_lapic_expire", 24),
STACK_USAGE("perf_trace_kvm_wait_lapic_expire", 64),
STACK_USAGE("trace_event_raw_event_kvm_wait_lapic_expire", 80),
STACK_USAGE("trace_raw_output_kvm_wait_lapic_expire", 24),
STACK_USAGE("wbinvd_on_cpu", 0),
STACK_USAGE("wbinvd_on_all_cpus", 0),
STACK_USAGE("__wbinvd", 0),
STACK_USAGE("cmdline_find_option_bool", 0),
STACK_USAGE("cmdline_find_option", 24),
STACK_USAGE("enable_copy_mc_fragile", 0),
STACK_USAGE("copy_mc_fragile_handle_tail", 32),
STACK_USAGE("copy_mc_to_kernel", 0),
STACK_USAGE("copy_mc_to_user", 0),
STACK_USAGE("x86_model", 0),
STACK_USAGE("x86_stepping", 0),
STACK_USAGE("x86_family", 0),
STACK_USAGE("ip_compute_csum", 0),
STACK_USAGE("csum_partial", 4),
STACK_USAGE("csum_and_copy_from_user", 24),
STACK_USAGE("csum_and_copy_to_user", 24),
STACK_USAGE("csum_partial_copy_nocheck", 0),
STACK_USAGE("csum_ipv6_magic", 4),
STACK_USAGE("delay_halt_tpause", 0),
STACK_USAGE("delay_halt_mwaitx", 8),
STACK_USAGE("delay_halt", 16),
STACK_USAGE("use_tsc_delay", 0),
STACK_USAGE("use_tpause_delay", 0),
STACK_USAGE("use_mwaitx_delay", 0),
STACK_USAGE("read_current_timer", 0),
STACK_USAGE("__delay", 0),
STACK_USAGE("__const_udelay", 0),
STACK_USAGE("__udelay", 0),
STACK_USAGE("__ndelay", 0),
STACK_USAGE("delay_loop", 0),
STACK_USAGE("delay_tsc", 32),
STACK_USAGE("override_function_with_return", 0),
STACK_USAGE("inat_get_opcode_attribute", 0),
STACK_USAGE("inat_get_last_prefix_id", 0),
STACK_USAGE("inat_get_escape_attribute", 0),
STACK_USAGE("inat_get_group_attribute", 0),
STACK_USAGE("inat_get_avx_attribute", 0),
STACK_USAGE("get_eff_addr_modrm", 32),
STACK_USAGE("get_eff_addr_sib", 32),
STACK_USAGE("insn_get_addr_ref", 72),
STACK_USAGE("insn_get_effective_ip", 24),
STACK_USAGE("insn_fetch_from_user", 16),
STACK_USAGE("insn_fetch_from_user_inatomic", 16),
STACK_USAGE("insn_decode_from_regs", 24),
STACK_USAGE("insn_decode_mmio", 16),
STACK_USAGE("resolve_default_seg", 0),
STACK_USAGE("pt_regs_offset", 0),
STACK_USAGE("get_reg_offset", 16),
STACK_USAGE("insn_has_rep_prefix", 8),
STACK_USAGE("insn_get_seg_base", 48),
STACK_USAGE("insn_get_code_seg_params", 40),
STACK_USAGE("insn_get_modrm_rm_off", 8),
STACK_USAGE("insn_get_modrm_reg_off", 8),
STACK_USAGE("insn_get_modrm_reg_ptr", 0),
STACK_USAGE("get_seg_base_limit", 80),
STACK_USAGE("get_eff_addr_reg", 48),
STACK_USAGE("insn_get_prefixes", 40),
STACK_USAGE("insn_get_opcode", 24),
STACK_USAGE("insn_get_modrm", 16),
STACK_USAGE("insn_rip_relative", 16),
STACK_USAGE("insn_get_sib", 8),
STACK_USAGE("insn_get_displacement", 8),
STACK_USAGE("__get_immv32", 0),
STACK_USAGE("__get_immv", 0),
STACK_USAGE("__get_immptr", 0),
STACK_USAGE("insn_init", 0),
STACK_USAGE("insn_get_immediate", 16),
STACK_USAGE("insn_get_length", 8),
STACK_USAGE("insn_decode", 8),
STACK_USAGE("memset_io", 0),
STACK_USAGE("memcpy_fromio", 0),
STACK_USAGE("memcpy_toio", 0),
STACK_USAGE("num_digits", 0),
STACK_USAGE("rdmsr_on_cpus", 80),
STACK_USAGE("wrmsr_on_cpus", 64),
STACK_USAGE("__rdmsr_safe_on_cpu", 24),
STACK_USAGE("__wrmsr_safe_on_cpu", 16),
STACK_USAGE("rdmsr_safe_on_cpu", 216),
STACK_USAGE("wrmsr_safe_on_cpu", 40),
STACK_USAGE("wrmsrl_safe_on_cpu", 40),
STACK_USAGE("rdmsrl_safe_on_cpu", 216),
STACK_USAGE("__wrmsr_on_cpu", 0),
STACK_USAGE("__rdmsr_safe_regs_on_cpu", 8),
STACK_USAGE("__wrmsr_safe_regs_on_cpu", 8),
STACK_USAGE("rdmsr_safe_regs_on_cpu", 24),
STACK_USAGE("wrmsr_safe_regs_on_cpu", 24),
STACK_USAGE("rdmsr_on_cpu", 56),
STACK_USAGE("rdmsrl_on_cpu", 48),
STACK_USAGE("wrmsr_on_cpu", 40),
STACK_USAGE("wrmsrl_on_cpu", 40),
STACK_USAGE("__rdmsr_on_cpu", 24),
STACK_USAGE("msr_clear_bit", 32),
STACK_USAGE("do_trace_write_msr", 0),
STACK_USAGE("do_trace_read_msr", 0),
STACK_USAGE("do_trace_rdpmc", 0),
STACK_USAGE("__bpf_trace_msr_trace_class", 0),
STACK_USAGE("perf_trace_msr_trace_class", 72),
STACK_USAGE("trace_event_raw_event_msr_trace_class", 88),
STACK_USAGE("trace_raw_output_msr_trace_class", 24),
STACK_USAGE("msrs_free", 0),
STACK_USAGE("__traceiter_read_msr", 32),
STACK_USAGE("__traceiter_write_msr", 32),
STACK_USAGE("__traceiter_rdpmc", 32),
STACK_USAGE("msr_set_bit", 32),
STACK_USAGE("msrs_alloc", 8),
STACK_USAGE("copy_from_user_nmi", 32),
STACK_USAGE("__memcpy_flushcache", 32),
STACK_USAGE("__clear_user", 16),
STACK_USAGE("memcpy_page_flushcache", 40),
STACK_USAGE("clear_user", 16),
STACK_USAGE("arch_wb_cache_pmem", 0),
STACK_USAGE("__copy_user_flushcache", 16),
STACK_USAGE("find_northbridge", 8),
STACK_USAGE("amd_numa_init", 96),
STACK_USAGE("setup_cpu_entry_area", 40),
STACK_USAGE("setup_cpu_entry_areas", 8),
STACK_USAGE("get_cpu_entry_area", 0),
STACK_USAGE("cea_set_pte", 0),
STACK_USAGE("cea_map_percpu_pages", 40),
STACK_USAGE("percpu_setup_debug_store", 24),
STACK_USAGE("percpu_setup_exception_stacks", 32),
STACK_USAGE("ex_get_fixup_type", 0),
STACK_USAGE("fixup_exception", 40),
STACK_USAGE("early_fixup_exception", 16),
STACK_USAGE("spurious_kernel_fault", 0),
STACK_USAGE("fault_in_kernel_space", 0),
STACK_USAGE("do_kern_addr_fault", 40),
STACK_USAGE("mmap_read_lock", 8),
STACK_USAGE("is_prefetch", 64),
STACK_USAGE("do_user_addr_fault", 88),
STACK_USAGE("exc_page_fault", 48),
STACK_USAGE("__bpf_trace_x86_exceptions", 0),
STACK_USAGE("perf_trace_x86_exceptions", 72),
STACK_USAGE("trace_event_raw_event_x86_exceptions", 88),
STACK_USAGE("trace_raw_output_x86_exceptions", 24),
STACK_USAGE("dump_pagetable", 48),
STACK_USAGE("is_errata93", 16),
STACK_USAGE("__traceiter_page_fault_user", 32),
STACK_USAGE("__traceiter_page_fault_kernel", 32),
STACK_USAGE("show_ldttss", 40),
STACK_USAGE("pgtable_bad", 32),
STACK_USAGE("page_fault_oops", 128),
STACK_USAGE("kernelmode_fixup_or_oops", 48),
STACK_USAGE("__bad_area_nosemaphore", 72),
STACK_USAGE("bad_area_nosemaphore", 0),
STACK_USAGE("bad_area", 32),
STACK_USAGE("bad_area_access_error", 40),
STACK_USAGE("do_sigbus", 40),
STACK_USAGE("hugetlb_get_unmapped_area", 104),
STACK_USAGE("arch_hugetlb_valid_size", 0),
STACK_USAGE("gigantic_pages_init", 0),
STACK_USAGE("pmd_huge", 0),
STACK_USAGE("pud_huge", 0),
STACK_USAGE("zone_sizes_init", 56),
STACK_USAGE("update_cache_mode_entry", 0),
STACK_USAGE("max_swapfile_size", 0),
STACK_USAGE("alloc_low_pages", 24),
STACK_USAGE("__brk_reservation_fn_early_pgt_alloc__", 0),
STACK_USAGE("early_alloc_pgt_buf", 0),
STACK_USAGE("parse_direct_gbpages_off", 0),
STACK_USAGE("parse_direct_gbpages_on", 0),
STACK_USAGE("probe_page_size_mask", 16),
STACK_USAGE("save_mr", 0),
STACK_USAGE("adjust_range_page_size_mask", 40),
STACK_USAGE("split_mem_range", 48),
STACK_USAGE("pfn_range_is_mapped", 0),
STACK_USAGE("init_memory_mapping", 184),
STACK_USAGE("init_range_memory_mapping", 80),
STACK_USAGE("memory_map_top_down", 40),
STACK_USAGE("cachemode2protval", 0),
STACK_USAGE("memory_map_bottom_up", 32),
STACK_USAGE("init_mem_mapping", 32),
STACK_USAGE("poking_init", 16),
STACK_USAGE("x86_has_pat_wp", 0),
STACK_USAGE("devmem_is_allowed", 16),
STACK_USAGE("free_init_pages", 32),
STACK_USAGE("pgprot2cachemode", 0),
STACK_USAGE("free_kernel_image_pages", 48),
STACK_USAGE("free_initmem", 24),
STACK_USAGE("free_initrd_mem", 0),
STACK_USAGE("memblock_find_dma_reserve", 104),
STACK_USAGE("nonx32_setup", 8),
STACK_USAGE("register_page_bootmem_info", 16),
STACK_USAGE("preallocate_vmalloc_pages", 40),
STACK_USAGE("mem_init", 0),
STACK_USAGE("mark_rodata_ro", 16),
STACK_USAGE("kern_addr_valid", 0),
STACK_USAGE("set_memory_block_size_order", 0),
STACK_USAGE("memory_block_size_bytes", 8),
STACK_USAGE("pfn_valid", 0),
STACK_USAGE("vmemmap_populate_hugepages", 80),
STACK_USAGE("vmemmap_populate", 24),
STACK_USAGE("vmemmap_populate_print_last", 0),
STACK_USAGE("sync_global_pgds", 80),
STACK_USAGE("ident_pud_init", 72),
STACK_USAGE("spp_getpage", 0),
STACK_USAGE("fill_pud", 48),
STACK_USAGE("__set_pte_vaddr", 48),
STACK_USAGE("set_pte_vaddr_p4d", 16),
STACK_USAGE("set_pte_vaddr_pud", 0),
STACK_USAGE("set_pte_vaddr", 16),
STACK_USAGE("populate_extra_pmd", 40),
STACK_USAGE("populate_extra_pte", 32),
STACK_USAGE("__init_extra_mapping", 64),
STACK_USAGE("init_extra_mapping_wb", 0),
STACK_USAGE("init_extra_mapping_uc", 0),
STACK_USAGE("cleanup_highmap", 8),
STACK_USAGE("phys_pte_init", 88),
STACK_USAGE("phys_pmd_init", 120),
STACK_USAGE("phys_pud_init", 112),
STACK_USAGE("ident_p4d_init", 80),
STACK_USAGE("phys_p4d_init", 128),
STACK_USAGE("__kernel_physical_mapping_init", 112),
STACK_USAGE("p4d_populate_init", 24),
STACK_USAGE("kernel_physical_mapping_init", 0),
STACK_USAGE("kernel_physical_mapping_change", 0),
STACK_USAGE("paging_init", 0),
STACK_USAGE("vmemmap_use_new_sub_pmd", 16),
STACK_USAGE("kernel_ident_mapping_init", 72),
STACK_USAGE("__ioremap_collect_map_flags", 0),
STACK_USAGE("__ioremap_caller", 120),
STACK_USAGE("ioremap", 0),
STACK_USAGE("ioremap_uc", 0),
STACK_USAGE("ioremap_wc", 0),
STACK_USAGE("ioremap_wt", 0),
STACK_USAGE("ioremap_encrypted", 0),
STACK_USAGE("ioremap_cache", 0),
STACK_USAGE("ioremap_prot", 16),
STACK_USAGE("iounmap", 16),
STACK_USAGE("ioremap_change_attr", 0),
STACK_USAGE("xlate_dev_mem_ptr", 8),
STACK_USAGE("unxlate_dev_mem_ptr", 0),
STACK_USAGE("early_ioremap_pmd", 0),
STACK_USAGE("is_early_ioremap_ptep", 0),
STACK_USAGE("early_ioremap_init", 24),
STACK_USAGE("__early_set_fixmap", 8),
STACK_USAGE("copy_from_kernel_nofault_allowed", 0),
STACK_USAGE("arch_pick_mmap_layout", 40),
STACK_USAGE("get_mmap_base", 0),
STACK_USAGE("arch_vma_name", 0),
STACK_USAGE("mmap_address_hint_valid", 0),
STACK_USAGE("valid_phys_addr_range", 0),
STACK_USAGE("valid_mmap_phys_addr_range", 0),
STACK_USAGE("pfn_modify_allowed", 8),
STACK_USAGE("task_size_32bit", 0),
STACK_USAGE("task_size_64bit", 0),
STACK_USAGE("arch_mmap_rnd", 8),
STACK_USAGE("setup_node_to_cpumask_map", 0),
STACK_USAGE("numa_add_memblk_to", 8),
STACK_USAGE("numa_remove_memblk_from", 0),
STACK_USAGE("numa_move_tail_memblk", 0),
STACK_USAGE("numa_add_memblk", 0),
STACK_USAGE("alloc_node_data", 24),
STACK_USAGE("numa_cleanup_meminfo", 56),
STACK_USAGE("numa_nodemask_from_meminfo", 0),
STACK_USAGE("numa_setup", 16),
STACK_USAGE("numa_reset_distance", 0),
STACK_USAGE("numa_alloc_distance", 56),
STACK_USAGE("numa_set_distance", 24),
STACK_USAGE("__node_distance", 0),
STACK_USAGE("numa_meminfo_cover_memory", 40),
STACK_USAGE("numa_clear_kernel_node_hotplug", 32),
STACK_USAGE("numa_register_memblks", 40),
STACK_USAGE("numa_cpu_node", 0),
STACK_USAGE("numa_init_array", 24),
STACK_USAGE("numa_init", 8),
STACK_USAGE("dummy_numa_init", 0),
STACK_USAGE("x86_numa_init", 0),
STACK_USAGE("init_gi_nodes", 16),
STACK_USAGE("numa_set_node", 0),
STACK_USAGE("init_cpu_to_node", 32),
STACK_USAGE("numa_add_cpu", 0),
STACK_USAGE("numa_remove_cpu", 0),
STACK_USAGE("numa_clear_node", 0),
STACK_USAGE("initmem_init", 0),
STACK_USAGE("pat_debug_setup", 0),
STACK_USAGE("track_pfn_remap", 40),
STACK_USAGE("track_pfn_insert", 16),
STACK_USAGE("untrack_pfn", 64),
STACK_USAGE("untrack_pfn_moved", 0),
STACK_USAGE("pgprot_writecombine", 8),
STACK_USAGE("pgprot_writethrough", 8),
STACK_USAGE("memtype_seq_start", 24),
STACK_USAGE("memtype_seq_next", 16),
STACK_USAGE("memtype_seq_stop", 0),
STACK_USAGE("memtype_seq_show", 0),
STACK_USAGE("memtype_seq_open", 0),
STACK_USAGE("pat_memtype_list_init", 0),
STACK_USAGE("cattr_name", 0),
STACK_USAGE("__init_cache_modes", 72),
STACK_USAGE("init_cache_modes", 8),
STACK_USAGE("pat_init", 16),
STACK_USAGE("pagerange_is_ram_callback", 0),
STACK_USAGE("memtype_reserve", 80),
STACK_USAGE("memtype_free", 64),
STACK_USAGE("lookup_memtype", 48),
STACK_USAGE("pat_disable", 0),
STACK_USAGE("pat_pfn_immune_to_uc_mtrr", 0),
STACK_USAGE("memtype_reserve_io", 64),
STACK_USAGE("memtype_free_io", 0),
STACK_USAGE("arch_io_reserve_memtype_wc", 16),
STACK_USAGE("arch_io_free_memtype_wc", 0),
STACK_USAGE("phys_mem_access_prot", 0),
STACK_USAGE("phys_mem_access_prot_allowed", 16),
STACK_USAGE("nopat", 0),
STACK_USAGE("memtype_kernel_map_sync", 40),
STACK_USAGE("reserve_pfn_range", 104),
STACK_USAGE("pat_enabled", 0),
STACK_USAGE("track_pfn_copy", 48),
STACK_USAGE("memtype_check_insert", 56),
STACK_USAGE("memtype_erase", 24),
STACK_USAGE("memtype_lookup", 0),
STACK_USAGE("memtype_copy_nth_element", 0),
STACK_USAGE("interval_augment_rotate", 0),
STACK_USAGE("interval_remove", 16),
STACK_USAGE("memtype_match", 0),
STACK_USAGE("arch_report_meminfo", 8),
STACK_USAGE("__unmap_pmd_range", 40),
STACK_USAGE("unmap_pmd_range", 48),
STACK_USAGE("populate_pmd", 88),
STACK_USAGE("__cpa_process_fault", 104),
STACK_USAGE("__change_page_attr_set_clr", 280),
STACK_USAGE("change_page_attr_set_clr", 136),
STACK_USAGE("__set_memory_prot", 16),
STACK_USAGE("_set_memory_uc", 24),
STACK_USAGE("set_memory_uc", 48),
STACK_USAGE("_set_memory_wc", 24),
STACK_USAGE("set_memory_wc", 64),
STACK_USAGE("_set_memory_wt", 24),
STACK_USAGE("_set_memory_wb", 16),
STACK_USAGE("set_memory_wb", 40),
STACK_USAGE("set_memory_x", 16),
STACK_USAGE("set_memory_nx", 16),
STACK_USAGE("set_memory_ro", 16),
STACK_USAGE("set_memory_rw", 16),
STACK_USAGE("set_memory_np", 16),
STACK_USAGE("set_memory_np_noalias", 16),
STACK_USAGE("set_memory_4k", 16),
STACK_USAGE("set_memory_nonglobal", 16),
STACK_USAGE("set_memory_global", 16),
STACK_USAGE("set_memory_encrypted", 0),
STACK_USAGE("set_memory_decrypted", 0),
STACK_USAGE("set_pages_uc", 0),
STACK_USAGE("_set_pages_array", 48),
STACK_USAGE("set_pages_array_uc", 0),
STACK_USAGE("set_pages_array_wc", 0),
STACK_USAGE("set_pages_wb", 40),
STACK_USAGE("set_pages_array_wb", 32),
STACK_USAGE("set_pages_ro", 16),
STACK_USAGE("set_pages_rw", 16),
STACK_USAGE("set_direct_map_invalid_noflush", 88),
STACK_USAGE("set_direct_map_default_noflush", 88),
STACK_USAGE("kernel_page_present", 16),
STACK_USAGE("kernel_map_pages_in_pgd", 104),
STACK_USAGE("kernel_unmap_pages_in_pgd", 96),
STACK_USAGE("clflush_cache_range", 0),
STACK_USAGE("arch_invalidate_pmem", 0),
STACK_USAGE("__cpa_flush_all", 8),
STACK_USAGE("__cpa_flush_tlb", 16),
STACK_USAGE("static_protections", 88),
STACK_USAGE("lookup_address_in_pgd", 0),
STACK_USAGE("lookup_address", 0),
STACK_USAGE("lookup_pmd_address", 0),
STACK_USAGE("slow_virt_to_phys", 24),
STACK_USAGE("update_page_count", 16),
STACK_USAGE("pgd_page_get_mm", 0),
STACK_USAGE("pte_alloc_one", 24),
STACK_USAGE("setup_userpte", 8),
STACK_USAGE("pgd_alloc", 48),
STACK_USAGE("pgd_free", 8),
STACK_USAGE("ptep_set_access_flags", 8),
STACK_USAGE("pmdp_set_access_flags", 8),
STACK_USAGE("pudp_set_access_flags", 8),
STACK_USAGE("___pte_free_tlb", 32),
STACK_USAGE("ptep_test_and_clear_young", 0),
STACK_USAGE("pmdp_test_and_clear_young", 0),
STACK_USAGE("pudp_test_and_clear_young", 0),
STACK_USAGE("ptep_clear_flush_young", 0),
STACK_USAGE("pmdp_clear_flush_young", 0),
STACK_USAGE("___pmd_free_tlb", 48),
STACK_USAGE("reserve_top_address", 0),
STACK_USAGE("__native_set_fixmap", 0),
STACK_USAGE("native_set_fixmap", 0),
STACK_USAGE("p4d_set_huge", 0),
STACK_USAGE("p4d_clear_huge", 0),
STACK_USAGE("pud_set_huge", 48),
STACK_USAGE("pmd_set_huge", 56),
STACK_USAGE("pud_clear_huge", 8),
STACK_USAGE("pmd_clear_huge", 8),
STACK_USAGE("___pud_free_tlb", 0),
STACK_USAGE("pud_free_pmd_page", 64),
STACK_USAGE("pmd_free_pte_page", 16),
STACK_USAGE("___p4d_free_tlb", 0),
STACK_USAGE("__virt_addr_valid", 0),
STACK_USAGE("init_pkru_read_file", 88),
STACK_USAGE("init_pkru_write_file", 88),
STACK_USAGE("__execute_only_pkey", 24),
STACK_USAGE("create_init_pkru_value", 0),
STACK_USAGE("setup_init_pkru", 16),
STACK_USAGE("__arch_override_mprotect_pkey", 32),
STACK_USAGE("__pti_set_user_pgtbl", 0),
STACK_USAGE("pti_user_pagetable_walk_p4d", 32),
STACK_USAGE("pti_user_pagetable_walk_pmd", 48),
STACK_USAGE("pti_user_pagetable_walk_pte", 40),
STACK_USAGE("pti_setup_vsyscall", 24),
STACK_USAGE("pti_clone_pgtable", 48),
STACK_USAGE("pti_clone_p4d", 8),
STACK_USAGE("pti_clone_user_shared", 48),
STACK_USAGE("pti_init", 0),
STACK_USAGE("pti_finalize", 8),
STACK_USAGE("pti_check_boottime_disable", 16),
STACK_USAGE("noexec_setup", 8),
STACK_USAGE("x86_configure_nx", 0),
STACK_USAGE("x86_report_nx", 0),
STACK_USAGE("x86_acpi_numa_init", 0),
STACK_USAGE("acpi_numa_x2apic_affinity_init", 16),
STACK_USAGE("acpi_numa_processor_affinity_init", 16),
STACK_USAGE("do_flush_tlb_all", 0),
STACK_USAGE("flush_tlb_all", 0),
STACK_USAGE("do_kernel_range_flush", 16),
STACK_USAGE("flush_tlb_kernel_range", 32),
STACK_USAGE("__get_current_cr3_fast", 0),
STACK_USAGE("flush_tlb_one_kernel", 0),
STACK_USAGE("native_flush_tlb_one_user", 32),
STACK_USAGE("flush_tlb_one_user", 0),
STACK_USAGE("native_flush_tlb_global", 40),
STACK_USAGE("native_flush_tlb_local", 24),
STACK_USAGE("flush_tlb_local", 0),
STACK_USAGE("__flush_tlb_all", 0),
STACK_USAGE("arch_tlbbatch_flush", 48),
STACK_USAGE("nmi_uaccess_okay", 0),
STACK_USAGE("tlbflush_read_file", 88),
STACK_USAGE("tlbflush_write_file", 88),
STACK_USAGE("create_tlb_single_page_flush_ceiling", 0),
STACK_USAGE("leave_mm", 16),
STACK_USAGE("switch_mm", 32),
STACK_USAGE("l1d_flush_force_sigbus", 0),
STACK_USAGE("l1d_flush_evaluate", 16),
STACK_USAGE("trace_tlb_flush", 0),
STACK_USAGE("cr4_update_pce", 0),
STACK_USAGE("switch_mm_irqs_off", 64),
STACK_USAGE("enter_lazy_tlb", 0),
STACK_USAGE("initialize_tlbstate_and_flush", 16),
STACK_USAGE("flush_tlb_func", 56),
STACK_USAGE("tlb_is_not_lazy", 0),
STACK_USAGE("native_flush_tlb_multi", 16),
STACK_USAGE("flush_tlb_multi", 0),
STACK_USAGE("flush_tlb_mm_range", 80),
STACK_USAGE("restore_regs", 48),
STACK_USAGE("invoke_bpf_prog", 8),
STACK_USAGE("arch_prepare_bpf_trampoline", 144),
STACK_USAGE("emit_bpf_dispatcher", 72),
STACK_USAGE("cmp_ips", 0),
STACK_USAGE("arch_prepare_bpf_dispatcher", 32),
STACK_USAGE("jit_fill_hole", 0),
STACK_USAGE("bpf_int_jit_compile", 488),
STACK_USAGE("bpf_jit_supports_kfunc_call", 0),
STACK_USAGE("bpf_arch_text_copy", 8),
STACK_USAGE("__bpf_arch_text_poke", 40),
STACK_USAGE("bpf_arch_text_poke", 32),
STACK_USAGE("emit_mov_imm64", 0),
STACK_USAGE("emit_ldx", 0),
STACK_USAGE("emit_stx", 0),
STACK_USAGE("ex_handler_bpf", 0),
STACK_USAGE("pci_acpi_crs_quirks", 0),
STACK_USAGE("set_use_crs", 0),
STACK_USAGE("pci_acpi_root_init_info", 40),
STACK_USAGE("pci_acpi_root_release_info", 8),
STACK_USAGE("pci_acpi_root_prepare_resources", 48),
STACK_USAGE("set_nouse_crs", 0),
STACK_USAGE("pci_acpi_scan_root", 48),
STACK_USAGE("set_ignore_seg", 0),
STACK_USAGE("pcibios_root_bridge_prepare", 0),
STACK_USAGE("pci_acpi_init", 16),
STACK_USAGE("native_read_msr", 8),
STACK_USAGE("amd_bus_cpu_online", 16),
STACK_USAGE("pci_enable_pci_io_ecs", 56),
STACK_USAGE("pci_io_ecs_init", 0),
STACK_USAGE("amd_postcore_init", 0),
STACK_USAGE("early_root_info_init", 440),
STACK_USAGE("x86_pci_root_bus_node", 0),
STACK_USAGE("x86_pci_root_bus_resources", 24),
STACK_USAGE("alloc_pci_root_info", 48),
STACK_USAGE("update_res", 40),
STACK_USAGE("dmi_check_skip_isa_align", 0),
STACK_USAGE("pcibios_fixup_bus", 8),
STACK_USAGE("pcibios_add_bus", 0),
STACK_USAGE("pcibios_remove_bus", 0),
STACK_USAGE("set_bf_sort", 0),
STACK_USAGE("read_dmi_type_b1", 0),
STACK_USAGE("find_sort_method", 0),
STACK_USAGE("set_scan_all", 0),
STACK_USAGE("raw_pci_read", 0),
STACK_USAGE("dmi_check_pciprobe", 0),
STACK_USAGE("pcibios_scan_root", 48),
STACK_USAGE("pcibios_set_cache_line_size", 0),
STACK_USAGE("pcibios_init", 0),
STACK_USAGE("raw_pci_write", 0),
STACK_USAGE("pcibios_setup", 8),
STACK_USAGE("pci_read", 0),
STACK_USAGE("pcibios_assign_all_busses", 0),
STACK_USAGE("pcibios_device_add", 16),
STACK_USAGE("pci_write", 0),
STACK_USAGE("pcibios_enable_device", 8),
STACK_USAGE("pcibios_disable_device", 0),
STACK_USAGE("pcibios_release_device", 0),
STACK_USAGE("pci_ext_cfg_avail", 0),
STACK_USAGE("can_skip_ioresource_align", 0),
STACK_USAGE("pci_conf2_write", 48),
STACK_USAGE("pci_sanity_check", 48),
STACK_USAGE("pci_conf1_read", 40),
STACK_USAGE("pci_check_type1", 40),
STACK_USAGE("pci_check_type2", 32),
STACK_USAGE("pci_direct_init", 8),
STACK_USAGE("pci_direct_probe", 8),
STACK_USAGE("pci_conf1_write", 40),
STACK_USAGE("pci_conf2_read", 48),
STACK_USAGE("read_pci_config", 0),
STACK_USAGE("read_pci_config_byte", 0),
STACK_USAGE("read_pci_config_16", 0),
STACK_USAGE("write_pci_config", 0),
STACK_USAGE("write_pci_config_byte", 0),
STACK_USAGE("write_pci_config_16", 0),
STACK_USAGE("early_pci_allowed", 0),
STACK_USAGE("pci_fixup_via_northbridge_bug", 40),
STACK_USAGE("pci_fixup_i450nx", 24),
STACK_USAGE("pci_fixup_transparent_bridge", 0),
STACK_USAGE("pci_fixup_nforce2", 24),
STACK_USAGE("quirk_pcie_aspm_read", 0),
STACK_USAGE("quirk_pcie_aspm_write", 0),
STACK_USAGE("pcie_rootport_aspm_quirk", 8),
STACK_USAGE("pci_fixup_video", 40),
STACK_USAGE("pci_fixup_msi_k8t_onboard_sound", 24),
STACK_USAGE("pci_fixup_i450gx", 24),
STACK_USAGE("pci_pre_fixup_toshiba_ohci1394", 8),
STACK_USAGE("pci_post_fixup_toshiba_ohci1394", 8),
STACK_USAGE("pci_early_fixup_cyrix_5530", 24),
STACK_USAGE("pci_siemens_interrupt_controller", 0),
STACK_USAGE("sb600_disable_hpet_bar", 16),
STACK_USAGE("sb600_hpet_quirk", 0),
STACK_USAGE("pci_fixup_umc_ide", 8),
STACK_USAGE("twinhead_reserve_killing_zone", 0),
STACK_USAGE("pci_invalid_bar", 0),
STACK_USAGE("pci_fixup_amd_ehci_pme", 8),
STACK_USAGE("pci_fixup_amd_fch_xhci_pme", 8),
STACK_USAGE("quirk_apple_mbp_poweroff", 8),
STACK_USAGE("quirk_no_aersid", 0),
STACK_USAGE("quirk_intel_th_dnv", 0),
STACK_USAGE("pci_fixup_latency", 0),
STACK_USAGE("pci_amd_enable_64bit_bar", 56),
STACK_USAGE("pci_fixup_piix4_acpi", 0),
STACK_USAGE("rs690_fix_64bit_dma", 32),
STACK_USAGE("pcibios_fw_addr_list_del", 48),
STACK_USAGE("pcibios_align_resource", 0),
STACK_USAGE("pcibios_allocate_bus_resources", 24),
STACK_USAGE("pcibios_allocate_resources", 104),
STACK_USAGE("pcibios_allocate_rom_resources", 16),
STACK_USAGE("pcibios_assign_resources", 16),
STACK_USAGE("pcibios_resource_survey_bus", 8),
STACK_USAGE("pcibios_resource_survey", 16),
STACK_USAGE("pcibios_retrieve_fw_addr", 32),
STACK_USAGE("pci_arch_init", 16),
STACK_USAGE("ali_router_probe", 0),
STACK_USAGE("pirq_find_routing_table", 0),
STACK_USAGE("amd_router_probe", 0),
STACK_USAGE("pico_router_probe", 0),
STACK_USAGE("pirq_find_router", 16),
STACK_USAGE("pcibios_lookup_irq", 96),
STACK_USAGE("pirq_peer_trick", 280),
STACK_USAGE("pcibios_fixup_irqs", 32),
STACK_USAGE("fix_broken_hp_bios_irq9", 0),
STACK_USAGE("fix_acer_tm360_irqrouting", 0),
STACK_USAGE("pcibios_irq_init", 8),
STACK_USAGE("pcibios_penalize_isa_irq", 0),
STACK_USAGE("pirq_enable_irq", 48),
STACK_USAGE("mp_should_keep_irq", 0),
STACK_USAGE("pirq_disable_irq", 8),
STACK_USAGE("elcr_set_level_irq", 16),
STACK_USAGE("pirq_finali_get", 8),
STACK_USAGE("pirq_finali_set", 16),
STACK_USAGE("pirq_finali_lvl", 32),
STACK_USAGE("pirq_ali_get", 24),
STACK_USAGE("pirq_ali_set", 48),
STACK_USAGE("pirq_esc_get", 24),
STACK_USAGE("pirq_esc_set", 32),
STACK_USAGE("pirq_piix_get", 16),
STACK_USAGE("pirq_piix_set", 0),
STACK_USAGE("pirq_ib_get", 16),
STACK_USAGE("pirq_ib_set", 0),
STACK_USAGE("pirq_via_get", 24),
STACK_USAGE("pirq_via_set", 48),
STACK_USAGE("pirq_via586_get", 24),
STACK_USAGE("pirq_via586_set", 48),
STACK_USAGE("pirq_ite_get", 24),
STACK_USAGE("pirq_ite_set", 48),
STACK_USAGE("pirq_opti_get", 24),
STACK_USAGE("pirq_opti_set", 48),
STACK_USAGE("pirq_cyrix_get", 24),
STACK_USAGE("pirq_cyrix_set", 48),
STACK_USAGE("pirq_sis_get", 16),
STACK_USAGE("pirq_sis_set", 40),
STACK_USAGE("pirq_vlsi_get", 24),
STACK_USAGE("pirq_vlsi_set", 48),
STACK_USAGE("pirq_serverworks_get", 0),
STACK_USAGE("pirq_serverworks_set", 0),
STACK_USAGE("pirq_amd756_get", 48),
STACK_USAGE("pirq_amd756_set", 48),
STACK_USAGE("pirq_pico_get", 0),
STACK_USAGE("pirq_pico_set", 0),
STACK_USAGE("intel_router_probe", 24),
STACK_USAGE("via_router_probe", 0),
STACK_USAGE("vlsi_router_probe", 0),
STACK_USAGE("serverworks_router_probe", 0),
STACK_USAGE("sis_router_probe", 0),
STACK_USAGE("cyrix_router_probe", 0),
STACK_USAGE("opti_router_probe", 0),
STACK_USAGE("ite_router_probe", 0),
STACK_USAGE("pci_legacy_init", 8),
STACK_USAGE("pcibios_scan_specific_bus", 40),
STACK_USAGE("pci_subsys_init", 40),
STACK_USAGE("pci_mmconfig_lookup", 0),
STACK_USAGE("pci_mmcfg_e7520", 32),
STACK_USAGE("pci_mmcfg_intel_945", 32),
STACK_USAGE("pci_mmcfg_amd_fam10h", 40),
STACK_USAGE("pci_mmcfg_nvidia_mcp55", 48),
STACK_USAGE("pci_mmcfg_check_end_bus_number", 0),
STACK_USAGE("pci_mmcfg_check_hostbridge", 32),
STACK_USAGE("pci_mmconfig_remove", 8),
STACK_USAGE("check_mcfg_resource", 88),
STACK_USAGE("find_mboard_resource", 8),
STACK_USAGE("is_acpi_reserved", 72),
STACK_USAGE("is_mmconf_reserved", 72),
STACK_USAGE("free_all_mmcfg", 16),
STACK_USAGE("pci_mmcfg_check_reserved", 16),
STACK_USAGE("pci_mmcfg_reject_broken", 24),
STACK_USAGE("list_add_sorted", 0),
STACK_USAGE("acpi_mcfg_check_entry", 32),
STACK_USAGE("pci_parse_mcfg", 24),
STACK_USAGE("__pci_mmcfg_init", 0),
STACK_USAGE("pci_mmcfg_early_init", 0),
STACK_USAGE("pci_mmcfg_late_init", 0),
STACK_USAGE("pci_mmcfg_late_insert_resources", 24),
STACK_USAGE("pci_mmconfig_alloc", 40),
STACK_USAGE("pci_mmconfig_insert", 48),
STACK_USAGE("pci_mmconfig_delete", 32),
STACK_USAGE("pci_mmconfig_add", 40),
STACK_USAGE("pci_mmcfg_arch_init", 16),
STACK_USAGE("pci_mmcfg_arch_free", 16),
STACK_USAGE("pci_mmcfg_arch_map", 8),
STACK_USAGE("pci_mmcfg_arch_unmap", 8),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("pci_mmcfg_read", 48),
STACK_USAGE("pci_mmcfg_write", 56),
STACK_USAGE("setup_add_efi_memmap", 0),
STACK_USAGE("efi_find_mirror", 32),
STACK_USAGE("do_add_efi_memmap", 8),
STACK_USAGE("efi_memblock_x86_reserve_range", 56),
STACK_USAGE("efi_memmap_entry_valid", 120),
STACK_USAGE("efi_clean_memmap", 88),
STACK_USAGE("efi_print_memmap", 104),
STACK_USAGE("efi_systab_init", 24),
STACK_USAGE("efi_config_init", 24),
STACK_USAGE("efi_init", 0),
STACK_USAGE("efi_merge_regions", 0),
STACK_USAGE("efi_map_regions", 72),
STACK_USAGE("kexec_enter_virtual_mode", 8),
STACK_USAGE("__efi_enter_virtual_mode", 32),
STACK_USAGE("efi_enter_virtual_mode", 0),
STACK_USAGE("efi_is_table_address", 0),
STACK_USAGE("efi_systab_show_arch", 8),
STACK_USAGE("fw_vendor_show", 0),
STACK_USAGE("runtime_show", 0),
STACK_USAGE("config_table_show", 0),
STACK_USAGE("efi_attr_is_visible", 0),
STACK_USAGE("efi_sync_low_kernel_mappings", 24),
STACK_USAGE("efi_setup_page_tables", 24),
STACK_USAGE("__map_region", 16),
STACK_USAGE("efi_map_region", 24),
STACK_USAGE("efi_map_region_fixed", 8),
STACK_USAGE("parse_efi_setup", 0),
STACK_USAGE("efi_update_mappings", 40),
STACK_USAGE("efi_update_mem_attr", 0),
STACK_USAGE("efi_runtime_update_mappings", 8),
STACK_USAGE("efi_dump_pagetable", 0),
STACK_USAGE("efi_enter_mm", 0),
STACK_USAGE("efi_leave_mm", 0),
STACK_USAGE("efi_thunk_set_virtual_address_map", 120),
STACK_USAGE("efi_thunk_get_time", 0),
STACK_USAGE("efi_thunk_set_time", 0),
STACK_USAGE("efi_thunk_get_wakeup_time", 0),
STACK_USAGE("efi_thunk_set_wakeup_time", 0),
STACK_USAGE("efi_thunk_get_variable", 136),
STACK_USAGE("efi_thunk_set_variable", 136),
STACK_USAGE("efi_thunk_set_variable_nonblocking", 136),
STACK_USAGE("efi_thunk_get_next_variable", 136),
STACK_USAGE("efi_alloc_page_tables", 48),
STACK_USAGE("efi_thunk_get_next_high_mono_count", 0),
STACK_USAGE("efi_thunk_reset_system", 120),
STACK_USAGE("efi_thunk_update_capsule", 0),
STACK_USAGE("efi_thunk_query_variable_info", 120),
STACK_USAGE("efi_thunk_query_variable_info_nonblocking", 120),
STACK_USAGE("efi_thunk_query_capsule_caps", 0),
STACK_USAGE("efi_thunk_runtime_setup", 0),
STACK_USAGE("efi_set_virtual_address_map", 64),
STACK_USAGE("efi_delete_dummy_variable", 24),
STACK_USAGE("efi_query_variable_store", 88),
STACK_USAGE("efi_arch_mem_reserve", 152),
STACK_USAGE("can_free_region", 0),
STACK_USAGE("efi_reserve_boot_services", 24),
STACK_USAGE("efi_unmap_pages", 32),
STACK_USAGE("efi_free_boot_services", 96),
STACK_USAGE("efi_reuse_config", 80),
STACK_USAGE("efi_apply_memmap_quirks", 0),
STACK_USAGE("efi_reboot_required", 0),
STACK_USAGE("efi_poweroff_required", 0),
STACK_USAGE("efi_crash_gracefully_on_page_fault", 8),
STACK_USAGE("setup_storage_paranoia", 0),
STACK_USAGE("iosf_mbi_write", 40),
STACK_USAGE("iosf_mbi_modify", 72),
STACK_USAGE("iosf_mbi_available", 0),
STACK_USAGE("iosf_mbi_punit_acquire", 56),
STACK_USAGE("iosf_mbi_punit_release", 8),
STACK_USAGE("iosf_mbi_block_punit_i2c_access", 72),
STACK_USAGE("iosf_mbi_unblock_punit_i2c_access", 0),
STACK_USAGE("iosf_mbi_register_pmic_bus_access_notifier", 16),
STACK_USAGE("iosf_mbi_unregister_pmic_bus_access_notifier_unlocked", 0),
STACK_USAGE("iosf_mbi_unregister_pmic_bus_access_notifier", 16),
STACK_USAGE("iosf_mbi_assert_punit_acquired", 0),
STACK_USAGE("iosf_mbi_probe", 24),
STACK_USAGE("iosf_mbi_init", 0),
STACK_USAGE("iosf_mbi_exit", 0),
STACK_USAGE("iosf_mbi_read", 48),
STACK_USAGE("save_processor_state", 24),
STACK_USAGE("restore_processor_state", 48),
STACK_USAGE("resume_play_dead", 0),
STACK_USAGE("hibernate_resume_nonboot_cpu_disable", 8),
STACK_USAGE("bsp_pm_callback", 8),
STACK_USAGE("bsp_pm_check_init", 0),
STACK_USAGE("msr_build_context", 56),
STACK_USAGE("msr_initialize_bdw", 8),
STACK_USAGE("msr_save_cpuid_features", 8),
STACK_USAGE("pm_check_save_msr", 40),
STACK_USAGE("arch_hibernation_header_restore", 16),
STACK_USAGE("relocate_restore_code", 32),
STACK_USAGE("arch_resume_nosmt", 16),
STACK_USAGE("pfn_is_nosave", 0),
STACK_USAGE("arch_hibernation_header_save", 8),
STACK_USAGE("swsusp_arch_resume", 120),
STACK_USAGE("alloc_pgt_page", 0),
STACK_USAGE("set_real_mode_permissions", 32),
STACK_USAGE("init_real_mode", 0),
STACK_USAGE("load_trampoline_pgtable", 16),
STACK_USAGE("reserve_real_mode", 8),
STACK_USAGE("setup_real_mode", 16),
STACK_USAGE("fb_is_primary_device", 8),
STACK_USAGE("badblocks_set", 96),
STACK_USAGE("badblocks_clear", 104),
STACK_USAGE("ack_all_badblocks", 32),
STACK_USAGE("badblocks_show", 64),
STACK_USAGE("badblocks_store", 48),
STACK_USAGE("badblocks_check", 64),
STACK_USAGE("badblocks_init", 24),
STACK_USAGE("devm_init_badblocks", 24),
STACK_USAGE("badblocks_exit", 8),
STACK_USAGE("read_seqbegin", 40),
STACK_USAGE("sync_bdevs", 56),
STACK_USAGE("set_blocksize", 24),
STACK_USAGE("sb_set_blocksize", 16),
STACK_USAGE("sb_min_blocksize", 16),
STACK_USAGE("sync_blockdev_nowait", 0),
STACK_USAGE("sync_blockdev", 0),
STACK_USAGE("fsync_bdev", 24),
STACK_USAGE("freeze_bdev", 40),
STACK_USAGE("thaw_bdev", 24),
STACK_USAGE("bdev_read_page", 32),
STACK_USAGE("bdev_write_page", 40),
STACK_USAGE("bdev_alloc_inode", 8),
STACK_USAGE("bdev_free_inode", 8),
STACK_USAGE("init_once", 0),
STACK_USAGE("bdev_evict_inode", 8),
STACK_USAGE("I_BDEV", 0),
STACK_USAGE("bd_init_fs_context", 8),
STACK_USAGE("bdev_cache_init", 0),
STACK_USAGE("bdev_alloc", 24),
STACK_USAGE("bdev_add", 0),
STACK_USAGE("nr_blockdev_pages", 8),
STACK_USAGE("bd_may_claim", 0),
STACK_USAGE("bd_prepare_to_claim", 96),
STACK_USAGE("bd_finish_claiming", 24),
STACK_USAGE("bd_abort_claiming", 16),
STACK_USAGE("blkdev_flush_mapping", 88),
STACK_USAGE("blkdev_get_whole", 24),
STACK_USAGE("blkdev_get_no_open", 24),
STACK_USAGE("blkdev_put_no_open", 0),
STACK_USAGE("blkdev_get_by_dev", 64),
STACK_USAGE("invalidate_bdev", 8),
STACK_USAGE("blkdev_get_by_path", 56),
STACK_USAGE("blkdev_put", 48),
STACK_USAGE("lookup_bdev", 48),
STACK_USAGE("truncate_bdev_range", 24),
STACK_USAGE("__invalidate_device", 24),
STACK_USAGE("__bio_add_page", 0),
STACK_USAGE("bio_add_page", 40),
STACK_USAGE("bio_add_folio", 0),
STACK_USAGE("__bio_release_pages", 56),
STACK_USAGE("bio_iov_bvec_set", 0),
STACK_USAGE("bio_iov_iter_get_pages", 144),
STACK_USAGE("submit_bio_wait_endio", 0),
STACK_USAGE("submit_bio_wait", 112),
STACK_USAGE("__bio_advance", 40),
STACK_USAGE("bio_copy_data_iter", 64),
STACK_USAGE("bio_copy_data", 56),
STACK_USAGE("bio_free_pages", 40),
STACK_USAGE("bio_set_pages_dirty", 40),
STACK_USAGE("bio_dirty_fn", 16),
STACK_USAGE("bio_check_pages_dirty", 16),
STACK_USAGE("bio_endio", 24),
STACK_USAGE("bio_split", 48),
STACK_USAGE("bvec_free", 8),
STACK_USAGE("bio_trim", 48),
STACK_USAGE("biovec_init_pool", 0),
STACK_USAGE("bioset_exit", 40),
STACK_USAGE("bioset_init", 56),
STACK_USAGE("bioset_init_from_src", 0),
STACK_USAGE("bio_alloc_kiocb", 56),
STACK_USAGE("init_bio", 24),
STACK_USAGE("bvec_alloc", 24),
STACK_USAGE("bio_uninit", 24),
STACK_USAGE("bio_free", 24),
STACK_USAGE("bio_init", 24),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("bio_reset", 24),
STACK_USAGE("bio_chain_endio", 8),
STACK_USAGE("bio_chain", 0),
STACK_USAGE("blk_next_bio", 16),
STACK_USAGE("bio_alloc_rescue", 24),
STACK_USAGE("punt_bios_to_rescuer", 48),
STACK_USAGE("biovec_slab", 0),
STACK_USAGE("bio_alloc_bioset", 80),
STACK_USAGE("bio_kmalloc", 8),
STACK_USAGE("zero_fill_bio", 48),
STACK_USAGE("bio_truncate", 64),
STACK_USAGE("guard_bio_eod", 0),
STACK_USAGE("bio_cpu_dead", 24),
STACK_USAGE("bio_put", 32),
STACK_USAGE("bio_alloc_clone", 32),
STACK_USAGE("bio_init_clone", 24),
STACK_USAGE("bio_add_hw_page", 48),
STACK_USAGE("bio_add_pc_page", 16),
STACK_USAGE("bio_add_zone_append_page", 0),
STACK_USAGE("blkg_rwstat_recursive_sum", 56),
STACK_USAGE("blkg_rwstat_exit", 8),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("__blkg_prfill_rwstat", 32),
STACK_USAGE("blkg_prfill_rwstat", 80),
STACK_USAGE("blkg_rwstat_init", 40),
STACK_USAGE("blkcg_css_offline", 8),
STACK_USAGE("blkcg_destroy_blkgs", 40),
STACK_USAGE("__blkg_release", 16),
STACK_USAGE("blkcg_css_free", 8),
STACK_USAGE("blkcg_css_alloc", 24),
STACK_USAGE("blkcg_css_online", 0),
STACK_USAGE("blkcg_init_queue", 32),
STACK_USAGE("blkcg_exit_queue", 8),
STACK_USAGE("blkcg_bind", 24),
STACK_USAGE("blkg_release", 0),
STACK_USAGE("blkcg_exit", 8),
STACK_USAGE("blkcg_activate_policy", 64),
STACK_USAGE("blkg_async_bio_workfn", 72),
STACK_USAGE("blkcg_deactivate_policy", 56),
STACK_USAGE("blkcg_policy_register", 24),
STACK_USAGE("blkcg_policy_unregister", 24),
STACK_USAGE("__blkcg_punt_bio_submit", 32),
STACK_USAGE("blkcg_maybe_throttle_blkg", 40),
STACK_USAGE("blkg_alloc", 40),
STACK_USAGE("blkcg_maybe_throttle_current", 40),
STACK_USAGE("blkcg_schedule_throttle", 24),
STACK_USAGE("blkcg_add_delay", 0),
STACK_USAGE("bio_associate_blkg_from_css", 80),
STACK_USAGE("bio_associate_blkg", 24),
STACK_USAGE("bio_clone_blkg_association", 16),
STACK_USAGE("blk_cgroup_bio_start", 16),
STACK_USAGE("blkcg_init", 8),
STACK_USAGE("blkg_lookup_slowpath", 32),
STACK_USAGE("blkg_create", 48),
STACK_USAGE("radix_tree_preload_end", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("blkg_get", 8),
STACK_USAGE("blkg_tryget", 8),
STACK_USAGE("percpu_ref_put", 8),
STACK_USAGE("local_lock_release", 8),
STACK_USAGE("blkg_destroy", 24),
STACK_USAGE("blkg_destroy_all", 64),
STACK_USAGE("blkcg_reset_stats", 16),
STACK_USAGE("blkg_dev_name", 0),
STACK_USAGE("blkcg_print_blkgs", 64),
STACK_USAGE("__blkg_prfill_u64", 16),
STACK_USAGE("blkg_lookup_check", 32),
STACK_USAGE("blkcg_conf_open_bdev", 48),
STACK_USAGE("blkg_conf_prep", 104),
STACK_USAGE("blkg_free_workfn", 16),
STACK_USAGE("blkg_conf_finish", 8),
STACK_USAGE("blkcg_rstat_flush", 16),
STACK_USAGE("blkcg_print_stat", 120),
STACK_USAGE("update_io_ticks", 40),
STACK_USAGE("__part_start_io_acct", 48),
STACK_USAGE("__bpf_trace_block_rq_completion", 0),
STACK_USAGE("perf_trace_block_rq_completion", 72),
STACK_USAGE("trace_event_raw_event_block_rq_completion", 88),
STACK_USAGE("trace_raw_output_block_rq_completion", 24),
STACK_USAGE("bio_start_io_acct_time", 0),
STACK_USAGE("bio_start_io_acct", 0),
STACK_USAGE("disk_start_io_acct", 0),
STACK_USAGE("__part_end_io_acct", 56),
STACK_USAGE("blk_queue_flag_test_and_set", 0),
STACK_USAGE("bio_end_io_acct_remapped", 0),
STACK_USAGE("disk_end_io_acct", 0),
STACK_USAGE("blk_lld_busy", 0),
STACK_USAGE("kblockd_schedule_work", 0),
STACK_USAGE("kblockd_mod_delayed_work_on", 0),
STACK_USAGE("blk_start_plug_nr_ios", 0),
STACK_USAGE("blk_start_plug", 0),
STACK_USAGE("blk_check_plugged", 24),
STACK_USAGE("__blk_flush_plug", 72),
STACK_USAGE("blk_finish_plug", 8),
STACK_USAGE("blk_io_schedule", 0),
STACK_USAGE("blk_dev_init", 0),
STACK_USAGE("blk_op_str", 0),
STACK_USAGE("__traceiter_block_rq_complete", 32),
STACK_USAGE("__bpf_trace_block_buffer", 0),
STACK_USAGE("perf_trace_block_buffer", 56),
STACK_USAGE("trace_event_raw_event_block_buffer", 72),
STACK_USAGE("trace_raw_output_block_buffer", 24),
STACK_USAGE("__traceiter_block_rq_error", 32),
STACK_USAGE("__bpf_trace_block_rq", 0),
STACK_USAGE("perf_trace_block_rq", 64),
STACK_USAGE("trace_event_raw_event_block_rq", 72),
STACK_USAGE("trace_raw_output_block_rq", 24),
STACK_USAGE("errno_to_blk_status", 0),
STACK_USAGE("blk_status_to_errno", 0),
STACK_USAGE("blk_status_to_str", 0),
STACK_USAGE("__traceiter_block_rq_insert", 16),
STACK_USAGE("__traceiter_block_rq_issue", 16),
STACK_USAGE("blk_sync_queue", 8),
STACK_USAGE("blk_set_pm_only", 0),
STACK_USAGE("__traceiter_block_rq_merge", 16),
STACK_USAGE("blk_clear_pm_only", 0),
STACK_USAGE("__bpf_trace_block_bio_complete", 0),
STACK_USAGE("__traceiter_block_bio_complete", 24),
STACK_USAGE("perf_trace_block_bio_complete", 64),
STACK_USAGE("trace_event_raw_event_block_bio_complete", 72),
STACK_USAGE("trace_raw_output_block_bio_complete", 24),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("blk_put_queue", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("blk_queue_start_drain", 8),
STACK_USAGE("__bpf_trace_block_bio", 0),
STACK_USAGE("perf_trace_block_bio", 64),
STACK_USAGE("trace_event_raw_event_block_bio", 72),
STACK_USAGE("trace_raw_output_block_bio", 24),
STACK_USAGE("blk_cleanup_queue", 16),
STACK_USAGE("__traceiter_block_bio_bounce", 16),
STACK_USAGE("__traceiter_block_bio_backmerge", 16),
STACK_USAGE("__traceiter_block_bio_frontmerge", 16),
STACK_USAGE("blk_queue_enter", 96),
STACK_USAGE("__traceiter_block_bio_queue", 16),
STACK_USAGE("__traceiter_block_getrq", 16),
STACK_USAGE("__bio_queue_enter", 96),
STACK_USAGE("__bpf_trace_block_plug", 0),
STACK_USAGE("__traceiter_block_plug", 16),
STACK_USAGE("perf_trace_block_plug", 48),
STACK_USAGE("trace_event_raw_event_block_plug", 64),
STACK_USAGE("trace_raw_output_block_plug", 24),
STACK_USAGE("__bpf_trace_block_unplug", 0),
STACK_USAGE("perf_trace_block_unplug", 56),
STACK_USAGE("trace_event_raw_event_block_unplug", 72),
STACK_USAGE("trace_raw_output_block_unplug", 24),
STACK_USAGE("blk_queue_exit", 16),
STACK_USAGE("blk_queue_usage_counter_release", 0),
STACK_USAGE("blk_rq_timed_out_timer", 0),
STACK_USAGE("__traceiter_block_unplug", 32),
STACK_USAGE("blk_timeout_work", 0),
STACK_USAGE("blk_alloc_queue", 32),
STACK_USAGE("__bpf_trace_block_split", 0),
STACK_USAGE("__traceiter_block_split", 24),
STACK_USAGE("perf_trace_block_split", 72),
STACK_USAGE("trace_event_raw_event_block_split", 80),
STACK_USAGE("trace_raw_output_block_split", 24),
STACK_USAGE("__traceiter_block_touch_buffer", 16),
STACK_USAGE("__bpf_trace_block_bio_remap", 0),
STACK_USAGE("__traceiter_block_bio_remap", 32),
STACK_USAGE("perf_trace_block_bio_remap", 80),
STACK_USAGE("trace_event_raw_event_block_bio_remap", 88),
STACK_USAGE("trace_raw_output_block_bio_remap", 24),
STACK_USAGE("blk_get_queue", 8),
STACK_USAGE("blk_try_enter_queue", 16),
STACK_USAGE("__bpf_trace_block_rq_remap", 0),
STACK_USAGE("__traceiter_block_rq_remap", 32),
STACK_USAGE("perf_trace_block_rq_remap", 80),
STACK_USAGE("trace_event_raw_event_block_rq_remap", 88),
STACK_USAGE("trace_raw_output_block_rq_remap", 32),
STACK_USAGE("should_fail_bio", 0),
STACK_USAGE("__traceiter_block_dirty_buffer", 16),
STACK_USAGE("__bpf_trace_block_rq_requeue", 0),
STACK_USAGE("__traceiter_block_rq_requeue", 16),
STACK_USAGE("perf_trace_block_rq_requeue", 64),
STACK_USAGE("trace_event_raw_event_block_rq_requeue", 72),
STACK_USAGE("trace_raw_output_block_rq_requeue", 24),
STACK_USAGE("submit_bio_noacct_nocheck", 120),
STACK_USAGE("submit_bio_noacct", 48),
STACK_USAGE("blk_queue_flag_set", 0),
STACK_USAGE("submit_bio", 8),
STACK_USAGE("blk_queue_flag_clear", 0),
STACK_USAGE("bio_poll", 48),
STACK_USAGE("iocb_bio_iopoll", 24),
STACK_USAGE("blk_flush_complete_seq", 40),
STACK_USAGE("flush_end_io", 56),
STACK_USAGE("is_flush_rq", 0),
STACK_USAGE("mq_flush_data_end_io", 48),
STACK_USAGE("blk_insert_flush", 32),
STACK_USAGE("blkdev_issue_flush", 128),
STACK_USAGE("blk_alloc_flush_queue", 32),
STACK_USAGE("blk_free_flush_queue", 8),
STACK_USAGE("blk_mq_hctx_set_fq_lock_class", 0),
STACK_USAGE("disk_register_independent_access_ranges", 40),
STACK_USAGE("blk_ia_range_sector_show", 0),
STACK_USAGE("disk_unregister_independent_access_ranges", 24),
STACK_USAGE("blk_ia_range_nr_sectors_show", 0),
STACK_USAGE("disk_alloc_independent_access_ranges", 8),
STACK_USAGE("disk_set_independent_access_ranges", 48),
STACK_USAGE("blk_ia_range_sysfs_show", 32),
STACK_USAGE("blk_ia_range_sysfs_nop_release", 0),
STACK_USAGE("blk_ia_ranges_sysfs_release", 0),
STACK_USAGE("put_io_context", 0),
STACK_USAGE("exit_io_context", 24),
STACK_USAGE("set_task_ioprio", 40),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("__copy_io", 24),
STACK_USAGE("blk_ioc_init", 0),
STACK_USAGE("iolatency_pd_offline", 16),
STACK_USAGE("iolatency_pd_free", 8),
STACK_USAGE("iolatency_init", 0),
STACK_USAGE("iolatency_exit", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("iolat_cleanup_cb", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("iolat_acquire_inflight", 0),
STACK_USAGE("blkg_put", 16),
STACK_USAGE("scale_cookie_change", 0),
STACK_USAGE("blkcg_iolatency_throttle", 48),
STACK_USAGE("blkcg_iolatency_done_bio", 136),
STACK_USAGE("blkcg_iolatency_exit", 8),
STACK_USAGE("blkiolatency_timer_fn", 56),
STACK_USAGE("blk_iolatency_init", 32),
STACK_USAGE("iolatency_set_limit", 168),
STACK_USAGE("iolatency_prfill_limit", 16),
STACK_USAGE("iolatency_print_limit", 8),
STACK_USAGE("iolatency_pd_stat", 96),
STACK_USAGE("iolatency_pd_alloc", 16),
STACK_USAGE("iolatency_pd_init", 48),
STACK_USAGE("blkdev_issue_discard", 96),
STACK_USAGE("__blkdev_issue_write_zeroes", 64),
STACK_USAGE("__blkdev_issue_discard", 136),
STACK_USAGE("__blkdev_issue_zero_pages", 72),
STACK_USAGE("__blkdev_issue_zeroout", 48),
STACK_USAGE("blkdev_issue_zeroout", 128),
STACK_USAGE("bio_map_kern_endio", 0),
STACK_USAGE("bio_copy_kern_endio", 8),
STACK_USAGE("bio_copy_kern_endio_read", 48),
STACK_USAGE("blk_rq_append_bio", 40),
STACK_USAGE("blk_rq_map_user_iov", 200),
STACK_USAGE("blk_rq_map_user", 96),
STACK_USAGE("blk_rq_unmap_user", 112),
STACK_USAGE("blk_rq_map_kern", 88),
STACK_USAGE("blk_attempt_plug_merge", 0),
STACK_USAGE("blk_bio_list_merge", 56),
STACK_USAGE("blk_mq_sched_try_merge", 48),
STACK_USAGE("trace_block_rq_merge", 0),
STACK_USAGE("__blk_queue_split", 160),
STACK_USAGE("blk_queue_split", 16),
STACK_USAGE("blk_recalc_rq_segments", 96),
STACK_USAGE("__blk_rq_map_sg", 176),
STACK_USAGE("bio_will_gap", 40),
STACK_USAGE("ll_back_merge_fn", 24),
STACK_USAGE("req_attempt_discard_merge", 8),
STACK_USAGE("ll_merge_requests_fn", 16),
STACK_USAGE("blk_rq_set_mixed_merge", 0),
STACK_USAGE("blk_account_io_merge_request", 16),
STACK_USAGE("attempt_merge", 24),
STACK_USAGE("blk_attempt_req_merge", 0),
STACK_USAGE("blk_rq_merge_ok", 0),
STACK_USAGE("blk_try_merge", 0),
STACK_USAGE("blk_account_io_merge_bio", 16),
STACK_USAGE("bio_attempt_back_merge", 24),
STACK_USAGE("bio_attempt_front_merge", 40),
STACK_USAGE("bio_attempt_discard_merge", 24),
STACK_USAGE("blk_attempt_bio_merge", 24),
STACK_USAGE("blk_mq_map_queues", 56),
STACK_USAGE("blk_mq_hw_queue_to_node", 32),
STACK_USAGE("queue_state_show", 32),
STACK_USAGE("queue_state_write", 56),
STACK_USAGE("hctx_state_show", 24),
STACK_USAGE("hctx_flags_show", 32),
STACK_USAGE("queue_poll_stat_show", 40),
STACK_USAGE("__blk_mq_debugfs_rq_show", 48),
STACK_USAGE("blk_mq_debugfs_rq_show", 0),
STACK_USAGE("hctx_dispatch_start", 16),
STACK_USAGE("hctx_dispatch_next", 0),
STACK_USAGE("hctx_dispatch_stop", 0),
STACK_USAGE("hctx_show_busy_rq", 0),
STACK_USAGE("hctx_busy_show", 24),
STACK_USAGE("hctx_type_show", 0),
STACK_USAGE("hctx_ctx_map_show", 0),
STACK_USAGE("blk_mq_debugfs_tags_show", 16),
STACK_USAGE("hctx_tags_show", 32),
STACK_USAGE("hctx_tags_bitmap_show", 32),
STACK_USAGE("hctx_sched_tags_show", 32),
STACK_USAGE("queue_requeue_list_start", 16),
STACK_USAGE("hctx_sched_tags_bitmap_show", 32),
STACK_USAGE("hctx_run_show", 0),
STACK_USAGE("hctx_run_write", 0),
STACK_USAGE("hctx_active_show", 0),
STACK_USAGE("hctx_dispatch_busy_show", 0),
STACK_USAGE("ctx_default_rq_list_next", 0),
STACK_USAGE("ctx_default_rq_list_start", 16),
STACK_USAGE("ctx_default_rq_list_stop", 0),
STACK_USAGE("ctx_read_rq_list_next", 0),
STACK_USAGE("ctx_read_rq_list_start", 16),
STACK_USAGE("ctx_read_rq_list_stop", 0),
STACK_USAGE("ctx_poll_rq_list_next", 0),
STACK_USAGE("ctx_poll_rq_list_start", 16),
STACK_USAGE("ctx_poll_rq_list_stop", 0),
STACK_USAGE("queue_requeue_list_next", 0),
STACK_USAGE("blk_mq_debugfs_show", 0),
STACK_USAGE("blk_mq_debugfs_write", 0),
STACK_USAGE("blk_mq_debugfs_open", 16),
STACK_USAGE("blk_mq_debugfs_release", 0),
STACK_USAGE("queue_requeue_list_stop", 0),
STACK_USAGE("blk_mq_debugfs_register", 64),
STACK_USAGE("blk_mq_debugfs_unregister", 0),
STACK_USAGE("blk_mq_debugfs_register_hctx", 120),
STACK_USAGE("blk_mq_debugfs_unregister_hctx", 8),
STACK_USAGE("blk_mq_debugfs_register_hctxs", 40),
STACK_USAGE("blk_mq_debugfs_unregister_hctxs", 40),
STACK_USAGE("blk_mq_debugfs_register_sched", 24),
STACK_USAGE("blk_mq_debugfs_unregister_sched", 8),
STACK_USAGE("blk_mq_debugfs_unregister_rqos", 8),
STACK_USAGE("blk_mq_debugfs_register_rqos", 24),
STACK_USAGE("blk_mq_debugfs_unregister_queue_rqos", 8),
STACK_USAGE("blk_mq_debugfs_register_sched_hctx", 24),
STACK_USAGE("blk_mq_debugfs_unregister_sched_hctx", 8),
STACK_USAGE("queue_pm_only_show", 0),
STACK_USAGE("queue_zone_wlock_show", 0),
STACK_USAGE("blk_mq_pci_map_queues", 40),
STACK_USAGE("blk_mq_do_dispatch_sched", 128),
STACK_USAGE("blk_mq_do_dispatch_ctx", 80),
STACK_USAGE("blk_mq_sched_mark_restart_hctx", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("__blk_mq_sched_dispatch_requests", 56),
STACK_USAGE("blk_mq_sched_dispatch_requests", 8),
STACK_USAGE("blk_mq_sched_bio_merge", 40),
STACK_USAGE("__blk_mq_sched_restart", 0),
STACK_USAGE("blk_mq_sched_try_insert_merge", 0),
STACK_USAGE("blk_mq_sched_insert_request", 72),
STACK_USAGE("blk_mq_sched_insert_requests", 72),
STACK_USAGE("sched_rq_cmp", 0),
STACK_USAGE("blk_mq_init_sched", 72),
STACK_USAGE("blk_mq_sched_free_rqs", 40),
STACK_USAGE("blk_mq_exit_sched", 72),
STACK_USAGE("blk_mq_hw_sysfs_nr_reserved_tags_show", 0),
STACK_USAGE("blk_mq_hw_sysfs_cpus_show", 40),
STACK_USAGE("blk_mq_sysfs_release", 8),
STACK_USAGE("blk_mq_unregister_dev", 72),
STACK_USAGE("blk_mq_hctx_kobj_init", 0),
STACK_USAGE("blk_mq_sysfs_deinit", 16),
STACK_USAGE("blk_mq_sysfs_init", 32),
STACK_USAGE("__blk_mq_register_dev", 88),
STACK_USAGE("blk_mq_ctx_sysfs_release", 0),
STACK_USAGE("blk_mq_sysfs_unregister", 64),
STACK_USAGE("blk_mq_sysfs_register", 64),
STACK_USAGE("blk_mq_hw_sysfs_release", 16),
STACK_USAGE("blk_mq_hw_sysfs_show", 32),
STACK_USAGE("blk_mq_hw_sysfs_store", 40),
STACK_USAGE("blk_mq_hw_sysfs_nr_tags_show", 0),
STACK_USAGE("__blk_mq_get_tag", 0),
STACK_USAGE("blk_mq_get_tags", 16),
STACK_USAGE("blk_mq_get_tag", 120),
STACK_USAGE("blk_mq_put_tag", 0),
STACK_USAGE("blk_mq_put_tags", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("bt_for_each", 136),
STACK_USAGE("bt_tags_for_each", 120),
STACK_USAGE("__blk_mq_tag_busy", 16),
STACK_USAGE("blk_mq_all_tag_iter", 24),
STACK_USAGE("blk_mq_tagset_busy_iter", 48),
STACK_USAGE("blk_mq_tagset_count_completed_rqs", 0),
STACK_USAGE("blk_mq_tagset_wait_completed_request", 56),
STACK_USAGE("blk_mq_queue_tag_busy_iter", 80),
STACK_USAGE("blk_mq_init_bitmaps", 48),
STACK_USAGE("blk_mq_init_tags", 40),
STACK_USAGE("blk_mq_free_tags", 8),
STACK_USAGE("blk_mq_tag_update_depth", 40),
STACK_USAGE("blk_mq_tag_resize_shared_tags", 0),
STACK_USAGE("blk_mq_tag_update_sched_shared_tags", 0),
STACK_USAGE("blk_mq_unique_tag", 0),
STACK_USAGE("blk_mq_tag_wakeup_all", 16),
STACK_USAGE("__blk_mq_tag_idle", 16),
STACK_USAGE("blk_mq_virtio_map_queues", 40),
STACK_USAGE("blk_done_softirq", 8),
STACK_USAGE("blk_softirq_cpu_dead", 8),
STACK_USAGE("__blk_mq_complete_request_remote", 0),
STACK_USAGE("blk_mq_complete_request_remote", 24),
STACK_USAGE("blk_mq_complete_request", 8),
STACK_USAGE("blk_mq_start_request", 16),
STACK_USAGE("blk_end_sync_rq", 0),
STACK_USAGE("blk_execute_rq_nowait", 32),
STACK_USAGE("blk_execute_rq", 120),
STACK_USAGE("__blk_mq_requeue_request", 24),
STACK_USAGE("blk_mq_requeue_request", 32),
STACK_USAGE("blk_mq_requeue_work", 64),
STACK_USAGE("blk_mq_add_to_requeue_list", 40),
STACK_USAGE("blk_mq_check_inflight", 0),
STACK_USAGE("blk_mq_kick_requeue_list", 0),
STACK_USAGE("blk_mq_delay_kick_requeue_list", 8),
STACK_USAGE("blk_mq_rq_inflight", 0),
STACK_USAGE("blk_mq_queue_inflight", 16),
STACK_USAGE("blk_mq_put_rq_ref", 8),
STACK_USAGE("blk_mq_check_expired", 8),
STACK_USAGE("blk_mq_in_flight", 24),
STACK_USAGE("blk_mq_timeout_work", 48),
STACK_USAGE("trace_block_rq_complete", 0),
STACK_USAGE("blk_mq_flush_busy_ctxs", 88),
STACK_USAGE("blk_mq_in_flight_rw", 32),
STACK_USAGE("blk_mq_dequeue_from_ctx", 96),
STACK_USAGE("__blk_mq_get_driver_tag", 32),
STACK_USAGE("blk_mq_dispatch_wake", 16),
STACK_USAGE("blk_freeze_queue_start", 16),
STACK_USAGE("trace_block_rq_error", 0),
STACK_USAGE("blk_mq_freeze_queue_wait", 72),
STACK_USAGE("blk_mq_dispatch_rq_list", 160),
STACK_USAGE("blk_mq_freeze_queue_wait_timeout", 88),
STACK_USAGE("srcu_read_unlock", 16),
STACK_USAGE("__blk_mq_run_hw_queue", 24),
STACK_USAGE("blk_freeze_queue", 16),
STACK_USAGE("__blk_mq_delay_run_hw_queue", 40),
STACK_USAGE("blk_mq_delay_run_hw_queue", 0),
STACK_USAGE("blk_mq_run_hw_queue", 40),
STACK_USAGE("blk_mq_freeze_queue", 0),
STACK_USAGE("trace_block_rq_insert", 0),
STACK_USAGE("blk_mq_run_hw_queues", 48),
STACK_USAGE("blk_mq_delay_run_hw_queues", 48),
STACK_USAGE("__blk_mq_unfreeze_queue", 24),
STACK_USAGE("blk_mq_queue_stopped", 40),
STACK_USAGE("blk_mq_stop_hw_queue", 8),
STACK_USAGE("blk_mq_stop_hw_queues", 40),
STACK_USAGE("blk_mq_start_hw_queue", 0),
STACK_USAGE("blk_mq_start_hw_queues", 32),
STACK_USAGE("blk_mq_start_stopped_hw_queue", 0),
STACK_USAGE("blk_mq_start_stopped_hw_queues", 40),
STACK_USAGE("blk_mq_run_work_fn", 0),
STACK_USAGE("__blk_mq_insert_request", 48),
STACK_USAGE("blk_mq_unfreeze_queue", 16),
STACK_USAGE("blk_mq_request_bypass_insert", 32),
STACK_USAGE("blk_mq_insert_requests", 40),
STACK_USAGE("blk_mq_quiesce_queue_nowait", 24),
STACK_USAGE("__blk_mq_try_issue_directly", 72),
STACK_USAGE("blk_mq_try_issue_directly", 16),
STACK_USAGE("blk_mq_plug_issue_direct", 56),
STACK_USAGE("blk_mq_flush_plug_list", 72),
STACK_USAGE("blk_mq_wait_quiesce_done", 0),
STACK_USAGE("blk_mq_try_issue_list_directly", 56),
STACK_USAGE("percpu_ref_tryget", 8),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("blk_mq_quiesce_queue", 24),
STACK_USAGE("blk_mq_submit_bio", 128),
STACK_USAGE("blk_insert_cloned_request", 40),
STACK_USAGE("blk_rq_unprep_clone", 8),
STACK_USAGE("blk_mq_unquiesce_queue", 24),
STACK_USAGE("blk_rq_prep_clone", 80),
STACK_USAGE("blk_steal_bios", 0),
STACK_USAGE("blk_mq_free_rqs", 56),
STACK_USAGE("blk_mq_free_rq_map", 8),
STACK_USAGE("blk_mq_wake_waiters", 32),
STACK_USAGE("blk_rq_init", 16),
STACK_USAGE("percpu_ref_put_many", 16),
STACK_USAGE("blk_mq_has_request", 0),
STACK_USAGE("blk_mq_hctx_notify_offline", 48),
STACK_USAGE("blk_mq_hctx_notify_online", 0),
STACK_USAGE("blk_mq_hctx_notify_dead", 56),
STACK_USAGE("blk_mq_rq_ctx_init", 16),
STACK_USAGE("blk_mq_exit_hctx", 56),
STACK_USAGE("blk_mq_alloc_map_and_rqs", 104),
STACK_USAGE("blk_mq_free_map_and_rqs", 8),
STACK_USAGE("blk_mq_map_swqueue", 80),
STACK_USAGE("blk_mq_update_tag_set_shared", 64),
STACK_USAGE("blk_mq_release", 48),
STACK_USAGE("blk_mq_init_queue", 24),
STACK_USAGE("__blk_mq_alloc_disk", 40),
STACK_USAGE("blk_mq_alloc_and_init_hctx", 56),
STACK_USAGE("blk_mq_realloc_hw_ctxs", 80),
STACK_USAGE("blk_mq_init_allocated_queue", 96),
STACK_USAGE("blk_mq_exit_queue", 56),
STACK_USAGE("blk_mq_alloc_set_map_and_rqs", 40),
STACK_USAGE("blk_mq_update_queue_map", 40),
STACK_USAGE("blk_mq_alloc_tag_set", 32),
STACK_USAGE("trace_block_unplug", 0),
STACK_USAGE("blk_mq_alloc_sq_tag_set", 32),
STACK_USAGE("blk_mq_free_tag_set", 24),
STACK_USAGE("blk_mq_update_nr_requests", 88),
STACK_USAGE("__blk_mq_alloc_requests", 72),
STACK_USAGE("blk_mq_update_nr_hw_queues", 96),
STACK_USAGE("blk_mq_poll_stats_fn", 0),
STACK_USAGE("blk_mq_poll_hybrid", 120),
STACK_USAGE("blk_mq_poll_classic", 48),
STACK_USAGE("blk_mq_poll", 32),
STACK_USAGE("blk_mq_rq_cpu", 0),
STACK_USAGE("blk_mq_cancel_work_sync", 32),
STACK_USAGE("blk_mq_init", 0),
STACK_USAGE("blk_mq_alloc_request", 72),
STACK_USAGE("blk_mq_poll_stats_bkt", 4),
STACK_USAGE("blk_mq_alloc_request_hctx", 96),
STACK_USAGE("__blk_mq_free_request", 48),
STACK_USAGE("blk_mq_free_request", 24),
STACK_USAGE("blk_mq_free_plug_rqs", 8),
STACK_USAGE("blk_dump_rq_flags", 8),
STACK_USAGE("blk_account_io_completion", 24),
STACK_USAGE("blk_print_req_error", 40),
STACK_USAGE("rcu_read_unlock", 0),
STACK_USAGE("blk_update_request", 48),
STACK_USAGE("blk_account_io_done", 24),
STACK_USAGE("__blk_mq_end_request", 24),
STACK_USAGE("blk_mq_end_request", 16),
STACK_USAGE("blk_mq_end_request_batch", 216),
STACK_USAGE("blk_post_runtime_suspend", 24),
STACK_USAGE("blk_pre_runtime_resume", 16),
STACK_USAGE("blk_post_runtime_resume", 32),
STACK_USAGE("blk_set_runtime_active", 32),
STACK_USAGE("blk_pm_runtime_init", 8),
STACK_USAGE("blk_pre_runtime_suspend", 32),
STACK_USAGE("__rq_qos_queue_depth_changed", 8),
STACK_USAGE("rq_depth_calc_max_depth", 0),
STACK_USAGE("rq_depth_scale_up", 0),
STACK_USAGE("rq_depth_scale_down", 0),
STACK_USAGE("rq_qos_wake_function", 8),
STACK_USAGE("rq_qos_wait", 128),
STACK_USAGE("rq_wait_inc_below", 0),
STACK_USAGE("rq_qos_exit", 8),
STACK_USAGE("__rq_qos_cleanup", 16),
STACK_USAGE("__rq_qos_done", 16),
STACK_USAGE("__rq_qos_issue", 16),
STACK_USAGE("__rq_qos_requeue", 16),
STACK_USAGE("__rq_qos_throttle", 16),
STACK_USAGE("__rq_qos_track", 24),
STACK_USAGE("__rq_qos_merge", 24),
STACK_USAGE("__rq_qos_done_bio", 16),
STACK_USAGE("blk_queue_max_hw_sectors", 16),
STACK_USAGE("blk_queue_chunk_sectors", 0),
STACK_USAGE("blk_queue_max_discard_sectors", 0),
STACK_USAGE("blk_queue_max_write_zeroes_sectors", 0),
STACK_USAGE("blk_queue_max_zone_append_sectors", 0),
STACK_USAGE("blk_queue_rq_timeout", 0),
STACK_USAGE("blk_queue_max_segments", 8),
STACK_USAGE("blk_queue_max_discard_segments", 0),
STACK_USAGE("blk_queue_max_segment_size", 16),
STACK_USAGE("blk_queue_logical_block_size", 0),
STACK_USAGE("blk_queue_physical_block_size", 0),
STACK_USAGE("blk_queue_zone_write_granularity", 0),
STACK_USAGE("blk_set_default_limits", 0),
STACK_USAGE("blk_queue_alignment_offset", 0),
STACK_USAGE("disk_update_readahead", 0),
STACK_USAGE("blk_limits_io_min", 0),
STACK_USAGE("blk_queue_io_min", 0),
STACK_USAGE("blk_limits_io_opt", 0),
STACK_USAGE("blk_queue_io_opt", 0),
STACK_USAGE("blk_stack_limits", 88),
STACK_USAGE("disk_stack_limits", 16),
STACK_USAGE("blk_queue_update_dma_pad", 0),
STACK_USAGE("blk_queue_segment_boundary", 16),
STACK_USAGE("blk_queue_virt_boundary", 0),
STACK_USAGE("blk_set_stacking_limits", 0),
STACK_USAGE("blk_queue_dma_alignment", 0),
STACK_USAGE("blk_queue_update_dma_alignment", 0),
STACK_USAGE("blk_set_queue_depth", 0),
STACK_USAGE("blk_queue_write_cache", 16),
STACK_USAGE("blk_queue_required_elevator_features", 0),
STACK_USAGE("blk_queue_can_use_dma_map_merging", 8),
STACK_USAGE("blk_queue_set_zoned", 0),
STACK_USAGE("blk_queue_bounce_limit", 0),
STACK_USAGE("blk_stat_alloc_callback", 48),
STACK_USAGE("blk_stat_add_callback", 40),
STACK_USAGE("blk_stat_remove_callback", 24),
STACK_USAGE("blk_stat_free_callback_rcu", 16),
STACK_USAGE("blk_stat_free_callback", 0),
STACK_USAGE("blk_stat_disable_accounting", 16),
STACK_USAGE("blk_stat_enable_accounting", 16),
STACK_USAGE("blk_alloc_queue_stats", 8),
STACK_USAGE("blk_rq_stat_init", 0),
STACK_USAGE("blk_free_queue_stats", 0),
STACK_USAGE("blk_stats_alloc_enable", 8),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("blk_rq_stat_sum", 0),
STACK_USAGE("blk_rq_stat_add", 0),
STACK_USAGE("blk_stat_add", 40),
STACK_USAGE("blk_stat_timer_fn", 24),
STACK_USAGE("queue_ra_store", 40),
STACK_USAGE("queue_max_sectors_show", 0),
STACK_USAGE("queue_max_segments_show", 0),
STACK_USAGE("queue_max_discard_segments_show", 0),
STACK_USAGE("queue_max_integrity_segments_show", 0),
STACK_USAGE("queue_max_segment_size_show", 0),
STACK_USAGE("queue_logical_block_size_show", 0),
STACK_USAGE("queue_physical_block_size_show", 0),
STACK_USAGE("queue_chunk_sectors_show", 0),
STACK_USAGE("queue_io_min_show", 0),
STACK_USAGE("queue_io_opt_show", 0),
STACK_USAGE("queue_discard_granularity_show", 0),
STACK_USAGE("queue_discard_max_hw_show", 0),
STACK_USAGE("queue_discard_max_show", 0),
STACK_USAGE("queue_discard_max_store", 32),
STACK_USAGE("queue_discard_zeroes_data_show", 0),
STACK_USAGE("queue_write_same_max_show", 0),
STACK_USAGE("queue_write_zeroes_max_show", 0),
STACK_USAGE("queue_zone_write_granularity_show", 0),
STACK_USAGE("queue_zone_append_max_show", 0),
STACK_USAGE("queue_max_sectors_store", 48),
STACK_USAGE("queue_max_hw_sectors_show", 0),
STACK_USAGE("queue_virt_boundary_mask_show", 0),
STACK_USAGE("queue_nonrot_show", 0),
STACK_USAGE("queue_nonrot_store", 32),
STACK_USAGE("queue_random_show", 0),
STACK_USAGE("queue_random_store", 32),
STACK_USAGE("queue_iostats_show", 0),
STACK_USAGE("queue_iostats_store", 32),
STACK_USAGE("queue_stable_writes_show", 0),
STACK_USAGE("queue_stable_writes_store", 32),
STACK_USAGE("queue_zoned_show", 0),
STACK_USAGE("queue_nr_zones_show", 0),
STACK_USAGE("queue_max_open_zones_show", 0),
STACK_USAGE("queue_max_active_zones_show", 0),
STACK_USAGE("queue_nomerges_show", 0),
STACK_USAGE("queue_nomerges_store", 48),
STACK_USAGE("queue_rq_affinity_show", 0),
STACK_USAGE("queue_rq_affinity_store", 32),
STACK_USAGE("queue_poll_delay_show", 0),
STACK_USAGE("queue_poll_delay_store", 40),
STACK_USAGE("queue_poll_show", 0),
STACK_USAGE("queue_poll_store", 8),
STACK_USAGE("queue_io_timeout_show", 8),
STACK_USAGE("queue_io_timeout_store", 32),
STACK_USAGE("queue_wb_lat_show", 0),
STACK_USAGE("queue_wb_lat_store", 32),
STACK_USAGE("queue_wc_show", 0),
STACK_USAGE("queue_wc_store", 24),
STACK_USAGE("queue_fua_show", 0),
STACK_USAGE("queue_dax_show", 0),
STACK_USAGE("queue_requests_show", 0),
STACK_USAGE("queue_attr_visible", 0),
STACK_USAGE("queue_requests_store", 32),
STACK_USAGE("queue_attr_show", 32),
STACK_USAGE("queue_attr_store", 40),
STACK_USAGE("blk_free_queue_rcu", 0),
STACK_USAGE("blk_release_queue", 24),
STACK_USAGE("blk_register_queue", 56),
STACK_USAGE("blk_unregister_queue", 32),
STACK_USAGE("queue_ra_show", 0),
STACK_USAGE("tg_dispatch_one_bio", 56),
STACK_USAGE("throtl_select_dispatch", 56),
STACK_USAGE("throtl_pending_timer_fn", 80),
STACK_USAGE("blk_throtl_dispatch_work_fn", 104),
STACK_USAGE("tg_prfill_conf_u64", 0),
STACK_USAGE("tg_prfill_conf_uint", 0),
STACK_USAGE("tg_print_conf_u64", 8),
STACK_USAGE("tg_print_conf_uint", 8),
STACK_USAGE("tg_conf_updated", 56),
STACK_USAGE("tg_set_conf", 72),
STACK_USAGE("tg_set_conf_u64", 0),
STACK_USAGE("tg_set_conf_uint", 0),
STACK_USAGE("tg_print_rwstat", 8),
STACK_USAGE("tg_prfill_rwstat_recursive", 72),
STACK_USAGE("tg_print_rwstat_recursive", 8),
STACK_USAGE("tg_prfill_limit", 216),
STACK_USAGE("tg_bps_limit", 8),
STACK_USAGE("tg_print_limit", 8),
STACK_USAGE("tg_set_limit", 200),
STACK_USAGE("tg_last_low_overflow_time", 0),
STACK_USAGE("throtl_tg_is_idle", 40),
STACK_USAGE("tg_iops_limit", 8),
STACK_USAGE("blk_throtl_cancel_bios", 48),
STACK_USAGE("throtl_can_upgrade", 48),
STACK_USAGE("throtl_upgrade_state", 40),
STACK_USAGE("__blk_throtl_bio", 112),
STACK_USAGE("blk_throtl_init", 32),
STACK_USAGE("blk_throtl_exit", 8),
STACK_USAGE("blk_throtl_register_queue", 0),
STACK_USAGE("throtl_init", 0),
STACK_USAGE("throtl_qnode_add_bio", 8),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("blkg_put", 16),
STACK_USAGE("throtl_pd_alloc", 24),
STACK_USAGE("throtl_pd_init", 0),
STACK_USAGE("tg_update_has_rules", 56),
STACK_USAGE("throtl_pd_online", 0),
STACK_USAGE("throtl_pd_offline", 0),
STACK_USAGE("throtl_pd_free", 8),
STACK_USAGE("throtl_schedule_pending_timer", 24),
STACK_USAGE("blk_trace_note_message_enabled", 8),
STACK_USAGE("throtl_start_new_slice", 48),
STACK_USAGE("throtl_extend_slice", 48),
STACK_USAGE("throtl_trim_slice", 64),
STACK_USAGE("rcu_read_unlock", 0),
STACK_USAGE("tg_may_dispatch", 48),
STACK_USAGE("throtl_add_bio_tg", 16),
STACK_USAGE("tg_update_disptime", 64),
STACK_USAGE("blk_rq_timeout", 0),
STACK_USAGE("blk_add_timer", 0),
STACK_USAGE("blk_abort_request", 0),
STACK_USAGE("blk_timeout_init", 0),
STACK_USAGE("bsg_job_put", 16),
STACK_USAGE("bsg_job_get", 8),
STACK_USAGE("bsg_job_done", 0),
STACK_USAGE("bsg_complete", 8),
STACK_USAGE("bsg_queue_rq", 48),
STACK_USAGE("bsg_transport_sg_io_fn", 48),
STACK_USAGE("bsg_init_rq", 8),
STACK_USAGE("bsg_exit_rq", 0),
STACK_USAGE("bsg_remove_queue", 16),
STACK_USAGE("bsg_timeout", 0),
STACK_USAGE("bsg_setup_queue", 48),
STACK_USAGE("bsg_ioctl", 208),
STACK_USAGE("bsg_device_release", 8),
STACK_USAGE("bsg_unregister_queue", 8),
STACK_USAGE("bsg_register_queue", 48),
STACK_USAGE("bsg_devnode", 0),
STACK_USAGE("bsg_init", 32),
STACK_USAGE("bsg_open", 0),
STACK_USAGE("bsg_release", 0),
STACK_USAGE("disk_unblock_events", 0),
STACK_USAGE("disk_flush_events", 24),
STACK_USAGE("disk_check_events", 104),
STACK_USAGE("bdev_check_media_change", 64),
STACK_USAGE("disk_force_media_change", 56),
STACK_USAGE("disk_events_workfn", 0),
STACK_USAGE("disk_events_show", 24),
STACK_USAGE("disk_events_async_show", 0),
STACK_USAGE("disk_events_poll_msecs_show", 0),
STACK_USAGE("disk_events_poll_msecs_store", 64),
STACK_USAGE("disk_events_set_dfl_poll_msecs", 40),
STACK_USAGE("disk_alloc_events", 24),
STACK_USAGE("disk_add_events", 8),
STACK_USAGE("disk_del_events", 40),
STACK_USAGE("disk_release_events", 0),
STACK_USAGE("disk_block_events", 40),
STACK_USAGE("__disk_unblock_events", 40),
STACK_USAGE("elevator_get", 56),
STACK_USAGE("elevator_alloc", 16),
STACK_USAGE("elevator_release", 8),
STACK_USAGE("elevator_exit", 24),
STACK_USAGE("elv_rqhash_del", 0),
STACK_USAGE("elv_rqhash_add", 0),
STACK_USAGE("elv_rqhash_reposition", 0),
STACK_USAGE("elv_rqhash_find", 0),
STACK_USAGE("elv_rb_add", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("elv_rb_del", 8),
STACK_USAGE("elv_rb_find", 0),
STACK_USAGE("elv_merge", 48),
STACK_USAGE("elv_attempt_insert_merge", 48),
STACK_USAGE("elv_merged_request", 24),
STACK_USAGE("elv_merge_requests", 16),
STACK_USAGE("elv_latter_request", 0),
STACK_USAGE("elv_former_request", 0),
STACK_USAGE("elv_attr_show", 32),
STACK_USAGE("elv_attr_store", 40),
STACK_USAGE("elv_register_queue", 40),
STACK_USAGE("elv_unregister_queue", 16),
STACK_USAGE("elv_register", 32),
STACK_USAGE("elv_unregister", 8),
STACK_USAGE("elevator_switch_mq", 32),
STACK_USAGE("elevator_init_mq", 24),
STACK_USAGE("elevator_switch", 24),
STACK_USAGE("elv_bio_merge_ok", 16),
STACK_USAGE("elv_iosched_store", 72),
STACK_USAGE("elv_iosched_show", 56),
STACK_USAGE("elv_rb_former_request", 0),
STACK_USAGE("elv_rb_latter_request", 0),
STACK_USAGE("elevator_setup", 0),
STACK_USAGE("blkdev_bio_end_io", 40),
STACK_USAGE("blk_wake_io_task", 0),
STACK_USAGE("__blkdev_direct_IO", 144),
STACK_USAGE("blkdev_get_block", 16),
STACK_USAGE("blkdev_bio_end_io_async", 16),
STACK_USAGE("blkdev_direct_IO", 56),
STACK_USAGE("blkdev_writepage", 0),
STACK_USAGE("blkdev_readpage", 0),
STACK_USAGE("blkdev_readahead", 0),
STACK_USAGE("blkdev_write_begin", 0),
STACK_USAGE("blkdev_write_end", 16),
STACK_USAGE("blkdev_writepages", 0),
STACK_USAGE("blkdev_llseek", 40),
STACK_USAGE("blkdev_fsync", 8),
STACK_USAGE("blkdev_open", 8),
STACK_USAGE("blkdev_bio_end_io_simple", 0),
STACK_USAGE("blkdev_close", 0),
STACK_USAGE("blkdev_write_iter", 88),
STACK_USAGE("__blkdev_direct_IO_simple", 248),
STACK_USAGE("blkdev_read_iter", 40),
STACK_USAGE("blkdev_fallocate", 56),
STACK_USAGE("blkdev_init", 0),
STACK_USAGE("disk_alignment_offset_show", 0),
STACK_USAGE("disk_discard_alignment_show", 0),
STACK_USAGE("diskseq_show", 0),
STACK_USAGE("disk_visible", 0),
STACK_USAGE("bdevname", 32),
STACK_USAGE("disk_release", 24),
STACK_USAGE("block_uevent", 0),
STACK_USAGE("block_devnode", 0),
STACK_USAGE("diskstats_show", 312),
STACK_USAGE("part_stat_read_all", 160),
STACK_USAGE("proc_genhd_init", 0),
STACK_USAGE("part_devt", 16),
STACK_USAGE("blk_lookup_devt", 88),
STACK_USAGE("__alloc_disk_node", 40),
STACK_USAGE("__blk_alloc_disk", 32),
STACK_USAGE("put_disk", 0),
STACK_USAGE("blk_cleanup_disk", 8),
STACK_USAGE("set_disk_ro", 56),
STACK_USAGE("inc_diskseq", 0),
STACK_USAGE("blkdev_show", 24),
STACK_USAGE("__register_blkdev", 40),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("unregister_blkdev", 32),
STACK_USAGE("blk_alloc_ext_minor", 0),
STACK_USAGE("blk_free_ext_minor", 0),
STACK_USAGE("disk_uevent", 48),
STACK_USAGE("disk_scan_partitions", 16),
STACK_USAGE("device_add_disk", 48),
STACK_USAGE("blk_mark_disk_dead", 0),
STACK_USAGE("set_capacity", 24),
STACK_USAGE("del_gendisk", 32),
STACK_USAGE("invalidate_disk", 16),
STACK_USAGE("disk_badblocks_show", 0),
STACK_USAGE("disk_badblocks_store", 0),
STACK_USAGE("blk_request_module", 16),
STACK_USAGE("printk_all_partitions", 112),
STACK_USAGE("set_capacity_and_notify", 72),
STACK_USAGE("disk_seqf_start", 24),
STACK_USAGE("disk_seqf_next", 0),
STACK_USAGE("disk_seqf_stop", 16),
STACK_USAGE("show_partition_start", 40),
STACK_USAGE("show_partition", 40),
STACK_USAGE("genhd_device_init", 8),
STACK_USAGE("disk_range_show", 0),
STACK_USAGE("disk_ext_range_show", 0),
STACK_USAGE("disk_removable_show", 0),
STACK_USAGE("disk_hidden_show", 0),
STACK_USAGE("disk_ro_show", 0),
STACK_USAGE("part_size_show", 0),
STACK_USAGE("part_stat_show", 272),
STACK_USAGE("part_inflight_show", 56),
STACK_USAGE("disk_capability_show", 0),
STACK_USAGE("bd_unlink_disk_holder", 32),
STACK_USAGE("bd_register_pending_holders", 48),
STACK_USAGE("bd_link_disk_holder", 56),
STACK_USAGE("blkpg_do_ioctl", 192),
STACK_USAGE("blkdev_compat_ptr_ioctl", 0),
STACK_USAGE("blkdev_bszset", 56),
STACK_USAGE("blkdev_common_ioctl", 104),
STACK_USAGE("blkdev_ioctl", 64),
STACK_USAGE("compat_blkdev_ioctl", 72),
STACK_USAGE("blk_ioctl_discard", 88),
STACK_USAGE("ioprio_best", 0),
STACK_USAGE("__ia32_sys_ioprio_get", 0),
STACK_USAGE("__se_sys_ioprio_get", 56),
STACK_USAGE("__x64_sys_ioprio_get", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("ioprio_check_cap", 8),
STACK_USAGE("__ia32_sys_ioprio_set", 0),
STACK_USAGE("__se_sys_ioprio_set", 64),
STACK_USAGE("__x64_sys_ioprio_set", 0),
STACK_USAGE("kyber_init", 0),
STACK_USAGE("kyber_exit", 0),
STACK_USAGE("__bpf_trace_kyber_latency", 0),
STACK_USAGE("__traceiter_kyber_latency", 48),
STACK_USAGE("perf_trace_kyber_latency", 88),
STACK_USAGE("trace_event_raw_event_kyber_latency", 104),
STACK_USAGE("trace_raw_output_kyber_latency", 24),
STACK_USAGE("calculate_percentile", 16),
STACK_USAGE("kyber_timer_fn", 64),
STACK_USAGE("kyber_init_sched", 48),
STACK_USAGE("kyber_exit_sched", 8),
STACK_USAGE("kyber_depth_updated", 0),
STACK_USAGE("kyber_init_hctx", 48),
STACK_USAGE("__bpf_trace_kyber_adjust", 0),
STACK_USAGE("__traceiter_kyber_adjust", 32),
STACK_USAGE("perf_trace_kyber_adjust", 72),
STACK_USAGE("trace_event_raw_event_kyber_adjust", 88),
STACK_USAGE("trace_raw_output_kyber_adjust", 24),
STACK_USAGE("kyber_exit_hctx", 16),
STACK_USAGE("kyber_limit_depth", 0),
STACK_USAGE("kyber_bio_merge", 40),
STACK_USAGE("kyber_prepare_request", 0),
STACK_USAGE("kyber_insert_requests", 96),
STACK_USAGE("kyber_finish_request", 0),
STACK_USAGE("kyber_completed_request", 40),
STACK_USAGE("kyber_domain_wake", 8),
STACK_USAGE("kyber_get_domain_token", 56),
STACK_USAGE("__bpf_trace_kyber_throttled", 0),
STACK_USAGE("__traceiter_kyber_throttled", 24),
STACK_USAGE("perf_trace_kyber_throttled", 72),
STACK_USAGE("trace_event_raw_event_kyber_throttled", 80),
STACK_USAGE("trace_kyber_throttled", 0),
STACK_USAGE("trace_raw_output_kyber_throttled", 24),
STACK_USAGE("kyber_dispatch_cur_domain", 112),
STACK_USAGE("kyber_dispatch_request", 32),
STACK_USAGE("kyber_has_work", 8),
STACK_USAGE("kyber_read_lat_show", 0),
STACK_USAGE("kyber_read_lat_store", 32),
STACK_USAGE("kyber_write_lat_show", 0),
STACK_USAGE("kyber_write_lat_store", 32),
STACK_USAGE("kyber_read_rqs_next", 0),
STACK_USAGE("kyber_read_rqs_start", 16),
STACK_USAGE("kyber_read_rqs_stop", 0),
STACK_USAGE("kyber_read_tokens_show", 0),
STACK_USAGE("kyber_read_waiting_show", 0),
STACK_USAGE("kyber_write_rqs_next", 0),
STACK_USAGE("kyber_write_rqs_start", 16),
STACK_USAGE("kyber_write_rqs_stop", 0),
STACK_USAGE("kyber_write_tokens_show", 0),
STACK_USAGE("kyber_write_waiting_show", 0),
STACK_USAGE("kyber_discard_rqs_next", 0),
STACK_USAGE("kyber_discard_rqs_start", 16),
STACK_USAGE("kyber_discard_rqs_stop", 0),
STACK_USAGE("kyber_discard_tokens_show", 0),
STACK_USAGE("kyber_discard_waiting_show", 0),
STACK_USAGE("kyber_other_rqs_next", 0),
STACK_USAGE("kyber_other_rqs_start", 16),
STACK_USAGE("kyber_other_rqs_stop", 0),
STACK_USAGE("kyber_other_tokens_show", 0),
STACK_USAGE("kyber_other_waiting_show", 0),
STACK_USAGE("kyber_async_depth_show", 0),
STACK_USAGE("kyber_cur_domain_show", 0),
STACK_USAGE("kyber_batching_show", 0),
STACK_USAGE("dd_queued_show", 48),
STACK_USAGE("dd_owned_by_driver_show", 64),
STACK_USAGE("deadline_dispatch0_next", 0),
STACK_USAGE("deadline_dispatch0_start", 16),
STACK_USAGE("deadline_dispatch0_stop", 0),
STACK_USAGE("deadline_dispatch1_next", 0),
STACK_USAGE("deadline_dispatch1_start", 16),
STACK_USAGE("deadline_dispatch1_stop", 0),
STACK_USAGE("deadline_dispatch2_next", 0),
STACK_USAGE("deadline_dispatch2_start", 16),
STACK_USAGE("deadline_dispatch2_stop", 0),
STACK_USAGE("deadline_init", 0),
STACK_USAGE("deadline_exit", 0),
STACK_USAGE("dd_request_merged", 16),
STACK_USAGE("dd_merged_requests", 40),
STACK_USAGE("__dd_dispatch_request", 48),
STACK_USAGE("dd_dispatch_request", 40),
STACK_USAGE("dd_limit_depth", 0),
STACK_USAGE("dd_depth_updated", 0),
STACK_USAGE("dd_init_hctx", 0),
STACK_USAGE("dd_exit_sched", 56),
STACK_USAGE("dd_init_sched", 32),
STACK_USAGE("dd_request_merge", 40),
STACK_USAGE("dd_bio_merge", 48),
STACK_USAGE("dd_insert_requests", 120),
STACK_USAGE("dd_prepare_request", 0),
STACK_USAGE("dd_finish_request", 0),
STACK_USAGE("dd_has_work", 0),
STACK_USAGE("deadline_read_expire_show", 8),
STACK_USAGE("deadline_write_expire_show", 8),
STACK_USAGE("deadline_prio_aging_expire_show", 8),
STACK_USAGE("deadline_writes_starved_show", 0),
STACK_USAGE("deadline_front_merges_show", 0),
STACK_USAGE("deadline_async_depth_show", 0),
STACK_USAGE("deadline_fifo_batch_show", 0),
STACK_USAGE("deadline_read_expire_store", 32),
STACK_USAGE("deadline_write_expire_store", 32),
STACK_USAGE("deadline_prio_aging_expire_store", 32),
STACK_USAGE("deadline_writes_starved_store", 32),
STACK_USAGE("deadline_front_merges_store", 32),
STACK_USAGE("deadline_async_depth_store", 32),
STACK_USAGE("deadline_fifo_batch_store", 40),
STACK_USAGE("deadline_read0_fifo_next", 0),
STACK_USAGE("deadline_read0_fifo_start", 16),
STACK_USAGE("deadline_read0_fifo_stop", 0),
STACK_USAGE("deadline_read0_next_rq_show", 0),
STACK_USAGE("deadline_write0_fifo_next", 0),
STACK_USAGE("deadline_write0_fifo_start", 16),
STACK_USAGE("deadline_write0_fifo_stop", 0),
STACK_USAGE("deadline_write0_next_rq_show", 0),
STACK_USAGE("deadline_read1_fifo_next", 0),
STACK_USAGE("deadline_read1_fifo_start", 16),
STACK_USAGE("deadline_read1_fifo_stop", 0),
STACK_USAGE("deadline_read1_next_rq_show", 0),
STACK_USAGE("deadline_write1_fifo_next", 0),
STACK_USAGE("deadline_write1_fifo_start", 16),
STACK_USAGE("deadline_write1_fifo_stop", 0),
STACK_USAGE("deadline_write1_next_rq_show", 0),
STACK_USAGE("deadline_read2_fifo_next", 0),
STACK_USAGE("deadline_read2_fifo_start", 16),
STACK_USAGE("deadline_read2_fifo_stop", 0),
STACK_USAGE("deadline_read2_next_rq_show", 0),
STACK_USAGE("deadline_write2_fifo_next", 0),
STACK_USAGE("deadline_write2_fifo_start", 16),
STACK_USAGE("deadline_write2_fifo_stop", 0),
STACK_USAGE("deadline_write2_next_rq_show", 0),
STACK_USAGE("deadline_batching_show", 0),
STACK_USAGE("deadline_starved_show", 0),
STACK_USAGE("dd_async_depth_show", 0),
STACK_USAGE("amiga_partition", 152),
STACK_USAGE("part_partition_show", 0),
STACK_USAGE("part_start_show", 0),
STACK_USAGE("part_ro_show", 0),
STACK_USAGE("part_alignment_offset_show", 0),
STACK_USAGE("part_discard_alignment_show", 0),
STACK_USAGE("part_release", 8),
STACK_USAGE("part_uevent", 16),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("delete_partition", 16),
STACK_USAGE("whole_disk_show", 0),
STACK_USAGE("add_partition", 104),
STACK_USAGE("partition_overlaps", 56),
STACK_USAGE("bdev_add_partition", 48),
STACK_USAGE("bdev_del_partition", 24),
STACK_USAGE("bdev_resize_partition", 56),
STACK_USAGE("disk_unlock_native_capacity", 8),
STACK_USAGE("blk_drop_partitions", 32),
STACK_USAGE("bdev_disk_changed", 104),
STACK_USAGE("read_part_sector", 16),
STACK_USAGE("xa_insert", 32),
STACK_USAGE("read_lba", 64),
STACK_USAGE("alloc_read_gpt_entries", 32),
STACK_USAGE("is_gpt_valid", 56),
STACK_USAGE("efi_partition", 280),
STACK_USAGE("force_gpt_fn", 0),
STACK_USAGE("karma_partition", 120),
STACK_USAGE("mac_partition", 152),
STACK_USAGE("put_dev_sector", 0),
STACK_USAGE("parse_solaris_x86", 168),
STACK_USAGE("put_dev_sector", 0),
STACK_USAGE("parse_bsd", 216),
STACK_USAGE("parse_freebsd", 0),
STACK_USAGE("parse_netbsd", 0),
STACK_USAGE("parse_openbsd", 0),
STACK_USAGE("parse_unixware", 136),
STACK_USAGE("parse_minix", 184),
STACK_USAGE("msdos_partition", 232),
STACK_USAGE("osf_partition", 136),
STACK_USAGE("sgi_partition", 120),
STACK_USAGE("sun_partition", 152),
STACK_USAGE("load_certificate_list", 40),
STACK_USAGE("system_trusted_keyring_init", 0),
STACK_USAGE("load_module_cert", 0),
STACK_USAGE("load_system_certificate_list", 0),
STACK_USAGE("verify_pkcs7_message_sig", 64),
STACK_USAGE("verify_pkcs7_signature", 40),
STACK_USAGE("restrict_link_by_builtin_trusted", 0),
STACK_USAGE("crypto_alloc_acomp", 0),
STACK_USAGE("crypto_alloc_acomp_node", 0),
STACK_USAGE("acomp_request_alloc", 8),
STACK_USAGE("acomp_request_free", 16),
STACK_USAGE("crypto_register_acomp", 0),
STACK_USAGE("crypto_unregister_acomp", 0),
STACK_USAGE("crypto_register_acomps", 48),
STACK_USAGE("crypto_unregister_acomps", 16),
STACK_USAGE("crypto_acomp_report", 88),
STACK_USAGE("crypto_acomp_show", 0),
STACK_USAGE("crypto_acomp_exit_tfm", 0),
STACK_USAGE("crypto_acomp_init_tfm", 0),
STACK_USAGE("crypto_acomp_extsize", 8),
STACK_USAGE("crypto_aead_decrypt", 0),
STACK_USAGE("crypto_aead_exit_tfm", 0),
STACK_USAGE("crypto_aead_init_tfm", 0),
STACK_USAGE("crypto_aead_report", 176),
STACK_USAGE("crypto_aead_show", 16),
STACK_USAGE("crypto_aead_free_instance", 0),
STACK_USAGE("crypto_grab_aead", 0),
STACK_USAGE("crypto_alloc_aead", 0),
STACK_USAGE("crypto_register_aead", 0),
STACK_USAGE("crypto_unregister_aead", 0),
STACK_USAGE("crypto_register_aeads", 48),
STACK_USAGE("crypto_unregister_aeads", 16),
STACK_USAGE("aead_register_instance", 0),
STACK_USAGE("crypto_aead_setkey", 48),
STACK_USAGE("crypto_aead_setauthsize", 16),
STACK_USAGE("crypto_aead_encrypt", 0),
STACK_USAGE("crypto_aes_set_key", 0),
STACK_USAGE("crypto_aes_encrypt", 56),
STACK_USAGE("crypto_aes_decrypt", 48),
STACK_USAGE("aes_init", 0),
STACK_USAGE("aes_fini", 0),
STACK_USAGE("af_alg_free_resources", 80),
STACK_USAGE("af_alg_async_cb", 32),
STACK_USAGE("af_alg_poll", 16),
STACK_USAGE("af_alg_alloc_areq", 16),
STACK_USAGE("af_alg_get_rsgl", 104),
STACK_USAGE("af_alg_release", 8),
STACK_USAGE("af_alg_init", 8),
STACK_USAGE("af_alg_exit", 0),
STACK_USAGE("af_alg_release_parent", 0),
STACK_USAGE("alg_bind", 56),
STACK_USAGE("alg_setkey", 48),
STACK_USAGE("alg_setsockopt", 64),
STACK_USAGE("sk_wake_async", 24),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("af_alg_accept", 48),
STACK_USAGE("alg_accept", 0),
STACK_USAGE("alg_sock_destruct", 8),
STACK_USAGE("alg_create", 16),
STACK_USAGE("alg_get_type", 40),
STACK_USAGE("af_alg_make_sg", 56),
STACK_USAGE("af_alg_free_sg", 16),
STACK_USAGE("af_alg_count_tsgl", 0),
STACK_USAGE("af_alg_register_type", 32),
STACK_USAGE("af_alg_pull_tsgl", 88),
STACK_USAGE("af_alg_wait_for_wmem", 96),
STACK_USAGE("af_alg_wmem_wakeup", 16),
STACK_USAGE("af_alg_wait_for_data", 96),
STACK_USAGE("af_alg_data_wakeup", 16),
STACK_USAGE("af_alg_sendmsg", 96),
STACK_USAGE("af_alg_unregister_type", 24),
STACK_USAGE("af_alg_sendpage", 88),
STACK_USAGE("crypto_hash_walk_first", 40),
STACK_USAGE("ahash_nosetkey", 0),
STACK_USAGE("crypto_ahash_setkey", 48),
STACK_USAGE("ahash_op_unaligned_done", 80),
STACK_USAGE("crypto_ahash_op", 24),
STACK_USAGE("crypto_ahash_final", 0),
STACK_USAGE("crypto_ahash_finup", 0),
STACK_USAGE("crypto_ahash_digest", 0),
STACK_USAGE("ahash_def_finup_done2", 24),
STACK_USAGE("ahash_def_finup_done1", 80),
STACK_USAGE("ahash_def_finup", 24),
STACK_USAGE("crypto_ahash_exit_tfm", 0),
STACK_USAGE("crypto_ahash_init_tfm", 0),
STACK_USAGE("crypto_ahash_extsize", 0),
STACK_USAGE("crypto_ahash_free_instance", 0),
STACK_USAGE("crypto_ahash_report", 104),
STACK_USAGE("crypto_ahash_show", 16),
STACK_USAGE("crypto_grab_ahash", 0),
STACK_USAGE("crypto_alloc_ahash", 0),
STACK_USAGE("crypto_has_ahash", 0),
STACK_USAGE("crypto_register_ahash", 0),
STACK_USAGE("crypto_unregister_ahash", 0),
STACK_USAGE("crypto_register_ahashes", 48),
STACK_USAGE("crypto_unregister_ahashes", 16),
STACK_USAGE("ahash_register_instance", 0),
STACK_USAGE("crypto_hash_alg_has_setkey", 0),
STACK_USAGE("crypto_hash_walk_done", 48),
STACK_USAGE("crypto_alloc_akcipher", 0),
STACK_USAGE("akcipher_default_op", 0),
STACK_USAGE("crypto_register_akcipher", 0),
STACK_USAGE("crypto_unregister_akcipher", 0),
STACK_USAGE("akcipher_register_instance", 0),
STACK_USAGE("crypto_akcipher_report", 88),
STACK_USAGE("crypto_akcipher_show", 0),
STACK_USAGE("crypto_akcipher_exit_tfm", 0),
STACK_USAGE("crypto_akcipher_init_tfm", 0),
STACK_USAGE("crypto_akcipher_free_instance", 0),
STACK_USAGE("crypto_grab_akcipher", 0),
STACK_USAGE("__crypto_xor", 0),
STACK_USAGE("crypto_alg_extsize", 0),
STACK_USAGE("crypto_type_has_alg", 0),
STACK_USAGE("crypto_start_tests", 16),
STACK_USAGE("crypto_algapi_init", 0),
STACK_USAGE("crypto_algapi_exit", 0),
STACK_USAGE("crypto_remove_spawns", 96),
STACK_USAGE("__crypto_register_alg", 56),
STACK_USAGE("crypto_alg_tested", 88),
STACK_USAGE("crypto_remove_final", 16),
STACK_USAGE("crypto_register_alg", 24),
STACK_USAGE("crypto_unregister_alg", 40),
STACK_USAGE("crypto_register_algs", 40),
STACK_USAGE("crypto_unregister_algs", 16),
STACK_USAGE("crypto_register_template", 8),
STACK_USAGE("crypto_register_templates", 56),
STACK_USAGE("crypto_unregister_template", 56),
STACK_USAGE("crypto_unregister_templates", 16),
STACK_USAGE("crypto_lookup_template", 24),
STACK_USAGE("crypto_register_instance", 40),
STACK_USAGE("crypto_unregister_instance", 48),
STACK_USAGE("crypto_grab_spawn", 32),
STACK_USAGE("crypto_drop_spawn", 8),
STACK_USAGE("crypto_spawn_alg", 24),
STACK_USAGE("crypto_spawn_tfm", 24),
STACK_USAGE("crypto_destroy_instance", 8),
STACK_USAGE("crypto_spawn_tfm2", 16),
STACK_USAGE("crypto_register_notifier", 0),
STACK_USAGE("crypto_unregister_notifier", 0),
STACK_USAGE("crypto_get_attr_type", 0),
STACK_USAGE("crypto_check_attr_type", 0),
STACK_USAGE("crypto_attr_alg_name", 0),
STACK_USAGE("crypto_inst_setname", 24),
STACK_USAGE("crypto_init_queue", 0),
STACK_USAGE("crypto_enqueue_request", 0),
STACK_USAGE("crypto_enqueue_request_head", 0),
STACK_USAGE("crypto_dequeue_request", 0),
STACK_USAGE("crypto_inc", 0),
STACK_USAGE("crypto_alg_put", 0),
STACK_USAGE("cryptomgr_test", 8),
STACK_USAGE("cryptomgr_notify", 48),
STACK_USAGE("cryptomgr_init", 0),
STACK_USAGE("cryptomgr_exit", 0),
STACK_USAGE("cryptomgr_probe", 16),
STACK_USAGE("hash_sendpage", 56),
STACK_USAGE("hash_recvmsg", 48),
STACK_USAGE("hash_accept", 584),
STACK_USAGE("hash_sendmsg_nokey", 48),
STACK_USAGE("hash_sendpage_nokey", 72),
STACK_USAGE("hash_recvmsg_nokey", 64),
STACK_USAGE("hash_accept_nokey", 56),
STACK_USAGE("hash_bind", 0),
STACK_USAGE("hash_release", 0),
STACK_USAGE("hash_setkey", 0),
STACK_USAGE("hash_sock_destruct", 16),
STACK_USAGE("hash_accept_parent_nokey", 32),
STACK_USAGE("hash_accept_parent", 32),
STACK_USAGE("algif_hash_init", 0),
STACK_USAGE("algif_hash_exit", 0),
STACK_USAGE("hash_sendmsg", 80),
STACK_USAGE("crypto_larval_alloc", 32),
STACK_USAGE("crypto_larval_kill", 8),
STACK_USAGE("crypto_wait_for_test", 16),
STACK_USAGE("crypto_larval_wait", 24),
STACK_USAGE("crypto_alg_lookup", 48),
STACK_USAGE("crypto_probing_notify", 16),
STACK_USAGE("crypto_alg_mod_lookup", 48),
STACK_USAGE("crypto_shoot_alg", 8),
STACK_USAGE("__crypto_alloc_tfm", 32),
STACK_USAGE("crypto_mod_get", 8),
STACK_USAGE("crypto_alloc_base", 48),
STACK_USAGE("crypto_mod_put", 8),
STACK_USAGE("crypto_create_tfm_node", 48),
STACK_USAGE("crypto_find_alg", 0),
STACK_USAGE("__crypto_alg_lookup", 72),
STACK_USAGE("crypto_alloc_tfm_node", 56),
STACK_USAGE("crypto_destroy_tfm", 24),
STACK_USAGE("crypto_has_alg", 8),
STACK_USAGE("crypto_req_done", 0),
STACK_USAGE("crypto_larval_destroy", 16),
STACK_USAGE("asymmetric_key_generate_id", 40),
STACK_USAGE("asymmetric_key_id_same", 0),
STACK_USAGE("asymmetric_key_id_partial", 0),
STACK_USAGE("__asymmetric_key_hex_to_key_id", 0),
STACK_USAGE("asymmetric_key_hex_to_key_id", 32),
STACK_USAGE("asymmetric_key_cmp", 16),
STACK_USAGE("asymmetric_key_cmp_partial", 16),
STACK_USAGE("asymmetric_key_cmp_name", 0),
STACK_USAGE("asymmetric_key_match_preparse", 48),
STACK_USAGE("asymmetric_key_match_free", 0),
STACK_USAGE("asymmetric_key_describe", 32),
STACK_USAGE("asymmetric_key_preparse", 32),
STACK_USAGE("asymmetric_key_free_preparse", 24),
STACK_USAGE("asymmetric_key_destroy", 16),
STACK_USAGE("asymmetric_lookup_restriction", 64),
STACK_USAGE("find_asymmetric_key", 64),
STACK_USAGE("asymmetric_key_eds_op", 0),
STACK_USAGE("asymmetric_key_verify_signature", 96),
STACK_USAGE("register_asymmetric_key_parser", 32),
STACK_USAGE("unregister_asymmetric_key_parser", 8),
STACK_USAGE("asymmetric_key_init", 0),
STACK_USAGE("asymmetric_key_cleanup", 0),
STACK_USAGE("pkcs7_parse_message", 48),
STACK_USAGE("pkcs7_get_content_data", 0),
STACK_USAGE("pkcs7_note_OID", 104),
STACK_USAGE("pkcs7_sig_note_digest_algo", 0),
STACK_USAGE("pkcs7_sig_note_pkey_algo", 0),
STACK_USAGE("pkcs7_check_content_type", 0),
STACK_USAGE("pkcs7_note_signeddata_version", 0),
STACK_USAGE("pkcs7_note_signerinfo_version", 0),
STACK_USAGE("pkcs7_extract_cert", 8),
STACK_USAGE("pkcs7_note_certificate_list", 0),
STACK_USAGE("pkcs7_note_content", 0),
STACK_USAGE("pkcs7_note_data", 0),
STACK_USAGE("pkcs7_sig_note_authenticated_attr", 16),
STACK_USAGE("pkcs7_sig_note_set_of_authattrs", 0),
STACK_USAGE("pkcs7_free_message", 16),
STACK_USAGE("pkcs7_sig_note_serial", 0),
STACK_USAGE("pkcs7_sig_note_issuer", 0),
STACK_USAGE("pkcs7_sig_note_skid", 0),
STACK_USAGE("pkcs7_sig_note_signature", 16),
STACK_USAGE("pkcs7_note_signed_info", 16),
STACK_USAGE("pkcs7_validate_trust", 48),
STACK_USAGE("pkcs7_get_digest", 32),
STACK_USAGE("pkcs7_digest", 72),
STACK_USAGE("pkcs7_verify", 56),
STACK_USAGE("pkcs7_supply_detached_data", 0),
STACK_USAGE("software_key_query", 184),
STACK_USAGE("software_key_eds_op", 376),
STACK_USAGE("public_key_describe", 0),
STACK_USAGE("public_key_verify_signature", 360),
STACK_USAGE("public_key_free", 8),
STACK_USAGE("public_key_verify_signature_2", 0),
STACK_USAGE("public_key_destroy", 16),
STACK_USAGE("software_key_determine_akcipher", 40),
STACK_USAGE("match_either_id", 16),
STACK_USAGE("key_or_keyring_common", 40),
STACK_USAGE("restrict_link_by_key_or_keyring", 0),
STACK_USAGE("ca_keys_setup", 8),
STACK_USAGE("restrict_link_by_key_or_keyring_chain", 0),
STACK_USAGE("__key_get", 8),
STACK_USAGE("restrict_link_by_signature", 24),
STACK_USAGE("decrypt_blob", 0),
STACK_USAGE("create_signature", 0),
STACK_USAGE("verify_signature", 0),
STACK_USAGE("public_key_signature_free", 8),
STACK_USAGE("query_asymmetric_key", 0),
STACK_USAGE("encrypt_blob", 0),
STACK_USAGE("x509_note_OID", 104),
STACK_USAGE("x509_note_tbs_certificate", 0),
STACK_USAGE("x509_note_sig_algo", 0),
STACK_USAGE("x509_note_signature", 40),
STACK_USAGE("x509_note_serial", 0),
STACK_USAGE("x509_extract_name_segment", 0),
STACK_USAGE("x509_fabricate_name", 56),
STACK_USAGE("x509_note_issuer", 8),
STACK_USAGE("x509_free_certificate", 8),
STACK_USAGE("x509_note_subject", 0),
STACK_USAGE("x509_note_params", 0),
STACK_USAGE("x509_extract_key_data", 40),
STACK_USAGE("x509_process_extension", 16),
STACK_USAGE("x509_decode_time", 40),
STACK_USAGE("x509_cert_parse", 48),
STACK_USAGE("x509_note_not_before", 0),
STACK_USAGE("x509_note_not_after", 0),
STACK_USAGE("x509_akid_note_kid", 16),
STACK_USAGE("x509_akid_note_name", 0),
STACK_USAGE("x509_akid_note_serial", 16),
STACK_USAGE("x509_key_preparse", 56),
STACK_USAGE("x509_get_sig_params", 40),
STACK_USAGE("x509_key_init", 0),
STACK_USAGE("x509_key_exit", 0),
STACK_USAGE("x509_check_for_self_signed", 24),
STACK_USAGE("authenc_geniv_ahash_done", 16),
STACK_USAGE("crypto_authenc_encrypt_done", 24),
STACK_USAGE("crypto_authenc_encrypt", 512),
STACK_USAGE("crypto_authenc_decrypt_tail", 48),
STACK_USAGE("authenc_verify_ahash_done", 8),
STACK_USAGE("crypto_authenc_decrypt", 8),
STACK_USAGE("crypto_authenc_init_tfm", 40),
STACK_USAGE("crypto_authenc_exit_tfm", 8),
STACK_USAGE("crypto_authenc_free", 16),
STACK_USAGE("crypto_authenc_create", 72),
STACK_USAGE("crypto_authenc_module_init", 0),
STACK_USAGE("crypto_authenc_module_exit", 0),
STACK_USAGE("crypto_authenc_extractkeys", 0),
STACK_USAGE("crypto_authenc_setkey", 64),
STACK_USAGE("authenc_esn_geniv_ahash_done", 72),
STACK_USAGE("crypto_authenc_esn_genicv", 96),
STACK_USAGE("crypto_authenc_esn_encrypt_done", 8),
STACK_USAGE("crypto_authenc_esn_encrypt", 528),
STACK_USAGE("crypto_authenc_esn_decrypt_tail", 96),
STACK_USAGE("authenc_esn_verify_ahash_done", 8),
STACK_USAGE("crypto_authenc_esn_decrypt", 536),
STACK_USAGE("crypto_authenc_esn_init_tfm", 40),
STACK_USAGE("crypto_authenc_esn_exit_tfm", 8),
STACK_USAGE("crypto_authenc_esn_free", 16),
STACK_USAGE("crypto_authenc_esn_create", 72),
STACK_USAGE("crypto_authenc_esn_module_init", 0),
STACK_USAGE("crypto_authenc_esn_module_exit", 0),
STACK_USAGE("crypto_authenc_esn_setauthsize", 0),
STACK_USAGE("crypto_authenc_esn_setkey", 80),
STACK_USAGE("blake2b_compress_generic", 408),
STACK_USAGE("crypto_blake2b_update_generic", 48),
STACK_USAGE("crypto_blake2b_final_generic", 32),
STACK_USAGE("blake2b_mod_init", 0),
STACK_USAGE("blake2b_mod_fini", 0),
STACK_USAGE("crypto_blake2b_setkey", 16),
STACK_USAGE("crypto_blake2b_init", 24),
STACK_USAGE("crypto_cbc_decrypt", 248),
STACK_USAGE("crypto_cbc_create", 24),
STACK_USAGE("crypto_cbc_module_init", 0),
STACK_USAGE("crypto_cbc_module_exit", 0),
STACK_USAGE("crypto_cbc_encrypt", 224),
STACK_USAGE("crypto_ccm_setauthsize", 0),
STACK_USAGE("crypto_ccm_auth", 184),
STACK_USAGE("crypto_ccm_encrypt_done", 16),
STACK_USAGE("crypto_ccm_init_crypt", 56),
STACK_USAGE("crypto_ccm_encrypt", 48),
STACK_USAGE("crypto_ccm_decrypt_done", 40),
STACK_USAGE("crypto_ccm_decrypt", 80),
STACK_USAGE("crypto_ccm_init_tfm", 32),
STACK_USAGE("crypto_ccm_exit_tfm", 8),
STACK_USAGE("crypto_ccm_free", 16),
STACK_USAGE("crypto_ccm_create_common", 88),
STACK_USAGE("crypto_ccm_create", 312),
STACK_USAGE("crypto_ccm_base_create", 24),
STACK_USAGE("crypto_rfc4309_setkey", 0),
STACK_USAGE("crypto_rfc4309_setauthsize", 0),
STACK_USAGE("crypto_rfc4309_crypt", 64),
STACK_USAGE("crypto_rfc4309_encrypt", 0),
STACK_USAGE("crypto_rfc4309_decrypt", 0),
STACK_USAGE("crypto_rfc4309_init_tfm", 8),
STACK_USAGE("crypto_rfc4309_exit_tfm", 0),
STACK_USAGE("crypto_rfc4309_free", 8),
STACK_USAGE("crypto_rfc4309_create", 56),
STACK_USAGE("crypto_cbcmac_digest_setkey", 0),
STACK_USAGE("crypto_cbcmac_digest_init", 0),
STACK_USAGE("crypto_cbcmac_digest_update", 56),
STACK_USAGE("crypto_cbcmac_digest_final", 24),
STACK_USAGE("cbcmac_init_tfm", 8),
STACK_USAGE("cbcmac_exit_tfm", 0),
STACK_USAGE("cbcmac_create", 56),
STACK_USAGE("crypto_ccm_setkey", 48),
STACK_USAGE("crypto_ccm_module_init", 0),
STACK_USAGE("crypto_ccm_module_exit", 0),
STACK_USAGE("crypto_cipher_setkey", 56),
STACK_USAGE("crypto_cipher_encrypt_one", 88),
STACK_USAGE("crypto_cipher_decrypt_one", 88),
STACK_USAGE("crypto_cmac_digest_init", 0),
STACK_USAGE("crypto_cmac_digest_update", 64),
STACK_USAGE("crypto_cmac_digest_final", 64),
STACK_USAGE("cmac_init_tfm", 8),
STACK_USAGE("cmac_exit_tfm", 0),
STACK_USAGE("cmac_create", 64),
STACK_USAGE("crypto_cmac_module_init", 0),
STACK_USAGE("crypto_cmac_module_exit", 0),
STACK_USAGE("crypto_cmac_digest_setkey", 32),
STACK_USAGE("crypto_comp_compress", 0),
STACK_USAGE("crypto_comp_decompress", 0),
STACK_USAGE("chksum_finup", 8),
STACK_USAGE("chksum_digest", 8),
STACK_USAGE("crc32c_cra_init", 0),
STACK_USAGE("crc32c_mod_init", 0),
STACK_USAGE("crc32c_mod_fini", 0),
STACK_USAGE("chksum_init", 0),
STACK_USAGE("chksum_setkey", 0),
STACK_USAGE("chksum_update", 8),
STACK_USAGE("chksum_final", 0),
STACK_USAGE("crc_t10dif_generic", 0),
STACK_USAGE("crct10dif_mod_init", 0),
STACK_USAGE("crct10dif_mod_fini", 0),
STACK_USAGE("chksum_init", 0),
STACK_USAGE("chksum_update", 8),
STACK_USAGE("chksum_final", 0),
STACK_USAGE("chksum_finup", 8),
STACK_USAGE("chksum_digest", 8),
STACK_USAGE("crypto_pump_work", 72),
STACK_USAGE("crypto_finalize_request", 32),
STACK_USAGE("crypto_transfer_aead_request_to_engine", 32),
STACK_USAGE("crypto_transfer_akcipher_request_to_engine", 32),
STACK_USAGE("crypto_transfer_hash_request_to_engine", 32),
STACK_USAGE("crypto_transfer_kpp_request_to_engine", 32),
STACK_USAGE("crypto_transfer_skcipher_request_to_engine", 32),
STACK_USAGE("crypto_finalize_aead_request", 0),
STACK_USAGE("crypto_finalize_akcipher_request", 0),
STACK_USAGE("crypto_finalize_hash_request", 0),
STACK_USAGE("crypto_finalize_kpp_request", 0),
STACK_USAGE("crypto_finalize_skcipher_request", 0),
STACK_USAGE("crypto_engine_start", 16),
STACK_USAGE("crypto_engine_stop", 24),
STACK_USAGE("crypto_engine_alloc_init_and_set", 48),
STACK_USAGE("crypto_engine_alloc_init", 0),
STACK_USAGE("crypto_engine_exit", 16),
STACK_USAGE("crypto_get_default_null_skcipher", 8),
STACK_USAGE("crypto_put_default_null_skcipher", 0),
STACK_USAGE("crypto_null_mod_init", 16),
STACK_USAGE("crypto_null_mod_fini", 0),
STACK_USAGE("null_compress", 16),
STACK_USAGE("null_init", 0),
STACK_USAGE("null_update", 0),
STACK_USAGE("null_final", 0),
STACK_USAGE("null_digest", 0),
STACK_USAGE("null_hash_setkey", 0),
STACK_USAGE("null_skcipher_setkey", 0),
STACK_USAGE("null_setkey", 0),
STACK_USAGE("null_crypt", 0),
STACK_USAGE("null_skcipher_crypt", 168),
STACK_USAGE("crypto_ctr_create", 24),
STACK_USAGE("crypto_rfc3686_setkey", 0),
STACK_USAGE("crypto_rfc3686_crypt", 0),
STACK_USAGE("crypto_rfc3686_init_tfm", 8),
STACK_USAGE("crypto_rfc3686_exit_tfm", 0),
STACK_USAGE("crypto_rfc3686_free", 8),
STACK_USAGE("crypto_rfc3686_create", 56),
STACK_USAGE("crypto_ctr_module_init", 0),
STACK_USAGE("crypto_ctr_module_exit", 0),
STACK_USAGE("crypto_ctr_crypt", 280),
STACK_USAGE("drbg_seed", 216),
STACK_USAGE("drbg_kcapi_set_entropy", 32),
STACK_USAGE("drbg_init_hash_kernel", 32),
STACK_USAGE("drbg_fini_hash_kernel", 16),
STACK_USAGE("drbg_kcapi_init", 0),
STACK_USAGE("drbg_kcapi_cleanup", 16),
STACK_USAGE("drbg_kcapi_random", 264),
STACK_USAGE("drbg_kcapi_seed", 96),
STACK_USAGE("drbg_fill_array", 24),
STACK_USAGE("drbg_init", 16),
STACK_USAGE("drbg_exit", 0),
STACK_USAGE("drbg_hmac_update", 208),
STACK_USAGE("drbg_hmac_generate", 128),
STACK_USAGE("echainiv_aead_create", 24),
STACK_USAGE("echainiv_module_init", 0),
STACK_USAGE("echainiv_module_exit", 0),
STACK_USAGE("echainiv_encrypt", 520),
STACK_USAGE("echainiv_decrypt", 16),
STACK_USAGE("crypto_rfc4543_exit_tfm", 0),
STACK_USAGE("crypto_rfc4543_free", 8),
STACK_USAGE("crypto_rfc4543_create", 56),
STACK_USAGE("crypto_gcm_module_init", 8),
STACK_USAGE("crypto_gcm_module_exit", 0),
STACK_USAGE("crypto_gcm_setauthsize", 0),
STACK_USAGE("crypto_gcm_init_common", 48),
STACK_USAGE("gcm_hash_len_done", 8),
STACK_USAGE("gcm_hash_crypt_remain_done", 40),
STACK_USAGE("gcm_hash_crypt_continue", 56),
STACK_USAGE("gcm_hash_crypt_done", 8),
STACK_USAGE("gcm_hash_assoc_remain_continue", 48),
STACK_USAGE("gcm_hash_assoc_remain_done", 8),
STACK_USAGE("gcm_hash_assoc_done", 8),
STACK_USAGE("gcm_hash_init_continue", 16),
STACK_USAGE("gcm_hash_init_done", 8),
STACK_USAGE("gcm_enc_copy_hash", 0),
STACK_USAGE("gcm_encrypt_done", 16),
STACK_USAGE("crypto_gcm_encrypt", 32),
STACK_USAGE("gcm_decrypt_done", 40),
STACK_USAGE("gcm_dec_hash_continue", 40),
STACK_USAGE("crypto_gcm_decrypt", 32),
STACK_USAGE("crypto_gcm_init_tfm", 32),
STACK_USAGE("crypto_gcm_exit_tfm", 8),
STACK_USAGE("crypto_gcm_free", 8),
STACK_USAGE("crypto_gcm_create_common", 88),
STACK_USAGE("crypto_gcm_create", 168),
STACK_USAGE("crypto_gcm_base_create", 24),
STACK_USAGE("crypto_rfc4106_setkey", 0),
STACK_USAGE("crypto_rfc4106_setauthsize", 0),
STACK_USAGE("crypto_rfc4106_crypt", 64),
STACK_USAGE("crypto_rfc4106_encrypt", 0),
STACK_USAGE("crypto_rfc4106_decrypt", 0),
STACK_USAGE("crypto_rfc4106_init_tfm", 8),
STACK_USAGE("crypto_rfc4106_exit_tfm", 0),
STACK_USAGE("crypto_rfc4106_free", 8),
STACK_USAGE("crypto_rfc4106_create", 56),
STACK_USAGE("crypto_rfc4543_setkey", 0),
STACK_USAGE("crypto_rfc4543_setauthsize", 0),
STACK_USAGE("crypto_rfc4543_crypt", 520),
STACK_USAGE("crypto_gcm_setkey", 48),
STACK_USAGE("crypto_rfc4543_encrypt", 0),
STACK_USAGE("crypto_rfc4543_decrypt", 0),
STACK_USAGE("crypto_rfc4543_init_tfm", 24),
STACK_USAGE("aead_init_geniv", 24),
STACK_USAGE("aead_exit_geniv", 0),
STACK_USAGE("aead_geniv_setkey", 0),
STACK_USAGE("aead_geniv_setauthsize", 0),
STACK_USAGE("aead_geniv_free", 8),
STACK_USAGE("aead_geniv_alloc", 64),
STACK_USAGE("gf128mul_x8_ble", 0),
STACK_USAGE("gf128mul_lle", 112),
STACK_USAGE("gf128mul_bbe", 112),
STACK_USAGE("gf128mul_init_64k_bbe", 32),
STACK_USAGE("gf128mul_free_64k", 8),
STACK_USAGE("gf128mul_64k_bbe", 0),
STACK_USAGE("gf128mul_init_4k_lle", 8),
STACK_USAGE("gf128mul_init_4k_bbe", 8),
STACK_USAGE("gf128mul_4k_lle", 0),
STACK_USAGE("gf128mul_4k_bbe", 0),
STACK_USAGE("ghash_final", 24),
STACK_USAGE("ghash_exit_tfm", 0),
STACK_USAGE("ghash_mod_init", 0),
STACK_USAGE("ghash_mod_exit", 0),
STACK_USAGE("ghash_init", 0),
STACK_USAGE("ghash_setkey", 40),
STACK_USAGE("ghash_update", 40),
STACK_USAGE("hmac_init", 0),
STACK_USAGE("hmac_update", 0),
STACK_USAGE("hmac_final", 48),
STACK_USAGE("hmac_finup", 48),
STACK_USAGE("hmac_init_tfm", 24),
STACK_USAGE("hmac_exit_tfm", 0),
STACK_USAGE("hmac_create", 64),
STACK_USAGE("hmac_module_init", 0),
STACK_USAGE("hmac_module_exit", 0),
STACK_USAGE("hmac_setkey", 440),
STACK_USAGE("hmac_export", 0),
STACK_USAGE("hmac_import", 0),
STACK_USAGE("jent_kcapi_init", 24),
STACK_USAGE("jent_kcapi_cleanup", 16),
STACK_USAGE("jent_kcapi_random", 40),
STACK_USAGE("jent_kcapi_reset", 0),
STACK_USAGE("jent_mod_init", 0),
STACK_USAGE("jent_mod_exit", 0),
STACK_USAGE("jent_zalloc", 0),
STACK_USAGE("jent_zfree", 0),
STACK_USAGE("jent_panic", 0),
STACK_USAGE("jent_memcpy", 0),
STACK_USAGE("jent_get_nstime", 8),
STACK_USAGE("jent_apt_reset", 24),
STACK_USAGE("jent_apt_insert", 24),
STACK_USAGE("jent_rct_insert", 24),
STACK_USAGE("jent_rct_failure", 24),
STACK_USAGE("jent_delta", 32),
STACK_USAGE("jent_stuck", 48),
STACK_USAGE("jent_health_failure", 16),
STACK_USAGE("jent_loop_shuffle", 64),
STACK_USAGE("jent_lfsr_time", 72),
STACK_USAGE("jent_memaccess", 56),
STACK_USAGE("jent_measure_jitter", 56),
STACK_USAGE("jent_gen_entropy", 24),
STACK_USAGE("jent_read_entropy", 56),
STACK_USAGE("jent_entropy_collector_alloc", 32),
STACK_USAGE("jent_entropy_collector_free", 16),
STACK_USAGE("jent_entropy_init", 192),
STACK_USAGE("crypto_register_kpp", 0),
STACK_USAGE("crypto_unregister_kpp", 0),
STACK_USAGE("kpp_register_instance", 0),
STACK_USAGE("crypto_kpp_report", 88),
STACK_USAGE("crypto_kpp_show", 0),
STACK_USAGE("crypto_kpp_exit_tfm", 0),
STACK_USAGE("crypto_kpp_init_tfm", 0),
STACK_USAGE("crypto_kpp_free_instance", 0),
STACK_USAGE("crypto_alloc_kpp", 0),
STACK_USAGE("crypto_grab_kpp", 0),
STACK_USAGE("md5_init", 0),
STACK_USAGE("md5_update", 48),
STACK_USAGE("md5_final", 32),
STACK_USAGE("md5_export", 0),
STACK_USAGE("md5_import", 0),
STACK_USAGE("md5_mod_init", 0),
STACK_USAGE("md5_mod_fini", 0),
STACK_USAGE("md5_transform", 160),
STACK_USAGE("__crypto_memneq", 0),
STACK_USAGE("c_start", 8),
STACK_USAGE("c_next", 0),
STACK_USAGE("c_stop", 0),
STACK_USAGE("c_show", 16),
STACK_USAGE("crypto_init_proc", 0),
STACK_USAGE("crypto_exit_proc", 0),
STACK_USAGE("crypto_alloc_rng", 0),
STACK_USAGE("crypto_get_default_rng", 32),
STACK_USAGE("crypto_put_default_rng", 0),
STACK_USAGE("crypto_del_default_rng", 8),
STACK_USAGE("crypto_register_rng", 0),
STACK_USAGE("crypto_unregister_rng", 0),
STACK_USAGE("crypto_register_rngs", 48),
STACK_USAGE("crypto_unregister_rngs", 16),
STACK_USAGE("crypto_rng_reset", 40),
STACK_USAGE("crypto_rng_init_tfm", 0),
STACK_USAGE("crypto_rng_report", 104),
STACK_USAGE("crypto_rng_show", 16),
STACK_USAGE("pkcs1pad_set_pub_key", 8),
STACK_USAGE("pkcs1pad_set_priv_key", 8),
STACK_USAGE("pkcs1pad_get_max_size", 0),
STACK_USAGE("pkcs1pad_encrypt_sign_complete", 56),
STACK_USAGE("pkcs1pad_encrypt_sign_complete_cb", 64),
STACK_USAGE("pkcs1pad_encrypt", 64),
STACK_USAGE("pkcs1pad_decrypt_complete", 24),
STACK_USAGE("pkcs1pad_decrypt_complete_cb", 64),
STACK_USAGE("pkcs1pad_decrypt", 40),
STACK_USAGE("pkcs1pad_sign", 64),
STACK_USAGE("pkcs1pad_verify_complete", 72),
STACK_USAGE("pkcs1pad_verify_complete_cb", 64),
STACK_USAGE("pkcs1pad_verify", 48),
STACK_USAGE("pkcs1pad_init_tfm", 8),
STACK_USAGE("pkcs1pad_exit_tfm", 0),
STACK_USAGE("pkcs1pad_free", 8),
STACK_USAGE("pkcs1pad_create", 88),
STACK_USAGE("rsa_lookup_asn1", 8),
STACK_USAGE("rsa_set_pub_key", 160),
STACK_USAGE("rsa_set_priv_key", 160),
STACK_USAGE("rsa_max_size", 0),
STACK_USAGE("rsa_exit_tfm", 8),
STACK_USAGE("rsa_init", 8),
STACK_USAGE("rsa_exit", 0),
STACK_USAGE("rsa_enc", 56),
STACK_USAGE("rsa_dec", 56),
STACK_USAGE("rsa_get_dp", 0),
STACK_USAGE("rsa_get_dq", 0),
STACK_USAGE("rsa_get_qinv", 0),
STACK_USAGE("rsa_parse_pub_key", 0),
STACK_USAGE("rsa_get_n", 0),
STACK_USAGE("rsa_parse_priv_key", 0),
STACK_USAGE("rsa_get_e", 0),
STACK_USAGE("rsa_get_d", 0),
STACK_USAGE("rsa_get_p", 0),
STACK_USAGE("rsa_get_q", 0),
STACK_USAGE("scatterwalk_copychunks", 56),
STACK_USAGE("scatterwalk_map_and_copy", 152),
STACK_USAGE("scatterwalk_ffwd", 32),
STACK_USAGE("crypto_scomp_init_tfm", 32),
STACK_USAGE("scomp_acomp_comp_decomp", 48),
STACK_USAGE("scomp_acomp_compress", 0),
STACK_USAGE("scomp_acomp_decompress", 0),
STACK_USAGE("crypto_exit_scomp_ops_async", 16),
STACK_USAGE("crypto_init_scomp_ops_async", 24),
STACK_USAGE("crypto_acomp_scomp_alloc_ctx", 8),
STACK_USAGE("crypto_acomp_scomp_free_ctx", 0),
STACK_USAGE("crypto_register_scomp", 0),
STACK_USAGE("crypto_unregister_scomp", 0),
STACK_USAGE("crypto_register_scomps", 48),
STACK_USAGE("crypto_unregister_scomps", 16),
STACK_USAGE("crypto_scomp_report", 88),
STACK_USAGE("crypto_scomp_show", 0),
STACK_USAGE("seqiv_aead_decrypt", 8),
STACK_USAGE("seqiv_aead_create", 24),
STACK_USAGE("seqiv_module_init", 0),
STACK_USAGE("seqiv_module_exit", 0),
STACK_USAGE("seqiv_aead_encrypt_complete2", 8),
STACK_USAGE("seqiv_aead_encrypt_complete", 16),
STACK_USAGE("seqiv_aead_encrypt", 520),
STACK_USAGE("sha1_base_init", 0),
STACK_USAGE("crypto_sha1_update", 152),
STACK_USAGE("sha1_final", 120),
STACK_USAGE("crypto_sha1_finup", 152),
STACK_USAGE("sha1_generic_mod_init", 0),
STACK_USAGE("sha1_generic_mod_fini", 0),
STACK_USAGE("sha224_base_init", 0),
STACK_USAGE("sha256_base_init", 0),
STACK_USAGE("crypto_sha256_update", 0),
STACK_USAGE("crypto_sha256_final", 0),
STACK_USAGE("crypto_sha256_finup", 24),
STACK_USAGE("sha256_generic_mod_init", 0),
STACK_USAGE("sha256_generic_mod_fini", 0),
STACK_USAGE("sha512_generic_block_fn", 296),
STACK_USAGE("crypto_sha512_update", 56),
STACK_USAGE("sha512_final", 40),
STACK_USAGE("crypto_sha512_finup", 64),
STACK_USAGE("sha512_generic_mod_init", 0),
STACK_USAGE("sha512_generic_mod_fini", 0),
STACK_USAGE("sha384_base_init", 0),
STACK_USAGE("sha512_base_init", 0),
STACK_USAGE("crypto_shash_update", 200),
STACK_USAGE("crypto_shash_final", 184),
STACK_USAGE("shash_finup_unaligned", 216),
STACK_USAGE("crypto_shash_finup", 0),
STACK_USAGE("shash_digest_unaligned", 32),
STACK_USAGE("crypto_shash_digest", 40),
STACK_USAGE("crypto_shash_tfm_digest", 424),
STACK_USAGE("shash_default_export", 0),
STACK_USAGE("shash_no_setkey", 0),
STACK_USAGE("shash_default_import", 0),
STACK_USAGE("shash_async_setkey", 56),
STACK_USAGE("shash_async_init", 0),
STACK_USAGE("shash_ahash_update", 264),
STACK_USAGE("shash_async_update", 0),
STACK_USAGE("shash_async_final", 184),
STACK_USAGE("shash_ahash_finup", 264),
STACK_USAGE("shash_async_finup", 0),
STACK_USAGE("shash_ahash_digest", 56),
STACK_USAGE("shash_async_digest", 0),
STACK_USAGE("shash_async_export", 0),
STACK_USAGE("shash_async_import", 0),
STACK_USAGE("crypto_shash_alg_has_setkey", 0),
STACK_USAGE("crypto_exit_shash_ops_async", 0),
STACK_USAGE("crypto_init_shash_ops_async", 24),
STACK_USAGE("crypto_shash_exit_tfm", 0),
STACK_USAGE("crypto_shash_init_tfm", 24),
STACK_USAGE("crypto_shash_free_instance", 0),
STACK_USAGE("crypto_shash_report", 104),
STACK_USAGE("crypto_shash_show", 16),
STACK_USAGE("crypto_grab_shash", 0),
STACK_USAGE("crypto_alloc_shash", 0),
STACK_USAGE("crypto_register_shash", 0),
STACK_USAGE("crypto_unregister_shash", 0),
STACK_USAGE("crypto_register_shashes", 48),
STACK_USAGE("crypto_unregister_shashes", 16),
STACK_USAGE("shash_register_instance", 0),
STACK_USAGE("shash_free_singlespawn_instance", 8),
STACK_USAGE("crypto_shash_setkey", 56),
STACK_USAGE("skcipher_walk_done", 32),
STACK_USAGE("skcipher_walk_complete", 48),
STACK_USAGE("skcipher_next_slow", 32),
STACK_USAGE("skcipher_next_copy", 16),
STACK_USAGE("skcipher_walk_next", 48),
STACK_USAGE("skcipher_walk_skcipher", 40),
STACK_USAGE("skcipher_walk_virt", 24),
STACK_USAGE("skcipher_walk_async", 0),
STACK_USAGE("skcipher_walk_aead_common", 40),
STACK_USAGE("skcipher_walk_aead_encrypt", 0),
STACK_USAGE("skcipher_walk_aead_decrypt", 0),
STACK_USAGE("crypto_skcipher_setkey", 56),
STACK_USAGE("crypto_skcipher_encrypt", 0),
STACK_USAGE("crypto_skcipher_decrypt", 0),
STACK_USAGE("crypto_skcipher_exit_tfm", 0),
STACK_USAGE("crypto_skcipher_init_tfm", 0),
STACK_USAGE("crypto_skcipher_free_instance", 0),
STACK_USAGE("crypto_skcipher_show", 16),
STACK_USAGE("crypto_skcipher_report", 176),
STACK_USAGE("crypto_grab_skcipher", 0),
STACK_USAGE("crypto_alloc_skcipher", 0),
STACK_USAGE("crypto_alloc_sync_skcipher", 0),
STACK_USAGE("crypto_has_skcipher", 0),
STACK_USAGE("crypto_register_skcipher", 0),
STACK_USAGE("crypto_unregister_skcipher", 0),
STACK_USAGE("crypto_register_skciphers", 48),
STACK_USAGE("crypto_unregister_skciphers", 16),
STACK_USAGE("skcipher_register_instance", 0),
STACK_USAGE("skcipher_setkey_simple", 0),
STACK_USAGE("skcipher_init_tfm_simple", 8),
STACK_USAGE("skcipher_exit_tfm_simple", 0),
STACK_USAGE("skcipher_free_instance_simple", 8),
STACK_USAGE("skcipher_alloc_instance_simple", 64),
STACK_USAGE("skcipher_done_slow", 0),
STACK_USAGE("alg_test", 0),
STACK_USAGE("xxhash64_setkey", 0),
STACK_USAGE("xxhash64_init", 0),
STACK_USAGE("xxhash64_update", 0),
STACK_USAGE("xxhash64_final", 8),
STACK_USAGE("xxhash64_digest", 8),
STACK_USAGE("xxhash_mod_init", 0),
STACK_USAGE("xxhash_mod_fini", 0),
STACK_USAGE("get_ac_property", 32),
STACK_USAGE("acpi_ac_notify", 32),
STACK_USAGE("acpi_ac_battery_notify", 16),
STACK_USAGE("thinkpad_e530_quirk", 0),
STACK_USAGE("ac_only_quirk", 0),
STACK_USAGE("acpi_ac_add", 88),
STACK_USAGE("acpi_ac_resume", 32),
STACK_USAGE("acpi_ac_remove", 8),
STACK_USAGE("acpi_ac_init", 8),
STACK_USAGE("acpi_ac_exit", 0),
STACK_USAGE("acpi_apd_create_device", 32),
STACK_USAGE("acpi_apd_init", 0),
STACK_USAGE("acpi_cmos_rtc_space_handler", 48),
STACK_USAGE("acpi_install_cmos_rtc_space_handler", 0),
STACK_USAGE("acpi_remove_cmos_rtc_space_handler", 0),
STACK_USAGE("acpi_cmos_rtc_init", 0),
STACK_USAGE("acpi_lpat_free_conversion_table", 8),
STACK_USAGE("acpi_lpat_raw_to_temp", 0),
STACK_USAGE("acpi_lpat_temp_to_raw", 0),
STACK_USAGE("acpi_lpat_get_conversion_table", 48),
STACK_USAGE("acpi_init_lpit", 40),
STACK_USAGE("low_power_idle_system_residency_us_show", 24),
STACK_USAGE("low_power_idle_cpu_residency_us_show", 24),
STACK_USAGE("lpit_read_residency_count_address", 0),
STACK_USAGE("acpi_lpss_suspend", 40),
STACK_USAGE("acpi_lpss_resume", 24),
STACK_USAGE("acpi_lpss_suspend_late", 24),
STACK_USAGE("acpi_lpss_suspend_noirq", 16),
STACK_USAGE("acpi_lpss_resume_early", 24),
STACK_USAGE("acpi_lpss_resume_noirq", 24),
STACK_USAGE("acpi_lpss_restore_early", 16),
STACK_USAGE("acpi_lpss_restore_noirq", 16),
STACK_USAGE("acpi_lpss_poweroff_late", 24),
STACK_USAGE("acpi_lpss_poweroff_noirq", 24),
STACK_USAGE("acpi_lpss_runtime_suspend", 8),
STACK_USAGE("acpi_lpss_runtime_resume", 8),
STACK_USAGE("acpi_lpss_platform_notify", 24),
STACK_USAGE("lpss_uart_setup", 0),
STACK_USAGE("acpi_lpss_bind", 16),
STACK_USAGE("acpi_lpss_unbind", 0),
STACK_USAGE("acpi_lpss_init", 0),
STACK_USAGE("lpss_deassert_reset", 0),
STACK_USAGE("byt_pwm_setup", 0),
STACK_USAGE("byt_i2c_setup", 40),
STACK_USAGE("bsw_pwm_setup", 0),
STACK_USAGE("is_memory", 72),
STACK_USAGE("match_hid_uid", 16),
STACK_USAGE("acpi_lpss_create_device", 208),
STACK_USAGE("lpss_ltr_show", 48),
STACK_USAGE("lpss_ltr_mode_show", 32),
STACK_USAGE("acpi_lpss_set_ltr", 16),
STACK_USAGE("acpi_lpss_activate", 24),
STACK_USAGE("acpi_lpss_dismiss", 0),
STACK_USAGE("acpi_memory_hotplug_init", 0),
STACK_USAGE("acpi_init_pcc", 0),
STACK_USAGE("pcc_rx_callback", 0),
STACK_USAGE("acpi_pcc_address_space_setup", 40),
STACK_USAGE("acpi_pcc_address_space_handler", 24),
STACK_USAGE("acpi_platform_init", 0),
STACK_USAGE("acpi_platform_device_remove_notify", 8),
STACK_USAGE("acpi_create_platform_device", 168),
STACK_USAGE("acpi_pnp_match", 32),
STACK_USAGE("acpi_pnp_attach", 0),
STACK_USAGE("acpi_is_pnp_device", 0),
STACK_USAGE("acpi_pnp_init", 0),
STACK_USAGE("acpi_map_cpu", 0),
STACK_USAGE("acpi_unmap_cpu", 0),
STACK_USAGE("arch_register_cpu", 0),
STACK_USAGE("arch_unregister_cpu", 0),
STACK_USAGE("acpi_processor_add", 112),
STACK_USAGE("acpi_processor_remove", 8),
STACK_USAGE("acpi_hwp_native_thermal_lvt_osc", 136),
STACK_USAGE("acpi_early_processor_osc", 0),
STACK_USAGE("acpi_processor_container_attach", 0),
STACK_USAGE("processor_validated_ids_update", 0),
STACK_USAGE("acpi_processor_ids_walk", 80),
STACK_USAGE("acpi_processor_check_duplicates", 0),
STACK_USAGE("acpi_duplicate_processor_id", 0),
STACK_USAGE("acpi_processor_init", 0),
STACK_USAGE("acpi_processor_claim_cst_control", 8),
STACK_USAGE("acpi_processor_evaluate_cst", 160),
STACK_USAGE("acpi_ds_get_buffer_field_arguments", 8),
STACK_USAGE("acpi_ds_get_bank_field_arguments", 16),
STACK_USAGE("acpi_ds_get_buffer_arguments", 0),
STACK_USAGE("acpi_ds_get_package_arguments", 0),
STACK_USAGE("acpi_ds_get_region_arguments", 16),
STACK_USAGE("acpi_ds_execute_arguments", 56),
STACK_USAGE("acpi_ds_exec_end_control_op", 32),
STACK_USAGE("acpi_ds_exec_begin_control_op", 32),
STACK_USAGE("acpi_ds_dump_method_stack", 0),
STACK_USAGE("acpi_ds_create_buffer_field", 48),
STACK_USAGE("acpi_ds_get_field_names", 56),
STACK_USAGE("acpi_ds_create_field", 120),
STACK_USAGE("acpi_ds_init_field_objects", 64),
STACK_USAGE("acpi_ds_create_bank_field", 128),
STACK_USAGE("acpi_ds_create_index_field", 112),
STACK_USAGE("acpi_ds_initialize_objects", 112),
STACK_USAGE("acpi_ds_init_one_object", 32),
STACK_USAGE("acpi_ds_detect_named_opcodes", 0),
STACK_USAGE("acpi_ds_method_error", 24),
STACK_USAGE("acpi_ds_begin_method_execution", 40),
STACK_USAGE("acpi_ds_call_control_method", 64),
STACK_USAGE("acpi_ds_auto_serialize_method", 40),
STACK_USAGE("acpi_ds_restart_control_method", 32),
STACK_USAGE("acpi_ds_terminate_control_method", 16),
STACK_USAGE("acpi_ds_method_data_delete_all", 24),
STACK_USAGE("acpi_ds_method_data_init_args", 40),
STACK_USAGE("acpi_ds_method_data_get_node", 0),
STACK_USAGE("acpi_ds_method_data_set_value", 32),
STACK_USAGE("acpi_ds_method_data_get_value", 56),
STACK_USAGE("acpi_ds_store_object_to_local", 88),
STACK_USAGE("acpi_ds_method_data_init", 0),
STACK_USAGE("acpi_ds_build_internal_buffer_obj", 56),
STACK_USAGE("acpi_ds_create_node", 48),
STACK_USAGE("acpi_ds_init_object_from_op", 40),
STACK_USAGE("acpi_ds_build_internal_object", 56),
STACK_USAGE("acpi_ds_eval_buffer_field_operands", 32),
STACK_USAGE("acpi_ds_eval_region_operands", 40),
STACK_USAGE("acpi_ds_initialize_region", 0),
STACK_USAGE("acpi_ds_eval_table_region_operands", 56),
STACK_USAGE("acpi_ds_eval_data_object_operands", 48),
STACK_USAGE("acpi_ds_eval_bank_field_operands", 24),
STACK_USAGE("acpi_ds_init_buffer_field", 72),
STACK_USAGE("acpi_ds_init_package_element", 136),
STACK_USAGE("acpi_ds_build_internal_package_obj", 104),
STACK_USAGE("acpi_ds_is_result_used", 16),
STACK_USAGE("acpi_ds_delete_result_if_not_used", 32),
STACK_USAGE("acpi_ds_resolve_operands", 24),
STACK_USAGE("acpi_ds_clear_implicit_return", 8),
STACK_USAGE("acpi_ds_clear_operands", 16),
STACK_USAGE("acpi_ds_create_operand", 72),
STACK_USAGE("acpi_ds_create_operands", 136),
STACK_USAGE("acpi_ds_evaluate_name_path", 48),
STACK_USAGE("acpi_ds_do_implicit_return", 32),
STACK_USAGE("acpi_ds_exec_begin_op", 32),
STACK_USAGE("acpi_ds_exec_end_op", 32),
STACK_USAGE("acpi_ds_get_predicate_value", 48),
STACK_USAGE("acpi_ds_load1_begin_op", 72),
STACK_USAGE("acpi_ds_init_callbacks", 0),
STACK_USAGE("acpi_ds_load1_end_op", 24),
STACK_USAGE("acpi_ds_load2_end_op", 56),
STACK_USAGE("acpi_ds_load2_begin_op", 64),
STACK_USAGE("acpi_ds_scope_stack_pop", 8),
STACK_USAGE("acpi_ds_scope_stack_clear", 8),
STACK_USAGE("acpi_ds_scope_stack_push", 24),
STACK_USAGE("acpi_ds_result_push", 16),
STACK_USAGE("acpi_ds_obj_stack_push", 0),
STACK_USAGE("acpi_ds_obj_stack_pop", 0),
STACK_USAGE("acpi_ds_obj_stack_pop_and_delete", 24),
STACK_USAGE("acpi_ds_result_pop", 16),
STACK_USAGE("acpi_ds_get_current_walk_state", 0),
STACK_USAGE("acpi_ds_push_walk_state", 0),
STACK_USAGE("acpi_ds_pop_walk_state", 0),
STACK_USAGE("acpi_ds_create_walk_state", 56),
STACK_USAGE("acpi_ds_init_aml_walk", 24),
STACK_USAGE("acpi_ds_delete_walk_state", 16),
STACK_USAGE("acpi_ev_fixed_event_detect", 56),
STACK_USAGE("acpi_any_fixed_event_status_set", 24),
STACK_USAGE("acpi_ev_initialize_events", 32),
STACK_USAGE("acpi_ev_install_xrupt_handlers", 16),
STACK_USAGE("acpi_ev_global_lock_handler", 8),
STACK_USAGE("acpi_ev_acquire_global_lock", 16),
STACK_USAGE("acpi_ev_release_global_lock", 8),
STACK_USAGE("acpi_ev_init_global_lock_handler", 24),
STACK_USAGE("acpi_ev_remove_global_lock_handler", 8),
STACK_USAGE("acpi_ev_mask_gpe", 32),
STACK_USAGE("acpi_ev_add_gpe_reference", 16),
STACK_USAGE("acpi_ev_remove_gpe_reference", 16),
STACK_USAGE("acpi_ev_low_get_gpe_info", 0),
STACK_USAGE("acpi_ev_get_gpe_event_info", 16),
STACK_USAGE("acpi_ev_gpe_detect", 80),
STACK_USAGE("acpi_ev_update_gpe_enable_mask", 16),
STACK_USAGE("acpi_ev_asynch_execute_gpe_method", 40),
STACK_USAGE("acpi_ev_asynch_enable_gpe", 16),
STACK_USAGE("acpi_ev_finish_gpe", 8),
STACK_USAGE("acpi_ev_detect_gpe", 80),
STACK_USAGE("acpi_ev_gpe_dispatch", 32),
STACK_USAGE("acpi_ev_enable_gpe", 0),
STACK_USAGE("acpi_ev_create_gpe_block", 112),
STACK_USAGE("acpi_ev_initialize_gpe_block", 72),
STACK_USAGE("acpi_ev_delete_gpe_block", 8),
STACK_USAGE("acpi_ev_update_gpes", 56),
STACK_USAGE("acpi_ev_match_gpe_method", 56),
STACK_USAGE("acpi_ev_gpe_initialize", 24),
STACK_USAGE("acpi_ev_get_gpe_xrupt_block", 48),
STACK_USAGE("acpi_ev_delete_gpe_xrupt", 8),
STACK_USAGE("acpi_ev_delete_gpe_handlers", 48),
STACK_USAGE("acpi_ev_walk_gpe_list", 48),
STACK_USAGE("acpi_ev_get_gpe_device", 0),
STACK_USAGE("acpi_ev_has_default_handler", 8),
STACK_USAGE("acpi_ev_install_handler", 24),
STACK_USAGE("acpi_ev_find_region_handler", 0),
STACK_USAGE("acpi_ev_install_space_handler", 72),
STACK_USAGE("acpi_ev_install_region_handlers", 24),
STACK_USAGE("acpi_ev_notify_dispatch", 16),
STACK_USAGE("acpi_ev_terminate", 8),
STACK_USAGE("acpi_ev_is_notify_object", 0),
STACK_USAGE("acpi_ev_queue_notify_request", 56),
STACK_USAGE("acpi_ev_address_space_dispatch", 104),
STACK_USAGE("acpi_ev_detach_region", 40),
STACK_USAGE("acpi_ev_initialize_op_regions", 16),
STACK_USAGE("acpi_ev_attach_region", 0),
STACK_USAGE("acpi_ev_execute_reg_method", 104),
STACK_USAGE("acpi_ev_execute_reg_methods", 136),
STACK_USAGE("acpi_ev_reg_run", 16),
STACK_USAGE("acpi_ev_pci_config_region_setup", 56),
STACK_USAGE("acpi_ev_is_pci_root_bridge", 48),
STACK_USAGE("acpi_ev_system_memory_region_setup", 40),
STACK_USAGE("acpi_ev_pci_bar_region_setup", 0),
STACK_USAGE("acpi_ev_cmos_region_setup", 0),
STACK_USAGE("acpi_ev_data_table_region_setup", 32),
STACK_USAGE("acpi_ev_default_region_setup", 0),
STACK_USAGE("acpi_ev_initialize_region", 32),
STACK_USAGE("acpi_ev_io_space_region_setup", 0),
STACK_USAGE("acpi_ev_gpe_xrupt_handler", 0),
STACK_USAGE("acpi_ev_install_sci_handler", 0),
STACK_USAGE("acpi_ev_remove_all_sci_handlers", 16),
STACK_USAGE("acpi_ev_sci_dispatch", 24),
STACK_USAGE("acpi_ev_sci_xrupt_handler", 16),
STACK_USAGE("acpi_acquire_global_lock", 16),
STACK_USAGE("acpi_release_global_lock", 0),
STACK_USAGE("acpi_remove_notify_handler", 48),
STACK_USAGE("acpi_install_sci_handler", 48),
STACK_USAGE("acpi_remove_sci_handler", 16),
STACK_USAGE("acpi_install_global_event_handler", 24),
STACK_USAGE("acpi_install_notify_handler", 48),
STACK_USAGE("acpi_install_fixed_event_handler", 40),
STACK_USAGE("acpi_remove_fixed_event_handler", 24),
STACK_USAGE("acpi_ev_install_gpe_handler", 88),
STACK_USAGE("acpi_install_gpe_handler", 0),
STACK_USAGE("acpi_install_gpe_raw_handler", 0),
STACK_USAGE("acpi_remove_gpe_handler", 48),
STACK_USAGE("acpi_enable_event", 32),
STACK_USAGE("acpi_disable_event", 32),
STACK_USAGE("acpi_clear_event", 0),
STACK_USAGE("acpi_get_event_status", 48),
STACK_USAGE("acpi_enable", 16),
STACK_USAGE("acpi_disable", 16),
STACK_USAGE("acpi_get_gpe_device", 40),
STACK_USAGE("acpi_disable_gpe", 24),
STACK_USAGE("acpi_set_gpe", 32),
STACK_USAGE("acpi_mask_gpe", 32),
STACK_USAGE("acpi_mark_gpe_for_wake", 24),
STACK_USAGE("acpi_setup_gpe_for_wake", 64),
STACK_USAGE("acpi_update_all_gpes", 24),
STACK_USAGE("acpi_set_gpe_wake_mask", 32),
STACK_USAGE("acpi_clear_gpe", 24),
STACK_USAGE("acpi_get_gpe_status", 32),
STACK_USAGE("acpi_dispatch_gpe", 0),
STACK_USAGE("acpi_finish_gpe", 24),
STACK_USAGE("acpi_disable_all_gpes", 8),
STACK_USAGE("acpi_enable_all_runtime_gpes", 8),
STACK_USAGE("acpi_enable_all_wakeup_gpes", 8),
STACK_USAGE("acpi_any_gpe_status_set", 24),
STACK_USAGE("acpi_install_gpe_block", 64),
STACK_USAGE("acpi_enable_gpe", 40),
STACK_USAGE("acpi_remove_gpe_block", 24),
STACK_USAGE("acpi_remove_address_space_handler", 40),
STACK_USAGE("acpi_install_address_space_handler", 48),
STACK_USAGE("acpi_ex_convert_to_object_type_string", 24),
STACK_USAGE("acpi_ex_concat_template", 72),
STACK_USAGE("acpi_ex_do_concatenate", 88),
STACK_USAGE("acpi_ex_region_read", 56),
STACK_USAGE("acpi_ex_load_op", 72),
STACK_USAGE("acpi_ex_add_table", 16),
STACK_USAGE("acpi_ex_unload_table", 16),
STACK_USAGE("acpi_ex_load_table_op", 64),
STACK_USAGE("acpi_ex_convert_to_buffer", 24),
STACK_USAGE("acpi_ex_convert_to_ascii", 88),
STACK_USAGE("acpi_ex_convert_to_string", 64),
STACK_USAGE("acpi_ex_convert_to_integer", 16),
STACK_USAGE("acpi_ex_convert_to_target_type", 16),
STACK_USAGE("acpi_ex_create_event", 24),
STACK_USAGE("acpi_ex_create_mutex", 24),
STACK_USAGE("acpi_ex_create_region", 48),
STACK_USAGE("acpi_ex_create_alias", 0),
STACK_USAGE("acpi_ex_create_processor", 24),
STACK_USAGE("acpi_ex_create_power_resource", 24),
STACK_USAGE("acpi_ex_create_method", 32),
STACK_USAGE("acpi_ex_do_debug_object", 32),
STACK_USAGE("acpi_ex_read_data_from_field", 48),
STACK_USAGE("acpi_ex_write_data_to_field", 24),
STACK_USAGE("acpi_ex_get_protocol_buffer_length", 0),
STACK_USAGE("acpi_ex_access_region", 48),
STACK_USAGE("acpi_ex_register_overflow", 0),
STACK_USAGE("acpi_ex_field_datum_io", 56),
STACK_USAGE("acpi_ex_write_with_update_rule", 56),
STACK_USAGE("acpi_ex_extract_from_field", 104),
STACK_USAGE("acpi_ex_insert_into_field", 128),
STACK_USAGE("acpi_ex_do_math_op", 0),
STACK_USAGE("acpi_ex_do_logical_numeric_op", 8),
STACK_USAGE("acpi_ex_do_logical_op", 72),
STACK_USAGE("acpi_ex_get_object_reference", 24),
STACK_USAGE("acpi_ex_acquire_mutex_object", 16),
STACK_USAGE("acpi_ex_acquire_mutex", 16),
STACK_USAGE("acpi_ex_release_mutex_object", 8),
STACK_USAGE("acpi_ex_release_mutex", 40),
STACK_USAGE("acpi_ex_unlink_mutex", 0),
STACK_USAGE("acpi_ex_release_all_mutexes", 24),
STACK_USAGE("acpi_ex_name_segment", 48),
STACK_USAGE("acpi_ex_get_name_string", 72),
STACK_USAGE("acpi_ex_allocate_name_string", 48),
STACK_USAGE("acpi_ex_opcode_1A_0T_0R", 0),
STACK_USAGE("acpi_ex_opcode_1A_1T_0R", 0),
STACK_USAGE("acpi_ex_opcode_1A_1T_1R", 88),
STACK_USAGE("acpi_ex_opcode_0A_0T_1R", 16),
STACK_USAGE("acpi_ex_opcode_1A_0T_1R", 56),
STACK_USAGE("acpi_ex_opcode_2A_2T_1R", 32),
STACK_USAGE("acpi_ex_opcode_2A_1T_1R", 40),
STACK_USAGE("acpi_ex_opcode_2A_0T_1R", 40),
STACK_USAGE("acpi_ex_opcode_2A_0T_0R", 16),
STACK_USAGE("acpi_ex_opcode_3A_1T_1R", 64),
STACK_USAGE("acpi_ex_opcode_3A_0T_0R", 32),
STACK_USAGE("acpi_ex_opcode_6A_0T_1R", 48),
STACK_USAGE("acpi_ex_do_match", 16),
STACK_USAGE("acpi_ex_prep_common_field_object", 0),
STACK_USAGE("acpi_ex_prep_field_value", 32),
STACK_USAGE("acpi_ex_system_io_space_handler", 32),
STACK_USAGE("acpi_ex_system_memory_space_handler", 72),
STACK_USAGE("acpi_ex_pci_config_space_handler", 0),
STACK_USAGE("acpi_ex_cmos_space_handler", 0),
STACK_USAGE("acpi_ex_pci_bar_space_handler", 0),
STACK_USAGE("acpi_ex_data_table_space_handler", 0),
STACK_USAGE("acpi_ex_resolve_node_to_value", 56),
STACK_USAGE("acpi_ex_resolve_multiple", 72),
STACK_USAGE("acpi_ex_resolve_to_value", 56),
STACK_USAGE("acpi_ex_check_object_type", 24),
STACK_USAGE("acpi_ex_resolve_operands", 64),
STACK_USAGE("acpi_ex_read_serial_bus", 56),
STACK_USAGE("acpi_ex_write_serial_bus", 64),
STACK_USAGE("acpi_ex_read_gpio", 24),
STACK_USAGE("acpi_ex_write_gpio", 16),
STACK_USAGE("acpi_ex_store_object_to_index", 56),
STACK_USAGE("acpi_ex_store_object_to_node", 72),
STACK_USAGE("acpi_ex_store", 16),
STACK_USAGE("acpi_ex_store_direct_to_node", 32),
STACK_USAGE("acpi_ex_store_object_to_object", 64),
STACK_USAGE("acpi_ex_resolve_object", 24),
STACK_USAGE("acpi_ex_store_string_to_string", 48),
STACK_USAGE("acpi_ex_store_buffer_to_buffer", 56),
STACK_USAGE("acpi_ex_system_do_stall", 0),
STACK_USAGE("acpi_ex_system_do_sleep", 8),
STACK_USAGE("acpi_ex_system_signal_event", 0),
STACK_USAGE("acpi_ex_system_wait_event", 0),
STACK_USAGE("acpi_ex_system_reset_event", 32),
STACK_USAGE("acpi_ex_system_wait_semaphore", 16),
STACK_USAGE("acpi_ex_system_wait_mutex", 16),
STACK_USAGE("acpi_ex_trace_point", 0),
STACK_USAGE("acpi_ex_start_trace_method", 16),
STACK_USAGE("acpi_ex_stop_trace_method", 8),
STACK_USAGE("acpi_ex_start_trace_opcode", 0),
STACK_USAGE("acpi_ex_stop_trace_opcode", 0),
STACK_USAGE("acpi_ex_interpreter_trace_enabled", 16),
STACK_USAGE("acpi_ex_truncate_for32bit_table", 0),
STACK_USAGE("acpi_ex_acquire_global_lock", 0),
STACK_USAGE("acpi_ex_release_global_lock", 0),
STACK_USAGE("acpi_ex_eisa_id_to_string", 16),
STACK_USAGE("acpi_ex_integer_to_string", 56),
STACK_USAGE("acpi_ex_pci_cls_to_string", 16),
STACK_USAGE("acpi_is_valid_space_id", 0),
STACK_USAGE("acpi_ex_enter_interpreter", 0),
STACK_USAGE("acpi_ex_exit_interpreter", 0),
STACK_USAGE("acpi_hw_get_mode", 16),
STACK_USAGE("acpi_hw_set_mode", 16),
STACK_USAGE("acpi_hw_extended_wake_prep", 0),
STACK_USAGE("acpi_hw_extended_wake", 8),
STACK_USAGE("acpi_hw_execute_sleep_method", 56),
STACK_USAGE("acpi_hw_extended_sleep", 32),
STACK_USAGE("acpi_hw_get_gpe_register_bit", 0),
STACK_USAGE("acpi_hw_low_set_gpe", 48),
STACK_USAGE("acpi_hw_clear_gpe", 0),
STACK_USAGE("acpi_hw_get_gpe_status", 80),
STACK_USAGE("acpi_hw_disable_gpe_block", 24),
STACK_USAGE("acpi_hw_clear_gpe_block", 24),
STACK_USAGE("acpi_hw_gpe_read", 24),
STACK_USAGE("acpi_hw_enable_runtime_gpe_block", 24),
STACK_USAGE("acpi_hw_enable_wakeup_gpe_block", 24),
STACK_USAGE("acpi_hw_get_gpe_block_status", 72),
STACK_USAGE("acpi_hw_disable_all_gpes", 0),
STACK_USAGE("acpi_hw_enable_all_runtime_gpes", 0),
STACK_USAGE("acpi_hw_enable_all_wakeup_gpes", 0),
STACK_USAGE("acpi_hw_check_all_gpes", 48),
STACK_USAGE("acpi_hw_gpe_write", 0),
STACK_USAGE("acpi_hw_derive_pci_id", 96),
STACK_USAGE("acpi_hw_validate_register", 16),
STACK_USAGE("acpi_hw_read", 120),
STACK_USAGE("acpi_hw_write", 88),
STACK_USAGE("acpi_hw_clear_acpi_status", 16),
STACK_USAGE("acpi_hw_get_bit_register_info", 0),
STACK_USAGE("acpi_hw_write_pm1_control", 8),
STACK_USAGE("acpi_hw_register_read", 40),
STACK_USAGE("acpi_hw_get_access_bit_width", 0),
STACK_USAGE("acpi_hw_register_write", 32),
STACK_USAGE("acpi_hw_read_multiple", 40),
STACK_USAGE("acpi_hw_write_multiple", 16),
STACK_USAGE("acpi_hw_legacy_wake_prep", 32),
STACK_USAGE("acpi_hw_legacy_wake", 8),
STACK_USAGE("acpi_hw_legacy_sleep", 48),
STACK_USAGE("acpi_hw_read_port", 56),
STACK_USAGE("acpi_hw_write_port", 32),
STACK_USAGE("acpi_hw_validate_io_block", 40),
STACK_USAGE("acpi_hw_validate_io_request", 0),
STACK_USAGE("acpi_write", 0),
STACK_USAGE("acpi_read_bit_register", 32),
STACK_USAGE("acpi_write_bit_register", 48),
STACK_USAGE("acpi_reset", 0),
STACK_USAGE("acpi_get_sleep_type_data", 56),
STACK_USAGE("acpi_read", 0),
STACK_USAGE("acpi_set_firmware_waking_vector", 0),
STACK_USAGE("acpi_enter_sleep_state_s4bios", 24),
STACK_USAGE("acpi_enter_sleep_state_prep", 64),
STACK_USAGE("acpi_enter_sleep_state", 0),
STACK_USAGE("acpi_leave_sleep_state_prep", 0),
STACK_USAGE("acpi_leave_sleep_state", 0),
STACK_USAGE("acpi_ns_lookup", 120),
STACK_USAGE("acpi_ns_root_initialize", 64),
STACK_USAGE("acpi_ns_remove_node", 0),
STACK_USAGE("acpi_ns_install_node", 0),
STACK_USAGE("acpi_ns_delete_children", 24),
STACK_USAGE("acpi_ns_create_node", 24),
STACK_USAGE("acpi_ns_delete_namespace_subtree", 24),
STACK_USAGE("acpi_ns_delete_namespace_by_owner", 48),
STACK_USAGE("acpi_ns_delete_node", 24),
STACK_USAGE("acpi_ns_check_argument_count", 16),
STACK_USAGE("acpi_ns_check_argument_types", 56),
STACK_USAGE("acpi_ns_check_acpi_compliance", 16),
STACK_USAGE("acpi_ns_convert_to_buffer", 40),
STACK_USAGE("acpi_ns_convert_to_unicode", 24),
STACK_USAGE("acpi_ns_convert_to_integer", 24),
STACK_USAGE("acpi_ns_convert_to_resource", 8),
STACK_USAGE("acpi_ns_convert_to_reference", 136),
STACK_USAGE("acpi_ns_convert_to_string", 48),
STACK_USAGE("acpi_ns_evaluate", 32),
STACK_USAGE("acpi_ns_initialize_devices", 72),
STACK_USAGE("acpi_ns_init_one_package", 8),
STACK_USAGE("acpi_ns_init_one_object", 32),
STACK_USAGE("acpi_ns_find_ini_methods", 0),
STACK_USAGE("acpi_ns_initialize_objects", 72),
STACK_USAGE("acpi_ns_init_one_device", 40),
STACK_USAGE("acpi_ns_load_table", 24),
STACK_USAGE("acpi_ns_handle_to_pathname", 40),
STACK_USAGE("acpi_ns_build_normalized_path", 32),
STACK_USAGE("acpi_ns_get_normalized_pathname", 48),
STACK_USAGE("acpi_ns_get_external_pathname", 0),
STACK_USAGE("acpi_ns_build_prefixed_pathname", 56),
STACK_USAGE("acpi_ns_normalize_pathname", 40),
STACK_USAGE("acpi_ns_get_pathname_length", 0),
STACK_USAGE("acpi_ns_handle_to_name", 16),
STACK_USAGE("acpi_ns_detach_object", 16),
STACK_USAGE("acpi_ns_get_attached_object", 0),
STACK_USAGE("acpi_ns_get_secondary_object", 0),
STACK_USAGE("acpi_ns_attach_data", 32),
STACK_USAGE("acpi_ns_detach_data", 0),
STACK_USAGE("acpi_ns_attach_object", 24),
STACK_USAGE("acpi_ns_get_attached_data", 0),
STACK_USAGE("acpi_ns_one_complete_parse", 80),
STACK_USAGE("acpi_ns_parse_table", 0),
STACK_USAGE("acpi_ns_execute_table", 80),
STACK_USAGE("acpi_ns_check_object_type", 152),
STACK_USAGE("acpi_ns_check_return_value", 32),
STACK_USAGE("acpi_ns_check_package_list", 96),
STACK_USAGE("acpi_ns_check_package", 48),
STACK_USAGE("acpi_ns_check_package_elements", 72),
STACK_USAGE("acpi_ns_simple_repair", 64),
STACK_USAGE("acpi_ns_repair_null_element", 16),
STACK_USAGE("acpi_ns_remove_null_elements", 0),
STACK_USAGE("acpi_ns_wrap_with_package", 24),
STACK_USAGE("acpi_ns_complex_repairs", 0),
STACK_USAGE("acpi_ns_repair_ALR", 0),
STACK_USAGE("acpi_ns_repair_FDE", 32),
STACK_USAGE("acpi_ns_repair_CID", 48),
STACK_USAGE("acpi_ns_repair_CST", 72),
STACK_USAGE("acpi_ns_repair_HID", 40),
STACK_USAGE("acpi_ns_repair_PRT", 32),
STACK_USAGE("acpi_ns_repair_PSS", 40),
STACK_USAGE("acpi_ns_repair_TSS", 40),
STACK_USAGE("acpi_ns_check_sorted_list", 64),
STACK_USAGE("acpi_ns_search_and_enter", 72),
STACK_USAGE("acpi_ns_search_one_scope", 16),
STACK_USAGE("acpi_ns_local", 8),
STACK_USAGE("acpi_ns_get_internal_name_length", 0),
STACK_USAGE("acpi_ns_build_internal_name", 0),
STACK_USAGE("acpi_ns_internalize_name", 80),
STACK_USAGE("acpi_ns_externalize_name", 80),
STACK_USAGE("acpi_ns_print_node_pathname", 32),
STACK_USAGE("acpi_ns_validate_handle", 0),
STACK_USAGE("acpi_ns_terminate", 0),
STACK_USAGE("acpi_ns_opens_scope", 0),
STACK_USAGE("acpi_ns_get_node_unlocked", 128),
STACK_USAGE("acpi_ns_get_node", 32),
STACK_USAGE("acpi_ns_get_type", 0),
STACK_USAGE("acpi_ns_walk_namespace", 80),
STACK_USAGE("acpi_ns_get_next_node", 0),
STACK_USAGE("acpi_ns_get_next_node_typed", 0),
STACK_USAGE("acpi_evaluate_object", 88),
STACK_USAGE("acpi_evaluate_object_typed", 64),
STACK_USAGE("acpi_walk_namespace", 56),
STACK_USAGE("acpi_ns_get_device_callback", 112),
STACK_USAGE("acpi_get_devices", 48),
STACK_USAGE("acpi_attach_data", 32),
STACK_USAGE("acpi_detach_data", 24),
STACK_USAGE("acpi_get_data_full", 40),
STACK_USAGE("acpi_get_data", 0),
STACK_USAGE("acpi_get_name", 32),
STACK_USAGE("acpi_get_object_info", 120),
STACK_USAGE("acpi_get_handle", 56),
STACK_USAGE("acpi_install_method", 160),
STACK_USAGE("acpi_get_next_object", 40),
STACK_USAGE("acpi_get_type", 16),
STACK_USAGE("acpi_get_parent", 24),
STACK_USAGE("acpi_ps_get_next_namestring", 0),
STACK_USAGE("acpi_ps_get_next_namepath", 64),
STACK_USAGE("acpi_ps_get_next_simple_arg", 24),
STACK_USAGE("acpi_ps_get_next_package_length", 0),
STACK_USAGE("acpi_ps_get_next_arg", 64),
STACK_USAGE("acpi_ps_get_next_package_end", 8),
STACK_USAGE("acpi_ps_parse_loop", 88),
STACK_USAGE("acpi_ps_build_named_op", 72),
STACK_USAGE("acpi_ps_create_op", 72),
STACK_USAGE("acpi_ps_complete_op", 48),
STACK_USAGE("acpi_ps_complete_final_op", 64),
STACK_USAGE("acpi_ps_get_opcode_name", 0),
STACK_USAGE("acpi_ps_get_argument_count", 0),
STACK_USAGE("acpi_ps_get_opcode_info", 0),
STACK_USAGE("acpi_ps_complete_this_op", 32),
STACK_USAGE("acpi_ps_next_parse_state", 8),
STACK_USAGE("acpi_ps_parse_aml", 40),
STACK_USAGE("acpi_ps_get_opcode_size", 0),
STACK_USAGE("acpi_ps_peek_opcode", 0),
STACK_USAGE("acpi_ps_push_scope", 40),
STACK_USAGE("acpi_ps_pop_scope", 32),
STACK_USAGE("acpi_ps_cleanup_scope", 8),
STACK_USAGE("acpi_ps_get_parent_scope", 0),
STACK_USAGE("acpi_ps_has_completed_scope", 0),
STACK_USAGE("acpi_ps_init_scope", 16),
STACK_USAGE("acpi_ps_get_depth_next", 24),
STACK_USAGE("acpi_ps_get_arg", 16),
STACK_USAGE("acpi_ps_append_arg", 16),
STACK_USAGE("acpi_ps_free_op", 0),
STACK_USAGE("acpi_ps_is_leading_char", 0),
STACK_USAGE("acpi_ps_get_name", 0),
STACK_USAGE("acpi_ps_set_name", 0),
STACK_USAGE("acpi_ps_create_scope_op", 0),
STACK_USAGE("acpi_ps_init_op", 0),
STACK_USAGE("acpi_ps_alloc_op", 40),
STACK_USAGE("acpi_ps_delete_parse_tree", 32),
STACK_USAGE("acpi_ps_execute_table", 32),
STACK_USAGE("acpi_ps_update_parameter_list", 24),
STACK_USAGE("acpi_debug_trace", 40),
STACK_USAGE("acpi_ps_execute_method", 40),
STACK_USAGE("acpi_rs_get_address_common", 16),
STACK_USAGE("acpi_rs_set_address_common", 16),
STACK_USAGE("acpi_rs_get_aml_length", 8),
STACK_USAGE("acpi_rs_get_list_length", 80),
STACK_USAGE("acpi_rs_get_pci_routing_table_length", 40),
STACK_USAGE("acpi_rs_create_resource_list", 48),
STACK_USAGE("acpi_rs_create_pci_routing_table", 88),
STACK_USAGE("acpi_buffer_to_resource", 64),
STACK_USAGE("acpi_rs_create_aml_resources", 32),
STACK_USAGE("acpi_rs_convert_resources_to_aml", 40),
STACK_USAGE("acpi_rs_convert_aml_to_resources", 32),
STACK_USAGE("acpi_rs_convert_aml_to_resource", 88),
STACK_USAGE("acpi_rs_convert_resource_to_aml", 72),
STACK_USAGE("acpi_rs_set_resource_length", 16),
STACK_USAGE("acpi_rs_set_resource_header", 16),
STACK_USAGE("acpi_rs_get_resource_source", 40),
STACK_USAGE("acpi_rs_decode_bitmask", 0),
STACK_USAGE("acpi_rs_set_resource_source", 16),
STACK_USAGE("acpi_rs_get_prt_method_data", 32),
STACK_USAGE("acpi_rs_get_crs_method_data", 32),
STACK_USAGE("acpi_rs_get_prs_method_data", 32),
STACK_USAGE("acpi_rs_get_aei_method_data", 32),
STACK_USAGE("acpi_rs_encode_bitmask", 0),
STACK_USAGE("acpi_rs_get_method_data", 32),
STACK_USAGE("acpi_rs_set_srs_method_data", 72),
STACK_USAGE("acpi_rs_move_data", 0),
STACK_USAGE("acpi_get_irq_routing_table", 24),
STACK_USAGE("acpi_get_current_resources", 24),
STACK_USAGE("acpi_get_possible_resources", 24),
STACK_USAGE("acpi_set_current_resources", 24),
STACK_USAGE("acpi_get_event_resources", 24),
STACK_USAGE("acpi_resource_to_address64", 0),
STACK_USAGE("acpi_get_vendor_resource", 32),
STACK_USAGE("acpi_rs_match_vendor_resource", 24),
STACK_USAGE("acpi_walk_resource_buffer", 40),
STACK_USAGE("acpi_rs_validate_parameters", 32),
STACK_USAGE("acpi_walk_resources", 56),
STACK_USAGE("acpi_tb_install_and_load_table", 24),
STACK_USAGE("acpi_tb_unload_table", 32),
STACK_USAGE("acpi_tb_notify_table", 0),
STACK_USAGE("acpi_tb_acquire_table", 40),
STACK_USAGE("acpi_tb_release_table", 0),
STACK_USAGE("acpi_tb_acquire_temp_table", 40),
STACK_USAGE("acpi_tb_release_temp_table", 0),
STACK_USAGE("acpi_tb_validate_table", 8),
STACK_USAGE("acpi_tb_invalidate_table", 8),
STACK_USAGE("acpi_tb_validate_temp_table", 8),
STACK_USAGE("acpi_tb_verify_temp_table", 80),
STACK_USAGE("acpi_tb_resize_root_table_list", 56),
STACK_USAGE("acpi_tb_get_next_table_descriptor", 16),
STACK_USAGE("acpi_tb_terminate", 16),
STACK_USAGE("acpi_tb_delete_namespace_by_owner", 8),
STACK_USAGE("acpi_tb_allocate_owner_id", 16),
STACK_USAGE("acpi_tb_release_owner_id", 16),
STACK_USAGE("acpi_tb_get_owner_id", 24),
STACK_USAGE("acpi_tb_init_table_descriptor", 0),
STACK_USAGE("acpi_tb_is_table_loaded", 8),
STACK_USAGE("acpi_tb_set_table_loaded_flag", 16),
STACK_USAGE("acpi_tb_load_table", 48),
STACK_USAGE("acpi_tb_parse_fadt", 40),
STACK_USAGE("acpi_tb_create_local_fadt", 56),
STACK_USAGE("acpi_tb_find_table", 96),
STACK_USAGE("acpi_tb_override_table", 88),
STACK_USAGE("acpi_tb_uninstall_table", 8),
STACK_USAGE("acpi_tb_install_table_with_override", 40),
STACK_USAGE("acpi_tb_install_standard_table", 88),
STACK_USAGE("acpi_tb_verify_checksum", 0),
STACK_USAGE("acpi_tb_checksum", 0),
STACK_USAGE("acpi_tb_print_table_header", 72),
STACK_USAGE("acpi_tb_copy_dsdt", 56),
STACK_USAGE("acpi_tb_parse_root_table", 72),
STACK_USAGE("acpi_tb_initialize_facs", 24),
STACK_USAGE("acpi_tb_get_table", 16),
STACK_USAGE("acpi_tb_put_table", 0),
STACK_USAGE("acpi_tb_check_dsdt_header", 0),
STACK_USAGE("acpi_reallocate_root_table", 48),
STACK_USAGE("acpi_get_table_header", 24),
STACK_USAGE("acpi_get_table", 32),
STACK_USAGE("acpi_allocate_root_table", 0),
STACK_USAGE("acpi_put_table", 8),
STACK_USAGE("acpi_get_table_by_index", 24),
STACK_USAGE("acpi_install_table_handler", 24),
STACK_USAGE("acpi_remove_table_handler", 16),
STACK_USAGE("acpi_initialize_tables", 24),
STACK_USAGE("acpi_tb_load_namespace", 56),
STACK_USAGE("acpi_install_table", 16),
STACK_USAGE("acpi_install_physical_table", 16),
STACK_USAGE("acpi_load_table", 32),
STACK_USAGE("acpi_load_tables", 8),
STACK_USAGE("acpi_unload_parent_table", 24),
STACK_USAGE("acpi_unload_table", 0),
STACK_USAGE("acpi_find_root_pointer", 40),
STACK_USAGE("acpi_tb_scan_memory_for_rsdp", 16),
STACK_USAGE("acpi_tb_get_rsdp_length", 8),
STACK_USAGE("acpi_tb_validate_rsdp", 16),
STACK_USAGE("acpi_ut_check_address_range", 80),
STACK_USAGE("acpi_ut_delete_address_lists", 16),
STACK_USAGE("acpi_ut_add_address_range", 56),
STACK_USAGE("acpi_ut_remove_address_range", 0),
STACK_USAGE("acpi_ut_delete_caches", 8),
STACK_USAGE("acpi_ut_validate_buffer", 0),
STACK_USAGE("acpi_ut_initialize_buffer", 40),
STACK_USAGE("acpi_ut_create_caches", 0),
STACK_USAGE("acpi_ut_valid_nameseg", 0),
STACK_USAGE("acpi_ut_valid_name_char", 0),
STACK_USAGE("acpi_ut_check_and_repair_ascii", 0),
STACK_USAGE("acpi_ut_debug_dump_buffer", 0),
STACK_USAGE("acpi_ut_dump_buffer", 80),
STACK_USAGE("acpi_ut_copy_ielement_to_eelement", 32),
STACK_USAGE("acpi_ut_copy_iobject_to_eobject", 48),
STACK_USAGE("acpi_ut_copy_eobject_to_iobject", 80),
STACK_USAGE("acpi_ut_copy_simple_object", 48),
STACK_USAGE("acpi_ut_copy_isimple_to_esimple", 8),
STACK_USAGE("acpi_ut_copy_ielement_to_ielement", 40),
STACK_USAGE("acpi_ut_copy_iobject_to_iobject", 56),
STACK_USAGE("acpi_ut_get_event_name", 0),
STACK_USAGE("acpi_ut_get_type_name", 0),
STACK_USAGE("acpi_ut_get_object_type_name", 0),
STACK_USAGE("acpi_ut_get_node_name", 8),
STACK_USAGE("acpi_ut_get_descriptor_name", 0),
STACK_USAGE("acpi_ut_get_reference_name", 0),
STACK_USAGE("acpi_ut_get_mutex_name", 0),
STACK_USAGE("acpi_ut_valid_object_type", 0),
STACK_USAGE("acpi_ut_get_region_name", 0),
STACK_USAGE("acpi_ut_delete_internal_object_list", 16),
STACK_USAGE("acpi_ut_update_ref_count", 40),
STACK_USAGE("acpi_ut_update_object_reference", 64),
STACK_USAGE("acpi_ut_add_reference", 8),
STACK_USAGE("acpi_ut_remove_reference", 8),
STACK_USAGE("acpi_ut_predefined_bios_error", 120),
STACK_USAGE("acpi_ut_prefixed_namespace_error", 56),
STACK_USAGE("acpi_ut_method_error", 64),
STACK_USAGE("acpi_ut_predefined_warning", 120),
STACK_USAGE("acpi_ut_predefined_info", 120),
STACK_USAGE("acpi_ut_evaluate_numeric_object", 32),
STACK_USAGE("acpi_ut_execute_STA", 24),
STACK_USAGE("acpi_ut_execute_power_methods", 72),
STACK_USAGE("acpi_ut_evaluate_object", 64),
STACK_USAGE("acpi_format_exception", 8),
STACK_USAGE("acpi_ut_validate_exception", 0),
STACK_USAGE("acpi_ut_hex_to_ascii_char", 24),
STACK_USAGE("acpi_ut_ascii_to_hex_byte", 0),
STACK_USAGE("acpi_ut_ascii_char_to_hex", 0),
STACK_USAGE("acpi_ut_execute_UID", 48),
STACK_USAGE("acpi_ut_execute_CID", 96),
STACK_USAGE("acpi_ut_execute_CLS", 48),
STACK_USAGE("acpi_ut_execute_HID", 48),
STACK_USAGE("acpi_ut_subsystem_shutdown", 24),
STACK_USAGE("acpi_ut_init_globals", 8),
STACK_USAGE("acpi_ut_acquire_write_lock", 0),
STACK_USAGE("acpi_ut_release_write_lock", 0),
STACK_USAGE("acpi_ut_create_rw_lock", 8),
STACK_USAGE("acpi_ut_delete_rw_lock", 8),
STACK_USAGE("acpi_ut_acquire_read_lock", 16),
STACK_USAGE("acpi_ut_release_read_lock", 16),
STACK_USAGE("acpi_ut_short_multiply", 0),
STACK_USAGE("acpi_ut_short_shift_left", 0),
STACK_USAGE("acpi_ut_short_shift_right", 0),
STACK_USAGE("acpi_ut_short_divide", 0),
STACK_USAGE("acpi_ut_divide", 0),
STACK_USAGE("acpi_ut_set_integer_width", 0),
STACK_USAGE("acpi_ut_create_update_state_and_push", 16),
STACK_USAGE("acpi_ut_walk_package_tree", 64),
STACK_USAGE("acpi_ut_is_pci_root_bridge", 8),
STACK_USAGE("acpi_ut_dword_byte_swap", 0),
STACK_USAGE("acpi_ut_acquire_mutex", 32),
STACK_USAGE("acpi_ut_release_mutex", 8),
STACK_USAGE("acpi_ut_mutex_initialize", 48),
STACK_USAGE("acpi_ut_mutex_terminate", 16),
STACK_USAGE("acpi_ut_strlwr", 0),
STACK_USAGE("acpi_ut_strupr", 0),
STACK_USAGE("acpi_ut_stricmp", 0),
STACK_USAGE("acpi_ut_create_package_object", 32),
STACK_USAGE("acpi_ut_create_integer_object", 8),
STACK_USAGE("acpi_ut_create_buffer_object", 32),
STACK_USAGE("acpi_ut_create_string_object", 32),
STACK_USAGE("acpi_ut_valid_internal_object", 0),
STACK_USAGE("acpi_ut_allocate_object_desc_dbg", 40),
STACK_USAGE("acpi_ut_delete_object_desc", 8),
STACK_USAGE("acpi_ut_get_simple_object_size", 32),
STACK_USAGE("acpi_ut_create_internal_object_dbg", 32),
STACK_USAGE("acpi_ut_get_element_length", 24),
STACK_USAGE("acpi_ut_get_object_size", 40),
STACK_USAGE("acpi_ut_initialize_interfaces", 0),
STACK_USAGE("acpi_ut_interface_terminate", 8),
STACK_USAGE("acpi_ut_install_interface", 56),
STACK_USAGE("acpi_ut_remove_interface", 32),
STACK_USAGE("acpi_ut_update_interfaces", 0),
STACK_USAGE("acpi_ut_get_interface", 16),
STACK_USAGE("acpi_ut_osi_implementation", 40),
STACK_USAGE("acpi_ut_release_owner_id", 8),
STACK_USAGE("acpi_ut_allocate_owner_id", 24),
STACK_USAGE("acpi_ut_get_expected_return_types", 32),
STACK_USAGE("acpi_ut_get_next_predefined_method", 0),
STACK_USAGE("acpi_ut_match_predefined_method", 0),
STACK_USAGE("acpi_ut_walk_aml_resources", 72),
STACK_USAGE("acpi_ut_validate_resource", 8),
STACK_USAGE("acpi_ut_get_resource_type", 0),
STACK_USAGE("acpi_ut_get_resource_length", 0),
STACK_USAGE("acpi_ut_get_resource_header_length", 0),
STACK_USAGE("acpi_ut_get_descriptor_length", 0),
STACK_USAGE("acpi_ut_get_resource_end_tag", 0),
STACK_USAGE("acpi_ut_create_thread_state", 8),
STACK_USAGE("acpi_ut_create_update_state", 16),
STACK_USAGE("acpi_ut_create_pkg_state", 24),
STACK_USAGE("acpi_ut_create_control_state", 0),
STACK_USAGE("acpi_ut_delete_generic_state", 0),
STACK_USAGE("acpi_ut_push_generic_state", 0),
STACK_USAGE("acpi_ut_pop_generic_state", 0),
STACK_USAGE("acpi_ut_create_generic_state", 16),
STACK_USAGE("acpi_ut_repair_name", 32),
STACK_USAGE("acpi_ut_print_string", 24),
STACK_USAGE("acpi_ut_convert_hex_string", 48),
STACK_USAGE("acpi_ut_remove_leading_zeros", 0),
STACK_USAGE("acpi_ut_remove_whitespace", 0),
STACK_USAGE("acpi_ut_detect_hex_prefix", 0),
STACK_USAGE("acpi_ut_remove_hex_prefix", 0),
STACK_USAGE("acpi_ut_detect_octal_prefix", 0),
STACK_USAGE("acpi_ut_insert_digit", 56),
STACK_USAGE("acpi_ut_convert_octal_string", 40),
STACK_USAGE("acpi_ut_convert_decimal_string", 48),
STACK_USAGE("acpi_ut_implicit_strtoul64", 32),
STACK_USAGE("acpi_ut_explicit_strtoul64", 40),
STACK_USAGE("acpi_ut_strtoul64", 48),
STACK_USAGE("acpi_purge_cached_objects", 0),
STACK_USAGE("acpi_install_interface", 16),
STACK_USAGE("acpi_terminate", 0),
STACK_USAGE("acpi_remove_interface", 8),
STACK_USAGE("acpi_install_interface_handler", 16),
STACK_USAGE("acpi_update_interfaces", 8),
STACK_USAGE("acpi_check_address_range", 32),
STACK_USAGE("acpi_decode_pld_buffer", 40),
STACK_USAGE("acpi_warning", 120),
STACK_USAGE("acpi_info", 104),
STACK_USAGE("acpi_bios_error", 120),
STACK_USAGE("acpi_bios_exception", 120),
STACK_USAGE("acpi_bios_warning", 120),
STACK_USAGE("acpi_error", 120),
STACK_USAGE("acpi_exception", 120),
STACK_USAGE("acpi_enable_subsystem", 16),
STACK_USAGE("acpi_initialize_objects", 0),
STACK_USAGE("acpi_initialize_subsystem", 8),
STACK_USAGE("acpi_acquire_mutex", 24),
STACK_USAGE("acpi_release_mutex", 24),
STACK_USAGE("acpi_ut_get_mutex_object", 24),
STACK_USAGE("acpi_battery_notify", 40),
STACK_USAGE("battery_notify", 24),
STACK_USAGE("battery_bix_broken_package_quirk", 0),
STACK_USAGE("battery_notification_delay_quirk", 0),
STACK_USAGE("battery_ac_is_broken_quirk", 0),
STACK_USAGE("battery_quirk_not_charging", 0),
STACK_USAGE("acpi_battery_add", 40),
STACK_USAGE("acpi_battery_remove", 16),
STACK_USAGE("acpi_battery_resume", 16),
STACK_USAGE("acpi_battery_init_async", 0),
STACK_USAGE("acpi_battery_init", 8),
STACK_USAGE("acpi_battery_exit", 0),
STACK_USAGE("acpi_battery_get_property", 24),
STACK_USAGE("acpi_battery_get_info", 96),
STACK_USAGE("acpi_battery_get_state", 56),
STACK_USAGE("acpi_battery_init_alarm", 8),
STACK_USAGE("acpi_battery_alarm_show", 8),
STACK_USAGE("acpi_battery_alarm_store", 40),
STACK_USAGE("__battery_hook_unregister", 32),
STACK_USAGE("battery_hook_unregister", 24),
STACK_USAGE("battery_hook_register", 24),
STACK_USAGE("battery_hook_exit", 16),
STACK_USAGE("sysfs_add_battery", 112),
STACK_USAGE("sysfs_remove_battery", 32),
STACK_USAGE("find_battery", 0),
STACK_USAGE("acpi_battery_update", 16),
STACK_USAGE("version_show", 0),
STACK_USAGE("status_show", 0),
STACK_USAGE("type_show", 0),
STACK_USAGE("xoffset_show", 0),
STACK_USAGE("yoffset_show", 0),
STACK_USAGE("image_read", 8),
STACK_USAGE("acpi_parse_bgrt", 0),
STACK_USAGE("bgrt_init", 8),
STACK_USAGE("acpi_blacklisted", 8),
STACK_USAGE("dmi_enable_rev_override", 0),
STACK_USAGE("acpi_device_probe", 24),
STACK_USAGE("acpi_device_remove", 16),
STACK_USAGE("acpi_bus_for_each_dev", 0),
STACK_USAGE("acpi_bus_init_irq", 8),
STACK_USAGE("acpi_early_init", 0),
STACK_USAGE("acpi_subsystem_init", 0),
STACK_USAGE("acpi_bus_table_handler", 24),
STACK_USAGE("acpi_bus_init", 88),
STACK_USAGE("acpi_bus_private_data_handler", 0),
STACK_USAGE("acpi_init", 8),
STACK_USAGE("acpi_bus_attach_private_data", 0),
STACK_USAGE("acpi_bus_get_private_data", 0),
STACK_USAGE("acpi_bus_detach_private_data", 0),
STACK_USAGE("acpi_run_osc", 200),
STACK_USAGE("acpi_bus_notify", 32),
STACK_USAGE("set_copy_dsdt", 0),
STACK_USAGE("acpi_notify_device", 0),
STACK_USAGE("acpi_notify_device_fixed", 0),
STACK_USAGE("acpi_device_fixed_event", 0),
STACK_USAGE("sb_notify_work", 8),
STACK_USAGE("acpi_sb_notify", 0),
STACK_USAGE("acpi_setup_sb_notify_handler", 16),
STACK_USAGE("acpi_get_first_physical_node", 24),
STACK_USAGE("acpi_device_is_first_physical_node", 32),
STACK_USAGE("acpi_companion_match", 40),
STACK_USAGE("acpi_of_match_device", 64),
STACK_USAGE("acpi_bus_get_status_handle", 8),
STACK_USAGE("acpi_set_modalias", 24),
STACK_USAGE("__acpi_match_device", 80),
STACK_USAGE("acpi_match_device", 64),
STACK_USAGE("acpi_device_get_match_data", 72),
STACK_USAGE("acpi_match_device_ids", 0),
STACK_USAGE("acpi_driver_match_device", 56),
STACK_USAGE("acpi_bus_register_driver", 0),
STACK_USAGE("acpi_bus_unregister_driver", 0),
STACK_USAGE("acpi_bus_get_status", 24),
STACK_USAGE("acpi_bus_match", 0),
STACK_USAGE("acpi_device_uevent", 0),
STACK_USAGE("acpi_lid_notify_state", 56),
STACK_USAGE("acpi_button_state_seq_show", 24),
STACK_USAGE("acpi_lid_open", 16),
STACK_USAGE("acpi_button_notify", 56),
STACK_USAGE("acpi_button_suspend", 0),
STACK_USAGE("acpi_button_resume", 40),
STACK_USAGE("acpi_lid_input_open", 40),
STACK_USAGE("acpi_button_add", 56),
STACK_USAGE("acpi_button_remove", 16),
STACK_USAGE("param_set_lid_init_state", 0),
STACK_USAGE("param_get_lid_init_state", 32),
STACK_USAGE("acpi_button_driver_exit", 0),
STACK_USAGE("acpi_button_driver_init", 0),
STACK_USAGE("acpi_container_init", 0),
STACK_USAGE("acpi_container_offline", 24),
STACK_USAGE("acpi_container_release", 0),
STACK_USAGE("container_device_attach", 24),
STACK_USAGE("container_device_detach", 0),
STACK_USAGE("container_device_online", 0),
STACK_USAGE("cppc_get_perf", 48),
STACK_USAGE("cppc_get_desired_perf", 0),
STACK_USAGE("cppc_get_nominal_perf", 0),
STACK_USAGE("cppc_get_perf_caps", 152),
STACK_USAGE("cppc_get_perf_ctrs", 120),
STACK_USAGE("cppc_set_enable", 16),
STACK_USAGE("cppc_set_perf", 104),
STACK_USAGE("cppc_get_transition_latency", 0),
STACK_USAGE("show_highest_perf", 48),
STACK_USAGE("show_lowest_perf", 48),
STACK_USAGE("show_nominal_perf", 48),
STACK_USAGE("show_lowest_nonlinear_perf", 48),
STACK_USAGE("show_lowest_freq", 48),
STACK_USAGE("show_nominal_freq", 48),
STACK_USAGE("show_reference_perf", 48),
STACK_USAGE("show_wraparound_time", 48),
STACK_USAGE("show_feedback_ctrs", 48),
STACK_USAGE("check_pcc_chan", 56),
STACK_USAGE("send_pcc_cmd", 56),
STACK_USAGE("cppc_chan_tx_done", 0),
STACK_USAGE("acpi_get_psd", 80),
STACK_USAGE("acpi_cpc_valid", 8),
STACK_USAGE("acpi_get_psd_map", 56),
STACK_USAGE("register_pcc_channel", 16),
STACK_USAGE("cpc_ffh_supported", 0),
STACK_USAGE("pcc_data_alloc", 8),
STACK_USAGE("acpi_cppc_processor_probe", 112),
STACK_USAGE("acpi_cppc_processor_exit", 24),
STACK_USAGE("cpc_read_ffh", 0),
STACK_USAGE("cpc_write_ffh", 0),
STACK_USAGE("cpc_read", 24),
STACK_USAGE("cpc_write", 0),
STACK_USAGE("acpi_debugfs_init", 0),
STACK_USAGE("acpi_subsys_prepare", 24),
STACK_USAGE("acpi_subsys_complete", 8),
STACK_USAGE("acpi_subsys_suspend", 16),
STACK_USAGE("acpi_subsys_suspend_late", 8),
STACK_USAGE("acpi_subsys_suspend_noirq", 8),
STACK_USAGE("acpi_subsys_resume_noirq", 8),
STACK_USAGE("acpi_subsys_resume_early", 16),
STACK_USAGE("acpi_subsys_resume", 16),
STACK_USAGE("acpi_subsys_freeze", 8),
STACK_USAGE("acpi_subsys_restore_early", 8),
STACK_USAGE("acpi_subsys_poweroff", 16),
STACK_USAGE("acpi_subsys_poweroff_late", 8),
STACK_USAGE("acpi_subsys_poweroff_noirq", 8),
STACK_USAGE("acpi_dev_pm_detach", 64),
STACK_USAGE("acpi_dev_pm_attach", 40),
STACK_USAGE("acpi_storage_d3", 32),
STACK_USAGE("acpi_dev_pm_explicit_set", 16),
STACK_USAGE("acpi_dev_state_d0", 8),
STACK_USAGE("acpi_device_set_power", 48),
STACK_USAGE("acpi_bus_set_power", 8),
STACK_USAGE("acpi_bus_init_power", 24),
STACK_USAGE("acpi_power_state_string", 0),
STACK_USAGE("acpi_device_fix_up_power", 16),
STACK_USAGE("acpi_device_update_power", 48),
STACK_USAGE("acpi_bus_update_power", 8),
STACK_USAGE("acpi_bus_power_manageable", 0),
STACK_USAGE("acpi_pm_wakeup_event", 8),
STACK_USAGE("acpi_pm_notify_handler", 16),
STACK_USAGE("acpi_add_pm_notifier", 32),
STACK_USAGE("acpi_remove_pm_notifier", 16),
STACK_USAGE("acpi_bus_can_wakeup", 0),
STACK_USAGE("acpi_pm_device_can_wakeup", 8),
STACK_USAGE("acpi_dev_pm_get_state", 88),
STACK_USAGE("acpi_pm_device_sleep_state", 56),
STACK_USAGE("acpi_pm_notify_work_func", 8),
STACK_USAGE("__acpi_device_wakeup_enable", 16),
STACK_USAGE("acpi_device_get_power", 40),
STACK_USAGE("acpi_pm_set_device_wakeup", 32),
STACK_USAGE("acpi_dev_suspend", 64),
STACK_USAGE("acpi_dev_resume", 24),
STACK_USAGE("acpi_subsys_runtime_suspend", 8),
STACK_USAGE("acpi_subsys_runtime_resume", 8),
STACK_USAGE("acpi_dev_needs_resume", 40),
STACK_USAGE("acpi_hide_nondev_subnodes", 16),
STACK_USAGE("create_pnp_modalias", 48),
STACK_USAGE("create_of_modalias", 72),
STACK_USAGE("__acpi_device_uevent_modalias", 16),
STACK_USAGE("acpi_device_uevent_modalias", 16),
STACK_USAGE("acpi_device_modalias", 32),
STACK_USAGE("modalias_show", 40),
STACK_USAGE("real_power_state_show", 24),
STACK_USAGE("power_state_show", 8),
STACK_USAGE("eject_store", 40),
STACK_USAGE("hid_show", 8),
STACK_USAGE("uid_show", 0),
STACK_USAGE("adr_show", 0),
STACK_USAGE("path_show", 40),
STACK_USAGE("description_show", 8),
STACK_USAGE("data_node_show_path", 40),
STACK_USAGE("sun_show", 24),
STACK_USAGE("hrv_show", 24),
STACK_USAGE("status_show", 24),
STACK_USAGE("acpi_device_setup_files", 56),
STACK_USAGE("acpi_device_remove_files", 16),
STACK_USAGE("acpi_data_node_attr_show", 0),
STACK_USAGE("acpi_data_node_release", 0),
STACK_USAGE("acpi_expose_nondev_subnodes", 32),
STACK_USAGE("register_dock_dependent_device", 24),
STACK_USAGE("is_dock_device", 8),
STACK_USAGE("handle_eject_request", 120),
STACK_USAGE("dock_notify", 136),
STACK_USAGE("docked_show", 8),
STACK_USAGE("flags_show", 0),
STACK_USAGE("undock_store", 16),
STACK_USAGE("uid_show", 32),
STACK_USAGE("type_show", 0),
STACK_USAGE("acpi_dock_add", 224),
STACK_USAGE("int340x_thermal_handler_attach", 0),
STACK_USAGE("acpi_int340x_thermal_init", 0),
STACK_USAGE("acpi_ec_block_transactions", 16),
STACK_USAGE("acpi_ec_unblock_transactions", 24),
STACK_USAGE("acpi_ec_add_query_handler", 48),
STACK_USAGE("acpi_ec_remove_query_handlers", 64),
STACK_USAGE("acpi_ec_remove_query_handler", 0),
STACK_USAGE("acpi_ec_event_processor", 32),
STACK_USAGE("acpi_ec_submit_query", 72),
STACK_USAGE("acpi_ec_event_handler", 32),
STACK_USAGE("acpi_ec_gpe_handler", 24),
STACK_USAGE("acpi_ec_irq_handler", 24),
STACK_USAGE("acpi_ec_space_handler", 112),
STACK_USAGE("acpi_ec_alloc", 8),
STACK_USAGE("acpi_ec_register_query_methods", 72),
STACK_USAGE("ec_parse_device", 32),
STACK_USAGE("acpi_ec_setup", 56),
STACK_USAGE("acpi_ec_add", 24),
STACK_USAGE("acpi_ec_remove", 16),
STACK_USAGE("ec_parse_io_ports", 0),
STACK_USAGE("acpi_ec_dsdt_probe", 8),
STACK_USAGE("acpi_ec_ecdt_start", 24),
STACK_USAGE("ec_clear_on_resume", 0),
STACK_USAGE("ec_correct_ecdt", 0),
STACK_USAGE("ec_honor_dsdt_gpe", 0),
STACK_USAGE("ec_honor_ecdt_gpe", 0),
STACK_USAGE("acpi_ec_ecdt_probe", 24),
STACK_USAGE("acpi_ec_suspend", 24),
STACK_USAGE("acpi_ec_suspend_noirq", 24),
STACK_USAGE("acpi_ec_resume_noirq", 24),
STACK_USAGE("acpi_ec_resume", 0),
STACK_USAGE("acpi_ec_mark_gpe_for_wake", 0),
STACK_USAGE("acpi_ec_set_gpe_wake_mask", 0),
STACK_USAGE("acpi_ec_dispatch_gpe", 48),
STACK_USAGE("param_set_event_clearing", 8),
STACK_USAGE("param_get_event_clearing", 0),
STACK_USAGE("acpi_ec_init", 0),
STACK_USAGE("acpi_ec_enable_gpe", 24),
STACK_USAGE("acpi_ec_unmask_events", 24),
STACK_USAGE("acpi_ec_close_event", 0),
STACK_USAGE("acpi_ec_enable_event", 32),
STACK_USAGE("acpi_ec_flush_work", 0),
STACK_USAGE("advance_transaction", 56),
STACK_USAGE("ec_guard", 112),
STACK_USAGE("acpi_ec_transaction", 72),
STACK_USAGE("ec_read", 48),
STACK_USAGE("ec_write", 40),
STACK_USAGE("ec_transaction", 32),
STACK_USAGE("ec_get_handle", 0),
STACK_USAGE("acpi_ec_stop", 96),
STACK_USAGE("acpi_event_init", 0),
STACK_USAGE("acpi_notifier_call_chain", 88),
STACK_USAGE("register_acpi_notifier", 0),
STACK_USAGE("unregister_acpi_notifier", 0),
STACK_USAGE("acpi_bus_generate_netlink_event", 72),
STACK_USAGE("ged_probe", 32),
STACK_USAGE("ged_shutdown", 40),
STACK_USAGE("ged_remove", 40),
STACK_USAGE("ged_driver_init", 0),
STACK_USAGE("acpi_ged_irq_handler", 8),
STACK_USAGE("acpi_ged_request_interrupt", 144),
STACK_USAGE("acpi_fan_delete_attributes", 40),
STACK_USAGE("show_state", 32),
STACK_USAGE("show_fan_speed", 40),
STACK_USAGE("show_fine_grain_control", 0),
STACK_USAGE("acpi_fan_create_attributes", 72),
STACK_USAGE("fan_get_cur_state", 48),
STACK_USAGE("fan_set_cur_state", 0),
STACK_USAGE("acpi_fan_speed_cmp", 0),
STACK_USAGE("acpi_fan_probe", 184),
STACK_USAGE("acpi_fan_remove", 24),
STACK_USAGE("acpi_fan_suspend", 8),
STACK_USAGE("acpi_fan_resume", 24),
STACK_USAGE("acpi_fan_driver_exit", 0),
STACK_USAGE("acpi_fan_driver_init", 0),
STACK_USAGE("fan_get_max_state", 0),
STACK_USAGE("acpi_fan_get_fst", 56),
STACK_USAGE("acpi_find_child_device", 72),
STACK_USAGE("acpi_bind_one", 104),
STACK_USAGE("acpi_unbind_one", 72),
STACK_USAGE("acpi_device_notify", 32),
STACK_USAGE("register_acpi_bus_type", 8),
STACK_USAGE("acpi_device_notify_remove", 16),
STACK_USAGE("unregister_acpi_bus_type", 8),
STACK_USAGE("acpi_ioapic_add", 24),
STACK_USAGE("pci_ioapic_remove", 32),
STACK_USAGE("acpi_ioapic_remove", 56),
STACK_USAGE("setup_res", 96),
STACK_USAGE("handle_ioapic_add", 80),
STACK_USAGE("slit_valid", 8),
STACK_USAGE("bad_srat", 0),
STACK_USAGE("srat_disabled", 0),
STACK_USAGE("acpi_numa_slit_init", 40),
STACK_USAGE("acpi_numa_memory_affinity_init", 48),
STACK_USAGE("acpi_parse_cfmws", 0),
STACK_USAGE("disable_srat", 0),
STACK_USAGE("acpi_parse_slit", 8),
STACK_USAGE("acpi_numa_x2apic_affinity_init", 0),
STACK_USAGE("acpi_parse_x2apic_affinity", 8),
STACK_USAGE("acpi_parse_processor_affinity", 8),
STACK_USAGE("pxm_to_node", 0),
STACK_USAGE("acpi_parse_gicc_affinity", 0),
STACK_USAGE("acpi_parse_gi_affinity", 16),
STACK_USAGE("acpi_parse_memory_affinity", 8),
STACK_USAGE("node_to_pxm", 0),
STACK_USAGE("acpi_parse_srat", 0),
STACK_USAGE("acpi_numa_init", 184),
STACK_USAGE("acpi_get_node", 48),
STACK_USAGE("acpi_map_pxm_to_node", 0),
STACK_USAGE("suspend_nvs_free", 16),
STACK_USAGE("suspend_nvs_alloc", 24),
STACK_USAGE("suspend_nvs_save", 40),
STACK_USAGE("suspend_nvs_restore", 16),
STACK_USAGE("acpi_nvs_register", 40),
STACK_USAGE("acpi_nvs_for_each_region", 32),
STACK_USAGE("__acpi_osi_setup_darwin", 8),
STACK_USAGE("acpi_osi_setup_late", 16),
STACK_USAGE("osi_setup", 8),
STACK_USAGE("acpi_osi_is_win8", 0),
STACK_USAGE("acpi_osi_dmi_darwin", 0),
STACK_USAGE("acpi_osi_dmi_linux", 0),
STACK_USAGE("dmi_enable_osi_linux", 0),
STACK_USAGE("dmi_disable_osi_vista", 0),
STACK_USAGE("dmi_disable_osi_win7", 0),
STACK_USAGE("dmi_disable_osi_win8", 0),
STACK_USAGE("acpi_osi_dmi_blacklisted", 0),
STACK_USAGE("early_acpi_osi_init", 0),
STACK_USAGE("acpi_osi_init", 0),
STACK_USAGE("acpi_osi_handler", 16),
STACK_USAGE("acpi_osi_setup", 32),
STACK_USAGE("acpi_os_execute", 32),
STACK_USAGE("acpi_reserve_resources", 0),
STACK_USAGE("acpi_os_wait_events_complete", 0),
STACK_USAGE("acpi_hotplug_work_fn", 8),
STACK_USAGE("acpi_hotplug_schedule", 32),
STACK_USAGE("acpi_queue_hotplug_work", 0),
STACK_USAGE("acpi_os_create_semaphore", 40),
STACK_USAGE("acpi_os_delete_semaphore", 0),
STACK_USAGE("acpi_os_wait_semaphore", 8),
STACK_USAGE("acpi_os_signal_semaphore", 0),
STACK_USAGE("acpi_os_get_line", 0),
STACK_USAGE("acpi_os_wait_command_ready", 0),
STACK_USAGE("acpi_os_notify_command_complete", 0),
STACK_USAGE("acpi_os_signal", 0),
STACK_USAGE("acpi_os_name_setup", 0),
STACK_USAGE("acpi_no_auto_serialize_setup", 0),
STACK_USAGE("acpi_enforce_resources_setup", 8),
STACK_USAGE("acpi_os_printf", 88),
STACK_USAGE("acpi_check_resource_conflict", 0),
STACK_USAGE("acpi_check_region", 8),
STACK_USAGE("acpi_deactivate_mem_region", 32),
STACK_USAGE("acpi_os_vprintf", 0),
STACK_USAGE("acpi_release_memory", 0),
STACK_USAGE("acpi_resources_are_enforced", 0),
STACK_USAGE("acpi_os_delete_lock", 0),
STACK_USAGE("acpi_os_acquire_lock", 0),
STACK_USAGE("acpi_os_release_lock", 0),
STACK_USAGE("acpi_os_create_cache", 8),
STACK_USAGE("acpi_os_purge_cache", 0),
STACK_USAGE("acpi_os_delete_cache", 0),
STACK_USAGE("acpi_os_release_object", 0),
STACK_USAGE("acpi_no_static_ssdt_setup", 0),
STACK_USAGE("acpi_disable_return_repair", 0),
STACK_USAGE("acpi_os_initialize", 0),
STACK_USAGE("acpi_os_initialize1", 0),
STACK_USAGE("acpi_os_terminate", 0),
STACK_USAGE("acpi_os_prepare_sleep", 0),
STACK_USAGE("acpi_os_set_prepare_sleep", 0),
STACK_USAGE("setup_acpi_rsdp", 0),
STACK_USAGE("acpi_os_prepare_extended_sleep", 0),
STACK_USAGE("acpi_os_set_prepare_extended_sleep", 0),
STACK_USAGE("acpi_os_enter_sleep", 0),
STACK_USAGE("acpi_os_get_root_pointer", 24),
STACK_USAGE("acpi_os_get_iomem", 24),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("acpi_os_map_iomem", 40),
STACK_USAGE("acpi_os_map_memory", 0),
STACK_USAGE("acpi_os_map_remove", 16),
STACK_USAGE("acpi_os_unmap_iomem", 24),
STACK_USAGE("acpi_os_unmap_memory", 0),
STACK_USAGE("acpi_os_map_generic_address", 0),
STACK_USAGE("acpi_os_unmap_generic_address", 16),
STACK_USAGE("acpi_rev_override_setup", 0),
STACK_USAGE("acpi_os_predefined_override", 24),
STACK_USAGE("acpi_irq", 0),
STACK_USAGE("acpi_os_install_interrupt_handler", 48),
STACK_USAGE("acpi_os_remove_interrupt_handler", 0),
STACK_USAGE("acpi_os_sleep", 0),
STACK_USAGE("acpi_os_stall", 16),
STACK_USAGE("acpi_os_get_timer", 0),
STACK_USAGE("acpi_os_read_port", 4),
STACK_USAGE("acpi_os_write_port", 0),
STACK_USAGE("acpi_os_read_iomem", 0),
STACK_USAGE("acpi_os_read_memory", 48),
STACK_USAGE("acpi_os_write_memory", 40),
STACK_USAGE("acpi_os_read_pci_configuration", 24),
STACK_USAGE("acpi_os_write_pci_configuration", 0),
STACK_USAGE("acpi_os_execute_deferred", 8),
STACK_USAGE("acpi_request_region", 0),
STACK_USAGE("acpi_pci_irq_find_prt_entry", 104),
STACK_USAGE("acpi_pci_irq_lookup", 56),
STACK_USAGE("acpi_pci_irq_enable", 88),
STACK_USAGE("acpi_pci_irq_disable", 24),
STACK_USAGE("acpi_pci_link_check_current", 0),
STACK_USAGE("acpi_pci_link_get_current", 40),
STACK_USAGE("acpi_pci_link_set", 64),
STACK_USAGE("acpi_irq_penalty_init", 0),
STACK_USAGE("acpi_pci_link_allocate_irq", 112),
STACK_USAGE("acpi_pci_link_free_irq", 16),
STACK_USAGE("acpi_pci_link_add", 32),
STACK_USAGE("irqrouter_resume", 16),
STACK_USAGE("acpi_pci_link_remove", 8),
STACK_USAGE("acpi_irq_penalty_update", 64),
STACK_USAGE("acpi_penalize_isa_irq", 0),
STACK_USAGE("acpi_isa_irq_available", 0),
STACK_USAGE("acpi_penalize_sci_irq", 0),
STACK_USAGE("acpi_pci_link_check_possible", 0),
STACK_USAGE("acpi_irq_isa", 0),
STACK_USAGE("acpi_irq_pci", 0),
STACK_USAGE("acpi_irq_nobalance_set", 0),
STACK_USAGE("acpi_irq_balance_set", 0),
STACK_USAGE("acpi_pci_link_init", 0),
STACK_USAGE("decode_osc_bits", 136),
STACK_USAGE("acpi_pci_find_root", 8),
STACK_USAGE("acpi_get_pci_dev", 88),
STACK_USAGE("acpi_pci_root_scan_dependent", 0),
STACK_USAGE("acpi_dev_filter_resource_type_cb", 0),
STACK_USAGE("acpi_pci_root_add", 208),
STACK_USAGE("acpi_pci_root_remove", 16),
STACK_USAGE("acpi_is_root_bridge", 0),
STACK_USAGE("acpi_pci_root_validate_resources", 96),
STACK_USAGE("acpi_pci_probe_root_resources", 56),
STACK_USAGE("get_root_bridge_busnr_callback", 80),
STACK_USAGE("acpi_pci_root_release_info", 48),
STACK_USAGE("acpi_pci_root_create", 80),
STACK_USAGE("acpi_pci_root_init", 0),
STACK_USAGE("acpi_turn_off_unused_power_resources", 24),
STACK_USAGE("acpi_power_resources_list_free", 32),
STACK_USAGE("acpi_extract_power_resources", 80),
STACK_USAGE("acpi_power_get_state", 32),
STACK_USAGE("acpi_device_power_add_dependent", 48),
STACK_USAGE("acpi_device_power_remove_dependent", 48),
STACK_USAGE("__acpi_power_on", 32),
STACK_USAGE("acpi_power_on", 40),
STACK_USAGE("acpi_power_off_list", 32),
STACK_USAGE("acpi_power_on_list", 40),
STACK_USAGE("acpi_power_expose_hide", 40),
STACK_USAGE("acpi_power_add_remove_device", 16),
STACK_USAGE("acpi_power_wakeup_list_init", 64),
STACK_USAGE("acpi_device_sleep_wake", 120),
STACK_USAGE("acpi_enable_wakeup_device_power", 40),
STACK_USAGE("acpi_disable_wakeup_device_power", 184),
STACK_USAGE("acpi_power_get_inferred_state", 80),
STACK_USAGE("acpi_power_on_resources", 0),
STACK_USAGE("acpi_power_transition", 24),
STACK_USAGE("acpi_release_power_resource", 16),
STACK_USAGE("resource_in_use_show", 0),
STACK_USAGE("acpi_power_sysfs_remove", 0),
STACK_USAGE("acpi_power_add_resource_to_list", 8),
STACK_USAGE("acpi_add_power_resource", 80),
STACK_USAGE("acpi_resume_power_resources", 64),
STACK_USAGE("acpi_platformrt_space_handler", 88),
STACK_USAGE("init_prmt", 24),
STACK_USAGE("efi_pa_va_lookup", 0),
STACK_USAGE("acpi_parse_prmt", 48),
STACK_USAGE("acpi_system_wakeup_device_open_fs", 0),
STACK_USAGE("acpi_sleep_proc_init", 0),
STACK_USAGE("acpi_system_wakeup_device_seq_show", 56),
STACK_USAGE("acpi_system_write_wakeup_device", 64),
STACK_USAGE("map_madt_entry", 0),
STACK_USAGE("acpi_map_madt_entry", 32),
STACK_USAGE("acpi_get_phys_id", 48),
STACK_USAGE("acpi_map_cpuid", 16),
STACK_USAGE("acpi_get_cpuid", 24),
STACK_USAGE("acpi_get_ioapic_id", 48),
STACK_USAGE("acpi_soft_cpu_dead", 8),
STACK_USAGE("__acpi_processor_start", 32),
STACK_USAGE("acpi_processor_start", 8),
STACK_USAGE("acpi_processor_stop", 16),
STACK_USAGE("acpi_processor_notifier", 8),
STACK_USAGE("acpi_processor_driver_init", 8),
STACK_USAGE("acpi_processor_driver_exit", 0),
STACK_USAGE("acpi_processor_notify", 24),
STACK_USAGE("acpi_soft_cpu_online", 16),
STACK_USAGE("acpi_processor_ffh_lpi_probe", 0),
STACK_USAGE("acpi_processor_ffh_lpi_enter", 0),
STACK_USAGE("acpi_idle_lpi_enter", 8),
STACK_USAGE("acpi_processor_setup_cpuidle_states", 40),
STACK_USAGE("acpi_processor_setup_cpuidle_dev", 0),
STACK_USAGE("acpi_processor_get_power_info", 280),
STACK_USAGE("acpi_processor_hotplug", 24),
STACK_USAGE("acpi_processor_power_state_has_changed", 24),
STACK_USAGE("acpi_processor_power_init", 16),
STACK_USAGE("acpi_processor_power_exit", 8),
STACK_USAGE("__lapic_timer_propagate_broadcast", 0),
STACK_USAGE("acpi_cst_latency_cmp", 0),
STACK_USAGE("acpi_cst_latency_swap", 0),
STACK_USAGE("acpi_idle_do_entry", 16),
STACK_USAGE("acpi_idle_play_dead", 8),
STACK_USAGE("acpi_idle_enter_bm", 56),
STACK_USAGE("acpi_idle_enter", 32),
STACK_USAGE("acpi_idle_enter_s2idle", 32),
STACK_USAGE("set_max_cstate", 8),
STACK_USAGE("acpi_processor_evaluate_lpi", 64),
STACK_USAGE("acpi_processor_set_pdc", 24),
STACK_USAGE("early_init_pdc", 8),
STACK_USAGE("set_no_mwait", 0),
STACK_USAGE("acpi_early_processor_set_pdc", 0),
STACK_USAGE("processor_physically_present", 80),
STACK_USAGE("acpi_processor_ppc_has_changed", 32),
STACK_USAGE("acpi_processor_get_bios_limit", 0),
STACK_USAGE("acpi_processor_ignore_ppc_init", 0),
STACK_USAGE("acpi_processor_ppc_init", 24),
STACK_USAGE("acpi_processor_ppc_exit", 24),
STACK_USAGE("acpi_processor_get_performance_info", 112),
STACK_USAGE("acpi_processor_pstate_control", 16),
STACK_USAGE("acpi_processor_notify_smm", 24),
STACK_USAGE("acpi_processor_get_psd", 80),
STACK_USAGE("acpi_processor_get_platform_limit", 32),
STACK_USAGE("acpi_processor_preregister_performance", 88),
STACK_USAGE("acpi_processor_register_performance", 24),
STACK_USAGE("acpi_processor_unregister_performance", 8),
STACK_USAGE("acpi_thermal_cpufreq_init", 24),
STACK_USAGE("acpi_thermal_cpufreq_exit", 32),
STACK_USAGE("processor_get_max_state", 24),
STACK_USAGE("processor_get_cur_state", 48),
STACK_USAGE("processor_set_cur_state", 40),
STACK_USAGE("cpufreq_set_cur_state", 72),
STACK_USAGE("acpi_processor_set_throttling_ptc", 24),
STACK_USAGE("acpi_processor_throttling_fn", 0),
STACK_USAGE("__acpi_processor_set_throttling", 88),
STACK_USAGE("acpi_processor_set_throttling", 0),
STACK_USAGE("acpi_processor_get_throttling_info", 104),
STACK_USAGE("acpi_processor_throttling_init", 88),
STACK_USAGE("acpi_processor_tstate_has_changed", 32),
STACK_USAGE("acpi_processor_reevaluate_tstate", 24),
STACK_USAGE("acpi_processor_get_throttling_fadt", 40),
STACK_USAGE("acpi_processor_get_throttling_ptc", 40),
STACK_USAGE("__acpi_processor_get_throttling", 0),
STACK_USAGE("acpi_processor_set_throttling_fadt", 48),
STACK_USAGE("acpi_node_prop_read", 96),
STACK_USAGE("acpi_get_next_subnode", 0),
STACK_USAGE("acpi_node_get_parent", 0),
STACK_USAGE("acpi_graph_get_next_endpoint", 40),
STACK_USAGE("acpi_graph_get_remote_endpoint", 144),
STACK_USAGE("acpi_fwnode_device_is_available", 0),
STACK_USAGE("acpi_fwnode_property_present", 48),
STACK_USAGE("acpi_fwnode_property_read_int_array", 0),
STACK_USAGE("acpi_fwnode_property_read_string_array", 0),
STACK_USAGE("acpi_fwnode_get_reference_args", 0),
STACK_USAGE("acpi_fwnode_get_name", 8),
STACK_USAGE("acpi_fwnode_get_name_prefix", 8),
STACK_USAGE("acpi_fwnode_get_parent", 0),
STACK_USAGE("acpi_fwnode_graph_parse_endpoint", 24),
STACK_USAGE("acpi_fwnode_device_get_match_data", 0),
STACK_USAGE("is_acpi_device_node", 0),
STACK_USAGE("is_acpi_data_node", 0),
STACK_USAGE("acpi_enumerate_nondev_subnodes", 112),
STACK_USAGE("acpi_data_add_props", 24),
STACK_USAGE("acpi_extract_properties", 64),
STACK_USAGE("acpi_init_properties", 112),
STACK_USAGE("acpi_destroy_nondev_subnodes", 48),
STACK_USAGE("acpi_free_properties", 32),
STACK_USAGE("acpi_dev_get_property", 72),
STACK_USAGE("acpi_node_prop_get", 64),
STACK_USAGE("acpi_fwnode_get_named_child_node", 40),
STACK_USAGE("acpi_nondev_subnode_extract", 72),
STACK_USAGE("__acpi_node_get_property_reference", 80),
STACK_USAGE("acpi_reboot", 8),
STACK_USAGE("acpi_dev_resource_memory", 0),
STACK_USAGE("acpi_dev_resource_io", 0),
STACK_USAGE("acpi_decode_space", 0),
STACK_USAGE("acpi_dev_resource_address_space", 80),
STACK_USAGE("acpi_dev_resource_ext_address_space", 0),
STACK_USAGE("acpi_dev_irq_flags", 0),
STACK_USAGE("acpi_dev_get_irq_type", 0),
STACK_USAGE("acpi_dev_get_irqresource", 64),
STACK_USAGE("acpi_dev_resource_interrupt", 16),
STACK_USAGE("acpi_dev_free_resource_list", 0),
STACK_USAGE("acpi_dev_process_resource", 184),
STACK_USAGE("acpi_dev_get_resources", 72),
STACK_USAGE("is_memory", 152),
STACK_USAGE("acpi_dev_get_dma_resources", 56),
STACK_USAGE("acpi_dev_filter_resource_type", 0),
STACK_USAGE("acpi_res_consumer_cb", 104),
STACK_USAGE("acpi_resource_consumer", 16),
STACK_USAGE("acpi_scan_is_offline", 72),
STACK_USAGE("acpi_ata_match", 8),
STACK_USAGE("acpi_bay_match", 32),
STACK_USAGE("acpi_device_is_battery", 16),
STACK_USAGE("acpi_dock_match", 0),
STACK_USAGE("acpi_backlight_cap_match", 24),
STACK_USAGE("acpi_is_video_device", 32),
STACK_USAGE("acpi_device_hid", 0),
STACK_USAGE("acpi_bus_offline", 64),
STACK_USAGE("acpi_free_pnp_ids", 32),
STACK_USAGE("acpi_dma_supported", 0),
STACK_USAGE("acpi_get_dma_attr", 0),
STACK_USAGE("acpi_dma_get_range", 72),
STACK_USAGE("acpi_iommu_fwspec_init", 24),
STACK_USAGE("acpi_dma_configure_id", 0),
STACK_USAGE("acpi_check_serial_bus_slave", 0),
STACK_USAGE("acpi_init_device_object", 104),
STACK_USAGE("acpi_device_add_finalize", 0),
STACK_USAGE("acpi_bus_online", 40),
STACK_USAGE("acpi_add_single_object", 104),
STACK_USAGE("acpi_get_resource_memory", 0),
STACK_USAGE("acpi_device_is_present", 0),
STACK_USAGE("acpi_scan_hotplug_enabled", 16),
STACK_USAGE("acpi_scan_check_dep", 168),
STACK_USAGE("acpi_bus_check_add", 152),
STACK_USAGE("acpi_bus_check_add_1", 0),
STACK_USAGE("acpi_bus_check_add_2", 0),
STACK_USAGE("acpi_default_enumeration", 8),
STACK_USAGE("acpi_generic_device_attach", 8),
STACK_USAGE("acpi_bus_attach", 104),
STACK_USAGE("acpi_scan_clear_dep_fn", 8),
STACK_USAGE("acpi_dev_clear_dependencies", 64),
STACK_USAGE("acpi_dev_ready_for_enumeration", 0),
STACK_USAGE("acpi_dev_get_first_consumer_dev", 56),
STACK_USAGE("acpi_bus_scan", 40),
STACK_USAGE("acpi_bus_trim", 32),
STACK_USAGE("acpi_bus_register_early_device", 16),
STACK_USAGE("acpi_get_spcr_uart_addr", 16),
STACK_USAGE("acpi_scan_init", 40),
STACK_USAGE("acpi_match_madt", 16),
STACK_USAGE("__acpi_probe_device_table", 24),
STACK_USAGE("acpi_table_events_fn", 8),
STACK_USAGE("acpi_scan_table_notify", 8),
STACK_USAGE("acpi_reconfig_notifier_register", 0),
STACK_USAGE("acpi_reconfig_notifier_unregister", 0),
STACK_USAGE("acpi_scan_bus_check", 24),
STACK_USAGE("acpi_device_hotplug", 104),
STACK_USAGE("acpi_device_release", 40),
STACK_USAGE("acpi_device_del_work_fn", 56),
STACK_USAGE("acpi_scan_drop_device", 8),
STACK_USAGE("acpi_scan_lock_acquire", 0),
STACK_USAGE("acpi_fetch_acpi_dev", 24),
STACK_USAGE("get_acpi_device", 0),
STACK_USAGE("acpi_bus_get_acpi_device", 16),
STACK_USAGE("acpi_scan_lock_release", 0),
STACK_USAGE("acpi_lock_hp_context", 0),
STACK_USAGE("__acpi_device_add", 80),
STACK_USAGE("acpi_unlock_hp_context", 0),
STACK_USAGE("acpi_device_add", 24),
STACK_USAGE("acpi_initialize_hp_context", 32),
STACK_USAGE("acpi_bus_get_ejd", 56),
STACK_USAGE("acpi_scan_add_handler", 0),
STACK_USAGE("acpi_scan_add_handler_with_hotplug", 0),
STACK_USAGE("acpi_power_off_prepare", 0),
STACK_USAGE("acpi_power_off", 16),
STACK_USAGE("acpi_sleep_init", 72),
STACK_USAGE("acpi_nvs_nosave", 0),
STACK_USAGE("acpi_nvs_nosave_s3", 0),
STACK_USAGE("init_nvs_save_s3", 0),
STACK_USAGE("acpi_old_suspend_ordering", 0),
STACK_USAGE("init_old_suspend_ordering", 0),
STACK_USAGE("init_nvs_nosave", 0),
STACK_USAGE("init_default_s3", 0),
STACK_USAGE("trace_suspend_resume", 0),
STACK_USAGE("acpi_sleep_no_blacklist", 0),
STACK_USAGE("acpi_sleep_dmi_check", 0),
STACK_USAGE("acpi_pm_freeze", 0),
STACK_USAGE("acpi_pm_pre_suspend", 0),
STACK_USAGE("acpi_pm_prepare", 8),
STACK_USAGE("acpi_pm_finish", 8),
STACK_USAGE("acpi_pm_end", 0),
STACK_USAGE("tts_notify_reboot", 0),
STACK_USAGE("acpi_suspend_begin", 16),
STACK_USAGE("acpi_suspend_enter", 40),
STACK_USAGE("acpi_suspend_state_valid", 0),
STACK_USAGE("acpi_suspend_begin_old", 8),
STACK_USAGE("acpi_s2idle_begin", 0),
STACK_USAGE("acpi_s2idle_prepare", 0),
STACK_USAGE("acpi_s2idle_wake", 16),
STACK_USAGE("acpi_s2idle_restore", 0),
STACK_USAGE("acpi_s2idle_end", 0),
STACK_USAGE("acpi_s2idle_setup", 0),
STACK_USAGE("acpi_s2idle_wakeup", 0),
STACK_USAGE("acpi_sleep_state_supported", 16),
STACK_USAGE("acpi_save_bm_rld", 0),
STACK_USAGE("acpi_restore_bm_rld", 16),
STACK_USAGE("acpi_hibernation_begin", 16),
STACK_USAGE("acpi_hibernation_enter", 8),
STACK_USAGE("acpi_hibernation_leave", 0),
STACK_USAGE("acpi_pm_thaw", 0),
STACK_USAGE("acpi_hibernation_begin_old", 8),
STACK_USAGE("acpi_target_system_state", 0),
STACK_USAGE("acpi_parse_spcr", 56),
STACK_USAGE("param_get_acpica_version", 0),
STACK_USAGE("acpi_table_show", 48),
STACK_USAGE("acpi_table_attr_init", 64),
STACK_USAGE("acpi_sysfs_table_handler", 16),
STACK_USAGE("acpi_data_show", 48),
STACK_USAGE("acpi_global_event_handler", 0),
STACK_USAGE("counter_show", 56),
STACK_USAGE("counter_set", 80),
STACK_USAGE("acpi_gpe_set_masked_gpes", 24),
STACK_USAGE("acpi_gpe_apply_masked_gpes", 32),
STACK_USAGE("acpi_irq_stats_init", 72),
STACK_USAGE("interrupt_stats_exit", 8),
STACK_USAGE("pm_profile_show", 0),
STACK_USAGE("enabled_show", 0),
STACK_USAGE("enabled_store", 32),
STACK_USAGE("acpi_sysfs_add_hotplug_profile", 16),
STACK_USAGE("force_remove_show", 0),
STACK_USAGE("force_remove_store", 24),
STACK_USAGE("acpi_sysfs_init", 56),
STACK_USAGE("acpi_get_subtable_type", 8),
STACK_USAGE("acpi_parse_entries_array", 104),
STACK_USAGE("acpi_table_parse_entries_array", 64),
STACK_USAGE("acpi_table_parse_cedt", 48),
STACK_USAGE("acpi_table_parse_entries", 48),
STACK_USAGE("acpi_table_parse_madt", 48),
STACK_USAGE("acpi_table_parse", 40),
STACK_USAGE("check_multiple_madt", 24),
STACK_USAGE("acpi_table_upgrade", 232),
STACK_USAGE("acpi_table_print_madt_entry", 8),
STACK_USAGE("acpi_table_initrd_scan", 32),
STACK_USAGE("acpi_os_physical_table_override", 56),
STACK_USAGE("acpi_os_table_override", 0),
STACK_USAGE("acpi_locate_initial_tables", 8),
STACK_USAGE("acpi_reserve_initial_tables", 32),
STACK_USAGE("acpi_table_init_complete", 0),
STACK_USAGE("acpi_table_init", 8),
STACK_USAGE("acpi_parse_apic_instance", 8),
STACK_USAGE("acpi_force_table_verification_setup", 0),
STACK_USAGE("acpi_force_32bit_fadt_addr", 0),
STACK_USAGE("acpi_thermal_add", 64),
STACK_USAGE("acpi_thermal_remove", 8),
STACK_USAGE("acpi_thermal_suspend", 0),
STACK_USAGE("acpi_thermal_resume", 72),
STACK_USAGE("thermal_act", 0),
STACK_USAGE("thermal_nocrt", 0),
STACK_USAGE("thermal_tzp", 0),
STACK_USAGE("thermal_psv", 0),
STACK_USAGE("acpi_thermal_init", 8),
STACK_USAGE("acpi_thermal_exit", 0),
STACK_USAGE("acpi_thermal_trips_update", 192),
STACK_USAGE("thermal_get_temp", 40),
STACK_USAGE("thermal_get_trip_type", 0),
STACK_USAGE("thermal_get_trip_temp", 0),
STACK_USAGE("thermal_get_crit_temp", 0),
STACK_USAGE("thermal_get_trend", 56),
STACK_USAGE("acpi_thermal_zone_device_hot", 0),
STACK_USAGE("acpi_thermal_zone_device_critical", 8),
STACK_USAGE("acpi_thermal_cooling_device_cb", 80),
STACK_USAGE("acpi_thermal_bind_cooling_device", 0),
STACK_USAGE("acpi_thermal_unbind_cooling_device", 0),
STACK_USAGE("acpi_thermal_notify", 16),
STACK_USAGE("acpi_thermal_check_fn", 24),
STACK_USAGE("acpi_evaluate_integer", 56),
STACK_USAGE("acpi_get_local_address", 56),
STACK_USAGE("acpi_evaluate_reference", 40),
STACK_USAGE("acpi_extract_package", 72),
STACK_USAGE("acpi_get_physical_device_location", 40),
STACK_USAGE("acpi_evaluate_ost", 104),
STACK_USAGE("acpi_handle_printk", 136),
STACK_USAGE("acpi_evaluation_failure_warn", 16),
STACK_USAGE("acpi_has_method", 16),
STACK_USAGE("acpi_execute_simple_method", 48),
STACK_USAGE("acpi_evaluate_ej0", 64),
STACK_USAGE("acpi_evaluate_lck", 72),
STACK_USAGE("acpi_evaluate_reg", 88),
STACK_USAGE("acpi_evaluate_dsm", 152),
STACK_USAGE("acpi_check_dsm", 168),
STACK_USAGE("acpi_dev_hid_uid_match", 32),
STACK_USAGE("acpi_dev_found", 24),
STACK_USAGE("acpi_dev_match_cb", 72),
STACK_USAGE("acpi_dev_present", 112),
STACK_USAGE("acpi_dev_get_next_match_dev", 136),
STACK_USAGE("acpi_dev_get_first_match_dev", 112),
STACK_USAGE("acpi_reduced_hardware", 0),
STACK_USAGE("acpi_backlight", 0),
STACK_USAGE("acpi_match_platform_list", 88),
STACK_USAGE("acpi_register_wakeup_handler", 32),
STACK_USAGE("acpi_unregister_wakeup_handler", 16),
STACK_USAGE("acpi_check_wakeup_handlers", 16),
STACK_USAGE("acpi_enable_wakeup_devices", 32),
STACK_USAGE("acpi_disable_wakeup_devices", 32),
STACK_USAGE("acpi_wakeup_device_init", 24),
STACK_USAGE("acpi_extract_apple_properties", 136),
STACK_USAGE("lps0_device_attach", 88),
STACK_USAGE("acpi_s2idle_prepare_late", 64),
STACK_USAGE("acpi_s2idle_restore_early", 40),
STACK_USAGE("acpi_s2idle_setup", 0),
STACK_USAGE("acpi_register_lps0_dev", 8),
STACK_USAGE("acpi_unregister_lps0_dev", 8),
STACK_USAGE("acpi_device_override_status", 64),
STACK_USAGE("force_storage_d3", 0),
STACK_USAGE("acpi_quirk_skip_acpi_ac_and_battery", 16),
STACK_USAGE("ahci_mcp89_apple_enable", 32),
STACK_USAGE("ahci_get_irq_vector", 0),
STACK_USAGE("remapped_nvme_show", 0),
STACK_USAGE("ahci_init_one", 200),
STACK_USAGE("ahci_shutdown_one", 0),
STACK_USAGE("ahci_remove_one", 8),
STACK_USAGE("ahci_pci_driver_exit", 0),
STACK_USAGE("ahci_pci_driver_init", 0),
STACK_USAGE("ahci_pci_init_controller", 0),
STACK_USAGE("ahci_vt8251_hardreset", 48),
STACK_USAGE("ahci_p5wdh_hardreset", 96),
STACK_USAGE("ahci_avn_hardreset", 160),
STACK_USAGE("ahci_pci_device_runtime_suspend", 0),
STACK_USAGE("ahci_pci_device_runtime_resume", 16),
STACK_USAGE("ahci_pci_device_suspend", 0),
STACK_USAGE("ahci_pci_device_resume", 16),
STACK_USAGE("ahci_pci_print_info", 24),
STACK_USAGE("piix_pci_device_resume", 24),
STACK_USAGE("piix_vmw_bmdma_status", 0),
STACK_USAGE("piix_init_one", 280),
STACK_USAGE("piix_remove_one", 8),
STACK_USAGE("piix_init", 0),
STACK_USAGE("piix_exit", 0),
STACK_USAGE("piix_port_start", 0),
STACK_USAGE("ich_pata_cable_detect", 0),
STACK_USAGE("piix_pata_prereset", 16),
STACK_USAGE("piix_set_timings", 80),
STACK_USAGE("piix_set_piomode", 0),
STACK_USAGE("do_pata_set_dmamode", 72),
STACK_USAGE("piix_set_dmamode", 0),
STACK_USAGE("ich_set_dmamode", 0),
STACK_USAGE("piix_sidpr_scr_read", 16),
STACK_USAGE("piix_sidpr_scr_write", 16),
STACK_USAGE("piix_sidpr_set_lpm", 0),
STACK_USAGE("piix_irq_check", 16),
STACK_USAGE("piix_pci_device_suspend", 24),
STACK_USAGE("ahci_reset_em", 0),
STACK_USAGE("ahci_transmit_led_message", 64),
STACK_USAGE("ahci_led_show", 40),
STACK_USAGE("ahci_led_store", 40),
STACK_USAGE("ahci_activity_store", 24),
STACK_USAGE("ahci_activity_show", 0),
STACK_USAGE("ahci_init_controller", 64),
STACK_USAGE("ahci_dev_config", 0),
STACK_USAGE("ahci_dev_classify", 40),
STACK_USAGE("ahci_fill_cmd_slot", 0),
STACK_USAGE("ahci_kick_engine", 48),
STACK_USAGE("ahci_exec_polled_cmd", 48),
STACK_USAGE("ahci_do_softreset", 176),
STACK_USAGE("ahci_check_ready", 0),
STACK_USAGE("ahci_softreset", 0),
STACK_USAGE("ahci_bad_pmp_check_ready", 0),
STACK_USAGE("ahci_pmp_retry_softreset", 40),
STACK_USAGE("ahci_do_hardreset", 136),
STACK_USAGE("ahci_hardreset", 16),
STACK_USAGE("ahci_postreset", 24),
STACK_USAGE("ahci_pmp_qc_defer", 0),
STACK_USAGE("ahci_qc_prep", 48),
STACK_USAGE("ahci_error_intr", 72),
STACK_USAGE("ahci_handle_port_interrupt", 56),
STACK_USAGE("ahci_multi_irqs_intr_hard", 24),
STACK_USAGE("ahci_handle_port_intr", 32),
STACK_USAGE("ahci_single_level_irq_intr", 48),
STACK_USAGE("ahci_qc_issue", 0),
STACK_USAGE("ahci_qc_fill_rtf", 16),
STACK_USAGE("ahci_freeze", 0),
STACK_USAGE("ahci_thaw", 0),
STACK_USAGE("ahci_error_handler", 16),
STACK_USAGE("ahci_enable_ahci", 16),
STACK_USAGE("ahci_post_internal_cmd", 40),
STACK_USAGE("ahci_set_aggressive_devslp", 56),
STACK_USAGE("ahci_enable_fbs", 48),
STACK_USAGE("ahci_pmp_attach", 32),
STACK_USAGE("ahci_pmp_detach", 48),
STACK_USAGE("ahci_port_resume", 40),
STACK_USAGE("ahci_port_suspend", 16),
STACK_USAGE("ahci_port_start", 64),
STACK_USAGE("ahci_port_stop", 16),
STACK_USAGE("ahci_print_info", 136),
STACK_USAGE("ahci_set_em_messages", 0),
STACK_USAGE("ahci_show_host_caps", 0),
STACK_USAGE("ahci_host_activate", 56),
STACK_USAGE("ahci_show_host_cap2", 0),
STACK_USAGE("ahci_show_host_version", 0),
STACK_USAGE("ahci_show_port_cmd", 32),
STACK_USAGE("ahci_read_em_buffer", 64),
STACK_USAGE("ahci_store_em_buffer", 48),
STACK_USAGE("ahci_show_em_supported", 32),
STACK_USAGE("ahci_save_initial_config", 56),
STACK_USAGE("ahci_scr_read", 0),
STACK_USAGE("ahci_scr_write", 0),
STACK_USAGE("ahci_start_engine", 0),
STACK_USAGE("ahci_stop_engine", 16),
STACK_USAGE("ahci_start_fis_rx", 0),
STACK_USAGE("ahci_set_lpm", 64),
STACK_USAGE("ahci_reset_controller", 32),
STACK_USAGE("ahci_sw_activity_blink", 32),
STACK_USAGE("ata_acpi_handle_hotplug", 40),
STACK_USAGE("ata_acpi_on_disable", 8),
STACK_USAGE("ata_acpi_dev_notify_dock", 0),
STACK_USAGE("ata_acpi_ap_notify_dock", 0),
STACK_USAGE("ata_acpi_ap_uevent", 72),
STACK_USAGE("ata_acpi_dev_uevent", 72),
STACK_USAGE("ata_acpi_bind_port", 48),
STACK_USAGE("ata_acpi_bind_dev", 40),
STACK_USAGE("ata_acpi_dissociate", 168),
STACK_USAGE("ata_acpi_gtm", 56),
STACK_USAGE("ata_acpi_stm", 152),
STACK_USAGE("ata_dev_get_GTF", 56),
STACK_USAGE("ata_acpi_gtm_xfermask", 24),
STACK_USAGE("ata_acpi_cbl_80wire", 64),
STACK_USAGE("ata_dev_acpi_handle", 8),
STACK_USAGE("ata_acpi_on_resume", 168),
STACK_USAGE("ata_acpi_set_state", 48),
STACK_USAGE("ata_acpi_on_devcfg", 216),
STACK_USAGE("ata_id_string", 0),
STACK_USAGE("ata_id_c_string", 16),
STACK_USAGE("ata_id_n_sectors", 0),
STACK_USAGE("ata_tf_to_lba48", 0),
STACK_USAGE("ata_tf_to_lba", 0),
STACK_USAGE("ata_id_xfermask", 0),
STACK_USAGE("ata_qc_complete_internal", 0),
STACK_USAGE("ata_exec_internal_sg", 200),
STACK_USAGE("ata_exec_internal", 88),
STACK_USAGE("ata_pio_need_iordy", 0),
STACK_USAGE("ata_do_dev_read_id", 64),
STACK_USAGE("ata_dev_read_id", 152),
STACK_USAGE("__bpf_trace_ata_qc_issue_template", 0),
STACK_USAGE("perf_trace_ata_qc_issue_template", 56),
STACK_USAGE("trace_event_raw_event_ata_qc_issue_template", 72),
STACK_USAGE("trace_raw_output_ata_qc_issue_template", 136),
STACK_USAGE("ata_link_next", 0),
STACK_USAGE("ata_read_log_page", 144),
STACK_USAGE("ata_identify_page_supported", 40),
STACK_USAGE("ata_dev_config_sense_reporting", 40),
STACK_USAGE("ata_dev_config_zac", 16),
STACK_USAGE("ata_dev_config_trusted", 16),
STACK_USAGE("ata_dev_config_lba", 104),
STACK_USAGE("ata_dev_config_chs", 0),
STACK_USAGE("ata_dev_config_devslp", 16),
STACK_USAGE("__traceiter_ata_qc_prep", 16),
STACK_USAGE("ata_dev_config_cpr", 32),
STACK_USAGE("__traceiter_ata_qc_issue", 16),
STACK_USAGE("ata_dev_next", 0),
STACK_USAGE("ata_dev_print_features", 8),
STACK_USAGE("__bpf_trace_ata_qc_complete_template", 0),
STACK_USAGE("perf_trace_ata_qc_complete_template", 56),
STACK_USAGE("trace_event_raw_event_ata_qc_complete_template", 72),
STACK_USAGE("trace_raw_output_ata_qc_complete_template", 128),
STACK_USAGE("ata_dev_configure", 168),
STACK_USAGE("ata_cable_40wire", 0),
STACK_USAGE("ata_cable_80wire", 0),
STACK_USAGE("ata_cable_unknown", 0),
STACK_USAGE("ata_cable_ignore", 0),
STACK_USAGE("ata_cable_sata", 0),
STACK_USAGE("ata_bus_probe", 88),
STACK_USAGE("ata_dev_phys_link", 0),
STACK_USAGE("ata_dev_pair", 0),
STACK_USAGE("__traceiter_ata_qc_complete_internal", 16),
STACK_USAGE("trace_ata_qc_complete_internal", 0),
STACK_USAGE("sata_down_spd_limit", 48),
STACK_USAGE("__traceiter_ata_qc_complete_failed", 16),
STACK_USAGE("trace_ata_qc_complete_failed", 0),
STACK_USAGE("ata_timing_cycle2mode", 16),
STACK_USAGE("__traceiter_ata_qc_complete_done", 16),
STACK_USAGE("__bpf_trace_ata_tf_load", 0),
STACK_USAGE("__traceiter_ata_tf_load", 24),
STACK_USAGE("perf_trace_ata_tf_load", 64),
STACK_USAGE("trace_event_raw_event_ata_tf_load", 80),
STACK_USAGE("trace_raw_output_ata_tf_load", 128),
STACK_USAGE("ata_down_xfermask_limit", 120),
STACK_USAGE("ata_force_cbl", 0),
STACK_USAGE("ata_do_set_mode", 168),
STACK_USAGE("ata_wait_ready", 96),
STACK_USAGE("ata_wait_after_reset", 32),
STACK_USAGE("ata_std_prereset", 24),
STACK_USAGE("sata_std_hardreset", 16),
STACK_USAGE("ata_std_postreset", 32),
STACK_USAGE("__bpf_trace_ata_exec_command_template", 0),
STACK_USAGE("perf_trace_ata_exec_command_template", 72),
STACK_USAGE("trace_event_raw_event_ata_exec_command_template", 88),
STACK_USAGE("trace_raw_output_ata_exec_command_template", 64),
STACK_USAGE("ata_dev_reread_id", 216),
STACK_USAGE("ata_dev_revalidate", 40),
STACK_USAGE("__traceiter_ata_exec_command", 32),
STACK_USAGE("__traceiter_ata_bmdma_setup", 32),
STACK_USAGE("ata_dev_blacklisted", 120),
STACK_USAGE("__traceiter_ata_bmdma_start", 32),
STACK_USAGE("__traceiter_ata_bmdma_stop", 32),
STACK_USAGE("__bpf_trace_ata_bmdma_status", 0),
STACK_USAGE("__traceiter_ata_bmdma_status", 24),
STACK_USAGE("perf_trace_ata_bmdma_status", 64),
STACK_USAGE("trace_event_raw_event_ata_bmdma_status", 80),
STACK_USAGE("trace_raw_output_ata_bmdma_status", 32),
STACK_USAGE("ata_dev_set_feature", 40),
STACK_USAGE("__bpf_trace_ata_eh_link_autopsy", 0),
STACK_USAGE("__traceiter_ata_eh_link_autopsy", 32),
STACK_USAGE("perf_trace_ata_eh_link_autopsy", 72),
STACK_USAGE("trace_event_raw_event_ata_eh_link_autopsy", 88),
STACK_USAGE("trace_raw_output_ata_eh_link_autopsy", 56),
STACK_USAGE("atapi_check_dma", 0),
STACK_USAGE("ata_std_qc_defer", 0),
STACK_USAGE("ata_noop_qc_prep", 0),
STACK_USAGE("ata_sg_init", 0),
STACK_USAGE("swap_buf_le16", 0),
STACK_USAGE("ata_qc_new_init", 16),
STACK_USAGE("ata_qc_free", 0),
STACK_USAGE("__ata_qc_complete", 24),
STACK_USAGE("__bpf_trace_ata_eh_link_autopsy_qc", 0),
STACK_USAGE("__traceiter_ata_eh_link_autopsy_qc", 16),
STACK_USAGE("perf_trace_ata_eh_link_autopsy_qc", 56),
STACK_USAGE("trace_event_raw_event_ata_eh_link_autopsy_qc", 72),
STACK_USAGE("trace_raw_output_ata_eh_link_autopsy_qc", 64),
STACK_USAGE("ata_verify_xfer", 0),
STACK_USAGE("ata_qc_complete", 32),
STACK_USAGE("ata_qc_get_active", 0),
STACK_USAGE("ata_qc_issue", 24),
STACK_USAGE("ata_phys_link_online", 16),
STACK_USAGE("__bpf_trace_ata_eh_action_template", 0),
STACK_USAGE("perf_trace_ata_eh_action_template", 72),
STACK_USAGE("trace_event_raw_event_ata_eh_action_template", 88),
STACK_USAGE("trace_raw_output_ata_eh_action_template", 40),
STACK_USAGE("ata_phys_link_offline", 16),
STACK_USAGE("ata_link_online", 24),
STACK_USAGE("ata_link_offline", 24),
STACK_USAGE("ata_port_request_pm", 40),
STACK_USAGE("ata_port_pm_suspend", 0),
STACK_USAGE("ata_port_pm_freeze", 0),
STACK_USAGE("ata_port_pm_poweroff", 0),
STACK_USAGE("ata_port_pm_resume", 8),
STACK_USAGE("ata_port_runtime_idle", 8),
STACK_USAGE("atapi_cmd_type", 0),
STACK_USAGE("ata_port_runtime_suspend", 0),
STACK_USAGE("ata_port_runtime_resume", 0),
STACK_USAGE("ata_sas_port_suspend", 0),
STACK_USAGE("__traceiter_ata_eh_about_to_do", 32),
STACK_USAGE("ata_sas_port_resume", 0),
STACK_USAGE("ata_host_suspend", 0),
STACK_USAGE("ata_host_resume", 0),
STACK_USAGE("__traceiter_ata_eh_done", 32),
STACK_USAGE("ata_dev_init", 16),
STACK_USAGE("__bpf_trace_ata_link_reset_begin_template", 0),
STACK_USAGE("perf_trace_ata_link_reset_begin_template", 72),
STACK_USAGE("trace_event_raw_event_ata_link_reset_begin_template", 88),
STACK_USAGE("trace_raw_output_ata_link_reset_begin_template", 56),
STACK_USAGE("ata_link_init", 32),
STACK_USAGE("sata_link_init_spd", 48),
STACK_USAGE("ata_port_alloc", 16),
STACK_USAGE("ata_devres_release", 24),
STACK_USAGE("ata_host_get", 0),
STACK_USAGE("ata_host_put", 24),
STACK_USAGE("ata_host_alloc", 32),
STACK_USAGE("__traceiter_ata_link_hardreset_begin", 32),
STACK_USAGE("ata_host_alloc_pinfo", 16),
STACK_USAGE("__traceiter_ata_slave_hardreset_begin", 32),
STACK_USAGE("ata_host_stop", 16),
STACK_USAGE("__traceiter_ata_link_softreset_begin", 32),
STACK_USAGE("__bpf_trace_ata_link_reset_end_template", 0),
STACK_USAGE("perf_trace_ata_link_reset_end_template", 72),
STACK_USAGE("trace_event_raw_event_ata_link_reset_end_template", 88),
STACK_USAGE("trace_raw_output_ata_link_reset_end_template", 56),
STACK_USAGE("ata_host_start", 48),
STACK_USAGE("ata_host_init", 24),
STACK_USAGE("__ata_port_probe", 16),
STACK_USAGE("ata_port_probe", 16),
STACK_USAGE("async_port_probe", 16),
STACK_USAGE("ata_host_register", 48),
STACK_USAGE("__traceiter_ata_link_hardreset_end", 32),
STACK_USAGE("ata_host_activate", 48),
STACK_USAGE("__traceiter_ata_slave_hardreset_end", 32),
STACK_USAGE("__traceiter_ata_link_softreset_end", 32),
STACK_USAGE("__traceiter_ata_link_postreset", 32),
STACK_USAGE("ata_host_detach", 48),
STACK_USAGE("ata_pci_remove_one", 0),
STACK_USAGE("__traceiter_ata_slave_postreset", 32),
STACK_USAGE("ata_pci_shutdown_one", 24),
STACK_USAGE("pci_test_config_bits", 24),
STACK_USAGE("__bpf_trace_ata_port_eh_begin_template", 0),
STACK_USAGE("perf_trace_ata_port_eh_begin_template", 56),
STACK_USAGE("trace_event_raw_event_ata_port_eh_begin_template", 72),
STACK_USAGE("trace_raw_output_ata_port_eh_begin_template", 24),
STACK_USAGE("ata_pci_device_do_suspend", 16),
STACK_USAGE("ata_pci_device_do_resume", 16),
STACK_USAGE("ata_pci_device_suspend", 16),
STACK_USAGE("ata_pci_device_resume", 24),
STACK_USAGE("ata_platform_remove_one", 0),
STACK_USAGE("ata_parse_force_one", 80),
STACK_USAGE("__traceiter_ata_std_sched_eh", 16),
STACK_USAGE("__traceiter_ata_port_freeze", 16),
STACK_USAGE("ata_tf_read_block", 0),
STACK_USAGE("ata_parse_force_param", 128),
STACK_USAGE("__traceiter_ata_port_thaw", 16),
STACK_USAGE("ata_init", 8),
STACK_USAGE("__bpf_trace_ata_sff_hsm_template", 0),
STACK_USAGE("perf_trace_ata_sff_hsm_template", 64),
STACK_USAGE("trace_event_raw_event_ata_sff_hsm_template", 80),
STACK_USAGE("trace_raw_output_ata_sff_hsm_template", 64),
STACK_USAGE("ata_exit", 0),
STACK_USAGE("ata_ratelimit", 0),
STACK_USAGE("ata_msleep", 24),
STACK_USAGE("ata_wait_register", 88),
STACK_USAGE("ata_dummy_qc_issue", 0),
STACK_USAGE("ata_dummy_error_handler", 0),
STACK_USAGE("ata_print_version", 0),
STACK_USAGE("__traceiter_ata_sff_hsm_state", 24),
STACK_USAGE("__traceiter_ata_sff_hsm_command_complete", 24),
STACK_USAGE("__traceiter_ata_sff_port_intr", 24),
STACK_USAGE("__bpf_trace_ata_transfer_data_template", 0),
STACK_USAGE("perf_trace_ata_transfer_data_template", 72),
STACK_USAGE("trace_event_raw_event_ata_transfer_data_template", 88),
STACK_USAGE("trace_raw_output_ata_transfer_data_template", 48),
STACK_USAGE("ata_build_rw_tf", 8),
STACK_USAGE("__traceiter_ata_sff_pio_transfer_data", 32),
STACK_USAGE("__traceiter_atapi_pio_transfer_data", 32),
STACK_USAGE("__traceiter_atapi_send_cdb", 32),
STACK_USAGE("__bpf_trace_ata_sff_template", 0),
STACK_USAGE("perf_trace_ata_sff_template", 56),
STACK_USAGE("trace_event_raw_event_ata_sff_template", 72),
STACK_USAGE("trace_raw_output_ata_sff_template", 32),
STACK_USAGE("__traceiter_ata_sff_flush_pio_task", 16),
STACK_USAGE("ata_pack_xfermask", 0),
STACK_USAGE("ata_unpack_xfermask", 0),
STACK_USAGE("ata_id_major_version", 0),
STACK_USAGE("ata_xfer_mask2mode", 4),
STACK_USAGE("ata_xfer_mode2mask", 0),
STACK_USAGE("ata_xfer_mode2shift", 0),
STACK_USAGE("ata_mode_string", 4),
STACK_USAGE("sata_spd_string", 0),
STACK_USAGE("ata_dev_classify", 0),
STACK_USAGE("ata_link_abort", 48),
STACK_USAGE("ata_port_abort", 32),
STACK_USAGE("__ata_port_freeze", 8),
STACK_USAGE("ata_port_freeze", 32),
STACK_USAGE("ata_eh_freeze_port", 16),
STACK_USAGE("ata_eh_thaw_port", 16),
STACK_USAGE("ata_eh_scsidone", 0),
STACK_USAGE("ata_eh_qc_complete", 32),
STACK_USAGE("ata_eh_qc_retry", 32),
STACK_USAGE("ata_dev_disable", 8),
STACK_USAGE("ata_eh_detach_dev", 40),
STACK_USAGE("ata_eh_about_to_do", 48),
STACK_USAGE("ata_eh_done", 24),
STACK_USAGE("atapi_eh_tur", 72),
STACK_USAGE("atapi_eh_request_sense", 72),
STACK_USAGE("__ata_ehi_push_desc", 104),
STACK_USAGE("ata_eh_link_autopsy", 168),
STACK_USAGE("ata_eh_autopsy", 16),
STACK_USAGE("ata_ehi_push_desc", 104),
STACK_USAGE("ata_get_cmd_name", 0),
STACK_USAGE("ata_ehi_clear_desc", 0),
STACK_USAGE("ata_eh_report", 376),
STACK_USAGE("ata_eh_reset", 208),
STACK_USAGE("ata_port_desc", 104),
STACK_USAGE("ata_port_pbar_desc", 0),
STACK_USAGE("ata_eh_park_issue_cmd", 64),
STACK_USAGE("ata_set_mode", 24),
STACK_USAGE("ata_internal_cmd_timeout", 0),
STACK_USAGE("ata_link_nr_enabled", 16),
STACK_USAGE("ata_eh_schedule_probe", 32),
STACK_USAGE("ata_eh_recover", 216),
STACK_USAGE("ata_internal_cmd_timed_out", 0),
STACK_USAGE("ata_eh_finish", 56),
STACK_USAGE("ata_do_eh", 48),
STACK_USAGE("ata_std_error_handler", 24),
STACK_USAGE("ata_ering_map", 40),
STACK_USAGE("ata_eh_clear_action", 32),
STACK_USAGE("ata_eh_acquire", 8),
STACK_USAGE("ata_eh_release", 0),
STACK_USAGE("ata_scsi_error", 48),
STACK_USAGE("trace_ata_link_softreset_begin", 0),
STACK_USAGE("ata_scsi_cmd_error_handler", 56),
STACK_USAGE("trace_ata_link_softreset_end", 0),
STACK_USAGE("ata_scsi_port_error_handler", 72),
STACK_USAGE("ata_port_wait_eh", 80),
STACK_USAGE("ata_eh_fastdrain_timerfn", 24),
STACK_USAGE("ata_qc_schedule_eh", 16),
STACK_USAGE("ata_std_sched_eh", 8),
STACK_USAGE("ata_std_end_eh", 0),
STACK_USAGE("ata_port_schedule_eh", 0),
STACK_USAGE("ata_timing_compute", 64),
STACK_USAGE("ata_timing_merge", 0),
STACK_USAGE("ata_timing_find_mode", 0),
STACK_USAGE("sata_pmp_error_handler", 264),
STACK_USAGE("sata_pmp_qc_defer_cmd_switch", 0),
STACK_USAGE("sata_pmp_scr_read", 72),
STACK_USAGE("sata_pmp_scr_write", 64),
STACK_USAGE("sata_pmp_set_lpm", 0),
STACK_USAGE("sata_pmp_read_gscr", 88),
STACK_USAGE("sata_pmp_configure", 96),
STACK_USAGE("sata_pmp_attach", 160),
STACK_USAGE("sata_pmp_detach", 32),
STACK_USAGE("sata_pmp_handle_link_fail", 16),
STACK_USAGE("__ata_change_queue_depth", 40),
STACK_USAGE("ata_scsi_change_queue_depth", 0),
STACK_USAGE("ata_sas_port_alloc", 16),
STACK_USAGE("ata_sas_port_start", 0),
STACK_USAGE("ata_sas_port_stop", 0),
STACK_USAGE("ata_sas_async_probe", 0),
STACK_USAGE("ata_sas_sync_probe", 0),
STACK_USAGE("sata_scr_write_flush", 32),
STACK_USAGE("ata_sas_port_init", 8),
STACK_USAGE("ata_sas_tport_add", 0),
STACK_USAGE("ata_sas_tport_delete", 0),
STACK_USAGE("ata_sas_port_destroy", 8),
STACK_USAGE("ata_sas_slave_configure", 16),
STACK_USAGE("ata_sas_queuecmd", 0),
STACK_USAGE("ata_sas_allocate_tag", 0),
STACK_USAGE("ata_sas_free_tag", 0),
STACK_USAGE("sata_async_notification", 48),
STACK_USAGE("ata_eh_analyze_ncq_error", 64),
STACK_USAGE("ata_tf_to_fis", 0),
STACK_USAGE("ata_tf_from_fis", 0),
STACK_USAGE("sata_link_debounce", 64),
STACK_USAGE("sata_link_resume", 56),
STACK_USAGE("sata_link_scr_lpm", 40),
STACK_USAGE("sata_scr_valid", 0),
STACK_USAGE("sata_set_spd", 24),
STACK_USAGE("sata_link_hardreset", 72),
STACK_USAGE("ata_qc_complete_multiple", 48),
STACK_USAGE("sata_scr_read", 0),
STACK_USAGE("ata_slave_link_init", 16),
STACK_USAGE("sata_lpm_ignore_phy_events", 0),
STACK_USAGE("ata_scsi_lpm_store", 48),
STACK_USAGE("ata_scsi_lpm_show", 0),
STACK_USAGE("ata_ncq_prio_supported_show", 32),
STACK_USAGE("ata_ncq_prio_enable_show", 32),
STACK_USAGE("ata_ncq_prio_enable_store", 48),
STACK_USAGE("sata_scr_write", 0),
STACK_USAGE("ata_scsi_em_message_store", 0),
STACK_USAGE("ata_scsi_em_message_show", 0),
STACK_USAGE("ata_scsi_em_message_type_show", 0),
STACK_USAGE("ata_scsi_activity_show", 16),
STACK_USAGE("ata_scsi_activity_store", 40),
STACK_USAGE("ata_scsi_dma_need_drain", 0),
STACK_USAGE("ata_scsi_dev_config", 24),
STACK_USAGE("ata_scsi_slave_config", 0),
STACK_USAGE("ata_scsi_slave_destroy", 24),
STACK_USAGE("ata_scsi_start_stop_xlat", 24),
STACK_USAGE("ata_scsi_flush_xlat", 0),
STACK_USAGE("ata_scsi_park_store", 64),
STACK_USAGE("ata_scsi_verify_xlat", 16),
STACK_USAGE("ata_scsi_rw_xlat", 32),
STACK_USAGE("ata_scsi_qc_complete", 64),
STACK_USAGE("ata_scsi_rbuf_fill", 32),
STACK_USAGE("ata_scsiop_inq_std", 24),
STACK_USAGE("ata_scsiop_inq_00", 0),
STACK_USAGE("ata_scsiop_inq_80", 0),
STACK_USAGE("ata_scsi_set_sense", 0),
STACK_USAGE("ata_scsiop_inq_83", 16),
STACK_USAGE("ata_scsiop_inq_89", 0),
STACK_USAGE("ata_scsiop_inq_b0", 0),
STACK_USAGE("ata_scsi_set_sense_information", 8),
STACK_USAGE("ata_scsiop_inq_b1", 8),
STACK_USAGE("ata_scsiop_inq_b6", 0),
STACK_USAGE("ata_scsiop_inq_b9", 0),
STACK_USAGE("ata_scsi_set_invalid_field", 24),
STACK_USAGE("ata_scsi_set_invalid_parameter", 16),
STACK_USAGE("ata_scsiop_read_cap", 16),
STACK_USAGE("atapi_sense_complete", 24),
STACK_USAGE("atapi_request_sense", 32),
STACK_USAGE("atapi_qc_complete", 40),
STACK_USAGE("atapi_xlat", 56),
STACK_USAGE("ata_std_bios_param", 0),
STACK_USAGE("ata_scsi_find_dev", 0),
STACK_USAGE("ata_scsi_pass_thru", 32),
STACK_USAGE("ata_scsi_unlock_native_capacity", 24),
STACK_USAGE("ata_scsi_write_same_xlat", 80),
STACK_USAGE("ata_scsi_report_zones_complete", 120),
STACK_USAGE("ata_scsi_zbc_in_xlat", 32),
STACK_USAGE("ata_scsi_zbc_out_xlat", 16),
STACK_USAGE("ata_mselect_caching", 0),
STACK_USAGE("ata_mselect_control", 0),
STACK_USAGE("ata_scsi_mode_select_xlat", 136),
STACK_USAGE("ata_cmd_ioctl", 184),
STACK_USAGE("ata_scsi_security_inout_xlat", 8),
STACK_USAGE("ata_scsi_var_len_cdb_xlat", 0),
STACK_USAGE("ata_get_xlat_func", 0),
STACK_USAGE("__ata_scsi_queuecmd", 40),
STACK_USAGE("ata_scsi_queuecmd", 32),
STACK_USAGE("ata_scsi_simulate", 168),
STACK_USAGE("ata_scsi_add_hosts", 48),
STACK_USAGE("ata_scsi_scan_host", 48),
STACK_USAGE("ata_scsi_offline_dev", 0),
STACK_USAGE("ata_scsi_handle_link_detach", 48),
STACK_USAGE("ata_scsi_media_change_notify", 0),
STACK_USAGE("ata_scsi_hotplug", 24),
STACK_USAGE("ata_scsi_user_scan", 32),
STACK_USAGE("ata_scsi_dev_rescan", 56),
STACK_USAGE("ata_task_ioctl", 184),
STACK_USAGE("ata_sas_scsi_ioctl", 88),
STACK_USAGE("ata_scsi_ioctl", 0),
STACK_USAGE("ata_to_sense_error", 16),
STACK_USAGE("ata_gen_passthru_sense", 40),
STACK_USAGE("ata_scsi_park_show", 32),
STACK_USAGE("ata_scsi_sdev_config", 0),
STACK_USAGE("ata_sff_queue_work", 0),
STACK_USAGE("ata_sff_queue_delayed_work", 0),
STACK_USAGE("ata_sff_queue_pio_task", 8),
STACK_USAGE("ata_sff_flush_pio_task", 8),
STACK_USAGE("ata_sff_pio_task", 40),
STACK_USAGE("ata_sff_qc_issue", 40),
STACK_USAGE("ata_sff_qc_fill_rtf", 0),
STACK_USAGE("__ata_sff_port_intr", 32),
STACK_USAGE("ata_sff_port_intr", 0),
STACK_USAGE("ata_sff_pause", 0),
STACK_USAGE("ata_sff_interrupt", 64),
STACK_USAGE("ata_sff_lost_interrupt", 16),
STACK_USAGE("ata_sff_freeze", 8),
STACK_USAGE("ata_sff_thaw", 16),
STACK_USAGE("ata_sff_prereset", 16),
STACK_USAGE("ata_sff_dma_pause", 0),
STACK_USAGE("ata_devchk", 16),
STACK_USAGE("ata_sff_dev_classify", 72),
STACK_USAGE("ata_sff_wait_after_reset", 40),
STACK_USAGE("ata_sff_softreset", 64),
STACK_USAGE("ata_sff_busy_sleep", 48),
STACK_USAGE("sata_sff_hardreset", 80),
STACK_USAGE("ata_wait_idle", 16),
STACK_USAGE("ata_sff_postreset", 16),
STACK_USAGE("ata_sff_drain_fifo", 16),
STACK_USAGE("ata_sff_error_handler", 40),
STACK_USAGE("ata_sff_std_ports", 0),
STACK_USAGE("ata_pci_sff_init_host", 104),
STACK_USAGE("ata_pci_sff_prepare_host", 32),
STACK_USAGE("ata_pci_sff_activate_host", 80),
STACK_USAGE("ata_pci_init_one", 80),
STACK_USAGE("ata_sff_check_ready", 0),
STACK_USAGE("ata_pci_sff_init_one", 0),
STACK_USAGE("ata_sff_wait_ready", 0),
STACK_USAGE("ata_bmdma_qc_prep", 40),
STACK_USAGE("ata_bmdma_dumb_qc_prep", 40),
STACK_USAGE("ata_bmdma_qc_issue", 48),
STACK_USAGE("ata_bmdma_port_intr", 32),
STACK_USAGE("ata_bmdma_interrupt", 64),
STACK_USAGE("ata_bmdma_error_handler", 56),
STACK_USAGE("ata_bmdma_post_internal_cmd", 32),
STACK_USAGE("ata_bmdma_irq_clear", 8),
STACK_USAGE("ata_bmdma_setup", 24),
STACK_USAGE("ata_bmdma_start", 8),
STACK_USAGE("ata_bmdma_stop", 16),
STACK_USAGE("ata_bmdma_status", 0),
STACK_USAGE("ata_bmdma_port_start", 8),
STACK_USAGE("ata_bmdma_port_start32", 8),
STACK_USAGE("ata_pci_bmdma_clear_simplex", 0),
STACK_USAGE("ata_sff_dev_select", 8),
STACK_USAGE("ata_pci_bmdma_init", 32),
STACK_USAGE("trace_ata_tf_load", 0),
STACK_USAGE("ata_pci_bmdma_prepare_host", 16),
STACK_USAGE("ata_pci_bmdma_init_one", 0),
STACK_USAGE("ata_sff_port_init", 8),
STACK_USAGE("ata_sff_init", 0),
STACK_USAGE("ata_sff_exit", 0),
STACK_USAGE("ata_sff_irq_on", 16),
STACK_USAGE("ata_sff_tf_load", 32),
STACK_USAGE("trace_ata_bmdma_setup", 0),
STACK_USAGE("trace_ata_bmdma_start", 0),
STACK_USAGE("trace_ata_bmdma_stop", 0),
STACK_USAGE("trace_ata_bmdma_status", 0),
STACK_USAGE("ata_sff_tf_read", 16),
STACK_USAGE("ata_sff_exec_command", 8),
STACK_USAGE("ata_tf_to_host", 24),
STACK_USAGE("ata_sff_data_xfer", 48),
STACK_USAGE("ata_sff_data_xfer32", 48),
STACK_USAGE("ata_pio_xfer", 48),
STACK_USAGE("ata_sff_check_status", 0),
STACK_USAGE("ata_pio_sector", 48),
STACK_USAGE("ata_pio_sectors", 16),
STACK_USAGE("ata_hsm_qc_complete", 24),
STACK_USAGE("ata_sff_hsm_move", 136),
STACK_USAGE("libata_trace_parse_qc_flags", 32),
STACK_USAGE("libata_trace_parse_status", 32),
STACK_USAGE("libata_trace_parse_tf_flags", 32),
STACK_USAGE("libata_trace_parse_subcmd", 24),
STACK_USAGE("libata_trace_parse_host_stat", 32),
STACK_USAGE("libata_trace_parse_eh_action", 32),
STACK_USAGE("libata_trace_parse_eh_err_mask", 32),
STACK_USAGE("show_ata_port_nr_pmp_links", 0),
STACK_USAGE("show_ata_port_idle_irq", 0),
STACK_USAGE("show_ata_port_port_no", 0),
STACK_USAGE("ata_tport_release", 0),
STACK_USAGE("ata_tport_match", 0),
STACK_USAGE("ata_tport_delete", 8),
STACK_USAGE("ata_tport_add", 32),
STACK_USAGE("ata_port_classify", 16),
STACK_USAGE("show_ata_link_hw_sata_spd_limit", 16),
STACK_USAGE("show_ata_link_sata_spd_limit", 16),
STACK_USAGE("show_ata_link_sata_spd", 8),
STACK_USAGE("ata_tlink_release", 0),
STACK_USAGE("ata_tlink_match", 0),
STACK_USAGE("ata_tlink_delete", 24),
STACK_USAGE("ata_tlink_add", 48),
STACK_USAGE("show_ata_dev_class", 8),
STACK_USAGE("show_ata_dev_pio_mode", 40),
STACK_USAGE("show_ata_dev_dma_mode", 40),
STACK_USAGE("show_ata_dev_xfer_mode", 40),
STACK_USAGE("show_ata_dev_spdn_cnt", 0),
STACK_USAGE("ata_show_ering", 48),
STACK_USAGE("show_ata_dev_ering", 24),
STACK_USAGE("show_ata_dev_id", 40),
STACK_USAGE("show_ata_dev_gscr", 40),
STACK_USAGE("show_ata_dev_trim", 0),
STACK_USAGE("ata_tdev_release", 0),
STACK_USAGE("ata_tdev_match", 0),
STACK_USAGE("ata_attach_transport", 8),
STACK_USAGE("ata_release_transport", 8),
STACK_USAGE("libata_transport_init", 8),
STACK_USAGE("libata_transport_exit", 0),
STACK_USAGE("amd_pre_reset", 16),
STACK_USAGE("amd_cable_detect", 24),
STACK_USAGE("amd_fifo_setup", 56),
STACK_USAGE("amd33_set_piomode", 16),
STACK_USAGE("amd66_set_piomode", 16),
STACK_USAGE("amd100_set_piomode", 16),
STACK_USAGE("amd133_set_piomode", 16),
STACK_USAGE("amd33_set_dmamode", 0),
STACK_USAGE("amd66_set_dmamode", 0),
STACK_USAGE("amd100_set_dmamode", 0),
STACK_USAGE("amd133_set_dmamode", 0),
STACK_USAGE("nv_mode_filter", 88),
STACK_USAGE("nv_pre_reset", 16),
STACK_USAGE("nv100_set_piomode", 0),
STACK_USAGE("nv133_set_piomode", 0),
STACK_USAGE("nv100_set_dmamode", 0),
STACK_USAGE("nv133_set_dmamode", 0),
STACK_USAGE("nv_host_stop", 0),
STACK_USAGE("timing_setup", 136),
STACK_USAGE("amd_init_one", 72),
STACK_USAGE("amd_reinit_one", 40),
STACK_USAGE("amd_pci_driver_exit", 0),
STACK_USAGE("amd_pci_driver_init", 0),
STACK_USAGE("oldpiix_set_dmamode", 56),
STACK_USAGE("oldpiix_qc_issue", 24),
STACK_USAGE("oldpiix_init_one", 40),
STACK_USAGE("oldpiix_pci_driver_exit", 0),
STACK_USAGE("oldpiix_pci_driver_init", 0),
STACK_USAGE("oldpiix_pre_reset", 16),
STACK_USAGE("oldpiix_set_piomode", 64),
STACK_USAGE("sch_set_dmamode", 40),
STACK_USAGE("sch_init_one", 40),
STACK_USAGE("sch_pci_driver_exit", 0),
STACK_USAGE("sch_pci_driver_init", 0),
STACK_USAGE("sch_set_piomode", 48),
STACK_USAGE("attribute_container_release", 8),
STACK_USAGE("attribute_container_add_device", 56),
STACK_USAGE("attribute_container_remove_device", 80),
STACK_USAGE("do_attribute_container_device_trigger_safe", 88),
STACK_USAGE("attribute_container_device_trigger_safe", 48),
STACK_USAGE("internal_container_klist_get", 0),
STACK_USAGE("attribute_container_device_trigger", 64),
STACK_USAGE("internal_container_klist_put", 0),
STACK_USAGE("attribute_container_trigger", 32),
STACK_USAGE("attribute_container_add_attrs", 32),
STACK_USAGE("attribute_container_add_class_device", 32),
STACK_USAGE("attribute_container_add_class_device_adapter", 32),
STACK_USAGE("attribute_container_remove_attrs", 24),
STACK_USAGE("attribute_container_class_device_del", 24),
STACK_USAGE("attribute_container_find_class_device", 48),
STACK_USAGE("attribute_container_classdev_to_container", 0),
STACK_USAGE("attribute_container_register", 8),
STACK_USAGE("attribute_container_unregister", 24),
STACK_USAGE("subsys_dev_iter_exit", 0),
STACK_USAGE("subsys_interface_register", 64),
STACK_USAGE("bus_attr_show", 0),
STACK_USAGE("subsys_interface_unregister", 64),
STACK_USAGE("system_root_device_release", 0),
STACK_USAGE("subsys_register", 40),
STACK_USAGE("subsys_system_register", 0),
STACK_USAGE("bus_attr_store", 0),
STACK_USAGE("subsys_virtual_register", 16),
STACK_USAGE("buses_init", 8),
STACK_USAGE("bus_create_file", 24),
STACK_USAGE("bus_remove_file", 16),
STACK_USAGE("bus_release", 8),
STACK_USAGE("bus_uevent_filter", 0),
STACK_USAGE("unbind_store", 72),
STACK_USAGE("bind_store", 72),
STACK_USAGE("drivers_autoprobe_show", 0),
STACK_USAGE("drivers_autoprobe_store", 0),
STACK_USAGE("drivers_probe_store", 64),
STACK_USAGE("bus_for_each_dev", 56),
STACK_USAGE("bus_find_device", 56),
STACK_USAGE("subsys_find_device_by_id", 56),
STACK_USAGE("bus_for_each_drv", 56),
STACK_USAGE("bus_add_device", 32),
STACK_USAGE("bus_probe_device", 24),
STACK_USAGE("bus_remove_device", 24),
STACK_USAGE("add_probe_files", 24),
STACK_USAGE("remove_probe_files", 16),
STACK_USAGE("uevent_store", 8),
STACK_USAGE("drv_attr_show", 0),
STACK_USAGE("bus_add_driver", 32),
STACK_USAGE("bus_remove_driver", 8),
STACK_USAGE("drv_attr_store", 0),
STACK_USAGE("bus_rescan_devices", 48),
STACK_USAGE("device_reprobe", 16),
STACK_USAGE("klist_devices_get", 0),
STACK_USAGE("klist_devices_put", 0),
STACK_USAGE("bus_uevent_store", 8),
STACK_USAGE("bus_register", 32),
STACK_USAGE("bus_unregister", 8),
STACK_USAGE("driver_release", 0),
STACK_USAGE("bus_register_notifier", 0),
STACK_USAGE("bus_unregister_notifier", 0),
STACK_USAGE("bus_get_kset", 0),
STACK_USAGE("bus_get_device_klist", 0),
STACK_USAGE("bus_sort_breadthfirst", 88),
STACK_USAGE("subsys_dev_iter_init", 16),
STACK_USAGE("subsys_dev_iter_next", 8),
STACK_USAGE("cache_setup_acpi", 0),
STACK_USAGE("free_cache_attributes", 64),
STACK_USAGE("get_cpu_cacheinfo", 0),
STACK_USAGE("init_cache_level", 0),
STACK_USAGE("populate_cache_leaves", 0),
STACK_USAGE("id_show", 0),
STACK_USAGE("level_show", 0),
STACK_USAGE("coherency_line_size_show", 0),
STACK_USAGE("number_of_sets_show", 0),
STACK_USAGE("physical_line_partition_show", 0),
STACK_USAGE("ways_of_associativity_show", 0),
STACK_USAGE("size_show", 0),
STACK_USAGE("shared_cpu_map_show", 0),
STACK_USAGE("shared_cpu_list_show", 0),
STACK_USAGE("type_show", 0),
STACK_USAGE("allocation_policy_show", 0),
STACK_USAGE("write_policy_show", 0),
STACK_USAGE("cache_default_attrs_is_visible", 8),
STACK_USAGE("cache_get_priv_group", 0),
STACK_USAGE("cpu_cache_sysfs_exit", 16),
STACK_USAGE("cacheinfo_cpu_online", 64),
STACK_USAGE("cacheinfo_cpu_pre_down", 8),
STACK_USAGE("cacheinfo_sysfs_init", 0),
STACK_USAGE("class_remove_file_ns", 0),
STACK_USAGE("klist_class_dev_get", 0),
STACK_USAGE("klist_class_dev_put", 0),
STACK_USAGE("__class_register", 32),
STACK_USAGE("class_unregister", 8),
STACK_USAGE("class_create_release", 0),
STACK_USAGE("__class_create", 40),
STACK_USAGE("class_attr_show", 0),
STACK_USAGE("class_destroy", 8),
STACK_USAGE("class_dev_iter_init", 16),
STACK_USAGE("class_dev_iter_next", 8),
STACK_USAGE("class_dev_iter_exit", 0),
STACK_USAGE("class_for_each_device", 64),
STACK_USAGE("class_attr_store", 0),
STACK_USAGE("class_find_device", 64),
STACK_USAGE("class_interface_register", 64),
STACK_USAGE("class_interface_unregister", 64),
STACK_USAGE("show_class_attr_string", 0),
STACK_USAGE("class_compat_register", 16),
STACK_USAGE("class_release", 8),
STACK_USAGE("class_compat_unregister", 8),
STACK_USAGE("class_compat_create_link", 32),
STACK_USAGE("class_compat_remove_link", 16),
STACK_USAGE("classes_init", 8),
STACK_USAGE("class_child_ns_type", 0),
STACK_USAGE("class_create_file_ns", 0),
STACK_USAGE("component_devices_open", 0),
STACK_USAGE("component_debug_init", 0),
STACK_USAGE("try_to_bring_up_aggregate_device", 64),
STACK_USAGE("component_compare_of", 0),
STACK_USAGE("component_release_of", 0),
STACK_USAGE("component_compare_dev", 0),
STACK_USAGE("component_compare_dev_name", 0),
STACK_USAGE("devm_component_match_release", 24),
STACK_USAGE("__component_match_add", 64),
STACK_USAGE("component_match_add_release", 0),
STACK_USAGE("component_match_add_typed", 0),
STACK_USAGE("free_aggregate_device", 16),
STACK_USAGE("component_master_add_with_match", 48),
STACK_USAGE("component_master_del", 24),
STACK_USAGE("component_unbind_all", 40),
STACK_USAGE("component_bind_all", 56),
STACK_USAGE("__component_add", 32),
STACK_USAGE("component_add_typed", 0),
STACK_USAGE("component_add", 0),
STACK_USAGE("component_del", 24),
STACK_USAGE("component_devices_show", 40),
STACK_USAGE("trivial_online", 0),
STACK_USAGE("container_offline", 0),
STACK_USAGE("container_dev_init", 0),
STACK_USAGE("device_links_supplier_sync_state_pause", 0),
STACK_USAGE("device_links_supplier_sync_state_resume", 56),
STACK_USAGE("sync_state_resume_initcall", 0),
STACK_USAGE("device_link_drop_managed", 8),
STACK_USAGE("waiting_for_supplier_show", 24),
STACK_USAGE("device_links_force_bind", 24),
STACK_USAGE("device_links_driver_bound", 72),
STACK_USAGE("device_links_no_driver", 24),
STACK_USAGE("device_links_driver_cleanup", 32),
STACK_USAGE("device_links_busy", 16),
STACK_USAGE("device_links_unbind_consumers", 24),
STACK_USAGE("fw_devlink_setup", 8),
STACK_USAGE("fw_devlink_strict_setup", 0),
STACK_USAGE("fw_devlink_get_flags", 0),
STACK_USAGE("fwnode_links_purge", 40),
STACK_USAGE("fw_devlink_is_strict", 0),
STACK_USAGE("fw_devlink_parse_fwtree", 16),
STACK_USAGE("fw_devlink_no_driver", 8),
STACK_USAGE("fw_devlink_drivers_done", 0),
STACK_USAGE("fw_devlink_unblock_consumers", 16),
STACK_USAGE("fw_devlink_purge_absent_suppliers", 40),
STACK_USAGE("fw_devlink_relax_cycle", 64),
STACK_USAGE("fw_devlink_create_devlink", 40),
STACK_USAGE("__fw_devlink_link_to_suppliers", 72),
STACK_USAGE("device_links_read_lock", 8),
STACK_USAGE("fw_devlink_link_device", 72),
STACK_USAGE("device_links_read_unlock", 8),
STACK_USAGE("lock_device_hotplug", 0),
STACK_USAGE("unlock_device_hotplug", 0),
STACK_USAGE("lock_device_hotplug_sysfs", 0),
STACK_USAGE("device_links_read_lock_held", 0),
STACK_USAGE("dev_driver_string", 0),
STACK_USAGE("dev_attr_show", 16),
STACK_USAGE("dev_attr_store", 0),
STACK_USAGE("device_store_ulong", 32),
STACK_USAGE("device_show_ulong", 0),
STACK_USAGE("device_store_int", 32),
STACK_USAGE("device_show_int", 0),
STACK_USAGE("device_store_bool", 8),
STACK_USAGE("device_show_bool", 0),
STACK_USAGE("device_release", 16),
STACK_USAGE("device_namespace", 0),
STACK_USAGE("device_get_ownership", 0),
STACK_USAGE("dev_uevent_filter", 0),
STACK_USAGE("dev_uevent_name", 0),
STACK_USAGE("dev_uevent", 48),
STACK_USAGE("uevent_show", 40),
STACK_USAGE("uevent_store", 24),
STACK_USAGE("online_show", 24),
STACK_USAGE("online_store", 48),
STACK_USAGE("removable_show", 0),
STACK_USAGE("device_add_groups", 0),
STACK_USAGE("device_remove_groups", 0),
STACK_USAGE("devm_attr_group_match", 0),
STACK_USAGE("devm_attr_group_remove", 0),
STACK_USAGE("devm_attr_groups_remove", 0),
STACK_USAGE("devm_device_add_group", 32),
STACK_USAGE("devm_device_remove_group", 0),
STACK_USAGE("devm_device_add_groups", 32),
STACK_USAGE("devm_device_remove_groups", 0),
STACK_USAGE("device_add_attrs", 40),
STACK_USAGE("refcount_inc", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("device_remove_attrs", 24),
STACK_USAGE("dev_show", 0),
STACK_USAGE("devices_kset_move_before", 16),
STACK_USAGE("devices_kset_move_after", 16),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("devices_kset_move_last", 8),
STACK_USAGE("device_create_file", 16),
STACK_USAGE("device_remove_file", 0),
STACK_USAGE("device_remove_file_self", 0),
STACK_USAGE("device_create_bin_file", 0),
STACK_USAGE("device_is_dependent", 64),
STACK_USAGE("device_remove_bin_file", 0),
STACK_USAGE("klist_children_get", 0),
STACK_USAGE("klist_children_put", 0),
STACK_USAGE("device_initialize", 8),
STACK_USAGE("virtual_device_parent", 0),
STACK_USAGE("class_dir_release", 0),
STACK_USAGE("class_dir_child_ns_type", 0),
STACK_USAGE("get_device_parent", 24),
STACK_USAGE("cleanup_glue_dir", 8),
STACK_USAGE("device_link_init_status", 0),
STACK_USAGE("device_remove_class_symlinks", 8),
STACK_USAGE("dev_set_name", 88),
STACK_USAGE("device_create_sys_dev_entry", 48),
STACK_USAGE("device_add", 32),
STACK_USAGE("device_register", 8),
STACK_USAGE("get_device", 0),
STACK_USAGE("put_device", 0),
STACK_USAGE("kill_device", 8),
STACK_USAGE("device_del", 88),
STACK_USAGE("device_reorder_to_tail", 56),
STACK_USAGE("device_unregister", 8),
STACK_USAGE("device_get_devnode", 32),
STACK_USAGE("device_for_each_child", 56),
STACK_USAGE("device_for_each_child_reverse", 56),
STACK_USAGE("device_find_child", 56),
STACK_USAGE("device_find_child_by_name", 48),
STACK_USAGE("devices_init", 0),
STACK_USAGE("device_check_offline", 48),
STACK_USAGE("device_offline", 56),
STACK_USAGE("device_online", 24),
STACK_USAGE("device_pm_move_to_tail", 16),
STACK_USAGE("root_device_release", 0),
STACK_USAGE("__root_device_register", 32),
STACK_USAGE("root_device_unregister", 8),
STACK_USAGE("device_create_release", 0),
STACK_USAGE("status_show", 0),
STACK_USAGE("device_create", 152),
STACK_USAGE("device_create_with_groups", 152),
STACK_USAGE("device_destroy", 24),
STACK_USAGE("device_rename", 40),
STACK_USAGE("device_move", 48),
STACK_USAGE("auto_remove_on_show", 0),
STACK_USAGE("kref_get", 0),
STACK_USAGE("device_change_owner", 40),
STACK_USAGE("device_shutdown", 32),
STACK_USAGE("runtime_pm_show", 0),
STACK_USAGE("dev_vprintk_emit", 120),
STACK_USAGE("dev_printk_emit", 88),
STACK_USAGE("__dev_printk", 0),
STACK_USAGE("sync_state_only_show", 0),
STACK_USAGE("_dev_printk", 104),
STACK_USAGE("_dev_emerg", 104),
STACK_USAGE("_dev_alert", 104),
STACK_USAGE("_dev_crit", 104),
STACK_USAGE("_dev_err", 104),
STACK_USAGE("_dev_warn", 104),
STACK_USAGE("_dev_notice", 104),
STACK_USAGE("_dev_info", 104),
STACK_USAGE("dev_err_probe", 120),
STACK_USAGE("set_primary_fwnode", 0),
STACK_USAGE("set_secondary_fwnode", 0),
STACK_USAGE("device_set_of_node_from_dev", 0),
STACK_USAGE("device_set_node", 0),
STACK_USAGE("device_link_release_fn", 16),
STACK_USAGE("device_match_name", 0),
STACK_USAGE("device_match_of_node", 0),
STACK_USAGE("device_match_fwnode", 8),
STACK_USAGE("device_match_devt", 0),
STACK_USAGE("device_match_acpi_dev", 16),
STACK_USAGE("device_match_acpi_handle", 16),
STACK_USAGE("device_match_any", 0),
STACK_USAGE("devlink_dev_release", 16),
STACK_USAGE("devlink_add_symlinks", 48),
STACK_USAGE("devlink_remove_symlinks", 40),
STACK_USAGE("devlink_class_init", 8),
STACK_USAGE("device_link_add", 64),
STACK_USAGE("fwnode_link_add", 24),
STACK_USAGE("device_link_put_kref", 8),
STACK_USAGE("device_link_del", 8),
STACK_USAGE("device_link_remove", 16),
STACK_USAGE("device_links_check_suppliers", 24),
STACK_USAGE("crash_notes_show", 8),
STACK_USAGE("crash_notes_size_show", 0),
STACK_USAGE("show_cpus_attr", 0),
STACK_USAGE("print_cpus_kernel_max", 0),
STACK_USAGE("print_cpus_offline", 56),
STACK_USAGE("print_cpus_isolated", 56),
STACK_USAGE("cpu_subsys_match", 0),
STACK_USAGE("cpu_device_release", 0),
STACK_USAGE("print_cpu_modalias", 24),
STACK_USAGE("cpu_uevent", 16),
STACK_USAGE("register_cpu", 24),
STACK_USAGE("get_cpu_device", 0),
STACK_USAGE("device_create_release", 0),
STACK_USAGE("cpu_device_create", 136),
STACK_USAGE("cpu_subsys_online", 48),
STACK_USAGE("cpu_is_hotpluggable", 0),
STACK_USAGE("cpu_show_meltdown", 0),
STACK_USAGE("cpu_show_spectre_v1", 0),
STACK_USAGE("cpu_show_spectre_v2", 0),
STACK_USAGE("cpu_show_spec_store_bypass", 0),
STACK_USAGE("cpu_show_l1tf", 0),
STACK_USAGE("cpu_show_mds", 0),
STACK_USAGE("cpu_show_tsx_async_abort", 0),
STACK_USAGE("cpu_show_itlb_multihit", 0),
STACK_USAGE("cpu_show_srbds", 0),
STACK_USAGE("cpu_register_vulnerabilities", 0),
STACK_USAGE("cpu_dev_init", 0),
STACK_USAGE("cpu_subsys_offline", 0),
STACK_USAGE("unregister_cpu", 16),
STACK_USAGE("device_attach", 0),
STACK_USAGE("device_initial_probe", 0),
STACK_USAGE("device_driver_attach", 32),
STACK_USAGE("__driver_attach_async_helper", 24),
STACK_USAGE("__driver_attach", 40),
STACK_USAGE("driver_attach", 0),
STACK_USAGE("device_release_driver_internal", 40),
STACK_USAGE("device_release_driver", 0),
STACK_USAGE("device_driver_detach", 0),
STACK_USAGE("driver_detach", 16),
STACK_USAGE("driver_deferred_probe_add", 8),
STACK_USAGE("driver_deferred_probe_del", 8),
STACK_USAGE("device_block_probing", 0),
STACK_USAGE("device_unblock_probing", 0),
STACK_USAGE("device_set_deferred_probe_reason", 24),
STACK_USAGE("deferred_devs_show", 32),
STACK_USAGE("deferred_devs_open", 0),
STACK_USAGE("deferred_probe_timeout_setup", 16),
STACK_USAGE("driver_deferred_probe_check_state", 0),
STACK_USAGE("deferred_probe_timeout_work_func", 16),
STACK_USAGE("deferred_probe_initcall", 8),
STACK_USAGE("deferred_probe_exit", 0),
STACK_USAGE("device_is_bound", 0),
STACK_USAGE("driver_bound", 8),
STACK_USAGE("coredump_store", 24),
STACK_USAGE("device_bind_driver", 16),
STACK_USAGE("state_synced_show", 24),
STACK_USAGE("device_remove", 8),
STACK_USAGE("really_probe", 24),
STACK_USAGE("driver_probe_done", 0),
STACK_USAGE("wait_for_device_probe", 56),
STACK_USAGE("__driver_probe_device", 24),
STACK_USAGE("driver_probe_device", 24),
STACK_USAGE("save_async_options", 8),
STACK_USAGE("deferred_probe_work_func", 16),
STACK_USAGE("driver_allows_async_probing", 16),
STACK_USAGE("__device_attach_driver", 24),
STACK_USAGE("__device_attach_async_helper", 40),
STACK_USAGE("__device_attach", 56),
STACK_USAGE("devm_kasprintf", 152),
STACK_USAGE("devm_kfree", 40),
STACK_USAGE("devm_kmemdup", 24),
STACK_USAGE("devm_pages_release", 0),
STACK_USAGE("devm_get_free_pages", 40),
STACK_USAGE("devm_free_pages", 40),
STACK_USAGE("devm_percpu_release", 0),
STACK_USAGE("__devm_alloc_percpu", 40),
STACK_USAGE("devm_free_percpu", 40),
STACK_USAGE("__devres_alloc_node", 24),
STACK_USAGE("devres_for_each_res", 88),
STACK_USAGE("devres_free", 0),
STACK_USAGE("devres_add", 40),
STACK_USAGE("devres_find", 64),
STACK_USAGE("devres_get", 72),
STACK_USAGE("devres_remove", 64),
STACK_USAGE("devres_destroy", 0),
STACK_USAGE("devres_release", 32),
STACK_USAGE("remove_nodes", 32),
STACK_USAGE("devres_release_all", 72),
STACK_USAGE("devres_open_group", 32),
STACK_USAGE("devres_close_group", 48),
STACK_USAGE("devres_remove_group", 40),
STACK_USAGE("devres_release_group", 72),
STACK_USAGE("devres_log", 24),
STACK_USAGE("devm_action_release", 0),
STACK_USAGE("devm_add_action", 32),
STACK_USAGE("devm_remove_action", 48),
STACK_USAGE("devm_release_action", 48),
STACK_USAGE("group_open_release", 0),
STACK_USAGE("devm_kmalloc_release", 0),
STACK_USAGE("devm_kmalloc", 40),
STACK_USAGE("group_close_release", 0),
STACK_USAGE("devm_krealloc", 56),
STACK_USAGE("devm_kstrdup", 32),
STACK_USAGE("devm_kstrdup_const", 32),
STACK_USAGE("devm_kvasprintf", 88),
STACK_USAGE("devtmpfs_create_node", 168),
STACK_USAGE("devtmpfs_delete_node", 168),
STACK_USAGE("devtmpfs_mount", 16),
STACK_USAGE("devtmpfs_work_loop", 336),
STACK_USAGE("devtmpfs_setup", 8),
STACK_USAGE("devtmpfsd", 8),
STACK_USAGE("devtmpfs_init", 40),
STACK_USAGE("mount_param", 0),
STACK_USAGE("public_dev_mount", 24),
STACK_USAGE("driver_create_file", 0),
STACK_USAGE("driver_remove_file", 0),
STACK_USAGE("driver_add_groups", 0),
STACK_USAGE("driver_remove_groups", 0),
STACK_USAGE("driver_register", 16),
STACK_USAGE("driver_unregister", 8),
STACK_USAGE("driver_find", 8),
STACK_USAGE("driver_for_each_device", 56),
STACK_USAGE("driver_find_device", 56),
STACK_USAGE("firmware_init", 8),
STACK_USAGE("firmware_request_builtin", 32),
STACK_USAGE("firmware_request_builtin_buf", 56),
STACK_USAGE("firmware_is_builtin", 0),
STACK_USAGE("kill_pending_fw_fallback_reqs", 24),
STACK_USAGE("timeout_show", 0),
STACK_USAGE("timeout_store", 16),
STACK_USAGE("fw_dev_release", 0),
STACK_USAGE("firmware_uevent", 24),
STACK_USAGE("register_sysfs_loader", 0),
STACK_USAGE("unregister_sysfs_loader", 0),
STACK_USAGE("firmware_loading_show", 24),
STACK_USAGE("firmware_loading_store", 32),
STACK_USAGE("firmware_data_read", 64),
STACK_USAGE("firmware_data_write", 72),
STACK_USAGE("fw_fallback_set_cache_timeout", 0),
STACK_USAGE("fw_fallback_set_default_timeout", 0),
STACK_USAGE("firmware_fallback_sysfs", 64),
STACK_USAGE("register_firmware_config_sysctl", 0),
STACK_USAGE("unregister_firmware_config_sysctl", 0),
STACK_USAGE("release_firmware", 8),
STACK_USAGE("request_firmware_work_func", 24),
STACK_USAGE("request_firmware_nowait", 72),
STACK_USAGE("__async_dev_cache_fw_image", 40),
STACK_USAGE("dev_create_fw_entry", 24),
STACK_USAGE("devm_name_match", 0),
STACK_USAGE("dev_cache_fw_image", 72),
STACK_USAGE("device_uncache_fw_images_work", 80),
STACK_USAGE("fw_pm_notify", 48),
STACK_USAGE("fw_suspend", 0),
STACK_USAGE("register_fw_pm_ops", 8),
STACK_USAGE("fw_shutdown_notify", 0),
STACK_USAGE("firmware_class_init", 8),
STACK_USAGE("firmware_class_exit", 0),
STACK_USAGE("free_fw_priv", 24),
STACK_USAGE("fw_is_paged_buf", 0),
STACK_USAGE("fw_free_paged_buf", 24),
STACK_USAGE("fw_grow_paged_buf", 48),
STACK_USAGE("fw_map_paged_buf", 16),
STACK_USAGE("fw_name_devm_release", 0),
STACK_USAGE("fw_devm_match", 0),
STACK_USAGE("assign_fw", 56),
STACK_USAGE("_request_firmware", 128),
STACK_USAGE("request_firmware", 24),
STACK_USAGE("firmware_request_nowarn", 24),
STACK_USAGE("request_firmware_direct", 24),
STACK_USAGE("firmware_request_platform", 24),
STACK_USAGE("firmware_request_cache", 32),
STACK_USAGE("request_firmware_into_buf", 40),
STACK_USAGE("request_partial_firmware_into_buf", 48),
STACK_USAGE("driver_init", 0),
STACK_USAGE("kobj_map_init", 32),
STACK_USAGE("kobj_map", 72),
STACK_USAGE("kobj_unmap", 48),
STACK_USAGE("kobj_lookup", 80),
STACK_USAGE("module_add_driver", 24),
STACK_USAGE("module_remove_driver", 16),
STACK_USAGE("unregister_one_node", 48),
STACK_USAGE("show_node_state", 0),
STACK_USAGE("node_dev_init", 32),
STACK_USAGE("node_access_release", 0),
STACK_USAGE("node_init_node_access", 32),
STACK_USAGE("cpumap_read", 72),
STACK_USAGE("node_read_meminfo", 296),
STACK_USAGE("node_read_numastat", 56),
STACK_USAGE("node_read_vmstat", 48),
STACK_USAGE("cpulist_read", 72),
STACK_USAGE("node_read_distance", 64),
STACK_USAGE("register_hugetlbfs_with_node", 0),
STACK_USAGE("node_device_release", 0),
STACK_USAGE("unregister_node", 40),
STACK_USAGE("register_cpu_under_node", 24),
STACK_USAGE("register_memory_node_under_compute_node", 48),
STACK_USAGE("unregister_cpu_under_node", 16),
STACK_USAGE("__register_one_node", 48),
STACK_USAGE("pinctrl_bind_pins", 16),
STACK_USAGE("platform_msi_create_irq_domain", 8),
STACK_USAGE("platform_msi_alloc_priv_data", 40),
STACK_USAGE("platform_msi_domain_alloc_irqs", 24),
STACK_USAGE("platform_msi_domain_free_irqs", 8),
STACK_USAGE("platform_msi_get_host_data", 0),
STACK_USAGE("__platform_msi_create_device_domain", 48),
STACK_USAGE("platform_msi_device_domain_free", 32),
STACK_USAGE("platform_msi_device_domain_alloc", 0),
STACK_USAGE("platform_msi_write_msg", 0),
STACK_USAGE("__platform_register_drivers", 40),
STACK_USAGE("platform_unregister_drivers", 16),
STACK_USAGE("platform_pm_suspend", 0),
STACK_USAGE("platform_pm_resume", 0),
STACK_USAGE("platform_pm_freeze", 0),
STACK_USAGE("platform_pm_thaw", 0),
STACK_USAGE("platform_pm_poweroff", 0),
STACK_USAGE("platform_pm_restore", 0),
STACK_USAGE("devm_platform_ioremap_resource", 0),
STACK_USAGE("modalias_show", 16),
STACK_USAGE("numa_node_show", 0),
STACK_USAGE("driver_override_show", 24),
STACK_USAGE("driver_override_store", 40),
STACK_USAGE("platform_dev_attrs_visible", 0),
STACK_USAGE("platform_match", 24),
STACK_USAGE("platform_uevent", 16),
STACK_USAGE("platform_probe", 32),
STACK_USAGE("devm_platform_ioremap_resource_byname", 40),
STACK_USAGE("platform_remove", 8),
STACK_USAGE("platform_shutdown", 0),
STACK_USAGE("platform_dma_configure", 16),
STACK_USAGE("__platform_match", 0),
STACK_USAGE("platform_find_device_by_driver", 0),
STACK_USAGE("early_platform_cleanup", 0),
STACK_USAGE("platform_bus_init", 8),
STACK_USAGE("platform_get_irq_optional", 24),
STACK_USAGE("platform_get_irq", 16),
STACK_USAGE("platform_irq_count", 16),
STACK_USAGE("devm_platform_get_irqs_affinity_release", 32),
STACK_USAGE("devm_platform_get_irqs_affinity", 80),
STACK_USAGE("platform_get_resource_byname", 32),
STACK_USAGE("platform_get_irq_byname", 48),
STACK_USAGE("platform_get_irq_byname_optional", 40),
STACK_USAGE("platform_add_devices", 64),
STACK_USAGE("platform_get_resource", 0),
STACK_USAGE("platform_device_put", 0),
STACK_USAGE("platform_device_release", 16),
STACK_USAGE("platform_device_alloc", 32),
STACK_USAGE("platform_device_add_resources", 32),
STACK_USAGE("platform_device_add_data", 24),
STACK_USAGE("platform_device_add", 56),
STACK_USAGE("platform_get_mem_or_io", 0),
STACK_USAGE("platform_device_del", 24),
STACK_USAGE("platform_device_register", 8),
STACK_USAGE("platform_device_unregister", 32),
STACK_USAGE("platform_device_register_full", 40),
STACK_USAGE("__platform_driver_register", 0),
STACK_USAGE("platform_driver_unregister", 0),
STACK_USAGE("platform_probe_fail", 0),
STACK_USAGE("__platform_driver_probe", 40),
STACK_USAGE("__platform_create_bundle", 72),
STACK_USAGE("devm_platform_get_and_ioremap_resource", 0),
STACK_USAGE("__pm_clk_add", 48),
STACK_USAGE("pm_clk_add", 0),
STACK_USAGE("pm_clk_add_clk", 0),
STACK_USAGE("of_pm_clk_add_clk", 0),
STACK_USAGE("of_pm_clk_add_clks", 0),
STACK_USAGE("__pm_clk_remove", 8),
STACK_USAGE("pm_clk_remove", 40),
STACK_USAGE("pm_clk_remove_clk", 32),
STACK_USAGE("pm_clk_init", 8),
STACK_USAGE("pm_clk_create", 0),
STACK_USAGE("pm_clk_destroy", 64),
STACK_USAGE("pm_clk_destroy_action", 0),
STACK_USAGE("devm_pm_clk_create", 16),
STACK_USAGE("pm_clk_suspend", 56),
STACK_USAGE("pm_clk_resume", 64),
STACK_USAGE("pm_clk_notify", 16),
STACK_USAGE("pm_clk_runtime_suspend", 24),
STACK_USAGE("pm_clk_runtime_resume", 16),
STACK_USAGE("pm_clk_add_notifier", 0),
STACK_USAGE("pm_clk_op_lock", 72),
STACK_USAGE("dev_pm_domain_attach", 0),
STACK_USAGE("dev_pm_domain_attach_by_id", 0),
STACK_USAGE("dev_pm_domain_attach_by_name", 0),
STACK_USAGE("dev_pm_domain_detach", 0),
STACK_USAGE("dev_pm_domain_start", 0),
STACK_USAGE("dev_pm_domain_set", 16),
STACK_USAGE("dev_pm_get_subsys_data", 24),
STACK_USAGE("dev_pm_put_subsys_data", 24),
STACK_USAGE("pm_generic_freeze_noirq", 0),
STACK_USAGE("pm_generic_freeze_late", 0),
STACK_USAGE("pm_generic_freeze", 0),
STACK_USAGE("pm_generic_poweroff_noirq", 0),
STACK_USAGE("pm_generic_poweroff_late", 0),
STACK_USAGE("pm_generic_poweroff", 0),
STACK_USAGE("pm_generic_thaw_noirq", 0),
STACK_USAGE("pm_generic_thaw_early", 0),
STACK_USAGE("pm_generic_thaw", 0),
STACK_USAGE("pm_generic_runtime_suspend", 0),
STACK_USAGE("pm_generic_resume_noirq", 0),
STACK_USAGE("pm_generic_resume_early", 0),
STACK_USAGE("pm_generic_resume", 0),
STACK_USAGE("pm_generic_restore_noirq", 0),
STACK_USAGE("pm_generic_restore_early", 0),
STACK_USAGE("pm_generic_restore", 0),
STACK_USAGE("pm_generic_complete", 0),
STACK_USAGE("pm_generic_runtime_resume", 0),
STACK_USAGE("pm_generic_prepare", 0),
STACK_USAGE("pm_generic_suspend_noirq", 0),
STACK_USAGE("pm_generic_suspend_late", 0),
STACK_USAGE("pm_generic_suspend", 0),
STACK_USAGE("dpm_complete", 72),
STACK_USAGE("device_pm_lock", 0),
STACK_USAGE("dpm_resume_end", 8),
STACK_USAGE("__device_suspend_noirq", 64),
STACK_USAGE("device_pm_unlock", 0),
STACK_USAGE("async_suspend_noirq", 16),
STACK_USAGE("device_pm_add", 8),
STACK_USAGE("dpm_suspend_noirq", 48),
STACK_USAGE("dpm_propagate_wakeup_to_parent", 24),
STACK_USAGE("__device_suspend_late", 64),
STACK_USAGE("async_suspend_late", 16),
STACK_USAGE("dpm_suspend_late", 48),
STACK_USAGE("device_pm_remove", 8),
STACK_USAGE("dpm_suspend_end", 24),
STACK_USAGE("legacy_suspend", 32),
STACK_USAGE("__device_suspend", 64),
STACK_USAGE("async_suspend", 16),
STACK_USAGE("device_pm_move_before", 0),
STACK_USAGE("dpm_suspend", 48),
STACK_USAGE("trace_device_pm_callback_start", 0),
STACK_USAGE("device_pm_move_after", 0),
STACK_USAGE("dpm_prepare", 48),
STACK_USAGE("dpm_suspend_start", 24),
STACK_USAGE("__suspend_report_result", 0),
STACK_USAGE("device_pm_wait_for_dev", 0),
STACK_USAGE("dpm_for_each_dev", 32),
STACK_USAGE("device_pm_move_last", 0),
STACK_USAGE("device_pm_check_callbacks", 16),
STACK_USAGE("dev_pm_skip_suspend", 0),
STACK_USAGE("trace_device_pm_callback_end", 0),
STACK_USAGE("trace_suspend_resume", 0),
STACK_USAGE("dpm_wait_fn", 0),
STACK_USAGE("dpm_wait_for_superior", 40),
STACK_USAGE("pm_op", 0),
STACK_USAGE("pm_late_early_op", 0),
STACK_USAGE("pm_noirq_op", 0),
STACK_USAGE("dpm_run_callback", 40),
STACK_USAGE("dev_pm_skip_resume", 0),
STACK_USAGE("device_resume_noirq", 32),
STACK_USAGE("async_resume_noirq", 8),
STACK_USAGE("dpm_resume_noirq", 48),
STACK_USAGE("device_resume_early", 32),
STACK_USAGE("async_resume_early", 8),
STACK_USAGE("dpm_resume_early", 48),
STACK_USAGE("dpm_resume_start", 8),
STACK_USAGE("device_resume", 32),
STACK_USAGE("device_pm_sleep_init", 16),
STACK_USAGE("async_resume", 8),
STACK_USAGE("dpm_resume", 48),
STACK_USAGE("dev_pm_qos_read_value", 32),
STACK_USAGE("apply_constraint", 24),
STACK_USAGE("dev_pm_qos_constraints_allocate", 32),
STACK_USAGE("dev_pm_qos_constraints_destroy", 40),
STACK_USAGE("__dev_pm_qos_add_request", 40),
STACK_USAGE("dev_pm_qos_add_request", 32),
STACK_USAGE("__dev_pm_qos_update_request", 32),
STACK_USAGE("dev_pm_qos_update_request", 16),
STACK_USAGE("__dev_pm_qos_remove_request", 16),
STACK_USAGE("dev_pm_qos_remove_request", 8),
STACK_USAGE("__dev_pm_qos_flags", 16),
STACK_USAGE("dev_pm_qos_add_notifier", 32),
STACK_USAGE("dev_pm_qos_remove_notifier", 32),
STACK_USAGE("dev_pm_qos_add_ancestor_request", 40),
STACK_USAGE("dev_pm_qos_expose_latency_limit", 32),
STACK_USAGE("dev_pm_qos_hide_latency_limit", 8),
STACK_USAGE("dev_pm_qos_expose_flags", 32),
STACK_USAGE("dev_pm_qos_flags", 40),
STACK_USAGE("dev_pm_qos_hide_flags", 16),
STACK_USAGE("dev_pm_qos_update_flags", 32),
STACK_USAGE("dev_pm_qos_get_user_latency_tolerance", 8),
STACK_USAGE("dev_pm_qos_update_user_latency_tolerance", 24),
STACK_USAGE("dev_pm_qos_expose_latency_tolerance", 8),
STACK_USAGE("dev_pm_qos_hide_latency_tolerance", 16),
STACK_USAGE("__dev_pm_qos_resume_latency", 8),
STACK_USAGE("pm_schedule_suspend", 40),
STACK_USAGE("__pm_runtime_idle", 32),
STACK_USAGE("__pm_runtime_suspend", 32),
STACK_USAGE("__pm_runtime_resume", 32),
STACK_USAGE("pm_runtime_active_time", 32),
STACK_USAGE("pm_runtime_get_if_active", 40),
STACK_USAGE("pm_runtime_suspended_time", 32),
STACK_USAGE("__pm_runtime_set_status", 80),
STACK_USAGE("__pm_runtime_barrier", 80),
STACK_USAGE("pm_runtime_barrier", 24),
STACK_USAGE("__pm_runtime_disable", 24),
STACK_USAGE("pm_runtime_enable", 24),
STACK_USAGE("pm_runtime_disable_action", 16),
STACK_USAGE("devm_pm_runtime_enable", 24),
STACK_USAGE("pm_runtime_forbid", 16),
STACK_USAGE("pm_runtime_allow", 16),
STACK_USAGE("pm_runtime_no_callbacks", 16),
STACK_USAGE("pm_runtime_irq_safe", 32),
STACK_USAGE("pm_runtime_set_autosuspend_delay", 24),
STACK_USAGE("pm_runtime_autosuspend_expiration", 8),
STACK_USAGE("__pm_runtime_use_autosuspend", 24),
STACK_USAGE("pm_runtime_init", 8),
STACK_USAGE("pm_runtime_reinit", 24),
STACK_USAGE("pm_runtime_remove", 8),
STACK_USAGE("pm_runtime_get_suppliers", 48),
STACK_USAGE("pm_runtime_put_suppliers", 64),
STACK_USAGE("pm_runtime_new_link", 16),
STACK_USAGE("pm_runtime_drop_link", 24),
STACK_USAGE("pm_runtime_force_suspend", 24),
STACK_USAGE("dev_memalloc_noio", 0),
STACK_USAGE("pm_runtime_force_resume", 24),
STACK_USAGE("pm_runtime_set_memalloc_noio", 40),
STACK_USAGE("pm_runtime_release_supplier", 24),
STACK_USAGE("__rpm_callback", 80),
STACK_USAGE("rpm_idle", 24),
STACK_USAGE("rpm_suspend", 128),
STACK_USAGE("rpm_resume", 136),
STACK_USAGE("trace_rpm_usage_rcuidle", 24),
STACK_USAGE("trace_rpm_return_int_rcuidle", 32),
STACK_USAGE("pm_runtime_work", 16),
STACK_USAGE("pm_suspend_timer_fn", 32),
STACK_USAGE("control_show", 0),
STACK_USAGE("control_store", 32),
STACK_USAGE("runtime_active_time_show", 8),
STACK_USAGE("runtime_suspended_time_show", 8),
STACK_USAGE("runtime_status_show", 0),
STACK_USAGE("autosuspend_delay_ms_show", 0),
STACK_USAGE("autosuspend_delay_ms_store", 40),
STACK_USAGE("pm_qos_resume_latency_us_show", 0),
STACK_USAGE("pm_qos_resume_latency_us_store", 40),
STACK_USAGE("pm_qos_latency_tolerance_us_show", 8),
STACK_USAGE("pm_qos_latency_tolerance_us_store", 40),
STACK_USAGE("pm_qos_no_power_off_show", 0),
STACK_USAGE("pm_qos_no_power_off_store", 32),
STACK_USAGE("wakeup_show", 0),
STACK_USAGE("wakeup_store", 40),
STACK_USAGE("wakeup_count_show", 24),
STACK_USAGE("wakeup_active_count_show", 24),
STACK_USAGE("wakeup_abort_count_show", 24),
STACK_USAGE("wakeup_expire_count_show", 24),
STACK_USAGE("wakeup_active_show", 24),
STACK_USAGE("wakeup_total_time_ms_show", 24),
STACK_USAGE("wakeup_max_time_ms_show", 24),
STACK_USAGE("wakeup_last_time_ms_show", 24),
STACK_USAGE("dpm_sysfs_add", 24),
STACK_USAGE("dpm_sysfs_change_owner", 24),
STACK_USAGE("wakeup_sysfs_add", 16),
STACK_USAGE("wakeup_sysfs_remove", 8),
STACK_USAGE("pm_qos_sysfs_add_resume_latency", 0),
STACK_USAGE("pm_qos_sysfs_remove_resume_latency", 0),
STACK_USAGE("pm_qos_sysfs_add_flags", 0),
STACK_USAGE("pm_qos_sysfs_remove_flags", 0),
STACK_USAGE("pm_qos_sysfs_add_latency_tolerance", 0),
STACK_USAGE("pm_qos_sysfs_remove_latency_tolerance", 0),
STACK_USAGE("rpm_sysfs_remove", 0),
STACK_USAGE("dpm_sysfs_remove", 8),
STACK_USAGE("set_trace_device", 0),
STACK_USAGE("generate_pm_trace", 0),
STACK_USAGE("show_trace_dev_match", 48),
STACK_USAGE("pm_trace_notify", 0),
STACK_USAGE("early_resume_init", 56),
STACK_USAGE("late_resume_init", 32),
STACK_USAGE("handle_threaded_wake_irq", 8),
STACK_USAGE("__dev_pm_set_dedicated_wake_irq", 40),
STACK_USAGE("dev_pm_attach_wake_irq", 48),
STACK_USAGE("dev_pm_set_dedicated_wake_irq", 0),
STACK_USAGE("dev_pm_set_dedicated_wake_irq_reverse", 0),
STACK_USAGE("dev_pm_enable_wake_irq", 0),
STACK_USAGE("dev_pm_disable_wake_irq", 0),
STACK_USAGE("dev_pm_enable_wake_irq_check", 0),
STACK_USAGE("dev_pm_disable_wake_irq_check", 0),
STACK_USAGE("dev_pm_enable_wake_irq_complete", 0),
STACK_USAGE("dev_pm_arm_wake_irq", 8),
STACK_USAGE("dev_pm_disarm_wake_irq", 8),
STACK_USAGE("dev_pm_set_wake_irq", 24),
STACK_USAGE("dev_pm_clear_wake_irq", 32),
STACK_USAGE("pm_save_wakeup_count", 8),
STACK_USAGE("print_wakeup_source_stats", 80),
STACK_USAGE("wakeup_sources_stats_seq_start", 24),
STACK_USAGE("wakeup_sources_stats_seq_next", 8),
STACK_USAGE("wakeup_sources_stats_seq_stop", 8),
STACK_USAGE("wakeup_sources_stats_seq_show", 0),
STACK_USAGE("wakeup_sources_stats_open", 0),
STACK_USAGE("wakeup_sources_debugfs_init", 0),
STACK_USAGE("wakeup_source_destroy", 24),
STACK_USAGE("wakeup_source_add", 8),
STACK_USAGE("wakeup_source_remove", 8),
STACK_USAGE("wakeup_source_register", 24),
STACK_USAGE("wakeup_source_unregister", 8),
STACK_USAGE("wakeup_sources_read_lock", 8),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("wakeup_sources_read_unlock", 8),
STACK_USAGE("wakeup_sources_walk_start", 0),
STACK_USAGE("wakeup_sources_walk_next", 8),
STACK_USAGE("device_wakeup_enable", 32),
STACK_USAGE("device_wakeup_attach_irq", 16),
STACK_USAGE("device_wakeup_detach_irq", 0),
STACK_USAGE("device_wakeup_arm_wake_irqs", 24),
STACK_USAGE("device_wakeup_disarm_wake_irqs", 24),
STACK_USAGE("device_wakeup_disable", 24),
STACK_USAGE("device_set_wakeup_capable", 8),
STACK_USAGE("device_init_wakeup", 32),
STACK_USAGE("device_set_wakeup_enable", 24),
STACK_USAGE("wakeup_source_report_event", 32),
STACK_USAGE("__pm_stay_awake", 24),
STACK_USAGE("pm_stay_awake", 40),
STACK_USAGE("wakeup_source_deactivate", 8),
STACK_USAGE("__pm_relax", 24),
STACK_USAGE("pm_relax", 40),
STACK_USAGE("pm_wakeup_timer_fn", 24),
STACK_USAGE("pm_wakeup_ws_event", 40),
STACK_USAGE("wakeup_source_create", 16),
STACK_USAGE("pm_wakeup_dev_event", 40),
STACK_USAGE("pm_print_active_wakeup_sources", 40),
STACK_USAGE("pm_wakeup_pending", 24),
STACK_USAGE("pm_system_wakeup", 0),
STACK_USAGE("pm_system_cancel_wakeup", 0),
STACK_USAGE("pm_wakeup_clear", 8),
STACK_USAGE("pm_system_irq_wakeup", 8),
STACK_USAGE("pm_wakeup_irq", 0),
STACK_USAGE("pm_get_wakeup_count", 72),
STACK_USAGE("prevent_suspend_time_ms_show", 24),
STACK_USAGE("device_create_release", 0),
STACK_USAGE("wakeup_source_sysfs_add", 32),
STACK_USAGE("pm_wakeup_source_sysfs_add", 0),
STACK_USAGE("wakeup_source_sysfs_remove", 0),
STACK_USAGE("wakeup_sources_sysfs_init", 8),
STACK_USAGE("active_count_show", 0),
STACK_USAGE("event_count_show", 0),
STACK_USAGE("wakeup_count_show", 0),
STACK_USAGE("expire_count_show", 0),
STACK_USAGE("active_time_ms_show", 16),
STACK_USAGE("total_time_ms_show", 24),
STACK_USAGE("max_time_ms_show", 24),
STACK_USAGE("last_change_ms_show", 0),
STACK_USAGE("name_show", 0),
STACK_USAGE("fwnode_graph_get_port_parent", 16),
STACK_USAGE("fwnode_graph_get_remote_port_parent", 24),
STACK_USAGE("device_property_read_u16_array", 32),
STACK_USAGE("fwnode_graph_get_remote_port", 16),
STACK_USAGE("fwnode_graph_get_remote_endpoint", 0),
STACK_USAGE("fwnode_graph_remote_available", 32),
STACK_USAGE("fwnode_graph_get_endpoint_by_id", 88),
STACK_USAGE("fwnode_graph_get_endpoint_count", 48),
STACK_USAGE("fwnode_graph_parse_endpoint", 0),
STACK_USAGE("device_get_match_data", 0),
STACK_USAGE("fwnode_connection_find_match", 152),
STACK_USAGE("device_property_read_u32_array", 32),
STACK_USAGE("device_property_read_u64_array", 32),
STACK_USAGE("device_property_read_string_array", 32),
STACK_USAGE("device_property_read_string", 24),
STACK_USAGE("dev_fwnode", 0),
STACK_USAGE("device_property_match_string", 0),
STACK_USAGE("fwnode_property_read_u8_array", 32),
STACK_USAGE("fwnode_property_read_u16_array", 32),
STACK_USAGE("fwnode_property_read_u32_array", 32),
STACK_USAGE("fwnode_property_read_u64_array", 32),
STACK_USAGE("device_property_present", 16),
STACK_USAGE("fwnode_property_read_string_array", 32),
STACK_USAGE("fwnode_property_read_string", 24),
STACK_USAGE("fwnode_property_match_string", 48),
STACK_USAGE("fwnode_property_present", 16),
STACK_USAGE("fwnode_property_get_reference_args", 48),
STACK_USAGE("fwnode_find_reference", 112),
STACK_USAGE("fwnode_get_name", 0),
STACK_USAGE("fwnode_get_name_prefix", 0),
STACK_USAGE("fwnode_get_parent", 0),
STACK_USAGE("fwnode_get_next_parent", 16),
STACK_USAGE("fwnode_get_next_parent_dev", 24),
STACK_USAGE("fwnode_count_parents", 24),
STACK_USAGE("fwnode_get_nth_parent", 32),
STACK_USAGE("fwnode_is_ancestor_of", 24),
STACK_USAGE("fwnode_get_next_child_node", 0),
STACK_USAGE("fwnode_get_next_available_child_node", 16),
STACK_USAGE("device_get_next_child_node", 16),
STACK_USAGE("fwnode_get_named_child_node", 0),
STACK_USAGE("device_get_named_child_node", 0),
STACK_USAGE("fwnode_handle_get", 0),
STACK_USAGE("device_property_read_u8_array", 32),
STACK_USAGE("fwnode_handle_put", 0),
STACK_USAGE("fwnode_device_is_available", 0),
STACK_USAGE("device_get_child_node_count", 40),
STACK_USAGE("device_dma_supported", 8),
STACK_USAGE("device_get_dma_attr", 8),
STACK_USAGE("fwnode_get_phy_mode", 32),
STACK_USAGE("device_get_phy_mode", 0),
STACK_USAGE("fwnode_iomap", 0),
STACK_USAGE("fwnode_irq_get", 0),
STACK_USAGE("fwnode_irq_get_byname", 16),
STACK_USAGE("fwnode_graph_get_next_endpoint", 24),
STACK_USAGE("fwnode_remove_software_node", 0),
STACK_USAGE("device_add_software_node", 32),
STACK_USAGE("device_remove_software_node", 16),
STACK_USAGE("device_create_managed_software_node", 40),
STACK_USAGE("software_node_notify", 16),
STACK_USAGE("software_node_notify_remove", 24),
STACK_USAGE("software_node_init", 8),
STACK_USAGE("software_node_exit", 0),
STACK_USAGE("property_entry_read_int_array", 40),
STACK_USAGE("property_entries_dup", 88),
STACK_USAGE("property_entries_free", 40),
STACK_USAGE("software_node_get", 8),
STACK_USAGE("software_node_put", 0),
STACK_USAGE("software_node_property_present", 16),
STACK_USAGE("software_node_read_int_array", 0),
STACK_USAGE("is_software_node", 0),
STACK_USAGE("software_node_read_string_array", 56),
STACK_USAGE("software_node_get_name", 0),
STACK_USAGE("software_node_get_name_prefix", 16),
STACK_USAGE("software_node_get_parent", 0),
STACK_USAGE("software_node_get_next_child", 8),
STACK_USAGE("software_node_get_named_child_node", 32),
STACK_USAGE("software_node_get_reference_args", 72),
STACK_USAGE("swnode_graph_find_next_port", 48),
STACK_USAGE("software_node_graph_get_next_endpoint", 48),
STACK_USAGE("software_node_graph_get_remote_endpoint", 16),
STACK_USAGE("software_node_graph_get_port_parent", 16),
STACK_USAGE("software_node_graph_parse_endpoint", 40),
STACK_USAGE("software_node_find_by_name", 32),
STACK_USAGE("software_node_release", 16),
STACK_USAGE("swnode_register", 48),
STACK_USAGE("software_node_register_nodes", 40),
STACK_USAGE("software_node_unregister_nodes", 40),
STACK_USAGE("software_node_register_node_group", 32),
STACK_USAGE("to_software_node", 0),
STACK_USAGE("software_node_unregister_node_group", 40),
STACK_USAGE("software_node_register", 24),
STACK_USAGE("software_node_unregister", 16),
STACK_USAGE("fwnode_create_software_node", 32),
STACK_USAGE("software_node_fwnode", 16),
STACK_USAGE("syscore_shutdown", 16),
STACK_USAGE("register_syscore_ops", 8),
STACK_USAGE("trace_suspend_resume", 0),
STACK_USAGE("unregister_syscore_ops", 8),
STACK_USAGE("syscore_suspend", 40),
STACK_USAGE("syscore_resume", 32),
STACK_USAGE("topology_is_visible", 0),
STACK_USAGE("topology_add_dev", 0),
STACK_USAGE("topology_remove_dev", 0),
STACK_USAGE("topology_sysfs_init", 0),
STACK_USAGE("physical_package_id_show", 0),
STACK_USAGE("die_id_show", 0),
STACK_USAGE("cluster_id_show", 0),
STACK_USAGE("core_id_show", 0),
STACK_USAGE("ppin_show", 0),
STACK_USAGE("thread_siblings_list_read", 0),
STACK_USAGE("thread_siblings_read", 0),
STACK_USAGE("core_cpus_list_read", 0),
STACK_USAGE("core_cpus_read", 0),
STACK_USAGE("core_siblings_list_read", 0),
STACK_USAGE("core_siblings_read", 0),
STACK_USAGE("cluster_cpus_list_read", 24),
STACK_USAGE("cluster_cpus_read", 24),
STACK_USAGE("die_cpus_list_read", 0),
STACK_USAGE("die_cpus_read", 0),
STACK_USAGE("package_cpus_list_read", 0),
STACK_USAGE("package_cpus_read", 0),
STACK_USAGE("__bpf_trace_devres", 0),
STACK_USAGE("perf_trace_devres", 120),
STACK_USAGE("trace_event_raw_event_devres", 112),
STACK_USAGE("trace_raw_output_devres", 24),
STACK_USAGE("__traceiter_devres_log", 48),
STACK_USAGE("anon_transport_class_unregister", 0),
STACK_USAGE("transport_setup_classdev", 0),
STACK_USAGE("transport_setup_device", 0),
STACK_USAGE("transport_add_class_device", 16),
STACK_USAGE("transport_add_device", 0),
STACK_USAGE("transport_configure", 0),
STACK_USAGE("transport_configure_device", 0),
STACK_USAGE("transport_remove_classdev", 24),
STACK_USAGE("transport_remove_device", 0),
STACK_USAGE("transport_destroy_classdev", 0),
STACK_USAGE("transport_destroy_device", 0),
STACK_USAGE("transport_class_register", 0),
STACK_USAGE("transport_class_unregister", 0),
STACK_USAGE("anon_transport_dummy_function", 0),
STACK_USAGE("anon_transport_class_register", 8),
STACK_USAGE("brd_do_bvec", 88),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("brd_submit_bio", 64),
STACK_USAGE("brd_rw_page", 24),
STACK_USAGE("local_lock_release", 8),
STACK_USAGE("ramdisk_size", 0),
STACK_USAGE("brd_alloc", 88),
STACK_USAGE("brd_probe", 0),
STACK_USAGE("brd_cleanup", 216),
STACK_USAGE("brd_init", 32),
STACK_USAGE("brd_exit", 0),
STACK_USAGE("brd_lookup_page", 16),
STACK_USAGE("brd_insert_page", 40),
STACK_USAGE("__loop_clr_fd", 80),
STACK_USAGE("loop_set_status", 40),
STACK_USAGE("loop_get_status", 200),
STACK_USAGE("lo_ioctl", 528),
STACK_USAGE("loop_info64_from_compat", 168),
STACK_USAGE("loop_info64_to_compat", 168),
STACK_USAGE("__loop_update_dio", 16),
STACK_USAGE("lo_compat_ioctl", 256),
STACK_USAGE("lo_open", 24),
STACK_USAGE("lo_release", 16),
STACK_USAGE("loop_set_hw_queue_depth", 0),
STACK_USAGE("loop_queue_rq", 80),
STACK_USAGE("loop_process_work", 216),
STACK_USAGE("loop_workfn", 0),
STACK_USAGE("loop_rootcg_workfn", 0),
STACK_USAGE("loop_free_idle_workers", 64),
STACK_USAGE("loop_add", 40),
STACK_USAGE("loop_probe", 0),
STACK_USAGE("loop_control_ioctl", 40),
STACK_USAGE("loop_init", 24),
STACK_USAGE("loop_exit", 32),
STACK_USAGE("max_loop_setup", 0),
STACK_USAGE("loop_set_size", 8),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("lo_complete_rq", 24),
STACK_USAGE("lo_rw_aio_complete", 16),
STACK_USAGE("lo_rw_aio", 120),
STACK_USAGE("css_put", 16),
STACK_USAGE("loop_reread_partitions", 24),
STACK_USAGE("loop_validate_file", 32),
STACK_USAGE("loop_attr_do_show_backing_file", 24),
STACK_USAGE("loop_attr_do_show_offset", 0),
STACK_USAGE("loop_attr_do_show_sizelimit", 0),
STACK_USAGE("loop_attr_do_show_autoclear", 0),
STACK_USAGE("loop_attr_do_show_partscan", 0),
STACK_USAGE("loop_attr_do_show_dio", 0),
STACK_USAGE("loop_config_discard", 144),
STACK_USAGE("loop_update_rotational", 0),
STACK_USAGE("loop_set_status_from_info", 8),
STACK_USAGE("loop_configure", 72),
STACK_USAGE("virtio_blk_init", 16),
STACK_USAGE("virtio_blk_fini", 0),
STACK_USAGE("virtblk_cleanup_cmd", 0),
STACK_USAGE("virtblk_request_done", 8),
STACK_USAGE("virtblk_done", 64),
STACK_USAGE("virtio_commit_rqs", 32),
STACK_USAGE("virtio_queue_rq", 200),
STACK_USAGE("virtblk_getgeo", 48),
STACK_USAGE("virtblk_free_disk", 8),
STACK_USAGE("serial_show", 24),
STACK_USAGE("virtblk_update_capacity", 104),
STACK_USAGE("virtblk_config_changed_work", 0),
STACK_USAGE("virtblk_config_changed", 0),
STACK_USAGE("init_vq", 128),
STACK_USAGE("virtblk_update_cache_mode", 24),
STACK_USAGE("cache_type_store", 40),
STACK_USAGE("cache_type_show", 32),
STACK_USAGE("virtblk_attrs_are_visible", 16),
STACK_USAGE("virtblk_map_queues", 0),
STACK_USAGE("virtblk_probe", 88),
STACK_USAGE("virtblk_remove", 16),
STACK_USAGE("virtblk_freeze", 16),
STACK_USAGE("virtblk_restore", 24),
STACK_USAGE("cdrom_open", 408),
STACK_USAGE("check_for_audio_disc", 56),
STACK_USAGE("cdrom_release", 112),
STACK_USAGE("cdrom_number_of_slots", 104),
STACK_USAGE("cdrom_load_unload", 72),
STACK_USAGE("cdrom_check_events", 8),
STACK_USAGE("init_cdrom_command", 32),
STACK_USAGE("cdrom_mode_sense", 0),
STACK_USAGE("cdrom_mode_select", 0),
STACK_USAGE("cdrom_multisession", 16),
STACK_USAGE("cdrom_ioctl_get_subchnl", 48),
STACK_USAGE("cdrom_ioctl_read_tochdr", 32),
STACK_USAGE("cdrom_read_tocentry", 16),
STACK_USAGE("cdrom_ioctl_read_tocentry", 56),
STACK_USAGE("cdrom_ioctl_play_msf", 24),
STACK_USAGE("cdrom_ioctl_play_trkind", 24),
STACK_USAGE("cdrom_ioctl_volctrl", 24),
STACK_USAGE("cdrom_ioctl_volread", 24),
STACK_USAGE("cdrom_ioctl_audioctl", 16),
STACK_USAGE("cdrom_get_last_written", 192),
STACK_USAGE("mmc_ioctl_cdrom_read_data", 192),
STACK_USAGE("mmc_ioctl_cdrom_read_audio", 184),
STACK_USAGE("mmc_ioctl_cdrom_subchannel", 152),
STACK_USAGE("mmc_ioctl_cdrom_play_msf", 40),
STACK_USAGE("mmc_ioctl_cdrom_play_blk", 40),
STACK_USAGE("mmc_ioctl_cdrom_volume", 136),
STACK_USAGE("mmc_ioctl_cdrom_start_stop", 0),
STACK_USAGE("mmc_ioctl_cdrom_pause_resume", 0),
STACK_USAGE("mmc_ioctl_dvd_read_struct", 104),
STACK_USAGE("mmc_ioctl_dvd_auth", 152),
STACK_USAGE("mmc_ioctl_cdrom_next_writable", 208),
STACK_USAGE("mmc_ioctl_cdrom_last_written", 24),
STACK_USAGE("cdrom_ioctl", 112),
STACK_USAGE("cdrom_sysctl_info", 64),
STACK_USAGE("cdrom_dummy_generic_packet", 0),
STACK_USAGE("cdrom_sysctl_handler", 24),
STACK_USAGE("cdrom_init", 0),
STACK_USAGE("cdrom_exit", 0),
STACK_USAGE("cdrom_mrw_bgformat", 96),
STACK_USAGE("cdrom_mrw_exit", 136),
STACK_USAGE("register_cdrom", 32),
STACK_USAGE("unregister_cdrom", 8),
STACK_USAGE("cdrom_get_media_event", 88),
STACK_USAGE("cdrom_count_tracks", 72),
STACK_USAGE("amd64_fetch_size", 24),
STACK_USAGE("amd_8151_configure", 64),
STACK_USAGE("amd64_cleanup", 40),
STACK_USAGE("agp_aperture_valid", 32),
STACK_USAGE("amd64_tlbflush", 0),
STACK_USAGE("nforce3_agp_init", 72),
STACK_USAGE("amd64_insert_memory", 48),
STACK_USAGE("agp_amd64_probe", 112),
STACK_USAGE("agp_amd64_remove", 8),
STACK_USAGE("agp_amd64_resume", 0),
STACK_USAGE("agp_amd64_init", 0),
STACK_USAGE("agp_amd64_mod_init", 0),
STACK_USAGE("agp_amd64_cleanup", 0),
STACK_USAGE("agp_alloc_bridge", 0),
STACK_USAGE("agp_put_bridge", 0),
STACK_USAGE("agp_add_bridge", 40),
STACK_USAGE("agp_remove_bridge", 16),
STACK_USAGE("agp_init", 0),
STACK_USAGE("agp_exit", 0),
STACK_USAGE("agp_setup", 8),
STACK_USAGE("agp_backend_acquire", 0),
STACK_USAGE("agp_backend_release", 0),
STACK_USAGE("agp_generic_insert_memory", 40),
STACK_USAGE("agp_generic_remove_memory", 32),
STACK_USAGE("agp_generic_alloc_by_type", 0),
STACK_USAGE("agp_generic_free_by_type", 8),
STACK_USAGE("agp_generic_alloc_user", 32),
STACK_USAGE("agp_generic_alloc_pages", 24),
STACK_USAGE("agp_generic_alloc_page", 8),
STACK_USAGE("agp_generic_destroy_pages", 24),
STACK_USAGE("agp_generic_destroy_page", 16),
STACK_USAGE("agp_create_memory", 24),
STACK_USAGE("agp_enable", 0),
STACK_USAGE("agp_generic_find_bridge", 0),
STACK_USAGE("ipi_handler", 0),
STACK_USAGE("global_cache_flush", 0),
STACK_USAGE("agp_generic_mask_memory", 0),
STACK_USAGE("agp_generic_type_to_mask_type", 0),
STACK_USAGE("agp3_generic_fetch_size", 16),
STACK_USAGE("agp3_generic_tlbflush", 16),
STACK_USAGE("agp3_generic_configure", 32),
STACK_USAGE("agp3_generic_cleanup", 16),
STACK_USAGE("agp_free_memory", 24),
STACK_USAGE("agp_allocate_memory", 32),
STACK_USAGE("agp_num_entries", 0),
STACK_USAGE("agp_copy_info", 0),
STACK_USAGE("agp_bind_memory", 24),
STACK_USAGE("agp_unbind_memory", 16),
STACK_USAGE("agp_free_key", 0),
STACK_USAGE("agp_collect_device_status", 64),
STACK_USAGE("agp_device_command", 40),
STACK_USAGE("get_agp_version", 24),
STACK_USAGE("agp_generic_enable", 40),
STACK_USAGE("agp_generic_create_gatt_table", 48),
STACK_USAGE("agp_alloc_page_array", 8),
STACK_USAGE("agp_generic_free_gatt_table", 40),
STACK_USAGE("intel_8xx_cleanup", 24),
STACK_USAGE("intel_configure", 24),
STACK_USAGE("intel_815_configure", 40),
STACK_USAGE("intel_fetch_size", 16),
STACK_USAGE("intel_820_tlbflush", 0),
STACK_USAGE("intel_820_cleanup", 24),
STACK_USAGE("intel_820_configure", 24),
STACK_USAGE("intel_840_configure", 24),
STACK_USAGE("intel_845_configure", 24),
STACK_USAGE("intel_850_configure", 24),
STACK_USAGE("intel_860_configure", 24),
STACK_USAGE("intel_830mp_configure", 24),
STACK_USAGE("intel_7505_configure", 24),
STACK_USAGE("intel_8xx_fetch_size", 16),
STACK_USAGE("intel_815_fetch_size", 16),
STACK_USAGE("agp_intel_probe", 32),
STACK_USAGE("intel_tlbflush", 0),
STACK_USAGE("agp_intel_remove", 8),
STACK_USAGE("agp_intel_resume", 0),
STACK_USAGE("intel_8xx_tlbflush", 24),
STACK_USAGE("agp_intel_init", 0),
STACK_USAGE("agp_intel_cleanup", 0),
STACK_USAGE("intel_cleanup", 24),
STACK_USAGE("i9xx_cleanup", 0),
STACK_USAGE("i9xx_chipset_flush", 0),
STACK_USAGE("i965_write_entry", 0),
STACK_USAGE("i9xx_setup", 24),
STACK_USAGE("intel_gmch_probe", 72),
STACK_USAGE("intel_fake_agp_enable", 0),
STACK_USAGE("intel_gtt_get", 0),
STACK_USAGE("intel_gtt_chipset_flush", 0),
STACK_USAGE("intel_gmch_remove", 0),
STACK_USAGE("i810_setup", 24),
STACK_USAGE("i810_cleanup", 0),
STACK_USAGE("intel_i810_free_by_type", 16),
STACK_USAGE("i810_write_entry", 0),
STACK_USAGE("intel_gtt_cleanup", 0),
STACK_USAGE("intel_fake_agp_fetch_size", 0),
STACK_USAGE("i830_cleanup", 0),
STACK_USAGE("i830_chipset_flush", 8),
STACK_USAGE("i830_write_entry", 0),
STACK_USAGE("intel_enable_gtt", 24),
STACK_USAGE("i830_setup", 8),
STACK_USAGE("intel_fake_agp_create_gatt_table", 0),
STACK_USAGE("intel_fake_agp_free_gatt_table", 0),
STACK_USAGE("intel_fake_agp_configure", 8),
STACK_USAGE("i830_check_flags", 0),
STACK_USAGE("intel_gtt_insert_page", 8),
STACK_USAGE("intel_gtt_insert_sg_entries", 56),
STACK_USAGE("intel_fake_agp_insert_entries", 72),
STACK_USAGE("intel_gtt_clear_range", 16),
STACK_USAGE("intel_fake_agp_remove_entries", 48),
STACK_USAGE("intel_fake_agp_alloc_by_type", 24),
STACK_USAGE("agp_3_5_nonisochronous_node_enable", 64),
STACK_USAGE("agp_3_5_enable", 168),
STACK_USAGE("agp_sis_probe", 24),
STACK_USAGE("agp_sis_remove", 8),
STACK_USAGE("agp_sis_resume", 0),
STACK_USAGE("sis_fetch_size", 16),
STACK_USAGE("agp_sis_init", 0),
STACK_USAGE("agp_sis_cleanup", 0),
STACK_USAGE("sis_tlbflush", 0),
STACK_USAGE("sis_configure", 32),
STACK_USAGE("sis_cleanup", 0),
STACK_USAGE("sis_delayed_enable", 56),
STACK_USAGE("via_fetch_size_agp3", 24),
STACK_USAGE("via_configure_agp3", 24),
STACK_USAGE("via_cleanup_agp3", 0),
STACK_USAGE("via_tlbflush_agp3", 16),
STACK_USAGE("via_fetch_size", 24),
STACK_USAGE("check_via_agp3", 24),
STACK_USAGE("agp_via_probe", 24),
STACK_USAGE("via_configure", 24),
STACK_USAGE("agp_via_remove", 8),
STACK_USAGE("agp_via_resume", 24),
STACK_USAGE("agp_via_init", 0),
STACK_USAGE("agp_via_cleanup", 0),
STACK_USAGE("via_cleanup", 0),
STACK_USAGE("via_tlbflush", 24),
STACK_USAGE("hpet_init", 8),
STACK_USAGE("hpet_interrupt", 16),
STACK_USAGE("hpet_open", 64),
STACK_USAGE("hpet_read", 96),
STACK_USAGE("hpet_poll", 8),
STACK_USAGE("hpet_mmap", 0),
STACK_USAGE("hpet_fasync", 0),
STACK_USAGE("hpet_release", 32),
STACK_USAGE("hpet_ioctl_common", 72),
STACK_USAGE("hpet_ioctl", 56),
STACK_USAGE("hpet_compat_ioctl", 56),
STACK_USAGE("hpet_alloc", 80),
STACK_USAGE("hpet_resources", 104),
STACK_USAGE("hpet_acpi_add", 176),
STACK_USAGE("rng_dev_open", 0),
STACK_USAGE("rng_dev_read", 64),
STACK_USAGE("enable_best_rng", 8),
STACK_USAGE("rng_current_store", 48),
STACK_USAGE("rng_current_show", 24),
STACK_USAGE("rng_available_show", 24),
STACK_USAGE("rng_selected_show", 0),
STACK_USAGE("rng_quality_show", 24),
STACK_USAGE("rng_quality_store", 40),
STACK_USAGE("unregister_miscdev", 0),
STACK_USAGE("hwrng_fillfn", 32),
STACK_USAGE("hwrng_manage_rngd", 8),
STACK_USAGE("hwrng_register", 40),
STACK_USAGE("hwrng_unregister", 40),
STACK_USAGE("devm_hwrng_release", 0),
STACK_USAGE("devm_hwrng_match", 0),
STACK_USAGE("add_early_randomness", 16),
STACK_USAGE("devm_hwrng_register", 32),
STACK_USAGE("devm_hwrng_unregister", 0),
STACK_USAGE("hwrng_modinit", 8),
STACK_USAGE("hwrng_modexit", 0),
STACK_USAGE("set_current_rng", 16),
STACK_USAGE("via_rng_data_read", 0),
STACK_USAGE("via_rng_init", 24),
STACK_USAGE("via_rng_mod_init", 8),
STACK_USAGE("via_rng_mod_exit", 0),
STACK_USAGE("via_rng_data_present", 72),
STACK_USAGE("read_mem", 88),
STACK_USAGE("write_mem", 80),
STACK_USAGE("phys_mem_access_prot_allowed", 0),
STACK_USAGE("mmap_mem", 56),
STACK_USAGE("read_port", 8),
STACK_USAGE("write_port", 0),
STACK_USAGE("read_null", 0),
STACK_USAGE("write_null", 0),
STACK_USAGE("read_iter_null", 0),
STACK_USAGE("write_iter_null", 8),
STACK_USAGE("pipe_to_null", 0),
STACK_USAGE("splice_write_null", 0),
STACK_USAGE("read_iter_zero", 32),
STACK_USAGE("read_zero", 32),
STACK_USAGE("mmap_zero", 0),
STACK_USAGE("get_unmapped_area_zero", 0),
STACK_USAGE("write_full", 0),
STACK_USAGE("null_lseek", 0),
STACK_USAGE("memory_lseek", 32),
STACK_USAGE("open_port", 24),
STACK_USAGE("memory_open", 0),
STACK_USAGE("mem_devnode", 0),
STACK_USAGE("chr_dev_init", 16),
STACK_USAGE("misc_open", 48),
STACK_USAGE("misc_register", 32),
STACK_USAGE("misc_deregister", 16),
STACK_USAGE("misc_devnode", 0),
STACK_USAGE("misc_init", 16),
STACK_USAGE("misc_seq_start", 8),
STACK_USAGE("misc_seq_next", 0),
STACK_USAGE("misc_seq_stop", 0),
STACK_USAGE("misc_seq_show", 0),
STACK_USAGE("pc_nvram_write_byte", 24),
STACK_USAGE("pc_nvram_set_checksum", 16),
STACK_USAGE("pc_nvram_initialize", 16),
STACK_USAGE("pc_nvram_get_size", 0),
STACK_USAGE("pc_nvram_read", 48),
STACK_USAGE("pc_nvram_write", 56),
STACK_USAGE("nvram_misc_llseek", 0),
STACK_USAGE("nvram_misc_read", 32),
STACK_USAGE("nvram_misc_write", 24),
STACK_USAGE("nvram_misc_ioctl", 16),
STACK_USAGE("nvram_misc_open", 16),
STACK_USAGE("nvram_misc_release", 8),
STACK_USAGE("nvram_proc_read", 168),
STACK_USAGE("nvram_module_init", 8),
STACK_USAGE("nvram_module_exit", 0),
STACK_USAGE("pc_nvram_read_byte", 16),
STACK_USAGE("add_device_randomness", 48),
STACK_USAGE("add_timer_randomness", 56),
STACK_USAGE("rng_is_initialized", 0),
STACK_USAGE("add_input_randomness", 0),
STACK_USAGE("add_disk_randomness", 0),
STACK_USAGE("rand_initialize_disk", 8),
STACK_USAGE("add_hwgenerator_randomness", 96),
STACK_USAGE("add_bootloader_randomness", 0),
STACK_USAGE("add_vmfork_randomness", 0),
STACK_USAGE("register_random_vmfork_notifier", 0),
STACK_USAGE("unregister_random_vmfork_notifier", 0),
STACK_USAGE("wait_for_random_bytes", 80),
STACK_USAGE("random_online_cpu", 0),
STACK_USAGE("mix_interrupt_randomness", 40),
STACK_USAGE("add_interrupt_randomness", 40),
STACK_USAGE("entropy_timer", 0),
STACK_USAGE("try_to_generate_entropy", 120),
STACK_USAGE("__ia32_sys_getrandom", 16),
STACK_USAGE("__x64_sys_getrandom", 16),
STACK_USAGE("register_random_ready_notifier", 24),
STACK_USAGE("random_poll", 16),
STACK_USAGE("write_pool", 120),
STACK_USAGE("random_write", 8),
STACK_USAGE("urandom_read", 16),
STACK_USAGE("random_read", 16),
STACK_USAGE("arch_get_random_long_early", 0),
STACK_USAGE("random_ioctl", 24),
STACK_USAGE("random_fasync", 0),
STACK_USAGE("unregister_random_ready_notifier", 16),
STACK_USAGE("proc_do_uuid", 184),
STACK_USAGE("proc_do_rointvec", 0),
STACK_USAGE("process_random_ready_list", 8),
STACK_USAGE("random_sysctls_init", 0),
STACK_USAGE("crng_reseed", 72),
STACK_USAGE("local_lock_acquire", 8),
STACK_USAGE("crng_fast_key_erasure", 120),
STACK_USAGE("local_lock_release", 8),
STACK_USAGE("crng_make_state", 136),
STACK_USAGE("crng_pre_init_inject", 168),
STACK_USAGE("_get_random_bytes", 184),
STACK_USAGE("get_random_bytes", 24),
STACK_USAGE("get_random_bytes_user", 184),
STACK_USAGE("get_random_u64", 120),
STACK_USAGE("get_random_u32", 120),
STACK_USAGE("random_prepare_cpu", 0),
STACK_USAGE("randomize_page", 16),
STACK_USAGE("get_random_bytes_arch", 56),
STACK_USAGE("mix_pool_bytes", 24),
STACK_USAGE("credit_entropy_bits", 0),
STACK_USAGE("extract_entropy", 312),
STACK_USAGE("parse_trust_cpu", 0),
STACK_USAGE("parse_trust_bootloader", 0),
STACK_USAGE("rand_initialize", 48),
STACK_USAGE("tpm_read_log_acpi", 48),
STACK_USAGE("tpm_bios_log_setup", 32),
STACK_USAGE("tpm_bios_log_teardown", 24),
STACK_USAGE("tpm_bios_measurements_open", 32),
STACK_USAGE("tpm_bios_measurements_release", 16),
STACK_USAGE("tpm_read_log_efi", 48),
STACK_USAGE("tpm1_bios_measurements_next", 0),
STACK_USAGE("tpm1_bios_measurements_stop", 0),
STACK_USAGE("tpm1_binary_bios_measurements_show", 72),
STACK_USAGE("tpm1_ascii_bios_measurements_show", 120),
STACK_USAGE("tpm1_bios_measurements_start", 0),
STACK_USAGE("tpm2_bios_measurements_stop", 0),
STACK_USAGE("tpm2_binary_bios_measurements_show", 16),
STACK_USAGE("calc_tpm2_event_size", 72),
STACK_USAGE("tpm2_bios_measurements_start", 48),
STACK_USAGE("tpm2_bios_measurements_next", 32),
STACK_USAGE("tpm_chip_start", 24),
STACK_USAGE("tpm_chip_stop", 8),
STACK_USAGE("tpm_try_get_ops", 40),
STACK_USAGE("tpm_put_ops", 8),
STACK_USAGE("tpm_default_chip", 40),
STACK_USAGE("tpm_find_get_ops", 40),
STACK_USAGE("tpm_dev_release", 8),
STACK_USAGE("tpm_class_shutdown", 16),
STACK_USAGE("tpm_chip_alloc", 32),
STACK_USAGE("tpmm_chip_alloc", 24),
STACK_USAGE("tpm_add_legacy_sysfs", 24),
STACK_USAGE("tpm_hwrng_read", 0),
STACK_USAGE("tpm_chip_register", 24),
STACK_USAGE("tpm_chip_unregister", 24),
STACK_USAGE("tpm_common_open", 24),
STACK_USAGE("tpm_common_read", 48),
STACK_USAGE("tpm_common_write", 64),
STACK_USAGE("tpm_common_poll", 16),
STACK_USAGE("tpm_dev_transmit", 40),
STACK_USAGE("tpm_common_release", 16),
STACK_USAGE("tpm_dev_common_init", 8),
STACK_USAGE("tpm_dev_common_exit", 0),
STACK_USAGE("tpm_dev_async_work", 64),
STACK_USAGE("user_reader_timeout", 8),
STACK_USAGE("tpm_timeout_work", 16),
STACK_USAGE("tpm_open", 24),
STACK_USAGE("tpm_release", 8),
STACK_USAGE("tpm_transmit", 120),
STACK_USAGE("tpm_transmit_cmd", 48),
STACK_USAGE("tpm_get_timeouts", 0),
STACK_USAGE("tpm_is_tpm2", 8),
STACK_USAGE("tpm_pcr_read", 24),
STACK_USAGE("tpm_pcr_extend", 24),
STACK_USAGE("tpm_send", 24),
STACK_USAGE("tpm_auto_startup", 0),
STACK_USAGE("tpm_pm_suspend", 16),
STACK_USAGE("tpm_pm_resume", 0),
STACK_USAGE("tpm_get_random", 32),
STACK_USAGE("tpm_init", 16),
STACK_USAGE("tpm_exit", 0),
STACK_USAGE("tpm_calc_ordinal_duration", 0),
STACK_USAGE("enabled_show", 56),
STACK_USAGE("active_show", 56),
STACK_USAGE("owned_show", 56),
STACK_USAGE("temp_deactivated_show", 56),
STACK_USAGE("caps_show", 72),
STACK_USAGE("cancel_store", 16),
STACK_USAGE("durations_show", 32),
STACK_USAGE("timeouts_show", 40),
STACK_USAGE("tpm_version_major_show", 0),
STACK_USAGE("pubek_show", 72),
STACK_USAGE("pcr_value_show", 112),
STACK_USAGE("tpm_sysfs_add_device", 16),
STACK_USAGE("pcrs_show", 120),
STACK_USAGE("tpm1_calc_ordinal_duration", 0),
STACK_USAGE("tpm1_get_timeouts", 184),
STACK_USAGE("tpm1_pcr_extend", 72),
STACK_USAGE("tpm1_getcap", 80),
STACK_USAGE("tpm1_get_random", 96),
STACK_USAGE("tpm1_pcr_read", 56),
STACK_USAGE("tpm1_do_selftest", 72),
STACK_USAGE("tpm1_auto_startup", 16),
STACK_USAGE("tpm1_pm_suspend", 104),
STACK_USAGE("tpm1_get_pcr_allocation", 8),
STACK_USAGE("tpm2_calc_ordinal_duration", 0),
STACK_USAGE("tpm2_pcr_read", 80),
STACK_USAGE("tpm2_pcr_extend", 80),
STACK_USAGE("tpm2_get_timeouts", 0),
STACK_USAGE("tpm2_get_random", 88),
STACK_USAGE("tpm2_flush_context", 48),
STACK_USAGE("tpm2_get_tpm_pt", 64),
STACK_USAGE("tpm2_shutdown", 48),
STACK_USAGE("tpm2_do_selftest", 56),
STACK_USAGE("tpm2_probe", 48),
STACK_USAGE("tpm2_get_pcr_allocation", 168),
STACK_USAGE("tpm2_get_cc_attrs_tbl", 64),
STACK_USAGE("tpm2_auto_startup", 40),
STACK_USAGE("tpm2_find_cc", 0),
STACK_USAGE("tpm2_save_context", 72),
STACK_USAGE("tpm2_flush_space", 8),
STACK_USAGE("tpm2_prepare_space", 72),
STACK_USAGE("tpm2_init_space", 32),
STACK_USAGE("tpm2_commit_space", 72),
STACK_USAGE("tpm_devs_release", 0),
STACK_USAGE("tpm_devs_remove", 8),
STACK_USAGE("tpm2_del_space", 16),
STACK_USAGE("tpm_devs_add", 32),
STACK_USAGE("tpm2_load_context", 88),
STACK_USAGE("__crb_go_idle", 32),
STACK_USAGE("crb_go_idle", 0),
STACK_USAGE("__crb_cmd_ready", 32),
STACK_USAGE("crb_cmd_ready", 0),
STACK_USAGE("__crb_request_locality", 32),
STACK_USAGE("crb_request_locality", 0),
STACK_USAGE("__crb_relinquish_locality", 32),
STACK_USAGE("crb_relinquish_locality", 0),
STACK_USAGE("crb_status", 0),
STACK_USAGE("crb_recv", 40),
STACK_USAGE("crb_send", 32),
STACK_USAGE("crb_cancel", 16),
STACK_USAGE("crb_req_canceled", 0),
STACK_USAGE("crb_check_resource", 96),
STACK_USAGE("crb_map_res", 96),
STACK_USAGE("crb_fixup_cmd_size", 16),
STACK_USAGE("crb_acpi_add", 472),
STACK_USAGE("crb_acpi_remove", 0),
STACK_USAGE("crb_acpi_driver_exit", 0),
STACK_USAGE("crb_acpi_driver_init", 0),
STACK_USAGE("tpm_store_ppi_request", 152),
STACK_USAGE("tpm_show_ppi_transition_action", 56),
STACK_USAGE("tpm_show_ppi_response", 24),
STACK_USAGE("show_ppi_operations", 112),
STACK_USAGE("tpm_show_ppi_tcg_operations", 0),
STACK_USAGE("tpm_show_ppi_vs_operations", 0),
STACK_USAGE("tpm_add_ppi", 16),
STACK_USAGE("tpm_show_ppi_version", 0),
STACK_USAGE("tpm_show_ppi_request", 24),
STACK_USAGE("tpm_tcg_read_bytes", 40),
STACK_USAGE("tpm_tcg_write_bytes", 40),
STACK_USAGE("tpm_tcg_read16", 8),
STACK_USAGE("tpm_tcg_read32", 8),
STACK_USAGE("tpm_tcg_write32", 0),
STACK_USAGE("tpm_tis_init", 56),
STACK_USAGE("tpm_tis_pnp_init", 96),
STACK_USAGE("tpm_tis_pnp_remove", 8),
STACK_USAGE("tpm_tis_plat_probe", 88),
STACK_USAGE("tpm_tis_plat_remove", 8),
STACK_USAGE("init_tis", 112),
STACK_USAGE("cleanup_tis", 0),
STACK_USAGE("tpm_tis_disable_irq", 0),
STACK_USAGE("tpm_tis_resume", 40),
STACK_USAGE("release_locality", 16),
STACK_USAGE("request_locality", 128),
STACK_USAGE("tpm_tis_status", 32),
STACK_USAGE("tpm_tis_ready", 16),
STACK_USAGE("recv_data", 112),
STACK_USAGE("tpm_tis_recv", 72),
STACK_USAGE("tpm_tis_send_data", 128),
STACK_USAGE("disable_interrupts", 32),
STACK_USAGE("tpm_tis_send_main", 48),
STACK_USAGE("tpm_tis_send", 48),
STACK_USAGE("wait_for_tpm_stat", 112),
STACK_USAGE("tpm_tis_update_durations", 72),
STACK_USAGE("tpm_tis_update_timeouts", 40),
STACK_USAGE("probe_itpm", 48),
STACK_USAGE("tpm_tis_req_canceled", 0),
STACK_USAGE("tis_int_handler", 56),
STACK_USAGE("tpm_tis_probe_irq_single", 88),
STACK_USAGE("tpm_tis_probe_irq", 32),
STACK_USAGE("tpm_tis_remove", 40),
STACK_USAGE("tpm_tis_clkrun_enable", 8),
STACK_USAGE("tpm_tis_core_init", 80),
STACK_USAGE("tpmrm_open", 40),
STACK_USAGE("tpmrm_release", 8),
STACK_USAGE("port_fops_open", 88),
STACK_USAGE("port_fops_fasync", 0),
STACK_USAGE("put_chars", 88),
STACK_USAGE("get_chars", 32),
STACK_USAGE("notifier_add_vio", 48),
STACK_USAGE("notifier_del_vio", 0),
STACK_USAGE("virtio_cons_early_init", 0),
STACK_USAGE("init_port_console", 16),
STACK_USAGE("show_port_name", 0),
STACK_USAGE("port_debugfs_show", 16),
STACK_USAGE("port_debugfs_open", 0),
STACK_USAGE("fill_queue", 88),
STACK_USAGE("add_port", 72),
STACK_USAGE("remove_port_data", 40),
STACK_USAGE("unplug_port", 24),
STACK_USAGE("control_work_handler", 152),
STACK_USAGE("out_intr", 48),
STACK_USAGE("in_intr", 48),
STACK_USAGE("control_intr", 0),
STACK_USAGE("config_intr", 0),
STACK_USAGE("config_work_handler", 56),
STACK_USAGE("init_vqs", 64),
STACK_USAGE("remove_vqs", 40),
STACK_USAGE("virtcons_remove", 24),
STACK_USAGE("virtcons_probe", 64),
STACK_USAGE("virtcons_freeze", 24),
STACK_USAGE("virtcons_restore", 32),
STACK_USAGE("virtio_console_init", 16),
STACK_USAGE("virtio_console_fini", 0),
STACK_USAGE("free_buf", 24),
STACK_USAGE("reclaim_dma_bufs", 56),
STACK_USAGE("discard_port_data", 104),
STACK_USAGE("__send_control_msg", 104),
STACK_USAGE("__send_to_port", 96),
STACK_USAGE("fill_readbuf", 104),
STACK_USAGE("will_read_block", 40),
STACK_USAGE("will_write_block", 40),
STACK_USAGE("port_fops_read", 96),
STACK_USAGE("wait_port_writable", 88),
STACK_USAGE("port_fops_write", 104),
STACK_USAGE("pipe_to_sg", 56),
STACK_USAGE("port_fops_splice_write", 128),
STACK_USAGE("port_fops_poll", 16),
STACK_USAGE("port_fops_release", 40),
STACK_USAGE("clk_bulk_get", 0),
STACK_USAGE("clk_bulk_get_optional", 0),
STACK_USAGE("clk_bulk_put_all", 16),
STACK_USAGE("clk_bulk_get_all", 0),
STACK_USAGE("clk_bulk_unprepare", 16),
STACK_USAGE("clk_bulk_prepare", 40),
STACK_USAGE("clk_bulk_disable", 16),
STACK_USAGE("clk_bulk_enable", 40),
STACK_USAGE("clk_bulk_put", 16),
STACK_USAGE("__clk_bulk_get", 56),
STACK_USAGE("clk_composite_get_parent", 0),
STACK_USAGE("clk_composite_round_rate", 0),
STACK_USAGE("clk_composite_set_rate", 0),
STACK_USAGE("clk_composite_set_rate_and_parent", 56),
STACK_USAGE("clk_composite_is_enabled", 0),
STACK_USAGE("clk_composite_enable", 0),
STACK_USAGE("clk_composite_disable", 0),
STACK_USAGE("clk_composite_set_parent", 0),
STACK_USAGE("__clk_hw_register_composite", 120),
STACK_USAGE("clk_composite_recalc_rate", 0),
STACK_USAGE("clk_hw_register_composite", 0),
STACK_USAGE("clk_hw_register_composite_pdata", 0),
STACK_USAGE("clk_register_composite", 0),
STACK_USAGE("clk_register_composite_pdata", 0),
STACK_USAGE("clk_unregister_composite", 16),
STACK_USAGE("clk_hw_unregister_composite", 8),
STACK_USAGE("devm_clk_hw_release_composite", 8),
STACK_USAGE("devm_clk_hw_register_composite_pdata", 56),
STACK_USAGE("clk_composite_determine_rate", 112),
STACK_USAGE("devm_clk_bulk_get_all", 32),
STACK_USAGE("devm_clk_match", 0),
STACK_USAGE("devm_clk_get", 24),
STACK_USAGE("devm_clk_put", 0),
STACK_USAGE("devm_get_clk_from_child", 0),
STACK_USAGE("devm_clk_get_optional", 24),
STACK_USAGE("devm_clk_bulk_release", 0),
STACK_USAGE("devm_clk_release", 0),
STACK_USAGE("devm_clk_bulk_get", 40),
STACK_USAGE("devm_clk_bulk_get_optional", 40),
STACK_USAGE("devm_clk_bulk_release_all", 0),
STACK_USAGE("divider_recalc_rate", 8),
STACK_USAGE("clk_divider_recalc_rate", 16),
STACK_USAGE("divider_determine_rate", 144),
STACK_USAGE("divider_ro_determine_rate", 24),
STACK_USAGE("divider_round_rate_parent", 56),
STACK_USAGE("divider_ro_round_rate_parent", 48),
STACK_USAGE("clk_divider_round_rate", 112),
STACK_USAGE("clk_divider_determine_rate", 16),
STACK_USAGE("divider_get_val", 8),
STACK_USAGE("clk_divider_set_rate", 40),
STACK_USAGE("__clk_hw_register_divider", 136),
STACK_USAGE("clk_register_divider_table", 8),
STACK_USAGE("clk_unregister_divider", 16),
STACK_USAGE("clk_hw_unregister_divider", 8),
STACK_USAGE("devm_clk_hw_release_divider", 8),
STACK_USAGE("__devm_clk_hw_register_divider", 48),
STACK_USAGE("devm_clk_hw_register_fixed_factor_index", 0),
STACK_USAGE("clk_hw_register_fixed_factor", 160),
STACK_USAGE("clk_register_fixed_factor", 0),
STACK_USAGE("clk_unregister_fixed_factor", 16),
STACK_USAGE("clk_hw_unregister_fixed_factor", 8),
STACK_USAGE("devm_clk_hw_register_fixed_factor", 0),
STACK_USAGE("clk_factor_recalc_rate", 0),
STACK_USAGE("clk_factor_round_rate", 32),
STACK_USAGE("clk_factor_set_rate", 0),
STACK_USAGE("devm_clk_hw_register_fixed_factor_release", 0),
STACK_USAGE("__clk_hw_register_fixed_factor", 152),
STACK_USAGE("clk_register_fixed_rate", 120),
STACK_USAGE("clk_unregister_fixed_rate", 16),
STACK_USAGE("clk_hw_unregister_fixed_rate", 8),
STACK_USAGE("clk_fixed_rate_recalc_rate", 0),
STACK_USAGE("clk_fixed_rate_recalc_accuracy", 0),
STACK_USAGE("__clk_hw_register_fixed_rate", 136),
STACK_USAGE("clk_fractional_divider_general_approximation", 16),
STACK_USAGE("clk_fd_round_rate", 56),
STACK_USAGE("clk_fd_set_rate", 48),
STACK_USAGE("clk_hw_register_fractional_divider", 128),
STACK_USAGE("clk_register_fractional_divider", 8),
STACK_USAGE("clk_hw_unregister_fractional_divider", 8),
STACK_USAGE("clk_fd_recalc_rate", 32),
STACK_USAGE("clk_gate_is_enabled", 8),
STACK_USAGE("__clk_hw_register_gate", 136),
STACK_USAGE("clk_register_gate", 8),
STACK_USAGE("clk_unregister_gate", 16),
STACK_USAGE("clk_hw_unregister_gate", 8),
STACK_USAGE("devm_clk_hw_release_gate", 8),
STACK_USAGE("__devm_clk_hw_register_gate", 56),
STACK_USAGE("clk_gate_endisable", 32),
STACK_USAGE("clk_gate_enable", 0),
STACK_USAGE("clk_gate_disable", 0),
STACK_USAGE("gpio_clk_driver_probe", 0),
STACK_USAGE("gpio_clk_driver_init", 0),
STACK_USAGE("clk_multiplier_round_rate", 80),
STACK_USAGE("clk_multiplier_set_rate", 24),
STACK_USAGE("clk_multiplier_recalc_rate", 16),
STACK_USAGE("clk_mux_determine_rate", 0),
STACK_USAGE("__clk_hw_register_mux", 136),
STACK_USAGE("devm_clk_hw_release_mux", 8),
STACK_USAGE("__devm_clk_hw_register_mux", 56),
STACK_USAGE("clk_register_mux_table", 16),
STACK_USAGE("clk_unregister_mux", 16),
STACK_USAGE("clk_hw_unregister_mux", 8),
STACK_USAGE("clk_mux_val_to_index", 32),
STACK_USAGE("clk_mux_index_to_val", 0),
STACK_USAGE("clk_mux_get_parent", 40),
STACK_USAGE("clk_mux_set_parent", 24),
STACK_USAGE("clk_disable", 16),
STACK_USAGE("clk_core_enable", 24),
STACK_USAGE("clk_gate_restore_context", 0),
STACK_USAGE("__traceiter_clk_set_rate", 24),
STACK_USAGE("clk_core_save_context", 16),
STACK_USAGE("clk_pm_runtime_get", 16),
STACK_USAGE("clk_core_restore_context", 8),
STACK_USAGE("clk_save_context", 16),
STACK_USAGE("__traceiter_clk_set_rate_complete", 24),
STACK_USAGE("clk_restore_context", 8),
STACK_USAGE("clk_enable", 16),
STACK_USAGE("clk_is_enabled_when_prepared", 0),
STACK_USAGE("clk_core_prepare_enable", 24),
STACK_USAGE("__traceiter_clk_set_min_rate", 24),
STACK_USAGE("clk_core_disable_unprepare", 16),
STACK_USAGE("clk_unprepare_unused_subtree", 16),
STACK_USAGE("clk_disable_unused_subtree", 24),
STACK_USAGE("__traceiter_clk_set_max_rate", 24),
STACK_USAGE("clk_ignore_unused_setup", 0),
STACK_USAGE("clk_disable_unused", 8),
STACK_USAGE("__bpf_trace_clk_rate_range", 0),
STACK_USAGE("perf_trace_clk_rate_range", 96),
STACK_USAGE("trace_event_raw_event_clk_rate_range", 112),
STACK_USAGE("trace_raw_output_clk_rate_range", 24),
STACK_USAGE("clk_core_round_rate_nolock", 24),
STACK_USAGE("__clk_determine_rate", 0),
STACK_USAGE("clk_hw_round_rate", 72),
STACK_USAGE("clk_round_rate", 80),
STACK_USAGE("__clk_recalc_accuracies", 8),
STACK_USAGE("__traceiter_clk_set_rate_range", 32),
STACK_USAGE("clk_get_accuracy", 8),
STACK_USAGE("clk_enable_lock", 24),
STACK_USAGE("__bpf_trace_clk", 0),
STACK_USAGE("perf_trace_clk", 80),
STACK_USAGE("trace_event_raw_event_clk", 88),
STACK_USAGE("trace_raw_output_clk", 24),
STACK_USAGE("__clk_recalc_rates", 72),
STACK_USAGE("__bpf_trace_clk_parent", 0),
STACK_USAGE("perf_trace_clk_parent", 96),
STACK_USAGE("trace_event_raw_event_clk_parent", 112),
STACK_USAGE("trace_raw_output_clk_parent", 24),
STACK_USAGE("clk_get_rate", 8),
STACK_USAGE("clk_fetch_parent_index", 48),
STACK_USAGE("clk_hw_get_parent_index", 0),
STACK_USAGE("clk_core_update_orphan_status", 16),
STACK_USAGE("__clk_set_parent_before", 32),
STACK_USAGE("__clk_set_parent_after", 32),
STACK_USAGE("__traceiter_clk_set_parent", 24),
STACK_USAGE("trace_clk_set_parent", 0),
STACK_USAGE("__clk_set_parent", 48),
STACK_USAGE("__clk_speculate_rates", 72),
STACK_USAGE("__traceiter_clk_set_parent_complete", 24),
STACK_USAGE("trace_clk_set_parent_complete", 0),
STACK_USAGE("clk_calc_subtree", 24),
STACK_USAGE("clk_calc_new_rates", 96),
STACK_USAGE("__bpf_trace_clk_phase", 0),
STACK_USAGE("perf_trace_clk_phase", 80),
STACK_USAGE("trace_event_raw_event_clk_phase", 104),
STACK_USAGE("trace_raw_output_clk_phase", 24),
STACK_USAGE("clk_propagate_rate_change", 72),
STACK_USAGE("clk_core_is_prepared", 16),
STACK_USAGE("clk_change_rate", 80),
STACK_USAGE("__traceiter_clk_set_phase", 24),
STACK_USAGE("clk_core_set_rate_nolock", 88),
STACK_USAGE("__traceiter_clk_set_phase_complete", 24),
STACK_USAGE("clk_set_rate", 24),
STACK_USAGE("clk_set_rate_exclusive", 24),
STACK_USAGE("__bpf_trace_clk_duty_cycle", 0),
STACK_USAGE("perf_trace_clk_duty_cycle", 88),
STACK_USAGE("trace_event_raw_event_clk_duty_cycle", 104),
STACK_USAGE("trace_raw_output_clk_duty_cycle", 24),
STACK_USAGE("clk_set_rate_range", 56),
STACK_USAGE("clk_set_min_rate", 16),
STACK_USAGE("clk_set_max_rate", 16),
STACK_USAGE("clk_get_parent", 8),
STACK_USAGE("clk_hw_reparent", 16),
STACK_USAGE("clk_has_parent", 32),
STACK_USAGE("clk_core_set_parent_nolock", 40),
STACK_USAGE("__traceiter_clk_set_duty_cycle", 24),
STACK_USAGE("clk_hw_set_parent", 0),
STACK_USAGE("__traceiter_clk_set_duty_cycle_complete", 24),
STACK_USAGE("clk_set_parent", 24),
STACK_USAGE("__clk_get_name", 0),
STACK_USAGE("clk_set_phase", 40),
STACK_USAGE("clk_hw_get_name", 0),
STACK_USAGE("clk_get_phase", 16),
STACK_USAGE("clk_core_update_duty_cycle_nolock", 16),
STACK_USAGE("__clk_get_hw", 0),
STACK_USAGE("clk_core_set_duty_cycle_nolock", 24),
STACK_USAGE("clk_hw_get_num_parents", 0),
STACK_USAGE("clk_set_duty_cycle", 40),
STACK_USAGE("clk_core_get_scaled_duty_cycle", 24),
STACK_USAGE("clk_hw_get_parent", 0),
STACK_USAGE("clk_get_scaled_duty_cycle", 0),
STACK_USAGE("clk_is_match", 0),
STACK_USAGE("__clk_lookup_subtree", 24),
STACK_USAGE("clk_summary_show_subtree", 80),
STACK_USAGE("clk_summary_show", 24),
STACK_USAGE("clk_summary_open", 0),
STACK_USAGE("clk_dump_subtree", 48),
STACK_USAGE("clk_dump_show", 40),
STACK_USAGE("clk_dump_open", 0),
STACK_USAGE("clk_rate_get", 16),
STACK_USAGE("clk_rate_fops_open", 0),
STACK_USAGE("clk_flags_show", 40),
STACK_USAGE("clk_flags_open", 0),
STACK_USAGE("possible_parent_show", 32),
STACK_USAGE("possible_parents_show", 24),
STACK_USAGE("possible_parents_open", 0),
STACK_USAGE("current_parent_show", 0),
STACK_USAGE("current_parent_open", 0),
STACK_USAGE("clk_duty_cycle_show", 0),
STACK_USAGE("clk_duty_cycle_open", 0),
STACK_USAGE("clk_min_rate_show", 24),
STACK_USAGE("__traceiter_clk_enable", 16),
STACK_USAGE("clk_min_rate_open", 0),
STACK_USAGE("clk_max_rate_show", 24),
STACK_USAGE("clk_max_rate_open", 0),
STACK_USAGE("clk_debug_create_one", 16),
STACK_USAGE("clk_debug_init", 8),
STACK_USAGE("clk_core_link_consumer", 16),
STACK_USAGE("clk_hw_create_clk", 40),
STACK_USAGE("clk_hw_get_clk", 0),
STACK_USAGE("__clk_register", 80),
STACK_USAGE("__traceiter_clk_enable_complete", 16),
STACK_USAGE("clk_register", 0),
STACK_USAGE("clk_hw_register", 8),
STACK_USAGE("of_clk_hw_register", 8),
STACK_USAGE("clk_nodrv_prepare_enable", 0),
STACK_USAGE("clk_nodrv_disable_unprepare", 0),
STACK_USAGE("clk_nodrv_set_rate", 0),
STACK_USAGE("clk_nodrv_set_parent", 0),
STACK_USAGE("clk_core_evict_parent_cache_subtree", 16),
STACK_USAGE("clk_unregister", 32),
STACK_USAGE("clk_hw_unregister", 0),
STACK_USAGE("devm_clk_unregister_cb", 0),
STACK_USAGE("devm_clk_hw_unregister_cb", 0),
STACK_USAGE("devm_clk_register", 24),
STACK_USAGE("devm_clk_hw_register", 40),
STACK_USAGE("devm_clk_match", 0),
STACK_USAGE("devm_clk_hw_match", 0),
STACK_USAGE("devm_clk_unregister", 0),
STACK_USAGE("devm_clk_hw_unregister", 0),
STACK_USAGE("devm_clk_release", 0),
STACK_USAGE("devm_clk_hw_get_clk", 32),
STACK_USAGE("__clk_put", 16),
STACK_USAGE("clk_notifier_register", 24),
STACK_USAGE("clk_core_get_parent_by_index", 40),
STACK_USAGE("clk_notifier_unregister", 32),
STACK_USAGE("devm_clk_notifier_release", 0),
STACK_USAGE("devm_clk_notifier_register", 32),
STACK_USAGE("clk_hw_get_parent_by_index", 0),
STACK_USAGE("__clk_get_enable_count", 0),
STACK_USAGE("__traceiter_clk_disable", 16),
STACK_USAGE("clk_hw_get_rate", 0),
STACK_USAGE("clk_hw_get_flags", 0),
STACK_USAGE("clk_hw_is_prepared", 0),
STACK_USAGE("clk_hw_rate_is_protected", 0),
STACK_USAGE("clk_hw_is_enabled", 16),
STACK_USAGE("__clk_is_enabled", 16),
STACK_USAGE("__traceiter_clk_disable_complete", 16),
STACK_USAGE("clk_mux_determine_rate_flags", 112),
STACK_USAGE("__traceiter_clk_prepare", 16),
STACK_USAGE("__clk_lookup", 24),
STACK_USAGE("kref_put", 24),
STACK_USAGE("clk_hw_set_rate_range", 0),
STACK_USAGE("__clk_mux_determine_rate", 0),
STACK_USAGE("__clk_mux_determine_rate_closest", 0),
STACK_USAGE("__traceiter_clk_prepare_complete", 16),
STACK_USAGE("clk_core_rate_unprotect", 8),
STACK_USAGE("clk_rate_exclusive_put", 16),
STACK_USAGE("__traceiter_clk_unprepare", 16),
STACK_USAGE("trace_clk_unprepare", 0),
STACK_USAGE("clk_core_rate_protect", 8),
STACK_USAGE("clk_rate_exclusive_get", 16),
STACK_USAGE("__traceiter_clk_unprepare_complete", 16),
STACK_USAGE("trace_clk_unprepare_complete", 0),
STACK_USAGE("clk_core_unprepare", 16),
STACK_USAGE("clk_core_unprepare_lock", 16),
STACK_USAGE("clk_unprepare", 0),
STACK_USAGE("clk_core_prepare", 24),
STACK_USAGE("__bpf_trace_clk_rate", 0),
STACK_USAGE("perf_trace_clk_rate", 88),
STACK_USAGE("trace_event_raw_event_clk_rate", 96),
STACK_USAGE("trace_raw_output_clk_rate", 24),
STACK_USAGE("clk_core_prepare_lock", 24),
STACK_USAGE("clk_prepare", 0),
STACK_USAGE("clk_core_disable", 16),
STACK_USAGE("clk_get", 32),
STACK_USAGE("clk_put", 0),
STACK_USAGE("clkdev_add", 8),
STACK_USAGE("clkdev_add_table", 16),
STACK_USAGE("vclkdev_alloc", 40),
STACK_USAGE("clkdev_create", 104),
STACK_USAGE("clkdev_hw_create", 104),
STACK_USAGE("clk_add_alias", 48),
STACK_USAGE("clkdev_drop", 8),
STACK_USAGE("__clk_register_clkdev", 104),
STACK_USAGE("clk_register_clkdev", 16),
STACK_USAGE("clk_hw_register_clkdev", 0),
STACK_USAGE("devm_clkdev_release", 8),
STACK_USAGE("devm_clk_match_clkdev", 0),
STACK_USAGE("clk_find", 56),
STACK_USAGE("devm_clk_release_clkdev", 24),
STACK_USAGE("devm_clk_hw_register_clkdev", 40),
STACK_USAGE("clk_find_hw", 16),
STACK_USAGE("clk_get_sys", 24),
STACK_USAGE("lpss_atom_clk_probe", 32),
STACK_USAGE("lpss_atom_clk_init", 0),
STACK_USAGE("plt_clk_set_parent", 24),
STACK_USAGE("plt_clk_get_parent", 0),
STACK_USAGE("plt_clk_enable", 16),
STACK_USAGE("plt_clk_disable", 16),
STACK_USAGE("plt_clk_is_enabled", 0),
STACK_USAGE("plt_clk_probe", 192),
STACK_USAGE("plt_clk_remove", 24),
STACK_USAGE("plt_clk_driver_init", 0),
STACK_USAGE("acpi_pm_check_blacklist", 0),
STACK_USAGE("acpi_pm_check_graylist", 0),
STACK_USAGE("init_acpi_pm_clocksource", 32),
STACK_USAGE("parse_pmtmr", 24),
STACK_USAGE("acpi_pm_read_verified", 0),
STACK_USAGE("acpi_pm_read", 0),
STACK_USAGE("acpi_pm_good_setup", 0),
STACK_USAGE("acpi_pm_read_slow", 0),
STACK_USAGE("pit_shutdown", 0),
STACK_USAGE("pit_set_oneshot", 0),
STACK_USAGE("pit_set_periodic", 0),
STACK_USAGE("pit_next_event", 8),
STACK_USAGE("clockevent_i8253_init", 0),
STACK_USAGE("proc_id_connector", 88),
STACK_USAGE("proc_sid_connector", 88),
STACK_USAGE("proc_ptrace_connector", 88),
STACK_USAGE("proc_comm_connector", 96),
STACK_USAGE("proc_coredump_connector", 80),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("proc_exit_connector", 80),
STACK_USAGE("local_lock_acquire", 8),
STACK_USAGE("cn_proc_mcast_ctl", 96),
STACK_USAGE("local_lock_release", 8),
STACK_USAGE("cn_proc_init", 8),
STACK_USAGE("send_msg", 24),
STACK_USAGE("proc_fork_connector", 96),
STACK_USAGE("proc_exec_connector", 88),
STACK_USAGE("cn_queue_alloc_dev", 24),
STACK_USAGE("cn_queue_free_dev", 24),
STACK_USAGE("cn_queue_release_callback", 0),
STACK_USAGE("cn_cb_equal", 0),
STACK_USAGE("cn_queue_add_callback", 48),
STACK_USAGE("cn_queue_del_callback", 32),
STACK_USAGE("cn_netlink_send", 0),
STACK_USAGE("cn_rx_skb", 32),
STACK_USAGE("cn_add_callback", 0),
STACK_USAGE("cn_del_callback", 0),
STACK_USAGE("cn_proc_show", 32),
STACK_USAGE("cn_init", 64),
STACK_USAGE("cn_fini", 0),
STACK_USAGE("cn_netlink_send_mult", 56),
STACK_USAGE("acpi_cpufreq_exit", 0),
STACK_USAGE("boost_set_msr_each", 32),
STACK_USAGE("set_boost", 0),
STACK_USAGE("show_freqdomain_cpus", 0),
STACK_USAGE("store_cpb", 40),
STACK_USAGE("show_cpb", 0),
STACK_USAGE("extract_freq", 0),
STACK_USAGE("cpu_freq_read_intel", 8),
STACK_USAGE("cpu_freq_write_intel", 24),
STACK_USAGE("cpu_freq_read_amd", 8),
STACK_USAGE("cpu_freq_write_amd", 0),
STACK_USAGE("cpu_freq_read_io", 16),
STACK_USAGE("cpu_freq_write_io", 0),
STACK_USAGE("do_drv_read", 8),
STACK_USAGE("do_drv_write", 0),
STACK_USAGE("get_cur_freq_on_cpu", 64),
STACK_USAGE("acpi_cpufreq_target", 112),
STACK_USAGE("acpi_cpufreq_fast_switch", 24),
STACK_USAGE("acpi_cpufreq_guess_freq", 8),
STACK_USAGE("cpufreq_boost_online", 32),
STACK_USAGE("cpufreq_boost_down_prep", 24),
STACK_USAGE("acpi_cpufreq_early_init", 24),
STACK_USAGE("sw_any_bug_found", 0),
STACK_USAGE("get_max_boost_ratio", 40),
STACK_USAGE("acpi_cpufreq_cpu_init", 48),
STACK_USAGE("acpi_cpufreq_cpu_exit", 16),
STACK_USAGE("acpi_cpufreq_resume", 0),
STACK_USAGE("acpi_cpufreq_boost_init", 24),
STACK_USAGE("acpi_cpufreq_init", 8),
STACK_USAGE("have_governor_per_policy", 0),
STACK_USAGE("refresh_frequency_limits", 8),
STACK_USAGE("get_governor_parent_kobj", 0),
STACK_USAGE("handle_update", 24),
STACK_USAGE("cpufreq_notifier_min", 0),
STACK_USAGE("cpufreq_notifier_max", 0),
STACK_USAGE("cpufreq_policy_free", 32),
STACK_USAGE("cpufreq_online", 64),
STACK_USAGE("trace_cpu_frequency", 0),
STACK_USAGE("get_cpu_idle_time", 32),
STACK_USAGE("cpufreq_add_dev", 24),
STACK_USAGE("cpufreq_offline", 32),
STACK_USAGE("cpufreq_remove_dev", 32),
STACK_USAGE("cpufreq_generic_init", 0),
STACK_USAGE("cpufreq_verify_current_freq", 56),
STACK_USAGE("cpufreq_quick_get", 24),
STACK_USAGE("cpufreq_quick_get_max", 24),
STACK_USAGE("cpufreq_get_hw_max_freq", 24),
STACK_USAGE("cpufreq_get", 32),
STACK_USAGE("cpufreq_cpu_get_raw", 0),
STACK_USAGE("cpufreq_generic_suspend", 24),
STACK_USAGE("cpufreq_suspend", 32),
STACK_USAGE("cpufreq_resume", 32),
STACK_USAGE("cpufreq_generic_get", 0),
STACK_USAGE("cpufreq_driver_test_flags", 0),
STACK_USAGE("cpufreq_get_current_driver", 0),
STACK_USAGE("cpufreq_get_driver_data", 0),
STACK_USAGE("cpufreq_register_notifier", 16),
STACK_USAGE("cpufreq_unregister_notifier", 16),
STACK_USAGE("cpufreq_driver_fast_switch", 24),
STACK_USAGE("cpufreq_driver_adjust_perf", 0),
STACK_USAGE("cpufreq_driver_has_adjust_perf", 0),
STACK_USAGE("cpufreq_cpu_get", 16),
STACK_USAGE("__cpufreq_driver_target", 88),
STACK_USAGE("cpufreq_driver_target", 32),
STACK_USAGE("cpufreq_fallback_governor", 0),
STACK_USAGE("cpufreq_init_governor", 24),
STACK_USAGE("cpufreq_start_governor", 8),
STACK_USAGE("cpufreq_stop_governor", 0),
STACK_USAGE("cpufreq_register_governor", 32),
STACK_USAGE("cpufreq_unregister_governor", 32),
STACK_USAGE("cpufreq_cpu_put", 0),
STACK_USAGE("cpufreq_get_policy", 40),
STACK_USAGE("cpufreq_set_policy", 80),
STACK_USAGE("cpufreq_cpu_release", 8),
STACK_USAGE("cpufreq_update_policy", 8),
STACK_USAGE("cpufreq_update_limits", 0),
STACK_USAGE("cpufreq_boost_set_sw", 16),
STACK_USAGE("cpufreq_boost_trigger_state", 40),
STACK_USAGE("create_boost_sysfs_file", 8),
STACK_USAGE("cpufreq_enable_boost_support", 16),
STACK_USAGE("cpufreq_boost_enabled", 0),
STACK_USAGE("cpuhp_cpufreq_online", 0),
STACK_USAGE("cpuhp_cpufreq_offline", 0),
STACK_USAGE("cpufreq_cpu_acquire", 24),
STACK_USAGE("cpufreq_register_driver", 16),
STACK_USAGE("cpufreq_unregister_driver", 8),
STACK_USAGE("cpufreq_core_init", 16),
STACK_USAGE("cpufreq_notify_transition", 40),
STACK_USAGE("cpufreq_freq_transition_begin", 88),
STACK_USAGE("cpufreq_freq_transition_end", 40),
STACK_USAGE("cpufreq_enable_fast_switch", 8),
STACK_USAGE("cpufreq_disable_fast_switch", 8),
STACK_USAGE("__resolve_freq", 32),
STACK_USAGE("cpufreq_driver_resolve_freq", 0),
STACK_USAGE("cpufreq_policy_transition_delay_us", 0),
STACK_USAGE("show_boost", 0),
STACK_USAGE("store_boost", 24),
STACK_USAGE("cpufreq_supports_freq_invariance", 0),
STACK_USAGE("show_cpuinfo_min_freq", 0),
STACK_USAGE("show_cpuinfo_max_freq", 0),
STACK_USAGE("show_cpuinfo_transition_latency", 0),
STACK_USAGE("show_scaling_min_freq", 0),
STACK_USAGE("show_scaling_max_freq", 0),
STACK_USAGE("arch_freq_get_on_cpu", 0),
STACK_USAGE("show_scaling_cur_freq", 16),
STACK_USAGE("store_scaling_min_freq", 32),
STACK_USAGE("store_scaling_max_freq", 32),
STACK_USAGE("show_cpuinfo_cur_freq", 16),
STACK_USAGE("show_scaling_governor", 0),
STACK_USAGE("store_scaling_governor", 88),
STACK_USAGE("show_scaling_driver", 0),
STACK_USAGE("show_scaling_available_governors", 40),
STACK_USAGE("cpufreq_show_cpus", 40),
STACK_USAGE("show_related_cpus", 40),
STACK_USAGE("show_affected_cpus", 40),
STACK_USAGE("store_scaling_setspeed", 40),
STACK_USAGE("show_scaling_setspeed", 0),
STACK_USAGE("show_bios_limit", 40),
STACK_USAGE("show", 32),
STACK_USAGE("store", 40),
STACK_USAGE("cpufreq_sysfs_release", 0),
STACK_USAGE("disable_cpufreq", 0),
STACK_USAGE("sampling_down_factor_store", 32),
STACK_USAGE("up_threshold_store", 40),
STACK_USAGE("down_threshold_store", 40),
STACK_USAGE("ignore_nice_load_store", 32),
STACK_USAGE("freq_step_store", 32),
STACK_USAGE("sampling_rate_show", 0),
STACK_USAGE("sampling_down_factor_show", 0),
STACK_USAGE("up_threshold_show", 0),
STACK_USAGE("ignore_nice_load_show", 0),
STACK_USAGE("down_threshold_show", 0),
STACK_USAGE("freq_step_show", 0),
STACK_USAGE("cs_alloc", 0),
STACK_USAGE("cs_free", 0),
STACK_USAGE("cs_init", 8),
STACK_USAGE("cs_exit", 0),
STACK_USAGE("cs_start", 0),
STACK_USAGE("CPU_FREQ_GOV_CONSERVATIVE_init", 0),
STACK_USAGE("CPU_FREQ_GOV_CONSERVATIVE_exit", 0),
STACK_USAGE("cs_dbs_update", 48),
STACK_USAGE("dbs_update", 88),
STACK_USAGE("dbs_work_handler", 32),
STACK_USAGE("dbs_irq_work", 8),
STACK_USAGE("dbs_update_util_handler", 16),
STACK_USAGE("cpufreq_dbs_governor_init", 56),
STACK_USAGE("sampling_rate_store", 48),
STACK_USAGE("cpufreq_dbs_governor_exit", 40),
STACK_USAGE("cpufreq_dbs_governor_start", 64),
STACK_USAGE("cpufreq_dbs_governor_stop", 24),
STACK_USAGE("cpufreq_dbs_governor_limits", 24),
STACK_USAGE("gov_update_cpu_data", 40),
STACK_USAGE("governor_show", 0),
STACK_USAGE("governor_store", 40),
STACK_USAGE("gov_attr_set_init", 24),
STACK_USAGE("gov_attr_set_get", 24),
STACK_USAGE("gov_attr_set_put", 24),
STACK_USAGE("od_dbs_update", 48),
STACK_USAGE("io_is_busy_store", 32),
STACK_USAGE("up_threshold_store", 32),
STACK_USAGE("sampling_down_factor_store", 48),
STACK_USAGE("ignore_nice_load_store", 32),
STACK_USAGE("powersave_bias_store", 40),
STACK_USAGE("sampling_rate_show", 0),
STACK_USAGE("up_threshold_show", 0),
STACK_USAGE("sampling_down_factor_show", 0),
STACK_USAGE("ignore_nice_load_show", 0),
STACK_USAGE("io_is_busy_show", 0),
STACK_USAGE("powersave_bias_show", 0),
STACK_USAGE("od_alloc", 0),
STACK_USAGE("od_free", 0),
STACK_USAGE("od_init", 32),
STACK_USAGE("od_exit", 0),
STACK_USAGE("od_start", 0),
STACK_USAGE("od_set_powersave_bias", 56),
STACK_USAGE("od_register_powersave_bias_handler", 0),
STACK_USAGE("od_unregister_powersave_bias_handler", 0),
STACK_USAGE("CPU_FREQ_GOV_ONDEMAND_init", 0),
STACK_USAGE("CPU_FREQ_GOV_ONDEMAND_exit", 0),
STACK_USAGE("generic_powersave_bias_target", 64),
STACK_USAGE("cpufreq_gov_performance_limits", 0),
STACK_USAGE("cpufreq_default_governor", 0),
STACK_USAGE("cpufreq_fallback_governor", 0),
STACK_USAGE("cpufreq_gov_performance_init", 0),
STACK_USAGE("cpufreq_gov_performance_exit", 0),
STACK_USAGE("store_reset", 16),
STACK_USAGE("show_trans_table", 56),
STACK_USAGE("cpufreq_stats_free_table", 16),
STACK_USAGE("cpufreq_stats_create_table", 24),
STACK_USAGE("cpufreq_stats_record_transition", 32),
STACK_USAGE("cpufreq_stats_reset_table", 16),
STACK_USAGE("show_total_trans", 0),
STACK_USAGE("show_time_in_state", 64),
STACK_USAGE("cpufreq_gov_userspace_init", 0),
STACK_USAGE("cpufreq_gov_userspace_exit", 0),
STACK_USAGE("cpufreq_set", 24),
STACK_USAGE("show_speed", 0),
STACK_USAGE("cpufreq_userspace_policy_init", 8),
STACK_USAGE("cpufreq_userspace_policy_exit", 8),
STACK_USAGE("cpufreq_userspace_policy_start", 16),
STACK_USAGE("cpufreq_userspace_policy_stop", 16),
STACK_USAGE("cpufreq_userspace_policy_limits", 16),
STACK_USAGE("cpufreq_generic_frequency_table_verify", 0),
STACK_USAGE("cpufreq_table_index_unsorted", 32),
STACK_USAGE("policy_has_boost_freq", 0),
STACK_USAGE("cpufreq_frequency_table_get_index", 0),
STACK_USAGE("scaling_available_frequencies_show", 24),
STACK_USAGE("scaling_boost_frequencies_show", 24),
STACK_USAGE("cpufreq_frequency_table_cpuinfo", 40),
STACK_USAGE("cpufreq_table_validate_and_sort", 40),
STACK_USAGE("cpufreq_frequency_table_verify", 0),
STACK_USAGE("set_power_ctl_ee_state", 16),
STACK_USAGE("intel_pstate_suspend", 16),
STACK_USAGE("intel_pstate_resume", 16),
STACK_USAGE("intel_pstate_update_limits", 24),
STACK_USAGE("show_status", 8),
STACK_USAGE("store_status", 24),
STACK_USAGE("show_turbo_pct", 16),
STACK_USAGE("show_num_pstates", 16),
STACK_USAGE("show_no_turbo", 24),
STACK_USAGE("store_no_turbo", 40),
STACK_USAGE("update_qos_request", 64),
STACK_USAGE("store_max_perf_pct", 32),
STACK_USAGE("store_min_perf_pct", 32),
STACK_USAGE("show_hwp_dynamic_boost", 0),
STACK_USAGE("store_hwp_dynamic_boost", 32),
STACK_USAGE("trace_cpu_frequency", 0),
STACK_USAGE("show_energy_efficiency", 16),
STACK_USAGE("store_energy_efficiency", 24),
STACK_USAGE("show_max_perf_pct", 0),
STACK_USAGE("show_min_perf_pct", 0),
STACK_USAGE("intel_pstate_sysfs_expose_params", 0),
STACK_USAGE("intel_pstate_sysfs_remove", 0),
STACK_USAGE("intel_pstate_notify_work", 40),
STACK_USAGE("notify_hwp_interrupt", 16),
STACK_USAGE("intel_pstate_hwp_enable", 48),
STACK_USAGE("atom_get_min_pstate", 8),
STACK_USAGE("atom_get_max_pstate", 8),
STACK_USAGE("atom_get_turbo_pstate", 8),
STACK_USAGE("atom_get_val", 0),
STACK_USAGE("silvermont_get_scaling", 8),
STACK_USAGE("airmont_get_scaling", 8),
STACK_USAGE("atom_get_vid", 16),
STACK_USAGE("core_get_min_pstate", 8),
STACK_USAGE("core_get_max_pstate_physical", 8),
STACK_USAGE("core_get_max_pstate", 32),
STACK_USAGE("core_get_turbo_pstate", 8),
STACK_USAGE("core_get_scaling", 0),
STACK_USAGE("core_get_val", 0),
STACK_USAGE("knl_get_aperf_mperf_shift", 0),
STACK_USAGE("knl_get_turbo_pstate", 8),
STACK_USAGE("hybrid_get_cpu_scaling", 32),
STACK_USAGE("intel_pstate_cppc_set_cpu_scaling", 40),
STACK_USAGE("intel_pstate_update_util_hwp", 16),
STACK_USAGE("intel_pstate_sample", 64),
STACK_USAGE("intel_pstate_update_util", 48),
STACK_USAGE("intel_pstate_set_policy", 80),
STACK_USAGE("intel_pstate_verify_cpu_policy", 56),
STACK_USAGE("intel_pstate_verify_policy", 0),
STACK_USAGE("intel_cpufreq_cpu_offline", 32),
STACK_USAGE("intel_pstate_cpu_online", 8),
STACK_USAGE("intel_pstate_cpu_offline", 16),
STACK_USAGE("intel_pstate_cpu_exit", 0),
STACK_USAGE("__intel_pstate_cpu_init", 56),
STACK_USAGE("intel_pstate_cpu_init", 40),
STACK_USAGE("intel_cpufreq_verify_policy", 16),
STACK_USAGE("intel_cpufreq_update_pstate", 40),
STACK_USAGE("intel_cpufreq_target", 80),
STACK_USAGE("intel_cpufreq_fast_switch", 40),
STACK_USAGE("intel_cpufreq_adjust_perf", 64),
STACK_USAGE("intel_cpufreq_cpu_init", 80),
STACK_USAGE("intel_cpufreq_cpu_exit", 16),
STACK_USAGE("intel_cpufreq_suspend", 24),
STACK_USAGE("intel_pstate_driver_cleanup", 40),
STACK_USAGE("intel_pstate_register_driver", 8),
STACK_USAGE("copy_cpu_funcs", 0),
STACK_USAGE("intel_pstate_no_acpi_pss", 64),
STACK_USAGE("intel_pstate_no_acpi_pcch", 16),
STACK_USAGE("intel_pstate_has_acpi_ppc", 16),
STACK_USAGE("intel_pstate_platform_pwr_mgmt_exists", 8),
STACK_USAGE("intel_pstste_sched_itmt_work_fn", 0),
STACK_USAGE("intel_pstate_init", 24),
STACK_USAGE("intel_pstate_setup", 8),
STACK_USAGE("intel_pstate_init_acpi_perf_limits", 56),
STACK_USAGE("trace_pstate_sample", 8),
STACK_USAGE("show_energy_performance_available_preferences", 16),
STACK_USAGE("store_energy_performance_preference", 120),
STACK_USAGE("show_energy_performance_preference", 32),
STACK_USAGE("show_base_frequency", 64),
STACK_USAGE("powernowk8_cpu_init", 88),
STACK_USAGE("powernowk8_cpu_exit", 16),
STACK_USAGE("query_values_on_cpu", 40),
STACK_USAGE("powernowk8_get", 32),
STACK_USAGE("powernowk8_init", 56),
STACK_USAGE("powernowk8_exit", 0),
STACK_USAGE("write_new_fid", 64),
STACK_USAGE("write_new_vid", 72),
STACK_USAGE("check_supported_cpu", 8),
STACK_USAGE("powernowk8_target_fn", 104),
STACK_USAGE("powernowk8_target", 24),
STACK_USAGE("powernowk8_cpu_init_on_cpu", 40),
STACK_USAGE("haltpoll_init", 8),
STACK_USAGE("haltpoll_exit", 0),
STACK_USAGE("default_enter_idle", 8),
STACK_USAGE("haltpoll_cpu_online", 16),
STACK_USAGE("haltpoll_cpu_offline", 8),
STACK_USAGE("haltpoll_uninit", 0),
STACK_USAGE("cpuidle_use_deepest_state", 8),
STACK_USAGE("cpuidle_find_deepest_state", 32),
STACK_USAGE("cpuidle_enter_s2idle", 72),
STACK_USAGE("cpuidle_enter_state", 72),
STACK_USAGE("cpuidle_select", 0),
STACK_USAGE("cpuidle_enter", 24),
STACK_USAGE("cpuidle_reflect", 0),
STACK_USAGE("trace_cpu_idle", 0),
STACK_USAGE("cpuidle_poll_time", 0),
STACK_USAGE("cpuidle_disabled", 0),
STACK_USAGE("cpuidle_install_idle_handler", 0),
STACK_USAGE("cpuidle_uninstall_idle_handler", 0),
STACK_USAGE("disable_cpuidle", 0),
STACK_USAGE("cpuidle_pause_and_lock", 0),
STACK_USAGE("cpuidle_resume_and_unlock", 0),
STACK_USAGE("cpuidle_pause", 0),
STACK_USAGE("cpuidle_resume", 0),
STACK_USAGE("cpuidle_enable_device", 24),
STACK_USAGE("cpuidle_not_available", 0),
STACK_USAGE("cpuidle_disable_device", 8),
STACK_USAGE("cpuidle_play_dead", 8),
STACK_USAGE("cpuidle_register_device", 32),
STACK_USAGE("cpuidle_unregister_device", 8),
STACK_USAGE("cpuidle_unregister", 24),
STACK_USAGE("cpuidle_register", 32),
STACK_USAGE("cpuidle_init", 0),
STACK_USAGE("cpuidle_setup_broadcast_timer", 0),
STACK_USAGE("cpuidle_register_driver", 24),
STACK_USAGE("cpuidle_unregister_driver", 16),
STACK_USAGE("cpuidle_get_driver", 8),
STACK_USAGE("cpuidle_get_cpu_driver", 0),
STACK_USAGE("cpuidle_driver_state_disabled", 24),
STACK_USAGE("cpuidle_governor_latency_req", 8),
STACK_USAGE("cpuidle_find_governor", 32),
STACK_USAGE("cpuidle_switch_governor", 32),
STACK_USAGE("cpuidle_register_governor", 40),
STACK_USAGE("haltpoll_reflect", 0),
STACK_USAGE("haltpoll_enable_device", 0),
STACK_USAGE("init_haltpoll", 0),
STACK_USAGE("haltpoll_select", 24),
STACK_USAGE("ladder_enable_device", 0),
STACK_USAGE("ladder_reflect", 0),
STACK_USAGE("init_ladder", 0),
STACK_USAGE("ladder_select_state", 48),
STACK_USAGE("menu_select", 152),
STACK_USAGE("menu_reflect", 24),
STACK_USAGE("menu_enable_device", 0),
STACK_USAGE("init_menu", 0),
STACK_USAGE("poll_idle", 40),
STACK_USAGE("cpuidle_poll_state_init", 0),
STACK_USAGE("cpuidle_add_interface", 0),
STACK_USAGE("cpuidle_remove_interface", 0),
STACK_USAGE("cpuidle_show", 24),
STACK_USAGE("cpuidle_store", 32),
STACK_USAGE("cpuidle_sysfs_release", 0),
STACK_USAGE("show_available_governors", 40),
STACK_USAGE("show_state_exit_latency", 0),
STACK_USAGE("show_state_target_residency", 0),
STACK_USAGE("show_state_power_usage", 0),
STACK_USAGE("show_state_usage", 0),
STACK_USAGE("show_state_rejected", 0),
STACK_USAGE("show_state_name", 0),
STACK_USAGE("show_state_desc", 0),
STACK_USAGE("show_state_above", 0),
STACK_USAGE("show_state_below", 0),
STACK_USAGE("show_state_time", 0),
STACK_USAGE("show_state_disable", 0),
STACK_USAGE("store_state_disable", 40),
STACK_USAGE("show_state_default_status", 0),
STACK_USAGE("show_state_s2idle_usage", 0),
STACK_USAGE("show_state_s2idle_time", 0),
STACK_USAGE("cpuidle_state_show", 0),
STACK_USAGE("cpuidle_state_store", 8),
STACK_USAGE("show_current_driver", 8),
STACK_USAGE("cpuidle_state_sysfs_release", 0),
STACK_USAGE("show_current_governor", 8),
STACK_USAGE("cpuidle_add_device_sysfs", 72),
STACK_USAGE("cpuidle_remove_device_sysfs", 24),
STACK_USAGE("cpuidle_add_sysfs", 40),
STACK_USAGE("cpuidle_remove_sysfs", 8),
STACK_USAGE("store_current_governor", 104),
STACK_USAGE("virtio_crypto_alg_akcipher_close_session", 152),
STACK_USAGE("virtio_crypto_rsa_do_req", 248),
STACK_USAGE("virtio_crypto_rsa_encrypt", 0),
STACK_USAGE("virtio_crypto_rsa_decrypt", 0),
STACK_USAGE("virtio_crypto_rsa_sign", 0),
STACK_USAGE("virtio_crypto_rsa_verify", 0),
STACK_USAGE("virtio_crypto_rsa_set_key", 344),
STACK_USAGE("virtio_crypto_rsa_raw_set_priv_key", 0),
STACK_USAGE("virtio_crypto_p1pad_rsa_sha1_set_priv_key", 0),
STACK_USAGE("virtio_crypto_rsa_raw_set_pub_key", 0),
STACK_USAGE("virtio_crypto_p1pad_rsa_sha1_set_pub_key", 0),
STACK_USAGE("virtio_crypto_rsa_max_size", 0),
STACK_USAGE("virtio_crypto_rsa_init_tfm", 0),
STACK_USAGE("virtio_crypto_rsa_exit_tfm", 8),
STACK_USAGE("virtio_crypto_akcipher_algs_register", 16),
STACK_USAGE("virtio_crypto_akcipher_algs_unregister", 8),
STACK_USAGE("virtio_crypto_dataq_akcipher_callback", 32),
STACK_USAGE("virtcrypto_init_vqs", 72),
STACK_USAGE("virtcrypto_clear_request", 8),
STACK_USAGE("virtcrypto_update_status", 32),
STACK_USAGE("virtio_device_ready", 8),
STACK_USAGE("virtcrypto_start_crypto_engines", 40),
STACK_USAGE("virtcrypto_dataq_callback", 64),
STACK_USAGE("virtcrypto_clear_crypto_engines", 24),
STACK_USAGE("virtcrypto_del_vqs", 24),
STACK_USAGE("virtcrypto_probe", 112),
STACK_USAGE("virtcrypto_remove", 32),
STACK_USAGE("virtcrypto_config_changed", 0),
STACK_USAGE("virtcrypto_freeze", 32),
STACK_USAGE("virtcrypto_restore", 48),
STACK_USAGE("virtio_crypto_driver_exit", 0),
STACK_USAGE("virtio_crypto_driver_init", 0),
STACK_USAGE("virtcrypto_dev_in_use", 0),
STACK_USAGE("virtcrypto_dev_get", 0),
STACK_USAGE("virtcrypto_dev_put", 0),
STACK_USAGE("virtcrypto_dev_started", 0),
STACK_USAGE("virtcrypto_get_dev_node", 40),
STACK_USAGE("virtcrypto_dev_start", 8),
STACK_USAGE("virtcrypto_dev_stop", 8),
STACK_USAGE("virtcrypto_algo_is_supported", 0),
STACK_USAGE("virtcrypto_devmgr_add_dev", 8),
STACK_USAGE("virtcrypto_devmgr_get_head", 0),
STACK_USAGE("virtcrypto_devmgr_rm_dev", 8),
STACK_USAGE("virtcrypto_devmgr_get_first", 8),
STACK_USAGE("virtio_crypto_alg_skcipher_init_session", 232),
STACK_USAGE("virtio_crypto_alg_skcipher_close_session", 152),
STACK_USAGE("virtio_crypto_skcipher_setkey", 48),
STACK_USAGE("virtio_crypto_skcipher_encrypt", 0),
STACK_USAGE("virtio_crypto_skcipher_decrypt", 0),
STACK_USAGE("virtio_crypto_skcipher_init", 0),
STACK_USAGE("virtio_crypto_skcipher_exit", 16),
STACK_USAGE("virtio_crypto_skcipher_crypt_req", 184),
STACK_USAGE("virtio_crypto_dataq_sym_callback", 24),
STACK_USAGE("virtio_crypto_skcipher_algs_register", 16),
STACK_USAGE("virtio_crypto_skcipher_algs_unregister", 8),
STACK_USAGE("dma_buf_move_notify", 16),
STACK_USAGE("dma_buf_fs_init_context", 0),
STACK_USAGE("dma_buf_begin_cpu_access", 16),
STACK_USAGE("dma_buf_end_cpu_access", 16),
STACK_USAGE("dma_buf_mmap", 24),
STACK_USAGE("dma_buf_vmap", 56),
STACK_USAGE("dma_buf_mmap_internal", 0),
STACK_USAGE("dma_buf_vunmap", 24),
STACK_USAGE("dma_buf_debug_show", 56),
STACK_USAGE("dma_buf_debug_open", 0),
STACK_USAGE("dma_buf_init", 8),
STACK_USAGE("dma_buf_deinit", 0),
STACK_USAGE("dma_buf_llseek", 0),
STACK_USAGE("dma_buf_poll_cb", 32),
STACK_USAGE("dma_buf_poll_add_cb", 96),
STACK_USAGE("dma_buf_poll", 48),
STACK_USAGE("dma_buf_ioctl", 40),
STACK_USAGE("dma_buf_show_fdinfo", 24),
STACK_USAGE("dmabuffs_dname", 88),
STACK_USAGE("dma_buf_export", 40),
STACK_USAGE("dma_buf_fd", 16),
STACK_USAGE("dma_buf_release", 8),
STACK_USAGE("dma_buf_get", 0),
STACK_USAGE("dma_buf_put", 0),
STACK_USAGE("dma_buf_dynamic_attach", 40),
STACK_USAGE("dma_buf_attach", 0),
STACK_USAGE("dma_buf_detach", 32),
STACK_USAGE("dma_buf_pin", 16),
STACK_USAGE("dma_buf_unpin", 16),
STACK_USAGE("dma_buf_file_release", 16),
STACK_USAGE("dma_buf_map_attachment", 24),
STACK_USAGE("dma_buf_unmap_attachment", 24),
STACK_USAGE("dma_fence_array_signaled", 0),
STACK_USAGE("dma_fence_array_release", 24),
STACK_USAGE("dma_fence_array_create", 56),
STACK_USAGE("dma_fence_array_get_driver_name", 0),
STACK_USAGE("dma_fence_match_context", 0),
STACK_USAGE("dma_fence_array_first", 0),
STACK_USAGE("dma_fence_array_get_timeline_name", 0),
STACK_USAGE("dma_fence_array_next", 0),
STACK_USAGE("irq_dma_fence_array_work", 8),
STACK_USAGE("dma_fence_array_cb_func", 0),
STACK_USAGE("dma_fence_array_enable_signaling", 40),
STACK_USAGE("dma_fence_chain_get_driver_name", 0),
STACK_USAGE("dma_fence_chain_get_timeline_name", 0),
STACK_USAGE("dma_fence_chain_irq_work", 16),
STACK_USAGE("dma_fence_chain_cb", 8),
STACK_USAGE("dma_fence_chain_enable_signaling", 56),
STACK_USAGE("dma_fence_chain_signaled", 32),
STACK_USAGE("dma_fence_chain_release", 24),
STACK_USAGE("dma_fence_chain_get_prev", 32),
STACK_USAGE("dma_fence_chain_init", 48),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("dma_fence_chain_walk", 40),
STACK_USAGE("dma_fence_chain_find_seqno", 40),
STACK_USAGE("dma_fence_stub_get_name", 0),
STACK_USAGE("__bpf_trace_dma_fence", 0),
STACK_USAGE("perf_trace_dma_fence", 88),
STACK_USAGE("trace_event_raw_event_dma_fence", 104),
STACK_USAGE("trace_raw_output_dma_fence", 24),
STACK_USAGE("dma_fence_get_stub", 0),
STACK_USAGE("dma_fence_allocate_private_stub", 8),
STACK_USAGE("dma_fence_context_alloc", 0),
STACK_USAGE("dma_fence_begin_signalling", 8),
STACK_USAGE("dma_fence_end_signalling", 0),
STACK_USAGE("__dma_fence_might_wait", 8),
STACK_USAGE("dma_fence_signal_timestamp_locked", 56),
STACK_USAGE("__traceiter_dma_fence_emit", 16),
STACK_USAGE("dma_fence_signal_timestamp", 32),
STACK_USAGE("dma_fence_signal_locked", 8),
STACK_USAGE("__traceiter_dma_fence_init", 16),
STACK_USAGE("dma_fence_signal", 32),
STACK_USAGE("dma_fence_wait_timeout", 24),
STACK_USAGE("__traceiter_dma_fence_destroy", 16),
STACK_USAGE("dma_fence_release", 32),
STACK_USAGE("dma_fence_free", 0),
STACK_USAGE("__dma_fence_enable_signaling", 16),
STACK_USAGE("__traceiter_dma_fence_enable_signal", 16),
STACK_USAGE("dma_fence_enable_sw_signaling", 16),
STACK_USAGE("dma_fence_add_callback", 40),
STACK_USAGE("__traceiter_dma_fence_signaled", 16),
STACK_USAGE("dma_fence_get_status", 24),
STACK_USAGE("dma_fence_remove_callback", 16),
STACK_USAGE("__traceiter_dma_fence_wait_start", 16),
STACK_USAGE("dma_fence_default_wait_cb", 0),
STACK_USAGE("dma_fence_default_wait", 88),
STACK_USAGE("__traceiter_dma_fence_wait_end", 16),
STACK_USAGE("dma_fence_wait_any_timeout", 88),
STACK_USAGE("dma_fence_describe", 48),
STACK_USAGE("dma_fence_init", 0),
STACK_USAGE("dma_resv_init", 8),
STACK_USAGE("dma_resv_fini", 24),
STACK_USAGE("dma_resv_reserve_shared", 88),
STACK_USAGE("ww_acquire_fini", 8),
STACK_USAGE("dma_resv_reset_shared_max", 16),
STACK_USAGE("dma_resv_add_shared_fence", 72),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("dma_resv_add_excl_fence", 64),
STACK_USAGE("dma_resv_iter_restart_unlocked", 40),
STACK_USAGE("dma_resv_iter_walk_unlocked", 48),
STACK_USAGE("dma_resv_iter_first_unlocked", 8),
STACK_USAGE("dma_resv_iter_next_unlocked", 8),
STACK_USAGE("dma_resv_iter_first", 16),
STACK_USAGE("dma_resv_iter_next", 16),
STACK_USAGE("dma_resv_copy_fences", 112),
STACK_USAGE("dma_resv_get_fences", 96),
STACK_USAGE("dma_resv_wait_timeout", 80),
STACK_USAGE("dma_resv_test_signaled", 64),
STACK_USAGE("dma_resv_describe", 80),
STACK_USAGE("dma_resv_lockdep", 920),
STACK_USAGE("sync_file_get_fence", 16),
STACK_USAGE("sync_file_get_name", 32),
STACK_USAGE("sync_file_release", 8),
STACK_USAGE("sync_file_poll", 16),
STACK_USAGE("sync_file_ioctl", 200),
STACK_USAGE("fence_check_cb_func", 0),
STACK_USAGE("sync_file_create", 16),
STACK_USAGE("edac_device_free_ctl_info", 0),
STACK_USAGE("edac_device_workq_function", 8),
STACK_USAGE("edac_device_workq_setup", 16),
STACK_USAGE("edac_device_reset_delay_period", 16),
STACK_USAGE("edac_device_alloc_index", 0),
STACK_USAGE("edac_device_add_device", 32),
STACK_USAGE("edac_device_del_device", 16),
STACK_USAGE("edac_device_alloc_ctl_info", 184),
STACK_USAGE("edac_device_handle_ce_count", 8),
STACK_USAGE("edac_device_handle_ue_count", 64),
STACK_USAGE("edac_dev_ctl_info_show", 0),
STACK_USAGE("edac_dev_ctl_info_store", 0),
STACK_USAGE("edac_device_ctrl_master_release", 8),
STACK_USAGE("edac_device_register_sysfs_main_kobj", 32),
STACK_USAGE("edac_device_unregister_sysfs_main_kobj", 0),
STACK_USAGE("instance_ue_count_show", 0),
STACK_USAGE("instance_ce_count_show", 0),
STACK_USAGE("edac_device_ctrl_instance_release", 0),
STACK_USAGE("edac_device_ctl_log_ue_show", 0),
STACK_USAGE("edac_dev_instance_show", 0),
STACK_USAGE("edac_dev_instance_store", 0),
STACK_USAGE("edac_device_ctl_log_ue_store", 16),
STACK_USAGE("block_ue_count_show", 0),
STACK_USAGE("block_ce_count_show", 0),
STACK_USAGE("edac_device_ctrl_block_release", 0),
STACK_USAGE("edac_dev_block_show", 0),
STACK_USAGE("edac_dev_block_store", 0),
STACK_USAGE("edac_device_ctl_log_ce_show", 0),
STACK_USAGE("edac_device_ctl_log_ce_store", 16),
STACK_USAGE("edac_device_ctl_panic_on_ue_show", 0),
STACK_USAGE("edac_device_ctl_panic_on_ue_store", 16),
STACK_USAGE("edac_device_create_sysfs", 120),
STACK_USAGE("edac_device_ctl_poll_msec_show", 0),
STACK_USAGE("edac_device_remove_sysfs", 96),
STACK_USAGE("edac_device_ctl_poll_msec_store", 16),
STACK_USAGE("edac_mc_handle_error", 112),
STACK_USAGE("edac_align_ptr", 0),
STACK_USAGE("mci_release", 32),
STACK_USAGE("edac_mc_alloc", 112),
STACK_USAGE("edac_mc_free", 0),
STACK_USAGE("edac_has_mcs", 8),
STACK_USAGE("find_mci_by_dev", 16),
STACK_USAGE("edac_mc_workq_function", 8),
STACK_USAGE("edac_mc_reset_delay_period", 24),
STACK_USAGE("edac_dimm_info_location", 48),
STACK_USAGE("del_mc_from_global_list", 16),
STACK_USAGE("edac_mc_find", 16),
STACK_USAGE("edac_get_owner", 0),
STACK_USAGE("edac_mc_add_mc_with_groups", 40),
STACK_USAGE("edac_mc_del_mc", 16),
STACK_USAGE("edac_mc_find_csrow_by_page", 24),
STACK_USAGE("edac_raw_mc_handle_error", 56),
STACK_USAGE("edac_mc_sysfs_init", 8),
STACK_USAGE("edac_mc_sysfs_exit", 0),
STACK_USAGE("csrow_ue_count_show", 0),
STACK_USAGE("csrow_ce_count_show", 0),
STACK_USAGE("csrow_size_show", 0),
STACK_USAGE("csrow_mem_type_show", 0),
STACK_USAGE("csrow_dev_type_show", 0),
STACK_USAGE("csrow_edac_mode_show", 0),
STACK_USAGE("channel_dimm_label_show", 0),
STACK_USAGE("channel_dimm_label_store", 24),
STACK_USAGE("channel_ce_count_show", 0),
STACK_USAGE("edac_mc_get_log_ue", 0),
STACK_USAGE("csrow_dev_is_visible", 0),
STACK_USAGE("edac_mc_get_log_ce", 0),
STACK_USAGE("csrow_release", 0),
STACK_USAGE("edac_mc_get_panic_on_ue", 0),
STACK_USAGE("dimmdev_location_show", 16),
STACK_USAGE("dimmdev_label_show", 0),
STACK_USAGE("edac_mc_get_poll_msec", 0),
STACK_USAGE("dimmdev_label_store", 24),
STACK_USAGE("dimmdev_size_show", 0),
STACK_USAGE("dimmdev_mem_type_show", 0),
STACK_USAGE("dimmdev_dev_type_show", 0),
STACK_USAGE("edac_set_poll_msec", 24),
STACK_USAGE("dimmdev_edac_mode_show", 0),
STACK_USAGE("dimmdev_ce_count_show", 0),
STACK_USAGE("dimmdev_ue_count_show", 0),
STACK_USAGE("dimm_release", 0),
STACK_USAGE("mci_reset_counters_store", 0),
STACK_USAGE("mci_sdram_scrub_rate_store", 32),
STACK_USAGE("mci_sdram_scrub_rate_show", 16),
STACK_USAGE("mci_ue_count_show", 0),
STACK_USAGE("mci_ce_count_show", 0),
STACK_USAGE("mci_ce_noinfo_show", 0),
STACK_USAGE("mci_ue_noinfo_show", 0),
STACK_USAGE("mci_seconds_show", 0),
STACK_USAGE("mci_ctl_name_show", 0),
STACK_USAGE("mci_size_mb_show", 8),
STACK_USAGE("mci_max_location_show", 40),
STACK_USAGE("mci_attr_is_visible", 0),
STACK_USAGE("edac_create_sysfs_mci_device", 32),
STACK_USAGE("edac_remove_sysfs_mci_device", 16),
STACK_USAGE("mc_attr_release", 0),
STACK_USAGE("edac_init", 16),
STACK_USAGE("edac_exit", 0),
STACK_USAGE("edac_op_state_to_string", 0),
STACK_USAGE("edac_get_sysfs_subsys", 0),
STACK_USAGE("edac_pci_workq_function", 8),
STACK_USAGE("edac_pci_alloc_index", 0),
STACK_USAGE("edac_pci_add_device", 32),
STACK_USAGE("edac_pci_del_device", 16),
STACK_USAGE("edac_pci_generic_check", 0),
STACK_USAGE("edac_pci_create_generic_ctl", 48),
STACK_USAGE("edac_pci_alloc_ctl_info", 48),
STACK_USAGE("edac_pci_release_generic_ctl", 8),
STACK_USAGE("edac_pci_free_ctl_info", 0),
STACK_USAGE("edac_pci_instance_store", 0),
STACK_USAGE("edac_pci_int_show", 0),
STACK_USAGE("edac_pci_int_store", 16),
STACK_USAGE("edac_pci_dev_show", 0),
STACK_USAGE("edac_pci_dev_store", 0),
STACK_USAGE("edac_pci_release_main_kobj", 0),
STACK_USAGE("edac_pci_get_check_errors", 0),
STACK_USAGE("edac_pci_create_sysfs", 32),
STACK_USAGE("edac_pci_remove_sysfs", 8),
STACK_USAGE("edac_pci_get_poll_msec", 0),
STACK_USAGE("instance_pe_count_show", 0),
STACK_USAGE("edac_pci_do_parity_check", 80),
STACK_USAGE("instance_npe_count_show", 0),
STACK_USAGE("edac_pci_clear_parity_errors", 56),
STACK_USAGE("edac_pci_handle_pe", 0),
STACK_USAGE("edac_pci_handle_npe", 0),
STACK_USAGE("edac_pci_instance_release", 8),
STACK_USAGE("edac_pci_instance_show", 0),
STACK_USAGE("decode_mc2_mce", 16),
STACK_USAGE("decode_mc3_mce", 16),
STACK_USAGE("decode_mc4_mce", 48),
STACK_USAGE("decode_mc5_mce", 16),
STACK_USAGE("decode_mc6_mce", 8),
STACK_USAGE("decode_smca_error", 32),
STACK_USAGE("amd_decode_mce", 64),
STACK_USAGE("mce_amd_init", 8),
STACK_USAGE("amd_register_ecc_decoder", 0),
STACK_USAGE("amd_unregister_ecc_decoder", 0),
STACK_USAGE("f12h_mc0_mce", 0),
STACK_USAGE("f10h_mc0_mce", 0),
STACK_USAGE("k8_mc0_mce", 0),
STACK_USAGE("cat_mc0_mce", 8),
STACK_USAGE("f15h_mc0_mce", 0),
STACK_USAGE("decode_mc0_mce", 16),
STACK_USAGE("k8_mc1_mce", 0),
STACK_USAGE("cat_mc1_mce", 0),
STACK_USAGE("f15h_mc1_mce", 0),
STACK_USAGE("decode_mc1_mce", 24),
STACK_USAGE("k8_mc2_mce", 0),
STACK_USAGE("f15h_mc2_mce", 8),
STACK_USAGE("f16h_mc2_mce", 0),
STACK_USAGE("edac_mod_work", 0),
STACK_USAGE("edac_stop_work", 8),
STACK_USAGE("edac_workqueue_setup", 0),
STACK_USAGE("edac_workqueue_teardown", 0),
STACK_USAGE("edac_queue_work", 0),
STACK_USAGE("sys_dmi_modalias_show", 8),
STACK_USAGE("dmi_dev_uevent", 24),
STACK_USAGE("dmi_id_init_attr_table", 8),
STACK_USAGE("dmi_id_init", 8),
STACK_USAGE("sys_dmi_field_show", 8),
STACK_USAGE("get_modalias", 48),
STACK_USAGE("dmi_get_date", 88),
STACK_USAGE("dmi_get_bios_year", 16),
STACK_USAGE("dmi_walk", 56),
STACK_USAGE("dmi_match", 0),
STACK_USAGE("dmi_memdev_name", 0),
STACK_USAGE("dmi_memdev_size", 0),
STACK_USAGE("dmi_memdev_type", 0),
STACK_USAGE("dmi_memdev_handle", 0),
STACK_USAGE("dmi_walk_early", 32),
STACK_USAGE("dmi_save_ident", 8),
STACK_USAGE("dmi_save_release", 32),
STACK_USAGE("dmi_save_uuid", 24),
STACK_USAGE("dmi_save_type", 16),
STACK_USAGE("dmi_save_one_device", 24),
STACK_USAGE("dmi_save_devices", 32),
STACK_USAGE("dmi_save_oem_strings_devices", 40),
STACK_USAGE("dmi_save_ipmi_device", 16),
STACK_USAGE("dmi_save_dev_pciaddr", 48),
STACK_USAGE("dmi_save_extended_devices", 16),
STACK_USAGE("dmi_save_system_slot", 32),
STACK_USAGE("count_mem_devices", 0),
STACK_USAGE("save_mem_devices", 8),
STACK_USAGE("dmi_memdev_walk", 0),
STACK_USAGE("dmi_decode", 8),
STACK_USAGE("dmi_string_nosave", 16),
STACK_USAGE("print_filtered", 32),
STACK_USAGE("dmi_format_ids", 24),
STACK_USAGE("dmi_present", 32),
STACK_USAGE("dmi_smbios3_present", 8),
STACK_USAGE("dmi_scan_machine", 88),
STACK_USAGE("dmi_string", 16),
STACK_USAGE("raw_table_read", 8),
STACK_USAGE("dmi_init", 32),
STACK_USAGE("dmi_setup", 0),
STACK_USAGE("dmi_matches", 48),
STACK_USAGE("dmi_decode_table", 56),
STACK_USAGE("dmi_check_system", 16),
STACK_USAGE("dmi_first_match", 8),
STACK_USAGE("dmi_get_system_info", 0),
STACK_USAGE("dmi_name_in_serial", 0),
STACK_USAGE("dmi_name_in_vendors", 8),
STACK_USAGE("dmi_find_device", 32),
STACK_USAGE("efi_earlycon_write", 72),
STACK_USAGE("efi_earlycon_setup", 24),
STACK_USAGE("efi_earlycon_remap_fb", 0),
STACK_USAGE("efi_earlycon_unmap_fb", 0),
STACK_USAGE("efi_earlycon_map", 16),
STACK_USAGE("efi_earlycon_unmap", 0),
STACK_USAGE("efi_earlycon_scroll_up", 48),
STACK_USAGE("efi_bgrt_init", 16),
STACK_USAGE("update_efi_random_seed", 24),
STACK_USAGE("register_update_efi_random_seed", 0),
STACK_USAGE("systab_show", 16),
STACK_USAGE("fw_platform_size_show", 0),
STACK_USAGE("efi_attr_is_visible", 0),
STACK_USAGE("efivar_ssdt_setup", 8),
STACK_USAGE("efivar_ssdt_iter", 88),
STACK_USAGE("efivar_ssdt_load", 80),
STACK_USAGE("efi_debugfs_init", 104),
STACK_USAGE("efisubsys_init", 112),
STACK_USAGE("efi_mem_desc_lookup", 24),
STACK_USAGE("efi_mem_desc_end", 0),
STACK_USAGE("efi_arch_mem_reserve", 0),
STACK_USAGE("efi_mem_reserve", 16),
STACK_USAGE("match_config_table", 80),
STACK_USAGE("efi_config_parse_tables", 64),
STACK_USAGE("efi_systab_check_header", 8),
STACK_USAGE("map_fw_vendor", 8),
STACK_USAGE("efi_systab_report_header", 136),
STACK_USAGE("setup_noefi", 0),
STACK_USAGE("efi_md_typeattr_format", 88),
STACK_USAGE("efi_runtime_disabled", 0),
STACK_USAGE("efi_mem_attributes", 0),
STACK_USAGE("__efi_soft_reserve_enabled", 0),
STACK_USAGE("efi_mem_type", 0),
STACK_USAGE("efi_status_to_err", 0),
STACK_USAGE("parse_efi_cmdline", 8),
STACK_USAGE("efi_memreserve_map_root", 0),
STACK_USAGE("efi_mem_reserve_persistent", 56),
STACK_USAGE("efi_memreserve_root_init", 0),
STACK_USAGE("fw_class_show", 8),
STACK_USAGE("fw_type_show", 0),
STACK_USAGE("fw_version_show", 0),
STACK_USAGE("lowest_supported_fw_version_show", 0),
STACK_USAGE("capsule_flags_show", 0),
STACK_USAGE("last_attempt_version_show", 0),
STACK_USAGE("last_attempt_status_show", 0),
STACK_USAGE("esre_release", 0),
STACK_USAGE("fw_resource_count_show", 0),
STACK_USAGE("fw_resource_count_max_show", 0),
STACK_USAGE("fw_resource_version_show", 0),
STACK_USAGE("esrt_attr_is_visible", 0),
STACK_USAGE("efi_esrt_init", 80),
STACK_USAGE("register_entries", 40),
STACK_USAGE("esrt_sysfs_init", 24),
STACK_USAGE("esre_attr_show", 24),
STACK_USAGE("efi_memattr_apply_permissions", 184),
STACK_USAGE("efi_memattr_init", 16),
STACK_USAGE("__efi_memmap_init", 16),
STACK_USAGE("efi_memmap_init_early", 0),
STACK_USAGE("efi_memmap_unmap", 0),
STACK_USAGE("efi_memmap_init_late", 48),
STACK_USAGE("__efi_memmap_alloc_late", 8),
STACK_USAGE("efi_memmap_install", 8),
STACK_USAGE("efi_memmap_split_count", 0),
STACK_USAGE("efi_memmap_insert", 120),
STACK_USAGE("__efi_memmap_free", 24),
STACK_USAGE("efi_memmap_alloc", 8),
STACK_USAGE("efi_reboot", 0),
STACK_USAGE("efi_poweroff_required", 0),
STACK_USAGE("efi_power_off", 0),
STACK_USAGE("efi_shutdown_init", 8),
STACK_USAGE("efi_get_runtime_map_size", 0),
STACK_USAGE("efi_get_runtime_map_desc_size", 0),
STACK_USAGE("efi_runtime_map_copy", 0),
STACK_USAGE("efi_runtime_map_init", 56),
STACK_USAGE("type_show", 0),
STACK_USAGE("phys_addr_show", 0),
STACK_USAGE("virt_addr_show", 0),
STACK_USAGE("num_pages_show", 0),
STACK_USAGE("attribute_show", 0),
STACK_USAGE("map_attr_show", 0),
STACK_USAGE("map_release", 0),
STACK_USAGE("efi_call_virt_check_flags", 40),
STACK_USAGE("efi_call_rts", 72),
STACK_USAGE("virt_efi_get_time", 24),
STACK_USAGE("virt_efi_set_time", 16),
STACK_USAGE("virt_efi_get_wakeup_time", 32),
STACK_USAGE("virt_efi_set_wakeup_time", 32),
STACK_USAGE("virt_efi_get_variable", 48),
STACK_USAGE("virt_efi_get_next_variable", 32),
STACK_USAGE("virt_efi_set_variable", 56),
STACK_USAGE("virt_efi_set_variable_nonblocking", 72),
STACK_USAGE("virt_efi_query_variable_info", 48),
STACK_USAGE("virt_efi_query_variable_info_nonblocking", 72),
STACK_USAGE("virt_efi_get_next_high_mono_count", 16),
STACK_USAGE("virt_efi_reset_system", 64),
STACK_USAGE("virt_efi_update_capsule", 40),
STACK_USAGE("virt_efi_query_capsule_caps", 48),
STACK_USAGE("efi_native_runtime_setup", 0),
STACK_USAGE("efi_call_virt_save_flags", 16),
STACK_USAGE("efifb_add_links", 0),
STACK_USAGE("sysfb_apply_efi_quirks", 8),
STACK_USAGE("efifb_setup_from_dmi", 48),
STACK_USAGE("efifb_set_system", 48),
STACK_USAGE("tpm2_calc_event_log_size", 136),
STACK_USAGE("efi_tpm_eventlog_init", 32),
STACK_USAGE("efivar_entry_iter_begin", 0),
STACK_USAGE("efivar_entry_iter_end", 0),
STACK_USAGE("__efivar_entry_iter", 48),
STACK_USAGE("efivar_entry_iter", 40),
STACK_USAGE("efivars_kobject", 0),
STACK_USAGE("efivars_register", 24),
STACK_USAGE("efivars_unregister", 16),
STACK_USAGE("efivar_supports_writes", 0),
STACK_USAGE("validate_uint16", 0),
STACK_USAGE("validate_ascii_string", 0),
STACK_USAGE("efivar_validate", 120),
STACK_USAGE("efivar_variable_is_removable", 48),
STACK_USAGE("validate_device_path", 0),
STACK_USAGE("efivar_init", 144),
STACK_USAGE("efivar_entry_add", 16),
STACK_USAGE("efivar_entry_remove", 8),
STACK_USAGE("__efivar_entry_delete", 0),
STACK_USAGE("efivar_entry_delete", 24),
STACK_USAGE("efivar_entry_set", 72),
STACK_USAGE("validate_boot_order", 0),
STACK_USAGE("efivar_entry_set_safe", 88),
STACK_USAGE("efivar_entry_find", 112),
STACK_USAGE("validate_load_option", 64),
STACK_USAGE("efivar_entry_size", 24),
STACK_USAGE("__efivar_entry_get", 0),
STACK_USAGE("efivar_entry_get", 32),
STACK_USAGE("efivar_entry_set_get_size", 56),
STACK_USAGE("firmware_map_add_entry", 16),
STACK_USAGE("add_sysfs_fw_map_entry", 8),
STACK_USAGE("firmware_map_find_entry_in_list", 48),
STACK_USAGE("firmware_map_add_hotplug", 48),
STACK_USAGE("firmware_map_add_early", 32),
STACK_USAGE("firmware_map_remove", 24),
STACK_USAGE("start_show", 0),
STACK_USAGE("end_show", 0),
STACK_USAGE("type_show", 0),
STACK_USAGE("memmap_attr_show", 0),
STACK_USAGE("firmware_memmap_init", 16),
STACK_USAGE("release_firmware_map_entry", 8),
STACK_USAGE("sysfb_init", 16),
STACK_USAGE("devm_aperture_acquire_release", 8),
STACK_USAGE("drm_aperture_detach_firmware", 0),
STACK_USAGE("devm_aperture_acquire_from_firmware", 40),
STACK_USAGE("drm_aperture_remove_conflicting_framebuffers", 48),
STACK_USAGE("drm_aperture_remove_conflicting_pci_framebuffers", 64),
STACK_USAGE("drm_atomic_state_default_release", 8),
STACK_USAGE("drm_atomic_connector_print_state", 24),
STACK_USAGE("drm_atomic_get_bridge_state", 0),
STACK_USAGE("drm_atomic_get_old_bridge_state", 0),
STACK_USAGE("drm_atomic_get_new_bridge_state", 0),
STACK_USAGE("drm_atomic_add_encoder_bridges", 32),
STACK_USAGE("drm_atomic_add_affected_connectors", 56),
STACK_USAGE("drm_atomic_state_init", 24),
STACK_USAGE("drm_atomic_add_affected_planes", 32),
STACK_USAGE("drm_atomic_check_only", 96),
STACK_USAGE("drm_atomic_commit", 16),
STACK_USAGE("drm_atomic_nonblocking_commit", 16),
STACK_USAGE("__drm_atomic_helper_disable_plane", 16),
STACK_USAGE("__drm_atomic_helper_set_config", 56),
STACK_USAGE("drm_atomic_state_alloc", 16),
STACK_USAGE("drm_atomic_print_new_state", 32),
STACK_USAGE("__drm_state_dump", 72),
STACK_USAGE("drm_state_dump", 0),
STACK_USAGE("drm_state_info", 40),
STACK_USAGE("drm_atomic_debugfs_init", 0),
STACK_USAGE("drm_atomic_state_default_clear", 40),
STACK_USAGE("drm_atomic_state_clear", 0),
STACK_USAGE("__drm_atomic_state_free", 16),
STACK_USAGE("drm_atomic_get_crtc_state", 32),
STACK_USAGE("drm_atomic_crtc_print_state", 88),
STACK_USAGE("__drm_crtc_commit_free", 0),
STACK_USAGE("drm_atomic_get_plane_state", 32),
STACK_USAGE("drm_crtc_commit_wait", 16),
STACK_USAGE("drm_atomic_plane_print_state", 72),
STACK_USAGE("drm_atomic_private_obj_init", 32),
STACK_USAGE("drm_atomic_private_obj_fini", 8),
STACK_USAGE("drm_atomic_get_private_obj_state", 48),
STACK_USAGE("drm_atomic_get_old_private_obj_state", 0),
STACK_USAGE("drm_atomic_get_new_private_obj_state", 0),
STACK_USAGE("drm_atomic_get_old_connector_for_encoder", 0),
STACK_USAGE("drm_atomic_get_new_connector_for_encoder", 0),
STACK_USAGE("drm_atomic_get_connector_state", 48),
STACK_USAGE("drm_atomic_set_property", 72),
STACK_USAGE("prepare_signaling", 120),
STACK_USAGE("drm_atomic_set_mode_prop_for_crtc", 56),
STACK_USAGE("complete_signaling", 56),
STACK_USAGE("drm_mode_atomic_ioctl", 320),
STACK_USAGE("drm_atomic_set_crtc_for_plane", 32),
STACK_USAGE("drm_atomic_set_fb_for_plane", 24),
STACK_USAGE("drm_atomic_set_fence_for_plane", 0),
STACK_USAGE("drm_atomic_set_crtc_for_connector", 32),
STACK_USAGE("set_out_fence_for_connector", 32),
STACK_USAGE("drm_atomic_replace_property_blob_from_id", 48),
STACK_USAGE("drm_atomic_state_put", 0),
STACK_USAGE("drm_atomic_set_mode_for_crtc", 120),
STACK_USAGE("drm_atomic_set_writeback_fb_for_connector", 32),
STACK_USAGE("drm_atomic_get_property", 32),
STACK_USAGE("drm_atomic_connector_commit_dpms", 48),
STACK_USAGE("drm_authmagic", 32),
STACK_USAGE("drm_master_create", 16),
STACK_USAGE("drm_set_master", 32),
STACK_USAGE("drm_new_set_master", 56),
STACK_USAGE("drm_setmaster_ioctl", 32),
STACK_USAGE("drm_dropmaster_ioctl", 32),
STACK_USAGE("drm_master_open", 40),
STACK_USAGE("drm_master_release", 48),
STACK_USAGE("drm_master_get", 8),
STACK_USAGE("drm_file_get_master", 16),
STACK_USAGE("drm_master_put", 16),
STACK_USAGE("drm_master_internal_acquire", 16),
STACK_USAGE("drm_master_internal_release", 0),
STACK_USAGE("drm_is_current_master", 16),
STACK_USAGE("drm_getmagic", 40),
STACK_USAGE("drm_plane_create_alpha_property", 24),
STACK_USAGE("drm_plane_create_rotation_property", 24),
STACK_USAGE("drm_rotation_simplify", 4),
STACK_USAGE("drm_plane_create_zpos_property", 32),
STACK_USAGE("drm_plane_create_zpos_immutable_property", 32),
STACK_USAGE("drm_atomic_state_zpos_cmp", 0),
STACK_USAGE("drm_atomic_normalize_zpos", 80),
STACK_USAGE("drm_plane_create_blend_mode_property", 40),
STACK_USAGE("drm_atomic_bridge_chain_check", 112),
STACK_USAGE("drm_bridge_detect", 0),
STACK_USAGE("drm_bridge_get_modes", 0),
STACK_USAGE("drm_bridge_get_edid", 0),
STACK_USAGE("drm_bridge_hpd_enable", 32),
STACK_USAGE("drm_bridge_hpd_disable", 16),
STACK_USAGE("drm_bridge_hpd_notify", 24),
STACK_USAGE("drm_bridge_add", 8),
STACK_USAGE("drm_bridge_remove", 8),
STACK_USAGE("drm_bridge_atomic_duplicate_priv_state", 0),
STACK_USAGE("drm_bridge_atomic_destroy_priv_state", 0),
STACK_USAGE("drm_bridge_attach", 32),
STACK_USAGE("drm_bridge_detach", 8),
STACK_USAGE("drm_bridge_chain_mode_fixup", 40),
STACK_USAGE("drm_bridge_chain_mode_valid", 40),
STACK_USAGE("drm_bridge_chain_disable", 32),
STACK_USAGE("drm_bridge_chain_post_disable", 16),
STACK_USAGE("drm_bridge_chain_mode_set", 32),
STACK_USAGE("drm_bridge_chain_pre_enable", 32),
STACK_USAGE("drm_bridge_chain_enable", 16),
STACK_USAGE("drm_atomic_bridge_chain_disable", 40),
STACK_USAGE("drm_atomic_bridge_chain_post_disable", 32),
STACK_USAGE("drm_atomic_bridge_chain_pre_enable", 40),
STACK_USAGE("drm_atomic_bridge_chain_enable", 32),
STACK_USAGE("select_bus_fmt_recursive", 88),
STACK_USAGE("drm_clflush_sg", 56),
STACK_USAGE("drm_clflush_virt_range", 0),
STACK_USAGE("drm_need_swiotlb", 0),
STACK_USAGE("memcpy_fallback", 184),
STACK_USAGE("drm_memcpy_from_wc", 32),
STACK_USAGE("drm_memcpy_init_early", 0),
STACK_USAGE("drm_clflush_pages", 40),
STACK_USAGE("drm_client_register", 24),
STACK_USAGE("drm_client_release", 24),
STACK_USAGE("drm_client_dev_unregister", 48),
STACK_USAGE("drm_client_dev_hotplug", 32),
STACK_USAGE("drm_client_dev_restore", 40),
STACK_USAGE("drm_client_buffer_delete", 16),
STACK_USAGE("drm_client_buffer_vmap", 16),
STACK_USAGE("drm_client_buffer_vunmap", 0),
STACK_USAGE("drm_client_framebuffer_create", 104),
STACK_USAGE("drm_client_framebuffer_delete", 8),
STACK_USAGE("drm_client_framebuffer_flush", 16),
STACK_USAGE("drm_client_debugfs_internal_clients", 72),
STACK_USAGE("drm_client_debugfs_init", 0),
STACK_USAGE("drm_client_init", 40),
STACK_USAGE("drm_client_modeset_check", 16),
STACK_USAGE("drm_client_modeset_commit_locked", 48),
STACK_USAGE("drm_client_modeset_commit", 16),
STACK_USAGE("drm_client_modeset_dpms", 208),
STACK_USAGE("drm_connector_pick_cmdline_mode", 48),
STACK_USAGE("drm_client_modeset_create", 40),
STACK_USAGE("drm_client_pick_crtcs", 144),
STACK_USAGE("drm_client_modeset_release", 24),
STACK_USAGE("drm_client_modeset_probe", 400),
STACK_USAGE("drm_client_rotation", 8),
STACK_USAGE("drm_client_modeset_free", 24),
STACK_USAGE("drm_client_modeset_commit_atomic", 224),
STACK_USAGE("drm_color_ctm_s31_32_to_qm_n", 0),
STACK_USAGE("drm_crtc_enable_color_mgmt", 48),
STACK_USAGE("drm_mode_crtc_set_gamma_size", 24),
STACK_USAGE("drm_mode_gamma_set_ioctl", 248),
STACK_USAGE("drm_mode_gamma_get_ioctl", 40),
STACK_USAGE("drm_get_color_encoding_name", 0),
STACK_USAGE("drm_get_color_range_name", 0),
STACK_USAGE("drm_plane_create_color_properties", 120),
STACK_USAGE("drm_color_lut_check", 0),
STACK_USAGE("drm_connector_ida_init", 8),
STACK_USAGE("drm_connector_ida_destroy", 0),
STACK_USAGE("drm_get_connector_type_name", 0),
STACK_USAGE("drm_connector_create_standard_properties", 16),
STACK_USAGE("drm_mode_create_dvi_i_properties", 8),
STACK_USAGE("drm_connector_attach_dp_subconnector_property", 16),
STACK_USAGE("drm_connector_attach_content_type_property", 16),
STACK_USAGE("drm_hdmi_avi_infoframe_content_type", 0),
STACK_USAGE("drm_connector_attach_tv_margin_properties", 16),
STACK_USAGE("drm_mode_create_tv_margin_properties", 24),
STACK_USAGE("drm_mode_create_tv_properties", 32),
STACK_USAGE("drm_mode_create_scaling_mode_property", 8),
STACK_USAGE("drm_connector_attach_vrr_capable_property", 16),
STACK_USAGE("drm_connector_attach_scaling_mode_property", 40),
STACK_USAGE("drm_connector_free", 16),
STACK_USAGE("drm_mode_create_aspect_ratio_property", 16),
STACK_USAGE("drm_mode_create_hdmi_colorspace_property", 8),
STACK_USAGE("drm_mode_create_dp_colorspace_property", 8),
STACK_USAGE("drm_connector_free_work_fn", 32),
STACK_USAGE("drm_mode_create_content_type_property", 16),
STACK_USAGE("drm_mode_create_suggested_offset_properties", 16),
STACK_USAGE("drm_connector_set_path_property", 32),
STACK_USAGE("drm_connector_set_tile_property", 312),
STACK_USAGE("drm_connector_update_edid_property", 48),
STACK_USAGE("drm_connector_set_link_status_property", 24),
STACK_USAGE("drm_connector_attach_max_bpc_property", 24),
STACK_USAGE("drm_connector_attach_hdr_output_metadata_property", 0),
STACK_USAGE("drm_connector_attach_colorspace_property", 0),
STACK_USAGE("drm_connector_init", 80),
STACK_USAGE("drm_connector_atomic_hdr_metadata_equal", 0),
STACK_USAGE("drm_connector_set_vrr_capable_property", 0),
STACK_USAGE("drm_connector_set_panel_orientation", 24),
STACK_USAGE("drm_connector_set_panel_orientation_with_quirk", 32),
STACK_USAGE("drm_connector_create_privacy_screen_properties", 8),
STACK_USAGE("drm_connector_attach_privacy_screen_properties", 16),
STACK_USAGE("drm_connector_privacy_screen_notifier", 24),
STACK_USAGE("drm_connector_attach_privacy_screen_provider", 16),
STACK_USAGE("drm_connector_update_privacy_screen", 0),
STACK_USAGE("drm_connector_set_obj_prop", 24),
STACK_USAGE("drm_connector_property_set_ioctl", 32),
STACK_USAGE("drm_mode_getconnector", 184),
STACK_USAGE("drm_connector_find_by_fwnode", 16),
STACK_USAGE("drm_connector_oob_hotplug_event", 24),
STACK_USAGE("drm_mode_put_tile_group", 24),
STACK_USAGE("drm_mode_get_tile_group", 56),
STACK_USAGE("drm_mode_create_tile_group", 24),
STACK_USAGE("drm_connector_init_with_ddc", 16),
STACK_USAGE("drm_connector_attach_edid_property", 0),
STACK_USAGE("drm_connector_attach_encoder", 0),
STACK_USAGE("drm_connector_has_possible_encoder", 0),
STACK_USAGE("drm_connector_cleanup", 48),
STACK_USAGE("drm_connector_register", 24),
STACK_USAGE("drm_connector_unregister", 16),
STACK_USAGE("drm_connector_unregister_all", 56),
STACK_USAGE("drm_connector_register_all", 72),
STACK_USAGE("drm_get_connector_status_name", 0),
STACK_USAGE("drm_get_connector_force_name", 0),
STACK_USAGE("drm_connector_list_iter_begin", 0),
STACK_USAGE("__drm_connector_put_safe", 16),
STACK_USAGE("drm_connector_list_iter_next", 56),
STACK_USAGE("drm_connector_list_iter_end", 24),
STACK_USAGE("drm_get_subpixel_order_name", 0),
STACK_USAGE("drm_get_dpms_name", 0),
STACK_USAGE("drm_display_info_set_bus_formats", 32),
STACK_USAGE("drm_get_dvi_i_select_name", 0),
STACK_USAGE("drm_get_dvi_i_subconnector_name", 0),
STACK_USAGE("drm_get_tv_select_name", 0),
STACK_USAGE("drm_get_tv_subconnector_name", 0),
STACK_USAGE("drm_get_dp_subconnector_name", 0),
STACK_USAGE("drm_crtc_register_all", 24),
STACK_USAGE("drm_crtc_unregister_all", 24),
STACK_USAGE("drm_crtc_fence_get_driver_name", 0),
STACK_USAGE("drm_crtc_fence_get_timeline_name", 0),
STACK_USAGE("drm_crtc_create_fence", 16),
STACK_USAGE("__drm_crtc_init_with_planes", 56),
STACK_USAGE("drm_crtc_init_with_planes", 88),
STACK_USAGE("drmm_crtc_alloc_with_planes_cleanup", 0),
STACK_USAGE("__drmm_crtc_alloc_with_planes", 152),
STACK_USAGE("drm_crtc_cleanup", 16),
STACK_USAGE("drm_mode_getcrtc", 48),
STACK_USAGE("__drm_mode_set_config_internal", 40),
STACK_USAGE("drm_mode_set_config_internal", 0),
STACK_USAGE("drm_crtc_check_viewport", 48),
STACK_USAGE("drm_mode_setcrtc", 320),
STACK_USAGE("drm_mode_crtc_set_obj_prop", 24),
STACK_USAGE("drm_crtc_from_index", 0),
STACK_USAGE("drm_crtc_create_scaling_filter_property", 16),
STACK_USAGE("drm_crtc_force_disable", 56),
STACK_USAGE("drm_gem_one_name_info", 0),
STACK_USAGE("drm_gem_name_info", 24),
STACK_USAGE("drm_debugfs_open", 0),
STACK_USAGE("drm_debugfs_create_files", 64),
STACK_USAGE("drm_debugfs_init", 120),
STACK_USAGE("drm_debugfs_remove_files", 80),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("drm_debugfs_cleanup", 64),
STACK_USAGE("connector_show", 8),
STACK_USAGE("connector_open", 0),
STACK_USAGE("connector_write", 40),
STACK_USAGE("edid_show", 0),
STACK_USAGE("edid_open", 0),
STACK_USAGE("edid_write", 32),
STACK_USAGE("vrr_range_show", 16),
STACK_USAGE("vrr_range_open", 0),
STACK_USAGE("drm_debugfs_connector_add", 16),
STACK_USAGE("drm_debugfs_connector_remove", 8),
STACK_USAGE("drm_debugfs_crtc_add", 24),
STACK_USAGE("drm_debugfs_crtc_remove", 8),
STACK_USAGE("drm_name_info", 32),
STACK_USAGE("drm_clients_info", 80),
STACK_USAGE("crc_control_open", 0),
STACK_USAGE("crc_control_write", 64),
STACK_USAGE("crtc_crc_open", 48),
STACK_USAGE("crtc_crc_release", 16),
STACK_USAGE("crtc_crc_read", 216),
STACK_USAGE("crtc_crc_poll", 16),
STACK_USAGE("drm_debugfs_crtc_crc_add", 16),
STACK_USAGE("drm_crtc_add_crc_entry", 48),
STACK_USAGE("crc_control_show", 72),
STACK_USAGE("displayid_iter_end", 0),
STACK_USAGE("displayid_iter_edid_begin", 0),
STACK_USAGE("__displayid_iter_next", 32),
STACK_USAGE("drm_core_exit", 0),
STACK_USAGE("drm_core_init", 8),
STACK_USAGE("drm_minor_alloc", 40),
STACK_USAGE("drm_minor_register", 24),
STACK_USAGE("drm_minor_acquire", 32),
STACK_USAGE("drm_minor_release", 8),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("local_lock_release", 8),
STACK_USAGE("drm_put_dev", 8),
STACK_USAGE("drm_dev_enter", 32),
STACK_USAGE("drm_dev_exit", 8),
STACK_USAGE("drm_dev_unplug", 8),
STACK_USAGE("drm_fs_init_fs_context", 0),
STACK_USAGE("drm_dev_init_release", 8),
STACK_USAGE("drm_dev_init", 32),
STACK_USAGE("devm_drm_dev_init_release", 8),
STACK_USAGE("__devm_drm_dev_alloc", 40),
STACK_USAGE("drm_dev_alloc", 32),
STACK_USAGE("drm_dev_get", 0),
STACK_USAGE("drm_dev_put", 8),
STACK_USAGE("drm_dev_register", 40),
STACK_USAGE("drm_dev_unregister", 24),
STACK_USAGE("drm_dev_set_unique", 16),
STACK_USAGE("drm_minor_alloc_release", 16),
STACK_USAGE("drm_stub_open", 40),
STACK_USAGE("drm_mode_mmap_dumb_ioctl", 0),
STACK_USAGE("drm_mode_destroy_dumb", 0),
STACK_USAGE("drm_mode_destroy_dumb_ioctl", 0),
STACK_USAGE("drm_mode_create_dumb", 0),
STACK_USAGE("drm_mode_create_dumb_ioctl", 0),
STACK_USAGE("drm_edid_header_is_valid", 0),
STACK_USAGE("drm_edid_are_equal", 0),
STACK_USAGE("drm_edid_block_valid", 24),
STACK_USAGE("drm_edid_is_valid", 24),
STACK_USAGE("drm_do_probe_ddc_edid", 136),
STACK_USAGE("connector_bad_edid", 104),
STACK_USAGE("drm_add_override_edid_modes", 24),
STACK_USAGE("drm_do_get_edid_base_block", 48),
STACK_USAGE("drm_do_get_edid", 64),
STACK_USAGE("drm_probe_ddc", 120),
STACK_USAGE("drm_get_edid", 120),
STACK_USAGE("drm_edid_get_panel_id", 8),
STACK_USAGE("drm_get_edid_switcheroo", 40),
STACK_USAGE("drm_edid_duplicate", 0),
STACK_USAGE("drm_mode_find_dmt", 56),
STACK_USAGE("drm_for_each_detailed_block", 64),
STACK_USAGE("drm_monitor_supports_rb", 0),
STACK_USAGE("drm_gtf2_hbreak", 8),
STACK_USAGE("drm_gtf2_2c", 8),
STACK_USAGE("drm_gtf2_m", 8),
STACK_USAGE("drm_gtf2_k", 8),
STACK_USAGE("drm_gtf2_2j", 8),
STACK_USAGE("drm_mode_std", 80),
STACK_USAGE("mode_in_range", 40),
STACK_USAGE("drm_mode_fixup_1366x768", 0),
STACK_USAGE("do_inferred_modes", 120),
STACK_USAGE("do_established_modes", 112),
STACK_USAGE("do_standard_modes", 32),
STACK_USAGE("do_cvt_mode", 80),
STACK_USAGE("do_detailed_mode", 232),
STACK_USAGE("drm_find_edid_extension", 8),
STACK_USAGE("drm_match_cea_mode", 176),
STACK_USAGE("drm_match_hdmi_mode", 40),
STACK_USAGE("drm_display_mode_from_cea_vic", 0),
STACK_USAGE("get_monitor_name", 0),
STACK_USAGE("drm_edid_get_monitor_name", 48),
STACK_USAGE("drm_edid_to_sad", 80),
STACK_USAGE("drm_edid_to_speaker_allocation", 64),
STACK_USAGE("drm_av_sync_delay", 0),
STACK_USAGE("drm_detect_hdmi_monitor", 56),
STACK_USAGE("drm_detect_monitor_audio", 80),
STACK_USAGE("drm_default_rgb_quant_range", 0),
STACK_USAGE("drm_reset_display_info", 0),
STACK_USAGE("drm_add_display_info", 144),
STACK_USAGE("drm_add_edid_modes", 296),
STACK_USAGE("drm_add_modes_noedid", 64),
STACK_USAGE("drm_set_preferred_mode", 0),
STACK_USAGE("drm_hdmi_infoframe_set_hdr_metadata", 24),
STACK_USAGE("drm_hdmi_avi_infoframe_from_display_mode", 40),
STACK_USAGE("drm_hdmi_avi_infoframe_colorimetry", 0),
STACK_USAGE("drm_hdmi_avi_infoframe_quant_range", 24),
STACK_USAGE("drm_hdmi_avi_infoframe_bars", 0),
STACK_USAGE("drm_hdmi_vendor_infoframe_from_display_mode", 24),
STACK_USAGE("drm_update_tile_info", 96),
STACK_USAGE("drm_encoder_init", 88),
STACK_USAGE("drm_encoder_cleanup", 32),
STACK_USAGE("drmm_encoder_alloc_release", 32),
STACK_USAGE("__drmm_encoder_alloc", 152),
STACK_USAGE("drm_mode_getencoder", 88),
STACK_USAGE("drm_encoder_register_all", 16),
STACK_USAGE("drm_encoder_unregister_all", 16),
STACK_USAGE("__drm_encoder_init", 56),
STACK_USAGE("drm_file_alloc", 40),
STACK_USAGE("drm_file_free", 64),
STACK_USAGE("drm_open", 48),
STACK_USAGE("drm_lastclose", 8),
STACK_USAGE("drm_release", 32),
STACK_USAGE("drm_release_noglobal", 32),
STACK_USAGE("drm_read", 144),
STACK_USAGE("drm_dev_needs_global_mutex", 0),
STACK_USAGE("drm_poll", 8),
STACK_USAGE("drm_event_reserve_init_locked", 0),
STACK_USAGE("drm_event_reserve_init", 40),
STACK_USAGE("drm_event_cancel_free", 16),
STACK_USAGE("drm_send_event_helper", 16),
STACK_USAGE("drm_send_event_timestamp_locked", 0),
STACK_USAGE("drm_send_event_locked", 0),
STACK_USAGE("drm_send_event", 32),
STACK_USAGE("mock_drm_getfile", 32),
STACK_USAGE("drm_addr_inflate", 48),
STACK_USAGE("drm_get_unmapped_area", 56),
STACK_USAGE("drm_driver_legacy_fb_format", 0),
STACK_USAGE("__drm_format_info", 0),
STACK_USAGE("drm_format_info", 0),
STACK_USAGE("drm_get_format_info", 8),
STACK_USAGE("drm_format_info_block_width", 0),
STACK_USAGE("drm_format_info_block_height", 0),
STACK_USAGE("drm_format_info_min_pitch", 0),
STACK_USAGE("drm_mode_legacy_fb_format", 0),
STACK_USAGE("drm_framebuffer_remove", 224),
STACK_USAGE("drm_framebuffer_plane_width", 0),
STACK_USAGE("drm_framebuffer_plane_height", 0),
STACK_USAGE("drm_framebuffer_print_info", 48),
STACK_USAGE("drm_mode_addfb", 144),
STACK_USAGE("drm_framebuffer_info", 80),
STACK_USAGE("drm_framebuffer_debugfs_init", 0),
STACK_USAGE("drm_mode_addfb_ioctl", 0),
STACK_USAGE("drm_internal_framebuffer_create", 72),
STACK_USAGE("drm_mode_addfb2", 24),
STACK_USAGE("drm_mode_addfb2_ioctl", 24),
STACK_USAGE("drm_mode_rmfb_work_fn", 24),
STACK_USAGE("drm_mode_rmfb", 144),
STACK_USAGE("drm_mode_rmfb_ioctl", 0),
STACK_USAGE("drm_mode_getfb", 40),
STACK_USAGE("drm_mode_getfb2_ioctl", 48),
STACK_USAGE("drm_mode_dirtyfb_ioctl", 64),
STACK_USAGE("drm_framebuffer_check_src_coords", 40),
STACK_USAGE("drm_fb_release", 120),
STACK_USAGE("drm_framebuffer_free", 16),
STACK_USAGE("drm_framebuffer_init", 32),
STACK_USAGE("drm_framebuffer_lookup", 0),
STACK_USAGE("drm_framebuffer_unregister_private", 0),
STACK_USAGE("drm_framebuffer_cleanup", 24),
STACK_USAGE("drm_gem_mmap_obj", 24),
STACK_USAGE("drm_gem_mmap", 64),
STACK_USAGE("drm_gem_print_info", 24),
STACK_USAGE("drm_gem_pin", 0),
STACK_USAGE("drm_gem_unpin", 0),
STACK_USAGE("drm_gem_vmap", 8),
STACK_USAGE("drm_gem_vunmap", 8),
STACK_USAGE("drm_gem_lock_reservations", 80),
STACK_USAGE("drm_gem_object_init", 32),
STACK_USAGE("drm_gem_unlock_reservations", 40),
STACK_USAGE("drm_gem_fence_array_add", 64),
STACK_USAGE("drm_gem_fence_array_add_implicit", 80),
STACK_USAGE("drm_gem_private_object_init", 16),
STACK_USAGE("ww_acquire_fini", 8),
STACK_USAGE("drm_gem_object_handle_put_unlocked", 16),
STACK_USAGE("drm_gem_object_release_handle", 24),
STACK_USAGE("drm_gem_handle_delete", 64),
STACK_USAGE("drm_gem_dumb_map_offset", 32),
STACK_USAGE("drm_gem_dumb_destroy", 0),
STACK_USAGE("local_lock_release", 8),
STACK_USAGE("drm_gem_handle_create_tail", 64),
STACK_USAGE("drm_gem_handle_create", 24),
STACK_USAGE("drm_gem_free_mmap_offset", 0),
STACK_USAGE("drm_gem_create_mmap_offset_size", 0),
STACK_USAGE("drm_gem_create_mmap_offset", 0),
STACK_USAGE("drm_gem_get_pages", 184),
STACK_USAGE("drm_gem_put_pages", 184),
STACK_USAGE("drm_gem_objects_lookup", 56),
STACK_USAGE("drm_gem_object_lookup", 24),
STACK_USAGE("drm_gem_dma_resv_wait", 40),
STACK_USAGE("drm_gem_close_ioctl", 0),
STACK_USAGE("drm_gem_flink_ioctl", 48),
STACK_USAGE("drm_gem_init_release", 0),
STACK_USAGE("drm_gem_open_ioctl", 48),
STACK_USAGE("drm_gem_open", 8),
STACK_USAGE("drm_gem_release", 8),
STACK_USAGE("drm_gem_object_release", 8),
STACK_USAGE("drm_gem_init", 8),
STACK_USAGE("drm_gem_object_free", 0),
STACK_USAGE("drm_gem_vm_open", 0),
STACK_USAGE("drm_gem_vm_close", 0),
STACK_USAGE("compat_drm_getunique", 56),
STACK_USAGE("compat_drm_setunique", 0),
STACK_USAGE("compat_drm_getclient", 96),
STACK_USAGE("compat_drm_getstats", 0),
STACK_USAGE("compat_drm_update_draw", 0),
STACK_USAGE("compat_drm_wait_vblank", 64),
STACK_USAGE("compat_drm_mode_addfb2", 136),
STACK_USAGE("compat_drm_version", 128),
STACK_USAGE("drm_compat_ioctl", 32),
STACK_USAGE("drm_getunique", 32),
STACK_USAGE("drm_getclient", 16),
STACK_USAGE("drm_getstats", 0),
STACK_USAGE("drm_getcap", 0),
STACK_USAGE("drm_setclientcap", 0),
STACK_USAGE("drm_setversion", 48),
STACK_USAGE("drm_noop", 0),
STACK_USAGE("drm_invalid_op", 0),
STACK_USAGE("drm_version", 40),
STACK_USAGE("drm_ioctl_kernel", 56),
STACK_USAGE("drm_ioctl", 264),
STACK_USAGE("drm_ioctl_flags", 0),
STACK_USAGE("_drm_lease_held", 40),
STACK_USAGE("drm_lease_held", 40),
STACK_USAGE("drm_lease_filter_crtcs", 88),
STACK_USAGE("drm_lease_destroy", 24),
STACK_USAGE("_drm_lease_revoke", 56),
STACK_USAGE("drm_lease_revoke", 16),
STACK_USAGE("drm_mode_create_lease_ioctl", 216),
STACK_USAGE("drm_mode_list_lessees_ioctl", 80),
STACK_USAGE("drm_mode_get_lease_ioctl", 96),
STACK_USAGE("drm_mode_revoke_lease_ioctl", 48),
STACK_USAGE("drm_lease_owner", 0),
STACK_USAGE("drmm_add_final_kfree", 24),
STACK_USAGE("__drmm_add_action", 48),
STACK_USAGE("__drmm_add_action_or_reset", 32),
STACK_USAGE("drmm_kmalloc", 32),
STACK_USAGE("drmm_kstrdup", 32),
STACK_USAGE("drmm_kfree", 48),
STACK_USAGE("drm_managed_release", 48),
STACK_USAGE("drm_mm_print", 56),
STACK_USAGE("drm_mm_interval_tree_augment_rotate", 0),
STACK_USAGE("__drm_mm_interval_first", 0),
STACK_USAGE("drm_mm_interval_tree_add_node", 0),
STACK_USAGE("augment_callbacks_rotate", 0),
STACK_USAGE("add_hole", 24),
STACK_USAGE("rm_hole", 32),
STACK_USAGE("drm_mm_reserve_node", 80),
STACK_USAGE("drm_mm_insert_node_in_range", 152),
STACK_USAGE("drm_mm_remove_node", 40),
STACK_USAGE("drm_mm_replace_node", 24),
STACK_USAGE("drm_mm_scan_init_with_range", 0),
STACK_USAGE("drm_mm_scan_add_block", 32),
STACK_USAGE("drm_mm_scan_remove_block", 0),
STACK_USAGE("drm_mm_scan_color_evict", 48),
STACK_USAGE("drm_mm_init", 8),
STACK_USAGE("drm_mm_takedown", 0),
STACK_USAGE("drm_mode_config_reset", 48),
STACK_USAGE("ww_acquire_fini", 8),
STACK_USAGE("drm_modeset_register_all", 16),
STACK_USAGE("drm_mode_config_init_release", 0),
STACK_USAGE("drmm_mode_config_init", 496),
STACK_USAGE("drm_mode_config_cleanup", 104),
STACK_USAGE("drm_mode_config_validate", 56),
STACK_USAGE("drm_modeset_unregister_all", 8),
STACK_USAGE("drm_mode_getresources", 104),
STACK_USAGE("drm_mode_object_unregister", 24),
STACK_USAGE("drm_mode_object_lease_required", 0),
STACK_USAGE("__drm_mode_object_find", 40),
STACK_USAGE("drm_mode_object_find", 0),
STACK_USAGE("drm_mode_object_put", 16),
STACK_USAGE("drm_mode_object_get", 16),
STACK_USAGE("drm_object_attach_property", 0),
STACK_USAGE("drm_object_property_set_value", 0),
STACK_USAGE("drm_object_property_get_value", 0),
STACK_USAGE("drm_object_property_get_default_value", 0),
STACK_USAGE("drm_mode_object_get_properties", 104),
STACK_USAGE("__drm_mode_object_add", 56),
STACK_USAGE("drm_mode_obj_get_properties_ioctl", 200),
STACK_USAGE("drm_mode_obj_find_prop_id", 0),
STACK_USAGE("drm_mode_obj_set_property_ioctl", 208),
STACK_USAGE("drm_mode_object_add", 32),
STACK_USAGE("drm_mode_object_register", 24),
STACK_USAGE("drm_mode_match", 0),
STACK_USAGE("drm_mode_equal", 0),
STACK_USAGE("drm_mode_probed_add", 16),
STACK_USAGE("drm_mode_equal_no_clocks", 0),
STACK_USAGE("drm_mode_equal_no_clocks_no_stereo", 0),
STACK_USAGE("drm_mode_validate_driver", 0),
STACK_USAGE("drm_mode_validate_size", 0),
STACK_USAGE("drm_mode_validate_ycbcr420", 8),
STACK_USAGE("drm_get_mode_status_name", 0),
STACK_USAGE("drm_mode_prune_invalid", 48),
STACK_USAGE("drm_mode_compare", 0),
STACK_USAGE("drm_mode_sort", 0),
STACK_USAGE("drm_connector_list_update", 88),
STACK_USAGE("drm_cvt_mode", 48),
STACK_USAGE("drm_mode_parse_command_line_for_connector", 128),
STACK_USAGE("drm_mode_create_from_cmdline_mode", 16),
STACK_USAGE("drm_mode_convert_to_umode", 16),
STACK_USAGE("drm_mode_convert_umode", 72),
STACK_USAGE("drm_mode_is_420_only", 8),
STACK_USAGE("drm_mode_is_420_also", 8),
STACK_USAGE("drm_mode_is_420", 16),
STACK_USAGE("drm_gtf_mode_complex", 56),
STACK_USAGE("drm_mode_debug_printmodeline", 48),
STACK_USAGE("drm_gtf_mode", 0),
STACK_USAGE("drm_mode_create", 0),
STACK_USAGE("drm_mode_set_name", 0),
STACK_USAGE("drm_mode_vrefresh", 0),
STACK_USAGE("drm_mode_get_hv_timing", 0),
STACK_USAGE("drm_mode_set_crtcinfo", 32),
STACK_USAGE("drm_mode_destroy", 0),
STACK_USAGE("drm_mode_copy", 24),
STACK_USAGE("drm_mode_duplicate", 32),
STACK_USAGE("drm_modeset_lock_all", 48),
STACK_USAGE("ww_acquire_fini", 8),
STACK_USAGE("drm_modeset_unlock_all", 24),
STACK_USAGE("drm_warn_on_modeset_not_all_locked", 24),
STACK_USAGE("drm_modeset_acquire_init", 24),
STACK_USAGE("drm_modeset_acquire_fini", 0),
STACK_USAGE("drm_modeset_drop_locks", 8),
STACK_USAGE("modeset_lock", 16),
STACK_USAGE("drm_modeset_backoff", 24),
STACK_USAGE("drm_modeset_lock_init", 8),
STACK_USAGE("drm_modeset_lock", 0),
STACK_USAGE("drm_modeset_lock_single_interruptible", 0),
STACK_USAGE("drm_modeset_unlock", 0),
STACK_USAGE("drm_modeset_lock_all_ctx", 40),
STACK_USAGE("disable_modeset", 0),
STACK_USAGE("drm_firmware_drivers_only", 0),
STACK_USAGE("drm_panel_prepare", 0),
STACK_USAGE("drm_panel_unprepare", 0),
STACK_USAGE("drm_panel_enable", 24),
STACK_USAGE("drm_panel_disable", 24),
STACK_USAGE("drm_panel_get_modes", 0),
STACK_USAGE("drm_panel_of_backlight", 8),
STACK_USAGE("drm_panel_init", 0),
STACK_USAGE("drm_panel_add", 8),
STACK_USAGE("drm_panel_remove", 8),
STACK_USAGE("drm_get_panel_orientation_quirk", 40),
STACK_USAGE("drm_pci_set_busid", 8),
STACK_USAGE("drm_mode_cursor_common", 384),
STACK_USAGE("drm_mode_cursor_ioctl", 48),
STACK_USAGE("drm_mode_cursor2_ioctl", 0),
STACK_USAGE("drm_mode_page_flip_ioctl", 264),
STACK_USAGE("drm_plane_enable_fb_damage_clips", 0),
STACK_USAGE("drm_plane_get_damage_clips_count", 0),
STACK_USAGE("__drm_plane_get_damage_clips", 0),
STACK_USAGE("drm_plane_get_damage_clips", 16),
STACK_USAGE("drm_create_scaling_filter_prop", 32),
STACK_USAGE("drm_plane_create_scaling_filter_property", 16),
STACK_USAGE("__drm_universal_plane_init", 80),
STACK_USAGE("drm_universal_plane_init", 104),
STACK_USAGE("drmm_universal_plane_alloc_release", 0),
STACK_USAGE("__drmm_universal_plane_alloc", 152),
STACK_USAGE("drm_plane_register_all", 48),
STACK_USAGE("drm_plane_unregister_all", 16),
STACK_USAGE("drm_plane_init", 0),
STACK_USAGE("drm_plane_cleanup", 16),
STACK_USAGE("drm_plane_from_index", 0),
STACK_USAGE("drm_plane_force_disable", 8),
STACK_USAGE("drm_mode_plane_set_obj_prop", 24),
STACK_USAGE("drm_mode_getplane_res", 56),
STACK_USAGE("drm_mode_getplane", 40),
STACK_USAGE("drm_plane_check_pixel_format", 8),
STACK_USAGE("__setplane_check", 64),
STACK_USAGE("drm_any_plane_has_format", 32),
STACK_USAGE("__setplane_internal", 56),
STACK_USAGE("drm_mode_setplane", 248),
STACK_USAGE("drm_prime_add_buf_handle", 40),
STACK_USAGE("drm_prime_sg_to_dma_addr_array", 72),
STACK_USAGE("drm_prime_gem_destroy", 16),
STACK_USAGE("drm_prime_remove_buf_handle_locked", 32),
STACK_USAGE("drm_prime_init_file_private", 8),
STACK_USAGE("drm_prime_destroy_file_private", 0),
STACK_USAGE("drm_gem_dmabuf_export", 24),
STACK_USAGE("drm_gem_dmabuf_release", 8),
STACK_USAGE("drm_gem_prime_fd_to_handle", 56),
STACK_USAGE("drm_prime_fd_to_handle_ioctl", 0),
STACK_USAGE("drm_gem_prime_handle_to_fd", 64),
STACK_USAGE("drm_prime_handle_to_fd_ioctl", 0),
STACK_USAGE("drm_gem_map_attach", 0),
STACK_USAGE("drm_gem_map_detach", 0),
STACK_USAGE("drm_gem_map_dma_buf", 24),
STACK_USAGE("drm_gem_unmap_dma_buf", 8),
STACK_USAGE("drm_gem_dmabuf_vmap", 0),
STACK_USAGE("drm_gem_dmabuf_vunmap", 0),
STACK_USAGE("drm_gem_prime_mmap", 48),
STACK_USAGE("drm_gem_dmabuf_mmap", 0),
STACK_USAGE("drm_prime_pages_to_sg", 32),
STACK_USAGE("drm_prime_get_contiguous_size", 32),
STACK_USAGE("drm_gem_prime_export", 88),
STACK_USAGE("drm_gem_prime_import_dev", 40),
STACK_USAGE("drm_gem_prime_import", 0),
STACK_USAGE("drm_prime_sg_to_page_array", 72),
STACK_USAGE("__drm_puts_seq_file", 0),
STACK_USAGE("__drm_printfn_seq_file", 0),
STACK_USAGE("__drm_printfn_info", 0),
STACK_USAGE("__drm_printfn_debug", 0),
STACK_USAGE("__drm_printfn_err", 0),
STACK_USAGE("drm_puts", 0),
STACK_USAGE("drm_printf", 104),
STACK_USAGE("drm_print_bits", 64),
STACK_USAGE("drm_dev_printk", 104),
STACK_USAGE("drm_dev_dbg", 104),
STACK_USAGE("__drm_dbg", 104),
STACK_USAGE("__drm_err", 104),
STACK_USAGE("drm_print_regset32", 64),
STACK_USAGE("__drm_puts_coredump", 48),
STACK_USAGE("__drm_printfn_coredump", 48),
STACK_USAGE("drm_property_create_enum", 48),
STACK_USAGE("drm_property_create_bitmask", 48),
STACK_USAGE("drm_property_create_range", 16),
STACK_USAGE("drm_property_create_signed_range", 16),
STACK_USAGE("drm_property_create_object", 8),
STACK_USAGE("drm_property_create_bool", 0),
STACK_USAGE("drm_property_add_enum", 48),
STACK_USAGE("drm_property_destroy", 48),
STACK_USAGE("drm_mode_getproperty_ioctl", 80),
STACK_USAGE("drm_property_free_blob", 24),
STACK_USAGE("drm_property_create_blob", 40),
STACK_USAGE("drm_property_blob_put", 0),
STACK_USAGE("drm_property_destroy_user_blobs", 16),
STACK_USAGE("drm_property_blob_get", 8),
STACK_USAGE("drm_property_lookup_blob", 0),
STACK_USAGE("drm_property_replace_global_blob", 40),
STACK_USAGE("drm_property_replace_blob", 24),
STACK_USAGE("drm_mode_getblob_ioctl", 24),
STACK_USAGE("drm_mode_createblob_ioctl", 40),
STACK_USAGE("drm_mode_destroyblob_ioctl", 24),
STACK_USAGE("drm_property_change_valid_get", 16),
STACK_USAGE("drm_property_change_valid_put", 0),
STACK_USAGE("drm_property_create", 40),
STACK_USAGE("drm_syncobj_array_wait_timeout", 128),
STACK_USAGE("drm_syncobj_fence_get", 32),
STACK_USAGE("drm_timeout_abs_to_jiffies", 8),
STACK_USAGE("drm_syncobj_array_find", 80),
STACK_USAGE("drm_syncobj_wait_ioctl", 64),
STACK_USAGE("drm_syncobj_timeline_wait_ioctl", 64),
STACK_USAGE("drm_syncobj_reset_ioctl", 48),
STACK_USAGE("drm_syncobj_signal_ioctl", 56),
STACK_USAGE("drm_syncobj_timeline_signal_ioctl", 72),
STACK_USAGE("drm_syncobj_query_ioctl", 88),
STACK_USAGE("drm_syncobj_find", 24),
STACK_USAGE("drm_syncobj_fence_add_wait", 48),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("drm_syncobj_add_point", 48),
STACK_USAGE("drm_syncobj_replace_fence", 40),
STACK_USAGE("local_lock_release", 8),
STACK_USAGE("drm_syncobj_find_fence", 128),
STACK_USAGE("drm_syncobj_free", 8),
STACK_USAGE("drm_syncobj_create", 40),
STACK_USAGE("drm_syncobj_get_handle", 32),
STACK_USAGE("drm_syncobj_file_release", 8),
STACK_USAGE("drm_syncobj_get_fd", 32),
STACK_USAGE("drm_syncobj_open", 8),
STACK_USAGE("drm_syncobj_release_handle", 8),
STACK_USAGE("drm_syncobj_release", 8),
STACK_USAGE("drm_syncobj_create_ioctl", 48),
STACK_USAGE("drm_syncobj_destroy_ioctl", 32),
STACK_USAGE("drm_syncobj_handle_to_fd_ioctl", 56),
STACK_USAGE("drm_syncobj_fd_to_handle_ioctl", 48),
STACK_USAGE("drm_syncobj_transfer_ioctl", 64),
STACK_USAGE("syncobj_wait_fence_func", 0),
STACK_USAGE("syncobj_wait_syncobj_func", 32),
STACK_USAGE("drm_sysfs_init", 16),
STACK_USAGE("drm_sysfs_destroy", 0),
STACK_USAGE("drm_sysfs_release", 0),
STACK_USAGE("status_store", 48),
STACK_USAGE("status_show", 8),
STACK_USAGE("dpms_show", 8),
STACK_USAGE("enabled_show", 0),
STACK_USAGE("edid_show", 48),
STACK_USAGE("modes_show", 48),
STACK_USAGE("drm_sysfs_connector_add", 40),
STACK_USAGE("drm_sysfs_connector_remove", 8),
STACK_USAGE("drm_sysfs_lease_event", 40),
STACK_USAGE("drm_sysfs_hotplug_event", 40),
STACK_USAGE("drm_sysfs_connector_hotplug_event", 104),
STACK_USAGE("drm_sysfs_connector_status_event", 152),
STACK_USAGE("drm_sysfs_minor_alloc", 24),
STACK_USAGE("drm_class_device_register", 0),
STACK_USAGE("drm_class_device_unregister", 0),
STACK_USAGE("drm_connector_acpi_bus_match", 0),
STACK_USAGE("drm_connector_acpi_find_companion", 8),
STACK_USAGE("drm_devnode", 0),
STACK_USAGE("__bpf_trace_drm_vblank_event", 0),
STACK_USAGE("__traceiter_drm_vblank_event", 40),
STACK_USAGE("perf_trace_drm_vblank_event", 72),
STACK_USAGE("trace_event_raw_event_drm_vblank_event", 96),
STACK_USAGE("trace_raw_output_drm_vblank_event", 24),
STACK_USAGE("__bpf_trace_drm_vblank_event_queued", 0),
STACK_USAGE("__traceiter_drm_vblank_event_queued", 32),
STACK_USAGE("perf_trace_drm_vblank_event_queued", 72),
STACK_USAGE("trace_event_raw_event_drm_vblank_event_queued", 88),
STACK_USAGE("trace_raw_output_drm_vblank_event_queued", 24),
STACK_USAGE("__bpf_trace_drm_vblank_event_delivered", 0),
STACK_USAGE("__traceiter_drm_vblank_event_delivered", 32),
STACK_USAGE("perf_trace_drm_vblank_event_delivered", 72),
STACK_USAGE("trace_event_raw_event_drm_vblank_event_delivered", 88),
STACK_USAGE("trace_raw_output_drm_vblank_event_delivered", 24),
STACK_USAGE("drm_crtc_arm_vblank_event", 16),
STACK_USAGE("drm_crtc_send_vblank_event", 48),
STACK_USAGE("drm_vblank_enable", 48),
STACK_USAGE("drm_vblank_get", 48),
STACK_USAGE("drm_crtc_vblank_get", 0),
STACK_USAGE("drm_vblank_put", 48),
STACK_USAGE("drm_crtc_vblank_put", 0),
STACK_USAGE("drm_wait_one_vblank", 96),
STACK_USAGE("drm_crtc_wait_one_vblank", 0),
STACK_USAGE("drm_crtc_vblank_off", 112),
STACK_USAGE("drm_crtc_vblank_reset", 32),
STACK_USAGE("drm_crtc_set_max_vblank_count", 32),
STACK_USAGE("drm_crtc_vblank_on", 40),
STACK_USAGE("drm_crtc_vblank_restore", 104),
STACK_USAGE("drm_legacy_modeset_ctl_ioctl", 32),
STACK_USAGE("drm_queue_vblank_event", 88),
STACK_USAGE("store_vblank", 56),
STACK_USAGE("drm_wait_vblank_reply", 24),
STACK_USAGE("drm_wait_vblank_ioctl", 128),
STACK_USAGE("drm_handle_vblank_events", 88),
STACK_USAGE("drm_handle_vblank", 72),
STACK_USAGE("drm_crtc_handle_vblank", 0),
STACK_USAGE("drm_crtc_get_sequence_ioctl", 72),
STACK_USAGE("__get_vblank_counter", 16),
STACK_USAGE("drm_crtc_queue_sequence_ioctl", 112),
STACK_USAGE("drm_reset_vblank_timestamp", 80),
STACK_USAGE("drm_update_vblank_count", 104),
STACK_USAGE("drm_vblank_count", 8),
STACK_USAGE("drm_crtc_accurate_vblank_count", 32),
STACK_USAGE("drm_vblank_disable_and_save", 48),
STACK_USAGE("vblank_disable_fn", 40),
STACK_USAGE("drm_vblank_init_release", 16),
STACK_USAGE("drm_vblank_init", 56),
STACK_USAGE("drm_dev_has_vblank", 0),
STACK_USAGE("drm_crtc_vblank_waitqueue", 0),
STACK_USAGE("drm_calc_timestamping_constants", 56),
STACK_USAGE("drm_crtc_vblank_helper_get_vblank_timestamp_internal", 104),
STACK_USAGE("drm_crtc_vblank_helper_get_vblank_timestamp", 0),
STACK_USAGE("drm_crtc_vblank_count", 8),
STACK_USAGE("drm_vblank_count_and_time", 48),
STACK_USAGE("drm_crtc_vblank_count_and_time", 0),
STACK_USAGE("send_vblank_event", 32),
STACK_USAGE("drm_vblank_work_schedule", 88),
STACK_USAGE("drm_vblank_work_cancel_sync", 40),
STACK_USAGE("drm_vblank_work_flush", 88),
STACK_USAGE("drm_vblank_work_init", 0),
STACK_USAGE("drm_vblank_worker_init", 16),
STACK_USAGE("drm_handle_vblank_works", 40),
STACK_USAGE("drm_vblank_cancel_pending_works", 24),
STACK_USAGE("drm_vma_offset_manager_destroy", 0),
STACK_USAGE("drm_vma_offset_lookup_locked", 0),
STACK_USAGE("drm_vma_offset_add", 32),
STACK_USAGE("drm_vma_offset_remove", 16),
STACK_USAGE("drm_vma_node_allow", 32),
STACK_USAGE("drm_vma_node_revoke", 24),
STACK_USAGE("drm_vma_node_is_allowed", 24),
STACK_USAGE("drm_vma_offset_manager_init", 24),
STACK_USAGE("drm_writeback_fence_enable_signaling", 0),
STACK_USAGE("drm_writeback_connector_init", 48),
STACK_USAGE("drm_writeback_set_fb", 24),
STACK_USAGE("drm_writeback_prepare_job", 8),
STACK_USAGE("drm_writeback_queue_job", 24),
STACK_USAGE("drm_writeback_cleanup_job", 8),
STACK_USAGE("cleanup_work", 0),
STACK_USAGE("drm_writeback_signal_completion", 32),
STACK_USAGE("drm_writeback_get_out_fence", 16),
STACK_USAGE("drm_writeback_fence_get_driver_name", 0),
STACK_USAGE("drm_writeback_fence_get_timeline_name", 0),
STACK_USAGE("a4_probe", 24),
STACK_USAGE("a4_driver_exit", 0),
STACK_USAGE("a4_driver_init", 0),
STACK_USAGE("a4_input_mapping", 0),
STACK_USAGE("a4_input_mapped", 0),
STACK_USAGE("a4_event", 32),
STACK_USAGE("belkin_input_mapping", 0),
STACK_USAGE("belkin_probe", 24),
STACK_USAGE("belkin_driver_exit", 0),
STACK_USAGE("belkin_driver_init", 0),
STACK_USAGE("ch_report_fixup", 8),
STACK_USAGE("ch_input_mapping", 0),
STACK_USAGE("ch_driver_exit", 0),
STACK_USAGE("ch_driver_init", 0),
STACK_USAGE("hid_setup_resolution_multiplier", 80),
STACK_USAGE("hid_open_report", 80),
STACK_USAGE("hid_snto32", 0),
STACK_USAGE("hid_field_extract", 16),
STACK_USAGE("hid_process_event", 48),
STACK_USAGE("hid_input_array_field", 56),
STACK_USAGE("hid_output_report", 112),
STACK_USAGE("hid_alloc_report_buf", 0),
STACK_USAGE("hid_set_field", 48),
STACK_USAGE("__hid_request", 48),
STACK_USAGE("hid_report_raw_event", 144),
STACK_USAGE("hid_input_report", 72),
STACK_USAGE("hid_match_one_id", 0),
STACK_USAGE("hid_match_id", 0),
STACK_USAGE("read_report_descriptor", 8),
STACK_USAGE("show_country", 0),
STACK_USAGE("hid_connect", 136),
STACK_USAGE("hid_disconnect", 8),
STACK_USAGE("hid_hw_start", 24),
STACK_USAGE("hid_hw_stop", 8),
STACK_USAGE("hid_hw_open", 24),
STACK_USAGE("hid_hw_close", 16),
STACK_USAGE("hid_hw_request", 0),
STACK_USAGE("hid_hw_raw_request", 0),
STACK_USAGE("hid_hw_output_report", 0),
STACK_USAGE("hid_driver_suspend", 0),
STACK_USAGE("hid_driver_reset_resume", 0),
STACK_USAGE("hid_driver_resume", 0),
STACK_USAGE("new_id_store", 64),
STACK_USAGE("hid_match_device", 32),
STACK_USAGE("hid_bus_match", 0),
STACK_USAGE("hid_compare_device_paths", 32),
STACK_USAGE("hid_device_probe", 64),
STACK_USAGE("hid_add_field", 72),
STACK_USAGE("hid_device_remove", 24),
STACK_USAGE("modalias_show", 0),
STACK_USAGE("hid_uevent", 24),
STACK_USAGE("hid_add_device", 16),
STACK_USAGE("hid_allocate_device", 8),
STACK_USAGE("hid_destroy_device", 8),
STACK_USAGE("__hid_bus_reprobe_drivers", 8),
STACK_USAGE("__hid_bus_driver_added", 0),
STACK_USAGE("__bus_removed_driver", 0),
STACK_USAGE("__hid_register_driver", 8),
STACK_USAGE("hid_unregister_driver", 48),
STACK_USAGE("hid_check_keys_pressed", 0),
STACK_USAGE("hid_init", 8),
STACK_USAGE("hid_exit", 0),
STACK_USAGE("hid_parser_global", 0),
STACK_USAGE("hid_parser_local", 24),
STACK_USAGE("hid_register_report", 64),
STACK_USAGE("hid_parser_main", 48),
STACK_USAGE("hid_parser_reserved", 0),
STACK_USAGE("hid_close_report", 40),
STACK_USAGE("hid_device_release", 16),
STACK_USAGE("hid_scan_main", 0),
STACK_USAGE("hid_scan_report", 64),
STACK_USAGE("hid_parse_report", 16),
STACK_USAGE("hid_validate_values", 0),
STACK_USAGE("cp_event", 0),
STACK_USAGE("cp_probe", 16),
STACK_USAGE("cp_driver_exit", 0),
STACK_USAGE("cp_driver_init", 0),
STACK_USAGE("cp_report_fixup", 16),
STACK_USAGE("cp_input_mapped", 0),
STACK_USAGE("hid_debug_rdesc_show", 80),
STACK_USAGE("hid_debug_events_open", 32),
STACK_USAGE("hid_debug_events_read", 120),
STACK_USAGE("hid_debug_events_poll", 8),
STACK_USAGE("hid_debug_events_release", 16),
STACK_USAGE("hid_debug_rdesc_open", 0),
STACK_USAGE("hid_debug_register", 8),
STACK_USAGE("hid_debug_unregister", 8),
STACK_USAGE("hid_debug_init", 0),
STACK_USAGE("hid_debug_exit", 0),
STACK_USAGE("hid_resolv_usage", 40),
STACK_USAGE("hid_dump_field", 72),
STACK_USAGE("hid_dump_device", 48),
STACK_USAGE("hid_debug_event", 56),
STACK_USAGE("hid_dump_report", 80),
STACK_USAGE("hid_dump_input", 56),
STACK_USAGE("dr_report_fixup", 0),
STACK_USAGE("dr_input_mapping", 32),
STACK_USAGE("dr_probe", 16),
STACK_USAGE("dr_driver_exit", 0),
STACK_USAGE("dr_driver_init", 0),
STACK_USAGE("ez_input_mapping", 24),
STACK_USAGE("ez_event", 0),
STACK_USAGE("ez_driver_exit", 0),
STACK_USAGE("ez_driver_init", 0),
STACK_USAGE("ga_probe", 16),
STACK_USAGE("ga_driver_exit", 0),
STACK_USAGE("ga_driver_init", 0),
STACK_USAGE("__check_hid_generic", 0),
STACK_USAGE("hid_generic_match", 0),
STACK_USAGE("hid_generic_probe", 8),
STACK_USAGE("hid_generic_exit", 0),
STACK_USAGE("hid_generic_init", 0),
STACK_USAGE("gyration_input_mapping", 0),
STACK_USAGE("gyration_event", 24),
STACK_USAGE("gyration_driver_exit", 0),
STACK_USAGE("gyration_driver_init", 0),
STACK_USAGE("hid_map_usage", 32),
STACK_USAGE("hid_map_usage_clear", 32),
STACK_USAGE("hidinput_handle_scroll", 24),
STACK_USAGE("hid_report_release_tool", 24),
STACK_USAGE("hid_report_set_tool", 32),
STACK_USAGE("hidinput_hid_event", 72),
STACK_USAGE("hidinput_locate_usage", 40),
STACK_USAGE("hidinput_report_event", 16),
STACK_USAGE("hidinput_get_led_field", 0),
STACK_USAGE("hidinput_count_leds", 24),
STACK_USAGE("hidinput_led_worker", 40),
STACK_USAGE("hidinput_input_event", 40),
STACK_USAGE("hidinput_getkeycode", 24),
STACK_USAGE("hidinput_open", 0),
STACK_USAGE("hidinput_close", 0),
STACK_USAGE("__hidinput_change_resolution_multipliers", 64),
STACK_USAGE("hidinput_setkeycode", 40),
STACK_USAGE("hidinput_connect", 128),
STACK_USAGE("hidinput_disconnect", 48),
STACK_USAGE("hidinput_calc_abs_res", 0),
STACK_USAGE("hidinput_get_battery_property", 40),
STACK_USAGE("hidinput_setup_battery", 104),
STACK_USAGE("hidinput_configure_usage", 72),
STACK_USAGE("ks_input_mapping", 0),
STACK_USAGE("ks_driver_exit", 0),
STACK_USAGE("ks_driver_init", 0),
STACK_USAGE("kye_report_fixup", 8),
STACK_USAGE("kye_probe", 24),
STACK_USAGE("kye_driver_exit", 0),
STACK_USAGE("kye_driver_init", 0),
STACK_USAGE("ms_input_mapping", 0),
STACK_USAGE("ms_input_mapped", 0),
STACK_USAGE("ms_event", 32),
STACK_USAGE("ms_ff_worker", 8),
STACK_USAGE("ms_play_effect", 0),
STACK_USAGE("ms_probe", 40),
STACK_USAGE("ms_remove", 8),
STACK_USAGE("ms_driver_exit", 0),
STACK_USAGE("ms_driver_init", 0),
STACK_USAGE("ms_report_fixup", 8),
STACK_USAGE("mr_report_fixup", 8),
STACK_USAGE("mr_input_mapping", 0),
STACK_USAGE("mr_driver_exit", 0),
STACK_USAGE("mr_driver_init", 0),
STACK_USAGE("pl_driver_exit", 0),
STACK_USAGE("pl_driver_init", 0),
STACK_USAGE("pl_report_fixup", 8),
STACK_USAGE("pl_input_mapping", 0),
STACK_USAGE("pl_probe", 16),
STACK_USAGE("pl_probe", 80),
STACK_USAGE("pl_driver_exit", 0),
STACK_USAGE("pl_driver_init", 0),
STACK_USAGE("hid_plff_play", 0),
STACK_USAGE("hid_quirks_init", 96),
STACK_USAGE("hid_quirks_exit", 40),
STACK_USAGE("hid_lookup_quirk", 32),
STACK_USAGE("hid_ignore", 40),
STACK_USAGE("sjoy_probe", 16),
STACK_USAGE("sjoy_driver_exit", 0),
STACK_USAGE("sjoy_driver_init", 0),
STACK_USAGE("sp_report_fixup", 8),
STACK_USAGE("sp_input_mapping", 0),
STACK_USAGE("sp_driver_exit", 0),
STACK_USAGE("sp_driver_init", 0),
STACK_USAGE("ts_input_mapping", 0),
STACK_USAGE("ts_driver_exit", 0),
STACK_USAGE("ts_driver_init", 0),
STACK_USAGE("twinhan_driver_exit", 0),
STACK_USAGE("twinhan_driver_init", 0),
STACK_USAGE("twinhan_input_mapping", 0),
STACK_USAGE("zp_probe", 40),
STACK_USAGE("zp_driver_exit", 0),
STACK_USAGE("zp_driver_init", 0),
STACK_USAGE("zpff_play", 32),
STACK_USAGE("hidraw_send_report", 40),
STACK_USAGE("hidraw_write", 24),
STACK_USAGE("hidraw_get_report", 64),
STACK_USAGE("hidraw_poll", 8),
STACK_USAGE("hidraw_open", 40),
STACK_USAGE("hidraw_fasync", 0),
STACK_USAGE("drop_ref", 8),
STACK_USAGE("hidraw_release", 16),
STACK_USAGE("hidraw_ioctl", 64),
STACK_USAGE("hidraw_read", 112),
STACK_USAGE("hidraw_report_event", 80),
STACK_USAGE("hidraw_connect", 32),
STACK_USAGE("hidraw_disconnect", 8),
STACK_USAGE("hidraw_init", 24),
STACK_USAGE("hidraw_exit", 8),
STACK_USAGE("devm_hwmon_device_register_with_info", 48),
STACK_USAGE("devm_hwmon_match", 0),
STACK_USAGE("devm_hwmon_device_unregister", 0),
STACK_USAGE("hwmon_pci_quirks", 32),
STACK_USAGE("hwmon_init", 8),
STACK_USAGE("__bpf_trace_hwmon_attr_class", 0),
STACK_USAGE("perf_trace_hwmon_attr_class", 96),
STACK_USAGE("trace_event_raw_event_hwmon_attr_class", 104),
STACK_USAGE("trace_raw_output_hwmon_attr_class", 24),
STACK_USAGE("hwmon_exit", 0),
STACK_USAGE("hwmon_dev_release", 24),
STACK_USAGE("hwmon_attr_show", 32),
STACK_USAGE("__traceiter_hwmon_attr_show", 32),
STACK_USAGE("hwmon_attr_show_string", 40),
STACK_USAGE("hwmon_attr_store", 40),
STACK_USAGE("__traceiter_hwmon_attr_store", 32),
STACK_USAGE("__bpf_trace_hwmon_attr_show_string", 0),
STACK_USAGE("__traceiter_hwmon_attr_show_string", 32),
STACK_USAGE("perf_trace_hwmon_attr_show_string", 104),
STACK_USAGE("trace_event_raw_event_hwmon_attr_show_string", 112),
STACK_USAGE("trace_raw_output_hwmon_attr_show_string", 24),
STACK_USAGE("hwmon_notify_event", 136),
STACK_USAGE("name_show", 0),
STACK_USAGE("__hwmon_device_register", 208),
STACK_USAGE("label_show", 0),
STACK_USAGE("hwmon_device_register_with_groups", 0),
STACK_USAGE("hwmon_dev_attr_is_visible", 0),
STACK_USAGE("hwmon_device_register_with_info", 0),
STACK_USAGE("hwmon_device_register", 8),
STACK_USAGE("hwmon_device_unregister", 24),
STACK_USAGE("devm_hwmon_release", 24),
STACK_USAGE("devm_hwmon_device_register_with_groups", 40),
STACK_USAGE("i2c_repstart", 16),
STACK_USAGE("i2c_stop", 16),
STACK_USAGE("i2c_outb", 32),
STACK_USAGE("try_address", 48),
STACK_USAGE("acknak", 24),
STACK_USAGE("bit_xfer", 120),
STACK_USAGE("sdahi", 8),
STACK_USAGE("bit_xfer_atomic", 24),
STACK_USAGE("bit_func", 0),
STACK_USAGE("__i2c_bit_add_bus", 40),
STACK_USAGE("i2c_bit_add_bus", 0),
STACK_USAGE("i2c_bit_add_numbered_bus", 0),
STACK_USAGE("sclhi", 16),
STACK_USAGE("bios_signature", 56),
STACK_USAGE("input_apanel_init", 8),
STACK_USAGE("dmi_check_onboard_devices", 144),
STACK_USAGE("check_acpi_smo88xx_device", 32),
STACK_USAGE("i801_probe_optional_slaves", 104),
STACK_USAGE("i801_add_tco", 296),
STACK_USAGE("i801_acpi_io_handler", 56),
STACK_USAGE("i801_acpi_remove", 8),
STACK_USAGE("i801_probe", 64),
STACK_USAGE("i801_remove", 24),
STACK_USAGE("i801_shutdown", 16),
STACK_USAGE("i801_suspend", 8),
STACK_USAGE("i801_resume", 8),
STACK_USAGE("i2c_i801_init", 0),
STACK_USAGE("i2c_i801_exit", 0),
STACK_USAGE("inb_p", 8),
STACK_USAGE("outb_p", 0),
STACK_USAGE("i801_check_pre", 24),
STACK_USAGE("i801_check_post", 32),
STACK_USAGE("i801_transaction", 24),
STACK_USAGE("i801_isr", 40),
STACK_USAGE("i801_access", 104),
STACK_USAGE("i801_func", 0),
STACK_USAGE("i801_enable_host_notify", 8),
STACK_USAGE("i2c_register_board_info", 40),
STACK_USAGE("i2c_acpi_fill_info", 24),
STACK_USAGE("i2c_acpi_do_lookup", 56),
STACK_USAGE("i2c_acpi_add_resource", 80),
STACK_USAGE("i2c_acpi_get_irq", 40),
STACK_USAGE("i2c_acpi_get_info", 104),
STACK_USAGE("i2c_acpi_add_device", 104),
STACK_USAGE("i2c_acpi_register_devices", 8),
STACK_USAGE("i2c_acpi_lookup_speed", 16),
STACK_USAGE("i2c_acpi_find_bus_speed", 160),
STACK_USAGE("i2c_acpi_find_adapter_by_handle", 16),
STACK_USAGE("i2c_acpi_notify", 120),
STACK_USAGE("i2c_acpi_new_device_by_fwnode", 112),
STACK_USAGE("i2c_acpi_waive_d0_probe", 16),
STACK_USAGE("acpi_gsb_i2c_read_bytes", 104),
STACK_USAGE("i2c_acpi_get_i2c_resource", 0),
STACK_USAGE("acpi_gsb_i2c_write_bytes", 88),
STACK_USAGE("i2c_acpi_space_handler", 64),
STACK_USAGE("i2c_acpi_resource_count", 0),
STACK_USAGE("i2c_acpi_install_space_handler", 40),
STACK_USAGE("i2c_acpi_remove_space_handler", 24),
STACK_USAGE("i2c_acpi_client_count", 32),
STACK_USAGE("i2c_match_id", 24),
STACK_USAGE("dummy_probe", 0),
STACK_USAGE("dummy_remove", 0),
STACK_USAGE("i2c_new_dummy_device", 88),
STACK_USAGE("devm_i2c_release_dummy", 24),
STACK_USAGE("devm_i2c_new_dummy_device", 120),
STACK_USAGE("i2c_new_ancillary_device", 88),
STACK_USAGE("i2c_adapter_dev_release", 0),
STACK_USAGE("i2c_adapter_depth", 0),
STACK_USAGE("i2c_device_match", 24),
STACK_USAGE("new_device_store", 128),
STACK_USAGE("__bpf_trace_i2c_result", 0),
STACK_USAGE("__traceiter_i2c_result", 32),
STACK_USAGE("perf_trace_i2c_result", 72),
STACK_USAGE("trace_event_raw_event_i2c_result", 88),
STACK_USAGE("trace_raw_output_i2c_result", 24),
STACK_USAGE("delete_device_store", 64),
STACK_USAGE("i2c_verify_adapter", 0),
STACK_USAGE("i2c_do_add_adapter", 168),
STACK_USAGE("__process_new_adapter", 0),
STACK_USAGE("i2c_host_notify_irq_map", 0),
STACK_USAGE("i2c_device_uevent", 16),
STACK_USAGE("i2c_handle_smbus_host_notify", 16),
STACK_USAGE("i2c_register_adapter", 48),
STACK_USAGE("i2c_add_adapter", 16),
STACK_USAGE("get_scl_gpio_value", 0),
STACK_USAGE("i2c_add_numbered_adapter", 24),
STACK_USAGE("set_scl_gpio_value", 0),
STACK_USAGE("i2c_do_del_adapter", 64),
STACK_USAGE("__unregister_client", 24),
STACK_USAGE("__unregister_dummy", 24),
STACK_USAGE("__process_removed_adapter", 0),
STACK_USAGE("i2c_del_adapter", 88),
STACK_USAGE("get_sda_gpio_value", 0),
STACK_USAGE("devm_i2c_del_adapter", 0),
STACK_USAGE("devm_i2c_add_adapter", 24),
STACK_USAGE("i2c_parse_fw_timings", 40),
STACK_USAGE("i2c_for_each_dev", 16),
STACK_USAGE("__process_new_driver", 0),
STACK_USAGE("i2c_register_driver", 16),
STACK_USAGE("__process_removed_driver", 0),
STACK_USAGE("i2c_del_driver", 8),
STACK_USAGE("i2c_cmd", 0),
STACK_USAGE("i2c_clients_command", 24),
STACK_USAGE("i2c_init", 16),
STACK_USAGE("i2c_exit", 0),
STACK_USAGE("i2c_generic_scl_recovery", 56),
STACK_USAGE("__i2c_transfer", 64),
STACK_USAGE("i2c_transfer", 40),
STACK_USAGE("i2c_transfer_buffer_flags", 32),
STACK_USAGE("i2c_get_device_id", 72),
STACK_USAGE("i2c_default_probe", 64),
STACK_USAGE("i2c_probe_func_quick_read", 0),
STACK_USAGE("i2c_new_scanned_device", 80),
STACK_USAGE("i2c_get_adapter", 8),
STACK_USAGE("i2c_put_adapter", 8),
STACK_USAGE("i2c_get_dma_safe_msg_buf", 0),
STACK_USAGE("i2c_put_dma_safe_msg_buf", 8),
STACK_USAGE("__bpf_trace_i2c_write", 0),
STACK_USAGE("__traceiter_i2c_write", 32),
STACK_USAGE("perf_trace_i2c_write", 88),
STACK_USAGE("trace_event_raw_event_i2c_write", 96),
STACK_USAGE("trace_raw_output_i2c_write", 24),
STACK_USAGE("i2c_recover_bus", 0),
STACK_USAGE("i2c_device_probe", 40),
STACK_USAGE("__bpf_trace_i2c_read", 0),
STACK_USAGE("__traceiter_i2c_read", 32),
STACK_USAGE("perf_trace_i2c_read", 72),
STACK_USAGE("trace_event_raw_event_i2c_read", 88),
STACK_USAGE("trace_raw_output_i2c_read", 24),
STACK_USAGE("i2c_device_remove", 8),
STACK_USAGE("i2c_device_shutdown", 0),
STACK_USAGE("i2c_client_dev_release", 0),
STACK_USAGE("name_show", 0),
STACK_USAGE("modalias_show", 16),
STACK_USAGE("i2c_transfer_trace_reg", 0),
STACK_USAGE("i2c_verify_client", 0),
STACK_USAGE("i2c_check_7bit_addr_validity_strict", 0),
STACK_USAGE("i2c_transfer_trace_unreg", 0),
STACK_USAGE("i2c_check_mux_children", 0),
STACK_USAGE("i2c_freq_mode_string", 0),
STACK_USAGE("i2c_adapter_lock_bus", 0),
STACK_USAGE("i2c_adapter_trylock_bus", 0),
STACK_USAGE("i2c_adapter_unlock_bus", 0),
STACK_USAGE("i2c_dev_irq_from_resources", 24),
STACK_USAGE("__bpf_trace_i2c_reply", 0),
STACK_USAGE("__traceiter_i2c_reply", 32),
STACK_USAGE("perf_trace_i2c_reply", 88),
STACK_USAGE("trace_event_raw_event_i2c_reply", 96),
STACK_USAGE("trace_raw_output_i2c_reply", 24),
STACK_USAGE("i2c_new_client_device", 80),
STACK_USAGE("i2c_unregister_device", 24),
STACK_USAGE("i2c_smbus_read_byte", 48),
STACK_USAGE("i2c_smbus_write_byte", 0),
STACK_USAGE("__bpf_trace_smbus_reply", 0),
STACK_USAGE("__traceiter_smbus_reply", 48),
STACK_USAGE("perf_trace_smbus_reply", 80),
STACK_USAGE("trace_event_raw_event_smbus_reply", 96),
STACK_USAGE("trace_raw_output_smbus_reply", 64),
STACK_USAGE("i2c_smbus_read_byte_data", 48),
STACK_USAGE("i2c_smbus_write_byte_data", 48),
STACK_USAGE("i2c_smbus_read_word_data", 48),
STACK_USAGE("i2c_smbus_write_word_data", 48),
STACK_USAGE("__bpf_trace_smbus_result", 0),
STACK_USAGE("__traceiter_smbus_result", 48),
STACK_USAGE("perf_trace_smbus_result", 80),
STACK_USAGE("trace_event_raw_event_smbus_result", 104),
STACK_USAGE("trace_raw_output_smbus_result", 64),
STACK_USAGE("i2c_smbus_read_block_data", 64),
STACK_USAGE("__bpf_trace_smbus_write", 0),
STACK_USAGE("__traceiter_smbus_write", 48),
STACK_USAGE("perf_trace_smbus_write", 80),
STACK_USAGE("trace_event_raw_event_smbus_write", 96),
STACK_USAGE("trace_raw_output_smbus_write", 64),
STACK_USAGE("i2c_smbus_write_block_data", 64),
STACK_USAGE("i2c_smbus_read_i2c_block_data", 64),
STACK_USAGE("i2c_smbus_write_i2c_block_data", 64),
STACK_USAGE("i2c_smbus_pec", 0),
STACK_USAGE("i2c_smbus_xfer", 64),
STACK_USAGE("__i2c_smbus_xfer", 248),
STACK_USAGE("i2c_smbus_msg_pec", 0),
STACK_USAGE("i2c_smbus_read_i2c_block_data_or_emulated", 120),
STACK_USAGE("i2c_new_smbus_alert_device", 88),
STACK_USAGE("i2c_setup_smbus_alert", 104),
STACK_USAGE("__bpf_trace_smbus_read", 0),
STACK_USAGE("__traceiter_smbus_read", 48),
STACK_USAGE("perf_trace_smbus_read", 72),
STACK_USAGE("trace_event_raw_event_smbus_read", 96),
STACK_USAGE("trace_raw_output_smbus_read", 56),
STACK_USAGE("smbalert_work", 48),
STACK_USAGE("smbalert_probe", 40),
STACK_USAGE("smbalert_remove", 0),
STACK_USAGE("i2c_handle_smbus_alert", 0),
STACK_USAGE("smbalert_driver_exit", 0),
STACK_USAGE("smbalert_driver_init", 0),
STACK_USAGE("i2c_register_spd", 152),
STACK_USAGE("smbus_do_alert", 24),
STACK_USAGE("smbus_alert", 48),
STACK_USAGE("evdev_ioctl_handler", 128),
STACK_USAGE("evdev_ioctl", 0),
STACK_USAGE("evdev_ioctl_compat", 0),
STACK_USAGE("evdev_cleanup", 32),
STACK_USAGE("evdev_connect", 48),
STACK_USAGE("evdev_disconnect", 24),
STACK_USAGE("evdev_init", 0),
STACK_USAGE("evdev_exit", 0),
STACK_USAGE("evdev_pass_values", 72),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("evdev_events", 48),
STACK_USAGE("evdev_event", 16),
STACK_USAGE("evdev_fasync", 0),
STACK_USAGE("evdev_free", 8),
STACK_USAGE("evdev_release", 32),
STACK_USAGE("evdev_open", 72),
STACK_USAGE("evdev_write", 88),
STACK_USAGE("evdev_read", 144),
STACK_USAGE("evdev_poll", 16),
STACK_USAGE("bits_to_user", 8),
STACK_USAGE("str_to_user", 32),
STACK_USAGE("handle_eviocgbit", 8),
STACK_USAGE("evdev_handle_get_val", 88),
STACK_USAGE("evdev_handle_mt_request", 48),
STACK_USAGE("erase_effect", 64),
STACK_USAGE("input_ff_erase", 32),
STACK_USAGE("input_ff_flush", 40),
STACK_USAGE("input_ff_event", 0),
STACK_USAGE("input_ff_create", 40),
STACK_USAGE("input_ff_destroy", 16),
STACK_USAGE("input_ff_upload", 56),
STACK_USAGE("ml_schedule_timer", 56),
STACK_USAGE("apply_envelope", 48),
STACK_USAGE("ml_play_effects", 144),
STACK_USAGE("ml_effect_timer", 24),
STACK_USAGE("ml_ff_set_gain", 0),
STACK_USAGE("ml_ff_playback", 32),
STACK_USAGE("ml_ff_upload", 40),
STACK_USAGE("ml_ff_destroy", 8),
STACK_USAGE("input_ff_create_memless", 32),
STACK_USAGE("input_event_from_user", 32),
STACK_USAGE("input_event_to_user", 24),
STACK_USAGE("input_ff_effect_from_user", 8),
STACK_USAGE("input_leds_disconnect", 32),
STACK_USAGE("input_leds_init", 0),
STACK_USAGE("input_leds_exit", 0),
STACK_USAGE("input_leds_brightness_get", 0),
STACK_USAGE("input_leds_brightness_set", 0),
STACK_USAGE("input_leds_event", 0),
STACK_USAGE("input_leds_connect", 88),
STACK_USAGE("input_mt_destroy_slots", 8),
STACK_USAGE("input_mt_report_slot_state", 16),
STACK_USAGE("input_mt_report_finger_count", 16),
STACK_USAGE("input_mt_report_pointer_emulation", 40),
STACK_USAGE("input_mt_drop_unused", 32),
STACK_USAGE("input_mt_sync_frame", 32),
STACK_USAGE("input_mt_init_slots", 40),
STACK_USAGE("input_mt_assign_slots", 104),
STACK_USAGE("input_mt_get_slot_by_key", 0),
STACK_USAGE("input_set_poll_interval", 0),
STACK_USAGE("input_set_min_poll_interval", 0),
STACK_USAGE("input_set_max_poll_interval", 0),
STACK_USAGE("input_get_poll_interval", 0),
STACK_USAGE("input_dev_get_poll_interval", 0),
STACK_USAGE("input_dev_set_poll_interval", 48),
STACK_USAGE("input_dev_get_poll_max", 0),
STACK_USAGE("input_dev_get_poll_min", 0),
STACK_USAGE("input_poller_attrs_visible", 0),
STACK_USAGE("input_dev_poller_work", 8),
STACK_USAGE("input_dev_poller_finalize", 0),
STACK_USAGE("input_dev_poller_start", 8),
STACK_USAGE("input_dev_poller_stop", 0),
STACK_USAGE("input_setup_polling", 32),
STACK_USAGE("input_match_device_id", 16),
STACK_USAGE("input_proc_devices_poll", 8),
STACK_USAGE("input_devices_seq_start", 16),
STACK_USAGE("input_devices_seq_next", 0),
STACK_USAGE("input_seq_stop", 0),
STACK_USAGE("input_seq_print_bitmap", 104),
STACK_USAGE("input_devices_seq_show", 40),
STACK_USAGE("input_proc_devices_open", 0),
STACK_USAGE("input_handlers_seq_start", 16),
STACK_USAGE("input_handlers_seq_next", 0),
STACK_USAGE("input_handlers_seq_show", 16),
STACK_USAGE("input_proc_handlers_open", 0),
STACK_USAGE("input_proc_init", 8),
STACK_USAGE("input_proc_exit", 0),
STACK_USAGE("input_dev_show_name", 0),
STACK_USAGE("input_dev_show_phys", 0),
STACK_USAGE("input_dev_show_uniq", 0),
STACK_USAGE("input_pass_values", 80),
STACK_USAGE("input_print_modalias", 80),
STACK_USAGE("input_dev_show_modalias", 8),
STACK_USAGE("input_dev_show_properties", 8),
STACK_USAGE("inhibited_show", 0),
STACK_USAGE("inhibited_store", 56),
STACK_USAGE("input_dev_show_id_bustype", 0),
STACK_USAGE("input_dev_show_id_vendor", 0),
STACK_USAGE("input_dev_show_id_product", 0),
STACK_USAGE("input_dev_show_id_version", 0),
STACK_USAGE("input_print_bitmap", 80),
STACK_USAGE("input_dev_show_cap_ev", 8),
STACK_USAGE("input_dev_show_cap_key", 8),
STACK_USAGE("input_dev_show_cap_rel", 8),
STACK_USAGE("input_dev_show_cap_abs", 8),
STACK_USAGE("input_dev_show_cap_msc", 8),
STACK_USAGE("input_dev_show_cap_led", 8),
STACK_USAGE("input_dev_show_cap_snd", 8),
STACK_USAGE("input_dev_show_cap_ff", 8),
STACK_USAGE("input_dev_show_cap_sw", 8),
STACK_USAGE("input_dev_release", 16),
STACK_USAGE("input_add_uevent_bm_var", 32),
STACK_USAGE("input_add_uevent_modalias_var", 24),
STACK_USAGE("input_dev_uevent", 40),
STACK_USAGE("input_dev_toggle", 64),
STACK_USAGE("input_reset_device", 32),
STACK_USAGE("input_dev_suspend", 16),
STACK_USAGE("input_dev_resume", 16),
STACK_USAGE("input_dev_freeze", 16),
STACK_USAGE("input_dev_poweroff", 16),
STACK_USAGE("input_repeat_key", 72),
STACK_USAGE("input_devnode", 0),
STACK_USAGE("input_allocate_device", 16),
STACK_USAGE("devm_input_device_match", 0),
STACK_USAGE("devm_input_device_release", 0),
STACK_USAGE("devm_input_allocate_device", 24),
STACK_USAGE("input_free_device", 8),
STACK_USAGE("input_set_timestamp", 16),
STACK_USAGE("input_get_timestamp", 16),
STACK_USAGE("input_set_capability", 24),
STACK_USAGE("__input_unregister_device", 32),
STACK_USAGE("devm_input_device_unregister", 0),
STACK_USAGE("input_enable_softrepeat", 0),
STACK_USAGE("input_device_enabled", 8),
STACK_USAGE("input_register_device", 64),
STACK_USAGE("input_unregister_device", 8),
STACK_USAGE("input_register_handler", 40),
STACK_USAGE("input_unregister_handler", 24),
STACK_USAGE("input_handler_for_each_handle", 40),
STACK_USAGE("input_register_handle", 40),
STACK_USAGE("input_unregister_handle", 24),
STACK_USAGE("input_get_new_minor", 8),
STACK_USAGE("input_free_minor", 0),
STACK_USAGE("input_init", 16),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("input_exit", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("input_handle_event", 48),
STACK_USAGE("input_event", 48),
STACK_USAGE("input_inject_event", 64),
STACK_USAGE("input_alloc_absinfo", 8),
STACK_USAGE("input_set_abs_params", 48),
STACK_USAGE("input_copy_abs", 32),
STACK_USAGE("input_grab_device", 32),
STACK_USAGE("__input_release_device", 24),
STACK_USAGE("input_release_device", 16),
STACK_USAGE("input_open_device", 40),
STACK_USAGE("input_flush_device", 32),
STACK_USAGE("input_close_device", 24),
STACK_USAGE("input_dev_release_keys", 48),
STACK_USAGE("input_scancode_to_scalar", 0),
STACK_USAGE("input_default_getkeycode", 0),
STACK_USAGE("input_default_setkeycode", 0),
STACK_USAGE("input_get_keycode", 32),
STACK_USAGE("input_set_keycode", 88),
STACK_USAGE("atkbd_oqo_01plus_scancode_fixup", 0),
STACK_USAGE("atkbd_set_keycode_table", 48),
STACK_USAGE("atkbd_set_device_attrs", 32),
STACK_USAGE("atkbd_connect", 64),
STACK_USAGE("atkbd_reconnect", 56),
STACK_USAGE("atkbd_attr_set_helper", 48),
STACK_USAGE("atkbd_set_extra", 72),
STACK_USAGE("atkbd_set_scroll", 64),
STACK_USAGE("atkbd_set_set", 72),
STACK_USAGE("atkbd_set_softrepeat", 64),
STACK_USAGE("atkbd_set_softraw", 64),
STACK_USAGE("atkbd_setup_forced_release", 0),
STACK_USAGE("atkbd_setup_scancode_fixup", 0),
STACK_USAGE("atkbd_deactivate_fixup", 0),
STACK_USAGE("atkbd_init", 0),
STACK_USAGE("atkbd_exit", 0),
STACK_USAGE("atkbd_do_set_extra", 0),
STACK_USAGE("atkbd_do_show_extra", 0),
STACK_USAGE("atkbd_do_set_force_release", 120),
STACK_USAGE("atkbd_do_show_force_release", 8),
STACK_USAGE("atkbd_do_set_scroll", 0),
STACK_USAGE("atkbd_do_show_scroll", 0),
STACK_USAGE("atkbd_do_set_set", 0),
STACK_USAGE("atkbd_do_show_set", 0),
STACK_USAGE("atkbd_do_set_softrepeat", 0),
STACK_USAGE("atkbd_do_show_softrepeat", 0),
STACK_USAGE("atkbd_do_set_softraw", 0),
STACK_USAGE("atkbd_do_show_softraw", 0),
STACK_USAGE("atkbd_do_show_err_count", 0),
STACK_USAGE("atkbd_do_show_function_row_physmap", 0),
STACK_USAGE("atkbd_attr_is_visible", 0),
STACK_USAGE("atkbd_interrupt", 72),
STACK_USAGE("atkbd_set_leds", 32),
STACK_USAGE("atkbd_event_work", 40),
STACK_USAGE("atkbd_event", 0),
STACK_USAGE("atkbd_probe", 32),
STACK_USAGE("atkbd_select_set", 40),
STACK_USAGE("atkbd_cleanup", 16),
STACK_USAGE("atkbd_disconnect", 24),
STACK_USAGE("atkbd_apply_forced_release_keylist", 0),
STACK_USAGE("alps_decode_packet_v7", 8),
STACK_USAGE("alps_process_packet_v7", 32),
STACK_USAGE("alps_decode_ss4_v2", 0),
STACK_USAGE("alps_process_packet_ss4_v2", 48),
STACK_USAGE("alps_register_bare_ps2_mouse", 40),
STACK_USAGE("alps_flush_packet", 24),
STACK_USAGE("alps_process_byte", 32),
STACK_USAGE("alps_command_mode_set_addr", 56),
STACK_USAGE("alps_command_mode_read_reg", 32),
STACK_USAGE("__alps_command_mode_write_reg", 48),
STACK_USAGE("alps_command_mode_write_reg", 56),
STACK_USAGE("alps_rpt_cmd", 32),
STACK_USAGE("alps_enter_command_mode", 24),
STACK_USAGE("alps_passthrough_mode_v2", 24),
STACK_USAGE("alps_poll", 56),
STACK_USAGE("alps_hw_init_v1_v2", 48),
STACK_USAGE("alps_trackstick_enter_extended_mode_v3_v6", 32),
STACK_USAGE("alps_hw_init_v6", 56),
STACK_USAGE("alps_passthrough_mode_v3", 64),
STACK_USAGE("alps_setup_trackstick_v3", 64),
STACK_USAGE("alps_hw_init_v3", 48),
STACK_USAGE("alps_report_buttons", 32),
STACK_USAGE("alps_get_v3_v7_resolution", 64),
STACK_USAGE("alps_hw_init_rushmore_v3", 40),
STACK_USAGE("alps_hw_init_v4", 48),
STACK_USAGE("alps_process_packet_v1_v2", 80),
STACK_USAGE("alps_hw_init_dolphin_v1", 32),
STACK_USAGE("alps_hw_init_v7", 48),
STACK_USAGE("alps_hw_init_ss4_v2", 32),
STACK_USAGE("alps_set_protocol", 56),
STACK_USAGE("alps_match_table", 0),
STACK_USAGE("alps_identify", 56),
STACK_USAGE("alps_reconnect", 16),
STACK_USAGE("alps_disconnect", 8),
STACK_USAGE("alps_set_abs_params_st", 16),
STACK_USAGE("alps_set_abs_params_mt_common", 24),
STACK_USAGE("alps_set_abs_params_semi_mt", 8),
STACK_USAGE("alps_set_abs_params_v7", 8),
STACK_USAGE("alps_set_abs_params_ss4_v2", 8),
STACK_USAGE("alps_init", 40),
STACK_USAGE("alps_detect", 48),
STACK_USAGE("alps_process_bitmap", 104),
STACK_USAGE("alps_report_mt_data", 88),
STACK_USAGE("alps_report_semi_mt_data", 48),
STACK_USAGE("alps_decode_pinnacle", 0),
STACK_USAGE("alps_decode_rushmore", 0),
STACK_USAGE("alps_decode_dolphin", 0),
STACK_USAGE("alps_process_touchpad_packet_v3_v5", 48),
STACK_USAGE("alps_process_packet_v3", 40),
STACK_USAGE("alps_process_packet_v6", 64),
STACK_USAGE("alps_process_packet_v4", 16),
STACK_USAGE("byd_report_input", 16),
STACK_USAGE("byd_clear_touch", 24),
STACK_USAGE("byd_process_byte", 24),
STACK_USAGE("byd_reconnect", 48),
STACK_USAGE("byd_disconnect", 8),
STACK_USAGE("byd_detect", 48),
STACK_USAGE("byd_init", 64),
STACK_USAGE("cypress_send_ext_cmd", 144),
STACK_USAGE("cypress_detect", 40),
STACK_USAGE("cypress_reset", 0),
STACK_USAGE("cypress_process_packet", 96),
STACK_USAGE("cypress_protocol_handler", 0),
STACK_USAGE("cypress_ps2_ext_cmd", 32),
STACK_USAGE("cypress_set_rate", 0),
STACK_USAGE("cypress_disconnect", 8),
STACK_USAGE("cypress_reconnect", 48),
STACK_USAGE("cypress_init", 56),
STACK_USAGE("focaltech_process_byte", 40),
STACK_USAGE("focaltech_switch_protocol", 32),
STACK_USAGE("focaltech_reset", 8),
STACK_USAGE("focaltech_disconnect", 8),
STACK_USAGE("focaltech_reconnect", 16),
STACK_USAGE("focaltech_detect", 16),
STACK_USAGE("focaltech_set_resolution", 0),
STACK_USAGE("focaltech_set_rate", 0),
STACK_USAGE("focaltech_set_scale", 0),
STACK_USAGE("focaltech_init", 56),
STACK_USAGE("lifebook_module_init", 0),
STACK_USAGE("lifebook_process_byte", 32),
STACK_USAGE("lifebook_absolute_mode", 32),
STACK_USAGE("lifebook_set_resolution", 24),
STACK_USAGE("lifebook_disconnect", 16),
STACK_USAGE("lifebook_detect", 16),
STACK_USAGE("lifebook_init", 72),
STACK_USAGE("lifebook_limit_serio3", 0),
STACK_USAGE("lifebook_set_6byte_proto", 0),
STACK_USAGE("ps2pp_set_smartscroll", 40),
STACK_USAGE("ps2pp_attr_show_smartscroll", 0),
STACK_USAGE("ps2pp_attr_set_smartscroll", 32),
STACK_USAGE("ps2pp_set_resolution", 32),
STACK_USAGE("ps2pp_disconnect", 0),
STACK_USAGE("ps2pp_detect", 80),
STACK_USAGE("ps2pp_process_byte", 24),
STACK_USAGE("psmouse_try_protocol", 48),
STACK_USAGE("psmouse_extensions", 64),
STACK_USAGE("psmouse_report_standard_buttons", 16),
STACK_USAGE("psmouse_initialize", 8),
STACK_USAGE("psmouse_report_standard_motion", 16),
STACK_USAGE("psmouse_activate", 16),
STACK_USAGE("psmouse_deactivate", 16),
STACK_USAGE("psmouse_resync", 64),
STACK_USAGE("psmouse_report_standard_packet", 24),
STACK_USAGE("psmouse_cleanup", 32),
STACK_USAGE("psmouse_disconnect", 32),
STACK_USAGE("psmouse_process_byte", 24),
STACK_USAGE("psmouse_switch_protocol", 32),
STACK_USAGE("psmouse_connect", 72),
STACK_USAGE("__psmouse_reconnect", 64),
STACK_USAGE("psmouse_reconnect", 0),
STACK_USAGE("psmouse_fast_reconnect", 0),
STACK_USAGE("psmouse_attr_show_helper", 0),
STACK_USAGE("psmouse_attr_set_helper", 48),
STACK_USAGE("psmouse_show_int_attr", 0),
STACK_USAGE("psmouse_set_int_attr", 40),
STACK_USAGE("psmouse_attr_show_protocol", 0),
STACK_USAGE("psmouse_attr_set_protocol", 88),
STACK_USAGE("psmouse_attr_set_rate", 32),
STACK_USAGE("psmouse_attr_set_resolution", 32),
STACK_USAGE("psmouse_set_maxproto", 56),
STACK_USAGE("psmouse_get_maxproto", 8),
STACK_USAGE("psmouse_init", 16),
STACK_USAGE("psmouse_exit", 0),
STACK_USAGE("psmouse_queue_work", 0),
STACK_USAGE("psmouse_set_state", 24),
STACK_USAGE("psmouse_handle_byte", 24),
STACK_USAGE("psmouse_interrupt", 32),
STACK_USAGE("psmouse_reset", 16),
STACK_USAGE("psmouse_set_resolution", 24),
STACK_USAGE("psmouse_set_rate", 24),
STACK_USAGE("psmouse_set_scale", 0),
STACK_USAGE("psmouse_poll", 0),
STACK_USAGE("psmouse_matches_pnp_id", 56),
STACK_USAGE("genius_detect", 56),
STACK_USAGE("intellimouse_detect", 48),
STACK_USAGE("im_explorer_detect", 48),
STACK_USAGE("thinking_detect", 48),
STACK_USAGE("ps2bare_detect", 0),
STACK_USAGE("cortron_detect", 0),
STACK_USAGE("psmouse_protocol_by_type", 0),
STACK_USAGE("psmouse_do_detect", 32),
STACK_USAGE("psmouse_smbus_process_byte", 0),
STACK_USAGE("psmouse_smbus_reconnect", 0),
STACK_USAGE("psmouse_smbus_remove_i2c_device", 8),
STACK_USAGE("psmouse_smbus_disconnect", 24),
STACK_USAGE("psmouse_smbus_create_companion", 40),
STACK_USAGE("psmouse_smbus_cleanup", 40),
STACK_USAGE("psmouse_smbus_init", 56),
STACK_USAGE("psmouse_smbus_module_init", 8),
STACK_USAGE("psmouse_smbus_module_exit", 0),
STACK_USAGE("psmouse_smbus_notifier_call", 48),
STACK_USAGE("synaptics_reset", 24),
STACK_USAGE("synaptics_detect_pkt_type", 0),
STACK_USAGE("synaptics_process_byte", 88),
STACK_USAGE("set_abs_position_params", 56),
STACK_USAGE("synaptics_show_disable_gesture", 0),
STACK_USAGE("synaptics_set_disable_gesture", 40),
STACK_USAGE("synaptics_disconnect", 40),
STACK_USAGE("synaptics_reconnect", 104),
STACK_USAGE("synaptics_module_init", 0),
STACK_USAGE("synaptics_init_ps2", 56),
STACK_USAGE("synaptics_init_absolute", 80),
STACK_USAGE("synaptics_init_relative", 80),
STACK_USAGE("synaptics_init_smbus", 288),
STACK_USAGE("synaptics_init", 288),
STACK_USAGE("synaptics_send_cmd", 16),
STACK_USAGE("synaptics_resolution", 40),
STACK_USAGE("synaptics_query_hardware", 48),
STACK_USAGE("synaptics_set_mode", 40),
STACK_USAGE("synaptics_set_rate", 24),
STACK_USAGE("synaptics_pt_write", 24),
STACK_USAGE("synaptics_pt_start", 32),
STACK_USAGE("synaptics_pt_stop", 24),
STACK_USAGE("synaptics_pt_activate", 24),
STACK_USAGE("synaptics_pt_create", 24),
STACK_USAGE("synaptics_report_semi_mt_data", 48),
STACK_USAGE("synaptics_report_buttons", 48),
STACK_USAGE("synaptics_detect", 48),
STACK_USAGE("synaptics_report_mt_data", 104),
STACK_USAGE("trackpoint_show_int_attr", 0),
STACK_USAGE("trackpoint_set_int_attr", 56),
STACK_USAGE("trackpoint_set_bit_attr", 56),
STACK_USAGE("trackpoint_is_attr_visible", 0),
STACK_USAGE("trackpoint_sync", 64),
STACK_USAGE("trackpoint_power_on_reset", 16),
STACK_USAGE("trackpoint_disconnect", 40),
STACK_USAGE("trackpoint_reconnect", 48),
STACK_USAGE("trackpoint_detect", 88),
STACK_USAGE("i8042_pnp_kbd_probe", 24),
STACK_USAGE("i8042_pnp_aux_probe", 24),
STACK_USAGE("i8042_controller_reset", 24),
STACK_USAGE("i8042_panic_blink", 40),
STACK_USAGE("i8042_pnp_init", 32),
STACK_USAGE("i8042_controller_resume", 32),
STACK_USAGE("i8042_pm_suspend", 0),
STACK_USAGE("i8042_pm_resume_noirq", 0),
STACK_USAGE("i8042_pm_resume", 0),
STACK_USAGE("i8042_platform_init", 24),
STACK_USAGE("i8042_pm_thaw", 0),
STACK_USAGE("i8042_pm_reset", 0),
STACK_USAGE("i8042_pm_restore", 0),
STACK_USAGE("i8042_shutdown", 0),
STACK_USAGE("i8042_create_aux_port", 40),
STACK_USAGE("i8042_kbd_bind_notifier", 0),
STACK_USAGE("i8042_probe", 56),
STACK_USAGE("i8042_remove", 0),
STACK_USAGE("i8042_init", 8),
STACK_USAGE("i8042_exit", 0),
STACK_USAGE("i8042_lock_chip", 0),
STACK_USAGE("i8042_unlock_chip", 0),
STACK_USAGE("i8042_install_filter", 16),
STACK_USAGE("i8042_remove_filter", 16),
STACK_USAGE("i8042_flush", 40),
STACK_USAGE("__i8042_command", 48),
STACK_USAGE("i8042_command", 24),
STACK_USAGE("i8042_kbd_write", 24),
STACK_USAGE("i8042_aux_write", 32),
STACK_USAGE("i8042_port_close", 40),
STACK_USAGE("i8042_start", 24),
STACK_USAGE("i8042_stop", 8),
STACK_USAGE("i8042_interrupt", 56),
STACK_USAGE("i8042_set_reset", 24),
STACK_USAGE("i8042_enable_aux_port", 16),
STACK_USAGE("i8042_enable_mux_ports", 48),
STACK_USAGE("i8042_set_mux_mode", 64),
STACK_USAGE("i8042_aux_test_irq", 32),
STACK_USAGE("i8042_toggle_aux", 64),
STACK_USAGE("i8042_controller_selftest", 64),
STACK_USAGE("ps2_begin_command", 0),
STACK_USAGE("ps2_end_command", 0),
STACK_USAGE("ps2_drain", 96),
STACK_USAGE("ps2_is_keyboard_id", 0),
STACK_USAGE("ps2_adjust_timeout", 16),
STACK_USAGE("__ps2_command", 112),
STACK_USAGE("ps2_do_sendbyte", 112),
STACK_USAGE("ps2_command", 32),
STACK_USAGE("ps2_sliced_command", 48),
STACK_USAGE("ps2_init", 16),
STACK_USAGE("ps2_handle_ack", 32),
STACK_USAGE("ps2_handle_response", 8),
STACK_USAGE("ps2_cmd_aborted", 8),
STACK_USAGE("ps2_sendbyte", 32),
STACK_USAGE("serio_init", 8),
STACK_USAGE("serio_exit", 0),
STACK_USAGE("serio_handle_event", 56),
STACK_USAGE("serio_queue_event", 40),
STACK_USAGE("serio_show_description", 0),
STACK_USAGE("modalias_show", 0),
STACK_USAGE("type_show", 0),
STACK_USAGE("proto_show", 0),
STACK_USAGE("id_show", 0),
STACK_USAGE("extra_show", 0),
STACK_USAGE("drvctl_store", 64),
STACK_USAGE("serio_show_bind_mode", 0),
STACK_USAGE("serio_set_bind_mode", 24),
STACK_USAGE("firmware_id_show", 0),
STACK_USAGE("serio_release_port", 0),
STACK_USAGE("serio_destroy_port", 48),
STACK_USAGE("serio_reconnect_port", 40),
STACK_USAGE("serio_disconnect_driver", 16),
STACK_USAGE("serio_rescan", 0),
STACK_USAGE("serio_reconnect", 0),
STACK_USAGE("__serio_register_port", 32),
STACK_USAGE("serio_unregister_port", 32),
STACK_USAGE("serio_unregister_child_port", 56),
STACK_USAGE("description_show", 0),
STACK_USAGE("bind_mode_show", 0),
STACK_USAGE("bind_mode_store", 24),
STACK_USAGE("serio_driver_probe", 32),
STACK_USAGE("serio_driver_remove", 16),
STACK_USAGE("serio_shutdown", 16),
STACK_USAGE("__serio_register_driver", 32),
STACK_USAGE("serio_unregister_driver", 48),
STACK_USAGE("serio_bus_match", 0),
STACK_USAGE("serio_uevent", 16),
STACK_USAGE("serio_suspend", 16),
STACK_USAGE("serio_resume", 32),
STACK_USAGE("serio_open", 24),
STACK_USAGE("serio_close", 16),
STACK_USAGE("serio_interrupt", 48),
STACK_USAGE("serport_ldisc_close", 0),
STACK_USAGE("serport_ldisc_receive", 64),
STACK_USAGE("serport_ldisc_read", 80),
STACK_USAGE("serport_ldisc_ioctl", 16),
STACK_USAGE("serport_ldisc_compat_ioctl", 16),
STACK_USAGE("serport_ldisc_hangup", 16),
STACK_USAGE("serport_ldisc_write_wakeup", 24),
STACK_USAGE("serport_init", 8),
STACK_USAGE("serport_exit", 0),
STACK_USAGE("serport_serio_write", 16),
STACK_USAGE("serport_serio_open", 16),
STACK_USAGE("serport_serio_close", 16),
STACK_USAGE("serport_ldisc_open", 16),
STACK_USAGE("sparse_keymap_getkeycode", 40),
STACK_USAGE("sparse_keymap_setkeycode", 48),
STACK_USAGE("sparse_keymap_setup", 56),
STACK_USAGE("sparse_keymap_report_entry", 32),
STACK_USAGE("sparse_keymap_report_event", 24),
STACK_USAGE("sparse_keymap_entry_from_scancode", 0),
STACK_USAGE("sparse_keymap_entry_from_keycode", 0),
STACK_USAGE("touchscreen_set_mt_pos", 0),
STACK_USAGE("touchscreen_report_pos", 24),
STACK_USAGE("touchscreen_parse_properties", 120),
STACK_USAGE("vivaldi_function_row_physmap_show", 48),
STACK_USAGE("amd_iommu_apply_erratum_63", 0),
STACK_USAGE("set_dev_entry_from_acpi", 0),
STACK_USAGE("add_special_device", 40),
STACK_USAGE("add_acpi_hid_device", 56),
STACK_USAGE("add_early_maps", 16),
STACK_USAGE("init_iommu_from_acpi", 376),
STACK_USAGE("free_iommu_one", 8),
STACK_USAGE("free_iommu_all", 40),
STACK_USAGE("init_iommu_one", 24),
STACK_USAGE("init_iommu_all", 16),
STACK_USAGE("amd_iommu_show_cap", 0),
STACK_USAGE("amd_iommu_show_features", 0),
STACK_USAGE("late_iommu_features_init", 0),
STACK_USAGE("iommu_init_pci", 64),
STACK_USAGE("amd_iommu_init_pci", 64),
STACK_USAGE("intcapxt_irqdomain_activate", 0),
STACK_USAGE("intcapxt_irqdomain_deactivate", 0),
STACK_USAGE("intcapxt_irqdomain_alloc", 40),
STACK_USAGE("intcapxt_irqdomain_free", 0),
STACK_USAGE("intcapxt_unmask_irq", 8),
STACK_USAGE("intcapxt_mask_irq", 0),
STACK_USAGE("intcapxt_set_affinity", 0),
STACK_USAGE("intcapxt_set_wake", 0),
STACK_USAGE("free_unity_maps", 32),
STACK_USAGE("init_unity_map_range", 24),
STACK_USAGE("init_memory_definitions", 16),
STACK_USAGE("early_enable_iommus", 88),
STACK_USAGE("enable_iommus_v2", 56),
STACK_USAGE("disable_iommus", 0),
STACK_USAGE("amd_iommu_resume", 72),
STACK_USAGE("amd_iommu_suspend", 0),
STACK_USAGE("free_iommu_resources", 48),
STACK_USAGE("check_ioapic_information", 48),
STACK_USAGE("translation_pre_enabled", 0),
STACK_USAGE("free_dma_resources", 0),
STACK_USAGE("early_amd_iommu_init", 80),
STACK_USAGE("amd_iommu_enable_interrupts", 128),
STACK_USAGE("detect_ivrs", 24),
STACK_USAGE("state_next", 16),
STACK_USAGE("iommu_go_to_state", 8),
STACK_USAGE("amd_iommu_get_num_iommus", 0),
STACK_USAGE("amd_iommu_init", 8),
STACK_USAGE("amd_iommu_detect", 0),
STACK_USAGE("parse_amd_iommu_dump", 0),
STACK_USAGE("parse_amd_iommu_intr", 8),
STACK_USAGE("parse_amd_iommu_options", 8),
STACK_USAGE("parse_ivrs_ioapic", 32),
STACK_USAGE("parse_ivrs_hpet", 32),
STACK_USAGE("parse_ivrs_acpihid", 360),
STACK_USAGE("amd_iommu_v2_supported", 0),
STACK_USAGE("get_amd_iommu", 0),
STACK_USAGE("amd_iommu_pc_get_max_banks", 0),
STACK_USAGE("amd_iommu_pc_supported", 0),
STACK_USAGE("amd_iommu_pc_get_max_counters", 0),
STACK_USAGE("amd_iommu_pc_get_reg", 0),
STACK_USAGE("amd_iommu_pc_set_reg", 0),
STACK_USAGE("iommu_disable", 0),
STACK_USAGE("iommu_map_mmio_space", 16),
STACK_USAGE("iommu_unmap_mmio_space", 8),
STACK_USAGE("find_last_devid_from_ivhd", 0),
STACK_USAGE("check_ivrs_checksum", 0),
STACK_USAGE("find_last_devid_acpi", 16),
STACK_USAGE("amd_iommu_restart_event_logging", 0),
STACK_USAGE("iommu_enable_command_buffer", 24),
STACK_USAGE("iommu_alloc_4k_pages", 32),
STACK_USAGE("amd_iommu_domain_set_pgtable", 0),
STACK_USAGE("v1_tlb_flush_all", 0),
STACK_USAGE("fetch_pte", 8),
STACK_USAGE("v1_tlb_flush_walk", 0),
STACK_USAGE("v1_tlb_add_page", 0),
STACK_USAGE("iommu_v1_map_page", 176),
STACK_USAGE("iommu_v1_unmap_page", 72),
STACK_USAGE("iommu_v1_iova_to_phys", 24),
STACK_USAGE("v1_free_pgtable", 32),
STACK_USAGE("v1_alloc_pgtable", 0),
STACK_USAGE("free_pt_lvl", 48),
STACK_USAGE("iommu_queue_command", 48),
STACK_USAGE("iommu_completion_wait", 64),
STACK_USAGE("iommu_flush_all_caches", 56),
STACK_USAGE("device_flush_dte_alias", 24),
STACK_USAGE("device_flush_dte", 40),
STACK_USAGE("__domain_flush_pages", 120),
STACK_USAGE("amd_iommu_domain_flush_tlb_pde", 48),
STACK_USAGE("amd_iommu_domain_flush_complete", 24),
STACK_USAGE("set_dte_entry", 40),
STACK_USAGE("do_detach", 64),
STACK_USAGE("detach_device", 40),
STACK_USAGE("amd_iommu_probe_device", 48),
STACK_USAGE("clone_alias", 0),
STACK_USAGE("amd_iommu_probe_finalize", 0),
STACK_USAGE("amd_iommu_release_device", 48),
STACK_USAGE("amd_iommu_device_group", 40),
STACK_USAGE("amd_iommu_update_and_flush_device_table", 16),
STACK_USAGE("amd_iommu_domain_update", 56),
STACK_USAGE("amd_iommu_init_api", 0),
STACK_USAGE("amd_iommu_domain_alloc", 32),
STACK_USAGE("amd_iommu_domain_free", 48),
STACK_USAGE("amd_iommu_detach_device", 56),
STACK_USAGE("amd_iommu_attach_device", 88),
STACK_USAGE("setup_aliases", 16),
STACK_USAGE("amd_iommu_iotlb_sync_map", 72),
STACK_USAGE("amd_iommu_map", 0),
STACK_USAGE("amd_iommu_unmap", 48),
STACK_USAGE("amd_iommu_iova_to_phys", 0),
STACK_USAGE("amd_iommu_capable", 0),
STACK_USAGE("amd_iommu_get_resv_regions", 48),
STACK_USAGE("amd_iommu_is_attach_deferred", 0),
STACK_USAGE("amd_iommu_flush_iotlb_all", 72),
STACK_USAGE("amd_iommu_iotlb_sync", 72),
STACK_USAGE("amd_iommu_def_domain_type", 0),
STACK_USAGE("amd_iommu_register_ppr_notifier", 0),
STACK_USAGE("amd_iommu_unregister_ppr_notifier", 0),
STACK_USAGE("amd_iommu_domain_direct_map", 24),
STACK_USAGE("amd_iommu_domain_enable_v2", 40),
STACK_USAGE("__flush_pasid", 96),
STACK_USAGE("amd_iommu_flush_page", 40),
STACK_USAGE("amd_iommu_flush_tlb", 32),
STACK_USAGE("amd_iommu_domain_set_gcr3", 64),
STACK_USAGE("amd_iommu_domain_clear_gcr3", 40),
STACK_USAGE("amd_iommu_complete_ppr", 24),
STACK_USAGE("amd_iommu_device_info", 32),
STACK_USAGE("amd_iommu_int_thread", 120),
STACK_USAGE("amd_iommu_int_handler", 0),
STACK_USAGE("amd_iommu_apply_ivrs_quirks", 0),
STACK_USAGE("ivrs_ioapic_quirk_cb", 8),
STACK_USAGE("iommu_dma_unmap_page", 48),
STACK_USAGE("iommu_dma_unmap_sg_swiotlb", 64),
STACK_USAGE("iommu_dma_map_sg", 96),
STACK_USAGE("iommu_dma_unmap_sg", 32),
STACK_USAGE("iommu_dma_map_resource", 0),
STACK_USAGE("iommu_dma_unmap_resource", 0),
STACK_USAGE("__iommu_dma_free", 40),
STACK_USAGE("iommu_dma_free", 24),
STACK_USAGE("iommu_dma_alloc", 96),
STACK_USAGE("iommu_dma_mmap", 32),
STACK_USAGE("iommu_dma_get_sgtable", 24),
STACK_USAGE("iommu_dma_get_merge_boundary", 8),
STACK_USAGE("iommu_setup_dma_ops", 144),
STACK_USAGE("fq_flush_timeout", 72),
STACK_USAGE("iommu_dma_prepare_msi", 72),
STACK_USAGE("iommu_dma_compose_msi_msg", 16),
STACK_USAGE("iommu_dma_init", 0),
STACK_USAGE("iommu_dma_init_fq", 40),
STACK_USAGE("iommu_get_dma_cookie", 8),
STACK_USAGE("iommu_get_msi_cookie", 16),
STACK_USAGE("iommu_put_dma_cookie", 56),
STACK_USAGE("iommu_dma_get_resv_regions", 0),
STACK_USAGE("iommu_dma_alloc_iova", 40),
STACK_USAGE("iommu_dma_free_iova", 104),
STACK_USAGE("__iommu_dma_unmap", 104),
STACK_USAGE("__iommu_dma_map", 80),
STACK_USAGE("iommu_dma_forcedac_setup", 8),
STACK_USAGE("__iommu_dma_alloc_noncontiguous", 144),
STACK_USAGE("iommu_dma_alloc_noncontiguous", 40),
STACK_USAGE("iommu_dma_free_noncontiguous", 24),
STACK_USAGE("iommu_dma_sync_single_for_cpu", 32),
STACK_USAGE("iommu_dma_sync_single_for_device", 32),
STACK_USAGE("iommu_dma_sync_sg_for_cpu", 56),
STACK_USAGE("iommu_dma_sync_sg_for_device", 56),
STACK_USAGE("iommu_dma_map_page", 64),
STACK_USAGE("intel_cap_audit", 72),
STACK_USAGE("intel_cap_smts_sanity", 0),
STACK_USAGE("intel_cap_pasid_sanity", 0),
STACK_USAGE("intel_cap_nest_sanity", 0),
STACK_USAGE("intel_cap_flts_sanity", 0),
STACK_USAGE("intel_cap_slts_sanity", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("dmar_free_dev_scope", 40),
STACK_USAGE("dmar_alloc_pci_notify_info", 32),
STACK_USAGE("qi_submit_sync", 192),
STACK_USAGE("qi_global_iec", 40),
STACK_USAGE("qi_flush_context", 40),
STACK_USAGE("qi_flush_iotlb", 40),
STACK_USAGE("qi_flush_dev_iotlb", 40),
STACK_USAGE("qi_flush_piotlb", 56),
STACK_USAGE("qi_flush_dev_iotlb_pasid", 72),
STACK_USAGE("qi_flush_pasid_cache", 40),
STACK_USAGE("dmar_disable_qi", 32),
STACK_USAGE("__dmar_enable_qi", 24),
STACK_USAGE("dmar_enable_qi", 24),
STACK_USAGE("dmar_msi_unmask", 24),
STACK_USAGE("dmar_msi_mask", 24),
STACK_USAGE("dmar_msi_write", 32),
STACK_USAGE("dmar_msi_read", 32),
STACK_USAGE("dmar_fault", 96),
STACK_USAGE("dmar_set_interrupt", 16),
STACK_USAGE("enable_drhd_fault_handling", 32),
STACK_USAGE("dmar_reenable_qi", 8),
STACK_USAGE("dmar_ir_support", 0),
STACK_USAGE("dmar_free_unused_resources", 32),
STACK_USAGE("dmar_insert_dev_scope", 64),
STACK_USAGE("dmar_walk_dsm_resource", 168),
STACK_USAGE("dmar_hp_add_drhd", 0),
STACK_USAGE("dmar_hp_remove_drhd", 32),
STACK_USAGE("dmar_hp_release_drhd", 8),
STACK_USAGE("dmar_get_dsm_handle", 24),
STACK_USAGE("dmar_device_hotplug", 160),
STACK_USAGE("dmar_device_add", 0),
STACK_USAGE("dmar_device_remove", 0),
STACK_USAGE("dmar_platform_optin", 24),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("dmar_remove_dev_scope", 48),
STACK_USAGE("dmar_pci_bus_add_dev", 24),
STACK_USAGE("dmar_pci_bus_notifier", 24),
STACK_USAGE("dmar_parse_one_drhd", 56),
STACK_USAGE("dmar_free_drhd", 24),
STACK_USAGE("dmar_parse_one_andd", 24),
STACK_USAGE("dmar_parse_one_rhsa", 24),
STACK_USAGE("dmar_table_detect", 0),
STACK_USAGE("dmar_walk_remapping_entries", 40),
STACK_USAGE("parse_dmar_table", 136),
STACK_USAGE("dmar_find_matched_drhd_unit", 72),
STACK_USAGE("dmar_acpi_insert_dev_scope", 48),
STACK_USAGE("dmar_acpi_dev_scope_init", 40),
STACK_USAGE("dmar_dev_scope_init", 24),
STACK_USAGE("dmar_alloc_dev_scope", 40),
STACK_USAGE("dmar_register_bus_notifier", 0),
STACK_USAGE("dmar_table_init", 8),
STACK_USAGE("dmar_validate_one_drhd", 32),
STACK_USAGE("detect_intel_iommu", 120),
STACK_USAGE("unmap_iommu", 8),
STACK_USAGE("map_iommu", 40),
STACK_USAGE("pfn_to_dma_pte", 64),
STACK_USAGE("dma_pte_clear_range", 48),
STACK_USAGE("dma_pte_free_level", 96),
STACK_USAGE("dma_pte_list_pagetables", 32),
STACK_USAGE("dma_pte_clear_level", 112),
STACK_USAGE("domain_unmap", 32),
STACK_USAGE("iommu_alloc_root_entry", 24),
STACK_USAGE("iommu_set_root_entry", 24),
STACK_USAGE("iommu_flush_write_buffer", 16),
STACK_USAGE("__iommu_flush_context", 24),
STACK_USAGE("__iommu_flush_iotlb", 48),
STACK_USAGE("iommu_enable_dev_iotlb", 16),
STACK_USAGE("iommu_flush_iotlb_psi", 72),
STACK_USAGE("intel_flush_iotlb_all", 48),
STACK_USAGE("iommu_disable_protect_mem_regions", 16),
STACK_USAGE("arch_rmrr_sanity_check", 16),
STACK_USAGE("iommu_disable_translation", 16),
STACK_USAGE("free_dmar_iommu", 32),
STACK_USAGE("alloc_domain", 24),
STACK_USAGE("domain_exit", 56),
STACK_USAGE("context_present", 0),
STACK_USAGE("domain_context_mapping_one", 104),
STACK_USAGE("domain_context_mapping_cb", 0),
STACK_USAGE("domain_context_mapped_cb", 32),
STACK_USAGE("__domain_mapping", 136),
STACK_USAGE("si_domain_init", 96),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("device_def_domain_type", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("init_dmars", 144),
STACK_USAGE("init_no_remapping_devices", 48),
STACK_USAGE("for_each_device_domain", 48),
STACK_USAGE("iommu_suspend", 40),
STACK_USAGE("iommu_resume", 40),
STACK_USAGE("rmrr_sanity_check", 0),
STACK_USAGE("dmar_parse_one_rmrr", 40),
STACK_USAGE("dmar_parse_one_atsr", 40),
STACK_USAGE("dmar_release_one_atsr", 32),
STACK_USAGE("dmar_check_one_atsr", 40),
STACK_USAGE("dmar_parse_one_satc", 40),
STACK_USAGE("dmar_iommu_hotplug", 48),
STACK_USAGE("intel_iommu_setup", 16),
STACK_USAGE("dmar_iommu_notify_scope_dev", 32),
STACK_USAGE("intel_iommu_shutdown", 16),
STACK_USAGE("version_show", 0),
STACK_USAGE("address_show", 0),
STACK_USAGE("cap_show", 0),
STACK_USAGE("ecap_show", 0),
STACK_USAGE("domains_supported_show", 0),
STACK_USAGE("domains_used_show", 8),
STACK_USAGE("platform_optin_force_iommu", 8),
STACK_USAGE("probe_acpi_namespace_devices", 48),
STACK_USAGE("intel_iommu_init", 48),
STACK_USAGE("alloc_pgtable_page", 8),
STACK_USAGE("domain_context_clear_one_cb", 48),
STACK_USAGE("__dmar_remove_one_dev_info", 32),
STACK_USAGE("free_pgtable_page", 0),
STACK_USAGE("dmar_remove_one_dev_info", 16),
STACK_USAGE("md_domain_init", 16),
STACK_USAGE("intel_iommu_domain_alloc", 8),
STACK_USAGE("intel_iommu_domain_free", 0),
STACK_USAGE("intel_iommu_attach_device", 104),
STACK_USAGE("intel_iommu_detach_device", 16),
STACK_USAGE("intel_iommu_map_pages", 24),
STACK_USAGE("intel_iommu_unmap_pages", 88),
STACK_USAGE("intel_iommu_tlb_sync", 56),
STACK_USAGE("intel_iommu_iova_to_phys", 24),
STACK_USAGE("intel_iommu_capable", 0),
STACK_USAGE("intel_iommu_probe_device", 96),
STACK_USAGE("intel_iommu_release_device", 24),
STACK_USAGE("intel_iommu_probe_finalize", 0),
STACK_USAGE("intel_iommu_get_resv_regions", 48),
STACK_USAGE("iommu_calculate_max_sagaw", 8),
STACK_USAGE("intel_iommu_enable_pasid", 48),
STACK_USAGE("intel_iommu_device_group", 0),
STACK_USAGE("iommu_calculate_agaw", 8),
STACK_USAGE("intel_iommu_dev_enable_feat", 8),
STACK_USAGE("intel_iommu_dev_disable_feat", 0),
STACK_USAGE("domain_get_iommu", 0),
STACK_USAGE("intel_iommu_is_attach_deferred", 0),
STACK_USAGE("risky_device", 16),
STACK_USAGE("intel_iommu_iotlb_sync_map", 40),
STACK_USAGE("quirk_iommu_igfx", 8),
STACK_USAGE("quirk_iommu_rwbf", 8),
STACK_USAGE("quirk_calpella_no_shadow_gtt", 32),
STACK_USAGE("quirk_igfx_skip_te_disable", 8),
STACK_USAGE("check_tylersburg_isoch", 32),
STACK_USAGE("domain_update_iommu_snooping", 24),
STACK_USAGE("domain_update_iommu_superpage", 32),
STACK_USAGE("domain_update_iommu_cap", 16),
STACK_USAGE("iommu_context_addr", 40),
STACK_USAGE("device_to_iommu", 104),
STACK_USAGE("search_pasid_table", 0),
STACK_USAGE("get_alias_pasid_table", 0),
STACK_USAGE("intel_pasid_alloc_table", 80),
STACK_USAGE("intel_pasid_free_table", 40),
STACK_USAGE("intel_pasid_get_table", 0),
STACK_USAGE("intel_pasid_get_entry", 48),
STACK_USAGE("vcmd_alloc_pasid", 32),
STACK_USAGE("intel_pasid_tear_down_entry", 96),
STACK_USAGE("intel_pasid_setup_first_level", 96),
STACK_USAGE("vcmd_free_pasid", 24),
STACK_USAGE("intel_pasid_setup_second_level", 104),
STACK_USAGE("intel_pasid_setup_pass_through", 64),
STACK_USAGE("__bpf_trace_qi_submit", 0),
STACK_USAGE("__traceiter_qi_submit", 48),
STACK_USAGE("perf_trace_qi_submit", 120),
STACK_USAGE("trace_event_raw_event_qi_submit", 112),
STACK_USAGE("trace_raw_output_qi_submit", 24),
STACK_USAGE("__bpf_trace_prq_report", 0),
STACK_USAGE("__traceiter_prq_report", 48),
STACK_USAGE("perf_trace_prq_report", 136),
STACK_USAGE("trace_event_raw_event_prq_report", 136),
STACK_USAGE("trace_raw_output_prq_report", 96),
STACK_USAGE("alloc_io_pgtable_ops", 16),
STACK_USAGE("free_io_pgtable_ops", 8),
STACK_USAGE("ioasid_register_allocator", 16),
STACK_USAGE("ioasid_unregister_allocator", 16),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("ioasid_set_data", 16),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("ioasid_alloc", 64),
STACK_USAGE("ioasid_free", 16),
STACK_USAGE("ioasid_find", 32),
STACK_USAGE("default_alloc", 48),
STACK_USAGE("default_free", 0),
STACK_USAGE("iommu_device_link", 24),
STACK_USAGE("iommu_device_unlink", 16),
STACK_USAGE("release_device", 0),
STACK_USAGE("iommu_dev_init", 0),
STACK_USAGE("iommu_device_sysfs_add", 120),
STACK_USAGE("iommu_device_sysfs_remove", 8),
STACK_USAGE("__bpf_trace_unmap", 0),
STACK_USAGE("__traceiter_unmap", 32),
STACK_USAGE("perf_trace_unmap", 72),
STACK_USAGE("trace_event_raw_event_unmap", 88),
STACK_USAGE("trace_raw_output_unmap", 24),
STACK_USAGE("__bpf_trace_iommu_error", 0),
STACK_USAGE("perf_trace_iommu_error", 104),
STACK_USAGE("trace_event_raw_event_iommu_error", 120),
STACK_USAGE("trace_raw_output_iommu_error", 24),
STACK_USAGE("__traceiter_io_page_fault", 32),
STACK_USAGE("__bpf_trace_iommu_group_event", 0),
STACK_USAGE("perf_trace_iommu_group_event", 80),
STACK_USAGE("trace_event_raw_event_iommu_group_event", 88),
STACK_USAGE("trace_raw_output_iommu_group_event", 24),
STACK_USAGE("__traceiter_add_device_to_group", 24),
STACK_USAGE("__traceiter_remove_device_from_group", 24),
STACK_USAGE("__bpf_trace_iommu_device_event", 0),
STACK_USAGE("perf_trace_iommu_device_event", 80),
STACK_USAGE("trace_event_raw_event_iommu_device_event", 80),
STACK_USAGE("trace_raw_output_iommu_device_event", 24),
STACK_USAGE("__traceiter_attach_device_to_domain", 16),
STACK_USAGE("__traceiter_detach_device_from_domain", 16),
STACK_USAGE("__bpf_trace_map", 0),
STACK_USAGE("__traceiter_map", 32),
STACK_USAGE("perf_trace_map", 72),
STACK_USAGE("trace_event_raw_event_map", 88),
STACK_USAGE("trace_raw_output_map", 24),
STACK_USAGE("iommu_group_for_each_dev", 48),
STACK_USAGE("iommu_group_get", 8),
STACK_USAGE("iommu_group_ref_get", 8),
STACK_USAGE("iommu_group_put", 0),
STACK_USAGE("iommu_group_register_notifier", 0),
STACK_USAGE("iommu_group_unregister_notifier", 0),
STACK_USAGE("iommu_register_device_fault_handler", 40),
STACK_USAGE("iommu_unregister_device_fault_handler", 24),
STACK_USAGE("iommu_report_device_fault", 40),
STACK_USAGE("iommu_page_response", 48),
STACK_USAGE("iommu_subsys_init", 16),
STACK_USAGE("iommu_group_id", 0),
STACK_USAGE("get_pci_function_alias_group", 40),
STACK_USAGE("get_pci_alias_group", 40),
STACK_USAGE("get_pci_alias_or_group", 16),
STACK_USAGE("generic_device_group", 0),
STACK_USAGE("pci_device_group", 104),
STACK_USAGE("fsl_mc_device_group", 8),
STACK_USAGE("iommu_group_alloc_default_domain", 40),
STACK_USAGE("iommu_group_default_domain", 0),
STACK_USAGE("probe_iommu_group", 8),
STACK_USAGE("remove_iommu_group", 0),
STACK_USAGE("iommu_bus_notifier", 32),
STACK_USAGE("iommu_device_register", 24),
STACK_USAGE("bus_iommu_probe", 112),
STACK_USAGE("iommu_device_unregister", 8),
STACK_USAGE("bus_set_iommu", 24),
STACK_USAGE("iommu_present", 0),
STACK_USAGE("iommu_capable", 0),
STACK_USAGE("iommu_set_fault_handler", 0),
STACK_USAGE("iommu_domain_alloc", 8),
STACK_USAGE("iommu_domain_free", 8),
STACK_USAGE("__iommu_attach_device", 16),
STACK_USAGE("iommu_attach_device", 48),
STACK_USAGE("iommu_deferred_attach", 16),
STACK_USAGE("iommu_detach_device", 24),
STACK_USAGE("iommu_get_domain_for_dev", 8),
STACK_USAGE("iommu_get_dma_domain", 0),
STACK_USAGE("iommu_attach_group", 48),
STACK_USAGE("__iommu_detach_group", 40),
STACK_USAGE("iommu_detach_group", 24),
STACK_USAGE("iommu_iova_to_phys", 0),
STACK_USAGE("__iommu_probe_device", 48),
STACK_USAGE("__iommu_map", 192),
STACK_USAGE("iommu_map", 48),
STACK_USAGE("iommu_map_atomic", 40),
STACK_USAGE("__iommu_unmap", 88),
STACK_USAGE("iommu_unmap", 72),
STACK_USAGE("iommu_unmap_fast", 0),
STACK_USAGE("__iommu_map_sg", 144),
STACK_USAGE("iommu_map_sg", 40),
STACK_USAGE("iommu_map_sg_atomic", 0),
STACK_USAGE("report_iommu_fault", 32),
STACK_USAGE("iommu_init", 0),
STACK_USAGE("iommu_enable_nesting", 0),
STACK_USAGE("iommu_set_pgtable_quirks", 0),
STACK_USAGE("iommu_get_resv_regions", 0),
STACK_USAGE("iommu_put_resv_regions", 0),
STACK_USAGE("generic_iommu_put_resv_regions", 16),
STACK_USAGE("iommu_alloc_resv_region", 32),
STACK_USAGE("iommu_set_default_passthrough", 0),
STACK_USAGE("iommu_set_default_translated", 0),
STACK_USAGE("iommu_default_passthrough", 0),
STACK_USAGE("iommu_ops_from_fwnode", 16),
STACK_USAGE("iommu_fwspec_init", 32),
STACK_USAGE("iommu_fwspec_free", 16),
STACK_USAGE("iommu_fwspec_add_ids", 32),
STACK_USAGE("iommu_probe_device", 40),
STACK_USAGE("iommu_dev_enable_feature", 0),
STACK_USAGE("iommu_dev_disable_feature", 0),
STACK_USAGE("iommu_dev_feature_enabled", 0),
STACK_USAGE("iommu_sva_bind_device", 56),
STACK_USAGE("iommu_sva_unbind_device", 32),
STACK_USAGE("iommu_sva_get_pasid", 0),
STACK_USAGE("iommu_group_store_type", 88),
STACK_USAGE("iommu_release_device", 16),
STACK_USAGE("iommu_set_def_domain_type", 16),
STACK_USAGE("iommu_dma_setup", 0),
STACK_USAGE("iommu_set_dma_strict", 0),
STACK_USAGE("iommu_group_attr_show", 0),
STACK_USAGE("iommu_group_attr_store", 0),
STACK_USAGE("trace_add_device_to_group", 0),
STACK_USAGE("iommu_group_show_name", 0),
STACK_USAGE("iommu_get_group_resv_regions", 120),
STACK_USAGE("iommu_group_show_resv_regions", 64),
STACK_USAGE("iommu_group_show_type", 24),
STACK_USAGE("iommu_group_release", 16),
STACK_USAGE("iommu_group_alloc", 24),
STACK_USAGE("iommu_group_get_by_id", 24),
STACK_USAGE("iommu_group_get_iommudata", 0),
STACK_USAGE("iommu_group_set_iommudata", 0),
STACK_USAGE("iommu_group_set_name", 32),
STACK_USAGE("iommu_create_device_direct_mappings", 128),
STACK_USAGE("iommu_group_add_device", 48),
STACK_USAGE("iommu_group_remove_device", 32),
STACK_USAGE("iova_cache_get", 16),
STACK_USAGE("iova_cache_put", 0),
STACK_USAGE("iova_cpuhp_dead", 0),
STACK_USAGE("alloc_iova", 120),
STACK_USAGE("remove_iova", 16),
STACK_USAGE("find_iova", 24),
STACK_USAGE("__free_iova", 24),
STACK_USAGE("free_iova", 32),
STACK_USAGE("alloc_iova_fast", 88),
STACK_USAGE("init_iova_domain", 32),
STACK_USAGE("free_iova_fast", 80),
STACK_USAGE("put_iova_domain", 16),
STACK_USAGE("reserve_iova", 64),
STACK_USAGE("iova_magazine_free_pfns", 40),
STACK_USAGE("iova_domain_init_rcaches", 56),
STACK_USAGE("free_iova_rcaches", 64),
STACK_USAGE("free_cpu_cached_iovas", 48),
STACK_USAGE("led_classdev_suspend", 8),
STACK_USAGE("led_classdev_resume", 8),
STACK_USAGE("led_suspend", 8),
STACK_USAGE("led_resume", 8),
STACK_USAGE("of_led_get", 0),
STACK_USAGE("led_put", 0),
STACK_USAGE("devm_of_led_get", 0),
STACK_USAGE("brightness_show", 16),
STACK_USAGE("led_classdev_register_ext", 216),
STACK_USAGE("brightness_store", 56),
STACK_USAGE("led_classdev_unregister", 16),
STACK_USAGE("devm_led_classdev_release", 0),
STACK_USAGE("devm_led_classdev_register_ext", 40),
STACK_USAGE("devm_led_classdev_match", 0),
STACK_USAGE("devm_led_classdev_unregister", 0),
STACK_USAGE("leds_init", 8),
STACK_USAGE("leds_exit", 0),
STACK_USAGE("max_brightness_show", 0),
STACK_USAGE("set_brightness_delayed", 8),
STACK_USAGE("led_blink_setup", 24),
STACK_USAGE("led_init_core", 8),
STACK_USAGE("led_blink_set", 24),
STACK_USAGE("led_blink_set_oneshot", 0),
STACK_USAGE("led_stop_software_blink", 8),
STACK_USAGE("led_set_brightness", 0),
STACK_USAGE("led_set_brightness_nopm", 0),
STACK_USAGE("led_set_brightness_nosleep", 0),
STACK_USAGE("led_set_brightness_sync", 0),
STACK_USAGE("led_update_brightness", 16),
STACK_USAGE("led_get_default_pattern", 40),
STACK_USAGE("led_sysfs_disable", 8),
STACK_USAGE("led_sysfs_enable", 8),
STACK_USAGE("led_compose_name", 168),
STACK_USAGE("led_init_default_state_get", 24),
STACK_USAGE("led_timer_function", 24),
STACK_USAGE("led_trigger_read", 64),
STACK_USAGE("led_trigger_set", 72),
STACK_USAGE("led_trigger_remove", 16),
STACK_USAGE("led_trigger_set_default", 40),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("led_trigger_rename_static", 16),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("led_trigger_register", 32),
STACK_USAGE("led_trigger_unregister", 32),
STACK_USAGE("devm_led_trigger_release", 0),
STACK_USAGE("devm_led_trigger_register", 32),
STACK_USAGE("led_trigger_write", 48),
STACK_USAGE("led_trigger_event", 24),
STACK_USAGE("led_trigger_blink_setup", 48),
STACK_USAGE("led_trigger_blink", 0),
STACK_USAGE("led_trigger_blink_oneshot", 0),
STACK_USAGE("led_trigger_register_simple", 32),
STACK_USAGE("led_trigger_unregister_simple", 8),
STACK_USAGE("led_trigger_snprintf", 88),
STACK_USAGE("led_trigger_format", 48),
STACK_USAGE("txdone_hrtimer", 56),
STACK_USAGE("mbox_chan_received_data", 0),
STACK_USAGE("mbox_chan_txdone", 32),
STACK_USAGE("mbox_client_txdone", 32),
STACK_USAGE("mbox_client_peek_data", 0),
STACK_USAGE("mbox_send_message", 32),
STACK_USAGE("mbox_flush", 32),
STACK_USAGE("mbox_request_channel", 0),
STACK_USAGE("mbox_request_channel_byname", 0),
STACK_USAGE("mbox_free_channel", 24),
STACK_USAGE("of_mbox_index_xlate", 0),
STACK_USAGE("mbox_controller_register", 40),
STACK_USAGE("mbox_controller_unregister", 56),
STACK_USAGE("msg_submit", 32),
STACK_USAGE("__devm_mbox_controller_unregister", 0),
STACK_USAGE("devm_mbox_controller_match", 0),
STACK_USAGE("devm_mbox_controller_register", 32),
STACK_USAGE("devm_mbox_controller_unregister", 0),
STACK_USAGE("pcc_chan_reg_read_modify_write", 24),
STACK_USAGE("pcc_mbox_irq", 40),
STACK_USAGE("pcc_mbox_request_channel", 64),
STACK_USAGE("pcc_mbox_free_channel", 16),
STACK_USAGE("pcc_send_data", 8),
STACK_USAGE("parse_pcc_subspace", 0),
STACK_USAGE("acpi_pcc_probe", 280),
STACK_USAGE("pcc_mbox_probe", 128),
STACK_USAGE("pcc_init", 8),
STACK_USAGE("dm_kobject_release", 0),
STACK_USAGE("dm_ima_alloc_and_copy_device_data", 72),
STACK_USAGE("dm_ima_reset_data", 0),
STACK_USAGE("dm_ima_measure_on_table_load", 560),
STACK_USAGE("dm_ima_measure_on_device_resume", 88),
STACK_USAGE("dm_ima_measure_on_device_remove", 88),
STACK_USAGE("dm_ima_measure_on_table_clear", 104),
STACK_USAGE("dm_ima_alloc_and_copy_name_uuid", 48),
STACK_USAGE("dm_ima_measure_on_device_rename", 88),
STACK_USAGE("endio", 40),
STACK_USAGE("list_get_page", 0),
STACK_USAGE("list_next_page", 0),
STACK_USAGE("bio_get_page", 16),
STACK_USAGE("bio_next_page", 40),
STACK_USAGE("vm_get_page", 32),
STACK_USAGE("vm_next_page", 0),
STACK_USAGE("km_get_page", 0),
STACK_USAGE("km_next_page", 0),
STACK_USAGE("dispatch_io", 208),
STACK_USAGE("sync_io_complete", 0),
STACK_USAGE("dm_io_client_create", 24),
STACK_USAGE("dm_io", 240),
STACK_USAGE("dm_io_init", 8),
STACK_USAGE("dm_io_exit", 0),
STACK_USAGE("dm_io_client_destroy", 8),
STACK_USAGE("dev_rename", 64),
STACK_USAGE("dev_set_geometry", 120),
STACK_USAGE("dev_suspend", 48),
STACK_USAGE("dev_status", 16),
STACK_USAGE("retrieve_status", 104),
STACK_USAGE("dev_wait", 56),
STACK_USAGE("dev_arm_poll", 0),
STACK_USAGE("table_load", 72),
STACK_USAGE("table_clear", 32),
STACK_USAGE("table_deps", 72),
STACK_USAGE("table_status", 56),
STACK_USAGE("target_message", 104),
STACK_USAGE("dm_ctl_ioctl", 400),
STACK_USAGE("dm_compat_ctl_ioctl", 0),
STACK_USAGE("dm_open", 8),
STACK_USAGE("dm_release", 0),
STACK_USAGE("dm_poll", 8),
STACK_USAGE("dm_interface_init", 8),
STACK_USAGE("dm_interface_exit", 0),
STACK_USAGE("dm_copy_name_and_uuid", 40),
STACK_USAGE("dm_early_create", 72),
STACK_USAGE("dm_hash_insert", 56),
STACK_USAGE("__hash_remove", 32),
STACK_USAGE("dm_hash_remove_all", 56),
STACK_USAGE("dm_deferred_remove", 0),
STACK_USAGE("remove_all", 8),
STACK_USAGE("filter_device", 40),
STACK_USAGE("list_devices", 80),
STACK_USAGE("list_version_get_needed", 16),
STACK_USAGE("list_version_get_info", 24),
STACK_USAGE("__list_versions", 112),
STACK_USAGE("list_versions", 72),
STACK_USAGE("get_target_version", 0),
STACK_USAGE("__dev_status", 40),
STACK_USAGE("dev_create", 48),
STACK_USAGE("__find_device_hash_cell", 40),
STACK_USAGE("dev_remove", 32),
STACK_USAGE("dm_kcopyd_init", 0),
STACK_USAGE("dm_kcopyd_exit", 0),
STACK_USAGE("push", 24),
STACK_USAGE("run_complete_job", 64),
STACK_USAGE("complete_io", 32),
STACK_USAGE("run_io_job", 88),
STACK_USAGE("run_pages_job", 32),
STACK_USAGE("process_jobs", 56),
STACK_USAGE("do_work", 80),
STACK_USAGE("dispatch_job", 32),
STACK_USAGE("segment_complete", 48),
STACK_USAGE("dm_kcopyd_copy", 64),
STACK_USAGE("dm_kcopyd_zero", 0),
STACK_USAGE("dm_kcopyd_prepare_callback", 32),
STACK_USAGE("dm_kcopyd_do_callback", 32),
STACK_USAGE("dm_kcopyd_client_create", 48),
STACK_USAGE("dm_kcopyd_client_destroy", 72),
STACK_USAGE("dm_kcopyd_client_flush", 0),
STACK_USAGE("linear_status", 24),
STACK_USAGE("linear_prepare_ioctl", 0),
STACK_USAGE("linear_iterate_devices", 0),
STACK_USAGE("dm_linear_init", 8),
STACK_USAGE("dm_linear_exit", 0),
STACK_USAGE("linear_ctr", 56),
STACK_USAGE("linear_dtr", 8),
STACK_USAGE("linear_map", 16),
STACK_USAGE("dm_dirty_log_type_register", 32),
STACK_USAGE("dm_dirty_log_type_unregister", 40),
STACK_USAGE("dm_dirty_log_create", 80),
STACK_USAGE("dm_dirty_log_destroy", 40),
STACK_USAGE("create_log_context", 104),
STACK_USAGE("core_ctr", 0),
STACK_USAGE("core_dtr", 8),
STACK_USAGE("disk_ctr", 56),
STACK_USAGE("disk_dtr", 8),
STACK_USAGE("disk_resume", 64),
STACK_USAGE("core_get_region_size", 0),
STACK_USAGE("core_resume", 0),
STACK_USAGE("core_is_clean", 0),
STACK_USAGE("core_in_sync", 0),
STACK_USAGE("core_flush", 0),
STACK_USAGE("disk_flush", 64),
STACK_USAGE("core_mark_region", 0),
STACK_USAGE("core_clear_region", 0),
STACK_USAGE("core_get_resync_work", 24),
STACK_USAGE("core_set_region_sync", 0),
STACK_USAGE("core_get_sync_count", 0),
STACK_USAGE("core_status", 32),
STACK_USAGE("disk_status", 32),
STACK_USAGE("dm_dirty_log_init", 8),
STACK_USAGE("dm_dirty_log_exit", 0),
STACK_USAGE("parse_features", 72),
STACK_USAGE("mirror_ctr", 96),
STACK_USAGE("mirror_dtr", 24),
STACK_USAGE("wakeup_all_recovery_waiters", 0),
STACK_USAGE("mirror_map", 48),
STACK_USAGE("queue_bio", 40),
STACK_USAGE("mirror_end_io", 40),
STACK_USAGE("mirror_presuspend", 96),
STACK_USAGE("mirror_postsuspend", 0),
STACK_USAGE("mirror_resume", 8),
STACK_USAGE("dispatch_bios", 56),
STACK_USAGE("mirror_status", 88),
STACK_USAGE("mirror_iterate_devices", 48),
STACK_USAGE("dm_mirror_init", 8),
STACK_USAGE("dm_mirror_exit", 0),
STACK_USAGE("fail_mirror", 8),
STACK_USAGE("mirror_flush", 328),
STACK_USAGE("recovery_complete", 64),
STACK_USAGE("mirror_available", 24),
STACK_USAGE("read_callback", 16),
STACK_USAGE("write_callback", 48),
STACK_USAGE("trigger_event", 0),
STACK_USAGE("do_mirror", 456),
STACK_USAGE("wakeup_mirrord", 0),
STACK_USAGE("delayed_wake_fn", 0),
STACK_USAGE("dm_rh_region_to_sector", 0),
STACK_USAGE("dm_rh_bio_to_region", 0),
STACK_USAGE("dm_rh_region_context", 0),
STACK_USAGE("dm_rh_get_region_key", 0),
STACK_USAGE("dm_rh_get_region_size", 0),
STACK_USAGE("dm_region_hash_create", 72),
STACK_USAGE("dm_region_hash_destroy", 40),
STACK_USAGE("dm_rh_dirty_log", 0),
STACK_USAGE("__rh_find", 56),
STACK_USAGE("dm_rh_get_state", 40),
STACK_USAGE("dm_rh_mark_nosync", 40),
STACK_USAGE("dm_rh_update_states", 120),
STACK_USAGE("dm_rh_inc_pending", 40),
STACK_USAGE("dm_rh_dec", 32),
STACK_USAGE("dm_rh_recovery_prepare", 64),
STACK_USAGE("dm_rh_recovery_start", 24),
STACK_USAGE("dm_rh_recovery_end", 32),
STACK_USAGE("dm_rh_recovery_in_flight", 0),
STACK_USAGE("dm_rh_flush", 0),
STACK_USAGE("dm_rh_delay", 24),
STACK_USAGE("dm_rh_stop_recovery", 24),
STACK_USAGE("dm_rh_start_recovery", 24),
STACK_USAGE("dm_mq_kick_requeue_list", 0),
STACK_USAGE("dm_requeue_original_request", 32),
STACK_USAGE("dm_softirq_done", 40),
STACK_USAGE("end_clone_request", 0),
STACK_USAGE("dm_rq_bio_constructor", 0),
STACK_USAGE("dm_attr_rq_based_seq_io_merge_deadline_show", 0),
STACK_USAGE("dm_get_reserved_rq_based_ios", 0),
STACK_USAGE("dm_attr_rq_based_seq_io_merge_deadline_store", 0),
STACK_USAGE("dm_mq_init_request", 0),
STACK_USAGE("dm_mq_queue_rq", 72),
STACK_USAGE("dm_mq_init_request_queue", 24),
STACK_USAGE("dm_mq_cleanup_mapped_device", 8),
STACK_USAGE("dm_request_based", 0),
STACK_USAGE("dm_start_queue", 8),
STACK_USAGE("dm_stop_queue", 0),
STACK_USAGE("end_clone_bio", 32),
STACK_USAGE("message_stats_print", 272),
STACK_USAGE("dm_stats_message", 208),
STACK_USAGE("dm_statistics_init", 0),
STACK_USAGE("dm_statistics_exit", 0),
STACK_USAGE("dm_kvzalloc", 16),
STACK_USAGE("dm_stat_free", 40),
STACK_USAGE("dm_stats_init", 8),
STACK_USAGE("dm_stats_cleanup", 56),
STACK_USAGE("dm_stats_create", 120),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("dm_stats_account_io", 136),
STACK_USAGE("__dm_stat_init_temporary_percpu_totals", 48),
STACK_USAGE("__dm_stat_clear", 72),
STACK_USAGE("stripe_dtr", 32),
STACK_USAGE("stripe_map_range", 40),
STACK_USAGE("stripe_map", 16),
STACK_USAGE("stripe_status", 64),
STACK_USAGE("stripe_end_io", 72),
STACK_USAGE("stripe_iterate_devices", 48),
STACK_USAGE("stripe_io_hints", 24),
STACK_USAGE("dm_stripe_init", 8),
STACK_USAGE("dm_stripe_exit", 0),
STACK_USAGE("trigger_event", 0),
STACK_USAGE("stripe_ctr", 96),
STACK_USAGE("dm_sysfs_init", 16),
STACK_USAGE("dm_sysfs_exit", 8),
STACK_USAGE("dm_attr_show", 24),
STACK_USAGE("dm_attr_store", 32),
STACK_USAGE("dm_attr_name_show", 8),
STACK_USAGE("dm_attr_uuid_show", 8),
STACK_USAGE("dm_attr_suspended_show", 8),
STACK_USAGE("dm_attr_use_blk_mq_show", 8),
STACK_USAGE("dm_table_request_based", 0),
STACK_USAGE("dm_table_free_md_mempools", 8),
STACK_USAGE("dm_table_get_md_mempools", 0),
STACK_USAGE("dm_table_create", 64),
STACK_USAGE("dm_destroy_crypto_profile", 0),
STACK_USAGE("dm_table_complete", 128),
STACK_USAGE("dm_table_event_callback", 24),
STACK_USAGE("dm_table_event", 8),
STACK_USAGE("dm_table_get_size", 0),
STACK_USAGE("dm_table_get_target", 0),
STACK_USAGE("dm_table_find_target", 0),
STACK_USAGE("device_not_poll_capable", 0),
STACK_USAGE("count_device", 0),
STACK_USAGE("dm_table_has_no_data_devices", 56),
STACK_USAGE("device_not_matches_zone_sectors", 0),
STACK_USAGE("dm_calculate_queue_limits", 312),
STACK_USAGE("dm_table_destroy", 40),
STACK_USAGE("device_flush_capable", 0),
STACK_USAGE("device_dax_write_cache_enabled", 0),
STACK_USAGE("device_is_rotational", 0),
STACK_USAGE("device_is_not_random", 0),
STACK_USAGE("device_not_write_zeroes_capable", 0),
STACK_USAGE("device_not_nowait_capable", 0),
STACK_USAGE("device_not_discard_capable", 0),
STACK_USAGE("device_not_secure_erase_capable", 0),
STACK_USAGE("device_requires_stable_pages", 0),
STACK_USAGE("dm_table_set_restrictions", 48),
STACK_USAGE("dm_table_get_num_targets", 0),
STACK_USAGE("dm_table_get_devices", 0),
STACK_USAGE("dm_table_get_mode", 0),
STACK_USAGE("dm_table_presuspend_targets", 16),
STACK_USAGE("dm_table_presuspend_undo_targets", 16),
STACK_USAGE("dm_table_postsuspend_targets", 16),
STACK_USAGE("dm_table_resume_targets", 40),
STACK_USAGE("dm_table_get_md", 0),
STACK_USAGE("dm_table_device_name", 0),
STACK_USAGE("dm_table_run_md_queue_async", 0),
STACK_USAGE("device_area_is_invalid", 40),
STACK_USAGE("dm_get_dev_t", 24),
STACK_USAGE("dm_get_device", 88),
STACK_USAGE("dm_set_device_limits", 32),
STACK_USAGE("dm_put_device", 16),
STACK_USAGE("dm_split_args", 72),
STACK_USAGE("dm_table_add_target", 88),
STACK_USAGE("dm_read_arg", 40),
STACK_USAGE("dm_read_arg_group", 48),
STACK_USAGE("dm_shift_arg", 0),
STACK_USAGE("dm_consume_args", 0),
STACK_USAGE("dm_table_set_type", 0),
STACK_USAGE("device_not_dax_capable", 0),
STACK_USAGE("device_not_dax_synchronous_capable", 0),
STACK_USAGE("device_is_rq_stackable", 0),
STACK_USAGE("dm_table_get_type", 0),
STACK_USAGE("dm_table_get_immutable_target_type", 0),
STACK_USAGE("dm_table_get_immutable_target", 0),
STACK_USAGE("dm_table_get_wildcard_target", 0),
STACK_USAGE("dm_table_bio_based", 0),
STACK_USAGE("io_err_ctr", 0),
STACK_USAGE("io_err_dtr", 0),
STACK_USAGE("io_err_map", 0),
STACK_USAGE("io_err_clone_and_map_rq", 0),
STACK_USAGE("io_err_release_clone_rq", 0),
STACK_USAGE("io_err_dax_direct_access", 0),
STACK_USAGE("dm_target_init", 0),
STACK_USAGE("dm_target_exit", 24),
STACK_USAGE("dm_get_target_type", 32),
STACK_USAGE("dm_put_target_type", 8),
STACK_USAGE("dm_target_iterate", 32),
STACK_USAGE("dm_register_target", 32),
STACK_USAGE("dm_unregister_target", 32),
STACK_USAGE("zero_ctr", 0),
STACK_USAGE("zero_map", 8),
STACK_USAGE("dm_zero_init", 8),
STACK_USAGE("dm_zero_exit", 0),
STACK_USAGE("dm_bio_from_per_bio_data", 0),
STACK_USAGE("dm_set_target_max_io_len", 8),
STACK_USAGE("dm_bio_get_target_bio_nr", 0),
STACK_USAGE("dm_accept_partial_bio", 0),
STACK_USAGE("__dm_submit_bio_remap", 8),
STACK_USAGE("dm_submit_bio_remap", 24),
STACK_USAGE("__set_swap_bios_limit", 32),
STACK_USAGE("__map_bio", 32),
STACK_USAGE("__send_duplicate_bios", 56),
STACK_USAGE("dm_submit_bio", 256),
STACK_USAGE("dm_poll_bio", 72),
STACK_USAGE("__dm_get_module_param", 0),
STACK_USAGE("cleanup_mapped_device", 8),
STACK_USAGE("dm_get_reserved_bio_based_ios", 0),
STACK_USAGE("event_callback", 48),
STACK_USAGE("local_init", 16),
STACK_USAGE("dm_create", 40),
STACK_USAGE("dm_lock_md_type", 0),
STACK_USAGE("dm_unlock_md_type", 0),
STACK_USAGE("dm_set_md_type", 16),
STACK_USAGE("dm_get_md_type", 0),
STACK_USAGE("dm_get_immutable_target_type", 0),
STACK_USAGE("dm_get_queue_limits", 0),
STACK_USAGE("dm_setup_md_queue", 152),
STACK_USAGE("dm_get_md", 16),
STACK_USAGE("dm_get_mdptr", 0),
STACK_USAGE("dm_set_mdptr", 0),
STACK_USAGE("dm_get", 0),
STACK_USAGE("dm_hold", 16),
STACK_USAGE("dm_device_name", 0),
STACK_USAGE("__dm_destroy", 56),
STACK_USAGE("dm_destroy", 0),
STACK_USAGE("dm_destroy_immediate", 0),
STACK_USAGE("dm_put", 0),
STACK_USAGE("dm_wait_for_completion", 104),
STACK_USAGE("dm_wq_work", 24),
STACK_USAGE("dm_swap_table", 160),
STACK_USAGE("local_exit", 0),
STACK_USAGE("__dm_suspend", 48),
STACK_USAGE("dm_suspend", 32),
STACK_USAGE("__dm_resume", 16),
STACK_USAGE("dm_resume", 32),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("dm_internal_suspend_noflush", 16),
STACK_USAGE("dm_internal_resume", 16),
STACK_USAGE("dm_init", 24),
STACK_USAGE("dm_internal_suspend_fast", 8),
STACK_USAGE("dm_internal_resume_fast", 8),
STACK_USAGE("dm_kobject_uevent", 88),
STACK_USAGE("dm_next_uevent_seq", 0),
STACK_USAGE("dm_get_event_nr", 0),
STACK_USAGE("dm_wait_event", 80),
STACK_USAGE("dm_uevent_add", 24),
STACK_USAGE("dm_disk", 0),
STACK_USAGE("dm_kobject", 0),
STACK_USAGE("dm_get_from_kobject", 8),
STACK_USAGE("dm_suspended_md", 0),
STACK_USAGE("dm_suspended_internally_md", 0),
STACK_USAGE("dm_test_deferred_remove_flag", 0),
STACK_USAGE("dm_suspended", 0),
STACK_USAGE("dm_post_suspending", 0),
STACK_USAGE("dm_noflush_suspending", 0),
STACK_USAGE("dm_alloc_md_mempools", 32),
STACK_USAGE("dm_free_md_mempools", 8),
STACK_USAGE("dm_call_pr", 56),
STACK_USAGE("dm_exit", 8),
STACK_USAGE("__dm_pr_register", 0),
STACK_USAGE("dm_pr_register", 56),
STACK_USAGE("dm_pr_reserve", 72),
STACK_USAGE("dm_pr_release", 64),
STACK_USAGE("dm_pr_preempt", 72),
STACK_USAGE("dm_pr_clear", 56),
STACK_USAGE("dm_deleting_md", 0),
STACK_USAGE("dm_blk_open", 8),
STACK_USAGE("dm_blk_close", 8),
STACK_USAGE("local_lock_release", 8),
STACK_USAGE("dm_open_count", 0),
STACK_USAGE("dm_lock_for_deletion", 24),
STACK_USAGE("dm_cancel_deferred_remove", 16),
STACK_USAGE("do_deferred_remove", 0),
STACK_USAGE("dm_blk_getgeo", 0),
STACK_USAGE("dm_prepare_ioctl", 56),
STACK_USAGE("dm_blk_ioctl", 72),
STACK_USAGE("dm_start_time_ns_from_clone", 0),
STACK_USAGE("dm_start_io_acct", 48),
STACK_USAGE("queue_io", 24),
STACK_USAGE("dm_get_live_table", 32),
STACK_USAGE("dm_put_live_table", 16),
STACK_USAGE("dm_sync_table", 0),
STACK_USAGE("dm_issue_global_event", 0),
STACK_USAGE("dm_get_table_device", 64),
STACK_USAGE("dm_put_table_device", 32),
STACK_USAGE("dm_get_geometry", 0),
STACK_USAGE("dm_set_geometry", 0),
STACK_USAGE("dm_io_dec_pending", 64),
STACK_USAGE("disable_discard", 0),
STACK_USAGE("dm_per_bio_data", 0),
STACK_USAGE("disable_write_zeroes", 0),
STACK_USAGE("clone_endio", 40),
STACK_USAGE("md_setup_drive", 488),
STACK_USAGE("raid_setup", 48),
STACK_USAGE("autodetect_raid", 0),
STACK_USAGE("md_run_setup", 16),
STACK_USAGE("md_setup", 64),
STACK_USAGE("md_bitmap_unplug", 32),
STACK_USAGE("md_bitmap_init_from_disk", 136),
STACK_USAGE("md_bitmap_write_all", 0),
STACK_USAGE("md_bitmap_daemon_work", 56),
STACK_USAGE("md_bitmap_startwrite", 112),
STACK_USAGE("md_bitmap_endwrite", 64),
STACK_USAGE("md_bitmap_start_sync", 64),
STACK_USAGE("md_bitmap_end_sync", 40),
STACK_USAGE("md_bitmap_close_sync", 40),
STACK_USAGE("md_bitmap_cond_end_sync", 80),
STACK_USAGE("md_bitmap_sync_with_cluster", 80),
STACK_USAGE("md_bitmap_set_memory_bits", 40),
STACK_USAGE("md_bitmap_dirty_bits", 32),
STACK_USAGE("md_bitmap_flush", 24),
STACK_USAGE("md_bitmap_free", 80),
STACK_USAGE("md_bitmap_wait_behind_writes", 72),
STACK_USAGE("md_bitmap_destroy", 32),
STACK_USAGE("md_bitmap_create", 104),
STACK_USAGE("md_bitmap_load", 56),
STACK_USAGE("get_bitmap_from_slot", 16),
STACK_USAGE("md_bitmap_copy_from_slot", 88),
STACK_USAGE("md_bitmap_status", 16),
STACK_USAGE("md_bitmap_resize", 208),
STACK_USAGE("location_show", 8),
STACK_USAGE("location_store", 56),
STACK_USAGE("space_show", 0),
STACK_USAGE("space_store", 32),
STACK_USAGE("timeout_show", 32),
STACK_USAGE("timeout_store", 32),
STACK_USAGE("backlog_show", 0),
STACK_USAGE("backlog_store", 56),
STACK_USAGE("chunksize_show", 0),
STACK_USAGE("chunksize_store", 32),
STACK_USAGE("metadata_show", 0),
STACK_USAGE("metadata_store", 32),
STACK_USAGE("can_clear_show", 24),
STACK_USAGE("can_clear_store", 32),
STACK_USAGE("behind_writes_used_show", 24),
STACK_USAGE("behind_writes_used_reset", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("write_page", 104),
STACK_USAGE("end_bitmap_write", 0),
STACK_USAGE("free_buffers", 16),
STACK_USAGE("read_page", 120),
STACK_USAGE("md_bitmap_wait_writes", 72),
STACK_USAGE("md_bitmap_update_sb", 16),
STACK_USAGE("md_bitmap_print_sb", 0),
STACK_USAGE("md_bitmap_checkpage", 32),
STACK_USAGE("md_bitmap_file_unmap", 40),
STACK_USAGE("md_bitmap_file_kick", 16),
STACK_USAGE("md_bitmap_file_set_bit", 32),
STACK_USAGE("md_bitmap_file_clear_bit", 32),
STACK_USAGE("read_disk_sb", 184),
STACK_USAGE("md_check_no_bitmap", 0),
STACK_USAGE("super_90_load", 152),
STACK_USAGE("super_90_validate", 0),
STACK_USAGE("rdevs_uninit_serial", 16),
STACK_USAGE("super_90_sync", 56),
STACK_USAGE("super_90_rdev_size_change", 16),
STACK_USAGE("super_90_allow_new_offset", 0),
STACK_USAGE("calc_sb_1_csum", 0),
STACK_USAGE("super_1_load", 152),
STACK_USAGE("super_1_validate", 0),
STACK_USAGE("super_1_sync", 80),
STACK_USAGE("mddev_create_serial_pool", 56),
STACK_USAGE("super_1_rdev_size_change", 16),
STACK_USAGE("percpu_ref_get", 8),
STACK_USAGE("super_1_allow_new_offset", 0),
STACK_USAGE("md_integrity_register", 0),
STACK_USAGE("md_integrity_add_rdev", 0),
STACK_USAGE("bind_rdev_to_array", 88),
STACK_USAGE("rdev_delayed_delete", 8),
STACK_USAGE("lock_rdev", 24),
STACK_USAGE("export_rdev", 24),
STACK_USAGE("md_kick_rdev_from_array", 24),
STACK_USAGE("mddev_destroy_serial_pool", 48),
STACK_USAGE("set_in_sync", 24),
STACK_USAGE("md_update_sb", 64),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("add_bound_rdev", 24),
STACK_USAGE("cmd_match", 0),
STACK_USAGE("state_show", 32),
STACK_USAGE("state_store", 40),
STACK_USAGE("errors_show", 0),
STACK_USAGE("errors_store", 32),
STACK_USAGE("slot_show", 0),
STACK_USAGE("slot_store", 48),
STACK_USAGE("offset_show", 0),
STACK_USAGE("offset_store", 32),
STACK_USAGE("new_offset_show", 0),
STACK_USAGE("new_offset_store", 40),
STACK_USAGE("rdev_size_show", 0),
STACK_USAGE("rdev_size_store", 64),
STACK_USAGE("recovery_start_show", 0),
STACK_USAGE("recovery_start_store", 32),
STACK_USAGE("bb_show", 0),
STACK_USAGE("percpu_ref_put", 8),
STACK_USAGE("bb_store", 16),
STACK_USAGE("ubb_show", 0),
STACK_USAGE("ubb_store", 0),
STACK_USAGE("ppl_sector_show", 0),
STACK_USAGE("ppl_sector_store", 32),
STACK_USAGE("ppl_size_show", 0),
STACK_USAGE("ppl_size_store", 32),
STACK_USAGE("md_new_event", 0),
STACK_USAGE("rdev_attr_show", 0),
STACK_USAGE("rdev_attr_store", 48),
STACK_USAGE("rdev_free", 0),
STACK_USAGE("md_rdev_init", 8),
STACK_USAGE("md_import_device", 88),
STACK_USAGE("analyze_sbs", 104),
STACK_USAGE("strict_strtoul_scaled", 32),
STACK_USAGE("safe_delay_show", 0),
STACK_USAGE("safe_delay_store", 24),
STACK_USAGE("level_show", 24),
STACK_USAGE("level_store", 104),
STACK_USAGE("layout_show", 0),
STACK_USAGE("layout_store", 40),
STACK_USAGE("md_handle_request", 88),
STACK_USAGE("raid_disks_show", 0),
STACK_USAGE("raid_disks_store", 40),
STACK_USAGE("uuid_show", 0),
STACK_USAGE("chunk_size_show", 0),
STACK_USAGE("chunk_size_store", 40),
STACK_USAGE("resync_start_show", 0),
STACK_USAGE("resync_start_store", 40),
STACK_USAGE("array_state_show", 32),
STACK_USAGE("array_state_store", 48),
STACK_USAGE("md_submit_bio", 32),
STACK_USAGE("max_corrected_read_errors_show", 0),
STACK_USAGE("max_corrected_read_errors_store", 32),
STACK_USAGE("null_show", 0),
STACK_USAGE("flush_rdev_wq", 8),
STACK_USAGE("new_dev_store", 56),
STACK_USAGE("bitmap_store", 64),
STACK_USAGE("size_show", 0),
STACK_USAGE("size_store", 48),
STACK_USAGE("metadata_show", 0),
STACK_USAGE("metadata_store", 64),
STACK_USAGE("action_show", 8),
STACK_USAGE("action_store", 32),
STACK_USAGE("mddev_suspend", 72),
STACK_USAGE("last_sync_action_show", 0),
STACK_USAGE("mismatch_cnt_show", 0),
STACK_USAGE("sync_min_show", 0),
STACK_USAGE("sync_min_store", 40),
STACK_USAGE("sync_max_show", 0),
STACK_USAGE("sync_max_store", 40),
STACK_USAGE("degraded_show", 0),
STACK_USAGE("sync_force_parallel_show", 0),
STACK_USAGE("sync_force_parallel_store", 32),
STACK_USAGE("sync_speed_show", 0),
STACK_USAGE("sync_completed_show", 0),
STACK_USAGE("min_sync_show", 0),
STACK_USAGE("min_sync_store", 48),
STACK_USAGE("max_sync_show", 0),
STACK_USAGE("max_sync_store", 48),
STACK_USAGE("mddev_resume", 8),
STACK_USAGE("suspend_lo_show", 0),
STACK_USAGE("suspend_lo_store", 40),
STACK_USAGE("suspend_hi_show", 0),
STACK_USAGE("suspend_hi_store", 32),
STACK_USAGE("reshape_position_show", 0),
STACK_USAGE("reshape_position_store", 40),
STACK_USAGE("reshape_direction_show", 0),
STACK_USAGE("reshape_direction_store", 32),
STACK_USAGE("md_end_flush", 16),
STACK_USAGE("array_size_show", 0),
STACK_USAGE("array_size_store", 56),
STACK_USAGE("consistency_policy_show", 0),
STACK_USAGE("consistency_policy_store", 24),
STACK_USAGE("fail_last_dev_show", 0),
STACK_USAGE("fail_last_dev_store", 32),
STACK_USAGE("serialize_policy_show", 0),
STACK_USAGE("serialize_policy_store", 32),
STACK_USAGE("submit_flushes", 32),
STACK_USAGE("md_attr_show", 32),
STACK_USAGE("md_attr_store", 40),
STACK_USAGE("md_free", 8),
STACK_USAGE("mddev_delayed_delete", 8),
STACK_USAGE("no_op", 0),
STACK_USAGE("mddev_init_writes_pending", 16),
STACK_USAGE("md_alloc", 56),
STACK_USAGE("md_probe", 0),
STACK_USAGE("add_named_array", 88),
STACK_USAGE("md_safemode_timeout", 8),
STACK_USAGE("md_run", 168),
STACK_USAGE("md_submit_flush_data", 24),
STACK_USAGE("do_md_run", 16),
STACK_USAGE("md_start", 16),
STACK_USAGE("restart_array", 48),
STACK_USAGE("md_flush_request", 96),
STACK_USAGE("__md_stop_writes", 8),
STACK_USAGE("md_stop_writes", 8),
STACK_USAGE("mddev_detach", 16),
STACK_USAGE("__md_stop", 24),
STACK_USAGE("md_stop", 8),
STACK_USAGE("md_set_readonly", 88),
STACK_USAGE("do_md_stop", 136),
STACK_USAGE("sysfs_link_rdev", 72),
STACK_USAGE("sysfs_unlink_rdev", 56),
STACK_USAGE("mddev_put", 16),
STACK_USAGE("md_add_new_disk", 120),
STACK_USAGE("mddev_init", 8),
STACK_USAGE("hot_remove_disk", 24),
STACK_USAGE("hot_add_disk", 72),
STACK_USAGE("set_bitmap_file", 32),
STACK_USAGE("md_set_array_info", 24),
STACK_USAGE("md_set_array_sectors", 16),
STACK_USAGE("update_size", 24),
STACK_USAGE("rcu_read_unlock", 0),
STACK_USAGE("update_raid_disks", 8),
STACK_USAGE("update_array_info", 40),
STACK_USAGE("md_getgeo", 0),
STACK_USAGE("md_ioctl", 144),
STACK_USAGE("md_compat_ioctl", 0),
STACK_USAGE("md_set_read_only", 24),
STACK_USAGE("md_open", 40),
STACK_USAGE("md_release", 0),
STACK_USAGE("md_check_events", 0),
STACK_USAGE("md_thread", 96),
STACK_USAGE("md_wakeup_thread", 0),
STACK_USAGE("md_register_thread", 32),
STACK_USAGE("md_unregister_thread", 16),
STACK_USAGE("mddev_unlock", 24),
STACK_USAGE("md_error", 16),
STACK_USAGE("md_seq_start", 16),
STACK_USAGE("md_seq_next", 16),
STACK_USAGE("md_seq_stop", 0),
STACK_USAGE("md_seq_show", 136),
STACK_USAGE("md_seq_open", 8),
STACK_USAGE("mdstat_poll", 8),
STACK_USAGE("register_md_personality", 8),
STACK_USAGE("unregister_md_personality", 8),
STACK_USAGE("register_md_cluster_operations", 24),
STACK_USAGE("unregister_md_cluster_operations", 0),
STACK_USAGE("md_setup_cluster", 16),
STACK_USAGE("md_cluster_stop", 0),
STACK_USAGE("is_mddev_idle", 64),
STACK_USAGE("md_done_sync", 16),
STACK_USAGE("md_find_rdev_nr_rcu", 0),
STACK_USAGE("md_write_start", 88),
STACK_USAGE("md_write_inc", 0),
STACK_USAGE("md_write_end", 8),
STACK_USAGE("md_submit_discard_bio", 32),
STACK_USAGE("acct_bioset_init", 0),
STACK_USAGE("acct_bioset_exit", 0),
STACK_USAGE("md_end_io_acct", 16),
STACK_USAGE("md_account_bio", 24),
STACK_USAGE("md_allow_write", 72),
STACK_USAGE("md_do_sync", 392),
STACK_USAGE("md_find_rdev_rcu", 0),
STACK_USAGE("find_pers", 40),
STACK_USAGE("md_rdev_clear", 8),
STACK_USAGE("remove_and_add_spares", 120),
STACK_USAGE("md_start_sync", 8),
STACK_USAGE("md_check_recovery", 32),
STACK_USAGE("super_written", 24),
STACK_USAGE("md_reap_sync_thread", 32),
STACK_USAGE("md_super_write", 48),
STACK_USAGE("md_wait_for_blocked_rdev", 88),
STACK_USAGE("md_finish_reshape", 0),
STACK_USAGE("rdev_set_badblocks", 24),
STACK_USAGE("rdev_clear_badblocks", 16),
STACK_USAGE("md_notify_reboot", 32),
STACK_USAGE("md_init", 16),
STACK_USAGE("read_rdev", 32),
STACK_USAGE("md_reload_sb", 104),
STACK_USAGE("md_autodetect_dev", 16),
STACK_USAGE("md_autostart_arrays", 152),
STACK_USAGE("md_super_wait", 72),
STACK_USAGE("md_exit", 40),
STACK_USAGE("get_ro", 0),
STACK_USAGE("set_ro", 0),
STACK_USAGE("sync_page_io", 168),
STACK_USAGE("lirc_mode2_is_valid_access", 0),
STACK_USAGE("bpf_rc_repeat", 0),
STACK_USAGE("lirc_bpf_run", 80),
STACK_USAGE("lirc_bpf_free", 16),
STACK_USAGE("lirc_prog_attach", 56),
STACK_USAGE("lirc_prog_detach", 56),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("lirc_prog_query", 64),
STACK_USAGE("bpf_rc_keydown", 0),
STACK_USAGE("bpf_rc_pointer_rel", 16),
STACK_USAGE("lirc_mode2_func_proto", 0),
STACK_USAGE("init_rc_map_adstech_dvb_t_pci", 0),
STACK_USAGE("exit_rc_map_adstech_dvb_t_pci", 0),
STACK_USAGE("init_rc_map_alink_dtu_m", 0),
STACK_USAGE("exit_rc_map_alink_dtu_m", 0),
STACK_USAGE("init_rc_map_anysee", 0),
STACK_USAGE("exit_rc_map_anysee", 0),
STACK_USAGE("init_rc_map_apac_viewcomp", 0),
STACK_USAGE("exit_rc_map_apac_viewcomp", 0),
STACK_USAGE("init_rc_map_t2hybrid", 0),
STACK_USAGE("exit_rc_map_t2hybrid", 0),
STACK_USAGE("init_rc_map_asus_pc39", 0),
STACK_USAGE("exit_rc_map_asus_pc39", 0),
STACK_USAGE("init_rc_map_asus_ps3_100", 0),
STACK_USAGE("exit_rc_map_asus_ps3_100", 0),
STACK_USAGE("init_rc_map_ati_tv_wonder_hd_600", 0),
STACK_USAGE("exit_rc_map_ati_tv_wonder_hd_600", 0),
STACK_USAGE("init_rc_map_ati_x10", 0),
STACK_USAGE("exit_rc_map_ati_x10", 0),
STACK_USAGE("init_rc_map_avermedia_a16d", 0),
STACK_USAGE("exit_rc_map_avermedia_a16d", 0),
STACK_USAGE("init_rc_map_avermedia_cardbus", 0),
STACK_USAGE("exit_rc_map_avermedia_cardbus", 0),
STACK_USAGE("init_rc_map_avermedia_dvbt", 0),
STACK_USAGE("exit_rc_map_avermedia_dvbt", 0),
STACK_USAGE("init_rc_map_avermedia_m135a", 0),
STACK_USAGE("exit_rc_map_avermedia_m135a", 0),
STACK_USAGE("init_rc_map_avermedia_m733a_rm_k6", 0),
STACK_USAGE("exit_rc_map_avermedia_m733a_rm_k6", 0),
STACK_USAGE("init_rc_map_avermedia_rm_ks", 0),
STACK_USAGE("exit_rc_map_avermedia_rm_ks", 0),
STACK_USAGE("init_rc_map_avermedia", 0),
STACK_USAGE("exit_rc_map_avermedia", 0),
STACK_USAGE("init_rc_map_avertv_303", 0),
STACK_USAGE("exit_rc_map_avertv_303", 0),
STACK_USAGE("init_rc_map_azurewave_ad_tu700", 0),
STACK_USAGE("exit_rc_map_azurewave_ad_tu700", 0),
STACK_USAGE("init_rc_map_beelink_gs1", 0),
STACK_USAGE("exit_rc_map_beelink_gs1", 0),
STACK_USAGE("init_rc_map_behold_columbus", 0),
STACK_USAGE("exit_rc_map_behold_columbus", 0),
STACK_USAGE("init_rc_map_behold", 0),
STACK_USAGE("exit_rc_map_behold", 0),
STACK_USAGE("init_rc_map_budget_ci_old", 0),
STACK_USAGE("exit_rc_map_budget_ci_old", 0),
STACK_USAGE("init_rc_map_cinergy_1400", 0),
STACK_USAGE("exit_rc_map_cinergy_1400", 0),
STACK_USAGE("init_rc_map_cinergy", 0),
STACK_USAGE("exit_rc_map_cinergy", 0),
STACK_USAGE("init_rc_map_ct_90405", 0),
STACK_USAGE("exit_rc_map_ct_90405", 0),
STACK_USAGE("init_rc_map_d680_dmb", 0),
STACK_USAGE("exit_rc_map_d680_dmb", 0),
STACK_USAGE("init_rc_map_delock_61959", 0),
STACK_USAGE("exit_rc_map_delock_61959", 0),
STACK_USAGE("init_rc_map", 0),
STACK_USAGE("exit_rc_map", 0),
STACK_USAGE("init_rc_map", 0),
STACK_USAGE("exit_rc_map", 0),
STACK_USAGE("init_rc_map_digitalnow_tinytwin", 0),
STACK_USAGE("exit_rc_map_digitalnow_tinytwin", 0),
STACK_USAGE("init_rc_map_digittrade", 0),
STACK_USAGE("exit_rc_map_digittrade", 0),
STACK_USAGE("init_rc_map_dm1105_nec", 0),
STACK_USAGE("exit_rc_map_dm1105_nec", 0),
STACK_USAGE("init_rc_map_dntv_live_dvb_t", 0),
STACK_USAGE("exit_rc_map_dntv_live_dvb_t", 0),
STACK_USAGE("init_rc_map_dntv_live_dvbt_pro", 0),
STACK_USAGE("exit_rc_map_dntv_live_dvbt_pro", 0),
STACK_USAGE("init_rc_map_dtt200u", 0),
STACK_USAGE("exit_rc_map_dtt200u", 0),
STACK_USAGE("init_rc_map_rc5_dvbsky", 0),
STACK_USAGE("exit_rc_map_rc5_dvbsky", 0),
STACK_USAGE("init_rc_map_dvico_mce", 0),
STACK_USAGE("exit_rc_map_dvico_mce", 0),
STACK_USAGE("init_rc_map_dvico_portable", 0),
STACK_USAGE("exit_rc_map_dvico_portable", 0),
STACK_USAGE("init_rc_map_em_terratec", 0),
STACK_USAGE("exit_rc_map_em_terratec", 0),
STACK_USAGE("init_rc_map_encore_enltv_fm53", 0),
STACK_USAGE("exit_rc_map_encore_enltv_fm53", 0),
STACK_USAGE("init_rc_map_encore_enltv", 0),
STACK_USAGE("exit_rc_map_encore_enltv", 0),
STACK_USAGE("init_rc_map_encore_enltv2", 0),
STACK_USAGE("exit_rc_map_encore_enltv2", 0),
STACK_USAGE("init_rc_map_evga_indtube", 0),
STACK_USAGE("exit_rc_map_evga_indtube", 0),
STACK_USAGE("init_rc_map_eztv", 0),
STACK_USAGE("exit_rc_map_eztv", 0),
STACK_USAGE("init_rc_map_flydvb", 0),
STACK_USAGE("exit_rc_map_flydvb", 0),
STACK_USAGE("init_rc_map_flyvideo", 0),
STACK_USAGE("exit_rc_map_flyvideo", 0),
STACK_USAGE("init_rc_map_fusionhdtv_mce", 0),
STACK_USAGE("exit_rc_map_fusionhdtv_mce", 0),
STACK_USAGE("init_rc_map_gadmei_rm008z", 0),
STACK_USAGE("exit_rc_map_gadmei_rm008z", 0),
STACK_USAGE("init_rc_map_geekbox", 0),
STACK_USAGE("exit_rc_map_geekbox", 0),
STACK_USAGE("init_rc_map_genius_tvgo_a11mce", 0),
STACK_USAGE("exit_rc_map_genius_tvgo_a11mce", 0),
STACK_USAGE("init_rc_map_gotview7135", 0),
STACK_USAGE("exit_rc_map_gotview7135", 0),
STACK_USAGE("init_rc_map_rc5_hauppauge_new", 0),
STACK_USAGE("exit_rc_map_rc5_hauppauge_new", 0),
STACK_USAGE("init_rc_map_hisi_poplar", 0),
STACK_USAGE("exit_rc_map_hisi_poplar", 0),
STACK_USAGE("init_rc_map_hisi_tv_demo", 0),
STACK_USAGE("exit_rc_map_hisi_tv_demo", 0),
STACK_USAGE("init_rc_map_imon_mce", 0),
STACK_USAGE("exit_rc_map_imon_mce", 0),
STACK_USAGE("init_rc_map_imon_pad", 0),
STACK_USAGE("exit_rc_map_imon_pad", 0),
STACK_USAGE("init_rc_map_imon_rsc", 0),
STACK_USAGE("exit_rc_map_imon_rsc", 0),
STACK_USAGE("init_rc_map_iodata_bctv7e", 0),
STACK_USAGE("exit_rc_map_iodata_bctv7e", 0),
STACK_USAGE("init_rc_it913x_v1_map", 0),
STACK_USAGE("exit_rc_it913x_v1_map", 0),
STACK_USAGE("init_rc_it913x_v2_map", 0),
STACK_USAGE("exit_rc_it913x_v2_map", 0),
STACK_USAGE("init_rc_map_kaiomy", 0),
STACK_USAGE("exit_rc_map_kaiomy", 0),
STACK_USAGE("init_rc_map_khadas", 0),
STACK_USAGE("exit_rc_map_khadas", 0),
STACK_USAGE("init_rc_map_khamsin", 0),
STACK_USAGE("exit_rc_map_khamsin", 0),
STACK_USAGE("init_rc_map_kworld_315u", 0),
STACK_USAGE("exit_rc_map_kworld_315u", 0),
STACK_USAGE("init_rc_map_kworld_pc150u", 0),
STACK_USAGE("exit_rc_map_kworld_pc150u", 0),
STACK_USAGE("init_rc_map_kworld_plus_tv_analog", 0),
STACK_USAGE("exit_rc_map_kworld_plus_tv_analog", 0),
STACK_USAGE("init_rc_map_leadtek_y04g0051", 0),
STACK_USAGE("exit_rc_map_leadtek_y04g0051", 0),
STACK_USAGE("init_rc_lme2510_map", 0),
STACK_USAGE("exit_rc_lme2510_map", 0),
STACK_USAGE("init_rc_map_manli", 0),
STACK_USAGE("exit_rc_map_manli", 0),
STACK_USAGE("init_rc_map_mecool_kii_pro", 0),
STACK_USAGE("exit_rc_map_mecool_kii_pro", 0),
STACK_USAGE("init_rc_map_mecool_kiii_pro", 0),
STACK_USAGE("exit_rc_map_mecool_kiii_pro", 0),
STACK_USAGE("exit_rc_map_medion_x10_digitainer", 0),
STACK_USAGE("init_rc_map_medion_x10_digitainer", 0),
STACK_USAGE("init_rc_map_medion_x10_or2x", 0),
STACK_USAGE("exit_rc_map_medion_x10_or2x", 0),
STACK_USAGE("init_rc_map_medion_x10", 0),
STACK_USAGE("exit_rc_map_medion_x10", 0),
STACK_USAGE("init_rc_map_minix_neo", 0),
STACK_USAGE("exit_rc_map_minix_neo", 0),
STACK_USAGE("init_rc_map_msi_digivox_ii", 0),
STACK_USAGE("exit_rc_map_msi_digivox_ii", 0),
STACK_USAGE("init_rc_map_msi_digivox_iii", 0),
STACK_USAGE("exit_rc_map_msi_digivox_iii", 0),
STACK_USAGE("init_rc_map_msi_tvanywhere_plus", 0),
STACK_USAGE("exit_rc_map_msi_tvanywhere_plus", 0),
STACK_USAGE("init_rc_map_msi_tvanywhere", 0),
STACK_USAGE("exit_rc_map_msi_tvanywhere", 0),
STACK_USAGE("init_rc_map_nebula", 0),
STACK_USAGE("exit_rc_map_nebula", 0),
STACK_USAGE("init_rc_map_nec_terratec_cinergy_xs", 0),
STACK_USAGE("exit_rc_map_nec_terratec_cinergy_xs", 0),
STACK_USAGE("init_rc_map_norwood", 0),
STACK_USAGE("exit_rc_map_norwood", 0),
STACK_USAGE("init_rc_map_npgtech", 0),
STACK_USAGE("exit_rc_map_npgtech", 0),
STACK_USAGE("init_rc_map_odroid", 0),
STACK_USAGE("exit_rc_map_odroid", 0),
STACK_USAGE("init_rc_map_pctv_sedna", 0),
STACK_USAGE("exit_rc_map_pctv_sedna", 0),
STACK_USAGE("init_rc_map_pine64", 0),
STACK_USAGE("exit_rc_map_pine64", 0),
STACK_USAGE("init_rc_map_pinnacle_color", 0),
STACK_USAGE("exit_rc_map_pinnacle_color", 0),
STACK_USAGE("init_rc_map_pinnacle_grey", 0),
STACK_USAGE("exit_rc_map_pinnacle_grey", 0),
STACK_USAGE("init_rc_map_pinnacle_pctv_hd", 0),
STACK_USAGE("exit_rc_map_pinnacle_pctv_hd", 0),
STACK_USAGE("init_rc_map_pixelview", 0),
STACK_USAGE("exit_rc_map_pixelview", 0),
STACK_USAGE("init_rc_map_pixelview", 0),
STACK_USAGE("exit_rc_map_pixelview", 0),
STACK_USAGE("init_rc_map_pixelview_new", 0),
STACK_USAGE("exit_rc_map_pixelview_new", 0),
STACK_USAGE("init_rc_map_pixelview", 0),
STACK_USAGE("exit_rc_map_pixelview", 0),
STACK_USAGE("init_rc_map_powercolor_real_angel", 0),
STACK_USAGE("exit_rc_map_powercolor_real_angel", 0),
STACK_USAGE("init_rc_map_proteus_2309", 0),
STACK_USAGE("exit_rc_map_proteus_2309", 0),
STACK_USAGE("init_rc_map_purpletv", 0),
STACK_USAGE("exit_rc_map_purpletv", 0),
STACK_USAGE("init_rc_map_pv951", 0),
STACK_USAGE("exit_rc_map_pv951", 0),
STACK_USAGE("init_rc_map_rc6_mce", 0),
STACK_USAGE("exit_rc_map_rc6_mce", 0),
STACK_USAGE("init_rc_map_real_audio_220_32_keys", 0),
STACK_USAGE("exit_rc_map_real_audio_220_32_keys", 0),
STACK_USAGE("init_rc_map_reddo", 0),
STACK_USAGE("exit_rc_map_reddo", 0),
STACK_USAGE("init_rc_map_snapstream_firefly", 0),
STACK_USAGE("exit_rc_map_snapstream_firefly", 0),
STACK_USAGE("init_rc_map_streamzap", 0),
STACK_USAGE("exit_rc_map_streamzap", 0),
STACK_USAGE("init_rc_map_su3000", 0),
STACK_USAGE("exit_rc_map_su3000", 0),
STACK_USAGE("init_rc_map_tanix_tx3mini", 0),
STACK_USAGE("exit_rc_map_tanix_tx3mini", 0),
STACK_USAGE("init_rc_map_tanix_tx5max", 0),
STACK_USAGE("exit_rc_map_tanix_tx5max", 0),
STACK_USAGE("init_rc_map_tbs_nec", 0),
STACK_USAGE("exit_rc_map_tbs_nec", 0),
STACK_USAGE("init_rc_map", 0),
STACK_USAGE("exit_rc_map", 0),
STACK_USAGE("init_rc_map", 0),
STACK_USAGE("exit_rc_map", 0),
STACK_USAGE("init_rc_map_terratec_cinergy_c_pci", 0),
STACK_USAGE("exit_rc_map_terratec_cinergy_c_pci", 0),
STACK_USAGE("init_rc_map_terratec_cinergy_s2_hd", 0),
STACK_USAGE("exit_rc_map_terratec_cinergy_s2_hd", 0),
STACK_USAGE("init_rc_map_terratec_cinergy_xs", 0),
STACK_USAGE("exit_rc_map_terratec_cinergy_xs", 0),
STACK_USAGE("init_rc_map_terratec_slim_2", 0),
STACK_USAGE("exit_rc_map_terratec_slim_2", 0),
STACK_USAGE("init_rc_map_terratec_slim", 0),
STACK_USAGE("exit_rc_map_terratec_slim", 0),
STACK_USAGE("init_rc_map_tevii_nec", 0),
STACK_USAGE("exit_rc_map_tevii_nec", 0),
STACK_USAGE("init_rc_map_tivo", 0),
STACK_USAGE("exit_rc_map_tivo", 0),
STACK_USAGE("init_rc_map_total_media_in_hand_02", 0),
STACK_USAGE("exit_rc_map_total_media_in_hand_02", 0),
STACK_USAGE("init_rc_map_total_media_in_hand", 0),
STACK_USAGE("exit_rc_map_total_media_in_hand", 0),
STACK_USAGE("init_rc_map_trekstor", 0),
STACK_USAGE("exit_rc_map_trekstor", 0),
STACK_USAGE("init_rc_map_tt_1500", 0),
STACK_USAGE("exit_rc_map_tt_1500", 0),
STACK_USAGE("init_rc_map_twinhan_dtv_cab_ci", 0),
STACK_USAGE("exit_rc_map_twinhan_dtv_cab_ci", 0),
STACK_USAGE("init_rc_map_twinhan_vp1027", 0),
STACK_USAGE("exit_rc_map_twinhan_vp1027", 0),
STACK_USAGE("init_rc_map_vega_s9x", 0),
STACK_USAGE("exit_rc_map_vega_s9x", 0),
STACK_USAGE("init_rc_map_videomate_k100", 0),
STACK_USAGE("exit_rc_map_videomate_k100", 0),
STACK_USAGE("init_rc_map_videomate_s350", 0),
STACK_USAGE("exit_rc_map_videomate_s350", 0),
STACK_USAGE("init_rc_map_videomate_tv_pvr", 0),
STACK_USAGE("exit_rc_map_videomate_tv_pvr", 0),
STACK_USAGE("init_rc_map_kii_pro", 0),
STACK_USAGE("exit_rc_map_kii_pro", 0),
STACK_USAGE("init_rc_map_wetek_hub", 0),
STACK_USAGE("exit_rc_map_wetek_hub", 0),
STACK_USAGE("init_rc_map_wetek_play2", 0),
STACK_USAGE("exit_rc_map_wetek_play2", 0),
STACK_USAGE("init_rc_map_winfast_usbii_deluxe", 0),
STACK_USAGE("exit_rc_map_winfast_usbii_deluxe", 0),
STACK_USAGE("init_rc_map_winfast", 0),
STACK_USAGE("exit_rc_map_winfast", 0),
STACK_USAGE("init_rc_map_x96max", 0),
STACK_USAGE("exit_rc_map_x96max", 0),
STACK_USAGE("init_rc_map", 0),
STACK_USAGE("exit_rc_map", 0),
STACK_USAGE("init_rc_map", 0),
STACK_USAGE("exit_rc_map", 0),
STACK_USAGE("init_rc_map_zx_irdec", 0),
STACK_USAGE("exit_rc_map_zx_irdec", 0),
STACK_USAGE("lirc_scancode_event", 40),
STACK_USAGE("lirc_open", 48),
STACK_USAGE("lirc_close", 24),
STACK_USAGE("lirc_transmit", 96),
STACK_USAGE("lirc_ioctl", 48),
STACK_USAGE("lirc_raw_event", 48),
STACK_USAGE("lirc_poll", 16),
STACK_USAGE("lirc_read", 136),
STACK_USAGE("lirc_release_device", 0),
STACK_USAGE("lirc_register", 32),
STACK_USAGE("lirc_unregister", 40),
STACK_USAGE("lirc_dev_init", 16),
STACK_USAGE("lirc_dev_exit", 0),
STACK_USAGE("rc_dev_get_from_fd", 24),
STACK_USAGE("ir_raw_event_store_edge", 32),
STACK_USAGE("ir_raw_event_store_with_timeout", 24),
STACK_USAGE("ir_raw_event_store_with_filter", 24),
STACK_USAGE("ir_raw_event_set_idle", 16),
STACK_USAGE("ir_raw_event_thread", 64),
STACK_USAGE("ir_raw_event_handle", 0),
STACK_USAGE("ir_raw_get_allowed_protocols", 0),
STACK_USAGE("change_protocol", 32),
STACK_USAGE("ir_raw_gen_manchester", 8),
STACK_USAGE("ir_raw_gen_pd", 16),
STACK_USAGE("ir_raw_gen_pl", 8),
STACK_USAGE("ir_raw_encode_scancode", 72),
STACK_USAGE("ir_raw_edge_handle", 32),
STACK_USAGE("ir_raw_encode_carrier", 16),
STACK_USAGE("ir_raw_event_prepare", 16),
STACK_USAGE("ir_raw_event_register", 16),
STACK_USAGE("ir_raw_event_free", 8),
STACK_USAGE("ir_raw_event_unregister", 24),
STACK_USAGE("ir_raw_handler_register", 8),
STACK_USAGE("ir_raw_handler_unregister", 48),
STACK_USAGE("ir_raw_event_store", 0),
STACK_USAGE("loop_set_idle", 0),
STACK_USAGE("loop_set_wideband_receiver", 0),
STACK_USAGE("loop_set_carrier_report", 0),
STACK_USAGE("loop_set_wakeup_filter", 32),
STACK_USAGE("loop_init", 24),
STACK_USAGE("loop_exit", 0),
STACK_USAGE("loop_set_tx_mask", 0),
STACK_USAGE("loop_set_tx_carrier", 0),
STACK_USAGE("loop_set_tx_duty_cycle", 0),
STACK_USAGE("loop_set_rx_carrier_range", 0),
STACK_USAGE("loop_tx_ir", 72),
STACK_USAGE("rc_close", 16),
STACK_USAGE("ir_close", 16),
STACK_USAGE("rc_devnode", 0),
STACK_USAGE("rc_map_get", 24),
STACK_USAGE("show_protocols", 64),
STACK_USAGE("ir_raw_load_modules", 48),
STACK_USAGE("store_protocols", 104),
STACK_USAGE("rc_map_register", 8),
STACK_USAGE("show_filter", 32),
STACK_USAGE("store_filter", 72),
STACK_USAGE("rc_map_unregister", 8),
STACK_USAGE("show_wakeup_protocols", 56),
STACK_USAGE("store_wakeup_protocols", 72),
STACK_USAGE("rc_dev_release", 0),
STACK_USAGE("rc_dev_uevent", 32),
STACK_USAGE("rc_allocate_device", 16),
STACK_USAGE("rc_free_device", 8),
STACK_USAGE("devm_rc_alloc_release", 8),
STACK_USAGE("devm_rc_allocate_device", 24),
STACK_USAGE("rc_setup_rx_device", 8),
STACK_USAGE("rc_free_rx_device", 8),
STACK_USAGE("rc_register_device", 96),
STACK_USAGE("devm_rc_release", 0),
STACK_USAGE("devm_rc_register_device", 32),
STACK_USAGE("rc_unregister_device", 16),
STACK_USAGE("rc_core_init", 8),
STACK_USAGE("rc_core_exit", 0),
STACK_USAGE("ir_free_table", 8),
STACK_USAGE("ir_update_mapping", 40),
STACK_USAGE("ir_establish_scancode", 56),
STACK_USAGE("ir_setkeycode", 56),
STACK_USAGE("rc_map_cmp", 0),
STACK_USAGE("ir_getkeycode", 56),
STACK_USAGE("rc_g_keycode_from_table", 48),
STACK_USAGE("rc_keyup", 24),
STACK_USAGE("ir_timer_keyup", 24),
STACK_USAGE("ir_timer_repeat", 32),
STACK_USAGE("rc_repeat", 72),
STACK_USAGE("ir_do_keydown", 80),
STACK_USAGE("rc_keydown", 72),
STACK_USAGE("rc_keydown_notimeout", 72),
STACK_USAGE("rc_validate_scancode", 0),
STACK_USAGE("rc_open", 24),
STACK_USAGE("ir_open", 24),
STACK_USAGE("ad_rx_machine", 16),
STACK_USAGE("__get_first_agg", 8),
STACK_USAGE("ad_agg_selection_logic", 96),
STACK_USAGE("__enable_port", 0),
STACK_USAGE("bond_3ad_initiate_agg_selection", 0),
STACK_USAGE("bond_3ad_initialize", 0),
STACK_USAGE("bond_3ad_bind_slave", 32),
STACK_USAGE("bond_3ad_unbind_slave", 80),
STACK_USAGE("bond_3ad_update_ad_actor_settings", 40),
STACK_USAGE("bond_3ad_state_machine_handler", 112),
STACK_USAGE("ad_update_actor_keys", 16),
STACK_USAGE("bond_3ad_adapter_speed_duplex_changed", 16),
STACK_USAGE("__get_link_speed", 0),
STACK_USAGE("bond_3ad_handle_link_change", 48),
STACK_USAGE("bond_3ad_set_carrier", 40),
STACK_USAGE("__bond_3ad_get_active_agg_info", 48),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("bond_3ad_get_active_agg_info", 48),
STACK_USAGE("bond_3ad_lacpdu_recv", 280),
STACK_USAGE("bond_3ad_update_lacp_rate", 48),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("bond_3ad_stats_size", 0),
STACK_USAGE("bond_3ad_stats_fill", 40),
STACK_USAGE("__get_agg_bandwidth", 16),
STACK_USAGE("ad_lacpdu_send", 32),
STACK_USAGE("alb_swap_mac_addr", 200),
STACK_USAGE("alb_fasten_mac_swap", 48),
STACK_USAGE("alb_determine_nd", 24),
STACK_USAGE("bond_alb_initialize", 32),
STACK_USAGE("bond_alb_deinitialize", 16),
STACK_USAGE("bond_do_alb_xmit", 40),
STACK_USAGE("bond_xmit_tlb_slave_get", 24),
STACK_USAGE("bond_tlb_xmit", 16),
STACK_USAGE("bond_xmit_alb_slave_get", 72),
STACK_USAGE("bond_alb_xmit", 16),
STACK_USAGE("bond_alb_monitor", 64),
STACK_USAGE("bond_alb_init_slave", 200),
STACK_USAGE("bond_alb_deinit_slave", 56),
STACK_USAGE("bond_alb_handle_link_change", 24),
STACK_USAGE("bond_alb_handle_active_change", 232),
STACK_USAGE("bond_alb_set_mac_address", 248),
STACK_USAGE("bond_alb_clear_vlan", 32),
STACK_USAGE("tlb_choose_channel", 88),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("rlb_arp_recv", 104),
STACK_USAGE("__rlb_next_rx_slave", 64),
STACK_USAGE("rlb_teach_disabled_mac_on_primary", 24),
STACK_USAGE("rlb_clear_slave", 64),
STACK_USAGE("rlb_update_client", 16),
STACK_USAGE("rlb_choose_channel", 72),
STACK_USAGE("alb_upper_dev_walk", 64),
STACK_USAGE("alb_send_learning_packets", 96),
STACK_USAGE("bond_debug_register", 0),
STACK_USAGE("bond_debug_unregister", 0),
STACK_USAGE("bond_debug_reregister", 0),
STACK_USAGE("bond_create_debugfs", 0),
STACK_USAGE("bond_destroy_debugfs", 0),
STACK_USAGE("bond_should_notify_peers", 16),
STACK_USAGE("bond_change_active_slave", 216),
STACK_USAGE("bond_select_active_slave", 56),
STACK_USAGE("slave_enable_netpoll", 24),
STACK_USAGE("bond_poll_controller", 56),
STACK_USAGE("bond_netpoll_cleanup", 32),
STACK_USAGE("bond_netpoll_setup", 72),
STACK_USAGE("bond_fix_features", 48),
STACK_USAGE("bond_compute_features", 112),
STACK_USAGE("bond_handle_frame", 40),
STACK_USAGE("bond_master_upper_dev_link", 16),
STACK_USAGE("slave_kobj_release", 16),
STACK_USAGE("bond_netdev_notify_work", 64),
STACK_USAGE("bond_queue_slave_event", 0),
STACK_USAGE("bond_lower_state_changed", 16),
STACK_USAGE("bond_enslave", 248),
STACK_USAGE("local_bh_disable", 0),
STACK_USAGE("__bond_release_one", 208),
STACK_USAGE("bond_release", 0),
STACK_USAGE("pskb_may_pull", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("eth_hw_addr_random", 32),
STACK_USAGE("bond_mode_name", 0),
STACK_USAGE("bond_mii_monitor", 216),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("bond_upper_dev_walk", 8),
STACK_USAGE("bond_handle_vlan", 48),
STACK_USAGE("bond_verify_device_path", 72),
STACK_USAGE("bond_validate_arp", 64),
STACK_USAGE("bond_dev_queue_xmit", 24),
STACK_USAGE("bond_sk_check", 0),
STACK_USAGE("bond_confirm_addr6", 0),
STACK_USAGE("bond_rcv_validate", 96),
STACK_USAGE("bond_send_validate", 192),
STACK_USAGE("bond_time_in_interval", 16),
STACK_USAGE("bond_set_active_slave", 24),
STACK_USAGE("bond_vlan_rx_add_vid", 64),
STACK_USAGE("bond_arp_monitor", 112),
STACK_USAGE("bond_netdev_event", 152),
STACK_USAGE("bond_flow_ip", 48),
STACK_USAGE("net_generic", 16),
STACK_USAGE("bond_vlan_rx_kill_vid", 56),
STACK_USAGE("__bond_xmit_hash", 168),
STACK_USAGE("bond_xmit_hash", 0),
STACK_USAGE("bond_work_init_all", 16),
STACK_USAGE("bond_open", 64),
STACK_USAGE("bond_close", 8),
STACK_USAGE("bond_get_stats", 360),
STACK_USAGE("bond_eth_ioctl", 96),
STACK_USAGE("bond_do_ioctl", 104),
STACK_USAGE("bond_siocdevprivate", 112),
STACK_USAGE("bond_change_rx_flags", 48),
STACK_USAGE("bond_set_rx_mode", 40),
STACK_USAGE("bond_neigh_init", 184),
STACK_USAGE("bond_neigh_setup", 0),
STACK_USAGE("bond_change_mtu", 56),
STACK_USAGE("bond_set_mac_address", 184),
STACK_USAGE("bond_get_slave_by_id", 48),
STACK_USAGE("bond_xmit_roundrobin_slave_get", 24),
STACK_USAGE("bond_slave_arr_work_rearm", 0),
STACK_USAGE("bond_slave_arr_handler", 16),
STACK_USAGE("bond_update_slave_arr", 72),
STACK_USAGE("bond_select_queue", 0),
STACK_USAGE("bond_xmit_get_slave", 32),
STACK_USAGE("bond_sk_get_lower_dev", 128),
STACK_USAGE("slave_last_rx", 0),
STACK_USAGE("bond_start_xmit", 88),
STACK_USAGE("bond_xdp_get_xmit_slave", 24),
STACK_USAGE("bond_xdp_xmit", 120),
STACK_USAGE("bond_xdp", 112),
STACK_USAGE("bond_set_slave_inactive_flags", 24),
STACK_USAGE("bond_ethtool_get_link_ksettings", 48),
STACK_USAGE("bond_ethtool_get_drvinfo", 8),
STACK_USAGE("bond_ethtool_get_ts_info", 24),
STACK_USAGE("bond_destructor", 8),
STACK_USAGE("bond_setup", 8),
STACK_USAGE("bond_uninit", 48),
STACK_USAGE("bond_set_slave_link_state", 24),
STACK_USAGE("bond_init", 64),
STACK_USAGE("bond_confirm_addr", 32),
STACK_USAGE("bond_get_num_tx_queues", 0),
STACK_USAGE("bond_create", 32),
STACK_USAGE("bond_net_init", 16),
STACK_USAGE("bond_net_exit_batch", 64),
STACK_USAGE("bonding_init", 216),
STACK_USAGE("bonding_exit", 0),
STACK_USAGE("bond_set_carrier", 32),
STACK_USAGE("bond_update_speed_duplex", 120),
STACK_USAGE("bond_slave_link_status", 0),
STACK_USAGE("bond_check_dev_link", 80),
STACK_USAGE("bond_tx_drop", 8),
STACK_USAGE("bond_resend_igmp_join_requests_delayed", 8),
STACK_USAGE("bond_hw_addr_flush", 32),
STACK_USAGE("bond_set_dev_addr", 24),
STACK_USAGE("bond_validate", 0),
STACK_USAGE("bond_slave_changelink", 104),
STACK_USAGE("bond_changelink", 160),
STACK_USAGE("nla_nest_cancel", 0),
STACK_USAGE("bond_get_slave_size", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("bond_fill_slave_info", 48),
STACK_USAGE("bond_newlink", 16),
STACK_USAGE("bond_get_size", 0),
STACK_USAGE("bond_fill_info", 88),
STACK_USAGE("bond_get_linkxstats_size", 0),
STACK_USAGE("bond_fill_linkxstats", 40),
STACK_USAGE("bond_netlink_init", 0),
STACK_USAGE("bond_netlink_fini", 0),
STACK_USAGE("bond_option_updelay_set", 16),
STACK_USAGE("bond_option_downdelay_set", 16),
STACK_USAGE("bond_option_peer_notif_delay_set", 16),
STACK_USAGE("bond_option_use_carrier_set", 0),
STACK_USAGE("bond_option_arp_interval_set", 8),
STACK_USAGE("bond_option_arp_ip_target_add", 64),
STACK_USAGE("bond_option_arp_ip_targets_clear", 40),
STACK_USAGE("bond_option_arp_ip_targets_set", 56),
STACK_USAGE("bond_option_ns_ip6_targets_clear", 64),
STACK_USAGE("bond_option_ns_ip6_targets_set", 64),
STACK_USAGE("bond_option_arp_validate_set", 0),
STACK_USAGE("bond_option_arp_all_targets_set", 0),
STACK_USAGE("bond_option_missed_max_set", 0),
STACK_USAGE("bond_option_primary_set", 48),
STACK_USAGE("bond_option_primary_reselect_set", 0),
STACK_USAGE("bond_option_fail_over_mac_set", 0),
STACK_USAGE("bond_option_xmit_hash_policy_set", 0),
STACK_USAGE("bond_option_resend_igmp_set", 0),
STACK_USAGE("bond_option_num_peer_notif_set", 0),
STACK_USAGE("bond_option_all_slaves_active_set", 40),
STACK_USAGE("bond_option_min_links_set", 0),
STACK_USAGE("bond_option_lp_interval_set", 0),
STACK_USAGE("bond_option_pps_set", 8),
STACK_USAGE("bond_option_lacp_active_set", 0),
STACK_USAGE("bond_option_lacp_rate_set", 0),
STACK_USAGE("bond_option_ad_select_set", 0),
STACK_USAGE("bond_option_queue_id_set", 64),
STACK_USAGE("bond_option_slaves_set", 56),
STACK_USAGE("bond_option_tlb_dynamic_lb_set", 0),
STACK_USAGE("bond_option_ad_actor_sys_prio_set", 0),
STACK_USAGE("bond_option_ad_actor_system_set", 32),
STACK_USAGE("bond_option_ad_user_port_key_set", 0),
STACK_USAGE("bond_opt_get_by_name", 32),
STACK_USAGE("bond_opt_get_val", 0),
STACK_USAGE("bond_opt_parse", 136),
STACK_USAGE("__bond_opt_set", 40),
STACK_USAGE("__bond_opt_set_notify", 24),
STACK_USAGE("bond_opt_tryset_rtnl", 72),
STACK_USAGE("bond_opt_get", 0),
STACK_USAGE("bond_option_mode_set", 0),
STACK_USAGE("bond_option_active_slave_set", 72),
STACK_USAGE("bond_option_miimon_set", 8),
STACK_USAGE("bond_info_seq_start", 48),
STACK_USAGE("bond_info_seq_show", 64),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("bond_create_proc_entry", 16),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("bond_remove_proc_entry", 16),
STACK_USAGE("bond_create_proc_dir", 8),
STACK_USAGE("bond_destroy_proc_dir", 8),
STACK_USAGE("bond_info_seq_next", 56),
STACK_USAGE("net_generic", 16),
STACK_USAGE("bond_info_seq_stop", 0),
STACK_USAGE("bonding_sysfs_store_option", 32),
STACK_USAGE("bonding_show_slaves", 48),
STACK_USAGE("bonding_show_mode", 16),
STACK_USAGE("bonding_show_xmit_hash", 16),
STACK_USAGE("bonding_show_arp_validate", 16),
STACK_USAGE("bonding_show_arp_all_targets", 16),
STACK_USAGE("bonding_show_fail_over_mac", 16),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("bonding_show_arp_interval", 0),
STACK_USAGE("bonding_show_arp_targets", 32),
STACK_USAGE("bonding_show_missed_max", 0),
STACK_USAGE("bonding_show_downdelay", 0),
STACK_USAGE("bonding_show_updelay", 0),
STACK_USAGE("bonding_show_peer_notif_delay", 0),
STACK_USAGE("bonding_show_bonds", 32),
STACK_USAGE("bonding_show_lacp_active", 16),
STACK_USAGE("bonding_show_lacp_rate", 16),
STACK_USAGE("bonding_show_min_links", 0),
STACK_USAGE("bonding_show_ad_select", 16),
STACK_USAGE("bonding_show_num_peer_notif", 0),
STACK_USAGE("bonding_show_miimon", 0),
STACK_USAGE("bonding_show_primary", 16),
STACK_USAGE("bonding_show_primary_reselect", 16),
STACK_USAGE("bonding_show_carrier", 0),
STACK_USAGE("bonding_show_active_slave", 24),
STACK_USAGE("bonding_show_mii_status", 0),
STACK_USAGE("bonding_show_ad_aggregator", 40),
STACK_USAGE("bonding_show_ad_num_ports", 40),
STACK_USAGE("bonding_show_ad_actor_key", 48),
STACK_USAGE("bonding_show_ad_partner_key", 48),
STACK_USAGE("bonding_show_ad_partner_mac", 48),
STACK_USAGE("bonding_show_queue_id", 48),
STACK_USAGE("bonding_show_slaves_active", 0),
STACK_USAGE("bonding_show_resend_igmp", 0),
STACK_USAGE("bonding_show_lp_interval", 0),
STACK_USAGE("bonding_show_tlb_dynamic_lb", 0),
STACK_USAGE("bonding_show_packets_per_slave", 0),
STACK_USAGE("bonding_show_ad_actor_sys_prio", 16),
STACK_USAGE("bonding_show_ad_actor_system", 16),
STACK_USAGE("bonding_show_ad_user_port_key", 16),
STACK_USAGE("bonding_store_bonds", 88),
STACK_USAGE("bond_create_sysfs", 16),
STACK_USAGE("bond_destroy_sysfs", 0),
STACK_USAGE("bond_prepare_sysfs_group", 0),
STACK_USAGE("slave_show", 0),
STACK_USAGE("bond_sysfs_slave_add", 0),
STACK_USAGE("bond_sysfs_slave_del", 0),
STACK_USAGE("state_show", 0),
STACK_USAGE("mii_status_show", 8),
STACK_USAGE("link_failure_count_show", 0),
STACK_USAGE("perm_hwaddr_show", 0),
STACK_USAGE("queue_id_show", 0),
STACK_USAGE("ad_aggregator_id_show", 0),
STACK_USAGE("ad_actor_oper_port_state_show", 0),
STACK_USAGE("ad_partner_oper_port_state_show", 0),
STACK_USAGE("dummy_get_drvinfo", 0),
STACK_USAGE("dummy_setup", 32),
STACK_USAGE("dummy_validate", 0),
STACK_USAGE("dummy_init_one", 24),
STACK_USAGE("dummy_init_module", 16),
STACK_USAGE("dummy_cleanup_module", 0),
STACK_USAGE("set_multicast_list", 0),
STACK_USAGE("dummy_get_stats64", 0),
STACK_USAGE("dummy_xmit", 24),
STACK_USAGE("dummy_dev_init", 8),
STACK_USAGE("dummy_dev_uninit", 0),
STACK_USAGE("dummy_change_carrier", 0),
STACK_USAGE("tg3_enable_ints", 40),
STACK_USAGE("tg3_init_hw", 16),
STACK_USAGE("tg3_show_temp", 48),
STACK_USAGE("tg3_switch_clocks", 16),
STACK_USAGE("tg3_timer", 48),
STACK_USAGE("tg3_timer_init", 0),
STACK_USAGE("tg3_restart_hw", 32),
STACK_USAGE("__tg3_readphy", 64),
STACK_USAGE("tg3_reset_task", 48),
STACK_USAGE("tg3_request_irq", 32),
STACK_USAGE("tg3_test_interrupt", 48),
STACK_USAGE("tg3_start", 280),
STACK_USAGE("tg3_stop", 32),
STACK_USAGE("tg3_open", 40),
STACK_USAGE("__tg3_writephy", 64),
STACK_USAGE("tg3_close", 24),
STACK_USAGE("tg3_get_estats", 0),
STACK_USAGE("tg3_get_nstats", 48),
STACK_USAGE("tg3_get_regs_len", 0),
STACK_USAGE("tg3_get_regs", 24),
STACK_USAGE("tg3_get_eeprom_len", 0),
STACK_USAGE("tg3_get_eeprom", 136),
STACK_USAGE("tg3_set_eeprom", 152),
STACK_USAGE("tg3_get_link_ksettings", 16),
STACK_USAGE("tg3_set_link_ksettings", 48),
STACK_USAGE("tg3_get_drvinfo", 16),
STACK_USAGE("tg3_get_wol", 0),
STACK_USAGE("tg3_set_wol", 16),
STACK_USAGE("tg3_get_msglevel", 0),
STACK_USAGE("tg3_set_msglevel", 0),
STACK_USAGE("tg3_nway_reset", 48),
STACK_USAGE("tg3_get_ringparam", 0),
STACK_USAGE("tg3_set_ringparam", 48),
STACK_USAGE("tg3_get_pauseparam", 0),
STACK_USAGE("tg3_set_pauseparam", 48),
STACK_USAGE("tg3_get_sset_count", 0),
STACK_USAGE("tg3_get_rxnfc", 0),
STACK_USAGE("tg3_get_rxfh_indir_size", 0),
STACK_USAGE("tg3_get_rxfh", 0),
STACK_USAGE("tg3_set_rxfh", 40),
STACK_USAGE("tg3_get_channels", 16),
STACK_USAGE("tg3_set_channels", 24),
STACK_USAGE("tg3_get_strings", 0),
STACK_USAGE("tg3_set_phys_id", 0),
STACK_USAGE("tg3_get_ethtool_stats", 0),
STACK_USAGE("tg3_vpd_readblock", 80),
STACK_USAGE("tg3_phydsp_write", 16),
STACK_USAGE("tg3_phy_toggle_auxctl_smdsp", 32),
STACK_USAGE("tg3_run_loopback", 136),
STACK_USAGE("tg3_self_test", 232),
STACK_USAGE("tg3_mdio_read", 48),
STACK_USAGE("tg3_ioctl", 64),
STACK_USAGE("tg3_mdio_write", 40),
STACK_USAGE("tg3_get_coalesce", 0),
STACK_USAGE("tg3_set_coalesce", 40),
STACK_USAGE("tg3_set_eee", 24),
STACK_USAGE("tg3_get_eee", 0),
STACK_USAGE("tg3_mdio_config_5785", 16),
STACK_USAGE("tg3_get_stats64", 24),
STACK_USAGE("tg3_set_rx_mode", 16),
STACK_USAGE("tg3_change_mtu", 48),
STACK_USAGE("tg3_get_nvram_info", 16),
STACK_USAGE("tg3_get_5752_nvram_info", 8),
STACK_USAGE("tg3_get_5755_nvram_info", 8),
STACK_USAGE("tg3_get_5761_nvram_info", 8),
STACK_USAGE("tg3_get_5717_nvram_info", 8),
STACK_USAGE("tg3_get_5720_nvram_info", 32),
STACK_USAGE("tg3_ape_otp_read", 40),
STACK_USAGE("tg3_read_hwsb_ver", 24),
STACK_USAGE("tg3_read_mgmtfw_ver", 64),
STACK_USAGE("tg3_get_invariants", 152),
STACK_USAGE("tg3_generate_fw_event", 8),
STACK_USAGE("tg3_wait_for_event_ack", 32),
STACK_USAGE("tg3_get_device_address", 56),
STACK_USAGE("tg3_ump_link_report", 72),
STACK_USAGE("tg3_do_test_dma", 48),
STACK_USAGE("tg3_stop_fw", 32),
STACK_USAGE("tg3_test_dma", 56),
STACK_USAGE("tg3_init_bufmgr_config", 0),
STACK_USAGE("tg3_phy_string", 0),
STACK_USAGE("tg3_bus_string", 24),
STACK_USAGE("tg3_init_coal", 0),
STACK_USAGE("tg3_init_one", 152),
STACK_USAGE("tg3_remove_one", 24),
STACK_USAGE("tg3_suspend", 40),
STACK_USAGE("tg3_resume", 56),
STACK_USAGE("tg3_poll_fw", 48),
STACK_USAGE("tg3_shutdown", 8),
STACK_USAGE("tg3_io_error_detected", 40),
STACK_USAGE("tg3_io_slot_reset", 40),
STACK_USAGE("tg3_io_resume", 48),
STACK_USAGE("tg3_driver_exit", 0),
STACK_USAGE("tg3_driver_init", 0),
STACK_USAGE("tg3_link_report", 8),
STACK_USAGE("local_bh_disable", 0),
STACK_USAGE("tg3_setup_flow_control", 40),
STACK_USAGE("tg3_adjust_link", 48),
STACK_USAGE("tg3_phy_start", 16),
STACK_USAGE("tg3_phy_toggle_apd", 40),
STACK_USAGE("tg3_phy_toggle_automdix", 40),
STACK_USAGE("tg3_phy_set_wirespeed", 24),
STACK_USAGE("tg3_eee_pull_config", 32),
STACK_USAGE("tg3_phy_eee_enable", 24),
STACK_USAGE("tg3_phy_reset", 112),
STACK_USAGE("tg3_pwrsrc_switch_to_vmain", 32),
STACK_USAGE("tg3_pwrsrc_die_with_vmain", 32),
STACK_USAGE("tg3_pwrsrc_switch_to_vaux", 32),
STACK_USAGE("tg3_frob_aux_power", 40),
STACK_USAGE("local_bh_enable", 0),
STACK_USAGE("tg3_nvram_logical_addr", 0),
STACK_USAGE("tg3_nvram_read", 40),
STACK_USAGE("tg3_rxcpu_pause", 24),
STACK_USAGE("tg3_halt_cpu", 16),
STACK_USAGE("tg3_load_firmware_cpu", 72),
STACK_USAGE("tg3_pause_cpu_and_set_pc", 56),
STACK_USAGE("__tg3_set_mac_addr", 24),
STACK_USAGE("tg3_power_down_prepare", 88),
STACK_USAGE("tg3_phy_autoneg_cfg", 40),
STACK_USAGE("tg3_init_5401phy_dsp", 48),
STACK_USAGE("tg3_phy_copper_an_config_ok", 56),
STACK_USAGE("tg3_write32", 0),
STACK_USAGE("tg3_setup_eee", 16),
STACK_USAGE("tg3_read32", 0),
STACK_USAGE("tg3_write_indirect_reg32", 40),
STACK_USAGE("tg3_write_flush_reg32", 0),
STACK_USAGE("tg3_read_indirect_reg32", 48),
STACK_USAGE("tg3_write_indirect_mbox", 40),
STACK_USAGE("tg3_read_indirect_mbox", 48),
STACK_USAGE("_tw32_flush", 24),
STACK_USAGE("tw32_mailbox_flush", 16),
STACK_USAGE("tg3_write32_tx_mbox", 0),
STACK_USAGE("tg3_serdes_parallel_detect", 48),
STACK_USAGE("tg3_read32_mbox_5906", 0),
STACK_USAGE("tg3_setup_phy", 184),
STACK_USAGE("tg3_write32_mbox_5906", 0),
STACK_USAGE("tg3_get_ts_info", 8),
STACK_USAGE("tg3_ptp_adjfreq", 40),
STACK_USAGE("tg3_ptp_adjtime", 24),
STACK_USAGE("tg3_ptp_gettimex", 48),
STACK_USAGE("tg3_write_mem", 48),
STACK_USAGE("tg3_ptp_settime", 40),
STACK_USAGE("tg3_ptp_enable", 56),
STACK_USAGE("tg3_ptp_init", 24),
STACK_USAGE("tg3_ptp_resume", 24),
STACK_USAGE("tg3_dump_legacy_regs", 32),
STACK_USAGE("tg3_dump_state", 48),
STACK_USAGE("tg3_read_mem", 40),
STACK_USAGE("tg3_tx_recover", 8),
STACK_USAGE("tg3_alloc_rx_data", 72),
STACK_USAGE("tg3_poll_work", 208),
STACK_USAGE("tg3_reset_task_schedule", 0),
STACK_USAGE("tg3_poll_msix", 48),
STACK_USAGE("tg3_poll", 64),
STACK_USAGE("tg3_netif_stop", 56),
STACK_USAGE("tg3_netif_start", 32),
STACK_USAGE("tg3_full_lock", 24),
STACK_USAGE("tg3_msi_1shot", 8),
STACK_USAGE("tg3_msi", 16),
STACK_USAGE("tg3_interrupt", 32),
STACK_USAGE("tg3_interrupt_tagged", 32),
STACK_USAGE("tg3_test_isr", 24),
STACK_USAGE("tg3_poll_controller", 24),
STACK_USAGE("tg3_tx_timeout", 16),
STACK_USAGE("tg3_tx_frag_set", 56),
STACK_USAGE("tg3_tx_skb_unmap", 56),
STACK_USAGE("tg3_tso_bug", 24),
STACK_USAGE("tg3_start_xmit", 224),
STACK_USAGE("tg3_ape_event_lock", 48),
STACK_USAGE("tg3_phy_lpbk_set", 56),
STACK_USAGE("tg3_set_loopback", 24),
STACK_USAGE("tg3_fix_features", 0),
STACK_USAGE("tg3_set_features", 0),
STACK_USAGE("tg3_rx_prodring_free", 48),
STACK_USAGE("tg3_ape_scratchpad_read", 80),
STACK_USAGE("tg3_rx_prodring_fini", 24),
STACK_USAGE("tg3_free_rings", 48),
STACK_USAGE("tg3_free_consistent", 40),
STACK_USAGE("tg3_stop_block", 32),
STACK_USAGE("tg3_abort_hw", 40),
STACK_USAGE("tg3_chip_reset", 56),
STACK_USAGE("tg3_halt", 32),
STACK_USAGE("tg3_set_mac_addr", 48),
STACK_USAGE("tg3_ape_driver_state_change", 16),
STACK_USAGE("__tg3_set_coalesce", 40),
STACK_USAGE("calc_crc", 0),
STACK_USAGE("__tg3_set_rx_mode", 120),
STACK_USAGE("tg3_reset_hw", 184),
STACK_USAGE("e100_get_defaults", 0),
STACK_USAGE("e100_configure", 16),
STACK_USAGE("e100_setup_ucode", 16),
STACK_USAGE("e100_load_ucode_wait", 64),
STACK_USAGE("e100_setup_iaaddr", 0),
STACK_USAGE("e100_phy_init", 48),
STACK_USAGE("e100_hw_init", 8),
STACK_USAGE("e100_multi", 0),
STACK_USAGE("e100_set_multicast_list", 16),
STACK_USAGE("e100_watchdog", 88),
STACK_USAGE("e100_xmit_prepare", 64),
STACK_USAGE("e100_xmit_frame", 32),
STACK_USAGE("e100_tx_clean", 48),
STACK_USAGE("e100_clean_cbs", 24),
STACK_USAGE("e100_alloc_cbs", 32),
STACK_USAGE("e100_rx_alloc_skb", 56),
STACK_USAGE("e100_rx_alloc_list", 56),
STACK_USAGE("e100_intr", 40),
STACK_USAGE("e100_poll", 104),
STACK_USAGE("e100_netpoll", 32),
STACK_USAGE("e100_set_mac_address", 48),
STACK_USAGE("e100_up", 40),
STACK_USAGE("e100_down", 32),
STACK_USAGE("e100_tx_timeout", 0),
STACK_USAGE("e100_tx_timeout_task", 8),
STACK_USAGE("e100_loopback_test", 40),
STACK_USAGE("e100_get_link_ksettings", 0),
STACK_USAGE("e100_set_link_ksettings", 32),
STACK_USAGE("e100_get_drvinfo", 16),
STACK_USAGE("e100_get_regs_len", 0),
STACK_USAGE("e100_get_regs", 48),
STACK_USAGE("e100_get_wol", 0),
STACK_USAGE("e100_set_wol", 16),
STACK_USAGE("e100_get_msglevel", 0),
STACK_USAGE("e100_set_msglevel", 0),
STACK_USAGE("e100_nway_reset", 0),
STACK_USAGE("e100_get_link", 0),
STACK_USAGE("e100_get_eeprom_len", 0),
STACK_USAGE("e100_get_eeprom", 0),
STACK_USAGE("e100_set_eeprom", 64),
STACK_USAGE("e100_get_ringparam", 0),
STACK_USAGE("e100_set_ringparam", 32),
STACK_USAGE("e100_diag_test", 96),
STACK_USAGE("e100_set_phys_id", 0),
STACK_USAGE("e100_get_sset_count", 0),
STACK_USAGE("e100_get_ethtool_stats", 0),
STACK_USAGE("e100_get_strings", 0),
STACK_USAGE("e100_do_ioctl", 0),
STACK_USAGE("e100_free", 8),
STACK_USAGE("e100_open", 24),
STACK_USAGE("e100_close", 0),
STACK_USAGE("e100_set_features", 0),
STACK_USAGE("e100_probe", 48),
STACK_USAGE("e100_remove", 16),
STACK_USAGE("__e100_shutdown", 40),
STACK_USAGE("e100_suspend", 16),
STACK_USAGE("e100_resume", 32),
STACK_USAGE("e100_shutdown", 24),
STACK_USAGE("e100_io_error_detected", 24),
STACK_USAGE("e100_io_slot_reset", 24),
STACK_USAGE("e100_io_resume", 16),
STACK_USAGE("e100_init_module", 0),
STACK_USAGE("e100_cleanup_module", 0),
STACK_USAGE("e100_disable_irq", 24),
STACK_USAGE("e100_hw_reset", 24),
STACK_USAGE("e100_self_test", 24),
STACK_USAGE("e100_eeprom_write", 48),
STACK_USAGE("e100_eeprom_read", 48),
STACK_USAGE("e100_eeprom_load", 56),
STACK_USAGE("e100_exec_cmd", 48),
STACK_USAGE("e100_exec_cb", 48),
STACK_USAGE("mdio_read", 0),
STACK_USAGE("mdio_write", 0),
STACK_USAGE("mdio_ctrl_hw", 64),
STACK_USAGE("mdio_ctrl_phy_82552_v", 40),
STACK_USAGE("mdio_ctrl_phy_mii_emulated", 8),
STACK_USAGE("e1000_set_phy_loopback", 56),
STACK_USAGE("e1000_get_sset_count", 0),
STACK_USAGE("e1000_diag_test", 152),
STACK_USAGE("e1000_wol_exclusion", 0),
STACK_USAGE("e1000_get_wol", 16),
STACK_USAGE("e1000_set_link_ksettings", 48),
STACK_USAGE("e1000_set_wol", 24),
STACK_USAGE("e1000_set_phys_id", 8),
STACK_USAGE("e1000_get_coalesce", 0),
STACK_USAGE("e1000_set_coalesce", 0),
STACK_USAGE("e1000_nway_reset", 0),
STACK_USAGE("e1000_get_ethtool_stats", 48),
STACK_USAGE("e1000_get_strings", 0),
STACK_USAGE("e1000_set_ethtool_ops", 0),
STACK_USAGE("e1000_get_link", 0),
STACK_USAGE("e1000_get_pauseparam", 0),
STACK_USAGE("e1000_set_pauseparam", 16),
STACK_USAGE("e1000_get_msglevel", 0),
STACK_USAGE("e1000_set_msglevel", 0),
STACK_USAGE("e1000_get_regs_len", 0),
STACK_USAGE("e1000_get_regs", 48),
STACK_USAGE("e1000_get_eeprom_len", 0),
STACK_USAGE("e1000_get_eeprom", 64),
STACK_USAGE("e1000_set_eeprom", 72),
STACK_USAGE("netdev_reg_state", 8),
STACK_USAGE("e1000_get_drvinfo", 16),
STACK_USAGE("e1000_get_ringparam", 0),
STACK_USAGE("e1000_set_ringparam", 72),
STACK_USAGE("reg_pattern_test", 16),
STACK_USAGE("reg_set_and_check", 32),
STACK_USAGE("e1000_test_intr", 0),
STACK_USAGE("e1000_get_link_ksettings", 32),
STACK_USAGE("e1000_free_desc_rings", 40),
STACK_USAGE("e1000_phy_init_script", 48),
STACK_USAGE("e1000_copper_link_postconfig", 8),
STACK_USAGE("e1000_phy_setup_autoneg", 64),
STACK_USAGE("e1000_config_collision_dist", 0),
STACK_USAGE("e1000_config_mac_to_phy", 40),
STACK_USAGE("e1000_force_mac_fc", 0),
STACK_USAGE("e1000_config_fc_after_link_up", 32),
STACK_USAGE("e1000_set_mac_type", 0),
STACK_USAGE("e1000_check_for_link", 32),
STACK_USAGE("e1000_get_speed_and_duplex", 40),
STACK_USAGE("e1000_shift_out_mdi_bits", 40),
STACK_USAGE("e1000_read_phy_reg", 56),
STACK_USAGE("e1000_write_phy_reg", 40),
STACK_USAGE("e1000_write_phy_reg_ex", 24),
STACK_USAGE("e1000_phy_hw_reset", 16),
STACK_USAGE("e1000_phy_reset", 40),
STACK_USAGE("e1000_phy_reset_dsp", 24),
STACK_USAGE("e1000_phy_igp_get_info", 40),
STACK_USAGE("e1000_phy_m88_get_info", 32),
STACK_USAGE("e1000_set_media_type", 0),
STACK_USAGE("e1000_phy_get_info", 32),
STACK_USAGE("e1000_validate_mdi_setting", 0),
STACK_USAGE("e1000_init_eeprom_params", 24),
STACK_USAGE("e1000_shift_out_ee_bits", 48),
STACK_USAGE("e1000_acquire_eeprom", 16),
STACK_USAGE("e1000_standby_eeprom", 32),
STACK_USAGE("e1000_reset_hw", 24),
STACK_USAGE("e1000_release_eeprom", 24),
STACK_USAGE("e1000_spi_eeprom_ready", 40),
STACK_USAGE("e1000_read_eeprom", 64),
STACK_USAGE("e1000_validate_eeprom_checksum", 48),
STACK_USAGE("e1000_update_eeprom_checksum", 48),
STACK_USAGE("e1000_write_eeprom", 72),
STACK_USAGE("e1000_read_mac_addr", 32),
STACK_USAGE("e1000_hash_mc_addr", 0),
STACK_USAGE("e1000_rar_set", 0),
STACK_USAGE("e1000_write_vfta", 0),
STACK_USAGE("e1000_setup_led", 32),
STACK_USAGE("e1000_cleanup_led", 32),
STACK_USAGE("e1000_led_on", 0),
STACK_USAGE("e1000_led_off", 0),
STACK_USAGE("e1000_reset_adaptive", 0),
STACK_USAGE("e1000_update_adaptive", 0),
STACK_USAGE("e1000_get_bus_info", 0),
STACK_USAGE("e1000_get_cable_length", 64),
STACK_USAGE("e1000_check_polarity", 32),
STACK_USAGE("e1000_check_downshift", 24),
STACK_USAGE("e1000_config_dsp_after_link_change", 72),
STACK_USAGE("e1000_init_hw", 24),
STACK_USAGE("e1000_enable_mng_pass_thru", 0),
STACK_USAGE("e1000_polarity_reversal_workaround", 48),
STACK_USAGE("e1000_setup_link", 64),
STACK_USAGE("e1000_alloc_dummy_rx_buffers", 0),
STACK_USAGE("e1000_remove", 32),
STACK_USAGE("e1000_sw_init", 16),
STACK_USAGE("e1000_open", 64),
STACK_USAGE("e1000_close", 64),
STACK_USAGE("e1000_setup_all_tx_resources", 64),
STACK_USAGE("e1000_setup_all_rx_resources", 64),
STACK_USAGE("e1000_configure_rx", 0),
STACK_USAGE("local_bh_disable", 0),
STACK_USAGE("e1000_free_all_tx_resources", 48),
STACK_USAGE("e1000_clean_tx_ring", 48),
STACK_USAGE("e1000_free_all_rx_resources", 48),
STACK_USAGE("e1000_clean_rx_ring", 56),
STACK_USAGE("e1000_get_hw_dev", 0),
STACK_USAGE("e1000_leave_82542_rst", 24),
STACK_USAGE("e1000_set_mac", 56),
STACK_USAGE("e1000_init_module", 8),
STACK_USAGE("e1000_set_rx_mode", 56),
STACK_USAGE("e1000_update_phy_info_task", 0),
STACK_USAGE("e1000_82547_tx_fifo_stall_task", 0),
STACK_USAGE("e1000_has_link", 16),
STACK_USAGE("e1000_watchdog", 64),
STACK_USAGE("e1000_exit_module", 0),
STACK_USAGE("e1000_tx_csum", 40),
STACK_USAGE("e1000_update_mng_vlan", 32),
STACK_USAGE("__e1000_maybe_stop_tx", 0),
STACK_USAGE("e1000_xmit_frame", 208),
STACK_USAGE("local_bh_enable", 0),
STACK_USAGE("e1000_tx_timeout", 0),
STACK_USAGE("e1000_reset_task", 8),
STACK_USAGE("e1000_change_mtu", 32),
STACK_USAGE("e1000_update_stats", 48),
STACK_USAGE("e1000_configure", 24),
STACK_USAGE("e1000_intr", 24),
STACK_USAGE("e1000_clean", 296),
STACK_USAGE("e1000_up", 8),
STACK_USAGE("e1000_tbi_should_accept", 32),
STACK_USAGE("e1000_clean_jumbo_rx_irq", 192),
STACK_USAGE("e1000_power_up_phy", 24),
STACK_USAGE("e1000_clean_rx_irq", 184),
STACK_USAGE("dma_set_mask_and_coherent", 24),
STACK_USAGE("e1000_alloc_jumbo_rx_buffers", 48),
STACK_USAGE("e1000_alloc_rx_buffers", 104),
STACK_USAGE("e1000_ioctl", 64),
STACK_USAGE("e1000_pci_set_mwi", 8),
STACK_USAGE("e1000_pci_clear_mwi", 0),
STACK_USAGE("e1000_pcix_get_mmrbc", 0),
STACK_USAGE("e1000_pcix_set_mmrbc", 0),
STACK_USAGE("e1000_io_write", 0),
STACK_USAGE("e1000_down", 64),
STACK_USAGE("e1000_vlan_filter_on_off", 32),
STACK_USAGE("e1000_vlan_rx_add_vid", 32),
STACK_USAGE("e1000_vlan_rx_kill_vid", 32),
STACK_USAGE("e1000_set_spd_dplx", 8),
STACK_USAGE("__e1000_shutdown", 48),
STACK_USAGE("e1000_suspend", 24),
STACK_USAGE("e1000_resume", 40),
STACK_USAGE("e1000_shutdown", 24),
STACK_USAGE("e1000_netpoll", 8),
STACK_USAGE("e1000_io_error_detected", 32),
STACK_USAGE("e1000_io_slot_reset", 24),
STACK_USAGE("e1000_io_resume", 8),
STACK_USAGE("e1000_reinit_locked", 8),
STACK_USAGE("e1000_reset", 16),
STACK_USAGE("e1000_dump_eeprom", 48),
STACK_USAGE("e1000_fix_features", 0),
STACK_USAGE("e1000_set_features", 24),
STACK_USAGE("e1000_probe", 72),
STACK_USAGE("e1000_validate_option", 16),
STACK_USAGE("e1000_check_options", 200),
STACK_USAGE("e1000_setup_copper_link_80003es2lan", 24),
STACK_USAGE("e1000_cfg_on_link_up_80003es2lan", 56),
STACK_USAGE("e1000_read_kmrn_reg_80003es2lan", 40),
STACK_USAGE("e1000_write_kmrn_reg_80003es2lan", 40),
STACK_USAGE("e1000_read_mac_addr_80003es2lan", 8),
STACK_USAGE("e1000_power_down_phy_copper_80003es2lan", 8),
STACK_USAGE("e1000_clear_hw_cntrs_80003es2lan", 8),
STACK_USAGE("e1000_get_variants_80003es2lan", 16),
STACK_USAGE("e1000_acquire_phy_80003es2lan", 40),
STACK_USAGE("e1000_release_phy_80003es2lan", 16),
STACK_USAGE("e1000_acquire_nvm_80003es2lan", 24),
STACK_USAGE("e1000_release_nvm_80003es2lan", 8),
STACK_USAGE("e1000_read_phy_reg_gg82563_80003es2lan", 64),
STACK_USAGE("e1000_write_phy_reg_gg82563_80003es2lan", 64),
STACK_USAGE("e1000_write_nvm_80003es2lan", 0),
STACK_USAGE("e1000_get_cfg_done_80003es2lan", 24),
STACK_USAGE("e1000_phy_force_speed_duplex_80003es2lan", 24),
STACK_USAGE("e1000_get_cable_length_80003es2lan", 24),
STACK_USAGE("e1000_get_link_up_info_80003es2lan", 16),
STACK_USAGE("e1000_reset_hw_80003es2lan", 32),
STACK_USAGE("e1000_init_hw_80003es2lan", 40),
STACK_USAGE("e1000_copper_link_setup_gg82563_80003es2lan", 24),
STACK_USAGE("e1000_init_hw_82571", 24),
STACK_USAGE("e1000_clear_vfta_82571", 32),
STACK_USAGE("e1000_check_mng_mode_82574", 16),
STACK_USAGE("e1000_led_on_82574", 0),
STACK_USAGE("e1000_check_phy_82574", 24),
STACK_USAGE("e1000_setup_link_82571", 0),
STACK_USAGE("e1000_setup_copper_link_82571", 8),
STACK_USAGE("e1000_setup_fiber_serdes_link_82571", 8),
STACK_USAGE("e1000_check_for_serdes_link_82571", 24),
STACK_USAGE("e1000_valid_led_default_82571", 16),
STACK_USAGE("e1000e_get_laa_state_82571", 0),
STACK_USAGE("e1000e_set_laa_state_82571", 0),
STACK_USAGE("e1000_read_mac_addr_82571", 8),
STACK_USAGE("e1000_power_down_phy_copper_82571", 8),
STACK_USAGE("e1000_clear_hw_cntrs_82571", 8),
STACK_USAGE("e1000_get_variants_82571", 56),
STACK_USAGE("e1000_get_hw_semaphore_82571", 24),
STACK_USAGE("e1000_put_hw_semaphore_82571", 0),
STACK_USAGE("e1000_get_hw_semaphore_82574", 32),
STACK_USAGE("e1000_put_hw_semaphore_82574", 0),
STACK_USAGE("e1000_set_d0_lplu_state_82574", 0),
STACK_USAGE("e1000_set_d3_lplu_state_82574", 0),
STACK_USAGE("e1000_acquire_nvm_82571", 24),
STACK_USAGE("e1000_release_nvm_82571", 8),
STACK_USAGE("e1000_write_nvm_82571", 48),
STACK_USAGE("e1000_update_nvm_checksum_82571", 16),
STACK_USAGE("e1000_validate_nvm_checksum_82571", 24),
STACK_USAGE("e1000_get_cfg_done_82571", 16),
STACK_USAGE("e1000_set_d0_lplu_state_82571", 32),
STACK_USAGE("e1000_reset_hw_82571", 24),
STACK_USAGE("e1000_get_link_ksettings", 16),
STACK_USAGE("e1000_free_desc_rings", 48),
STACK_USAGE("e1000e_get_sset_count", 0),
STACK_USAGE("e1000_diag_test", 160),
STACK_USAGE("e1000_get_wol", 16),
STACK_USAGE("e1000_set_wol", 0),
STACK_USAGE("e1000_set_phys_id", 24),
STACK_USAGE("e1000_get_coalesce", 0),
STACK_USAGE("e1000_set_coalesce", 24),
STACK_USAGE("e1000_nway_reset", 16),
STACK_USAGE("e1000_get_ethtool_stats", 232),
STACK_USAGE("e1000_get_strings", 0),
STACK_USAGE("e1000_get_rxnfc", 24),
STACK_USAGE("e1000e_get_eee", 64),
STACK_USAGE("e1000e_set_eee", 72),
STACK_USAGE("e1000e_get_ts_info", 16),
STACK_USAGE("e1000e_get_priv_flags", 0),
STACK_USAGE("e1000e_set_priv_flags", 0),
STACK_USAGE("e1000e_set_ethtool_ops", 0),
STACK_USAGE("e1000_set_link_ksettings", 40),
STACK_USAGE("e1000_get_pauseparam", 0),
STACK_USAGE("e1000_set_pauseparam", 32),
STACK_USAGE("e1000_get_msglevel", 0),
STACK_USAGE("e1000_set_msglevel", 0),
STACK_USAGE("e1000_get_regs_len", 0),
STACK_USAGE("e1000_get_regs", 48),
STACK_USAGE("e1000_get_eeprom_len", 0),
STACK_USAGE("e1000_get_eeprom", 88),
STACK_USAGE("e1000_set_eeprom", 72),
STACK_USAGE("e1000_get_drvinfo", 16),
STACK_USAGE("e1000_get_ringparam", 0),
STACK_USAGE("e1000_set_ringparam", 72),
STACK_USAGE("reg_pattern_test", 96),
STACK_USAGE("e1000_test_intr", 0),
STACK_USAGE("e1000_enable_ulp_lpt_lp", 40),
STACK_USAGE("e1000_check_for_copper_link_ich8lan", 64),
STACK_USAGE("e1000_get_variants_ich8lan", 40),
STACK_USAGE("e1000_acquire_nvm_ich8lan", 0),
STACK_USAGE("e1000_release_nvm_ich8lan", 0),
STACK_USAGE("e1000_acquire_swflag_ich8lan", 24),
STACK_USAGE("e1000_phy_is_accessible_pchlan", 40),
STACK_USAGE("e1000_release_swflag_ich8lan", 8),
STACK_USAGE("e1000_check_mng_mode_ich8lan", 0),
STACK_USAGE("e1000_check_mng_mode_pchlan", 0),
STACK_USAGE("e1000_rar_set_pch2lan", 40),
STACK_USAGE("e1000_rar_get_count_pch_lpt", 0),
STACK_USAGE("e1000_rar_set_pch_lpt", 40),
STACK_USAGE("e1000_check_reset_block_ich8lan", 24),
STACK_USAGE("e1000_k1_gig_workaround_hv", 48),
STACK_USAGE("e1000_configure_k1_ich8lan", 48),
STACK_USAGE("e1000_oem_bits_config_ich8lan", 48),
STACK_USAGE("e1000_toggle_lanphypc_pch_lpt", 24),
STACK_USAGE("e1000_copy_rx_addrs_to_phy_ich8lan", 72),
STACK_USAGE("e1000_lv_jumbo_workaround_ich8lan", 64),
STACK_USAGE("e1000_k1_workaround_lv", 24),
STACK_USAGE("e1000_post_phy_reset_ich8lan", 64),
STACK_USAGE("e1000_init_phy_workarounds_pchlan", 80),
STACK_USAGE("e1000_phy_hw_reset_ich8lan", 8),
STACK_USAGE("e1000_set_lplu_state_pchlan", 32),
STACK_USAGE("e1000_set_d0_lplu_state_ich8lan", 32),
STACK_USAGE("e1000_set_d3_lplu_state_ich8lan", 32),
STACK_USAGE("e1000_valid_nvm_bank_detect_ich8lan", 40),
STACK_USAGE("e1000_read_nvm_spt", 88),
STACK_USAGE("e1000_read_nvm_ich8lan", 80),
STACK_USAGE("e1000_flash_cycle_init_ich8lan", 24),
STACK_USAGE("e1000_read_flash_dword_ich8lan", 48),
STACK_USAGE("e1000_read_flash_data_ich8lan", 64),
STACK_USAGE("e1000_write_nvm_ich8lan", 40),
STACK_USAGE("e1000_update_nvm_checksum_spt", 72),
STACK_USAGE("e1000_update_nvm_checksum_ich8lan", 72),
STACK_USAGE("e1000_validate_nvm_checksum_ich8lan", 40),
STACK_USAGE("e1000e_write_protect_nvm_ich8lan", 8),
STACK_USAGE("e1000_write_flash_data32_ich8lan", 48),
STACK_USAGE("e1000_write_flash_byte_ich8lan", 48),
STACK_USAGE("e1000_retry_write_flash_dword_ich8lan", 32),
STACK_USAGE("e1000_retry_write_flash_byte_ich8lan", 32),
STACK_USAGE("e1000_erase_flash_bank_ich8lan", 64),
STACK_USAGE("e1000_valid_led_default_ich8lan", 8),
STACK_USAGE("e1000_id_led_init_pchlan", 24),
STACK_USAGE("e1000_get_bus_info_ich8lan", 8),
STACK_USAGE("e1000_reset_hw_ich8lan", 40),
STACK_USAGE("e1000_init_hw_ich8lan", 40),
STACK_USAGE("e1000_setup_link_ich8lan", 8),
STACK_USAGE("e1000_setup_copper_link_ich8lan", 24),
STACK_USAGE("e1000_setup_copper_link_pch_lpt", 8),
STACK_USAGE("e1000_get_link_up_info_ich8lan", 48),
STACK_USAGE("e1000e_set_kmrn_lock_loss_workaround_ich8lan", 0),
STACK_USAGE("e1000e_igp3_phy_powerdown_workaround_ich8lan", 48),
STACK_USAGE("e1000e_gig_downshift_workaround_ich8lan", 24),
STACK_USAGE("e1000_suspend_workarounds_ich8lan", 40),
STACK_USAGE("e1000_resume_workarounds_pchlan", 24),
STACK_USAGE("e1000_cleanup_led_ich8lan", 0),
STACK_USAGE("e1000_led_on_ich8lan", 0),
STACK_USAGE("e1000_led_off_ich8lan", 0),
STACK_USAGE("e1000_setup_led_pchlan", 0),
STACK_USAGE("e1000_cleanup_led_pchlan", 0),
STACK_USAGE("e1000_led_on_pchlan", 0),
STACK_USAGE("e1000_led_off_pchlan", 0),
STACK_USAGE("e1000_get_cfg_done_ich8lan", 40),
STACK_USAGE("e1000_power_down_phy_copper_ich8lan", 8),
STACK_USAGE("e1000_clear_hw_cntrs_ich8lan", 32),
STACK_USAGE("e1000_read_emi_reg_locked", 16),
STACK_USAGE("e1000_write_emi_reg_locked", 16),
STACK_USAGE("e1000_set_eee_pchlan", 56),
STACK_USAGE("e1000e_config_fc_after_link_up", 40),
STACK_USAGE("e1000e_init_rx_addrs", 48),
STACK_USAGE("e1000e_get_speed_and_duplex_copper", 0),
STACK_USAGE("e1000e_get_speed_and_duplex_fiber_serdes", 0),
STACK_USAGE("e1000e_get_hw_semaphore", 24),
STACK_USAGE("e1000e_put_hw_semaphore", 0),
STACK_USAGE("e1000_check_alt_mac_addr_generic", 40),
STACK_USAGE("e1000e_get_auto_rd_done", 16),
STACK_USAGE("e1000e_valid_led_default", 8),
STACK_USAGE("e1000e_id_led_init_generic", 24),
STACK_USAGE("e1000e_get_bus_info_pcie", 24),
STACK_USAGE("e1000e_setup_led_generic", 8),
STACK_USAGE("e1000e_cleanup_led_generic", 0),
STACK_USAGE("e1000e_blink_led_generic", 0),
STACK_USAGE("e1000e_led_on_generic", 0),
STACK_USAGE("e1000e_led_off_generic", 0),
STACK_USAGE("e1000e_set_pcie_no_snoop", 0),
STACK_USAGE("e1000e_disable_pcie_master", 24),
STACK_USAGE("e1000e_reset_adaptive", 0),
STACK_USAGE("e1000e_update_adaptive", 0),
STACK_USAGE("e1000e_rar_get_count_generic", 0),
STACK_USAGE("e1000e_rar_set_generic", 24),
STACK_USAGE("e1000e_update_mc_addr_list_generic", 32),
STACK_USAGE("e1000e_clear_hw_cntrs_base", 0),
STACK_USAGE("e1000e_check_for_copper_link", 24),
STACK_USAGE("e1000e_check_for_fiber_link", 16),
STACK_USAGE("e1000_set_lan_id_multi_port_pcie", 0),
STACK_USAGE("e1000e_check_for_serdes_link", 16),
STACK_USAGE("e1000_set_lan_id_single_port", 0),
STACK_USAGE("e1000e_setup_link_generic", 40),
STACK_USAGE("e1000_clear_vfta_generic", 16),
STACK_USAGE("e1000e_setup_fiber_serdes_link", 24),
STACK_USAGE("e1000e_config_collision_dist_generic", 8),
STACK_USAGE("e1000e_set_fc_watermarks", 16),
STACK_USAGE("e1000e_force_mac_fc", 8),
STACK_USAGE("e1000_write_vfta_generic", 8),
STACK_USAGE("e1000e_mng_write_dhcp_info", 56),
STACK_USAGE("e1000e_enable_mng_pass_thru", 24),
STACK_USAGE("e1000_mng_enable_host_if", 16),
STACK_USAGE("e1000e_check_mng_mode_generic", 0),
STACK_USAGE("e1000e_enable_tx_pkt_filtering", 8),
STACK_USAGE("e1000_print_hw_hang", 80),
STACK_USAGE("e1000e_tx_hwtstamp_work", 56),
STACK_USAGE("e1000_clean_tx_irq", 96),
STACK_USAGE("__ew32", 32),
STACK_USAGE("e1000_clean_rx_irq_ps", 160),
STACK_USAGE("e1000_clean_jumbo_rx_irq", 144),
STACK_USAGE("e1000_clean_rx_ring", 72),
STACK_USAGE("e1000e_dump_ps_pages", 32),
STACK_USAGE("e1000e_downshift_workaround", 0),
STACK_USAGE("e1000_intr_msi", 32),
STACK_USAGE("e1000_intr", 32),
STACK_USAGE("skb_get", 8),
STACK_USAGE("e1000_msix_other", 32),
STACK_USAGE("e1000_intr_msix_tx", 24),
STACK_USAGE("e1000e_dump", 104),
STACK_USAGE("e1000_intr_msix_rx", 16),
STACK_USAGE("e1000_configure_msix", 40),
STACK_USAGE("e1000e_reset_interrupt_capability", 8),
STACK_USAGE("e1000e_set_interrupt_capability", 8),
STACK_USAGE("e1000_request_irq", 32),
STACK_USAGE("e1000_irq_disable", 16),
STACK_USAGE("e1000_irq_enable", 24),
STACK_USAGE("e1000e_get_hw_control", 24),
STACK_USAGE("e1000e_release_hw_control", 24),
STACK_USAGE("e1000e_setup_tx_resources", 24),
STACK_USAGE("e1000e_setup_rx_resources", 40),
STACK_USAGE("e1000_clean_tx_ring", 48),
STACK_USAGE("e1000e_free_tx_resources", 16),
STACK_USAGE("e1000e_free_rx_resources", 24),
STACK_USAGE("e1000e_write_itr", 24),
STACK_USAGE("e1000e_poll", 56),
STACK_USAGE("e1000_vlan_rx_add_vid", 16),
STACK_USAGE("e1000_vlan_rx_kill_vid", 16),
STACK_USAGE("e1000_update_mng_vlan", 40),
STACK_USAGE("e1000_init_manageability_pt", 48),
STACK_USAGE("e1000_setup_rctl", 56),
STACK_USAGE("netdev_sent_queue", 0),
STACK_USAGE("e1000e_set_rx_mode", 72),
STACK_USAGE("e1000e_get_base_timinca", 32),
STACK_USAGE("e1000e_config_hwtstamp", 56),
STACK_USAGE("e1000_configure", 136),
STACK_USAGE("e1000e_power_up_phy", 16),
STACK_USAGE("e1000_flush_desc_rings", 56),
STACK_USAGE("e1000e_reset", 72),
STACK_USAGE("e1000e_trigger_lsc", 16),
STACK_USAGE("e1000e_up", 8),
STACK_USAGE("e1000e_flush_descriptors", 32),
STACK_USAGE("e1000e_down", 48),
STACK_USAGE("e1000e_reinit_locked", 8),
STACK_USAGE("e1000e_read_systim", 56),
STACK_USAGE("e1000e_cyclecounter_read", 0),
STACK_USAGE("e1000_sw_init", 8),
STACK_USAGE("e1000_intr_msi_test", 0),
STACK_USAGE("e1000_test_msi", 40),
STACK_USAGE("e1000e_open", 56),
STACK_USAGE("e1000e_close", 48),
STACK_USAGE("e1000_set_mac", 40),
STACK_USAGE("e1000e_update_phy_task", 16),
STACK_USAGE("e1000_update_phy_info", 0),
STACK_USAGE("e1000e_update_stats", 48),
STACK_USAGE("e1000_phy_read_status", 48),
STACK_USAGE("e1000_watchdog", 0),
STACK_USAGE("e1000_watchdog_task", 96),
STACK_USAGE("e1000_receive_skb", 80),
STACK_USAGE("e1000_tx_csum", 48),
STACK_USAGE("e1000_tx_map", 128),
STACK_USAGE("e1000_tx_queue", 24),
STACK_USAGE("e1000_maybe_stop_tx", 0),
STACK_USAGE("e1000_xmit_frame", 112),
STACK_USAGE("e1000_tx_timeout", 0),
STACK_USAGE("e1000_reset_task", 16),
STACK_USAGE("e1000e_get_stats64", 32),
STACK_USAGE("e1000_change_mtu", 32),
STACK_USAGE("e1000e_update_rdt_wa", 32),
STACK_USAGE("e1000e_update_tdt_wa", 32),
STACK_USAGE("e1000_ioctl", 40),
STACK_USAGE("e1000_alloc_rx_buffers", 104),
STACK_USAGE("e1000e_pm_freeze", 24),
STACK_USAGE("__e1000_shutdown", 128),
STACK_USAGE("__e1000e_disable_aspm", 56),
STACK_USAGE("e1000e_pm_thaw", 24),
STACK_USAGE("__e1000_resume", 48),
STACK_USAGE("e1000e_pm_prepare", 0),
STACK_USAGE("e1000e_pm_suspend", 64),
STACK_USAGE("e1000e_pm_resume", 80),
STACK_USAGE("e1000e_pm_runtime_idle", 32),
STACK_USAGE("e1000e_pm_runtime_resume", 16),
STACK_USAGE("e1000e_pm_runtime_suspend", 40),
STACK_USAGE("e1000_shutdown", 24),
STACK_USAGE("e1000_alloc_rx_buffers_ps", 112),
STACK_USAGE("e1000_netpoll", 24),
STACK_USAGE("e1000_io_error_detected", 16),
STACK_USAGE("e1000_io_slot_reset", 24),
STACK_USAGE("e1000_io_resume", 24),
STACK_USAGE("e1000_print_device_info", 40),
STACK_USAGE("e1000_eeprom_checks", 24),
STACK_USAGE("e1000_fix_features", 0),
STACK_USAGE("e1000_set_features", 0),
STACK_USAGE("e1000_probe", 88),
STACK_USAGE("e1000_remove", 24),
STACK_USAGE("e1000_init_module", 0),
STACK_USAGE("e1000_exit_module", 0),
STACK_USAGE("e1000_alloc_jumbo_rx_buffers", 64),
STACK_USAGE("e1000_clean_rx_irq", 160),
STACK_USAGE("e1000e_poll_eerd_eewr_done", 24),
STACK_USAGE("e1000e_acquire_nvm", 24),
STACK_USAGE("e1000e_release_nvm", 8),
STACK_USAGE("e1000e_read_nvm_eerd", 48),
STACK_USAGE("e1000e_write_nvm_spi", 72),
STACK_USAGE("e1000_read_pba_string_generic", 56),
STACK_USAGE("e1000_shift_out_eec_bits", 48),
STACK_USAGE("e1000_read_mac_addr_generic", 0),
STACK_USAGE("e1000e_validate_nvm_checksum_generic", 48),
STACK_USAGE("e1000e_update_nvm_checksum_generic", 48),
STACK_USAGE("e1000e_reload_nvm_generic", 8),
STACK_USAGE("e1000_validate_option", 16),
STACK_USAGE("e1000e_check_options", 48),
STACK_USAGE("e1000e_setup_copper_link", 40),
STACK_USAGE("e1000e_phy_force_speed_duplex_igp", 32),
STACK_USAGE("e1000e_read_phy_reg_mdic", 32),
STACK_USAGE("e1000e_phy_force_speed_duplex_m88", 32),
STACK_USAGE("e1000_phy_force_speed_duplex_ife", 32),
STACK_USAGE("e1000e_phy_force_speed_duplex_setup", 16),
STACK_USAGE("e1000e_set_d3_lplu_state", 32),
STACK_USAGE("e1000e_check_downshift", 32),
STACK_USAGE("e1000_check_polarity_m88", 24),
STACK_USAGE("e1000_check_polarity_igp", 40),
STACK_USAGE("e1000_check_polarity_ife", 32),
STACK_USAGE("e1000e_phy_has_link_generic", 80),
STACK_USAGE("e1000e_get_cable_length_m88", 24),
STACK_USAGE("e1000e_get_cable_length_igp_2", 64),
STACK_USAGE("e1000e_write_phy_reg_mdic", 24),
STACK_USAGE("e1000e_get_phy_info_m88", 32),
STACK_USAGE("e1000e_get_phy_info_igp", 40),
STACK_USAGE("e1000_get_phy_info_ife", 32),
STACK_USAGE("e1000e_phy_sw_reset", 24),
STACK_USAGE("e1000e_phy_hw_reset_generic", 16),
STACK_USAGE("e1000e_get_cfg_done_generic", 0),
STACK_USAGE("e1000e_phy_init_script_igp3", 8),
STACK_USAGE("e1000e_get_phy_type_from_id", 0),
STACK_USAGE("e1000e_determine_phy_address", 48),
STACK_USAGE("e1000e_write_phy_reg_bm", 56),
STACK_USAGE("e1000e_read_phy_reg_bm", 40),
STACK_USAGE("e1000e_read_phy_reg_bm2", 32),
STACK_USAGE("e1000e_read_phy_reg_m88", 32),
STACK_USAGE("e1000e_write_phy_reg_bm2", 48),
STACK_USAGE("e1000_enable_phy_wakeup_reg_access_bm", 32),
STACK_USAGE("e1000_disable_phy_wakeup_reg_access_bm", 32),
STACK_USAGE("e1000_access_phy_wakeup_reg_bm", 64),
STACK_USAGE("e1000_power_up_phy_copper", 24),
STACK_USAGE("e1000_power_down_phy_copper", 24),
STACK_USAGE("e1000e_write_phy_reg_m88", 32),
STACK_USAGE("__e1000_read_phy_reg_hv", 64),
STACK_USAGE("e1000_read_phy_reg_hv", 0),
STACK_USAGE("e1000_read_phy_reg_hv_locked", 0),
STACK_USAGE("e1000_read_phy_reg_page_hv", 0),
STACK_USAGE("__e1000_write_phy_reg_hv", 72),
STACK_USAGE("e1000_write_phy_reg_hv", 0),
STACK_USAGE("e1000_write_phy_reg_hv_locked", 0),
STACK_USAGE("e1000_write_phy_reg_page_hv", 0),
STACK_USAGE("e1000_set_page_igp", 16),
STACK_USAGE("e1000_access_phy_debug_regs_hv", 48),
STACK_USAGE("e1000_link_stall_workaround_hv", 32),
STACK_USAGE("e1000_check_polarity_82577", 24),
STACK_USAGE("e1000_phy_force_speed_duplex_82577", 48),
STACK_USAGE("e1000_get_phy_info_82577", 24),
STACK_USAGE("__e1000e_read_phy_reg_igp", 40),
STACK_USAGE("e1000_get_cable_length_82577", 24),
STACK_USAGE("e1000e_read_phy_reg_igp", 0),
STACK_USAGE("e1000e_read_phy_reg_igp_locked", 0),
STACK_USAGE("__e1000e_write_phy_reg_igp", 40),
STACK_USAGE("e1000e_write_phy_reg_igp", 0),
STACK_USAGE("e1000e_write_phy_reg_igp_locked", 0),
STACK_USAGE("e1000e_check_reset_block_generic", 0),
STACK_USAGE("e1000e_read_kmrn_reg", 24),
STACK_USAGE("e1000e_read_kmrn_reg_locked", 16),
STACK_USAGE("e1000e_write_kmrn_reg", 24),
STACK_USAGE("e1000e_write_kmrn_reg_locked", 8),
STACK_USAGE("e1000_set_master_slave_mode", 24),
STACK_USAGE("e1000e_get_phy_id", 24),
STACK_USAGE("e1000_copper_link_setup_82577", 24),
STACK_USAGE("e1000e_copper_link_setup_m88", 24),
STACK_USAGE("e1000e_copper_link_setup_igp", 24),
STACK_USAGE("e1000e_phy_reset_dsp", 8),
STACK_USAGE("e1000e_phc_get_syncdevicetime", 48),
STACK_USAGE("e1000e_phc_getcrosststamp", 0),
STACK_USAGE("e1000e_phc_gettimex", 48),
STACK_USAGE("e1000e_phc_settime", 32),
STACK_USAGE("e1000e_phc_enable", 0),
STACK_USAGE("e1000e_systim_overflow_work", 8),
STACK_USAGE("e1000e_phc_adjfreq", 64),
STACK_USAGE("e1000e_ptp_init", 24),
STACK_USAGE("e1000e_ptp_remove", 8),
STACK_USAGE("e1000e_phc_adjtime", 24),
STACK_USAGE("sky2_ramset", 0),
STACK_USAGE("sky2_rx_map_skb", 56),
STACK_USAGE("rx_set_rss", 88),
STACK_USAGE("sky2_rx_clean", 80),
STACK_USAGE("sky2_ioctl", 56),
STACK_USAGE("sky2_rx_alloc", 40),
STACK_USAGE("sky2_alloc_rx_skbs", 48),
STACK_USAGE("sky2_rx_start", 40),
STACK_USAGE("sky2_free_buffers", 16),
STACK_USAGE("sky2_hw_up", 88),
STACK_USAGE("sky2_setup_irq", 24),
STACK_USAGE("sky2_open", 48),
STACK_USAGE("sky2_xmit_frame", 72),
STACK_USAGE("local_bh_disable", 0),
STACK_USAGE("sky2_tx_complete", 72),
STACK_USAGE("sky2_hw_down", 120),
STACK_USAGE("sky2_close", 24),
STACK_USAGE("sky2_link_up", 40),
STACK_USAGE("sky2_phy_intr", 80),
STACK_USAGE("sky2_tx_timeout", 16),
STACK_USAGE("sky2_change_mtu", 96),
STACK_USAGE("sky2_hw_error", 40),
STACK_USAGE("sky2_watchdog", 24),
STACK_USAGE("sky2_err_intr", 48),
STACK_USAGE("sky2_poll", 224),
STACK_USAGE("sky2_intr", 16),
STACK_USAGE("sky2_netpoll", 8),
STACK_USAGE("sky2_us2clk", 0),
STACK_USAGE("local_bh_enable", 0),
STACK_USAGE("sky2_reset", 16),
STACK_USAGE("sky2_phy_init", 80),
STACK_USAGE("sky2_all_down", 80),
STACK_USAGE("sky2_all_up", 40),
STACK_USAGE("sky2_restart", 8),
STACK_USAGE("sky2_get_wol", 0),
STACK_USAGE("sky2_set_wol", 24),
STACK_USAGE("sky2_get_link_ksettings", 16),
STACK_USAGE("sky2_set_link_ksettings", 56),
STACK_USAGE("sky2_get_drvinfo", 16),
STACK_USAGE("sky2_get_msglevel", 0),
STACK_USAGE("sky2_nway_reset", 16),
STACK_USAGE("sky2_set_msglevel", 0),
STACK_USAGE("sky2_get_sset_count", 0),
STACK_USAGE("sky2_get_ethtool_stats", 16),
STACK_USAGE("sky2_get_strings", 0),
STACK_USAGE("sky2_set_mac_address", 40),
STACK_USAGE("sky2_set_multicast", 64),
STACK_USAGE("sky2_get_stats", 8),
STACK_USAGE("sky2_led", 64),
STACK_USAGE("sky2_set_phys_id", 0),
STACK_USAGE("sky2_get_pauseparam", 0),
STACK_USAGE("sky2_set_pauseparam", 16),
STACK_USAGE("sky2_get_coalesce", 0),
STACK_USAGE("sky2_set_coalesce", 16),
STACK_USAGE("sky2_get_ringparam", 0),
STACK_USAGE("sky2_set_ringparam", 32),
STACK_USAGE("sky2_get_regs_len", 0),
STACK_USAGE("sky2_get_regs", 48),
STACK_USAGE("sky2_get_eeprom_len", 0),
STACK_USAGE("sky2_get_eeprom", 8),
STACK_USAGE("sky2_set_eeprom", 0),
STACK_USAGE("sky2_fix_features", 16),
STACK_USAGE("sky2_set_features", 24),
STACK_USAGE("sky2_init_netdev", 80),
STACK_USAGE("sky2_test_intr", 8),
STACK_USAGE("sky2_test_msi", 88),
STACK_USAGE("sky2_name", 8),
STACK_USAGE("sky2_probe", 104),
STACK_USAGE("sky2_remove", 32),
STACK_USAGE("sky2_suspend", 64),
STACK_USAGE("sky2_resume", 40),
STACK_USAGE("sky2_shutdown", 32),
STACK_USAGE("sky2_init_module", 0),
STACK_USAGE("sky2_cleanup_module", 0),
STACK_USAGE("sky2_phy_power_up", 32),
STACK_USAGE("free_rings", 8),
STACK_USAGE("nv_enable_irq", 8),
STACK_USAGE("nv_disable_irq", 8),
STACK_USAGE("mii_rw", 48),
STACK_USAGE("phy_reset", 48),
STACK_USAGE("init_realtek_8211b", 24),
STACK_USAGE("init_realtek_8201", 40),
STACK_USAGE("phy_init", 64),
STACK_USAGE("nv_stop_tx", 32),
STACK_USAGE("nv_start_rxtx", 0),
STACK_USAGE("nv_stop_rxtx", 32),
STACK_USAGE("nv_txrx_reset", 16),
STACK_USAGE("nv_mac_reset", 40),
STACK_USAGE("nv_update_stats", 16),
STACK_USAGE("nv_get_stats64", 72),
STACK_USAGE("nv_alloc_rx", 64),
STACK_USAGE("nv_alloc_rx_optimized", 64),
STACK_USAGE("local_bh_disable", 0),
STACK_USAGE("nv_do_rx_refill", 8),
STACK_USAGE("nv_init_tx", 8),
STACK_USAGE("nv_init_ring", 8),
STACK_USAGE("nv_drain_tx", 48),
STACK_USAGE("nv_drain_rxtx", 32),
STACK_USAGE("nv_legacybackoff_reseed", 64),
STACK_USAGE("nv_gear_backoff_reseed", 56),
STACK_USAGE("nv_start_xmit", 128),
STACK_USAGE("nv_start_xmit_optimized", 128),
STACK_USAGE("nv_tx_done", 56),
STACK_USAGE("nv_tx_done_optimized", 56),
STACK_USAGE("eth_hw_addr_random", 32),
STACK_USAGE("nv_tx_timeout", 72),
STACK_USAGE("nv_rx_process_optimized", 56),
STACK_USAGE("nv_change_mtu", 48),
STACK_USAGE("nv_copy_mac_to_hw", 0),
STACK_USAGE("nv_set_mac_address", 48),
STACK_USAGE("local_bh_enable", 0),
STACK_USAGE("nv_set_multicast", 88),
STACK_USAGE("nv_update_pause", 0),
STACK_USAGE("nv_force_linkspeed", 32),
STACK_USAGE("nv_update_linkspeed", 72),
STACK_USAGE("nv_linkchange", 32),
STACK_USAGE("nv_link_irq", 0),
STACK_USAGE("nv_nic_irq", 24),
STACK_USAGE("nv_nic_irq_optimized", 24),
STACK_USAGE("nv_nic_irq_tx", 48),
STACK_USAGE("nv_napi_poll", 104),
STACK_USAGE("nv_nic_irq_rx", 48),
STACK_USAGE("nv_nic_irq_other", 56),
STACK_USAGE("nv_nic_irq_test", 16),
STACK_USAGE("nv_request_irq", 32),
STACK_USAGE("nv_free_irq", 16),
STACK_USAGE("nv_do_nic_poll", 88),
STACK_USAGE("nv_poll_controller", 0),
STACK_USAGE("nv_do_stats_poll", 24),
STACK_USAGE("nv_get_drvinfo", 16),
STACK_USAGE("nv_get_wol", 24),
STACK_USAGE("nv_set_wol", 32),
STACK_USAGE("nv_get_link_ksettings", 56),
STACK_USAGE("nv_set_link_ksettings", 64),
STACK_USAGE("nv_get_regs_len", 0),
STACK_USAGE("nv_get_regs", 32),
STACK_USAGE("nv_nway_reset", 48),
STACK_USAGE("nv_get_ringparam", 0),
STACK_USAGE("nv_set_ringparam", 72),
STACK_USAGE("nv_get_pauseparam", 0),
STACK_USAGE("nv_set_pauseparam", 40),
STACK_USAGE("nv_set_loopback", 64),
STACK_USAGE("nv_fix_features", 0),
STACK_USAGE("nv_vlan_mode", 24),
STACK_USAGE("nv_set_features", 48),
STACK_USAGE("nv_get_sset_count", 0),
STACK_USAGE("nv_get_ethtool_stats", 24),
STACK_USAGE("nv_self_test", 112),
STACK_USAGE("nv_get_strings", 0),
STACK_USAGE("nv_mgmt_acquire_sema", 16),
STACK_USAGE("nv_mgmt_get_version", 40),
STACK_USAGE("nv_open", 72),
STACK_USAGE("nv_close", 40),
STACK_USAGE("nv_probe", 144),
STACK_USAGE("nv_remove", 40),
STACK_USAGE("nv_suspend", 16),
STACK_USAGE("nv_resume", 16),
STACK_USAGE("nv_shutdown", 16),
STACK_USAGE("forcedeth_pci_driver_exit", 0),
STACK_USAGE("forcedeth_pci_driver_init", 0),
STACK_USAGE("setup_hw_rings", 0),
STACK_USAGE("rtl8139_remove_one", 16),
STACK_USAGE("read_eeprom", 40),
STACK_USAGE("mdio_read", 0),
STACK_USAGE("mdio_write", 24),
STACK_USAGE("rtl8139_open", 24),
STACK_USAGE("rtl8139_hw_start", 48),
STACK_USAGE("rtl8139_thread", 56),
STACK_USAGE("rtl8139_tx_timeout", 16),
STACK_USAGE("rtl8139_start_xmit", 40),
STACK_USAGE("rtl8139_weird_interrupt", 56),
STACK_USAGE("rtl8139_poll", 136),
STACK_USAGE("rtl8139_interrupt", 80),
STACK_USAGE("rtl8139_poll_controller", 16),
STACK_USAGE("rtl8139_set_mac_address", 40),
STACK_USAGE("rtl8139_close", 40),
STACK_USAGE("rtl8139_get_wol", 32),
STACK_USAGE("rtl8139_set_wol", 48),
STACK_USAGE("rtl8139_get_drvinfo", 16),
STACK_USAGE("rtl8139_get_link_ksettings", 24),
STACK_USAGE("rtl8139_set_link_ksettings", 24),
STACK_USAGE("rtl8139_nway_reset", 0),
STACK_USAGE("rtl8139_get_link", 0),
STACK_USAGE("rtl8139_get_msglevel", 0),
STACK_USAGE("rtl8139_set_msglevel", 0),
STACK_USAGE("rtl8139_get_regs_len", 0),
STACK_USAGE("rtl8139_get_regs", 32),
STACK_USAGE("rtl8139_get_sset_count", 0),
STACK_USAGE("rtl8139_get_ethtool_stats", 0),
STACK_USAGE("rtl8139_get_strings", 0),
STACK_USAGE("netdev_ioctl", 32),
STACK_USAGE("rtl8139_get_stats64", 40),
STACK_USAGE("rtl8139_set_rx_mode", 64),
STACK_USAGE("rtl8139_suspend", 32),
STACK_USAGE("rtl8139_resume", 8),
STACK_USAGE("rtl8139_init_module", 0),
STACK_USAGE("rtl8139_cleanup_module", 0),
STACK_USAGE("__rtl8139_cleanup_dev", 16),
STACK_USAGE("rtl8139_set_features", 40),
STACK_USAGE("rtl8139_init_one", 80),
STACK_USAGE("rtl_fw_write_firmware", 56),
STACK_USAGE("rtl_fw_release_firmware", 0),
STACK_USAGE("rtl_fw_request_firmware", 48),
STACK_USAGE("rtl_writephy", 40),
STACK_USAGE("rtl_readphy", 24),
STACK_USAGE("r8168dp_ocp_read", 16),
STACK_USAGE("r8168dp_oob_notify", 16),
STACK_USAGE("rtl8168ep_stop_cmac", 16),
STACK_USAGE("rtl8168_driver_start", 24),
STACK_USAGE("rtl_reset_packet_filter", 24),
STACK_USAGE("rtl8168d_efuse_read", 16),
STACK_USAGE("rtl8169_get_wol", 0),
STACK_USAGE("__rtl8169_set_wol", 40),
STACK_USAGE("rtl8169_set_wol", 0),
STACK_USAGE("rtl8169_get_drvinfo", 24),
STACK_USAGE("rtl8169_get_regs_len", 0),
STACK_USAGE("rtl8169_fix_features", 0),
STACK_USAGE("rtl8169_set_features", 0),
STACK_USAGE("rtl8169_get_regs", 24),
STACK_USAGE("rtl8169_get_sset_count", 0),
STACK_USAGE("rtl8169_do_counters", 16),
STACK_USAGE("rtl8169_get_ethtool_stats", 16),
STACK_USAGE("rtl8169_get_strings", 0),
STACK_USAGE("rtl_get_coalesce", 0),
STACK_USAGE("rtl_set_coalesce", 24),
STACK_USAGE("rtl8169_get_eee", 0),
STACK_USAGE("rtl8169_set_eee", 8),
STACK_USAGE("rtl8169_get_ringparam", 0),
STACK_USAGE("rtl8169_get_pauseparam", 32),
STACK_USAGE("rtl8169_set_pauseparam", 0),
STACK_USAGE("r8169_apply_firmware", 24),
STACK_USAGE("rtl8168_config_eee_mac", 24),
STACK_USAGE("rtl8168h_2_get_adc_bias_ioffset", 0),
STACK_USAGE("rtl_rar_set", 24),
STACK_USAGE("rtl_set_mac_address", 16),
STACK_USAGE("rtl_init_rxcfg", 0),
STACK_USAGE("rtl_jumbo_config", 16),
STACK_USAGE("rtl_enable_rxdvgate", 16),
STACK_USAGE("rtl_set_rx_mode", 56),
STACK_USAGE("rtl_set_aspm_entry_latency", 32),
STACK_USAGE("__rtl_ephy_init", 48),
STACK_USAGE("rtl_hw_aspm_clkreq_enable", 0),
STACK_USAGE("rtl_set_fifo_size", 24),
STACK_USAGE("rtl8168g_set_pause_thresholds", 24),
STACK_USAGE("rtl_hw_start_8168b", 0),
STACK_USAGE("rtl_hw_start_8168cp_1", 8),
STACK_USAGE("rtl_hw_start_8168cp_2", 8),
STACK_USAGE("rtl_hw_start_8168cp_3", 8),
STACK_USAGE("rtl_hw_start_8168c_1", 8),
STACK_USAGE("rtl_hw_start_8168c_2", 8),
STACK_USAGE("rtl_hw_start_8168c_4", 8),
STACK_USAGE("rtl_hw_start_8168d", 8),
STACK_USAGE("rtl_hw_start_8168d_4", 8),
STACK_USAGE("rtl_hw_start_8168e_1", 8),
STACK_USAGE("rtl_hw_start_8168e_2", 24),
STACK_USAGE("rtl_hw_start_8168f", 24),
STACK_USAGE("rtl_hw_start_8168f_1", 8),
STACK_USAGE("rtl_hw_start_8411", 8),
STACK_USAGE("rtl_hw_start_8168g", 24),
STACK_USAGE("rtl_hw_start_8168g_1", 8),
STACK_USAGE("rtl_hw_start_8168g_2", 8),
STACK_USAGE("rtl_hw_start_8411_2", 8),
STACK_USAGE("rtl_hw_start_8168h_1", 24),
STACK_USAGE("rtl_hw_start_8168ep", 24),
STACK_USAGE("rtl_hw_start_8168ep_1", 8),
STACK_USAGE("rtl_hw_start_8168ep_2", 8),
STACK_USAGE("rtl_hw_start_8168ep_3", 8),
STACK_USAGE("rtl_hw_start_8117", 24),
STACK_USAGE("rtl_hw_start_8102e_1", 8),
STACK_USAGE("rtl_hw_start_8102e_2", 8),
STACK_USAGE("rtl_hw_start_8102e_3", 16),
STACK_USAGE("rtl_hw_start_8401", 8),
STACK_USAGE("rtl_hw_start_8105e_1", 8),
STACK_USAGE("rtl_hw_start_8105e_2", 24),
STACK_USAGE("rtl_hw_start_8402", 24),
STACK_USAGE("rtl_hw_start_8106", 16),
STACK_USAGE("rtl_hw_start_8125_common", 24),
STACK_USAGE("rtl_hw_start_8125a_1", 8),
STACK_USAGE("rtl_hw_start_8125a_2", 8),
STACK_USAGE("rtl_hw_start_8125b", 8),
STACK_USAGE("rtl8169_change_mtu", 16),
STACK_USAGE("rtl8169_cleanup", 56),
STACK_USAGE("rtl_reset_work", 24),
STACK_USAGE("rtl8169_tx_timeout", 0),
STACK_USAGE("rtl8169_tx_map", 72),
STACK_USAGE("rtl_quirk_packet_padto", 136),
STACK_USAGE("rtl8169_start_xmit", 128),
STACK_USAGE("rtl8169_features_check", 72),
STACK_USAGE("rtl8169_pcierr_interrupt", 32),
STACK_USAGE("rtl8169_interrupt", 24),
STACK_USAGE("rtl_task", 8),
STACK_USAGE("rtl8169_poll", 136),
STACK_USAGE("r8169_phylink_handler", 24),
STACK_USAGE("rtl8169_down", 24),
STACK_USAGE("rtl8169_up", 16),
STACK_USAGE("rtl8169_close", 40),
STACK_USAGE("rtl8169_netpoll", 0),
STACK_USAGE("rtl_open", 72),
STACK_USAGE("rtl8169_get_stats64", 32),
STACK_USAGE("rtl8169_runtime_resume", 8),
STACK_USAGE("rtl8169_suspend", 8),
STACK_USAGE("rtl8169_resume", 24),
STACK_USAGE("rtl8169_runtime_suspend", 8),
STACK_USAGE("rtl8169_runtime_idle", 0),
STACK_USAGE("rtl_shutdown", 16),
STACK_USAGE("rtl_remove_one", 24),
STACK_USAGE("r8169_mdio_read_reg", 0),
STACK_USAGE("r8169_mdio_write_reg", 0),
STACK_USAGE("rtl_disable_clk", 8),
STACK_USAGE("rtl_init_one", 112),
STACK_USAGE("rtl8169_pci_driver_exit", 0),
STACK_USAGE("rtl8169_pci_driver_init", 0),
STACK_USAGE("_rtl_eri_read", 16),
STACK_USAGE("mac_mcu_write", 24),
STACK_USAGE("mac_mcu_read", 16),
STACK_USAGE("r8169_mdio_write", 16),
STACK_USAGE("r8169_mdio_read", 24),
STACK_USAGE("rtl8102e_hw_phy_config", 16),
STACK_USAGE("rtl8401_hw_phy_config", 8),
STACK_USAGE("rtl8105e_hw_phy_config", 16),
STACK_USAGE("rtl8402_hw_phy_config", 16),
STACK_USAGE("rtl8106e_hw_phy_config", 16),
STACK_USAGE("rtl8125a_1_hw_phy_config", 16),
STACK_USAGE("rtl8169s_hw_phy_config", 24),
STACK_USAGE("rtl8125a_2_hw_phy_config", 40),
STACK_USAGE("rtl8125b_hw_phy_config", 16),
STACK_USAGE("r8169_hw_phy_config", 0),
STACK_USAGE("rtl8169sb_hw_phy_config", 0),
STACK_USAGE("rtl8169scd_hw_phy_config", 24),
STACK_USAGE("rtl8169sce_hw_phy_config", 24),
STACK_USAGE("rtl8168bb_hw_phy_config", 8),
STACK_USAGE("rtl8168bef_hw_phy_config", 0),
STACK_USAGE("rtl8168cp_1_hw_phy_config", 8),
STACK_USAGE("rtl8168cp_2_hw_phy_config", 8),
STACK_USAGE("rtl8168c_1_hw_phy_config", 24),
STACK_USAGE("rtl8168c_2_hw_phy_config", 24),
STACK_USAGE("rtl8168c_3_hw_phy_config", 16),
STACK_USAGE("rtl8168d_apply_firmware_cond", 32),
STACK_USAGE("rtl8168d_1_common", 24),
STACK_USAGE("rtl8168d_1_hw_phy_config", 32),
STACK_USAGE("rtl8168d_2_hw_phy_config", 32),
STACK_USAGE("rtl8168d_4_hw_phy_config", 16),
STACK_USAGE("rtl8168e_1_hw_phy_config", 24),
STACK_USAGE("rtl8168e_2_hw_phy_config", 16),
STACK_USAGE("rtl8168f_hw_phy_config", 16),
STACK_USAGE("rtl8168f_1_hw_phy_config", 16),
STACK_USAGE("rtl8168f_2_hw_phy_config", 8),
STACK_USAGE("rtl8411_hw_phy_config", 16),
STACK_USAGE("rtl8168f_config_eee_phy", 16),
STACK_USAGE("rtl8168g_1_hw_phy_config", 16),
STACK_USAGE("rtl8168g_2_hw_phy_config", 8),
STACK_USAGE("rtl8168h_1_hw_phy_config", 32),
STACK_USAGE("rtl8168h_2_hw_phy_config", 32),
STACK_USAGE("rtl8168ep_1_hw_phy_config", 16),
STACK_USAGE("rtl8168ep_2_hw_phy_config", 16),
STACK_USAGE("rtl8117_hw_phy_config", 16),
STACK_USAGE("geneve_xmit", 184),
STACK_USAGE("geneve_change_mtu", 0),
STACK_USAGE("geneve_fill_metadata_dst", 144),
STACK_USAGE("geneve_get_drvinfo", 8),
STACK_USAGE("geneve_offload_rx_ports", 40),
STACK_USAGE("geneve_setup", 32),
STACK_USAGE("geneve_validate", 24),
STACK_USAGE("geneve_configure", 80),
STACK_USAGE("geneve_nl2info", 64),
STACK_USAGE("skb_tunnel_info_unclone", 32),
STACK_USAGE("geneve6_lookup", 0),
STACK_USAGE("geneve_link_config", 96),
STACK_USAGE("geneve_newlink", 136),
STACK_USAGE("geneve_changelink", 136),
STACK_USAGE("geneve_dellink", 0),
STACK_USAGE("geneve_get_size", 0),
STACK_USAGE("geneve_fill_info", 48),
STACK_USAGE("geneve_dev_create_fb", 648),
STACK_USAGE("geneve_netdevice_event", 0),
STACK_USAGE("geneve_init_net", 0),
STACK_USAGE("geneve_exit_batch_net", 88),
STACK_USAGE("geneve_init_module", 8),
STACK_USAGE("geneve_cleanup_module", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("INET_ECN_decapsulate", 80),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("geneve_init", 24),
STACK_USAGE("geneve_uninit", 8),
STACK_USAGE("geneve_udp_encap_recv", 96),
STACK_USAGE("net_generic", 16),
STACK_USAGE("skb_tunnel_info", 8),
STACK_USAGE("geneve_udp_encap_err_lookup", 48),
STACK_USAGE("geneve_gro_receive", 56),
STACK_USAGE("geneve_gro_complete", 24),
STACK_USAGE("geneve_sock_release", 24),
STACK_USAGE("geneve_sock_add", 176),
STACK_USAGE("geneve_open", 24),
STACK_USAGE("jhash", 0),
STACK_USAGE("geneve_stop", 0),
STACK_USAGE("geneve_build_skb", 48),
STACK_USAGE("geneve_get_v4_rt", 40),
STACK_USAGE("geneve_get_v6_dst", 48),
STACK_USAGE("ipvlan_find_addr", 32),
STACK_USAGE("ipvlan_addr_busy", 32),
STACK_USAGE("ipvlan_get_L3_hdr", 24),
STACK_USAGE("ipvlan_count_rx", 24),
STACK_USAGE("local_bh_disable", 0),
STACK_USAGE("ipvlan_mac_hash", 0),
STACK_USAGE("ipvlan_process_multicast", 184),
STACK_USAGE("pskb_may_pull", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("ipvlan_rcv_frame", 48),
STACK_USAGE("local_bh_enable", 0),
STACK_USAGE("ipvlan_addr_lookup", 0),
STACK_USAGE("ipvlan_multicast_enqueue", 24),
STACK_USAGE("ipvlan_queue_xmit", 160),
STACK_USAGE("ipvlan_handle_frame", 48),
STACK_USAGE("ipvlan_ht_addr_add", 0),
STACK_USAGE("ipvlan_ht_addr_del", 0),
STACK_USAGE("ipvlan_init_secret", 16),
STACK_USAGE("ipvlan_skb_to_addr", 32),
STACK_USAGE("ipvlan_migrate_l3s_hook", 24),
STACK_USAGE("ipvlan_ns_exit", 8),
STACK_USAGE("ipvlan_l3s_init", 0),
STACK_USAGE("ipvlan_l3s_cleanup", 0),
STACK_USAGE("ipvlan_l3s_register", 24),
STACK_USAGE("ipvlan_l3s_unregister", 16),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("ipvlan_l3_rcv", 128),
STACK_USAGE("net_generic", 16),
STACK_USAGE("ipvlan_nf_input", 8),
STACK_USAGE("ipvlan_init_module", 16),
STACK_USAGE("ipvlan_cleanup_module", 0),
STACK_USAGE("ipvlan_init", 40),
STACK_USAGE("ipvlan_uninit", 24),
STACK_USAGE("ipvlan_open", 24),
STACK_USAGE("ipvlan_stop", 24),
STACK_USAGE("ipvlan_start_xmit", 24),
STACK_USAGE("ipvlan_fix_features", 0),
STACK_USAGE("ipvlan_change_rx_flags", 0),
STACK_USAGE("ipvlan_set_multicast_mac_filter", 72),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("ipvlan_get_stats64", 72),
STACK_USAGE("ipvlan_vlan_rx_add_vid", 0),
STACK_USAGE("ipvlan_vlan_rx_kill_vid", 0),
STACK_USAGE("ipvlan_get_iflink", 0),
STACK_USAGE("ipvlan_hard_header", 0),
STACK_USAGE("ipvlan_ethtool_get_link_ksettings", 0),
STACK_USAGE("ipvlan_ethtool_get_drvinfo", 8),
STACK_USAGE("ipvlan_ethtool_get_msglevel", 0),
STACK_USAGE("ipvlan_ethtool_set_msglevel", 0),
STACK_USAGE("ipvlan_nl_changelink", 32),
STACK_USAGE("ipvlan_nl_getsize", 0),
STACK_USAGE("ipvlan_nl_validate", 0),
STACK_USAGE("ipvlan_nl_fillinfo", 40),
STACK_USAGE("ipvlan_link_new", 56),
STACK_USAGE("ipvlan_link_delete", 56),
STACK_USAGE("ipvlan_link_setup", 8),
STACK_USAGE("ipvlan_get_link_net", 0),
STACK_USAGE("ipvlan_link_register", 0),
STACK_USAGE("ipvlan_device_event", 72),
STACK_USAGE("ipvlan_addr6_event", 40),
STACK_USAGE("ipvlan_addr6_validator_event", 16),
STACK_USAGE("ipvlan_addr4_event", 48),
STACK_USAGE("ipvlan_addr4_validator_event", 16),
STACK_USAGE("ipvlan_set_port_mode", 64),
STACK_USAGE("loopback_get_stats64", 40),
STACK_USAGE("always_on", 0),
STACK_USAGE("loopback_dev_init", 8),
STACK_USAGE("loopback_dev_free", 0),
STACK_USAGE("loopback_setup", 0),
STACK_USAGE("loopback_net_init", 24),
STACK_USAGE("blackhole_netdev_xmit", 0),
STACK_USAGE("blackhole_netdev_setup", 0),
STACK_USAGE("blackhole_netdev_init", 8),
STACK_USAGE("loopback_xmit", 24),
STACK_USAGE("dev_lstats_read", 24),
STACK_USAGE("macvlan_fdb_del", 0),
STACK_USAGE("macvlan_ethtool_get_drvinfo", 8),
STACK_USAGE("macvlan_ethtool_get_link_ksettings", 0),
STACK_USAGE("macvlan_ethtool_get_ts_info", 0),
STACK_USAGE("macvlan_fix_features", 0),
STACK_USAGE("macvlan_dev_poll_controller", 0),
STACK_USAGE("macvlan_dev_netpoll_setup", 24),
STACK_USAGE("macvlan_dev_netpoll_cleanup", 0),
STACK_USAGE("macvlan_dev_get_iflink", 0),
STACK_USAGE("macvlan_dev_free", 0),
STACK_USAGE("macvlan_common_setup", 8),
STACK_USAGE("macvlan_setup", 8),
STACK_USAGE("macvlan_port_destroy", 48),
STACK_USAGE("macvlan_validate", 0),
STACK_USAGE("macvlan_changelink_sources", 56),
STACK_USAGE("macvlan_common_newlink", 72),
STACK_USAGE("macvlan_newlink", 0),
STACK_USAGE("macvlan_dellink", 56),
STACK_USAGE("macvlan_changelink", 72),
STACK_USAGE("macvlan_get_size", 0),
STACK_USAGE("macvlan_fill_info", 72),
STACK_USAGE("macvlan_link_register", 0),
STACK_USAGE("macvlan_get_link_net", 0),
STACK_USAGE("macvlan_device_event", 64),
STACK_USAGE("macvlan_init_module", 8),
STACK_USAGE("macvlan_cleanup_module", 0),
STACK_USAGE("macvlan_broadcast", 80),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("macvlan_process_broadcast", 128),
STACK_USAGE("macvlan_forward_source", 56),
STACK_USAGE("macvlan_handle_frame", 64),
STACK_USAGE("macvlan_start_xmit", 48),
STACK_USAGE("macvlan_hard_header", 0),
STACK_USAGE("macvlan_open", 32),
STACK_USAGE("macvlan_stop", 16),
STACK_USAGE("macvlan_sync_address", 48),
STACK_USAGE("macvlan_set_mac_address", 0),
STACK_USAGE("macvlan_change_rx_flags", 24),
STACK_USAGE("macvlan_set_mac_lists", 56),
STACK_USAGE("macvlan_change_mtu", 0),
STACK_USAGE("macvlan_eth_ioctl", 88),
STACK_USAGE("macvlan_init", 56),
STACK_USAGE("macvlan_uninit", 48),
STACK_USAGE("macvlan_dev_get_stats64", 72),
STACK_USAGE("macvlan_vlan_rx_add_vid", 0),
STACK_USAGE("macvlan_vlan_rx_kill_vid", 0),
STACK_USAGE("macvlan_fdb_add", 0),
STACK_USAGE("acpi_mdiobus_register", 56),
STACK_USAGE("fwnode_mdiobus_phy_device_register", 40),
STACK_USAGE("fwnode_mdiobus_register_phy", 56),
STACK_USAGE("mii_ethtool_get_link_ksettings", 56),
STACK_USAGE("mii_ethtool_sset", 48),
STACK_USAGE("mii_ethtool_set_link_ksettings", 64),
STACK_USAGE("mii_check_gmii_support", 16),
STACK_USAGE("mii_link_ok", 8),
STACK_USAGE("mii_nway_restart", 8),
STACK_USAGE("mii_check_link", 8),
STACK_USAGE("mii_check_media", 48),
STACK_USAGE("mii_ethtool_gset", 56),
STACK_USAGE("generic_mii_ioctl", 32),
STACK_USAGE("net_failover_select_queue", 32),
STACK_USAGE("net_failover_get_stats", 248),
STACK_USAGE("local_bh_disable", 0),
STACK_USAGE("net_failover_change_mtu", 32),
STACK_USAGE("net_failover_set_rx_mode", 16),
STACK_USAGE("net_failover_vlan_rx_add_vid", 40),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("net_failover_vlan_rx_kill_vid", 32),
STACK_USAGE("local_bh_enable", 0),
STACK_USAGE("nfo_ethtool_get_drvinfo", 8),
STACK_USAGE("nfo_ethtool_get_link_ksettings", 16),
STACK_USAGE("net_failover_open", 64),
STACK_USAGE("net_failover_handle_frame", 32),
STACK_USAGE("net_failover_compute_features", 48),
STACK_USAGE("net_failover_slave_pre_register", 24),
STACK_USAGE("net_failover_slave_register", 56),
STACK_USAGE("net_failover_slave_pre_unregister", 24),
STACK_USAGE("net_failover_slave_unregister", 32),
STACK_USAGE("net_failover_slave_link_change", 64),
STACK_USAGE("net_failover_slave_name_change", 24),
STACK_USAGE("net_failover_create", 24),
STACK_USAGE("net_failover_close", 56),
STACK_USAGE("net_failover_destroy", 16),
STACK_USAGE("net_failover_init", 0),
STACK_USAGE("net_failover_exit", 0),
STACK_USAGE("net_failover_start_xmit", 24),
STACK_USAGE("dynamic_netconsole_exit", 0),
STACK_USAGE("option_setup", 0),
STACK_USAGE("netconsole_netdev_event", 48),
STACK_USAGE("write_ext_msg", 112),
STACK_USAGE("write_msg", 72),
STACK_USAGE("init_netconsole", 64),
STACK_USAGE("cleanup_netconsole", 40),
STACK_USAGE("nsim_bpf_offload", 16),
STACK_USAGE("nsim_bpf_setup_tc_block_cb", 16),
STACK_USAGE("nsim_bpf_disable_tc", 0),
STACK_USAGE("nsim_xdp_set_prog", 32),
STACK_USAGE("nsim_bpf_verifier_prep", 72),
STACK_USAGE("nsim_bpf_translate", 0),
STACK_USAGE("nsim_bpf_destroy_prog", 8),
STACK_USAGE("nsim_map_get_next_key", 56),
STACK_USAGE("nsim_map_lookup_elem", 56),
STACK_USAGE("nsim_map_update_elem", 72),
STACK_USAGE("nsim_map_delete_elem", 48),
STACK_USAGE("nsim_bpf_string_show", 0),
STACK_USAGE("nsim_bpf", 48),
STACK_USAGE("nsim_bpf_dev_init", 8),
STACK_USAGE("nsim_bpf_string_open", 0),
STACK_USAGE("nsim_bpf_dev_exit", 0),
STACK_USAGE("nsim_bpf_init", 24),
STACK_USAGE("nsim_bpf_verify_insn", 24),
STACK_USAGE("nsim_bpf_uninit", 0),
STACK_USAGE("nsim_bpf_finalize", 0),
STACK_USAGE("nsim_bus_dev_release", 0),
STACK_USAGE("new_device_store", 64),
STACK_USAGE("del_device_store", 40),
STACK_USAGE("nsim_bus_probe", 0),
STACK_USAGE("nsim_bus_remove", 0),
STACK_USAGE("nsim_num_vf", 0),
STACK_USAGE("nsim_bus_dev_numvfs_store", 40),
STACK_USAGE("nsim_bus_init", 8),
STACK_USAGE("nsim_bus_exit", 48),
STACK_USAGE("nsim_bus_dev_numvfs_show", 0),
STACK_USAGE("new_port_store", 48),
STACK_USAGE("del_port_store", 48),
STACK_USAGE("nsim_dev_flash_update", 32),
STACK_USAGE("nsim_dev_devlink_trap_init", 16),
STACK_USAGE("nsim_dev_devlink_trap_action_set", 32),
STACK_USAGE("nsim_dev_devlink_trap_group_set", 0),
STACK_USAGE("nsim_dev_devlink_trap_policer_set", 8),
STACK_USAGE("nsim_dev_devlink_trap_policer_counter_get", 16),
STACK_USAGE("nsim_leaf_tx_share_set", 8),
STACK_USAGE("nsim_leaf_tx_max_set", 8),
STACK_USAGE("nsim_node_tx_share_set", 8),
STACK_USAGE("nsim_node_tx_max_set", 8),
STACK_USAGE("nsim_rate_node_new", 32),
STACK_USAGE("nsim_rate_node_del", 8),
STACK_USAGE("nsim_rate_leaf_parent_set", 0),
STACK_USAGE("nsim_rate_node_parent_set", 0),
STACK_USAGE("nsim_dev_devlink_trap_drop_counter_get", 8),
STACK_USAGE("__nsim_dev_port_add", 184),
STACK_USAGE("nsim_dev_trap_fa_cookie_read", 56),
STACK_USAGE("__nsim_dev_port_del", 16),
STACK_USAGE("nsim_dev_port_add_all", 32),
STACK_USAGE("nsim_drv_probe", 72),
STACK_USAGE("nsim_dev_reload_destroy", 32),
STACK_USAGE("nsim_drv_remove", 24),
STACK_USAGE("nsim_drv_port_add", 32),
STACK_USAGE("nsim_drv_port_del", 24),
STACK_USAGE("nsim_dev_trap_fa_cookie_write", 56),
STACK_USAGE("nsim_drv_configure_vfs", 40),
STACK_USAGE("nsim_dev_init", 8),
STACK_USAGE("nsim_dev_exit", 0),
STACK_USAGE("nsim_bus_dev_max_vfs_read", 56),
STACK_USAGE("nsim_bus_dev_max_vfs_write", 56),
STACK_USAGE("nsim_dev_debugfs_init", 56),
STACK_USAGE("nsim_dev_debugfs_exit", 8),
STACK_USAGE("nsim_dev_rate_parent_read", 32),
STACK_USAGE("nsim_esw_switchdev_enable", 32),
STACK_USAGE("nsim_dev_get_vfs", 8),
STACK_USAGE("nsim_devlink_eswitch_mode_set", 32),
STACK_USAGE("nsim_devlink_eswitch_mode_get", 8),
STACK_USAGE("nsim_dev_take_snapshot", 16),
STACK_USAGE("nsim_dev_trap_report_work", 112),
STACK_USAGE("nsim_dev_traps_init", 40),
STACK_USAGE("nsim_dev_traps_exit", 16),
STACK_USAGE("nsim_dev_reload_down", 32),
STACK_USAGE("nsim_dev_reload_up", 88),
STACK_USAGE("nsim_dev_take_snapshot_write", 56),
STACK_USAGE("nsim_dev_info_get", 0),
STACK_USAGE("nsim_set_channels", 16),
STACK_USAGE("nsim_get_fecparam", 0),
STACK_USAGE("nsim_get_pause_stats", 0),
STACK_USAGE("nsim_set_fecparam", 4),
STACK_USAGE("nsim_ethtool_init", 64),
STACK_USAGE("nsim_get_pauseparam", 0),
STACK_USAGE("nsim_set_pauseparam", 0),
STACK_USAGE("nsim_get_coalesce", 0),
STACK_USAGE("nsim_set_coalesce", 0),
STACK_USAGE("nsim_get_ringparam", 0),
STACK_USAGE("nsim_set_ringparam", 0),
STACK_USAGE("nsim_get_channels", 0),
STACK_USAGE("nsim_fib_event_nb", 64),
STACK_USAGE("nsim_fib_rt_free", 72),
STACK_USAGE("nsim_fib_dump_inconsistent", 48),
STACK_USAGE("rhashtable_remove_fast", 80),
STACK_USAGE("rhashtable_replace_fast", 88),
STACK_USAGE("nsim_nexthop_event_nb", 64),
STACK_USAGE("nsim_nexthop_free", 32),
STACK_USAGE("nsim_fib_get_val", 0),
STACK_USAGE("nsim_nexthop_bucket_activity_write", 200),
STACK_USAGE("nsim_fib_ipv4_resource_occ_get", 0),
STACK_USAGE("nsim_fib_ipv4_rules_res_occ_get", 0),
STACK_USAGE("nsim_fib_ipv6_resource_occ_get", 0),
STACK_USAGE("nsim_fib_ipv6_rules_res_occ_get", 0),
STACK_USAGE("nsim_fib_nexthops_res_occ_get", 0),
STACK_USAGE("nsim_fib_event_work", 152),
STACK_USAGE("nsim_fib_create", 96),
STACK_USAGE("nsim_fib_destroy", 16),
STACK_USAGE("local_bh_disable", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("local_bh_enable", 0),
STACK_USAGE("rht_lock", 16),
STACK_USAGE("rht_unlock", 8),
STACK_USAGE("rht_assign_unlock", 16),
STACK_USAGE("nsim_fib6_rt_destroy", 48),
STACK_USAGE("rhashtable_lookup_fast", 88),
STACK_USAGE("rhashtable_insert_fast", 64),
STACK_USAGE("nsim_dev_empty_reporter_dump", 0),
STACK_USAGE("nsim_dev_dummy_reporter_dump", 24),
STACK_USAGE("nsim_dev_dummy_reporter_diagnose", 16),
STACK_USAGE("nsim_dev_health_break_write", 40),
STACK_USAGE("nsim_dev_empty_reporter_diagnose", 0),
STACK_USAGE("nsim_dev_health_init", 32),
STACK_USAGE("nsim_dev_health_exit", 8),
STACK_USAGE("nsim_dev_dummy_reporter_recover", 24),
STACK_USAGE("nsim_dev_dummy_fmsg_put", 32),
STACK_USAGE("nsim_dev_netdevice_event", 48),
STACK_USAGE("nsim_dev_hwstats_do_write", 72),
STACK_USAGE("nsim_dev_hwstats_init", 48),
STACK_USAGE("nsim_dev_hwstats_traffic_work", 16),
STACK_USAGE("nsim_dev_hwstats_exit", 40),
STACK_USAGE("nsim_set_vf_rate", 32),
STACK_USAGE("nsim_set_vf_spoofchk", 24),
STACK_USAGE("nsim_set_vf_rss_query_en", 24),
STACK_USAGE("nsim_set_vf_trust", 24),
STACK_USAGE("nsim_get_vf_config", 24),
STACK_USAGE("nsim_set_vf_link_state", 24),
STACK_USAGE("nsim_setup_tc", 0),
STACK_USAGE("nsim_set_features", 0),
STACK_USAGE("nsim_get_devlink_port", 0),
STACK_USAGE("nsim_setup", 32),
STACK_USAGE("nsim_start_xmit", 0),
STACK_USAGE("nsim_create", 32),
STACK_USAGE("nsim_destroy", 16),
STACK_USAGE("nsim_validate", 8),
STACK_USAGE("nsim_module_init", 8),
STACK_USAGE("nsim_module_exit", 0),
STACK_USAGE("nsim_set_rx_mode", 0),
STACK_USAGE("nsim_change_mtu", 0),
STACK_USAGE("nsim_get_stats64", 0),
STACK_USAGE("nsim_setup_tc_block_cb", 0),
STACK_USAGE("nsim_set_vf_mac", 24),
STACK_USAGE("nsim_set_vf_vlan", 40),
STACK_USAGE("nsim_udp_tunnels_info_reset_write", 16),
STACK_USAGE("nsim_udp_tunnel_set_port", 40),
STACK_USAGE("nsim_udp_tunnels_info_create", 16),
STACK_USAGE("nsim_udp_tunnels_info_destroy", 8),
STACK_USAGE("nsim_udp_tunnels_debugfs_create", 8),
STACK_USAGE("nsim_udp_tunnel_unset_port", 40),
STACK_USAGE("nsim_udp_tunnel_sync_table", 56),
STACK_USAGE("fixed_mdio_write", 0),
STACK_USAGE("fixed_phy_set_link_update", 0),
STACK_USAGE("fixed_phy_add", 24),
STACK_USAGE("__fixed_phy_register", 48),
STACK_USAGE("fixed_phy_register", 0),
STACK_USAGE("fixed_phy_register_with_gpiod", 0),
STACK_USAGE("fixed_phy_unregister", 16),
STACK_USAGE("fixed_mdio_bus_init", 112),
STACK_USAGE("fixed_mdio_bus_exit", 32),
STACK_USAGE("fixed_phy_change_carrier", 0),
STACK_USAGE("fixed_mdio_read", 56),
STACK_USAGE("linkmode_resolve_pause", 72),
STACK_USAGE("linkmode_set_pause", 0),
STACK_USAGE("mdiobus_setup_mdiodev_from_board_info", 48),
STACK_USAGE("mdiobus_register_board_info", 32),
STACK_USAGE("mdio_bus_init", 8),
STACK_USAGE("mdio_bus_exit", 0),
STACK_USAGE("mdiobus_get_phy", 0),
STACK_USAGE("__bpf_trace_mdio_access", 0),
STACK_USAGE("__traceiter_mdio_access", 48),
STACK_USAGE("perf_trace_mdio_access", 88),
STACK_USAGE("trace_event_raw_event_mdio_access", 104),
STACK_USAGE("trace_mdio_access", 8),
STACK_USAGE("trace_raw_output_mdio_access", 24),
STACK_USAGE("mdiobus_is_registered_device", 0),
STACK_USAGE("mdiobus_alloc_size", 8),
STACK_USAGE("mdiobus_release", 8),
STACK_USAGE("mdio_bus_stat_field_show", 0),
STACK_USAGE("mdio_bus_device_stat_field_show", 0),
STACK_USAGE("mdio_find_bus", 0),
STACK_USAGE("mdiobus_create_device", 24),
STACK_USAGE("__mdiobus_register", 40),
STACK_USAGE("mdiobus_unregister", 24),
STACK_USAGE("mdiobus_free", 8),
STACK_USAGE("mdiobus_scan", 32),
STACK_USAGE("mdiobus_register_device", 8),
STACK_USAGE("__mdiobus_read", 40),
STACK_USAGE("__mdiobus_write", 40),
STACK_USAGE("__mdiobus_modify_changed", 40),
STACK_USAGE("mdiobus_read_nested", 32),
STACK_USAGE("mdiobus_read", 32),
STACK_USAGE("mdiobus_write_nested", 40),
STACK_USAGE("mdiobus_write", 40),
STACK_USAGE("mdiobus_modify", 56),
STACK_USAGE("mdiobus_modify_changed", 56),
STACK_USAGE("mdiobus_unregister_device", 0),
STACK_USAGE("mdio_bus_match", 0),
STACK_USAGE("mdio_uevent", 0),
STACK_USAGE("mdio_device_remove", 8),
STACK_USAGE("mdio_device_reset", 0),
STACK_USAGE("mdio_probe", 24),
STACK_USAGE("mdio_remove", 8),
STACK_USAGE("mdio_shutdown", 0),
STACK_USAGE("mdio_driver_register", 16),
STACK_USAGE("mdio_driver_unregister", 0),
STACK_USAGE("mdio_device_free", 0),
STACK_USAGE("mdio_device_release", 0),
STACK_USAGE("mdio_device_bus_match", 0),
STACK_USAGE("mdio_device_create", 24),
STACK_USAGE("mdio_device_register", 16),
STACK_USAGE("devm_mdiobus_free", 0),
STACK_USAGE("devm_mdiobus_alloc_size", 24),
STACK_USAGE("devm_mdiobus_unregister", 0),
STACK_USAGE("mdiobus_devres_match", 0),
STACK_USAGE("__devm_mdiobus_register", 40),
STACK_USAGE("genphy_c45_an_config_aneg", 24),
STACK_USAGE("genphy_c45_an_disable_aneg", 0),
STACK_USAGE("genphy_c45_restart_aneg", 0),
STACK_USAGE("genphy_c45_check_and_restart_aneg", 16),
STACK_USAGE("genphy_c45_aneg_done", 0),
STACK_USAGE("genphy_c45_read_link", 48),
STACK_USAGE("genphy_c45_pma_resume", 8),
STACK_USAGE("genphy_c45_read_lpa", 8),
STACK_USAGE("genphy_c45_read_pma", 8),
STACK_USAGE("genphy_c45_read_mdix", 24),
STACK_USAGE("genphy_c45_pma_suspend", 8),
STACK_USAGE("genphy_c45_pma_read_abilities", 24),
STACK_USAGE("genphy_c45_read_status", 8),
STACK_USAGE("genphy_c45_config_aneg", 16),
STACK_USAGE("genphy_c45_pma_setup_forced", 40),
STACK_USAGE("gen10g_config_aneg", 0),
STACK_USAGE("genphy_c45_loopback", 0),
STACK_USAGE("genphy_c45_fast_retrain", 8),
STACK_USAGE("phy_speed_to_str", 0),
STACK_USAGE("phy_lookup_setting", 24),
STACK_USAGE("phy_speeds", 0),
STACK_USAGE("phy_set_max_speed", 0),
STACK_USAGE("of_set_phy_supported", 0),
STACK_USAGE("of_set_phy_eee_broken", 0),
STACK_USAGE("phy_resolve_aneg_pause", 0),
STACK_USAGE("phy_resolve_aneg_linkmode", 40),
STACK_USAGE("phy_check_downshift", 56),
STACK_USAGE("phy_speed_down_core", 40),
STACK_USAGE("__phy_read_mmd", 32),
STACK_USAGE("phy_read_mmd", 32),
STACK_USAGE("__phy_write_mmd", 40),
STACK_USAGE("phy_write_mmd", 40),
STACK_USAGE("phy_modify_changed", 40),
STACK_USAGE("__phy_modify", 0),
STACK_USAGE("phy_modify", 48),
STACK_USAGE("__phy_modify_mmd_changed", 40),
STACK_USAGE("phy_duplex_to_str", 0),
STACK_USAGE("phy_modify_mmd_changed", 56),
STACK_USAGE("__phy_modify_mmd", 40),
STACK_USAGE("phy_modify_mmd", 56),
STACK_USAGE("phy_save_page", 16),
STACK_USAGE("phy_select_page", 40),
STACK_USAGE("phy_restore_page", 32),
STACK_USAGE("phy_read_paged", 32),
STACK_USAGE("phy_write_paged", 32),
STACK_USAGE("phy_modify_paged_changed", 40),
STACK_USAGE("phy_modify_paged", 0),
STACK_USAGE("phy_print_status", 24),
STACK_USAGE("phy_free_interrupt", 8),
STACK_USAGE("phy_stop", 24),
STACK_USAGE("phy_start", 16),
STACK_USAGE("phy_state_machine", 64),
STACK_USAGE("phy_mac_interrupt", 0),
STACK_USAGE("mmd_eee_adv_to_linkmode", 0),
STACK_USAGE("phy_init_eee", 104),
STACK_USAGE("phy_get_eee_err", 0),
STACK_USAGE("phy_ethtool_get_eee", 16),
STACK_USAGE("phy_ethtool_set_eee", 24),
STACK_USAGE("phy_restart_aneg", 0),
STACK_USAGE("phy_ethtool_set_wol", 0),
STACK_USAGE("phy_ethtool_get_wol", 0),
STACK_USAGE("phy_ethtool_get_link_ksettings", 32),
STACK_USAGE("phy_ethtool_set_link_ksettings", 0),
STACK_USAGE("phy_ethtool_nway_reset", 0),
STACK_USAGE("phy_aneg_done", 0),
STACK_USAGE("phy_supported_speeds", 0),
STACK_USAGE("phy_ethtool_ksettings_get", 24),
STACK_USAGE("phy_mii_ioctl", 40),
STACK_USAGE("phy_do_ioctl", 0),
STACK_USAGE("phy_do_ioctl_running", 0),
STACK_USAGE("phy_queue_state_machine", 0),
STACK_USAGE("phy_trigger_machine", 0),
STACK_USAGE("phy_ethtool_get_strings", 32),
STACK_USAGE("phy_ethtool_get_sset_count", 16),
STACK_USAGE("phy_ethtool_get_stats", 40),
STACK_USAGE("phy_start_cable_test", 24),
STACK_USAGE("phy_start_cable_test_tdr", 24),
STACK_USAGE("phy_config_aneg", 0),
STACK_USAGE("phy_check_link_status", 16),
STACK_USAGE("_phy_start_aneg", 8),
STACK_USAGE("phy_start_aneg", 16),
STACK_USAGE("phy_ethtool_ksettings_set", 88),
STACK_USAGE("phy_speed_down", 56),
STACK_USAGE("phy_speed_up", 56),
STACK_USAGE("phy_start_machine", 0),
STACK_USAGE("phy_stop_machine", 16),
STACK_USAGE("phy_error", 16),
STACK_USAGE("phy_disable_interrupts", 0),
STACK_USAGE("phy_interrupt", 24),
STACK_USAGE("phy_request_interrupt", 8),
STACK_USAGE("phy_link_change", 16),
STACK_USAGE("phy_connect_direct", 24),
STACK_USAGE("phy_connect", 40),
STACK_USAGE("phy_disconnect", 8),
STACK_USAGE("phy_init_hw", 16),
STACK_USAGE("phy_attached_info", 40),
STACK_USAGE("phy_attached_info_irq", 24),
STACK_USAGE("phy_attached_print", 120),
STACK_USAGE("phy_standalone_show", 0),
STACK_USAGE("phy_sfp_attach", 0),
STACK_USAGE("phy_sfp_detach", 0),
STACK_USAGE("phy_sfp_probe", 0),
STACK_USAGE("phy_attach_direct", 56),
STACK_USAGE("phy_attach", 32),
STACK_USAGE("phy_driver_is_genphy", 16),
STACK_USAGE("phy_driver_is_genphy_10g", 16),
STACK_USAGE("phy_package_join", 64),
STACK_USAGE("phy_package_leave", 32),
STACK_USAGE("devm_phy_package_leave", 32),
STACK_USAGE("devm_phy_package_join", 40),
STACK_USAGE("phy_detach", 64),
STACK_USAGE("phy_suspend", 56),
STACK_USAGE("__phy_resume", 16),
STACK_USAGE("phy_resume", 32),
STACK_USAGE("phy_loopback", 32),
STACK_USAGE("phy_reset_after_clk_enable", 16),
STACK_USAGE("genphy_config_eee_advert", 8),
STACK_USAGE("genphy_setup_forced", 0),
STACK_USAGE("phy_device_free", 0),
STACK_USAGE("genphy_read_master_slave", 16),
STACK_USAGE("phy_mdio_device_free", 0),
STACK_USAGE("genphy_restart_aneg", 0),
STACK_USAGE("genphy_check_and_restart_aneg", 16),
STACK_USAGE("__genphy_config_aneg", 32),
STACK_USAGE("phy_device_release", 0),
STACK_USAGE("genphy_c37_config_aneg", 16),
STACK_USAGE("phy_mdio_device_remove", 8),
STACK_USAGE("genphy_aneg_done", 0),
STACK_USAGE("genphy_update_link", 16),
STACK_USAGE("genphy_read_lpa", 8),
STACK_USAGE("genphy_read_status_fixed", 8),
STACK_USAGE("genphy_read_status", 32),
STACK_USAGE("genphy_c37_read_status", 24),
STACK_USAGE("genphy_soft_reset", 24),
STACK_USAGE("genphy_handle_interrupt_no_ack", 0),
STACK_USAGE("genphy_read_abilities", 16),
STACK_USAGE("genphy_read_mmd_unsupported", 0),
STACK_USAGE("genphy_write_mmd_unsupported", 0),
STACK_USAGE("genphy_suspend", 0),
STACK_USAGE("genphy_resume", 0),
STACK_USAGE("genphy_loopback", 24),
STACK_USAGE("phy_remove_link_mode", 40),
STACK_USAGE("phy_advertise_supported", 40),
STACK_USAGE("phy_support_sym_pause", 0),
STACK_USAGE("phy_support_asym_pause", 0),
STACK_USAGE("phy_set_sym_pause", 0),
STACK_USAGE("mdio_bus_phy_suspend", 64),
STACK_USAGE("phy_set_asym_pause", 56),
STACK_USAGE("phy_validate_pause", 0),
STACK_USAGE("phy_get_pause", 0),
STACK_USAGE("phy_get_internal_delay", 0),
STACK_USAGE("fwnode_mdio_find_device", 0),
STACK_USAGE("fwnode_phy_find_device", 8),
STACK_USAGE("device_phy_find_device", 8),
STACK_USAGE("mdio_bus_phy_resume", 32),
STACK_USAGE("fwnode_get_phy_node", 16),
STACK_USAGE("phy_probe", 72),
STACK_USAGE("phy_remove", 16),
STACK_USAGE("phy_shutdown", 0),
STACK_USAGE("phy_driver_register", 16),
STACK_USAGE("phy_drivers_register", 40),
STACK_USAGE("phy_driver_unregister", 0),
STACK_USAGE("phy_drivers_unregister", 16),
STACK_USAGE("phy_init", 16),
STACK_USAGE("phy_exit", 0),
STACK_USAGE("phy_register_fixup", 40),
STACK_USAGE("phy_register_fixup_for_uid", 32),
STACK_USAGE("phy_register_fixup_for_id", 32),
STACK_USAGE("phy_unregister_fixup", 48),
STACK_USAGE("phy_unregister_fixup_for_uid", 48),
STACK_USAGE("phy_unregister_fixup_for_id", 40),
STACK_USAGE("phy_scan_fixups", 40),
STACK_USAGE("phy_bus_match", 0),
STACK_USAGE("phy_id_show", 0),
STACK_USAGE("phy_interface_show", 0),
STACK_USAGE("phy_has_fixups_show", 0),
STACK_USAGE("phy_dev_flags_show", 0),
STACK_USAGE("phy_request_driver_module", 216),
STACK_USAGE("phy_device_create", 48),
STACK_USAGE("get_phy_c45_ids", 64),
STACK_USAGE("fwnode_get_phy_id", 32),
STACK_USAGE("get_phy_device", 184),
STACK_USAGE("phy_device_register", 16),
STACK_USAGE("phy_device_remove", 8),
STACK_USAGE("phy_get_c45_ids", 0),
STACK_USAGE("phy_find_first", 16),
STACK_USAGE("phy_module_exit", 0),
STACK_USAGE("phy_module_init", 0),
STACK_USAGE("rtl8201_config_intr", 8),
STACK_USAGE("genphy_no_config_intr", 0),
STACK_USAGE("rtl8211b_config_intr", 8),
STACK_USAGE("rtl8211e_config_intr", 8),
STACK_USAGE("rtl8211f_config_intr", 8),
STACK_USAGE("rtl8201_handle_interrupt", 8),
STACK_USAGE("rtl821x_handle_interrupt", 16),
STACK_USAGE("rtl8211f_handle_interrupt", 8),
STACK_USAGE("rtl8211_config_aneg", 16),
STACK_USAGE("rtl8211c_config_init", 0),
STACK_USAGE("rtl8211f_config_init", 32),
STACK_USAGE("rtl821x_resume", 0),
STACK_USAGE("rtl8211e_config_init", 24),
STACK_USAGE("rtl8211b_suspend", 8),
STACK_USAGE("rtl8211b_resume", 8),
STACK_USAGE("rtl8366rb_config_init", 16),
STACK_USAGE("rtlgen_read_status", 16),
STACK_USAGE("rtlgen_read_mmd", 24),
STACK_USAGE("rtlgen_write_mmd", 16),
STACK_USAGE("rtl822x_read_mmd", 24),
STACK_USAGE("rtl822x_write_mmd", 24),
STACK_USAGE("rtl822x_get_features", 8),
STACK_USAGE("rtl822x_config_aneg", 8),
STACK_USAGE("rtl822x_read_status", 16),
STACK_USAGE("rtlgen_match_phy_device", 16),
STACK_USAGE("rtl8226_match_phy_device", 16),
STACK_USAGE("rtlgen_resume", 8),
STACK_USAGE("rtl9000a_config_init", 0),
STACK_USAGE("rtl9000a_config_aneg", 8),
STACK_USAGE("rtl9000a_read_status", 8),
STACK_USAGE("rtl9000a_config_intr", 8),
STACK_USAGE("rtl9000a_handle_interrupt", 8),
STACK_USAGE("rtl821x_read_page", 0),
STACK_USAGE("rtl821x_write_page", 0),
STACK_USAGE("rtl821x_probe", 16),
STACK_USAGE("swphy_read_reg", 0),
STACK_USAGE("swphy_validate_state", 0),
STACK_USAGE("ppp_async_cleanup", 0),
STACK_USAGE("ppp_asynctty_open", 24),
STACK_USAGE("ppp_asynctty_close", 16),
STACK_USAGE("ppp_asynctty_hangup", 0),
STACK_USAGE("ppp_asynctty_read", 0),
STACK_USAGE("ppp_asynctty_write", 0),
STACK_USAGE("ppp_asynctty_ioctl", 40),
STACK_USAGE("ppp_asynctty_poll", 0),
STACK_USAGE("ppp_asynctty_receive", 88),
STACK_USAGE("ppp_asynctty_wakeup", 24),
STACK_USAGE("ppp_async_init", 8),
STACK_USAGE("ppp_async_ioctl", 72),
STACK_USAGE("ppp_async_process", 32),
STACK_USAGE("ppp_async_send", 16),
STACK_USAGE("ppp_async_push", 96),
STACK_USAGE("ppp_init_net", 8),
STACK_USAGE("ppp_exit_net", 80),
STACK_USAGE("ppp_dev_configure", 64),
STACK_USAGE("ppp_nl_validate", 0),
STACK_USAGE("ppp_nl_newlink", 64),
STACK_USAGE("ppp_nl_dellink", 0),
STACK_USAGE("ppp_nl_get_size", 0),
STACK_USAGE("ppp_nl_fill_info", 0),
STACK_USAGE("ppp_nl_get_link_net", 0),
STACK_USAGE("ppp_init", 8),
STACK_USAGE("ppp_start_xmit", 32),
STACK_USAGE("ppp_net_siocdevprivate", 104),
STACK_USAGE("ppp_get_stats64", 24),
STACK_USAGE("ppp_dev_init", 24),
STACK_USAGE("ppp_dev_uninit", 32),
STACK_USAGE("ppp_dev_priv_destructor", 0),
STACK_USAGE("ppp_fill_forward_path", 0),
STACK_USAGE("ppp_setup", 0),
STACK_USAGE("__ppp_xmit_process", 88),
STACK_USAGE("ppp_xmit_process", 24),
STACK_USAGE("ppp_push", 32),
STACK_USAGE("local_bh_disable", 0),
STACK_USAGE("__ppp_channel_push", 32),
STACK_USAGE("ppp_channel_push", 24),
STACK_USAGE("ppp_do_recv", 40),
STACK_USAGE("ppp_input", 32),
STACK_USAGE("ppp_input_error", 24),
STACK_USAGE("refcount_inc", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("ppp_register_channel", 0),
STACK_USAGE("ppp_register_net_channel", 32),
STACK_USAGE("ppp_channel_index", 0),
STACK_USAGE("ppp_unit_number", 16),
STACK_USAGE("ppp_dev_name", 16),
STACK_USAGE("ppp_unregister_channel", 24),
STACK_USAGE("ppp_output_wakeup", 0),
STACK_USAGE("ppp_set_compress", 104),
STACK_USAGE("proto_to_npindex", 0),
STACK_USAGE("ppp_ccp_peek", 40),
STACK_USAGE("ppp_ccp_closed", 56),
STACK_USAGE("local_bh_enable", 0),
STACK_USAGE("ppp_register_compressor", 16),
STACK_USAGE("ppp_unregister_compressor", 8),
STACK_USAGE("refcount_dec_and_test", 8),
STACK_USAGE("ppp_destroy_interface", 8),
STACK_USAGE("ppp_find_channel", 0),
STACK_USAGE("ppp_connect_channel", 64),
STACK_USAGE("ppp_disconnect_channel", 32),
STACK_USAGE("ppp_destroy_channel", 8),
STACK_USAGE("ppp_cleanup", 0),
STACK_USAGE("ppp_open", 0),
STACK_USAGE("ppp_release", 16),
STACK_USAGE("net_generic", 16),
STACK_USAGE("ppp_read", 184),
STACK_USAGE("ppp_write", 32),
STACK_USAGE("ppp_poll", 24),
STACK_USAGE("ppp_bridge_channels", 40),
STACK_USAGE("ppp_unbridge_channels", 24),
STACK_USAGE("ppp_ioctl", 72),
STACK_USAGE("ppp_compat_ioctl", 72),
STACK_USAGE("ppp_sync_open", 24),
STACK_USAGE("ppp_sync_close", 16),
STACK_USAGE("ppp_sync_hangup", 0),
STACK_USAGE("ppp_sync_read", 0),
STACK_USAGE("ppp_sync_write", 0),
STACK_USAGE("ppp_synctty_ioctl", 40),
STACK_USAGE("ppp_sync_poll", 0),
STACK_USAGE("ppp_sync_receive", 72),
STACK_USAGE("ppp_sync_wakeup", 24),
STACK_USAGE("ppp_sync_init", 8),
STACK_USAGE("ppp_sync_ioctl", 72),
STACK_USAGE("ppp_sync_process", 32),
STACK_USAGE("ppp_sync_send", 24),
STACK_USAGE("ppp_sync_push", 48),
STACK_USAGE("ppp_sync_cleanup", 0),
STACK_USAGE("slhc_free", 8),
STACK_USAGE("slhc_compress", 136),
STACK_USAGE("slhc_uncompress", 48),
STACK_USAGE("slhc_remember", 48),
STACK_USAGE("slhc_toss", 0),
STACK_USAGE("slhc_init", 24),
STACK_USAGE("tun_net_uninit", 40),
STACK_USAGE("tun_net_open", 0),
STACK_USAGE("tun_net_close", 0),
STACK_USAGE("tun_net_xmit", 64),
STACK_USAGE("tun_net_mclist", 0),
STACK_USAGE("tun_net_fix_features", 0),
STACK_USAGE("tun_set_headroom", 0),
STACK_USAGE("tun_net_get_stats64", 16),
STACK_USAGE("tun_xdp", 24),
STACK_USAGE("tun_net_change_carrier", 0),
STACK_USAGE("tun_xdp_xmit", 56),
STACK_USAGE("tun_flow_uninit", 48),
STACK_USAGE("tun_net_initialize", 32),
STACK_USAGE("tun_chr_poll", 40),
STACK_USAGE("tun_rx_batched", 144),
STACK_USAGE("__tun_build_skb", 48),
STACK_USAGE("tun_xdp_act", 40),
STACK_USAGE("tun_get_user", 240),
STACK_USAGE("local_bh_disable", 0),
STACK_USAGE("tun_chr_write_iter", 40),
STACK_USAGE("tun_ring_recv", 104),
STACK_USAGE("tun_do_read", 96),
STACK_USAGE("tun_chr_read_iter", 48),
STACK_USAGE("tun_prog_free", 8),
STACK_USAGE("__tun_set_ebpf", 40),
STACK_USAGE("tun_free_netdev", 16),
STACK_USAGE("tun_setup", 0),
STACK_USAGE("tun_validate", 8),
STACK_USAGE("tun_get_size", 0),
STACK_USAGE("tun_fill_info", 40),
STACK_USAGE("tun_sock_write_space", 8),
STACK_USAGE("tun_sendmsg", 208),
STACK_USAGE("tun_napi_poll", 144),
STACK_USAGE("tun_recvmsg", 48),
STACK_USAGE("pskb_may_pull", 0),
STACK_USAGE("tun_peek_len", 32),
STACK_USAGE("tun_flags_show", 0),
STACK_USAGE("owner_show", 8),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("group_show", 8),
STACK_USAGE("tun_set_iff", 48),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("set_offload", 0),
STACK_USAGE("tun_detach_filter", 32),
STACK_USAGE("tun_attach_filter", 40),
STACK_USAGE("tun_set_sndbuf", 16),
STACK_USAGE("tun_set_ebpf", 32),
STACK_USAGE("tun_get_addr_len", 0),
STACK_USAGE("__tun_chr_ioctl", 104),
STACK_USAGE("local_bh_enable", 0),
STACK_USAGE("tun_chr_ioctl", 0),
STACK_USAGE("tun_chr_compat_ioctl", 0),
STACK_USAGE("tun_chr_fasync", 32),
STACK_USAGE("tun_chr_open", 24),
STACK_USAGE("tun_chr_close", 16),
STACK_USAGE("tun_chr_show_fdinfo", 64),
STACK_USAGE("tun_get_link_ksettings", 0),
STACK_USAGE("tun_set_link_ksettings", 0),
STACK_USAGE("tun_get_drvinfo", 24),
STACK_USAGE("tun_get_msglevel", 0),
STACK_USAGE("tun_set_msglevel", 0),
STACK_USAGE("tun_get_coalesce", 0),
STACK_USAGE("tun_set_coalesce", 0),
STACK_USAGE("tun_device_event", 80),
STACK_USAGE("tun_init", 16),
STACK_USAGE("tun_cleanup", 0),
STACK_USAGE("tun_get_socket", 0),
STACK_USAGE("tun_get_tx_ring", 0),
STACK_USAGE("tun_flow_create", 40),
STACK_USAGE("tun_flow_cleanup", 64),
STACK_USAGE("tun_flow_update", 48),
STACK_USAGE("virtio_net_hdr_to_skb", 80),
STACK_USAGE("tun_select_queue", 40),
STACK_USAGE("tun_not_capable", 8),
STACK_USAGE("tun_ptr_free", 0),
STACK_USAGE("tun_queue_purge", 24),
STACK_USAGE("__tun_detach", 72),
STACK_USAGE("rcu_read_unlock", 0),
STACK_USAGE("tun_attach", 88),
STACK_USAGE("tun_get", 8),
STACK_USAGE("update_filter", 56),
STACK_USAGE("tun_net_init", 40),
STACK_USAGE("veth_enable_xdp_range", 64),
STACK_USAGE("veth_enable_xdp", 40),
STACK_USAGE("veth_disable_xdp", 32),
STACK_USAGE("veth_napi_enable_range", 56),
STACK_USAGE("veth_get_link_ksettings", 0),
STACK_USAGE("veth_set_channels", 64),
STACK_USAGE("veth_get_drvinfo", 8),
STACK_USAGE("veth_open", 24),
STACK_USAGE("veth_close", 32),
STACK_USAGE("veth_get_strings", 40),
STACK_USAGE("veth_dev_init", 8),
STACK_USAGE("veth_dev_free", 8),
STACK_USAGE("veth_poll_controller", 0),
STACK_USAGE("veth_get_iflink", 8),
STACK_USAGE("veth_fix_features", 16),
STACK_USAGE("veth_set_features", 32),
STACK_USAGE("veth_set_rx_headroom", 24),
STACK_USAGE("veth_get_sset_count", 0),
STACK_USAGE("veth_xdp", 56),
STACK_USAGE("veth_setup", 8),
STACK_USAGE("veth_validate", 0),
STACK_USAGE("veth_init_queues", 16),
STACK_USAGE("veth_newlink", 600),
STACK_USAGE("veth_get_ethtool_stats", 24),
STACK_USAGE("veth_dellink", 24),
STACK_USAGE("veth_get_link_net", 8),
STACK_USAGE("veth_get_num_queues", 0),
STACK_USAGE("veth_init", 0),
STACK_USAGE("veth_exit", 0),
STACK_USAGE("veth_get_channels", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("trace_xdp_exception", 0),
STACK_USAGE("veth_xmit", 48),
STACK_USAGE("__skb_frag_ref", 0),
STACK_USAGE("veth_get_stats64", 56),
STACK_USAGE("veth_set_multicast_list", 0),
STACK_USAGE("veth_peer_dev", 8),
STACK_USAGE("veth_xdp_xmit", 80),
STACK_USAGE("veth_ndo_xdp_xmit", 16),
STACK_USAGE("veth_xdp_flush_bq", 48),
STACK_USAGE("veth_xdp_tx", 32),
STACK_USAGE("veth_xdp_rcv_bulk_skb", 184),
STACK_USAGE("ptr_ring_cleanup", 24),
STACK_USAGE("veth_xdp_get", 32),
STACK_USAGE("rcu_read_unlock", 0),
STACK_USAGE("veth_poll", 552),
STACK_USAGE("__veth_napi_enable_range", 64),
STACK_USAGE("receive_buf", 208),
STACK_USAGE("put_page", 0),
STACK_USAGE("try_fill_recv", 80),
STACK_USAGE("skb_recv_done", 16),
STACK_USAGE("refill_work", 64),
STACK_USAGE("free_old_xmit_skbs", 64),
STACK_USAGE("virtnet_poll", 176),
STACK_USAGE("virtnet_open", 64),
STACK_USAGE("virtnet_poll_tx", 48),
STACK_USAGE("start_xmit", 96),
STACK_USAGE("virtnet_send_command", 168),
STACK_USAGE("virtnet_set_mac_address", 88),
STACK_USAGE("local_bh_disable", 0),
STACK_USAGE("virtnet_stats", 32),
STACK_USAGE("_virtnet_set_queues", 80),
STACK_USAGE("virtnet_close", 32),
STACK_USAGE("virtnet_set_rx_mode", 136),
STACK_USAGE("virtnet_vlan_rx_add_vid", 72),
STACK_USAGE("virtnet_vlan_rx_kill_vid", 72),
STACK_USAGE("virtnet_set_affinity", 88),
STACK_USAGE("virtnet_cpu_online", 0),
STACK_USAGE("virtnet_cpu_dead", 0),
STACK_USAGE("virtnet_cpu_down_prep", 32),
STACK_USAGE("virtnet_get_ringparam", 16),
STACK_USAGE("virtnet_commit_rss_command", 168),
STACK_USAGE("virtnet_get_drvinfo", 16),
STACK_USAGE("virtnet_set_channels", 32),
STACK_USAGE("virtnet_get_strings", 40),
STACK_USAGE("virtnet_get_sset_count", 0),
STACK_USAGE("virtnet_get_ethtool_stats", 0),
STACK_USAGE("virtnet_get_channels", 0),
STACK_USAGE("virtnet_set_link_ksettings", 0),
STACK_USAGE("virtnet_get_link_ksettings", 0),
STACK_USAGE("virtnet_set_coalesce", 0),
STACK_USAGE("virtnet_get_coalesce", 0),
STACK_USAGE("virtnet_update_settings", 24),
STACK_USAGE("virtnet_get_rxfh_key_size", 0),
STACK_USAGE("virtnet_get_rxfh_indir_size", 0),
STACK_USAGE("virtnet_get_rxfh", 8),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("virtnet_set_rxfh", 8),
STACK_USAGE("virtnet_get_rxnfc", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("virtnet_set_rxnfc", 8),
STACK_USAGE("virtnet_freeze_down", 32),
STACK_USAGE("trace_xdp_exception", 0),
STACK_USAGE("xdp_convert_buff_to_frame", 0),
STACK_USAGE("virtnet_xdp", 120),
STACK_USAGE("virtnet_get_phys_port_name", 8),
STACK_USAGE("virtnet_set_features", 80),
STACK_USAGE("virtnet_tx_timeout", 40),
STACK_USAGE("virtnet_config_changed_work", 40),
STACK_USAGE("virtnet_config_changed", 0),
STACK_USAGE("virtnet_free_queues", 32),
STACK_USAGE("local_bh_enable", 0),
STACK_USAGE("init_vqs", 88),
STACK_USAGE("mergeable_rx_buffer_size_show", 0),
STACK_USAGE("virtnet_validate", 32),
STACK_USAGE("virtnet_probe", 88),
STACK_USAGE("virtqueue_napi_schedule", 16),
STACK_USAGE("remove_vq_common", 48),
STACK_USAGE("virtnet_remove", 8),
STACK_USAGE("virtnet_freeze", 16),
STACK_USAGE("skb_xmit_done", 32),
STACK_USAGE("virtnet_restore", 56),
STACK_USAGE("virtio_net_driver_init", 16),
STACK_USAGE("virtio_net_driver_exit", 0),
STACK_USAGE("page_to_skb", 104),
STACK_USAGE("virtnet_xdp_xmit", 128),
STACK_USAGE("xdp_linearize_page", 80),
STACK_USAGE("rcu_read_unlock", 0),
STACK_USAGE("virt_to_head_page", 0),
STACK_USAGE("vrf_l3_out", 40),
STACK_USAGE("vrf_rtable_release", 24),
STACK_USAGE("skb_dst", 8),
STACK_USAGE("vrf_add_slave", 32),
STACK_USAGE("vrf_del_slave", 16),
STACK_USAGE("vrf_dev_uninit", 24),
STACK_USAGE("vrf_dev_init", 32),
STACK_USAGE("vrf_fib_table", 0),
STACK_USAGE("vrf_rcv_finish", 0),
STACK_USAGE("vrf_add_mac_header_if_unset", 32),
STACK_USAGE("vrf_l3_rcv", 160),
STACK_USAGE("vrf_link_scope_lookup", 0),
STACK_USAGE("vrf_get_stats64", 56),
STACK_USAGE("vrf_get_drvinfo", 8),
STACK_USAGE("vrf_fib_rule", 64),
STACK_USAGE("vrf_setup", 32),
STACK_USAGE("vrf_validate", 16),
STACK_USAGE("vrf_dellink", 56),
STACK_USAGE("vrf_newlink", 64),
STACK_USAGE("vrf_nl_getsize", 0),
STACK_USAGE("vrf_fillinfo", 16),
STACK_USAGE("vrf_get_slave_size", 0),
STACK_USAGE("vrf_fill_slave_info", 16),
STACK_USAGE("vrf_device_event", 16),
STACK_USAGE("local_bh_disable", 0),
STACK_USAGE("vrf_shared_table_handler", 136),
STACK_USAGE("vrf_netns_init", 24),
STACK_USAGE("vrf_netns_exit", 8),
STACK_USAGE("vrf_init_module", 16),
STACK_USAGE("nf_hook", 128),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("local_bh_enable", 0),
STACK_USAGE("vrf_map_unregister_dev", 32),
STACK_USAGE("vrf_ifindex_lookup_by_table_id", 32),
STACK_USAGE("ip_neigh_gw4", 40),
STACK_USAGE("net_generic", 16),
STACK_USAGE("vrf_local_xmit", 32),
STACK_USAGE("ip_neigh_gw6", 24),
STACK_USAGE("vrf_ip6_local_out", 24),
STACK_USAGE("dst_output", 24),
STACK_USAGE("vrf_ip_local_out", 24),
STACK_USAGE("neigh_output", 72),
STACK_USAGE("vrf_xmit", 152),
STACK_USAGE("vrf_finish_direct", 16),
STACK_USAGE("vrf_finish_output6", 40),
STACK_USAGE("vrf_output6", 24),
STACK_USAGE("vrf_output6_direct_finish", 24),
STACK_USAGE("vrf_ip6_out_direct_finish", 24),
STACK_USAGE("vrf_finish_output", 24),
STACK_USAGE("vrf_output", 24),
STACK_USAGE("vrf_output_direct_finish", 24),
STACK_USAGE("vrf_ip_out_direct_finish", 24),
STACK_USAGE("vxlan_fdb_update", 184),
STACK_USAGE("vxlan_fdb_parse", 80),
STACK_USAGE("vxlan_fdb_add", 120),
STACK_USAGE("__vxlan_fdb_delete", 48),
STACK_USAGE("vxlan_fdb_delete", 104),
STACK_USAGE("vxlan_fdb_dump", 72),
STACK_USAGE("vxlan_fdb_get", 40),
STACK_USAGE("vxlan_snoop", 64),
STACK_USAGE("skb_tunnel_info_unclone", 32),
STACK_USAGE("__vxlan_sock_release_prep", 16),
STACK_USAGE("vxlan_sock_release", 32),
STACK_USAGE("vxlan_remcsum", 64),
STACK_USAGE("vxlan_parse_gbp_hdr", 32),
STACK_USAGE("vxlan_set_mac", 80),
STACK_USAGE("vxlan_ecn_decapsulate", 64),
STACK_USAGE("vxlan_rcv", 96),
STACK_USAGE("vxlan_err_lookup", 48),
STACK_USAGE("vxlan_fdb_info", 112),
STACK_USAGE("neigh_reduce", 336),
STACK_USAGE("vxlan_build_skb", 40),
STACK_USAGE("vxlan_get_route", 128),
STACK_USAGE("vxlan6_get_route", 168),
STACK_USAGE("vxlan_encap_bypass", 128),
STACK_USAGE("encap_bypass_if_local", 64),
STACK_USAGE("vxlan_xmit_one", 280),
STACK_USAGE("nexthop_has_v4", 8),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("INET_ECN_decapsulate", 80),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("vxlan_xmit", 184),
STACK_USAGE("vxlan_cleanup", 80),
STACK_USAGE("vxlan_init", 16),
STACK_USAGE("vxlan_uninit", 48),
STACK_USAGE("vxlan_open", 32),
STACK_USAGE("vxlan_flush", 64),
STACK_USAGE("vxlan_stop", 16),
STACK_USAGE("vxlan_set_multicast_list", 0),
STACK_USAGE("vxlan_change_mtu", 16),
STACK_USAGE("vxlan_fill_metadata_dst", 96),
STACK_USAGE("vxlan_setup", 40),
STACK_USAGE("__in6_dev_get", 8),
STACK_USAGE("vxlan_validate", 24),
STACK_USAGE("vxlan_get_drvinfo", 8),
STACK_USAGE("vxlan_get_link_ksettings", 8),
STACK_USAGE("__vxlan_sock_add", 136),
STACK_USAGE("vxlan_vni_in_use", 40),
STACK_USAGE("vxlan_config_validate", 56),
STACK_USAGE("vxlan_config_apply", 0),
STACK_USAGE("skb_postpull_rcsum", 8),
STACK_USAGE("vxlan_fdb_notify", 48),
STACK_USAGE("__vxlan_dev_create", 96),
STACK_USAGE("vxlan_nl2flag", 16),
STACK_USAGE("vxlan_nl2conf", 64),
STACK_USAGE("vxlan_ip_miss", 216),
STACK_USAGE("net_generic", 16),
STACK_USAGE("skb_tunnel_info", 8),
STACK_USAGE("vxlan_fdb_miss", 216),
STACK_USAGE("vxlan_newlink", 144),
STACK_USAGE("vxlan_changelink", 184),
STACK_USAGE("vxlan_dellink", 16),
STACK_USAGE("vxlan_get_size", 0),
STACK_USAGE("vxlan_fill_info", 32),
STACK_USAGE("eth_vni_hash", 0),
STACK_USAGE("vxlan_get_link_net", 0),
STACK_USAGE("vxlan_dev_create", 552),
STACK_USAGE("vxlan_netdevice_event", 72),
STACK_USAGE("fdb_head_index", 0),
STACK_USAGE("neigh_release", 0),
STACK_USAGE("__vxlan_find_mac", 0),
STACK_USAGE("vxlan_nexthop_event", 48),
STACK_USAGE("vxlan_init_net", 24),
STACK_USAGE("vxlan_exit_batch_net", 88),
STACK_USAGE("vxlan_init_module", 8),
STACK_USAGE("vxlan_cleanup_module", 0),
STACK_USAGE("vxlan_fdb_find_uc", 56),
STACK_USAGE("vxlan_fdb_replay", 184),
STACK_USAGE("vxlan_fdb_clear_offload", 32),
STACK_USAGE("vxlan_fdb_append", 72),
STACK_USAGE("vxlan_gro_receive", 80),
STACK_USAGE("jhash", 0),
STACK_USAGE("rcu_read_unlock", 0),
STACK_USAGE("vxlan_gro_complete", 0),
STACK_USAGE("vxlan_fdb_nh_update", 72),
STACK_USAGE("vxlan_fdb_create", 72),
STACK_USAGE("__vxlan_fdb_free", 32),
STACK_USAGE("vxlan_fdb_free", 0),
STACK_USAGE("vxlan_fdb_destroy", 40),
STACK_USAGE("vxlan_dst_free", 8),
STACK_USAGE("vxlan_vnifilter_lookup", 88),
STACK_USAGE("vxlan_group_used", 80),
STACK_USAGE("vxlan_igmp_join", 56),
STACK_USAGE("vxlan_multicast_join", 64),
STACK_USAGE("vxlan_multicast_leave", 56),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("net_generic", 16),
STACK_USAGE("vxlan_igmp_leave", 56),
STACK_USAGE("vxlan_vnifilter_uninit", 0),
STACK_USAGE("vxlan_vs_del_vnigrp", 16),
STACK_USAGE("rhashtable_remove_fast", 80),
STACK_USAGE("vxlan_vnifilter_count", 48),
STACK_USAGE("local_bh_disable", 0),
STACK_USAGE("vxlan_vni_cmp", 0),
STACK_USAGE("vxlan_fill_vni_filter_entry", 120),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("vxlan_vnifilter_notify", 48),
STACK_USAGE("local_bh_enable", 0),
STACK_USAGE("rht_lock", 16),
STACK_USAGE("vxlan_vnifilter_dump_dev", 80),
STACK_USAGE("rht_unlock", 8),
STACK_USAGE("rht_assign_unlock", 16),
STACK_USAGE("net_generic", 16),
STACK_USAGE("vxlan_vnifilter_dump", 48),
STACK_USAGE("vxlan_update_default_fdb_entry", 88),
STACK_USAGE("vxlan_vni_update_group", 96),
STACK_USAGE("vxlan_vnilist_update_group", 48),
STACK_USAGE("rhashtable_lookup_fast", 88),
STACK_USAGE("vxlan_vs_add_vnigrp", 48),
STACK_USAGE("vxlan_vni_node_rcu_free", 8),
STACK_USAGE("vxlan_vnigroup_uninit", 56),
STACK_USAGE("vxlan_vnigroup_init", 24),
STACK_USAGE("vxlan_vnifilter_process", 328),
STACK_USAGE("vxlan_vnifilter_init", 0),
STACK_USAGE("nvme_submit_sync_cmd", 0),
STACK_USAGE("nvme_command_effects", 8),
STACK_USAGE("nvme_execute_passthru_rq", 88),
STACK_USAGE("nvme_keep_alive_end_io", 24),
STACK_USAGE("__bpf_trace_nvme_async_event", 0),
STACK_USAGE("__traceiter_nvme_async_event", 24),
STACK_USAGE("perf_trace_nvme_async_event", 64),
STACK_USAGE("trace_event_raw_event_nvme_async_event", 80),
STACK_USAGE("trace_nvme_async_event", 0),
STACK_USAGE("trace_raw_output_nvme_async_event", 32),
STACK_USAGE("nvme_keep_alive_work", 16),
STACK_USAGE("nvme_queue_scan", 0),
STACK_USAGE("nvme_stop_keep_alive", 0),
STACK_USAGE("nvme_try_sched_reset", 0),
STACK_USAGE("nvme_identify_ns", 104),
STACK_USAGE("nvme_failfast_work", 0),
STACK_USAGE("nvme_set_features", 88),
STACK_USAGE("__bpf_trace_nvme_sq", 0),
STACK_USAGE("__traceiter_nvme_sq", 32),
STACK_USAGE("perf_trace_nvme_sq", 72),
STACK_USAGE("trace_event_raw_event_nvme_sq", 88),
STACK_USAGE("trace_raw_output_nvme_sq", 32),
STACK_USAGE("nvme_get_features", 88),
STACK_USAGE("nvme_set_queue_count", 96),
STACK_USAGE("nvme_open", 16),
STACK_USAGE("nvme_release", 8),
STACK_USAGE("nvme_getgeo", 0),
STACK_USAGE("nvme_reset_ctrl", 8),
STACK_USAGE("nvme_set_queue_limits", 24),
STACK_USAGE("nvme_reset_ctrl_sync", 24),
STACK_USAGE("nvme_update_ns_info", 128),
STACK_USAGE("nvme_do_delete_ctrl", 8),
STACK_USAGE("nvme_pr_register", 104),
STACK_USAGE("nvme_pr_reserve", 104),
STACK_USAGE("nvme_pr_preempt", 104),
STACK_USAGE("nvme_pr_clear", 104),
STACK_USAGE("nvme_pr_release", 104),
STACK_USAGE("nvme_wait_ready", 56),
STACK_USAGE("nvme_delete_ctrl_work", 0),
STACK_USAGE("nvme_disable_ctrl", 8),
STACK_USAGE("nvme_enable_ctrl", 24),
STACK_USAGE("nvme_shutdown_ctrl", 40),
STACK_USAGE("nvme_delete_ctrl", 8),
STACK_USAGE("nvme_configure_apst", 136),
STACK_USAGE("nvme_error_status", 0),
STACK_USAGE("nvme_set_latency_tolerance", 0),
STACK_USAGE("nvme_release_subsystem", 8),
STACK_USAGE("nvme_put_subsystem", 8),
STACK_USAGE("nvme_subsys_show_nqn", 0),
STACK_USAGE("nvme_subsys_show_type", 0),
STACK_USAGE("subsys_model_show", 0),
STACK_USAGE("subsys_serial_show", 0),
STACK_USAGE("subsys_firmware_rev_show", 0),
STACK_USAGE("nvme_get_log", 72),
STACK_USAGE("nvme_get_effects_log", 120),
STACK_USAGE("nvme_init_ctrl_finish", 160),
STACK_USAGE("nvme_dev_open", 16),
STACK_USAGE("nvme_dev_release", 8),
STACK_USAGE("nvme_sysfs_reset", 32),
STACK_USAGE("nvme_sysfs_rescan", 8),
STACK_USAGE("wwid_show", 40),
STACK_USAGE("nguid_show", 0),
STACK_USAGE("uuid_show", 16),
STACK_USAGE("eui_show", 0),
STACK_USAGE("nsid_show", 0),
STACK_USAGE("nvme_ns_id_attrs_are_visible", 16),
STACK_USAGE("model_show", 0),
STACK_USAGE("serial_show", 0),
STACK_USAGE("firmware_rev_show", 0),
STACK_USAGE("cntlid_show", 0),
STACK_USAGE("numa_node_show", 0),
STACK_USAGE("queue_count_show", 0),
STACK_USAGE("sqsize_show", 0),
STACK_USAGE("kato_show", 0),
STACK_USAGE("nvme_sysfs_delete", 16),
STACK_USAGE("nvme_sysfs_show_transport", 0),
STACK_USAGE("nvme_sysfs_show_state", 0),
STACK_USAGE("nvme_sysfs_show_subsysnqn", 0),
STACK_USAGE("nvme_sysfs_show_hostnqn", 0),
STACK_USAGE("nvme_sysfs_show_hostid", 0),
STACK_USAGE("nvme_sysfs_show_address", 0),
STACK_USAGE("nvme_ctrl_loss_tmo_show", 0),
STACK_USAGE("nvme_ctrl_loss_tmo_store", 32),
STACK_USAGE("nvme_ctrl_reconnect_delay_show", 0),
STACK_USAGE("nvme_ctrl_reconnect_delay_store", 32),
STACK_USAGE("nvme_ctrl_fast_io_fail_tmo_show", 0),
STACK_USAGE("nvme_ctrl_fast_io_fail_tmo_store", 32),
STACK_USAGE("cntrltype_show", 0),
STACK_USAGE("dctype_show", 0),
STACK_USAGE("nvme_dev_attrs_are_visible", 0),
STACK_USAGE("nvme_subsys_check_duplicate_ids", 56),
STACK_USAGE("nvme_cdev_rel", 0),
STACK_USAGE("nvme_cdev_del", 8),
STACK_USAGE("nvme_cdev_add", 40),
STACK_USAGE("nvme_ns_chr_open", 16),
STACK_USAGE("nvme_ns_chr_release", 8),
STACK_USAGE("nvme_add_ns_cdev", 32),
STACK_USAGE("nvme_complete_rq", 24),
STACK_USAGE("nvme_find_get_ns", 40),
STACK_USAGE("nvme_ns_add_to_ctrl_list", 0),
STACK_USAGE("nvme_complete_batch_req", 8),
STACK_USAGE("nvme_ns_remove", 16),
STACK_USAGE("nvme_validate_or_alloc_ns", 208),
STACK_USAGE("nvme_host_path_error", 0),
STACK_USAGE("nvme_cancel_request", 0),
STACK_USAGE("nvme_scan_work", 136),
STACK_USAGE("nvme_remove_namespaces", 56),
STACK_USAGE("nvme_class_uevent", 24),
STACK_USAGE("nvme_async_event_work", 40),
STACK_USAGE("nvme_cancel_tagset", 8),
STACK_USAGE("nvme_fw_act_work", 128),
STACK_USAGE("nvme_complete_async_event", 24),
STACK_USAGE("nvme_cancel_admin_tagset", 8),
STACK_USAGE("nvme_stop_ctrl", 8),
STACK_USAGE("nvme_start_ctrl", 136),
STACK_USAGE("nvme_uninit_ctrl", 8),
STACK_USAGE("nvme_free_ctrl", 56),
STACK_USAGE("nvme_init_ctrl", 32),
STACK_USAGE("nvme_change_ctrl_state", 40),
STACK_USAGE("nvme_kill_queues", 24),
STACK_USAGE("nvme_unfreeze", 24),
STACK_USAGE("nvme_wait_freeze_timeout", 32),
STACK_USAGE("nvme_wait_freeze", 24),
STACK_USAGE("nvme_start_freeze", 24),
STACK_USAGE("nvme_stop_queues", 24),
STACK_USAGE("nvme_start_queues", 24),
STACK_USAGE("nvme_stop_admin_queue", 0),
STACK_USAGE("nvme_start_admin_queue", 0),
STACK_USAGE("nvme_sync_io_queues", 24),
STACK_USAGE("__bpf_trace_nvme_setup_cmd", 0),
STACK_USAGE("__traceiter_nvme_setup_cmd", 24),
STACK_USAGE("perf_trace_nvme_setup_cmd", 64),
STACK_USAGE("trace_event_raw_event_nvme_setup_cmd", 80),
STACK_USAGE("trace_raw_output_nvme_setup_cmd", 88),
STACK_USAGE("nvme_sync_queues", 32),
STACK_USAGE("nvme_ctrl_from_file", 0),
STACK_USAGE("nvme_core_init", 16),
STACK_USAGE("nvme_core_exit", 0),
STACK_USAGE("nvme_wait_reset", 72),
STACK_USAGE("nvme_tryget_ns_head", 8),
STACK_USAGE("nvme_put_ns_head", 8),
STACK_USAGE("nvme_put_ns", 24),
STACK_USAGE("nvme_init_request", 0),
STACK_USAGE("nvme_fail_nonready_command", 0),
STACK_USAGE("__nvme_check_ready", 0),
STACK_USAGE("nvme_setup_discard", 48),
STACK_USAGE("nvme_setup_rw", 8),
STACK_USAGE("__bpf_trace_nvme_complete_rq", 0),
STACK_USAGE("__traceiter_nvme_complete_rq", 16),
STACK_USAGE("perf_trace_nvme_complete_rq", 56),
STACK_USAGE("trace_event_raw_event_nvme_complete_rq", 72),
STACK_USAGE("trace_nvme_complete_rq", 0),
STACK_USAGE("trace_raw_output_nvme_complete_rq", 40),
STACK_USAGE("nvme_cleanup_cmd", 0),
STACK_USAGE("nvme_setup_cmd", 32),
STACK_USAGE("__nvme_submit_sync_cmd", 56),
STACK_USAGE("nvme_fault_inject_init", 32),
STACK_USAGE("nvme_fault_inject_fini", 0),
STACK_USAGE("nvme_should_fail", 16),
STACK_USAGE("nvme_user_cmd", 184),
STACK_USAGE("nvme_user_cmd64", 192),
STACK_USAGE("__nvme_ioctl", 128),
STACK_USAGE("nvme_ioctl", 0),
STACK_USAGE("nvme_ns_chr_ioctl", 0),
STACK_USAGE("nvme_dev_ioctl", 40),
STACK_USAGE("nvme_submit_user_cmd", 264),
STACK_USAGE("nvme_queue_rqs", 56),
STACK_USAGE("nvme_pci_complete_rq", 32),
STACK_USAGE("nvme_pci_complete_batch", 40),
STACK_USAGE("nvme_poll_cq", 64),
STACK_USAGE("nvme_irq", 40),
STACK_USAGE("nvme_irq_check", 0),
STACK_USAGE("nvme_poll", 32),
STACK_USAGE("nvme_pci_submit_async_event", 16),
STACK_USAGE("abort_endio", 16),
STACK_USAGE("nvme_timeout", 128),
STACK_USAGE("nvme_free_queues", 40),
STACK_USAGE("nvme_suspend_io_queues", 48),
STACK_USAGE("nvme_alloc_queue", 56),
STACK_USAGE("io_queue_depth_set", 0),
STACK_USAGE("nvme_free_host_mem", 16),
STACK_USAGE("nvme_setup_host_mem", 208),
STACK_USAGE("cmb_show", 0),
STACK_USAGE("cmbloc_show", 0),
STACK_USAGE("cmbsz_show", 0),
STACK_USAGE("hmb_show", 0),
STACK_USAGE("hmb_store", 112),
STACK_USAGE("nvme_pci_attrs_are_visible", 0),
STACK_USAGE("nvme_calc_irq_sets", 0),
STACK_USAGE("nvme_del_queue_end", 8),
STACK_USAGE("nvme_del_cq_end", 8),
STACK_USAGE("__nvme_disable_io_queues", 160),
STACK_USAGE("nvme_dev_disable", 56),
STACK_USAGE("nvme_pci_free_ctrl", 16),
STACK_USAGE("nvme_reset_work", 240),
STACK_USAGE("nvme_remove_dead_ctrl_work", 8),
STACK_USAGE("nvme_pci_reg_read32", 0),
STACK_USAGE("nvme_pci_reg_write32", 0),
STACK_USAGE("nvme_pci_reg_read64", 0),
STACK_USAGE("nvme_pci_get_address", 0),
STACK_USAGE("nvme_async_probe", 8),
STACK_USAGE("nvme_probe", 80),
STACK_USAGE("nvme_reset_prepare", 16),
STACK_USAGE("nvme_reset_done", 8),
STACK_USAGE("nvme_shutdown", 8),
STACK_USAGE("nvme_remove", 24),
STACK_USAGE("nvme_resume", 16),
STACK_USAGE("nvme_suspend", 104),
STACK_USAGE("nvme_simple_suspend", 8),
STACK_USAGE("nvme_simple_resume", 0),
STACK_USAGE("nvme_error_detected", 8),
STACK_USAGE("nvme_slot_reset", 16),
STACK_USAGE("nvme_error_resume", 0),
STACK_USAGE("nvme_init", 0),
STACK_USAGE("nvme_exit", 0),
STACK_USAGE("nvme_admin_init_hctx", 0),
STACK_USAGE("nvme_init_hctx", 0),
STACK_USAGE("nvme_pci_init_request", 0),
STACK_USAGE("nvme_pci_map_queues", 48),
STACK_USAGE("nvme_commit_rqs", 16),
STACK_USAGE("nvme_print_sgl", 56),
STACK_USAGE("io_queue_count_set", 48),
STACK_USAGE("nvme_prep_rq", 128),
STACK_USAGE("nvme_queue_rq", 40),
STACK_USAGE("nvme_trace_parse_admin_cmd", 16),
STACK_USAGE("nvme_trace_parse_nvm_cmd", 16),
STACK_USAGE("nvme_trace_parse_fabrics_cmd", 16),
STACK_USAGE("nvme_trace_disk_name", 24),
STACK_USAGE("nvmem_access_with_keepouts", 80),
STACK_USAGE("nvmem_device_get", 0),
STACK_USAGE("nvmem_device_find", 0),
STACK_USAGE("devm_nvmem_device_match", 0),
STACK_USAGE("devm_nvmem_device_release", 8),
STACK_USAGE("devm_nvmem_device_put", 0),
STACK_USAGE("nvmem_device_put", 8),
STACK_USAGE("devm_nvmem_device_get", 24),
STACK_USAGE("nvmem_cell_get", 40),
STACK_USAGE("devm_nvmem_cell_release", 16),
STACK_USAGE("devm_nvmem_cell_get", 24),
STACK_USAGE("devm_nvmem_cell_match", 0),
STACK_USAGE("devm_nvmem_cell_put", 0),
STACK_USAGE("nvmem_cell_put", 16),
STACK_USAGE("__nvmem_cell_read", 64),
STACK_USAGE("nvmem_cell_read", 40),
STACK_USAGE("__nvmem_cell_entry_write", 80),
STACK_USAGE("nvmem_cell_write", 0),
STACK_USAGE("nvmem_cell_read_common", 56),
STACK_USAGE("nvmem_cell_read_u8", 0),
STACK_USAGE("nvmem_cell_read_u16", 0),
STACK_USAGE("nvmem_cell_read_u32", 0),
STACK_USAGE("nvmem_cell_read_u64", 0),
STACK_USAGE("nvmem_reg_read", 72),
STACK_USAGE("nvmem_cell_read_variable_common", 48),
STACK_USAGE("nvmem_cell_read_variable_le_u32", 32),
STACK_USAGE("nvmem_cell_read_variable_le_u64", 32),
STACK_USAGE("nvmem_device_cell_read", 88),
STACK_USAGE("nvmem_device_cell_write", 88),
STACK_USAGE("nvmem_device_read", 8),
STACK_USAGE("nvmem_device_write", 16),
STACK_USAGE("nvmem_add_cell_table", 8),
STACK_USAGE("nvmem_del_cell_table", 8),
STACK_USAGE("nvmem_add_cell_lookups", 16),
STACK_USAGE("nvmem_del_cell_lookups", 16),
STACK_USAGE("nvmem_dev_name", 0),
STACK_USAGE("nvmem_init", 0),
STACK_USAGE("nvmem_exit", 0),
STACK_USAGE("type_show", 0),
STACK_USAGE("bin_attr_nvmem_read", 8),
STACK_USAGE("bin_attr_nvmem_write", 16),
STACK_USAGE("nvmem_bin_attr_is_visible", 0),
STACK_USAGE("nvmem_sysfs_setup_compat", 32),
STACK_USAGE("nvmem_release", 16),
STACK_USAGE("nvmem_device_remove_all_cells", 48),
STACK_USAGE("nvmem_add_cells", 56),
STACK_USAGE("nvmem_register_notifier", 0),
STACK_USAGE("nvmem_unregister_notifier", 0),
STACK_USAGE("nvmem_add_cells_from_table", 48),
STACK_USAGE("kref_put", 56),
STACK_USAGE("nvmem_register", 48),
STACK_USAGE("nvmem_unregister", 0),
STACK_USAGE("devm_nvmem_unregister", 0),
STACK_USAGE("devm_nvmem_register", 16),
STACK_USAGE("__nvmem_device_get", 16),
STACK_USAGE("pci_generic_config_write", 16),
STACK_USAGE("pci_generic_config_read32", 24),
STACK_USAGE("pci_generic_config_write32", 48),
STACK_USAGE("pci_bus_set_ops", 24),
STACK_USAGE("pci_wait_cfg", 64),
STACK_USAGE("pci_user_read_config_byte", 40),
STACK_USAGE("pci_user_read_config_word", 48),
STACK_USAGE("pci_user_read_config_dword", 48),
STACK_USAGE("pci_user_write_config_byte", 24),
STACK_USAGE("pci_user_write_config_word", 32),
STACK_USAGE("pci_user_write_config_dword", 32),
STACK_USAGE("pci_cfg_access_lock", 8),
STACK_USAGE("pci_cfg_access_trylock", 8),
STACK_USAGE("pci_cfg_access_unlock", 8),
STACK_USAGE("pcie_cap_has_lnkctl", 0),
STACK_USAGE("pcie_cap_has_rtctl", 0),
STACK_USAGE("pcie_capability_reg_implemented", 0),
STACK_USAGE("pcie_capability_read_word", 32),
STACK_USAGE("pcie_capability_read_dword", 24),
STACK_USAGE("pcie_capability_write_word", 24),
STACK_USAGE("pcie_capability_write_dword", 24),
STACK_USAGE("pcie_capability_clear_and_set_word", 56),
STACK_USAGE("pcie_capability_clear_and_set_dword", 56),
STACK_USAGE("pci_read_config_byte", 0),
STACK_USAGE("pci_read_config_word", 0),
STACK_USAGE("pci_read_config_dword", 0),
STACK_USAGE("pci_write_config_byte", 0),
STACK_USAGE("pci_write_config_word", 0),
STACK_USAGE("pci_write_config_dword", 0),
STACK_USAGE("pci_bus_read_config_byte", 24),
STACK_USAGE("pci_bus_read_config_word", 24),
STACK_USAGE("pci_bus_read_config_dword", 24),
STACK_USAGE("pci_bus_write_config_byte", 0),
STACK_USAGE("pci_bus_write_config_word", 0),
STACK_USAGE("pci_bus_write_config_dword", 0),
STACK_USAGE("pci_generic_config_read", 16),
STACK_USAGE("pci_restore_ats_state", 0),
STACK_USAGE("pci_ats_queue_depth", 16),
STACK_USAGE("pci_ats_page_aligned", 16),
STACK_USAGE("pci_pri_init", 24),
STACK_USAGE("pci_enable_pri", 40),
STACK_USAGE("pci_ats_init", 8),
STACK_USAGE("pci_disable_pri", 32),
STACK_USAGE("pci_restore_pri_state", 16),
STACK_USAGE("pci_reset_pri", 8),
STACK_USAGE("pci_prg_resp_pasid_required", 0),
STACK_USAGE("pci_pri_supported", 0),
STACK_USAGE("pci_pasid_init", 8),
STACK_USAGE("pci_enable_pasid", 48),
STACK_USAGE("pci_disable_pasid", 8),
STACK_USAGE("pci_ats_supported", 0),
STACK_USAGE("pci_restore_pasid_state", 0),
STACK_USAGE("pci_pasid_features", 16),
STACK_USAGE("pci_max_pasids", 16),
STACK_USAGE("pci_enable_ats", 8),
STACK_USAGE("pci_disable_ats", 24),
STACK_USAGE("pci_bus_alloc_from_region", 168),
STACK_USAGE("pci_add_resource_offset", 24),
STACK_USAGE("pci_bus_alloc_resource", 48),
STACK_USAGE("pci_bus_clip_resource", 104),
STACK_USAGE("pcibios_resource_survey_bus", 0),
STACK_USAGE("pcibios_bus_add_device", 0),
STACK_USAGE("pci_bus_add_device", 16),
STACK_USAGE("pci_bus_add_devices", 16),
STACK_USAGE("pci_add_resource", 16),
STACK_USAGE("pci_walk_bus", 40),
STACK_USAGE("pci_bus_get", 8),
STACK_USAGE("pci_bus_put", 0),
STACK_USAGE("pci_free_resource_list", 0),
STACK_USAGE("pci_bus_add_resource", 24),
STACK_USAGE("pci_bus_resource_n", 0),
STACK_USAGE("pci_bus_remove_resources", 32),
STACK_USAGE("devm_request_pci_bus_resources", 32),
STACK_USAGE("pci_find_host_bridge", 0),
STACK_USAGE("pci_get_host_bridge_device", 8),
STACK_USAGE("pci_put_host_bridge_device", 0),
STACK_USAGE("pci_set_host_bridge_release", 0),
STACK_USAGE("pcibios_resource_to_bus", 8),
STACK_USAGE("pcibios_bus_to_resource", 0),
STACK_USAGE("acpi_pci_check_ejectable", 48),
STACK_USAGE("check_hotplug", 40),
STACK_USAGE("acpi_pci_detect_ejectable", 16),
STACK_USAGE("acpi_get_hp_hw_control_from_firmware", 96),
STACK_USAGE("attention_read_file", 48),
STACK_USAGE("attention_write_file", 32),
STACK_USAGE("latch_read_file", 48),
STACK_USAGE("presence_read_file", 48),
STACK_USAGE("test_write_file", 32),
STACK_USAGE("__pci_hp_register", 16),
STACK_USAGE("__pci_hp_initialize", 8),
STACK_USAGE("pci_hp_add", 32),
STACK_USAGE("pci_hp_deregister", 8),
STACK_USAGE("pci_hp_del", 40),
STACK_USAGE("pci_hp_destroy", 0),
STACK_USAGE("pci_hotplug_init", 0),
STACK_USAGE("power_read_file", 48),
STACK_USAGE("power_write_file", 24),
STACK_USAGE("pci_sriov_resource_alignment", 0),
STACK_USAGE("pci_restore_iov_state", 40),
STACK_USAGE("pci_vf_drivers_autoprobe", 0),
STACK_USAGE("pci_iov_bus_range", 0),
STACK_USAGE("pci_enable_sriov", 16),
STACK_USAGE("pci_disable_sriov", 8),
STACK_USAGE("pci_num_vf", 0),
STACK_USAGE("pci_vfs_assigned", 24),
STACK_USAGE("pci_sriov_set_totalvfs", 0),
STACK_USAGE("pci_sriov_get_totalvfs", 0),
STACK_USAGE("pci_sriov_configure_simple", 32),
STACK_USAGE("pci_iov_resource_size", 0),
STACK_USAGE("pci_iov_sysfs_link", 56),
STACK_USAGE("pci_iov_virtfn_bus", 0),
STACK_USAGE("sriov_vf_total_msix_show", 32),
STACK_USAGE("sriov_vf_msix_count_store", 72),
STACK_USAGE("sriov_vf_attrs_are_visible", 0),
STACK_USAGE("pci_iov_virtfn_devfn", 0),
STACK_USAGE("pci_iov_add_virtfn", 120),
STACK_USAGE("pci_iov_remove_virtfn", 72),
STACK_USAGE("pci_iov_vf_id", 0),
STACK_USAGE("sriov_totalvfs_show", 0),
STACK_USAGE("sriov_numvfs_show", 24),
STACK_USAGE("sriov_numvfs_store", 48),
STACK_USAGE("sriov_offset_show", 0),
STACK_USAGE("sriov_stride_show", 0),
STACK_USAGE("sriov_vf_device_show", 0),
STACK_USAGE("sriov_drivers_autoprobe_show", 0),
STACK_USAGE("sriov_drivers_autoprobe_store", 32),
STACK_USAGE("sriov_pf_attrs_are_visible", 0),
STACK_USAGE("pcibios_sriov_enable", 0),
STACK_USAGE("pcibios_sriov_disable", 0),
STACK_USAGE("sriov_add_vfs", 32),
STACK_USAGE("sriov_enable", 56),
STACK_USAGE("pci_iov_get_pf_drvdata", 0),
STACK_USAGE("sriov_disable", 24),
STACK_USAGE("pci_iov_set_numvfs", 16),
STACK_USAGE("pci_iov_init", 120),
STACK_USAGE("pci_iov_release", 8),
STACK_USAGE("pci_iov_remove", 0),
STACK_USAGE("pci_iov_update_resource", 80),
STACK_USAGE("pcibios_iov_resource_alignment", 0),
STACK_USAGE("pci_request_irq", 152),
STACK_USAGE("pci_free_irq", 8),
STACK_USAGE("pci_mmap_page_range", 64),
STACK_USAGE("pci_mmap_resource_range", 32),
STACK_USAGE("pci_msi_domain_set_desc", 16),
STACK_USAGE("pci_msi_setup_msi_irqs", 0),
STACK_USAGE("pci_msi_create_irq_domain", 8),
STACK_USAGE("get_msi_id_cb", 0),
STACK_USAGE("pci_msi_domain_get_msi_rid", 16),
STACK_USAGE("pci_msi_teardown_msi_irqs", 8),
STACK_USAGE("pci_msi_get_device_domain", 16),
STACK_USAGE("pci_dev_has_special_msi_domain", 0),
STACK_USAGE("pci_msi_domain_write_msg", 0),
STACK_USAGE("pci_msi_domain_check_cap", 24),
STACK_USAGE("pci_alloc_irq_vectors_affinity", 104),
STACK_USAGE("pci_free_irq_vectors", 8),
STACK_USAGE("pci_irq_vector", 0),
STACK_USAGE("pci_irq_get_affinity", 16),
STACK_USAGE("pci_msi_unmask_irq", 0),
STACK_USAGE("msi_desc_to_pci_dev", 0),
STACK_USAGE("pci_no_msi", 0),
STACK_USAGE("pci_msi_enabled", 0),
STACK_USAGE("__pci_read_msi_msg", 48),
STACK_USAGE("__pci_write_msi_msg", 56),
STACK_USAGE("pci_msi_update_mask", 40),
STACK_USAGE("pci_write_msi_msg", 8),
STACK_USAGE("arch_restore_msi_irqs", 0),
STACK_USAGE("pci_restore_msi_state", 48),
STACK_USAGE("pcim_msi_release", 8),
STACK_USAGE("pci_msi_vec_count", 16),
STACK_USAGE("pci_disable_msi", 40),
STACK_USAGE("pci_msix_vec_count", 16),
STACK_USAGE("pci_disable_msix", 32),
STACK_USAGE("__pci_enable_msi_range", 208),
STACK_USAGE("pci_enable_msi", 0),
STACK_USAGE("__pci_enable_msix_range", 248),
STACK_USAGE("pci_enable_msix_range", 0),
STACK_USAGE("pci_msi_mask_irq", 0),
STACK_USAGE("pci_msi_init", 24),
STACK_USAGE("pci_msix_init", 24),
STACK_USAGE("acpi_pci_set_power_state", 40),
STACK_USAGE("acpi_pci_get_power_state", 8),
STACK_USAGE("acpi_pci_refresh_power_state", 8),
STACK_USAGE("acpi_pci_root_get_mcfg_addr", 24),
STACK_USAGE("acpi_pci_wakeup", 32),
STACK_USAGE("acpi_pci_need_resume", 16),
STACK_USAGE("acpi_pci_add_bus", 24),
STACK_USAGE("acpi_pci_remove_bus", 0),
STACK_USAGE("pci_acpi_set_companion_lookup_hook", 16),
STACK_USAGE("pci_acpi_clear_companion_lookup_hook", 0),
STACK_USAGE("acpi_pci_find_companion", 32),
STACK_USAGE("pci_acpi_setup", 56),
STACK_USAGE("pci_acpi_cleanup", 16),
STACK_USAGE("program_hpx_type0", 32),
STACK_USAGE("pci_msi_register_fwnode_provider", 0),
STACK_USAGE("pci_host_bridge_acpi_msi_domain", 88),
STACK_USAGE("acpi_pci_init", 0),
STACK_USAGE("pci_acpi_program_hp_params", 168),
STACK_USAGE("pciehp_is_native", 0),
STACK_USAGE("shpchp_is_native", 0),
STACK_USAGE("pci_acpi_wake_bus", 0),
STACK_USAGE("pci_acpi_wake_dev", 8),
STACK_USAGE("pci_acpi_add_bus_pm_notifier", 0),
STACK_USAGE("pci_acpi_add_pm_notifier", 0),
STACK_USAGE("acpi_pci_choose_state", 0),
STACK_USAGE("pci_set_acpi_fwnode", 16),
STACK_USAGE("pci_dev_acpi_reset", 32),
STACK_USAGE("acpi_pci_power_manageable", 8),
STACK_USAGE("acpi_pci_bridge_d3", 32),
STACK_USAGE("pci_pm_freeze_noirq", 32),
STACK_USAGE("pci_match_id", 0),
STACK_USAGE("pci_pm_thaw_noirq", 24),
STACK_USAGE("pci_pm_thaw", 24),
STACK_USAGE("pci_pm_poweroff", 32),
STACK_USAGE("pci_pm_poweroff_late", 8),
STACK_USAGE("pci_pm_poweroff_noirq", 32),
STACK_USAGE("pci_pm_restore_noirq", 24),
STACK_USAGE("pci_pm_restore", 40),
STACK_USAGE("pci_pm_runtime_suspend", 40),
STACK_USAGE("pci_pm_runtime_resume", 40),
STACK_USAGE("pci_pm_runtime_idle", 0),
STACK_USAGE("pci_match_device", 32),
STACK_USAGE("__pci_register_driver", 16),
STACK_USAGE("pci_unregister_driver", 40),
STACK_USAGE("pci_dev_driver", 0),
STACK_USAGE("pci_bus_match", 0),
STACK_USAGE("pci_dev_get", 8),
STACK_USAGE("pci_dev_put", 0),
STACK_USAGE("pci_uevent", 24),
STACK_USAGE("pci_bus_num_vf", 0),
STACK_USAGE("pci_dma_configure", 24),
STACK_USAGE("pcie_port_bus_match", 0),
STACK_USAGE("pci_driver_init", 0),
STACK_USAGE("new_id_store", 112),
STACK_USAGE("remove_id_store", 56),
STACK_USAGE("local_pci_probe", 32),
STACK_USAGE("pcibios_alloc_irq", 0),
STACK_USAGE("pcibios_free_irq", 0),
STACK_USAGE("pci_device_probe", 120),
STACK_USAGE("pci_device_remove", 24),
STACK_USAGE("pci_device_shutdown", 24),
STACK_USAGE("pci_add_dynid", 64),
STACK_USAGE("pci_legacy_suspend", 40),
STACK_USAGE("pci_pm_prepare", 8),
STACK_USAGE("pci_pm_complete", 24),
STACK_USAGE("pci_pm_suspend", 32),
STACK_USAGE("pci_pm_suspend_late", 8),
STACK_USAGE("pci_pm_suspend_noirq", 40),
STACK_USAGE("pci_pm_resume_noirq", 40),
STACK_USAGE("pci_pm_resume_early", 8),
STACK_USAGE("pci_pm_resume", 40),
STACK_USAGE("pci_pm_freeze", 24),
STACK_USAGE("smbios_attr_is_visible", 40),
STACK_USAGE("dsm_get_label", 40),
STACK_USAGE("label_show", 0),
STACK_USAGE("acpi_index_show", 0),
STACK_USAGE("acpi_attr_is_visible", 16),
STACK_USAGE("find_smbios_instance_string", 48),
STACK_USAGE("smbios_label_show", 0),
STACK_USAGE("index_show", 0),
STACK_USAGE("pci_mmap_fits", 56),
STACK_USAGE("pci_mmap_resource", 48),
STACK_USAGE("pci_mmap_resource_uc", 0),
STACK_USAGE("pci_mmap_resource_wc", 0),
STACK_USAGE("pci_read_resource_io", 0),
STACK_USAGE("local_cpus_show", 0),
STACK_USAGE("pci_write_resource_io", 40),
STACK_USAGE("pci_remove_resource_files", 24),
STACK_USAGE("pci_create_attr", 40),
STACK_USAGE("local_cpulist_show", 0),
STACK_USAGE("pci_write_rom", 0),
STACK_USAGE("pci_read_rom", 64),
STACK_USAGE("cpuaffinity_show", 0),
STACK_USAGE("pci_dev_rom_attr_is_visible", 0),
STACK_USAGE("reset_store", 48),
STACK_USAGE("pci_dev_reset_attr_is_visible", 8),
STACK_USAGE("pci_create_sysfs_dev_files", 32),
STACK_USAGE("cpulistaffinity_show", 0),
STACK_USAGE("pci_remove_sysfs_dev_files", 0),
STACK_USAGE("pci_sysfs_init", 16),
STACK_USAGE("pci_dev_attrs_are_visible", 0),
STACK_USAGE("pci_dev_hp_attrs_are_visible", 0),
STACK_USAGE("pci_bridge_attrs_are_visible", 0),
STACK_USAGE("pcie_dev_attrs_are_visible", 0),
STACK_USAGE("power_state_show", 0),
STACK_USAGE("resource_show", 72),
STACK_USAGE("max_link_speed_show", 8),
STACK_USAGE("max_link_width_show", 8),
STACK_USAGE("current_link_speed_show", 24),
STACK_USAGE("current_link_width_show", 24),
STACK_USAGE("secondary_bus_number_show", 24),
STACK_USAGE("subordinate_bus_number_show", 24),
STACK_USAGE("ari_enabled_show", 0),
STACK_USAGE("modalias_show", 16),
STACK_USAGE("enable_store", 56),
STACK_USAGE("enable_show", 0),
STACK_USAGE("numa_node_store", 40),
STACK_USAGE("numa_node_show", 0),
STACK_USAGE("dma_mask_bits_show", 8),
STACK_USAGE("consistent_dma_mask_bits_show", 8),
STACK_USAGE("msi_bus_show", 0),
STACK_USAGE("msi_bus_store", 48),
STACK_USAGE("rescan_store", 32),
STACK_USAGE("dev_rescan_store", 32),
STACK_USAGE("vendor_show", 0),
STACK_USAGE("remove_store", 40),
STACK_USAGE("device_show", 0),
STACK_USAGE("bus_rescan_store", 32),
STACK_USAGE("subsystem_vendor_show", 0),
STACK_USAGE("subsystem_device_show", 0),
STACK_USAGE("revision_show", 0),
STACK_USAGE("d3cold_allowed_store", 32),
STACK_USAGE("class_show", 0),
STACK_USAGE("d3cold_allowed_show", 0),
STACK_USAGE("irq_show", 8),
STACK_USAGE("driver_override_store", 40),
STACK_USAGE("driver_override_show", 24),
STACK_USAGE("boot_vga_show", 16),
STACK_USAGE("pci_read_config", 80),
STACK_USAGE("broken_parity_status_show", 0),
STACK_USAGE("pci_write_config", 56),
STACK_USAGE("broken_parity_status_store", 32),
STACK_USAGE("pci_dev_config_attr_is_visible", 0),
STACK_USAGE("pci_raw_set_power_state", 48),
STACK_USAGE("pci_update_current_state", 32),
STACK_USAGE("pci_refresh_power_state", 32),
STACK_USAGE("pci_platform_power_transition", 40),
STACK_USAGE("pci_resume_one", 0),
STACK_USAGE("pci_resume_bus", 0),
STACK_USAGE("pci_dev_wait", 64),
STACK_USAGE("pci_power_up", 8),
STACK_USAGE("__pci_dev_set_current_state", 0),
STACK_USAGE("pci_bus_set_current_state", 16),
STACK_USAGE("pci_set_power_state", 40),
STACK_USAGE("pci_find_saved_cap", 0),
STACK_USAGE("pci_find_saved_ext_cap", 0),
STACK_USAGE("pci_ats_disabled", 0),
STACK_USAGE("pci_bridge_reconfigure_ltr", 24),
STACK_USAGE("pcie_port_pm_setup", 8),
STACK_USAGE("pci_save_state", 48),
STACK_USAGE("pci_restore_state", 80),
STACK_USAGE("pci_store_saved_state", 32),
STACK_USAGE("pci_bus_max_busnr", 24),
STACK_USAGE("pci_load_saved_state", 24),
STACK_USAGE("pci_load_and_free_saved_state", 40),
STACK_USAGE("pcibios_enable_device", 0),
STACK_USAGE("do_pci_enable_device", 40),
STACK_USAGE("pci_reenable_device", 0),
STACK_USAGE("pci_enable_bridge", 24),
STACK_USAGE("pci_enable_device_flags", 40),
STACK_USAGE("pci_enable_device_io", 0),
STACK_USAGE("pci_status_get_and_clear_errors", 24),
STACK_USAGE("pci_enable_device_mem", 0),
STACK_USAGE("pci_enable_device", 0),
STACK_USAGE("pcim_release", 64),
STACK_USAGE("pcim_enable_device", 32),
STACK_USAGE("pcim_pin_device", 0),
STACK_USAGE("pcibios_device_add", 0),
STACK_USAGE("pcibios_release_device", 0),
STACK_USAGE("pcibios_disable_device", 0),
STACK_USAGE("pcibios_penalize_isa_irq", 0),
STACK_USAGE("pci_disable_enabled_device", 24),
STACK_USAGE("pci_disable_device", 32),
STACK_USAGE("pcibios_set_pcie_reset_state", 0),
STACK_USAGE("pci_set_pcie_reset_state", 0),
STACK_USAGE("pcie_clear_root_pme_status", 0),
STACK_USAGE("pci_check_pme_status", 40),
STACK_USAGE("pci_pme_wakeup", 40),
STACK_USAGE("pci_pme_wakeup_bus", 0),
STACK_USAGE("pci_pme_capable", 0),
STACK_USAGE("pci_pme_list_scan", 64),
STACK_USAGE("pci_ioremap_bar", 0),
STACK_USAGE("pci_pme_restore", 24),
STACK_USAGE("pci_pme_active", 32),
STACK_USAGE("pci_ioremap_wc_bar", 0),
STACK_USAGE("__pci_enable_wake", 8),
STACK_USAGE("pci_enable_wake", 0),
STACK_USAGE("pci_wake_from_d3", 0),
STACK_USAGE("pci_target_state", 16),
STACK_USAGE("pci_prepare_to_sleep", 24),
STACK_USAGE("pci_back_from_sleep", 16),
STACK_USAGE("pci_finish_runtime_suspend", 40),
STACK_USAGE("pci_dev_run_wake", 24),
STACK_USAGE("pci_dev_need_resume", 16),
STACK_USAGE("pci_dev_adjust_pme", 32),
STACK_USAGE("pci_dev_complete_resume", 48),
STACK_USAGE("pci_choose_state", 8),
STACK_USAGE("pci_config_pm_runtime_get", 16),
STACK_USAGE("pci_config_pm_runtime_put", 8),
STACK_USAGE("pci_bridge_d3_possible", 16),
STACK_USAGE("pci_dev_check_d3cold", 0),
STACK_USAGE("pci_bridge_d3_update", 40),
STACK_USAGE("pci_d3cold_enable", 0),
STACK_USAGE("pci_d3cold_disable", 0),
STACK_USAGE("pci_pm_init", 40),
STACK_USAGE("pci_ea_init", 128),
STACK_USAGE("pci_add_cap_save_buffer", 32),
STACK_USAGE("pci_add_ext_cap_save_buffer", 56),
STACK_USAGE("pci_allocate_cap_save_buffers", 8),
STACK_USAGE("pci_free_cap_save_buffers", 8),
STACK_USAGE("pci_configure_ari", 48),
STACK_USAGE("pci_acs_enabled", 40),
STACK_USAGE("pci_acs_path_enabled", 24),
STACK_USAGE("pci_acs_init", 48),
STACK_USAGE("pci_dev_str_match", 88),
STACK_USAGE("pci_rebar_find_pos", 64),
STACK_USAGE("pci_rebar_get_possible_sizes", 32),
STACK_USAGE("pci_rebar_get_current_size", 24),
STACK_USAGE("pci_rebar_set_size", 40),
STACK_USAGE("pci_enable_atomic_ops_to_root", 64),
STACK_USAGE("pci_swizzle_interrupt_pin", 0),
STACK_USAGE("pci_get_interrupt_pin", 0),
STACK_USAGE("pci_common_swizzle", 0),
STACK_USAGE("pci_release_region", 16),
STACK_USAGE("__pci_request_region", 32),
STACK_USAGE("pci_request_region", 0),
STACK_USAGE("pci_release_selected_regions", 48),
STACK_USAGE("__pci_request_selected_regions", 48),
STACK_USAGE("pci_request_selected_regions", 0),
STACK_USAGE("pci_request_selected_regions_exclusive", 0),
STACK_USAGE("pci_release_regions", 0),
STACK_USAGE("pci_request_regions", 0),
STACK_USAGE("pci_request_regions_exclusive", 0),
STACK_USAGE("pci_register_io_range", 0),
STACK_USAGE("pci_pio_to_address", 0),
STACK_USAGE("pci_address_to_pio", 0),
STACK_USAGE("pci_remap_iospace", 0),
STACK_USAGE("pci_unmap_iospace", 0),
STACK_USAGE("devm_pci_unmap_iospace", 0),
STACK_USAGE("devm_pci_remap_iospace", 8),
STACK_USAGE("devm_pci_remap_cfgspace", 32),
STACK_USAGE("devm_pci_remap_cfg_resource", 48),
STACK_USAGE("pcibios_setup", 0),
STACK_USAGE("pcibios_set_master", 24),
STACK_USAGE("pci_set_master", 24),
STACK_USAGE("pci_clear_master", 24),
STACK_USAGE("pci_set_cacheline_size", 24),
STACK_USAGE("pci_find_next_capability", 56),
STACK_USAGE("pci_set_mwi", 32),
STACK_USAGE("pcim_set_mwi", 8),
STACK_USAGE("pci_try_set_mwi", 0),
STACK_USAGE("pci_clear_mwi", 24),
STACK_USAGE("pci_disable_parity", 24),
STACK_USAGE("pci_intx", 32),
STACK_USAGE("pci_check_and_mask_intx", 48),
STACK_USAGE("pci_check_and_unmask_intx", 48),
STACK_USAGE("pci_wait_for_pending_transaction", 0),
STACK_USAGE("pcie_flr", 8),
STACK_USAGE("pcie_reset_flr", 0),
STACK_USAGE("pci_af_flr", 40),
STACK_USAGE("pci_pm_reset", 32),
STACK_USAGE("pcie_wait_for_link_delay", 64),
STACK_USAGE("pcie_wait_for_link", 0),
STACK_USAGE("pci_find_capability", 56),
STACK_USAGE("pci_bridge_wait_for_secondary_bus", 24),
STACK_USAGE("pci_reset_secondary_bus", 24),
STACK_USAGE("pcibios_reset_secondary_bus", 24),
STACK_USAGE("pci_bridge_secondary_bus_reset", 8),
STACK_USAGE("pci_reset_bus_function", 32),
STACK_USAGE("pci_dev_lock", 8),
STACK_USAGE("pci_dev_trylock", 8),
STACK_USAGE("pci_dev_unlock", 8),
STACK_USAGE("pci_dev_save_and_disable", 8),
STACK_USAGE("pci_bus_find_capability", 56),
STACK_USAGE("reset_method_show", 48),
STACK_USAGE("reset_method_store", 80),
STACK_USAGE("pci_dev_reset_method_attr_is_visible", 0),
STACK_USAGE("__pci_reset_function_locked", 8),
STACK_USAGE("pci_init_reset_methods", 32),
STACK_USAGE("pci_find_next_ext_capability", 64),
STACK_USAGE("pci_reset_function", 32),
STACK_USAGE("pci_reset_function_locked", 24),
STACK_USAGE("pci_try_reset_function", 32),
STACK_USAGE("pci_bus_resetable", 24),
STACK_USAGE("pci_bus_lock", 16),
STACK_USAGE("pci_bus_unlock", 16),
STACK_USAGE("pci_bus_trylock", 32),
STACK_USAGE("pci_bus_save_and_disable_locked", 16),
STACK_USAGE("pci_bus_restore_locked", 24),
STACK_USAGE("pci_slot_reset", 48),
STACK_USAGE("pci_probe_reset_slot", 0),
STACK_USAGE("pci_bus_reset", 16),
STACK_USAGE("pci_bus_error_reset", 24),
STACK_USAGE("pci_probe_reset_bus", 0),
STACK_USAGE("pci_reset_bus", 32),
STACK_USAGE("pcix_get_max_mmrbc", 32),
STACK_USAGE("pcix_get_mmrbc", 32),
STACK_USAGE("pcix_set_mmrbc", 56),
STACK_USAGE("pci_find_ext_capability", 56),
STACK_USAGE("pcie_get_readrq", 16),
STACK_USAGE("pcie_set_readrq", 32),
STACK_USAGE("pcie_get_mps", 16),
STACK_USAGE("pcie_set_mps", 8),
STACK_USAGE("pcie_bandwidth_available", 64),
STACK_USAGE("pci_get_dsn", 48),
STACK_USAGE("pcie_get_speed_cap", 24),
STACK_USAGE("pcie_get_width_cap", 16),
STACK_USAGE("pcie_bandwidth_capable", 40),
STACK_USAGE("__pcie_print_link_status", 96),
STACK_USAGE("pcie_print_link_status", 0),
STACK_USAGE("pci_select_bars", 0),
STACK_USAGE("pci_register_set_vga_state", 0),
STACK_USAGE("pci_set_vga_state", 56),
STACK_USAGE("pci_pr3_present", 8),
STACK_USAGE("__pci_find_next_ht_cap", 72),
STACK_USAGE("pci_add_dma_alias", 24),
STACK_USAGE("pci_devs_are_dma_aliases", 16),
STACK_USAGE("pci_device_is_present", 16),
STACK_USAGE("pci_ignore_hotplug", 0),
STACK_USAGE("pci_real_dma_dev", 0),
STACK_USAGE("pcibios_default_alignment", 0),
STACK_USAGE("pci_resource_to_user", 0),
STACK_USAGE("pci_reassigndev_resource_alignment", 88),
STACK_USAGE("resource_alignment_show", 8),
STACK_USAGE("resource_alignment_store", 24),
STACK_USAGE("pci_resource_alignment_sysfs_init", 0),
STACK_USAGE("pci_find_next_ht_capability", 0),
STACK_USAGE("pci_ext_cfg_avail", 0),
STACK_USAGE("pci_fixup_cardbus", 0),
STACK_USAGE("pci_setup", 48),
STACK_USAGE("pci_realloc_setup_params", 0),
STACK_USAGE("pci_find_ht_capability", 40),
STACK_USAGE("pci_find_vsec_capability", 72),
STACK_USAGE("pci_find_dvsec_capability", 72),
STACK_USAGE("pci_reset_supported", 0),
STACK_USAGE("pci_find_parent_resource", 24),
STACK_USAGE("pci_find_resource", 0),
STACK_USAGE("pci_wait_for_pending", 48),
STACK_USAGE("pci_request_acs", 0),
STACK_USAGE("pci_enable_acs", 48),
STACK_USAGE("pcie_aspm_pm_state_change", 48),
STACK_USAGE("pcie_aspm_powersave_config_link", 32),
STACK_USAGE("__pci_disable_link_state", 48),
STACK_USAGE("pci_disable_link_state_locked", 0),
STACK_USAGE("pci_disable_link_state", 0),
STACK_USAGE("pcie_aspm_set_policy", 48),
STACK_USAGE("pcie_aspm_get_policy", 32),
STACK_USAGE("pcie_aspm_enabled", 0),
STACK_USAGE("aspm_attr_store_common", 40),
STACK_USAGE("l0s_aspm_show", 0),
STACK_USAGE("l0s_aspm_store", 0),
STACK_USAGE("l1_aspm_show", 0),
STACK_USAGE("l1_aspm_store", 0),
STACK_USAGE("l1_1_aspm_show", 0),
STACK_USAGE("l1_1_aspm_store", 0),
STACK_USAGE("l1_2_aspm_show", 0),
STACK_USAGE("l1_2_aspm_store", 0),
STACK_USAGE("l1_1_pcipm_show", 0),
STACK_USAGE("l1_1_pcipm_store", 0),
STACK_USAGE("l1_2_pcipm_show", 0),
STACK_USAGE("l1_2_pcipm_store", 0),
STACK_USAGE("clkpm_show", 0),
STACK_USAGE("clkpm_store", 56),
STACK_USAGE("aspm_ctrl_attrs_are_visible", 0),
STACK_USAGE("pcie_aspm_disable", 8),
STACK_USAGE("pcie_no_aspm", 0),
STACK_USAGE("pcie_aspm_support_enabled", 0),
STACK_USAGE("pcie_set_clkpm", 32),
STACK_USAGE("pcie_clkpm_cap_init", 80),
STACK_USAGE("pcie_aspm_check_latency", 72),
STACK_USAGE("pcie_aspm_cap_init", 168),
STACK_USAGE("pcie_config_aspm_link", 96),
STACK_USAGE("pcie_config_aspm_path", 8),
STACK_USAGE("pcie_aspm_update_sysfs_visibility", 16),
STACK_USAGE("pcie_aspm_init_link_state", 48),
STACK_USAGE("pcie_aspm_exit_link_state", 48),
STACK_USAGE("pcie_pme_work_fn", 96),
STACK_USAGE("pcie_pme_irq", 40),
STACK_USAGE("pcie_pme_can_wakeup", 0),
STACK_USAGE("pcie_pme_probe", 32),
STACK_USAGE("pcie_pme_setup", 0),
STACK_USAGE("pcie_pme_check_wakeup", 16),
STACK_USAGE("pcie_pme_suspend", 32),
STACK_USAGE("pcie_pme_resume", 16),
STACK_USAGE("pcie_pme_remove", 24),
STACK_USAGE("pcie_pme_init", 0),
STACK_USAGE("pcie_pme_interrupt_enable", 0),
STACK_USAGE("pcie_pme_walk_bus", 32),
STACK_USAGE("pcie_port_device_register", 120),
STACK_USAGE("release_pcie_device", 0),
STACK_USAGE("pcie_port_device_iter", 0),
STACK_USAGE("pcie_port_device_suspend", 16),
STACK_USAGE("pcie_port_device_resume_noirq", 16),
STACK_USAGE("pcie_port_device_resume", 16),
STACK_USAGE("pcie_port_device_runtime_suspend", 16),
STACK_USAGE("pcie_port_device_runtime_resume", 16),
STACK_USAGE("remove_iter", 0),
STACK_USAGE("find_service_iter", 0),
STACK_USAGE("pcie_port_find_device", 32),
STACK_USAGE("pcie_port_device_remove", 8),
STACK_USAGE("pcie_port_probe_service", 8),
STACK_USAGE("pcie_port_remove_service", 8),
STACK_USAGE("pcie_port_shutdown_service", 0),
STACK_USAGE("pcie_port_service_register", 0),
STACK_USAGE("pcie_port_service_unregister", 0),
STACK_USAGE("pcie_portdrv_probe", 24),
STACK_USAGE("pcie_portdrv_remove", 16),
STACK_USAGE("pcie_portdrv_error_detected", 0),
STACK_USAGE("pcie_portdrv_slot_reset", 24),
STACK_USAGE("pcie_portdrv_mmio_enabled", 0),
STACK_USAGE("dmi_pcie_pme_disable_msi", 0),
STACK_USAGE("pcie_portdrv_init", 0),
STACK_USAGE("pcie_port_setup", 8),
STACK_USAGE("pcie_port_runtime_suspend", 0),
STACK_USAGE("pcie_port_runtime_idle", 0),
STACK_USAGE("pcie_link_rcec", 64),
STACK_USAGE("pcie_walk_rcec", 64),
STACK_USAGE("pci_rcec_init", 40),
STACK_USAGE("pci_rcec_exit", 8),
STACK_USAGE("link_rcec_helper", 16),
STACK_USAGE("walk_rcec_helper", 16),
STACK_USAGE("pcibus_class_init", 0),
STACK_USAGE("pci_add_new_bus", 144),
STACK_USAGE("pci_scan_bridge_extend", 200),
STACK_USAGE("pci_scan_bridge", 0),
STACK_USAGE("set_pcie_port_type", 40),
STACK_USAGE("set_pcie_hotplug_bridge", 24),
STACK_USAGE("pci_cfg_space_size", 56),
STACK_USAGE("__pci_read_base", 112),
STACK_USAGE("pci_setup_device", 328),
STACK_USAGE("pci_configure_extended_tags", 24),
STACK_USAGE("pcie_relaxed_ordering_enabled", 16),
STACK_USAGE("pci_release_dev", 16),
STACK_USAGE("pci_alloc_dev", 16),
STACK_USAGE("pci_bus_generic_read_dev_vendor_id", 56),
STACK_USAGE("pci_bus_read_dev_vendor_id", 0),
STACK_USAGE("pcie_report_downtraining", 0),
STACK_USAGE("pci_device_add", 64),
STACK_USAGE("pci_scan_single_device", 40),
STACK_USAGE("pci_scan_slot", 64),
STACK_USAGE("pcie_find_smpss", 0),
STACK_USAGE("pcie_bus_configure_set", 48),
STACK_USAGE("pcie_bus_configure_settings", 32),
STACK_USAGE("pcibios_fixup_bus", 0),
STACK_USAGE("pci_scan_child_bus_extend", 80),
STACK_USAGE("pci_scan_child_bus", 0),
STACK_USAGE("pcibios_root_bridge_prepare", 0),
STACK_USAGE("pcibios_add_bus", 0),
STACK_USAGE("pcibios_remove_bus", 0),
STACK_USAGE("pci_create_root_bus", 56),
STACK_USAGE("pci_host_probe", 48),
STACK_USAGE("pci_bus_insert_busn_res", 40),
STACK_USAGE("pci_bus_update_busn_res_end", 96),
STACK_USAGE("pci_bus_release_busn_res", 16),
STACK_USAGE("pci_scan_root_bus_bridge", 112),
STACK_USAGE("pci_scan_root_bus", 104),
STACK_USAGE("pci_scan_bus", 56),
STACK_USAGE("pci_rescan_bus_bridge_resize", 24),
STACK_USAGE("pci_rescan_bus", 16),
STACK_USAGE("pci_lock_rescan_remove", 0),
STACK_USAGE("pci_unlock_rescan_remove", 0),
STACK_USAGE("pci_sort_bf_cmp", 0),
STACK_USAGE("pci_sort_breadthfirst", 0),
STACK_USAGE("pci_hp_add_bridge", 40),
STACK_USAGE("pci_read_bridge_bases", 104),
STACK_USAGE("pci_release_host_bridge_dev", 8),
STACK_USAGE("pci_alloc_host_bridge", 8),
STACK_USAGE("devm_pci_alloc_host_bridge_release", 0),
STACK_USAGE("devm_pci_alloc_host_bridge", 16),
STACK_USAGE("pci_free_host_bridge", 0),
STACK_USAGE("pci_speed_string", 0),
STACK_USAGE("pcie_update_link_speed", 0),
STACK_USAGE("no_pci_devices", 8),
STACK_USAGE("pci_register_host_bridge", 184),
STACK_USAGE("release_pcibus_dev", 8),
STACK_USAGE("proc_bus_pci_write", 64),
STACK_USAGE("proc_bus_pci_ioctl", 40),
STACK_USAGE("proc_bus_pci_lseek", 0),
STACK_USAGE("proc_bus_pci_mmap", 48),
STACK_USAGE("proc_bus_pci_open", 8),
STACK_USAGE("proc_bus_pci_read", 80),
STACK_USAGE("proc_bus_pci_release", 8),
STACK_USAGE("pci_seq_start", 8),
STACK_USAGE("pci_seq_next", 0),
STACK_USAGE("pci_seq_stop", 0),
STACK_USAGE("show_device", 128),
STACK_USAGE("pci_proc_attach_device", 56),
STACK_USAGE("pci_proc_detach_device", 8),
STACK_USAGE("pci_proc_detach_bus", 0),
STACK_USAGE("pci_proc_init", 8),
STACK_USAGE("pci_fixup_device", 48),
STACK_USAGE("quirk_amd_ioapic", 8),
STACK_USAGE("quirk_amd_8131_mmrbc", 8),
STACK_USAGE("quirk_via_acpi", 24),
STACK_USAGE("quirk_via_bridge", 0),
STACK_USAGE("quirk_via_vlink", 32),
STACK_USAGE("quirk_vt82c598_id", 8),
STACK_USAGE("quirk_cardbus_legacy", 0),
STACK_USAGE("quirk_amd_ordering", 24),
STACK_USAGE("quirk_dunord", 0),
STACK_USAGE("quirk_transparent_bridge", 0),
STACK_USAGE("quirk_mediagx_master", 24),
STACK_USAGE("quirk_disable_pxb", 24),
STACK_USAGE("quirk_amd_ide_mode", 24),
STACK_USAGE("quirk_svwks_csb5ide", 24),
STACK_USAGE("quirk_ide_samemode", 24),
STACK_USAGE("quirk_no_ata_d3", 0),
STACK_USAGE("quirk_eisa_bridge", 0),
STACK_USAGE("asus_hides_smbus_hostbridge", 0),
STACK_USAGE("asus_hides_smbus_lpc", 24),
STACK_USAGE("pci_apply_final_quirks", 40),
STACK_USAGE("asus_hides_smbus_lpc_ich6_suspend", 16),
STACK_USAGE("asus_hides_smbus_lpc_ich6_resume_early", 0),
STACK_USAGE("asus_hides_smbus_lpc_ich6_resume", 8),
STACK_USAGE("asus_hides_smbus_lpc_ich6", 24),
STACK_USAGE("quirk_sis_96x_smbus", 24),
STACK_USAGE("quirk_sis_503", 24),
STACK_USAGE("asus_hides_ac97_lpc", 24),
STACK_USAGE("quirk_jmicron_ata", 32),
STACK_USAGE("quirk_jmicron_async_suspend", 0),
STACK_USAGE("quirk_alder_ioapic", 8),
STACK_USAGE("quirk_no_msi", 8),
STACK_USAGE("quirk_pcie_mch", 0),
STACK_USAGE("quirk_huawei_pcie_sva", 88),
STACK_USAGE("quirk_pcie_pxh", 0),
STACK_USAGE("quirk_intel_pcie_pm", 0),
STACK_USAGE("quirk_radeon_pm", 0),
STACK_USAGE("quirk_ryzen_xhci_d3hot", 0),
STACK_USAGE("dmi_disable_ioapicreroute", 0),
STACK_USAGE("quirk_reroute_to_boot_interrupts_intel", 8),
STACK_USAGE("quirk_mmio_always_on", 0),
STACK_USAGE("quirk_disable_intel_boot_interrupt", 24),
STACK_USAGE("quirk_disable_broadcom_boot_interrupt", 24),
STACK_USAGE("quirk_disable_amd_813x_boot_interrupt", 24),
STACK_USAGE("quirk_disable_amd_8111_boot_interrupt", 24),
STACK_USAGE("quirk_tc86c001_ide", 0),
STACK_USAGE("quirk_passive_release", 32),
STACK_USAGE("quirk_plx_pci9050", 8),
STACK_USAGE("quirk_netmos", 8),
STACK_USAGE("quirk_e100_interrupt", 32),
STACK_USAGE("quirk_disable_aspm_l0s", 8),
STACK_USAGE("quirk_disable_aspm_l0s_l1", 8),
STACK_USAGE("quirk_enable_clear_retrain_link", 0),
STACK_USAGE("fixup_rev1_53c810", 0),
STACK_USAGE("quirk_p64h2_1k_io", 24),
STACK_USAGE("quirk_nvidia_ck804_pcie_aer_ext_cap", 24),
STACK_USAGE("quirk_via_cx700_pci_parking_caching", 24),
STACK_USAGE("quirk_isa_dma_hangs", 0),
STACK_USAGE("quirk_brcm_5719_limit_mrrs", 24),
STACK_USAGE("quirk_unhide_mch_dev6", 24),
STACK_USAGE("quirk_disable_all_msi", 8),
STACK_USAGE("quirk_disable_msi", 8),
STACK_USAGE("quirk_amd_780_apc_msi", 8),
STACK_USAGE("msi_ht_cap_enabled", 56),
STACK_USAGE("quirk_msi_ht_cap", 8),
STACK_USAGE("quirk_nvidia_ck804_msi_ht_cap", 16),
STACK_USAGE("ht_enable_msi_mapping", 64),
STACK_USAGE("nvenet_msi_disable", 16),
STACK_USAGE("pci_quirk_nvidia_tegra_disable_rp_msi", 0),
STACK_USAGE("quirk_tigerpoint_bm_sts", 24),
STACK_USAGE("nvbridge_check_legacy_irq_routing", 24),
STACK_USAGE("quirk_nopcipci", 0),
STACK_USAGE("__nv_msi_ht_cap_quirk", 72),
STACK_USAGE("nv_msi_ht_cap_quirk_all", 0),
STACK_USAGE("nv_msi_ht_cap_quirk_leaf", 0),
STACK_USAGE("quirk_nopciamd", 24),
STACK_USAGE("quirk_msi_intx_disable_bug", 0),
STACK_USAGE("quirk_msi_intx_disable_ati_bug", 8),
STACK_USAGE("quirk_msi_intx_disable_qca_bug", 8),
STACK_USAGE("quirk_al_msi_disable", 0),
STACK_USAGE("quirk_hotplug_bridge", 0),
STACK_USAGE("quirk_triton", 0),
STACK_USAGE("vtd_mask_spec_errors", 24),
STACK_USAGE("fixup_ti816x_class", 0),
STACK_USAGE("fixup_mpss_256", 0),
STACK_USAGE("quirk_intel_mc_errata", 24),
STACK_USAGE("quirk_vialatency", 32),
STACK_USAGE("quirk_intel_ntb", 32),
STACK_USAGE("disable_igfx_irq", 16),
STACK_USAGE("quirk_remove_d3hot_delay", 0),
STACK_USAGE("quirk_broken_intx_masking", 0),
STACK_USAGE("mellanox_check_broken_intx_masking", 24),
STACK_USAGE("quirk_no_bus_reset", 0),
STACK_USAGE("quirk_nvidia_no_bus_reset", 0),
STACK_USAGE("quirk_no_pm_reset", 0),
STACK_USAGE("quirk_thunderbolt_hotplug_msi", 0),
STACK_USAGE("quirk_apple_poweroff_thunderbolt", 48),
STACK_USAGE("reset_intel_82599_sfp_virtfn", 0),
STACK_USAGE("reset_ivb_igd", 32),
STACK_USAGE("reset_chelsio_generic_dev", 24),
STACK_USAGE("nvme_disable_and_flr", 40),
STACK_USAGE("delay_250ms_after_flr", 0),
STACK_USAGE("quirk_viaetbf", 0),
STACK_USAGE("reset_hinic_vf_dev", 40),
STACK_USAGE("quirk_vsfx", 0),
STACK_USAGE("pci_dev_specific_reset", 0),
STACK_USAGE("quirk_dma_func0_alias", 0),
STACK_USAGE("quirk_dma_func1_alias", 0),
STACK_USAGE("quirk_fixed_dma_alias", 8),
STACK_USAGE("quirk_use_pcie_bridge_dma_alias", 0),
STACK_USAGE("quirk_alimagik", 0),
STACK_USAGE("quirk_mic_x200_dma_alias", 8),
STACK_USAGE("quirk_pex_vca_alias", 16),
STACK_USAGE("quirk_bridge_cavm_thrx2_pcie_root", 0),
STACK_USAGE("quirk_tw686x_class", 0),
STACK_USAGE("quirk_relaxedordering_disable", 0),
STACK_USAGE("quirk_natoma", 0),
STACK_USAGE("quirk_chelsio_T5_disable_root_port_attributes", 8),
STACK_USAGE("pci_quirk_amd_sb_acs", 32),
STACK_USAGE("quirk_citrine", 0),
STACK_USAGE("pci_quirk_cavium_acs", 0),
STACK_USAGE("pci_quirk_xgene_acs", 0),
STACK_USAGE("pci_quirk_zhaoxin_pcie_ports_acs", 0),
STACK_USAGE("quirk_nfp6000", 0),
STACK_USAGE("pci_quirk_intel_pch_acs", 0),
STACK_USAGE("pci_quirk_qcom_rp_acs", 0),
STACK_USAGE("pci_quirk_nxp_rp_acs", 0),
STACK_USAGE("pci_quirk_al_acs", 0),
STACK_USAGE("quirk_extend_bar_to_page", 24),
STACK_USAGE("pci_quirk_intel_spt_pch_acs_match", 0),
STACK_USAGE("pci_quirk_intel_spt_pch_acs", 40),
STACK_USAGE("pci_quirk_mf_endpoint_acs", 0),
STACK_USAGE("pci_quirk_rciep_acs", 0),
STACK_USAGE("pci_quirk_brcm_acs", 0),
STACK_USAGE("quirk_s3_64M", 0),
STACK_USAGE("pci_dev_specific_acs_enabled", 24),
STACK_USAGE("pci_quirk_enable_intel_pch_acs", 40),
STACK_USAGE("pci_quirk_enable_intel_spt_pch_acs", 32),
STACK_USAGE("pci_quirk_disable_intel_spt_pch_acs_redir", 32),
STACK_USAGE("pci_dev_specific_enable_acs", 8),
STACK_USAGE("pci_dev_specific_disable_acs_redir", 0),
STACK_USAGE("quirk_intel_qat_vf_cap", 32),
STACK_USAGE("quirk_no_flr", 0),
STACK_USAGE("quirk_no_ext_tags", 16),
STACK_USAGE("quirk_amd_harvest_no_ats", 8),
STACK_USAGE("quirk_fsl_no_msi", 0),
STACK_USAGE("quirk_cs5536_vsa", 48),
STACK_USAGE("pci_create_device_link", 24),
STACK_USAGE("quirk_gpu_hda", 0),
STACK_USAGE("quirk_gpu_usb", 0),
STACK_USAGE("quirk_gpu_usb_typec_ucsi", 0),
STACK_USAGE("quirk_nvidia_hda", 24),
STACK_USAGE("pci_idt_bus_quirk", 72),
STACK_USAGE("quirk_io_region", 72),
STACK_USAGE("quirk_switchtec_ntb_dma_alias", 72),
STACK_USAGE("quirk_plx_ntb_dma_alias", 8),
STACK_USAGE("quirk_reset_lenovo_thinkpad_p50_nvgpu", 24),
STACK_USAGE("pci_fixup_no_d0_pme", 8),
STACK_USAGE("pci_fixup_no_msi_no_pme", 16),
STACK_USAGE("apex_pci_fixup_class", 0),
STACK_USAGE("pci_fixup_pericom_acs_store_forward", 24),
STACK_USAGE("quirk_ati_exploding_mce", 0),
STACK_USAGE("nvidia_ion_ahci_fixup", 0),
STACK_USAGE("rom_bar_overlap_defect", 8),
STACK_USAGE("quirk_amd_nl_class", 0),
STACK_USAGE("quirk_synopsys_haps", 0),
STACK_USAGE("quirk_ali7101_acpi", 8),
STACK_USAGE("quirk_piix4_acpi", 32),
STACK_USAGE("quirk_ich4_lpc_acpi", 24),
STACK_USAGE("quirk_ich6_lpc", 24),
STACK_USAGE("quirk_ich7_lpc", 24),
STACK_USAGE("quirk_vt82c586_acpi", 0),
STACK_USAGE("quirk_vt82c686_acpi", 8),
STACK_USAGE("quirk_vt8235_acpi", 8),
STACK_USAGE("quirk_xio2000a", 40),
STACK_USAGE("quirk_via_ioapic", 16),
STACK_USAGE("quirk_via_vt8237_bypass_apic_deassert", 24),
STACK_USAGE("pci_stop_and_remove_bus_device", 8),
STACK_USAGE("pci_stop_and_remove_bus_device_locked", 8),
STACK_USAGE("pci_stop_root_bus", 24),
STACK_USAGE("pci_remove_root_bus", 32),
STACK_USAGE("pci_remove_bus", 8),
STACK_USAGE("pci_stop_bus_device", 24),
STACK_USAGE("pci_remove_bus_device", 32),
STACK_USAGE("pci_map_rom", 72),
STACK_USAGE("pci_unmap_rom", 24),
STACK_USAGE("pci_enable_rom", 48),
STACK_USAGE("pci_disable_rom", 24),
STACK_USAGE("pci_do_find_bus", 24),
STACK_USAGE("pci_find_bus", 40),
STACK_USAGE("pci_find_next_bus", 8),
STACK_USAGE("pci_get_slot", 24),
STACK_USAGE("pci_get_domain_bus_and_slot", 112),
STACK_USAGE("match_pci_dev_by_id", 0),
STACK_USAGE("pci_for_each_dma_alias", 40),
STACK_USAGE("pci_get_subsys", 64),
STACK_USAGE("pci_get_device", 64),
STACK_USAGE("pci_get_class", 64),
STACK_USAGE("pci_dev_present", 16),
STACK_USAGE("pci_cardbus_resource_alignment", 0),
STACK_USAGE("__pci_bus_size_bridges", 160),
STACK_USAGE("pci_bus_size_bridges", 0),
STACK_USAGE("__pci_bus_assign_resources", 88),
STACK_USAGE("pci_bus_assign_resources", 0),
STACK_USAGE("pci_bus_allocate_dev_resources", 32),
STACK_USAGE("pci_bus_allocate_resources", 24),
STACK_USAGE("pci_bus_claim_resources", 8),
STACK_USAGE("__pci_bridge_assign_resources", 56),
STACK_USAGE("pci_bus_release_bridge_resources", 64),
STACK_USAGE("pci_bus_dump_resources", 24),
STACK_USAGE("pci_bus_get_depth", 24),
STACK_USAGE("pci_realloc_get_opt", 8),
STACK_USAGE("pci_assign_unassigned_root_bus_resources", 128),
STACK_USAGE("__dev_sort_resources", 64),
STACK_USAGE("pci_assign_unassigned_resources", 24),
STACK_USAGE("pci_bus_distribute_available_resources", 224),
STACK_USAGE("pci_assign_unassigned_bridge_resources", 256),
STACK_USAGE("pci_reassign_bridge_resources", 104),
STACK_USAGE("pci_assign_unassigned_bus_resources", 64),
STACK_USAGE("assign_requested_resources_sorted", 40),
STACK_USAGE("__assign_resources_sorted", 104),
STACK_USAGE("free_list", 32),
STACK_USAGE("pci_setup_cardbus", 56),
STACK_USAGE("pci_setup_bridge_io", 64),
STACK_USAGE("add_to_list", 40),
STACK_USAGE("pci_setup_bridge_mmio_pref", 64),
STACK_USAGE("__pci_setup_bridge", 72),
STACK_USAGE("pcibios_setup_bridge", 0),
STACK_USAGE("pci_setup_bridge", 8),
STACK_USAGE("pci_claim_bridge_resource", 56),
STACK_USAGE("pcibios_window_alignment", 0),
STACK_USAGE("pbus_size_mem", 360),
STACK_USAGE("pci_assign_irq", 32),
STACK_USAGE("pci_update_resource", 88),
STACK_USAGE("pci_claim_resource", 40),
STACK_USAGE("pci_disable_bridge_window", 8),
STACK_USAGE("pcibios_retrieve_fw_addr", 0),
STACK_USAGE("pci_revert_fw_address", 56),
STACK_USAGE("pcibios_align_resource", 0),
STACK_USAGE("_pci_assign_resource", 56),
STACK_USAGE("pci_assign_resource", 48),
STACK_USAGE("pci_reassign_resource", 48),
STACK_USAGE("pci_release_resource", 24),
STACK_USAGE("pci_resize_resource", 80),
STACK_USAGE("pci_enable_resources", 32),
STACK_USAGE("make_slot_name", 56),
STACK_USAGE("pci_dev_assign_slot", 8),
STACK_USAGE("pci_slot_attr_show", 0),
STACK_USAGE("pci_create_slot", 56),
STACK_USAGE("pci_slot_attr_store", 0),
STACK_USAGE("pci_destroy_slot", 8),
STACK_USAGE("pci_hp_create_module_link", 16),
STACK_USAGE("pci_hp_remove_module_link", 0),
STACK_USAGE("pci_slot_init", 8),
STACK_USAGE("address_read_file", 0),
STACK_USAGE("max_speed_read_file", 8),
STACK_USAGE("cur_speed_read_file", 8),
STACK_USAGE("pci_slot_release", 16),
STACK_USAGE("pci_vc_do_save_buffer", 152),
STACK_USAGE("pci_save_vc_state", 32),
STACK_USAGE("pci_restore_vc_state", 16),
STACK_USAGE("pci_allocate_vc_save_buffers", 8),
STACK_USAGE("vga_pci_str_to_vars", 24),
STACK_USAGE("vga_arb_read", 40),
STACK_USAGE("vga_arb_write", 136),
STACK_USAGE("vga_default_device", 0),
STACK_USAGE("vga_set_default_device", 8),
STACK_USAGE("vga_arb_fpoll", 0),
STACK_USAGE("vga_arb_open", 16),
STACK_USAGE("vga_arb_release", 72),
STACK_USAGE("pci_notify", 24),
STACK_USAGE("vga_arb_device_init", 16),
STACK_USAGE("vga_remove_vgacon", 8),
STACK_USAGE("__vga_tryget", 56),
STACK_USAGE("__vga_put", 0),
STACK_USAGE("vga_get", 104),
STACK_USAGE("vga_tryget", 40),
STACK_USAGE("vga_put", 24),
STACK_USAGE("vga_arbiter_add_pci_device", 64),
STACK_USAGE("vga_str_to_iostate", 24),
STACK_USAGE("vga_update_device_decodes", 32),
STACK_USAGE("__vga_set_legacy_decoding", 32),
STACK_USAGE("vga_set_legacy_decoding", 24),
STACK_USAGE("vga_client_register", 24),
STACK_USAGE("pci_vpd_wait", 56),
STACK_USAGE("pci_vpd_read", 80),
STACK_USAGE("pci_vpd_write", 56),
STACK_USAGE("pci_vpd_init", 16),
STACK_USAGE("vpd_read", 32),
STACK_USAGE("vpd_write", 32),
STACK_USAGE("vpd_attr_is_visible", 0),
STACK_USAGE("pci_vpd_alloc", 40),
STACK_USAGE("pci_vpd_find_id_string", 0),
STACK_USAGE("pci_read_vpd", 32),
STACK_USAGE("pci_read_vpd_any", 32),
STACK_USAGE("pci_write_vpd", 32),
STACK_USAGE("pci_write_vpd_any", 32),
STACK_USAGE("pci_vpd_find_ro_info_keyword", 16),
STACK_USAGE("pci_vpd_check_csum", 0),
STACK_USAGE("quirk_f0_vpd_link", 8),
STACK_USAGE("quirk_blacklist_vpd", 0),
STACK_USAGE("quirk_chelsio_extend_vpd", 0),
STACK_USAGE("pci_vpd_available", 64),
STACK_USAGE("cb_free", 16),
STACK_USAGE("cardbus_config_irq_and_cls", 56),
STACK_USAGE("cb_alloc", 32),
STACK_USAGE("pcmcia_parse_tuple", 80),
STACK_USAGE("pcmcia_read_cis_mem", 72),
STACK_USAGE("pccard_validate_cis", 104),
STACK_USAGE("pccard_show_cis", 152),
STACK_USAGE("pccard_store_cis", 32),
STACK_USAGE("pcmcia_write_cis_mem", 64),
STACK_USAGE("read_cis_cache", 64),
STACK_USAGE("destroy_cis_cache", 32),
STACK_USAGE("verify_cis_cache", 56),
STACK_USAGE("pcmcia_replace_cis", 40),
STACK_USAGE("pccard_get_first_tuple", 32),
STACK_USAGE("pccard_get_next_tuple", 112),
STACK_USAGE("release_cis_mem", 16),
STACK_USAGE("pccard_get_tuple_data", 0),
STACK_USAGE("set_cis_map", 32),
STACK_USAGE("parse_power", 0),
STACK_USAGE("pcmcia_register_socket", 48),
STACK_USAGE("pcmcia_unregister_socket", 16),
STACK_USAGE("pcmcia_get_socket_by_nr", 16),
STACK_USAGE("socket_reset", 40),
STACK_USAGE("socket_shutdown", 40),
STACK_USAGE("socket_setup", 48),
STACK_USAGE("socket_insert", 24),
STACK_USAGE("socket_late_resume", 24),
STACK_USAGE("pccardd", 96),
STACK_USAGE("pcmcia_parse_events", 24),
STACK_USAGE("pcmcia_parse_uevents", 24),
STACK_USAGE("pccard_register_pcmcia", 32),
STACK_USAGE("pcmcia_get_socket", 0),
STACK_USAGE("pcmcia_reset_card", 40),
STACK_USAGE("pcmcia_socket_uevent", 0),
STACK_USAGE("pcmcia_release_socket_class", 0),
STACK_USAGE("pcmcia_put_socket", 0),
STACK_USAGE("pcmcia_socket_dev_suspend_noirq", 40),
STACK_USAGE("pcmcia_socket_dev_resume_noirq", 40),
STACK_USAGE("pcmcia_socket_dev_resume", 24),
STACK_USAGE("pcmcia_socket_dev_complete", 16),
STACK_USAGE("init_pcmcia_cs", 0),
STACK_USAGE("pcmcia_release_socket", 0),
STACK_USAGE("exit_pcmcia_cs", 0),
STACK_USAGE("func_id_show", 0),
STACK_USAGE("manf_id_show", 0),
STACK_USAGE("card_id_show", 0),
STACK_USAGE("prod_id1_show", 0),
STACK_USAGE("prod_id2_show", 0),
STACK_USAGE("prod_id3_show", 0),
STACK_USAGE("prod_id4_show", 0),
STACK_USAGE("function_show", 0),
STACK_USAGE("resources_show", 40),
STACK_USAGE("pm_state_show", 0),
STACK_USAGE("pm_state_store", 32),
STACK_USAGE("modalias_show", 64),
STACK_USAGE("allow_func_id_match_store", 24),
STACK_USAGE("pcmcia_dev_suspend", 40),
STACK_USAGE("pcmcia_dev_resume", 32),
STACK_USAGE("pcmcia_bus_suspend_callback", 16),
STACK_USAGE("pcmcia_bus_resume_callback", 16),
STACK_USAGE("pcmcia_bus_resume", 0),
STACK_USAGE("pcmcia_bus_suspend", 16),
STACK_USAGE("pcmcia_bus_remove", 56),
STACK_USAGE("pcmcia_bus_add", 16),
STACK_USAGE("pcmcia_bus_early_resume", 16),
STACK_USAGE("pcmcia_dev_present", 8),
STACK_USAGE("pcmcia_bus_add_socket", 32),
STACK_USAGE("pcmcia_bus_remove_socket", 72),
STACK_USAGE("init_pcmcia_bus", 16),
STACK_USAGE("exit_pcmcia_bus", 0),
STACK_USAGE("pcmcia_register_driver", 32),
STACK_USAGE("pcmcia_unregister_driver", 40),
STACK_USAGE("pcmcia_release_dev", 16),
STACK_USAGE("pcmcia_device_probe", 80),
STACK_USAGE("pcmcia_card_remove", 48),
STACK_USAGE("pcmcia_device_remove", 24),
STACK_USAGE("pcmcia_device_query", 72),
STACK_USAGE("pcmcia_device_add", 48),
STACK_USAGE("pcmcia_card_add", 112),
STACK_USAGE("pcmcia_requery_callback", 0),
STACK_USAGE("pcmcia_requery", 128),
STACK_USAGE("pcmcia_load_firmware", 128),
STACK_USAGE("pcmcia_devmatch", 40),
STACK_USAGE("pcmcia_bus_match", 40),
STACK_USAGE("pcmcia_bus_uevent", 64),
STACK_USAGE("new_id_store", 88),
STACK_USAGE("pcmcia_do_loop_config", 40),
STACK_USAGE("pcmcia_loop_config", 40),
STACK_USAGE("pcmcia_loop_tuple", 112),
STACK_USAGE("pcmcia_do_get_tuple", 16),
STACK_USAGE("pccard_read_tuple", 88),
STACK_USAGE("pcmcia_get_tuple", 24),
STACK_USAGE("pcmcia_do_get_mac", 8),
STACK_USAGE("pcmcia_get_mac_from_cis", 0),
STACK_USAGE("pccard_loop_tuple", 112),
STACK_USAGE("pcmcia_read_config_byte", 48),
STACK_USAGE("pcmcia_write_config_byte", 56),
STACK_USAGE("pcmcia_map_mem_page", 40),
STACK_USAGE("pcmcia_fixup_iowidth", 88),
STACK_USAGE("pcmcia_fixup_vpp", 40),
STACK_USAGE("pcmcia_release_configuration", 64),
STACK_USAGE("pcmcia_validate_mem", 0),
STACK_USAGE("pcmcia_release_window", 56),
STACK_USAGE("pcmcia_find_mem_region", 0),
STACK_USAGE("pcmcia_enable_device", 88),
STACK_USAGE("release_io_space", 24),
STACK_USAGE("pcmcia_request_io", 64),
STACK_USAGE("pcmcia_request_irq", 8),
STACK_USAGE("pcmcia_cleanup_irq", 0),
STACK_USAGE("pcmcia_setup_irq", 0),
STACK_USAGE("pcmcia_request_window", 64),
STACK_USAGE("pcmcia_disable_device", 32),
STACK_USAGE("alloc_io_space", 40),
STACK_USAGE("static_init", 0),
STACK_USAGE("pcmcia_make_resource", 32),
STACK_USAGE("static_find_io", 0),
STACK_USAGE("nonstatic_init", 56),
STACK_USAGE("nonstatic_release_resource_db", 24),
STACK_USAGE("show_io_db", 40),
STACK_USAGE("store_io_db", 56),
STACK_USAGE("show_mem_db", 48),
STACK_USAGE("store_mem_db", 56),
STACK_USAGE("pccard_sysfs_add_rsrc", 0),
STACK_USAGE("pccard_sysfs_remove_rsrc", 0),
STACK_USAGE("nonstatic_sysfs_init", 0),
STACK_USAGE("nonstatic_sysfs_exit", 0),
STACK_USAGE("sub_interval", 48),
STACK_USAGE("readable", 48),
STACK_USAGE("checksum", 88),
STACK_USAGE("do_validate_mem", 88),
STACK_USAGE("do_mem_probe", 104),
STACK_USAGE("pcmcia_nonstatic_validate_mem", 32),
STACK_USAGE("pcmcia_align", 8),
STACK_USAGE("nonstatic_find_io", 136),
STACK_USAGE("nonstatic_find_mem_region", 104),
STACK_USAGE("adjust_memory", 40),
STACK_USAGE("adjust_io", 24),
STACK_USAGE("pccard_store_card_pm_state", 32),
STACK_USAGE("pccard_store_eject", 8),
STACK_USAGE("pccard_show_irq_mask", 0),
STACK_USAGE("pccard_store_irq_mask", 40),
STACK_USAGE("pccard_show_resource", 0),
STACK_USAGE("pccard_store_resource", 32),
STACK_USAGE("pccard_sysfs_add_socket", 0),
STACK_USAGE("pccard_sysfs_remove_socket", 0),
STACK_USAGE("pccard_show_type", 0),
STACK_USAGE("pccard_show_voltage", 0),
STACK_USAGE("pccard_show_vpp", 0),
STACK_USAGE("pccard_show_vcc", 0),
STACK_USAGE("pccard_store_insert", 8),
STACK_USAGE("pccard_show_card_pm_state", 0),
STACK_USAGE("yenta_get_socket_capabilities", 8),
STACK_USAGE("yenta_config_init", 48),
STACK_USAGE("yenta_fixup_parent_bridge", 32),
STACK_USAGE("o2micro_override", 56),
STACK_USAGE("topic97_zoom_video", 32),
STACK_USAGE("yenta_probe", 40),
STACK_USAGE("yenta_dev_suspend_noirq", 16),
STACK_USAGE("yenta_dev_resume_noirq", 16),
STACK_USAGE("topic97_override", 0),
STACK_USAGE("ricoh_zoom_video", 32),
STACK_USAGE("topic95_override", 24),
STACK_USAGE("yenta_cardbus_driver_exit", 0),
STACK_USAGE("yenta_cardbus_driver_init", 0),
STACK_USAGE("o2micro_restore_state", 0),
STACK_USAGE("show_yenta_registers", 40),
STACK_USAGE("ti_save_state", 24),
STACK_USAGE("ti_restore_state", 8),
STACK_USAGE("ricoh_save_state", 24),
STACK_USAGE("ricoh_restore_state", 24),
STACK_USAGE("ti_zoom_video", 32),
STACK_USAGE("yenta_get_status", 0),
STACK_USAGE("ricoh_override", 32),
STACK_USAGE("ti1250_zoom_video", 40),
STACK_USAGE("yenta_set_power", 0),
STACK_USAGE("ti_init", 0),
STACK_USAGE("ti_override", 0),
STACK_USAGE("yenta_set_socket", 48),
STACK_USAGE("ti113x_override", 32),
STACK_USAGE("yenta_set_io_map", 8),
STACK_USAGE("yenta_set_mem_map", 40),
STACK_USAGE("yenta_interrupt", 8),
STACK_USAGE("yenta_interrupt_wrapper", 8),
STACK_USAGE("yenta_interrogate", 0),
STACK_USAGE("yenta_sock_init", 144),
STACK_USAGE("yenta_sock_suspend", 0),
STACK_USAGE("ti12xx_2nd_slot_empty", 40),
STACK_USAGE("yenta_search_res", 56),
STACK_USAGE("yenta_allocate_res", 112),
STACK_USAGE("ti12xx_power_hook", 56),
STACK_USAGE("yenta_allocate_resources", 32),
STACK_USAGE("yenta_free_resources", 24),
STACK_USAGE("yenta_close", 16),
STACK_USAGE("ti12xx_override", 64),
STACK_USAGE("ti1250_override", 32),
STACK_USAGE("yenta_probe_irq", 56),
STACK_USAGE("ene_tune_bridge", 48),
STACK_USAGE("ene_override", 32),
STACK_USAGE("yenta_probe_handler", 0),
STACK_USAGE("yenta_probe_cb_irq", 32),
STACK_USAGE("phy_destroy", 8),
STACK_USAGE("devm_phy_destroy", 8),
STACK_USAGE("__of_phy_provider_register", 40),
STACK_USAGE("__devm_of_phy_provider_register", 48),
STACK_USAGE("of_phy_provider_unregister", 8),
STACK_USAGE("devm_of_phy_provider_unregister", 8),
STACK_USAGE("phy_release", 8),
STACK_USAGE("phy_core_init", 8),
STACK_USAGE("phy_pm_runtime_get", 8),
STACK_USAGE("phy_pm_runtime_get_sync", 16),
STACK_USAGE("phy_pm_runtime_put", 0),
STACK_USAGE("phy_pm_runtime_put_sync", 0),
STACK_USAGE("phy_pm_runtime_allow", 0),
STACK_USAGE("phy_pm_runtime_forbid", 0),
STACK_USAGE("phy_init", 24),
STACK_USAGE("phy_exit", 24),
STACK_USAGE("devm_phy_release", 16),
STACK_USAGE("phy_power_on", 32),
STACK_USAGE("phy_power_off", 32),
STACK_USAGE("phy_set_mode_ext", 40),
STACK_USAGE("devm_phy_provider_release", 8),
STACK_USAGE("phy_set_media", 24),
STACK_USAGE("phy_set_speed", 24),
STACK_USAGE("phy_reset", 24),
STACK_USAGE("devm_phy_consume", 8),
STACK_USAGE("phy_calibrate", 16),
STACK_USAGE("phy_configure", 24),
STACK_USAGE("phy_validate", 40),
STACK_USAGE("devm_phy_match", 0),
STACK_USAGE("of_phy_get", 0),
STACK_USAGE("of_phy_put", 16),
STACK_USAGE("phy_put", 16),
STACK_USAGE("devm_phy_put", 8),
STACK_USAGE("phy_create_lookup", 40),
STACK_USAGE("of_phy_simple_xlate", 56),
STACK_USAGE("phy_get", 48),
STACK_USAGE("phy_optional_get", 0),
STACK_USAGE("devm_phy_get", 24),
STACK_USAGE("devm_phy_optional_get", 24),
STACK_USAGE("devm_of_phy_get", 0),
STACK_USAGE("devm_of_phy_get_by_index", 0),
STACK_USAGE("phy_create", 40),
STACK_USAGE("phy_remove_lookup", 40),
STACK_USAGE("devm_phy_create", 32),
STACK_USAGE("get_pinctrl_dev_from_devname", 24),
STACK_USAGE("create_pinctrl", 96),
STACK_USAGE("pinctrl_get", 16),
STACK_USAGE("pinctrl_free", 72),
STACK_USAGE("pinctrl_put", 0),
STACK_USAGE("pinctrl_lookup_state", 32),
STACK_USAGE("get_pinctrl_dev_from_of_node", 16),
STACK_USAGE("pinctrl_commit_state", 48),
STACK_USAGE("pinctrl_select_state", 0),
STACK_USAGE("devm_pinctrl_release", 0),
STACK_USAGE("devm_pinctrl_get", 24),
STACK_USAGE("devm_pinctrl_match", 0),
STACK_USAGE("devm_pinctrl_put", 0),
STACK_USAGE("pinctrl_register_mappings", 24),
STACK_USAGE("pin_get_from_name", 48),
STACK_USAGE("pinctrl_unregister_mappings", 8),
STACK_USAGE("pinctrl_force_sleep", 0),
STACK_USAGE("pinctrl_force_default", 0),
STACK_USAGE("pinctrl_init_done", 24),
STACK_USAGE("pinctrl_select_default_state", 32),
STACK_USAGE("pinctrl_pm_select_default_state", 32),
STACK_USAGE("pinctrl_pm_select_sleep_state", 32),
STACK_USAGE("pinctrl_pm_select_idle_state", 32),
STACK_USAGE("pinctrl_pins_show", 64),
STACK_USAGE("pin_get_name", 16),
STACK_USAGE("pinctrl_pins_open", 0),
STACK_USAGE("pinctrl_groups_show", 104),
STACK_USAGE("pinctrl_groups_open", 0),
STACK_USAGE("pinctrl_gpioranges_show", 40),
STACK_USAGE("pinctrl_gpioranges_open", 0),
STACK_USAGE("pinctrl_devices_show", 40),
STACK_USAGE("pinctrl_devices_open", 0),
STACK_USAGE("pinctrl_maps_show", 40),
STACK_USAGE("pinctrl_free_pindescs", 48),
STACK_USAGE("pinctrl_maps_open", 0),
STACK_USAGE("pinctrl_show", 48),
STACK_USAGE("pinctrl_open", 0),
STACK_USAGE("pinctrl_init_controller", 80),
STACK_USAGE("pinctrl_enable", 64),
STACK_USAGE("pinctrl_register", 8),
STACK_USAGE("pinctrl_register_and_init", 8),
STACK_USAGE("pinctrl_unregister", 64),
STACK_USAGE("devm_pinctrl_dev_release", 0),
STACK_USAGE("devm_pinctrl_dev_match", 0),
STACK_USAGE("devm_pinctrl_register", 32),
STACK_USAGE("devm_pinctrl_register_and_init", 40),
STACK_USAGE("devm_pinctrl_unregister", 0),
STACK_USAGE("pinctrl_init", 0),
STACK_USAGE("pinctrl_add_gpio_range", 24),
STACK_USAGE("pinctrl_add_gpio_ranges", 64),
STACK_USAGE("pinctrl_find_and_add_gpio_range", 40),
STACK_USAGE("pinctrl_get_group_pins", 64),
STACK_USAGE("pinctrl_find_gpio_range_from_pin_nolock", 0),
STACK_USAGE("pinctrl_find_gpio_range_from_pin", 32),
STACK_USAGE("pinctrl_remove_gpio_range", 16),
STACK_USAGE("pinctrl_provide_dummies", 0),
STACK_USAGE("pinctrl_get_group_selector", 40),
STACK_USAGE("pinctrl_gpio_can_use_line", 40),
STACK_USAGE("pinctrl_dev_get_name", 0),
STACK_USAGE("pinctrl_gpio_request", 40),
STACK_USAGE("pinctrl_gpio_free", 40),
STACK_USAGE("pinctrl_dev_get_devname", 0),
STACK_USAGE("pinctrl_gpio_direction", 40),
STACK_USAGE("pinctrl_gpio_direction_input", 0),
STACK_USAGE("pinctrl_gpio_direction_output", 0),
STACK_USAGE("pinctrl_dev_get_drvdata", 0),
STACK_USAGE("pinctrl_gpio_set_config", 40),
STACK_USAGE("pinctrl_utils_free_map", 24),
STACK_USAGE("pinctrl_utils_reserve_map", 48),
STACK_USAGE("pinctrl_utils_add_map_mux", 0),
STACK_USAGE("pinctrl_utils_add_map_configs", 32),
STACK_USAGE("pinctrl_utils_add_config", 48),
STACK_USAGE("fan1_input_show", 24),
STACK_USAGE("pwm1_show", 24),
STACK_USAGE("pwm1_store", 24),
STACK_USAGE("pwm1_enable_show", 24),
STACK_USAGE("pwm1_enable_store", 32),
STACK_USAGE("eeepc_hwmon_init", 16),
STACK_USAGE("read_brightness", 16),
STACK_USAGE("update_bl_status", 8),
STACK_USAGE("eeepc_acpi_notify", 24),
STACK_USAGE("cmsg_quirks", 32),
STACK_USAGE("eeepc_acpi_add", 72),
STACK_USAGE("eeepc_acpi_remove", 8),
STACK_USAGE("eeepc_laptop_init", 8),
STACK_USAGE("eeepc_laptop_exit", 0),
STACK_USAGE("camera_show", 32),
STACK_USAGE("camera_store", 32),
STACK_USAGE("cardr_show", 32),
STACK_USAGE("cardr_store", 32),
STACK_USAGE("disp_store", 32),
STACK_USAGE("available_cpufv_show", 48),
STACK_USAGE("cpufv_show", 32),
STACK_USAGE("cpufv_store", 56),
STACK_USAGE("cpufv_disabled_show", 0),
STACK_USAGE("cpufv_disabled_store", 32),
STACK_USAGE("tpd_led_update", 0),
STACK_USAGE("tpd_led_set", 0),
STACK_USAGE("tpd_led_get", 16),
STACK_USAGE("eeepc_led_init", 48),
STACK_USAGE("eeepc_led_exit", 8),
STACK_USAGE("eeepc_rfkill_hotplug", 56),
STACK_USAGE("eeepc_rfkill_notify", 0),
STACK_USAGE("eeepc_get_adapter_status", 32),
STACK_USAGE("eeepc_new_rfkill", 72),
STACK_USAGE("eeepc_rfkill_exit", 24),
STACK_USAGE("eeepc_rfkill_init", 48),
STACK_USAGE("eeepc_hotk_thaw", 24),
STACK_USAGE("eeepc_hotk_restore", 24),
STACK_USAGE("pmc_atom_read", 0),
STACK_USAGE("pmc_atom_write", 0),
STACK_USAGE("pmc_power_off", 0),
STACK_USAGE("pmc_dev_state_show", 64),
STACK_USAGE("pmc_dev_state_open", 0),
STACK_USAGE("pmc_pss_state_show", 48),
STACK_USAGE("pmc_pss_state_open", 0),
STACK_USAGE("pmc_sleep_tmr_show", 40),
STACK_USAGE("pmc_sleep_tmr_open", 0),
STACK_USAGE("dmi_callback", 0),
STACK_USAGE("dmi_callback_siemens", 24),
STACK_USAGE("pmc_atom_init", 128),
STACK_USAGE("simatic_ipc_find_dmi_entry_helper", 0),
STACK_USAGE("pnp_release_card", 16),
STACK_USAGE("pnp_alloc_card", 32),
STACK_USAGE("name_show", 0),
STACK_USAGE("card_id_show", 24),
STACK_USAGE("pnp_add_card", 32),
STACK_USAGE("pnp_remove_card", 48),
STACK_USAGE("pnp_add_card_device", 16),
STACK_USAGE("pnp_remove_card_device", 8),
STACK_USAGE("pnp_request_card_device", 48),
STACK_USAGE("pnp_release_card_device", 8),
STACK_USAGE("card_suspend", 0),
STACK_USAGE("card_resume", 0),
STACK_USAGE("pnp_register_card_driver", 32),
STACK_USAGE("pnp_unregister_card_driver", 8),
STACK_USAGE("card_remove", 0),
STACK_USAGE("card_remove_first", 16),
STACK_USAGE("card_probe", 56),
STACK_USAGE("pnp_free_resource", 0),
STACK_USAGE("pnp_free_resources", 32),
STACK_USAGE("pnp_release_device", 40),
STACK_USAGE("pnp_alloc_dev", 32),
STACK_USAGE("__pnp_add_device", 16),
STACK_USAGE("pnp_add_device", 168),
STACK_USAGE("__pnp_remove_device", 8),
STACK_USAGE("pnp_init", 0),
STACK_USAGE("pnp_register_protocol", 24),
STACK_USAGE("pnp_unregister_protocol", 8),
STACK_USAGE("pnp_device_remove", 16),
STACK_USAGE("pnp_device_shutdown", 0),
STACK_USAGE("pnp_bus_match", 16),
STACK_USAGE("__pnp_bus_suspend", 32),
STACK_USAGE("pnp_bus_suspend", 0),
STACK_USAGE("pnp_bus_freeze", 0),
STACK_USAGE("pnp_bus_poweroff", 0),
STACK_USAGE("pnp_bus_resume", 16),
STACK_USAGE("pnp_register_driver", 0),
STACK_USAGE("pnp_unregister_driver", 0),
STACK_USAGE("pnp_add_id", 16),
STACK_USAGE("compare_pnp_id", 24),
STACK_USAGE("pnp_device_attach", 16),
STACK_USAGE("pnp_device_detach", 8),
STACK_USAGE("pnp_device_probe", 40),
STACK_USAGE("options_show", 64),
STACK_USAGE("resources_show", 48),
STACK_USAGE("resources_store", 56),
STACK_USAGE("pnp_printf", 104),
STACK_USAGE("id_show", 24),
STACK_USAGE("pnp_init_resources", 0),
STACK_USAGE("pnp_assign_resources", 160),
STACK_USAGE("pnp_auto_config_dev", 24),
STACK_USAGE("pnp_start_dev", 16),
STACK_USAGE("pnp_stop_dev", 16),
STACK_USAGE("pnp_activate_dev", 16),
STACK_USAGE("pnp_disable_dev", 24),
STACK_USAGE("pnpacpi_can_wakeup", 8),
STACK_USAGE("pnpacpi_suspend", 32),
STACK_USAGE("pnpacpi_resume", 24),
STACK_USAGE("pnpacpi_add_device", 40),
STACK_USAGE("pnpacpi_add_device_handler", 16),
STACK_USAGE("ispnpidacpi", 0),
STACK_USAGE("pnpacpi_init", 0),
STACK_USAGE("pnpacpi_setup", 0),
STACK_USAGE("pnpacpi_get_resources", 8),
STACK_USAGE("pnpacpi_set_resources", 64),
STACK_USAGE("pnpacpi_disable_resources", 8),
STACK_USAGE("pnpacpi_parse_allocated_vendor", 0),
STACK_USAGE("pnpacpi_allocated_resource", 120),
STACK_USAGE("pnpacpi_parse_allocated_resource", 24),
STACK_USAGE("pnpacpi_parse_dma_option", 24),
STACK_USAGE("pnpacpi_parse_irq_option", 56),
STACK_USAGE("pnpacpi_parse_ext_irq_option", 72),
STACK_USAGE("pnpacpi_parse_port_option", 0),
STACK_USAGE("pnpacpi_parse_mem24_option", 0),
STACK_USAGE("pnpacpi_parse_mem32_option", 0),
STACK_USAGE("pnpacpi_parse_fixed_mem32_option", 0),
STACK_USAGE("pnpacpi_parse_address_option", 96),
STACK_USAGE("pnpacpi_parse_ext_address_option", 0),
STACK_USAGE("pnpacpi_option_resource", 24),
STACK_USAGE("dma_flags", 24),
STACK_USAGE("pnpacpi_parse_resource_option_data", 40),
STACK_USAGE("pnpacpi_count_resources", 0),
STACK_USAGE("pnpacpi_type_resources", 0),
STACK_USAGE("pnpacpi_build_resource_template", 56),
STACK_USAGE("pnpacpi_encode_resources", 64),
STACK_USAGE("quirk_sb16audio_resources", 48),
STACK_USAGE("quirk_add_irq_optional_dependent_sets", 64),
STACK_USAGE("quirk_ad1815_mpu_resources", 0),
STACK_USAGE("quirk_system_pci_resources", 72),
STACK_USAGE("quirk_amd_mmconfig_area", 96),
STACK_USAGE("quirk_intel_mch", 120),
STACK_USAGE("pnp_fixup_device", 16),
STACK_USAGE("quirk_awe32_resources", 32),
STACK_USAGE("quirk_cmi8330_resources", 24),
STACK_USAGE("pnp_register_mem_resource", 48),
STACK_USAGE("pnp_free_options", 32),
STACK_USAGE("pnp_check_port", 32),
STACK_USAGE("pnp_check_mem", 32),
STACK_USAGE("pnp_test_handler", 0),
STACK_USAGE("pnp_check_irq", 64),
STACK_USAGE("pnp_check_dma", 32),
STACK_USAGE("pnp_resource_type", 0),
STACK_USAGE("pnp_get_resource", 0),
STACK_USAGE("pnp_add_resource", 24),
STACK_USAGE("pnp_register_irq_resource", 48),
STACK_USAGE("pnp_add_irq_resource", 32),
STACK_USAGE("pnp_add_dma_resource", 32),
STACK_USAGE("pnp_add_io_resource", 40),
STACK_USAGE("pnp_add_mem_resource", 40),
STACK_USAGE("pnp_add_bus_resource", 32),
STACK_USAGE("pnp_possible_config", 0),
STACK_USAGE("pnp_range_reserved", 0),
STACK_USAGE("pnp_setup_reserve_irq", 32),
STACK_USAGE("pnp_setup_reserve_dma", 32),
STACK_USAGE("pnp_setup_reserve_io", 32),
STACK_USAGE("pnp_setup_reserve_mem", 32),
STACK_USAGE("pnp_register_dma_resource", 32),
STACK_USAGE("pnp_register_port_resource", 48),
STACK_USAGE("dbg_pnp_show_option", 200),
STACK_USAGE("pnp_is_active", 16),
STACK_USAGE("pnp_eisa_id_to_string", 0),
STACK_USAGE("pnp_resource_type_name", 0),
STACK_USAGE("dbg_pnp_show_resources", 24),
STACK_USAGE("pnp_option_priority_name", 0),
STACK_USAGE("pnp_system_init", 0),
STACK_USAGE("reserve_range", 56),
STACK_USAGE("system_pnp_probe", 16),
STACK_USAGE("power_supply_batinfo_ocv2cap", 8),
STACK_USAGE("power_supply_battery_bti_in_range", 0),
STACK_USAGE("power_supply_get_property", 0),
STACK_USAGE("power_supply_set_property", 0),
STACK_USAGE("power_supply_property_is_writeable", 0),
STACK_USAGE("power_supply_external_power_changed", 0),
STACK_USAGE("power_supply_powers", 0),
STACK_USAGE("power_supply_dev_release", 0),
STACK_USAGE("power_supply_reg_notifier", 0),
STACK_USAGE("power_supply_unreg_notifier", 0),
STACK_USAGE("power_supply_read_temp", 24),
STACK_USAGE("psy_register_thermal", 24),
STACK_USAGE("power_supply_changed", 24),
STACK_USAGE("ps_get_max_charge_cntl_limit", 24),
STACK_USAGE("ps_get_cur_charge_cntl_limit", 24),
STACK_USAGE("ps_set_cur_charge_cntl_limit", 16),
STACK_USAGE("psy_register_cooler", 8),
STACK_USAGE("__power_supply_register", 48),
STACK_USAGE("power_supply_deferred_register_work", 24),
STACK_USAGE("power_supply_register", 0),
STACK_USAGE("power_supply_register_no_ws", 0),
STACK_USAGE("devm_power_supply_release", 0),
STACK_USAGE("devm_power_supply_register", 32),
STACK_USAGE("devm_power_supply_register_no_ws", 32),
STACK_USAGE("power_supply_unregister", 16),
STACK_USAGE("power_supply_get_drvdata", 0),
STACK_USAGE("power_supply_class_init", 8),
STACK_USAGE("power_supply_class_exit", 0),
STACK_USAGE("__power_supply_am_i_supplied", 72),
STACK_USAGE("power_supply_am_i_supplied", 24),
STACK_USAGE("__power_supply_is_system_supplied", 16),
STACK_USAGE("power_supply_is_system_supplied", 16),
STACK_USAGE("__power_supply_get_supplier_property", 64),
STACK_USAGE("power_supply_get_property_from_supplier", 40),
STACK_USAGE("power_supply_set_battery_charged", 0),
STACK_USAGE("power_supply_match_device_by_name", 0),
STACK_USAGE("power_supply_get_by_name", 8),
STACK_USAGE("power_supply_put", 8),
STACK_USAGE("power_supply_get_battery_info", 256),
STACK_USAGE("__power_supply_changed_work", 56),
STACK_USAGE("power_supply_changed_work", 32),
STACK_USAGE("power_supply_put_battery_info", 24),
STACK_USAGE("power_supply_temp2resist_simple", 0),
STACK_USAGE("power_supply_vbat2ri", 0),
STACK_USAGE("power_supply_get_maintenance_charging_setting", 0),
STACK_USAGE("power_supply_ocv2cap_simple", 0),
STACK_USAGE("power_supply_find_ocv2cap_table", 0),
STACK_USAGE("power_supply_hwmon_is_visible", 16),
STACK_USAGE("power_supply_hwmon_read_string", 0),
STACK_USAGE("power_supply_hwmon_read", 32),
STACK_USAGE("power_supply_hwmon_write", 16),
STACK_USAGE("power_supply_add_hwmon_sysfs", 40),
STACK_USAGE("power_supply_remove_hwmon_sysfs", 0),
STACK_USAGE("power_supply_update_leds", 40),
STACK_USAGE("power_supply_create_triggers", 16),
STACK_USAGE("power_supply_remove_triggers", 8),
STACK_USAGE("power_supply_show_property", 72),
STACK_USAGE("power_supply_store_property", 48),
STACK_USAGE("power_supply_attr_is_visible", 0),
STACK_USAGE("power_supply_init_attrs", 24),
STACK_USAGE("power_supply_uevent", 56),
STACK_USAGE("power_supply_charge_behaviour_show", 48),
STACK_USAGE("power_supply_charge_behaviour_parse", 8),
STACK_USAGE("idle_inject_timer_fn", 40),
STACK_USAGE("idle_inject_fn", 0),
STACK_USAGE("idle_inject_set_duration", 0),
STACK_USAGE("idle_inject_get_duration", 0),
STACK_USAGE("idle_inject_set_latency", 0),
STACK_USAGE("idle_inject_start", 40),
STACK_USAGE("idle_inject_stop", 16),
STACK_USAGE("idle_inject_setup", 0),
STACK_USAGE("idle_inject_should_run", 0),
STACK_USAGE("idle_inject_register", 24),
STACK_USAGE("idle_inject_unregister", 16),
STACK_USAGE("idle_inject_init", 0),
STACK_USAGE("power_uw_show", 32),
STACK_USAGE("max_power_range_uw_show", 32),
STACK_USAGE("energy_uj_show", 32),
STACK_USAGE("energy_uj_store", 32),
STACK_USAGE("max_energy_range_uj_show", 32),
STACK_USAGE("show_constraint_power_limit_uw", 48),
STACK_USAGE("store_constraint_power_limit_uw", 72),
STACK_USAGE("show_constraint_time_window_us", 48),
STACK_USAGE("store_constraint_time_window_us", 72),
STACK_USAGE("show_constraint_max_power_uw", 48),
STACK_USAGE("show_constraint_min_power_uw", 48),
STACK_USAGE("show_constraint_max_time_window_us", 48),
STACK_USAGE("show_constraint_min_time_window_us", 48),
STACK_USAGE("show_constraint_name", 40),
STACK_USAGE("name_show", 0),
STACK_USAGE("powercap_release", 24),
STACK_USAGE("enabled_show", 24),
STACK_USAGE("enabled_store", 32),
STACK_USAGE("powercap_register_zone", 72),
STACK_USAGE("powercap_unregister_zone", 32),
STACK_USAGE("powercap_register_control_type", 32),
STACK_USAGE("powercap_unregister_control_type", 8),
STACK_USAGE("powercap_init", 16),
STACK_USAGE("pps_unregister_source", 0),
STACK_USAGE("pps_event", 56),
STACK_USAGE("pps_echo_client_default", 0),
STACK_USAGE("pps_register_source", 32),
STACK_USAGE("pps_cdev_compat_ioctl", 160),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("pps_cdev_open", 0),
STACK_USAGE("pps_cdev_release", 0),
STACK_USAGE("pps_device_destruct", 16),
STACK_USAGE("pps_register_cdev", 32),
STACK_USAGE("pps_cdev_poll", 0),
STACK_USAGE("pps_unregister_cdev", 0),
STACK_USAGE("pps_lookup_dev", 40),
STACK_USAGE("pps_exit", 0),
STACK_USAGE("pps_init", 16),
STACK_USAGE("pps_cdev_fasync", 0),
STACK_USAGE("pps_cdev_pps_fetch", 96),
STACK_USAGE("pps_cdev_ioctl", 96),
STACK_USAGE("assert_show", 0),
STACK_USAGE("clear_show", 0),
STACK_USAGE("mode_show", 0),
STACK_USAGE("echo_show", 0),
STACK_USAGE("name_show", 0),
STACK_USAGE("path_show", 0),
STACK_USAGE("ptp_open", 0),
STACK_USAGE("ptp_ioctl", 224),
STACK_USAGE("ptp_poll", 8),
STACK_USAGE("ptp_read", 104),
STACK_USAGE("ptp_set_pinfunc", 128),
STACK_USAGE("ptp_clock_adjtime", 32),
STACK_USAGE("ptp_clock_release", 16),
STACK_USAGE("ptp_aux_kworker", 8),
STACK_USAGE("ptp_clock_register", 168),
STACK_USAGE("unregister_vclock", 0),
STACK_USAGE("ptp_clock_unregister", 24),
STACK_USAGE("ptp_clock_event", 104),
STACK_USAGE("ptp_clock_index", 0),
STACK_USAGE("ptp_find_pin", 0),
STACK_USAGE("ptp_find_pin_unlocked", 32),
STACK_USAGE("ptp_schedule_worker", 0),
STACK_USAGE("ptp_cancel_worker_sync", 0),
STACK_USAGE("ptp_exit", 0),
STACK_USAGE("ptp_init", 16),
STACK_USAGE("ptp_clock_getres", 0),
STACK_USAGE("ptp_clock_settime", 32),
STACK_USAGE("ptp_clock_gettime", 0),
STACK_USAGE("ptp_kvm_enable", 0),
STACK_USAGE("ptp_kvm_exit", 0),
STACK_USAGE("ptp_kvm_init", 16),
STACK_USAGE("ptp_kvm_get_time_fn", 64),
STACK_USAGE("ptp_kvm_getcrosststamp", 0),
STACK_USAGE("ptp_kvm_adjfreq", 0),
STACK_USAGE("ptp_kvm_adjtime", 0),
STACK_USAGE("ptp_kvm_settime", 0),
STACK_USAGE("ptp_kvm_gettime", 40),
STACK_USAGE("kvm_arch_ptp_init", 8),
STACK_USAGE("kvm_arch_ptp_get_clock", 16),
STACK_USAGE("kvm_arch_ptp_get_crosststamp", 24),
STACK_USAGE("pps_enable_store", 104),
STACK_USAGE("clock_name_show", 0),
STACK_USAGE("unregister_vclock", 16),
STACK_USAGE("n_vclocks_show", 32),
STACK_USAGE("n_vclocks_store", 56),
STACK_USAGE("max_vclocks_show", 0),
STACK_USAGE("max_vclocks_store", 48),
STACK_USAGE("max_adj_show", 0),
STACK_USAGE("n_alarm_show", 0),
STACK_USAGE("ptp_is_attribute_visible", 0),
STACK_USAGE("n_ext_ts_show", 0),
STACK_USAGE("n_per_out_show", 0),
STACK_USAGE("n_pins_show", 0),
STACK_USAGE("pps_show", 0),
STACK_USAGE("ptp_pin_show", 64),
STACK_USAGE("extts_enable_store", 96),
STACK_USAGE("ptp_pin_store", 72),
STACK_USAGE("ptp_populate_pin_groups", 40),
STACK_USAGE("ptp_cleanup_pin_groups", 8),
STACK_USAGE("extts_fifo_show", 56),
STACK_USAGE("period_store", 88),
STACK_USAGE("ptp_vclock_refresh", 24),
STACK_USAGE("ptp_vclock_read", 24),
STACK_USAGE("ptp_vclock_register", 24),
STACK_USAGE("ptp_vclock_adjfine", 40),
STACK_USAGE("ptp_vclock_unregister", 8),
STACK_USAGE("ptp_get_vclocks_index", 88),
STACK_USAGE("ptp_convert_timestamp", 104),
STACK_USAGE("ptp_vclock_adjtime", 24),
STACK_USAGE("ptp_vclock_gettime", 32),
STACK_USAGE("ptp_vclock_gettimex", 72),
STACK_USAGE("ptp_vclock_settime", 32),
STACK_USAGE("ptp_vclock_getcrosststamp", 40),
STACK_USAGE("ras_userspace_consumers", 0),
STACK_USAGE("trace_show", 0),
STACK_USAGE("trace_open", 0),
STACK_USAGE("trace_release", 0),
STACK_USAGE("ras_add_daemon_trace", 8),
STACK_USAGE("ras_debugfs_init", 0),
STACK_USAGE("__bpf_trace_arm_event", 0),
STACK_USAGE("__traceiter_arm_event", 16),
STACK_USAGE("perf_trace_arm_event", 56),
STACK_USAGE("trace_event_raw_event_arm_event", 72),
STACK_USAGE("trace_raw_output_arm_event", 24),
STACK_USAGE("log_non_standard_event", 0),
STACK_USAGE("__bpf_trace_non_standard_event", 0),
STACK_USAGE("__traceiter_non_standard_event", 48),
STACK_USAGE("perf_trace_non_standard_event", 112),
STACK_USAGE("trace_event_raw_event_non_standard_event", 128),
STACK_USAGE("trace_raw_output_non_standard_event", 64),
STACK_USAGE("log_arm_hw_error", 0),
STACK_USAGE("__bpf_trace_aer_event", 0),
STACK_USAGE("__traceiter_aer_event", 48),
STACK_USAGE("perf_trace_aer_event", 104),
STACK_USAGE("trace_event_raw_event_aer_event", 112),
STACK_USAGE("trace_raw_output_aer_event", 56),
STACK_USAGE("ras_init", 0),
STACK_USAGE("__bpf_trace_memory_failure_event", 0),
STACK_USAGE("__traceiter_memory_failure_event", 32),
STACK_USAGE("perf_trace_memory_failure_event", 72),
STACK_USAGE("trace_event_raw_event_memory_failure_event", 88),
STACK_USAGE("trace_raw_output_memory_failure_event", 48),
STACK_USAGE("parse_ras_param", 0),
STACK_USAGE("__bpf_trace_mc_event", 8),
STACK_USAGE("__traceiter_mc_event", 80),
STACK_USAGE("perf_trace_mc_event", 128),
STACK_USAGE("trace_event_raw_event_mc_event", 136),
STACK_USAGE("trace_raw_output_mc_event", 80),
STACK_USAGE("rtc_device_release", 24),
STACK_USAGE("devm_rtc_unregister_device", 16),
STACK_USAGE("devm_rtc_release_device", 0),
STACK_USAGE("devm_rtc_allocate_device", 24),
STACK_USAGE("__devm_rtc_register_device", 80),
STACK_USAGE("devm_rtc_device_register", 24),
STACK_USAGE("rtc_init", 8),
STACK_USAGE("rtc_dev_read", 120),
STACK_USAGE("rtc_dev_poll", 8),
STACK_USAGE("rtc_dev_ioctl", 136),
STACK_USAGE("rtc_dev_open", 16),
STACK_USAGE("rtc_dev_compat_ioctl", 40),
STACK_USAGE("rtc_dev_fasync", 0),
STACK_USAGE("rtc_dev_release", 16),
STACK_USAGE("rtc_dev_prepare", 8),
STACK_USAGE("rtc_dev_init", 0),
STACK_USAGE("rtc_dev_exit", 0),
STACK_USAGE("rtc_timer_cancel", 24),
STACK_USAGE("__bpf_trace_rtc_alarm_irq_enable", 0),
STACK_USAGE("__traceiter_rtc_alarm_irq_enable", 24),
STACK_USAGE("perf_trace_rtc_alarm_irq_enable", 64),
STACK_USAGE("trace_event_raw_event_rtc_alarm_irq_enable", 80),
STACK_USAGE("trace_raw_output_rtc_alarm_irq_enable", 24),
STACK_USAGE("trace_rtc_alarm_irq_enable", 0),
STACK_USAGE("rtc_read_offset", 24),
STACK_USAGE("rtc_set_offset", 24),
STACK_USAGE("__bpf_trace_rtc_time_alarm_class", 0),
STACK_USAGE("perf_trace_rtc_time_alarm_class", 64),
STACK_USAGE("trace_event_raw_event_rtc_time_alarm_class", 80),
STACK_USAGE("trace_raw_output_rtc_time_alarm_class", 24),
STACK_USAGE("rtc_read_time", 32),
STACK_USAGE("__bpf_trace_rtc_offset_class", 0),
STACK_USAGE("perf_trace_rtc_offset_class", 64),
STACK_USAGE("trace_event_raw_event_rtc_offset_class", 80),
STACK_USAGE("trace_raw_output_rtc_offset_class", 24),
STACK_USAGE("rtc_set_time", 40),
STACK_USAGE("__traceiter_rtc_set_offset", 24),
STACK_USAGE("__traceiter_rtc_read_offset", 24),
STACK_USAGE("__bpf_trace_rtc_timer_class", 0),
STACK_USAGE("perf_trace_rtc_timer_class", 56),
STACK_USAGE("trace_event_raw_event_rtc_timer_class", 72),
STACK_USAGE("trace_raw_output_rtc_timer_class", 24),
STACK_USAGE("__traceiter_rtc_timer_enqueue", 16),
STACK_USAGE("trace_rtc_timer_enqueue", 0),
STACK_USAGE("__traceiter_rtc_timer_dequeue", 16),
STACK_USAGE("trace_rtc_timer_dequeue", 0),
STACK_USAGE("__traceiter_rtc_timer_fired", 16),
STACK_USAGE("__rtc_read_alarm", 136),
STACK_USAGE("__traceiter_rtc_set_time", 24),
STACK_USAGE("rtc_read_alarm", 80),
STACK_USAGE("__traceiter_rtc_read_time", 24),
STACK_USAGE("__rtc_set_alarm", 88),
STACK_USAGE("rtc_set_alarm", 96),
STACK_USAGE("__traceiter_rtc_set_alarm", 24),
STACK_USAGE("rtc_initialize_alarm", 120),
STACK_USAGE("rtc_alarm_irq_enable", 32),
STACK_USAGE("__traceiter_rtc_read_alarm", 24),
STACK_USAGE("trace_rtc_read_alarm", 0),
STACK_USAGE("rtc_update_irq_enable", 88),
STACK_USAGE("__bpf_trace_rtc_irq_set_freq", 0),
STACK_USAGE("__traceiter_rtc_irq_set_freq", 24),
STACK_USAGE("perf_trace_rtc_irq_set_freq", 64),
STACK_USAGE("trace_event_raw_event_rtc_irq_set_freq", 80),
STACK_USAGE("trace_raw_output_rtc_irq_set_freq", 24),
STACK_USAGE("rtc_handle_legacy_irq", 32),
STACK_USAGE("rtc_aie_update_irq", 16),
STACK_USAGE("rtc_uie_update_irq", 16),
STACK_USAGE("rtc_pie_update_irq", 24),
STACK_USAGE("rtc_update_irq", 8),
STACK_USAGE("rtc_class_open", 16),
STACK_USAGE("rtc_class_close", 8),
STACK_USAGE("rtc_irq_set_state", 24),
STACK_USAGE("rtc_irq_set_freq", 24),
STACK_USAGE("rtc_timer_enqueue", 128),
STACK_USAGE("__bpf_trace_rtc_irq_set_state", 0),
STACK_USAGE("__traceiter_rtc_irq_set_state", 24),
STACK_USAGE("perf_trace_rtc_irq_set_state", 64),
STACK_USAGE("trace_event_raw_event_rtc_irq_set_state", 80),
STACK_USAGE("trace_raw_output_rtc_irq_set_state", 24),
STACK_USAGE("__rtc_read_time", 16),
STACK_USAGE("rtc_timer_remove", 72),
STACK_USAGE("rtc_timer_do_work", 176),
STACK_USAGE("rtc_timer_init", 0),
STACK_USAGE("rtc_timer_start", 40),
STACK_USAGE("rtc_valid_tm", 0),
STACK_USAGE("rtc_tm_to_time64", 0),
STACK_USAGE("rtc_tm_to_ktime", 0),
STACK_USAGE("rtc_ktime_to_tm", 16),
STACK_USAGE("rtc_month_days", 0),
STACK_USAGE("rtc_year_days", 0),
STACK_USAGE("rtc_time64_to_tm", 0),
STACK_USAGE("devm_rtc_nvmem_register", 16),
STACK_USAGE("rtc_proc_show", 128),
STACK_USAGE("rtc_proc_add_device", 0),
STACK_USAGE("rtc_proc_del_device", 0),
STACK_USAGE("cmos_suspend", 40),
STACK_USAGE("cmos_resume", 136),
STACK_USAGE("rtc_handler", 24),
STACK_USAGE("rtc_wake_on", 0),
STACK_USAGE("rtc_wake_off", 0),
STACK_USAGE("cmos_wake_setup", 8),
STACK_USAGE("cmos_pnp_probe", 24),
STACK_USAGE("cmos_pnp_remove", 0),
STACK_USAGE("cmos_pnp_shutdown", 16),
STACK_USAGE("cmos_platform_probe", 24),
STACK_USAGE("cmos_platform_remove", 0),
STACK_USAGE("cmos_platform_shutdown", 16),
STACK_USAGE("cmos_init", 16),
STACK_USAGE("cmos_exit", 0),
STACK_USAGE("cmos_read_time", 16),
STACK_USAGE("cmos_set_time", 0),
STACK_USAGE("cmos_read_alarm_callback", 24),
STACK_USAGE("cmos_read_alarm", 64),
STACK_USAGE("cmos_irq_enable", 24),
STACK_USAGE("cmos_irq_disable", 24),
STACK_USAGE("cmos_set_alarm_callback", 8),
STACK_USAGE("cmos_set_alarm", 176),
STACK_USAGE("cmos_alarm_irq_enable", 24),
STACK_USAGE("cmos_procfs", 64),
STACK_USAGE("cmos_nvram_read", 40),
STACK_USAGE("cmos_nvram_write", 48),
STACK_USAGE("cmos_interrupt", 48),
STACK_USAGE("cmos_do_probe", 224),
STACK_USAGE("cmos_do_remove", 16),
STACK_USAGE("cmos_aie_poweroff", 112),
STACK_USAGE("mc146818_get_time_callback", 8),
STACK_USAGE("mc146818_get_time", 48),
STACK_USAGE("mc146818_avoid_UIP", 56),
STACK_USAGE("mc146818_set_time", 64),
STACK_USAGE("mc146818_does_rtc_work", 0),
STACK_USAGE("hctosys_show", 0),
STACK_USAGE("wakealarm_show", 56),
STACK_USAGE("wakealarm_store", 104),
STACK_USAGE("offset_show", 24),
STACK_USAGE("offset_store", 32),
STACK_USAGE("range_show", 0),
STACK_USAGE("name_show", 16),
STACK_USAGE("rtc_attr_is_visible", 0),
STACK_USAGE("rtc_get_dev_attribute_groups", 0),
STACK_USAGE("rtc_add_groups", 56),
STACK_USAGE("date_show", 56),
STACK_USAGE("rtc_add_group", 88),
STACK_USAGE("time_show", 56),
STACK_USAGE("since_epoch_show", 56),
STACK_USAGE("max_user_freq_show", 0),
STACK_USAGE("max_user_freq_store", 32),
STACK_USAGE("scsi_opcode_sa_name", 0),
STACK_USAGE("scsi_sense_key_string", 0),
STACK_USAGE("scsi_extd_sense_format", 0),
STACK_USAGE("scsi_hostbyte_string", 0),
STACK_USAGE("scsi_mlreturn_string", 0),
STACK_USAGE("scsi_remove_host", 16),
STACK_USAGE("scsi_add_host_with_dma", 40),
STACK_USAGE("scsi_host_dev_release", 16),
STACK_USAGE("scsi_host_alloc", 40),
STACK_USAGE("__scsi_host_match", 0),
STACK_USAGE("scsi_host_lookup", 32),
STACK_USAGE("scsi_host_get", 8),
STACK_USAGE("scsi_host_check_in_flight", 0),
STACK_USAGE("scsi_host_cls_release", 0),
STACK_USAGE("scsi_host_busy", 16),
STACK_USAGE("scsi_host_put", 0),
STACK_USAGE("scsi_init_hosts", 0),
STACK_USAGE("scsi_exit_hosts", 0),
STACK_USAGE("scsi_is_host_device", 0),
STACK_USAGE("scsi_queue_work", 0),
STACK_USAGE("scsi_flush_work", 0),
STACK_USAGE("complete_all_cmds_iter", 24),
STACK_USAGE("scsi_host_complete_all_commands", 16),
STACK_USAGE("__scsi_host_busy_iter_fn", 0),
STACK_USAGE("scsi_host_busy_iter", 24),
STACK_USAGE("scsi_host_set_state", 0),
STACK_USAGE("__bpf_trace_scsi_dispatch_cmd_start", 0),
STACK_USAGE("__traceiter_scsi_dispatch_cmd_start", 16),
STACK_USAGE("perf_trace_scsi_dispatch_cmd_start", 80),
STACK_USAGE("trace_event_raw_event_scsi_dispatch_cmd_start", 80),
STACK_USAGE("trace_raw_output_scsi_dispatch_cmd_start", 88),
STACK_USAGE("scsi_finish_command", 32),
STACK_USAGE("__bpf_trace_scsi_dispatch_cmd_error", 0),
STACK_USAGE("__traceiter_scsi_dispatch_cmd_error", 24),
STACK_USAGE("perf_trace_scsi_dispatch_cmd_error", 80),
STACK_USAGE("trace_event_raw_event_scsi_dispatch_cmd_error", 88),
STACK_USAGE("trace_raw_output_scsi_dispatch_cmd_error", 88),
STACK_USAGE("scsi_device_max_queue_depth", 0),
STACK_USAGE("scsi_change_queue_depth", 8),
STACK_USAGE("__bpf_trace_scsi_cmd_done_timeout_template", 0),
STACK_USAGE("perf_trace_scsi_cmd_done_timeout_template", 80),
STACK_USAGE("trace_event_raw_event_scsi_cmd_done_timeout_template", 80),
STACK_USAGE("trace_raw_output_scsi_cmd_done_timeout_template", 104),
STACK_USAGE("scsi_track_queue_full", 8),
STACK_USAGE("__traceiter_scsi_dispatch_cmd_done", 16),
STACK_USAGE("__traceiter_scsi_dispatch_cmd_timeout", 16),
STACK_USAGE("__bpf_trace_scsi_eh_wakeup", 0),
STACK_USAGE("__traceiter_scsi_eh_wakeup", 16),
STACK_USAGE("perf_trace_scsi_eh_wakeup", 56),
STACK_USAGE("trace_event_raw_event_scsi_eh_wakeup", 72),
STACK_USAGE("trace_raw_output_scsi_eh_wakeup", 24),
STACK_USAGE("scsi_get_vpd_page", 88),
STACK_USAGE("scsi_get_vpd_buf", 72),
STACK_USAGE("scsi_update_vpd_page", 32),
STACK_USAGE("scsi_attach_vpd", 56),
STACK_USAGE("scsi_report_opcode", 88),
STACK_USAGE("scsi_device_get", 24),
STACK_USAGE("scsi_device_put", 8),
STACK_USAGE("__scsi_iterate_devices", 48),
STACK_USAGE("starget_for_each_device", 40),
STACK_USAGE("__starget_for_each_device", 40),
STACK_USAGE("__scsi_device_lookup_by_target", 0),
STACK_USAGE("scsi_device_lookup_by_target", 48),
STACK_USAGE("__scsi_device_lookup", 0),
STACK_USAGE("scsi_device_lookup", 48),
STACK_USAGE("init_scsi", 8),
STACK_USAGE("exit_scsi", 0),
STACK_USAGE("scsi_bsg_sg_io_fn", 40),
STACK_USAGE("scsi_bsg_register_queue", 0),
STACK_USAGE("int_to_scsilun", 0),
STACK_USAGE("scsi_normalize_sense", 0),
STACK_USAGE("scsi_sense_desc_find", 0),
STACK_USAGE("scsi_build_sense_buffer", 8),
STACK_USAGE("scsi_set_sense_information", 0),
STACK_USAGE("scsi_set_sense_field_pointer", 24),
STACK_USAGE("scsi_device_type", 0),
STACK_USAGE("scsilun_to_int", 0),
STACK_USAGE("scsi_show_rq", 168),
STACK_USAGE("scsi_dev_info_list_add_keyed", 96),
STACK_USAGE("scsi_dev_info_list_find", 80),
STACK_USAGE("scsi_dev_info_list_del_keyed", 0),
STACK_USAGE("scsi_dev_info_list_add_str", 48),
STACK_USAGE("scsi_get_device_flags", 8),
STACK_USAGE("scsi_get_device_flags_keyed", 16),
STACK_USAGE("devinfo_seq_show", 16),
STACK_USAGE("devinfo_seq_start", 8),
STACK_USAGE("devinfo_seq_next", 0),
STACK_USAGE("devinfo_seq_stop", 0),
STACK_USAGE("proc_scsi_devinfo_open", 0),
STACK_USAGE("proc_scsi_devinfo_write", 32),
STACK_USAGE("scsi_exit_devinfo", 24),
STACK_USAGE("scsi_dev_info_add_list", 16),
STACK_USAGE("scsi_dev_info_remove_list", 24),
STACK_USAGE("scsi_init_devinfo", 24),
STACK_USAGE("scsi_eh_restore_cmnd", 0),
STACK_USAGE("scsi_send_eh_cmnd", 296),
STACK_USAGE("scsi_eh_finish_cmd", 0),
STACK_USAGE("scsi_eh_get_sense", 48),
STACK_USAGE("scsi_eh_test_devices", 56),
STACK_USAGE("scmd_eh_abort_handler", 24),
STACK_USAGE("scsi_eh_offline_sdevs", 48),
STACK_USAGE("scsi_noretry_cmd", 0),
STACK_USAGE("scsi_decide_disposition", 16),
STACK_USAGE("eh_lock_door_done", 0),
STACK_USAGE("scsi_eh_ready_devs", 112),
STACK_USAGE("scsi_eh_flush_done_q", 48),
STACK_USAGE("scsi_error_handler", 104),
STACK_USAGE("scsi_report_bus_reset", 0),
STACK_USAGE("scsi_report_device_reset", 0),
STACK_USAGE("scsi_ioctl_reset", 48),
STACK_USAGE("scsi_command_normalize_sense", 0),
STACK_USAGE("scsi_get_sense_info_fld", 16),
STACK_USAGE("scsi_eh_inc_host_failed", 16),
STACK_USAGE("scsi_eh_scmd_add", 24),
STACK_USAGE("scsi_times_out", 24),
STACK_USAGE("scsi_block_when_processing_errors", 72),
STACK_USAGE("scsi_check_sense", 40),
STACK_USAGE("scsi_eh_wakeup", 8),
STACK_USAGE("scsi_handle_queue_ramp_up", 16),
STACK_USAGE("scsi_handle_queue_full", 16),
STACK_USAGE("scsi_eh_done", 0),
STACK_USAGE("scsi_schedule_eh", 16),
STACK_USAGE("scsi_try_host_reset", 24),
STACK_USAGE("scsi_try_bus_reset", 24),
STACK_USAGE("__scsi_report_device_reset", 0),
STACK_USAGE("scsi_try_target_reset", 24),
STACK_USAGE("scsi_eh_prep_cmnd", 24),
STACK_USAGE("scsi_set_medium_removal", 56),
STACK_USAGE("scsi_cmd_allowed", 16),
STACK_USAGE("scsi_complete_sghdr_rq", 24),
STACK_USAGE("sg_io", 112),
STACK_USAGE("put_sg_io_hdr", 72),
STACK_USAGE("get_sg_io_hdr", 96),
STACK_USAGE("ioctl_internal_command", 40),
STACK_USAGE("scsi_ioctl", 312),
STACK_USAGE("scsi_ioctl_block_when_processing_errors", 0),
STACK_USAGE("scsi_alloc_sgtables", 56),
STACK_USAGE("scsi_alloc_request", 0),
STACK_USAGE("scsi_cleanup_rq", 8),
STACK_USAGE("scsi_init_command", 8),
STACK_USAGE("scsi_device_state_check", 8),
STACK_USAGE("scsi_mq_lld_busy", 16),
STACK_USAGE("scsi_complete", 32),
STACK_USAGE("__scsi_queue_insert", 24),
STACK_USAGE("scsi_done_internal", 16),
STACK_USAGE("scsi_done", 0),
STACK_USAGE("scsi_done_direct", 0),
STACK_USAGE("scsi_mq_put_budget", 0),
STACK_USAGE("scsi_mq_get_budget", 24),
STACK_USAGE("scsi_mq_set_rq_budget_token", 0),
STACK_USAGE("scsi_mq_get_rq_budget_token", 0),
STACK_USAGE("scsi_queue_rq", 72),
STACK_USAGE("scsi_timeout", 0),
STACK_USAGE("scsi_mq_init_request", 16),
STACK_USAGE("scsi_mq_exit_request", 8),
STACK_USAGE("scsi_mq_poll", 0),
STACK_USAGE("scsi_init_hctx", 0),
STACK_USAGE("scsi_queue_insert", 0),
STACK_USAGE("scsi_map_queues", 0),
STACK_USAGE("__scsi_init_queue", 32),
STACK_USAGE("scsi_commit_rqs", 0),
STACK_USAGE("scsi_mq_setup_tags", 32),
STACK_USAGE("scsi_mq_destroy_tags", 0),
STACK_USAGE("scsi_device_from_queue", 8),
STACK_USAGE("scsi_block_requests", 0),
STACK_USAGE("scsi_unblock_requests", 16),
STACK_USAGE("scsi_exit_queue", 0),
STACK_USAGE("scsi_mode_select", 80),
STACK_USAGE("__scsi_execute", 56),
STACK_USAGE("scsi_mode_sense", 112),
STACK_USAGE("scsi_test_unit_ready", 56),
STACK_USAGE("scsi_device_set_state", 0),
STACK_USAGE("scsi_evt_thread", 136),
STACK_USAGE("sdev_evt_send", 32),
STACK_USAGE("sdev_evt_alloc", 8),
STACK_USAGE("sdev_evt_send_simple", 40),
STACK_USAGE("scsi_device_quiesce", 40),
STACK_USAGE("scsi_device_resume", 16),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("device_quiesce_fn", 0),
STACK_USAGE("scsi_target_quiesce", 0),
STACK_USAGE("device_resume_fn", 16),
STACK_USAGE("scsi_target_resume", 0),
STACK_USAGE("scsi_start_queue", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("scsi_internal_device_block_nowait", 8),
STACK_USAGE("scsi_dec_host_busy", 16),
STACK_USAGE("scsi_internal_device_unblock_nowait", 8),
STACK_USAGE("scsi_internal_device_unblock", 32),
STACK_USAGE("device_block", 32),
STACK_USAGE("target_block", 8),
STACK_USAGE("scsi_target_block", 8),
STACK_USAGE("device_unblock", 0),
STACK_USAGE("target_unblock", 16),
STACK_USAGE("scsi_target_unblock", 24),
STACK_USAGE("scsi_host_block", 48),
STACK_USAGE("scsi_device_unbusy", 24),
STACK_USAGE("scsi_host_unblock", 40),
STACK_USAGE("scsi_kmap_atomic_sg", 56),
STACK_USAGE("scsi_kunmap_atomic_sg", 0),
STACK_USAGE("sdev_disable_disk_events", 0),
STACK_USAGE("sdev_enable_disk_events", 0),
STACK_USAGE("scsi_vpd_lun_id", 72),
STACK_USAGE("scsi_vpd_tpg_id", 24),
STACK_USAGE("scsi_build_sense", 8),
STACK_USAGE("scsi_run_queue", 88),
STACK_USAGE("scsi_requeue_run_queue", 0),
STACK_USAGE("scsi_run_host_queues", 16),
STACK_USAGE("scsi_free_sgtables", 8),
STACK_USAGE("scsi_end_request", 48),
STACK_USAGE("scsi_init_sense_cache", 16),
STACK_USAGE("scsi_io_completion_reprep", 8),
STACK_USAGE("scsi_io_completion_action", 56),
STACK_USAGE("scsi_io_completion_nz_result", 40),
STACK_USAGE("scsi_io_completion", 64),
STACK_USAGE("scsi_dma_map", 0),
STACK_USAGE("scsi_dma_unmap", 0),
STACK_USAGE("scsi_format_opcode_name", 56),
STACK_USAGE("__scsi_format_command", 56),
STACK_USAGE("scsi_print_command", 64),
STACK_USAGE("scsi_format_extd_sense", 64),
STACK_USAGE("scsi_log_print_sense_hdr", 88),
STACK_USAGE("scsi_log_print_sense", 88),
STACK_USAGE("scsi_print_sense_hdr", 0),
STACK_USAGE("__scsi_print_sense", 0),
STACK_USAGE("scsi_print_sense", 0),
STACK_USAGE("scsi_print_result", 64),
STACK_USAGE("sdev_format_header", 32),
STACK_USAGE("sdev_prefix_printk", 136),
STACK_USAGE("scmd_printk", 152),
STACK_USAGE("scsi_bus_suspend", 24),
STACK_USAGE("scsi_bus_resume", 24),
STACK_USAGE("scsi_bus_freeze", 24),
STACK_USAGE("scsi_bus_thaw", 24),
STACK_USAGE("scsi_bus_poweroff", 24),
STACK_USAGE("scsi_bus_restore", 24),
STACK_USAGE("scsi_runtime_suspend", 24),
STACK_USAGE("scsi_runtime_resume", 32),
STACK_USAGE("scsi_runtime_idle", 8),
STACK_USAGE("scsi_autopm_get_device", 16),
STACK_USAGE("scsi_autopm_put_device", 0),
STACK_USAGE("scsi_autopm_get_target", 0),
STACK_USAGE("scsi_autopm_put_target", 0),
STACK_USAGE("scsi_autopm_get_host", 16),
STACK_USAGE("scsi_autopm_put_host", 0),
STACK_USAGE("scsi_bus_prepare", 0),
STACK_USAGE("scsi_proc_hostdir_add", 8),
STACK_USAGE("scsi_proc_hostdir_rm", 8),
STACK_USAGE("scsi_proc_host_add", 48),
STACK_USAGE("scsi_proc_host_rm", 40),
STACK_USAGE("scsi_remove_single_device", 32),
STACK_USAGE("proc_scsi_write", 72),
STACK_USAGE("scsi_seq_start", 32),
STACK_USAGE("scsi_seq_next", 16),
STACK_USAGE("scsi_seq_stop", 0),
STACK_USAGE("scsi_seq_show", 24),
STACK_USAGE("proc_scsi_open", 0),
STACK_USAGE("scsi_init_procfs", 8),
STACK_USAGE("scsi_exit_procfs", 0),
STACK_USAGE("proc_scsi_host_write", 40),
STACK_USAGE("proc_scsi_show", 0),
STACK_USAGE("proc_scsi_host_open", 0),
STACK_USAGE("scsi_probe_and_add_lun", 184),
STACK_USAGE("scsi_enable_async_suspend", 0),
STACK_USAGE("scsi_complete_async_scans", 24),
STACK_USAGE("__scsi_add_device", 56),
STACK_USAGE("scsi_add_device", 8),
STACK_USAGE("scsi_rescan_device", 24),
STACK_USAGE("__scsi_scan_target", 120),
STACK_USAGE("scsi_scan_target", 56),
STACK_USAGE("scsi_scan_host_selected", 72),
STACK_USAGE("do_scan_async", 32),
STACK_USAGE("scsi_scan_host", 24),
STACK_USAGE("scsi_forget_host", 16),
STACK_USAGE("scsi_unlock_floptical", 56),
STACK_USAGE("scsi_realloc_sdev_budget_map", 88),
STACK_USAGE("scsi_alloc_sdev", 56),
STACK_USAGE("scsi_target_destroy", 40),
STACK_USAGE("scsi_target_dev_release", 8),
STACK_USAGE("scsi_is_target_device", 0),
STACK_USAGE("scsi_alloc_target", 96),
STACK_USAGE("scsi_target_reap", 16),
STACK_USAGE("scsi_sanitize_inquiry_string", 0),
STACK_USAGE("scsi_init_sysctl", 0),
STACK_USAGE("scsi_exit_sysctl", 0),
STACK_USAGE("sdev_show_evt_media_change", 0),
STACK_USAGE("sdev_store_evt_media_change", 16),
STACK_USAGE("sdev_show_evt_inquiry_change_reported", 0),
STACK_USAGE("sdev_store_evt_inquiry_change_reported", 16),
STACK_USAGE("sdev_show_evt_capacity_change_reported", 0),
STACK_USAGE("sdev_store_evt_capacity_change_reported", 16),
STACK_USAGE("sdev_show_evt_soft_threshold_reached", 0),
STACK_USAGE("sdev_store_evt_soft_threshold_reached", 16),
STACK_USAGE("sdev_show_evt_mode_parameter_change_reported", 0),
STACK_USAGE("sdev_store_evt_mode_parameter_change_reported", 16),
STACK_USAGE("sdev_show_evt_lun_change_reported", 0),
STACK_USAGE("sdev_store_evt_lun_change_reported", 16),
STACK_USAGE("sdev_store_queue_depth", 32),
STACK_USAGE("sdev_show_queue_depth", 0),
STACK_USAGE("sdev_show_wwid", 8),
STACK_USAGE("sdev_show_blacklist", 48),
STACK_USAGE("sdev_show_queue_ramp_up_period", 8),
STACK_USAGE("sdev_store_queue_ramp_up_period", 32),
STACK_USAGE("scsi_sdev_attr_is_visible", 0),
STACK_USAGE("scsi_sdev_bin_attr_is_visible", 0),
STACK_USAGE("scsi_sysfs_add_sdev", 32),
STACK_USAGE("__scsi_remove_device", 24),
STACK_USAGE("scsi_remove_device", 16),
STACK_USAGE("scsi_remove_target", 80),
STACK_USAGE("scsi_register_driver", 0),
STACK_USAGE("scsi_register_interface", 0),
STACK_USAGE("scsi_sysfs_add_host", 8),
STACK_USAGE("scsi_sysfs_device_initialize", 40),
STACK_USAGE("scsi_is_sdev_device", 0),
STACK_USAGE("store_scan", 120),
STACK_USAGE("store_shost_state", 24),
STACK_USAGE("show_shost_state", 0),
STACK_USAGE("show_shost_supported_mode", 16),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("show_shost_active_mode", 16),
STACK_USAGE("store_host_reset", 32),
STACK_USAGE("show_shost_eh_deadline", 0),
STACK_USAGE("store_shost_eh_deadline", 48),
STACK_USAGE("show_unique_id", 0),
STACK_USAGE("show_cmd_per_lun", 0),
STACK_USAGE("show_can_queue", 0),
STACK_USAGE("show_sg_tablesize", 0),
STACK_USAGE("show_sg_prot_tablesize", 0),
STACK_USAGE("show_prot_capabilities", 0),
STACK_USAGE("show_prot_guard_type", 0),
STACK_USAGE("show_proc_name", 0),
STACK_USAGE("show_host_busy", 8),
STACK_USAGE("show_use_blk_mq", 0),
STACK_USAGE("show_nr_hw_queues", 0),
STACK_USAGE("scsi_device_cls_release", 0),
STACK_USAGE("scsi_device_dev_release_usercontext", 72),
STACK_USAGE("scsi_device_state_name", 0),
STACK_USAGE("scsi_device_dev_release", 8),
STACK_USAGE("scsi_bus_match", 0),
STACK_USAGE("scsi_bus_uevent", 0),
STACK_USAGE("scsi_sysfs_register", 8),
STACK_USAGE("scsi_sysfs_unregister", 0),
STACK_USAGE("sdev_show_type", 0),
STACK_USAGE("sdev_show_scsi_level", 0),
STACK_USAGE("sdev_show_vendor", 0),
STACK_USAGE("sdev_show_model", 0),
STACK_USAGE("sdev_show_rev", 0),
STACK_USAGE("sdev_show_device_busy", 8),
STACK_USAGE("sdev_show_device_blocked", 0),
STACK_USAGE("sdev_show_timeout", 0),
STACK_USAGE("sdev_store_timeout", 32),
STACK_USAGE("sdev_show_eh_timeout", 0),
STACK_USAGE("sdev_store_eh_timeout", 40),
STACK_USAGE("scsi_host_state_name", 0),
STACK_USAGE("store_rescan_field", 8),
STACK_USAGE("sdev_store_delete", 40),
STACK_USAGE("store_state_field", 48),
STACK_USAGE("show_state_field", 0),
STACK_USAGE("show_queue_type_field", 0),
STACK_USAGE("store_queue_type_field", 8),
STACK_USAGE("show_vpd_pg83", 40),
STACK_USAGE("show_vpd_pg80", 40),
STACK_USAGE("show_vpd_pg89", 40),
STACK_USAGE("show_vpd_pg0", 40),
STACK_USAGE("show_inquiry", 16),
STACK_USAGE("show_iostat_counterbits", 0),
STACK_USAGE("show_iostat_iorequest_cnt", 0),
STACK_USAGE("show_iostat_iodone_cnt", 0),
STACK_USAGE("show_iostat_ioerr_cnt", 0),
STACK_USAGE("sdev_show_modalias", 0),
STACK_USAGE("scsi_trace_parse_cdb", 32),
STACK_USAGE("spi_dv_device_work_wrapper", 8),
STACK_USAGE("spi_execute", 168),
STACK_USAGE("spi_schedule_dv_device", 16),
STACK_USAGE("spi_display_xfer_agreement", 80),
STACK_USAGE("spi_populate_width_msg", 0),
STACK_USAGE("spi_populate_sync_msg", 0),
STACK_USAGE("spi_populate_ppr_msg", 0),
STACK_USAGE("spi_populate_tag_msg", 0),
STACK_USAGE("print_nego", 104),
STACK_USAGE("spi_print_msg", 32),
STACK_USAGE("spi_device_match", 16),
STACK_USAGE("spi_target_match", 32),
STACK_USAGE("spi_host_configure", 24),
STACK_USAGE("target_attribute_is_visible", 32),
STACK_USAGE("spi_target_configure", 0),
STACK_USAGE("spi_attach_transport", 16),
STACK_USAGE("spi_release_transport", 8),
STACK_USAGE("spi_transport_init", 8),
STACK_USAGE("spi_transport_exit", 0),
STACK_USAGE("spi_host_setup", 16),
STACK_USAGE("spi_host_match", 24),
STACK_USAGE("spi_device_configure", 16),
STACK_USAGE("spi_setup_transport_attrs", 0),
STACK_USAGE("show_spi_transport_max_offset", 0),
STACK_USAGE("show_spi_transport_offset", 32),
STACK_USAGE("store_spi_transport_max_offset", 16),
STACK_USAGE("store_spi_transport_offset", 48),
STACK_USAGE("show_spi_transport_max_width", 0),
STACK_USAGE("show_spi_transport_width", 32),
STACK_USAGE("store_spi_transport_max_width", 16),
STACK_USAGE("store_spi_transport_width", 48),
STACK_USAGE("show_spi_transport_iu", 32),
STACK_USAGE("show_spi_transport_max_iu", 0),
STACK_USAGE("store_spi_transport_iu", 48),
STACK_USAGE("store_spi_transport_max_iu", 16),
STACK_USAGE("show_spi_transport_dt", 32),
STACK_USAGE("store_spi_transport_dt", 40),
STACK_USAGE("show_spi_transport_max_qas", 0),
STACK_USAGE("show_spi_transport_qas", 32),
STACK_USAGE("store_spi_transport_max_qas", 16),
STACK_USAGE("store_spi_transport_qas", 48),
STACK_USAGE("show_spi_transport_wr_flow", 32),
STACK_USAGE("store_spi_transport_wr_flow", 40),
STACK_USAGE("show_spi_transport_rd_strm", 32),
STACK_USAGE("store_spi_transport_rd_strm", 40),
STACK_USAGE("show_spi_transport_rti", 32),
STACK_USAGE("store_spi_transport_rti", 40),
STACK_USAGE("show_spi_transport_pcomp_en", 32),
STACK_USAGE("store_spi_transport_pcomp_en", 40),
STACK_USAGE("show_spi_transport_hold_mcs", 32),
STACK_USAGE("store_spi_transport_hold_mcs", 40),
STACK_USAGE("child_iter", 8),
STACK_USAGE("store_spi_revalidate", 8),
STACK_USAGE("show_spi_transport_period", 32),
STACK_USAGE("store_spi_transport_period", 64),
STACK_USAGE("show_spi_transport_min_period", 32),
STACK_USAGE("store_spi_transport_min_period", 32),
STACK_USAGE("show_spi_host_signalling", 24),
STACK_USAGE("store_spi_host_signalling", 40),
STACK_USAGE("show_spi_host_width", 24),
STACK_USAGE("show_spi_host_hba_id", 24),
STACK_USAGE("spi_dv_device_echo_buffer", 96),
STACK_USAGE("spi_dv_device_compare_inquiry", 80),
STACK_USAGE("spi_dv_retrain", 80),
STACK_USAGE("spi_dv_device", 136),
STACK_USAGE("scsicam_bios_param", 16),
STACK_USAGE("scsi_bios_ptable", 16),
STACK_USAGE("scsi_partsize", 32),
STACK_USAGE("sd_setup_rw6_cmnd", 0),
STACK_USAGE("sd_init_command", 72),
STACK_USAGE("sd_uninit_command", 0),
STACK_USAGE("sd_open", 40),
STACK_USAGE("sd_release", 8),
STACK_USAGE("sd_getgeo", 56),
STACK_USAGE("sd_ioctl", 32),
STACK_USAGE("cache_type_store", 152),
STACK_USAGE("sd_check_events", 32),
STACK_USAGE("sd_sync_cache", 80),
STACK_USAGE("sd_rescan", 0),
STACK_USAGE("sd_get_unique_id", 56),
STACK_USAGE("sd_pr_command", 104),
STACK_USAGE("sd_pr_register", 0),
STACK_USAGE("sd_pr_reserve", 0),
STACK_USAGE("sd_pr_release", 0),
STACK_USAGE("sd_pr_preempt", 0),
STACK_USAGE("sd_pr_clear", 0),
STACK_USAGE("scsi_disk_free_disk", 0),
STACK_USAGE("sd_eh_reset", 0),
STACK_USAGE("sd_eh_action", 24),
STACK_USAGE("sd_done", 88),
STACK_USAGE("manage_start_stop_show", 0),
STACK_USAGE("read_capacity_error", 24),
STACK_USAGE("read_capacity_16", 104),
STACK_USAGE("manage_start_stop_store", 40),
STACK_USAGE("read_capacity_10", 104),
STACK_USAGE("allow_restart_show", 0),
STACK_USAGE("allow_restart_store", 48),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("cache_type_show", 0),
STACK_USAGE("FUA_show", 0),
STACK_USAGE("protection_type_show", 0),
STACK_USAGE("protection_type_store", 40),
STACK_USAGE("sd_revalidate_disk", 168),
STACK_USAGE("protection_mode_show", 0),
STACK_USAGE("sd_unlock_native_capacity", 0),
STACK_USAGE("sd_probe", 64),
STACK_USAGE("app_tag_own_show", 0),
STACK_USAGE("sd_remove", 16),
STACK_USAGE("scsi_disk_release", 16),
STACK_USAGE("sd_start_stop_device", 48),
STACK_USAGE("sd_shutdown", 8),
STACK_USAGE("sd_suspend_common", 40),
STACK_USAGE("thin_provisioning_show", 0),
STACK_USAGE("sd_suspend_system", 0),
STACK_USAGE("sd_suspend_runtime", 0),
STACK_USAGE("sd_resume_system", 8),
STACK_USAGE("sd_resume_runtime", 16),
STACK_USAGE("init_sd", 16),
STACK_USAGE("exit_sd", 8),
STACK_USAGE("sd_print_sense_hdr", 0),
STACK_USAGE("sd_print_result", 24),
STACK_USAGE("provisioning_mode_show", 0),
STACK_USAGE("provisioning_mode_store", 40),
STACK_USAGE("zeroing_mode_show", 0),
STACK_USAGE("zeroing_mode_store", 24),
STACK_USAGE("max_medium_access_timeouts_show", 0),
STACK_USAGE("max_medium_access_timeouts_store", 24),
STACK_USAGE("max_write_same_blocks_show", 0),
STACK_USAGE("max_write_same_blocks_store", 48),
STACK_USAGE("zoned_cap_show", 0),
STACK_USAGE("max_retries_store", 40),
STACK_USAGE("max_retries_show", 0),
STACK_USAGE("sd_default_probe", 0),
STACK_USAGE("sd_setup_protect_cmnd", 0),
STACK_USAGE("sd_config_discard", 8),
STACK_USAGE("sd_setup_unmap_cmnd", 48),
STACK_USAGE("sd_setup_write_same16_cmnd", 56),
STACK_USAGE("sd_setup_write_same10_cmnd", 56),
STACK_USAGE("sd_config_write_same", 4),
STACK_USAGE("sg_ioctl", 144),
STACK_USAGE("sg_poll", 40),
STACK_USAGE("sg_fasync", 0),
STACK_USAGE("sg_vma_fault", 16),
STACK_USAGE("sg_mmap", 40),
STACK_USAGE("sg_rq_end_io_usercontext", 32),
STACK_USAGE("sg_rq_end_io", 64),
STACK_USAGE("sg_add_device", 64),
STACK_USAGE("sg_remove_device", 48),
STACK_USAGE("init_sg", 16),
STACK_USAGE("exit_sg", 0),
STACK_USAGE("sg_finish_rem_req", 32),
STACK_USAGE("sg_build_indirect", 96),
STACK_USAGE("sg_read_oxfer", 64),
STACK_USAGE("sg_build_reserve", 40),
STACK_USAGE("sg_link_reserve", 0),
STACK_USAGE("sg_get_rq_mark", 32),
STACK_USAGE("sg_add_request", 40),
STACK_USAGE("sg_remove_request", 16),
STACK_USAGE("sg_add_sfp", 24),
STACK_USAGE("sg_remove_sfp_usercontext", 64),
STACK_USAGE("sg_idr_max_id", 0),
STACK_USAGE("sg_allow_access", 0),
STACK_USAGE("sg_proc_seq_show_int", 0),
STACK_USAGE("sg_proc_single_open_adio", 0),
STACK_USAGE("sg_proc_write_adio", 40),
STACK_USAGE("sg_proc_single_open_dressz", 0),
STACK_USAGE("sg_proc_write_dressz", 40),
STACK_USAGE("sg_proc_seq_show_version", 0),
STACK_USAGE("sg_proc_seq_show_devhdr", 0),
STACK_USAGE("dev_seq_start", 40),
STACK_USAGE("dev_seq_next", 0),
STACK_USAGE("dev_seq_stop", 0),
STACK_USAGE("open_wait", 96),
STACK_USAGE("sg_proc_seq_show_dev", 72),
STACK_USAGE("sg_proc_seq_show_devstrs", 24),
STACK_USAGE("sg_proc_seq_show_debug", 104),
STACK_USAGE("sg_open", 48),
STACK_USAGE("local_lock_release", 8),
STACK_USAGE("sg_release", 32),
STACK_USAGE("sg_read", 112),
STACK_USAGE("sg_new_read", 48),
STACK_USAGE("sg_write", 392),
STACK_USAGE("sg_new_write", 328),
STACK_USAGE("sg_common_write", 184),
STACK_USAGE("exit_sr", 0),
STACK_USAGE("sr_runtime_suspend", 0),
STACK_USAGE("sr_check_events", 72),
STACK_USAGE("sr_done", 8),
STACK_USAGE("sr_init_command", 40),
STACK_USAGE("sr_revalidate_disk", 96),
STACK_USAGE("sr_block_open", 48),
STACK_USAGE("sr_block_release", 24),
STACK_USAGE("sr_block_ioctl", 64),
STACK_USAGE("sr_block_check_events", 0),
STACK_USAGE("sr_free_disk", 16),
STACK_USAGE("sr_open", 0),
STACK_USAGE("sr_release", 0),
STACK_USAGE("sr_probe", 136),
STACK_USAGE("sr_packet", 8),
STACK_USAGE("sr_read_cdda_bpc", 64),
STACK_USAGE("sr_remove", 8),
STACK_USAGE("init_sr", 8),
STACK_USAGE("sr_do_ioctl", 80),
STACK_USAGE("sr_tray_move", 72),
STACK_USAGE("sr_lock_door", 0),
STACK_USAGE("sr_drive_status", 40),
STACK_USAGE("sr_disk_status", 120),
STACK_USAGE("sr_get_last_session", 0),
STACK_USAGE("sr_get_mcn", 104),
STACK_USAGE("sr_reset", 0),
STACK_USAGE("sr_select_speed", 72),
STACK_USAGE("sr_audio_ioctl", 208),
STACK_USAGE("sr_is_xa", 160),
STACK_USAGE("sr_read_tocentry", 96),
STACK_USAGE("sr_set_blocklength", 104),
STACK_USAGE("sr_cd_check", 192),
STACK_USAGE("sr_vendor_init", 24),
STACK_USAGE("step_wise_throttle", 96),
STACK_USAGE("user_space_bind", 0),
STACK_USAGE("notify_user_space", 88),
STACK_USAGE("window_size_set", 16),
STACK_USAGE("clamp_balancing_func", 8),
STACK_USAGE("clamp_idle_injection_func", 64),
STACK_USAGE("poll_pkg_cstate", 32),
STACK_USAGE("start_power_clamp_worker", 24),
STACK_USAGE("end_power_clamp", 24),
STACK_USAGE("powerclamp_cpu_online", 8),
STACK_USAGE("powerclamp_cpu_predown", 16),
STACK_USAGE("powerclamp_get_max_state", 0),
STACK_USAGE("powerclamp_get_cur_state", 0),
STACK_USAGE("powerclamp_set_cur_state", 8),
STACK_USAGE("powerclamp_probe", 16),
STACK_USAGE("powerclamp_debug_show", 24),
STACK_USAGE("powerclamp_debug_open", 0),
STACK_USAGE("powerclamp_create_debug_files", 0),
STACK_USAGE("powerclamp_init", 8),
STACK_USAGE("powerclamp_exit", 0),
STACK_USAGE("duration_set", 16),
STACK_USAGE("therm_throt_device_show_core_throttle_count", 16),
STACK_USAGE("therm_throt_device_show_core_power_limit_count", 16),
STACK_USAGE("therm_throt_device_show_package_throttle_count", 16),
STACK_USAGE("therm_throt_device_show_package_power_limit_count", 16),
STACK_USAGE("therm_throt_device_show_core_throttle_max_time_ms", 16),
STACK_USAGE("therm_throt_device_show_package_throttle_max_time_ms", 16),
STACK_USAGE("therm_throt_device_show_core_throttle_total_time_ms", 16),
STACK_USAGE("therm_throt_device_show_package_throttle_total_time_ms", 16),
STACK_USAGE("throttle_active_work", 40),
STACK_USAGE("therm_throt_process", 48),
STACK_USAGE("int_pln_enable_setup", 0),
STACK_USAGE("thermal_throttle_online", 32),
STACK_USAGE("thermal_throttle_offline", 16),
STACK_USAGE("thermal_throttle_init_device", 0),
STACK_USAGE("notify_hwp_interrupt", 0),
STACK_USAGE("intel_thermal_interrupt", 16),
STACK_USAGE("x86_thermal_enabled", 0),
STACK_USAGE("therm_lvt_init", 0),
STACK_USAGE("intel_init_thermal", 40),
STACK_USAGE("thermal_cooling_device_release", 0),
STACK_USAGE("devm_thermal_of_cooling_device_register", 48),
STACK_USAGE("thermal_cooling_device_unregister", 64),
STACK_USAGE("bind_tz", 96),
STACK_USAGE("thermal_register_governor", 48),
STACK_USAGE("thermal_zone_device_register", 96),
STACK_USAGE("thermal_zone_device_unregister", 64),
STACK_USAGE("thermal_zone_get_zone_by_name", 48),
STACK_USAGE("thermal_pm_notify", 40),
STACK_USAGE("thermal_init", 24),
STACK_USAGE("thermal_unregister_governor", 32),
STACK_USAGE("thermal_zone_device_set_policy", 48),
STACK_USAGE("thermal_build_list_of_policies", 32),
STACK_USAGE("thermal_register_governors", 40),
STACK_USAGE("__bpf_trace_thermal_temperature", 0),
STACK_USAGE("__traceiter_thermal_temperature", 16),
STACK_USAGE("perf_trace_thermal_temperature", 88),
STACK_USAGE("trace_event_raw_event_thermal_temperature", 88),
STACK_USAGE("trace_raw_output_thermal_temperature", 24),
STACK_USAGE("thermal_zone_device_critical", 0),
STACK_USAGE("thermal_zone_device_enable", 24),
STACK_USAGE("thermal_zone_device_disable", 24),
STACK_USAGE("thermal_zone_device_is_enabled", 16),
STACK_USAGE("thermal_zone_device_update", 72),
STACK_USAGE("__bpf_trace_cdev_update", 0),
STACK_USAGE("__traceiter_cdev_update", 24),
STACK_USAGE("perf_trace_cdev_update", 88),
STACK_USAGE("trace_event_raw_event_cdev_update", 96),
STACK_USAGE("trace_raw_output_cdev_update", 24),
STACK_USAGE("thermal_zone_device_check", 0),
STACK_USAGE("__find_governor", 32),
STACK_USAGE("for_each_thermal_governor", 40),
STACK_USAGE("for_each_thermal_cooling_device", 40),
STACK_USAGE("for_each_thermal_zone", 40),
STACK_USAGE("thermal_zone_get_by_id", 16),
STACK_USAGE("thermal_zone_bind_cooling_device", 112),
STACK_USAGE("__bpf_trace_thermal_zone_trip", 0),
STACK_USAGE("__traceiter_thermal_zone_trip", 32),
STACK_USAGE("perf_trace_thermal_zone_trip", 104),
STACK_USAGE("trace_event_raw_event_thermal_zone_trip", 104),
STACK_USAGE("trace_raw_output_thermal_zone_trip", 48),
STACK_USAGE("thermal_zone_unbind_cooling_device", 48),
STACK_USAGE("thermal_release", 16),
STACK_USAGE("bind_cdev", 88),
STACK_USAGE("__thermal_cooling_device_register", 56),
STACK_USAGE("thermal_set_governor", 24),
STACK_USAGE("thermal_cooling_device_register", 0),
STACK_USAGE("thermal_of_cooling_device_register", 0),
STACK_USAGE("thermal_zone_set_trips", 72),
STACK_USAGE("thermal_set_delay_jiffies", 16),
STACK_USAGE("__thermal_cdev_update", 16),
STACK_USAGE("thermal_cdev_update", 16),
STACK_USAGE("thermal_zone_get_slope", 0),
STACK_USAGE("thermal_zone_get_offset", 0),
STACK_USAGE("get_tz_trend", 24),
STACK_USAGE("get_thermal_instance", 48),
STACK_USAGE("thermal_zone_get_temp", 24),
STACK_USAGE("thermal_add_hwmon_sysfs", 104),
STACK_USAGE("thermal_remove_hwmon_sysfs", 104),
STACK_USAGE("devm_thermal_hwmon_release", 0),
STACK_USAGE("devm_thermal_add_hwmon_sysfs", 24),
STACK_USAGE("temp_input_show", 24),
STACK_USAGE("temp_crit_show", 24),
STACK_USAGE("trip_point_temp_store", 56),
STACK_USAGE("trip_point_temp_show", 32),
STACK_USAGE("trip_point_hyst_store", 48),
STACK_USAGE("trip_point_hyst_show", 32),
STACK_USAGE("policy_store", 72),
STACK_USAGE("policy_show", 0),
STACK_USAGE("available_policies_show", 0),
STACK_USAGE("type_show", 0),
STACK_USAGE("sustainable_power_show", 0),
STACK_USAGE("sustainable_power_store", 32),
STACK_USAGE("k_po_show", 0),
STACK_USAGE("k_po_store", 32),
STACK_USAGE("k_pu_show", 0),
STACK_USAGE("k_pu_store", 32),
STACK_USAGE("k_i_show", 0),
STACK_USAGE("k_i_store", 32),
STACK_USAGE("k_d_show", 0),
STACK_USAGE("k_d_store", 32),
STACK_USAGE("integral_cutoff_show", 0),
STACK_USAGE("integral_cutoff_store", 32),
STACK_USAGE("slope_show", 0),
STACK_USAGE("slope_store", 32),
STACK_USAGE("offset_show", 0),
STACK_USAGE("offset_store", 32),
STACK_USAGE("temp_show", 24),
STACK_USAGE("mode_show", 8),
STACK_USAGE("thermal_zone_create_device_groups", 56),
STACK_USAGE("thermal_zone_destroy_device_groups", 8),
STACK_USAGE("cdev_type_show", 0),
STACK_USAGE("max_state_show", 24),
STACK_USAGE("mode_store", 24),
STACK_USAGE("cur_state_show", 24),
STACK_USAGE("cur_state_store", 48),
STACK_USAGE("trip_point_type_show", 32),
STACK_USAGE("thermal_cooling_device_setup_sysfs", 0),
STACK_USAGE("thermal_cooling_device_destroy_sysfs", 0),
STACK_USAGE("trip_point_show", 0),
STACK_USAGE("weight_show", 0),
STACK_USAGE("weight_store", 32),
STACK_USAGE("hvc_console_print", 184),
STACK_USAGE("hvc_console_device", 0),
STACK_USAGE("hvc_console_setup", 0),
STACK_USAGE("hvc_console_init", 0),
STACK_USAGE("hvc_port_destruct", 16),
STACK_USAGE("hvc_instantiate", 40),
STACK_USAGE("hvc_kick", 0),
STACK_USAGE("hvc_unthrottle", 0),
STACK_USAGE("hvc_install", 24),
STACK_USAGE("hvc_open", 48),
STACK_USAGE("hvc_close", 32),
STACK_USAGE("hvc_cleanup", 0),
STACK_USAGE("hvc_hangup", 16),
STACK_USAGE("hvc_write", 56),
STACK_USAGE("hvc_set_winsz", 40),
STACK_USAGE("hvc_write_room", 0),
STACK_USAGE("hvc_chars_in_buffer", 0),
STACK_USAGE("__hvc_poll", 184),
STACK_USAGE("hvc_poll", 0),
STACK_USAGE("__hvc_resize", 0),
STACK_USAGE("khvcd", 32),
STACK_USAGE("hvc_tiocmget", 0),
STACK_USAGE("hvc_tiocmset", 0),
STACK_USAGE("hvc_get_by_index", 48),
STACK_USAGE("hvc_alloc", 48),
STACK_USAGE("hvc_remove", 24),
STACK_USAGE("n_null_open", 0),
STACK_USAGE("n_null_close", 0),
STACK_USAGE("n_null_read", 0),
STACK_USAGE("n_null_write", 0),
STACK_USAGE("n_null_receivebuf", 0),
STACK_USAGE("n_null_init", 0),
STACK_USAGE("n_null_exit", 0),
STACK_USAGE("isig", 48),
STACK_USAGE("n_tty_receive_signal_char", 32),
STACK_USAGE("n_tty_receive_char", 48),
STACK_USAGE("n_tty_receive_char_flagged", 24),
STACK_USAGE("n_tty_receive_buf_common", 216),
STACK_USAGE("n_tty_receive_buf", 0),
STACK_USAGE("n_tty_receive_buf2", 0),
STACK_USAGE("n_tty_set_termios", 32),
STACK_USAGE("n_tty_close", 24),
STACK_USAGE("n_tty_open", 16),
STACK_USAGE("canon_copy_from_read_buf", 128),
STACK_USAGE("n_tty_kick_worker", 8),
STACK_USAGE("n_tty_read", 248),
STACK_USAGE("n_tty_write", 136),
STACK_USAGE("n_tty_poll", 32),
STACK_USAGE("n_tty_ioctl", 32),
STACK_USAGE("n_tty_write_wakeup", 0),
STACK_USAGE("n_tty_inherit_ops", 0),
STACK_USAGE("n_tty_init", 0),
STACK_USAGE("n_tty_check_unthrottle", 8),
STACK_USAGE("n_tty_flush_buffer", 40),
STACK_USAGE("do_output_char", 16),
STACK_USAGE("__process_echoes", 56),
STACK_USAGE("pty_write", 48),
STACK_USAGE("pty_write_room", 0),
STACK_USAGE("pty_flush_buffer", 24),
STACK_USAGE("pty_open", 0),
STACK_USAGE("pty_set_termios", 48),
STACK_USAGE("pty_resize", 48),
STACK_USAGE("pty_start", 16),
STACK_USAGE("pty_stop", 16),
STACK_USAGE("pty_cleanup", 0),
STACK_USAGE("pty_close", 16),
STACK_USAGE("ptm_open_peer", 56),
STACK_USAGE("pty_unix98_ioctl", 32),
STACK_USAGE("pty_unix98_compat_ioctl", 0),
STACK_USAGE("ptm_unix98_lookup", 0),
STACK_USAGE("pts_unix98_lookup", 8),
STACK_USAGE("pty_unix98_install", 48),
STACK_USAGE("pty_unix98_remove", 8),
STACK_USAGE("pty_show_fdinfo", 0),
STACK_USAGE("ptmx_open", 40),
STACK_USAGE("unix98_pty_init", 0),
STACK_USAGE("pty_unthrottle", 8),
STACK_USAGE("pty_init", 0),
STACK_USAGE("serial8250_interrupt", 56),
STACK_USAGE("serial8250_unregister_port", 24),
STACK_USAGE("serial8250_init", 16),
STACK_USAGE("serial8250_exit", 8),
STACK_USAGE("s8250_options", 0),
STACK_USAGE("serial8250_timeout", 8),
STACK_USAGE("serial8250_backup_timeout", 40),
STACK_USAGE("univ8250_setup_irq", 40),
STACK_USAGE("univ8250_release_irq", 24),
STACK_USAGE("serial8250_get_port", 0),
STACK_USAGE("serial8250_set_isa_configurator", 0),
STACK_USAGE("univ8250_config_port", 16),
STACK_USAGE("univ8250_request_port", 16),
STACK_USAGE("univ8250_release_port", 8),
STACK_USAGE("serial8250_isa_init_ports", 40),
STACK_USAGE("serial8250_register_ports", 16),
STACK_USAGE("univ8250_console_write", 0),
STACK_USAGE("univ8250_console_setup", 8),
STACK_USAGE("univ8250_console_exit", 0),
STACK_USAGE("univ8250_console_match", 56),
STACK_USAGE("univ8250_console_init", 0),
STACK_USAGE("early_serial_setup", 16),
STACK_USAGE("serial8250_suspend_port", 16),
STACK_USAGE("serial8250_resume_port", 8),
STACK_USAGE("serial8250_probe", 952),
STACK_USAGE("serial8250_remove", 16),
STACK_USAGE("serial8250_suspend", 16),
STACK_USAGE("serial8250_resume", 24),
STACK_USAGE("serial_8250_overrun_backoff_work", 24),
STACK_USAGE("serial8250_register_8250_port", 32),
STACK_USAGE("dw8250_get_divisor", 0),
STACK_USAGE("dw8250_set_divisor", 32),
STACK_USAGE("dw8250_do_set_termios", 0),
STACK_USAGE("dw8250_setup_port", 24),
STACK_USAGE("early_serial8250_write", 0),
STACK_USAGE("init_port", 32),
STACK_USAGE("early_serial8250_setup", 16),
STACK_USAGE("serial8250_early_in", 0),
STACK_USAGE("serial8250_early_out", 0),
STACK_USAGE("serial_putc", 8),
STACK_USAGE("exar_pm", 0),
STACK_USAGE("xr17v35x_get_divisor", 0),
STACK_USAGE("xr17v35x_set_divisor", 16),
STACK_USAGE("xr17v35x_startup", 8),
STACK_USAGE("exar_shutdown", 32),
STACK_USAGE("pci_fastcom335_setup", 0),
STACK_USAGE("pci_connect_tech_setup", 0),
STACK_USAGE("pci_xr17c154_setup", 0),
STACK_USAGE("__xr17v35x_register_gpio", 40),
STACK_USAGE("xr17v35x_register_gpio", 8),
STACK_USAGE("xr17v35x_unregister_gpio", 16),
STACK_USAGE("generic_rs485_config", 0),
STACK_USAGE("iot2040_rs485_config", 0),
STACK_USAGE("iot2040_register_gpio", 8),
STACK_USAGE("pci_xr17v35x_setup", 32),
STACK_USAGE("pci_xr17v35x_exit", 16),
STACK_USAGE("exar_misc_handler", 0),
STACK_USAGE("exar_pci_probe", 984),
STACK_USAGE("exar_pci_remove", 24),
STACK_USAGE("exar_suspend", 24),
STACK_USAGE("exar_resume", 16),
STACK_USAGE("exar_pci_driver_exit", 0),
STACK_USAGE("exar_pci_driver_init", 0),
STACK_USAGE("byt_get_mctrl", 0),
STACK_USAGE("byt_serial_setup", 16),
STACK_USAGE("byt_serial_exit", 0),
STACK_USAGE("ehl_serial_setup", 0),
STACK_USAGE("ehl_serial_exit", 0),
STACK_USAGE("qrk_serial_setup", 0),
STACK_USAGE("qrk_serial_exit", 0),
STACK_USAGE("lpss8250_dma_filter", 0),
STACK_USAGE("lpss8250_probe", 952),
STACK_USAGE("lpss8250_remove", 16),
STACK_USAGE("lpss8250_pci_driver_exit", 0),
STACK_USAGE("lpss8250_pci_driver_init", 0),
STACK_USAGE("byt_set_termios", 64),
STACK_USAGE("tng_setup", 16),
STACK_USAGE("tng_exit", 0),
STACK_USAGE("dnv_setup", 48),
STACK_USAGE("dnv_exit", 0),
STACK_USAGE("mid8250_set_termios", 72),
STACK_USAGE("mid8250_dma_filter", 0),
STACK_USAGE("mid8250_probe", 960),
STACK_USAGE("mid8250_remove", 8),
STACK_USAGE("mid8250_pci_driver_exit", 0),
STACK_USAGE("mid8250_pci_driver_init", 0),
STACK_USAGE("pnw_setup", 8),
STACK_USAGE("pnw_exit", 0),
STACK_USAGE("tng_handle_irq", 8),
STACK_USAGE("pci_endrun_init", 24),
STACK_USAGE("pci_oxsemi_tornado_init", 24),
STACK_USAGE("pci_asix_setup", 0),
STACK_USAGE("addidata_apci7800_setup", 48),
STACK_USAGE("pci_quatech_init", 8),
STACK_USAGE("pci_quatech_setup", 48),
STACK_USAGE("pci_default_setup", 48),
STACK_USAGE("ce4100_serial_setup", 32),
STACK_USAGE("pci_omegapci_setup", 24),
STACK_USAGE("pci_brcm_trumanage_setup", 8),
STACK_USAGE("pci_fintek_rs485_config", 48),
STACK_USAGE("pci_fintek_setup", 40),
STACK_USAGE("pci_fintek_init", 120),
STACK_USAGE("afavlab_setup", 48),
STACK_USAGE("f815xxa_mem_serial_out", 32),
STACK_USAGE("pci_fintek_f815xxa_setup", 32),
STACK_USAGE("pci_fintek_f815xxa_init", 40),
STACK_USAGE("skip_tx_en_setup", 0),
STACK_USAGE("kt_handle_break", 0),
STACK_USAGE("kt_serial_in", 0),
STACK_USAGE("kt_serial_setup", 0),
STACK_USAGE("pci_eg20t_init", 0),
STACK_USAGE("pci_wch_ch353_setup", 0),
STACK_USAGE("pci_wch_ch355_setup", 0),
STACK_USAGE("pci_wch_ch38x_setup", 0),
STACK_USAGE("pci_wch_ch38x_init", 0),
STACK_USAGE("pci_hp_diva_init", 0),
STACK_USAGE("pci_wch_ch38x_exit", 0),
STACK_USAGE("pci_sunix_setup", 40),
STACK_USAGE("pci_moxa_setup", 40),
STACK_USAGE("pci_hp_diva_setup", 48),
STACK_USAGE("pci_inteli960ni_init", 16),
STACK_USAGE("pci_plx9050_init", 8),
STACK_USAGE("pci_plx9050_exit", 0),
STACK_USAGE("pci_ni8420_exit", 0),
STACK_USAGE("pci_ni8430_exit", 0),
STACK_USAGE("serial_pci_guess_board", 40),
STACK_USAGE("pciserial_init_ports", 968),
STACK_USAGE("sbs_setup", 32),
STACK_USAGE("pciserial_remove_ports", 16),
STACK_USAGE("pciserial_suspend_ports", 16),
STACK_USAGE("pciserial_resume_ports", 16),
STACK_USAGE("pciserial_init_one", 64),
STACK_USAGE("pciserial_remove_one", 0),
STACK_USAGE("pciserial_suspend_one", 16),
STACK_USAGE("pciserial_resume_one", 24),
STACK_USAGE("sbs_init", 16),
STACK_USAGE("sbs_exit", 0),
STACK_USAGE("pci_siig_init", 32),
STACK_USAGE("pci_siig_setup", 40),
STACK_USAGE("serial8250_io_error_detected", 24),
STACK_USAGE("serial8250_io_slot_reset", 8),
STACK_USAGE("serial8250_io_resume", 16),
STACK_USAGE("serial_pci_driver_exit", 0),
STACK_USAGE("serial_pci_driver_init", 0),
STACK_USAGE("pci_timedia_probe", 0),
STACK_USAGE("pci_timedia_init", 0),
STACK_USAGE("pci_timedia_setup", 48),
STACK_USAGE("titan_400l_800l_setup", 56),
STACK_USAGE("pci_xircom_init", 0),
STACK_USAGE("pci_ni8420_init", 8),
STACK_USAGE("pci_ni8430_init", 48),
STACK_USAGE("pci_ni8430_setup", 56),
STACK_USAGE("moan_device", 0),
STACK_USAGE("pci_netmos_9900_setup", 40),
STACK_USAGE("pci_netmos_init", 8),
STACK_USAGE("pci_ite887x_init", 72),
STACK_USAGE("pci_ite887x_exit", 16),
STACK_USAGE("pericom8250_remove", 16),
STACK_USAGE("pericom8250_pci_driver_exit", 0),
STACK_USAGE("pericom8250_pci_driver_init", 0),
STACK_USAGE("pericom_do_set_divisor", 32),
STACK_USAGE("pericom8250_probe", 968),
STACK_USAGE("check_name", 16),
STACK_USAGE("serial_pnp_probe", 944),
STACK_USAGE("serial_pnp_remove", 0),
STACK_USAGE("serial_pnp_suspend", 0),
STACK_USAGE("serial_pnp_resume", 0),
STACK_USAGE("serial8250_pnp_init", 0),
STACK_USAGE("serial8250_pnp_exit", 0),
STACK_USAGE("serial8250_stop_rx", 16),
STACK_USAGE("serial8250_em485_stop_tx", 8),
STACK_USAGE("serial8250_em485_handle_stop_tx", 24),
STACK_USAGE("__stop_tx", 16),
STACK_USAGE("serial8250_stop_tx", 16),
STACK_USAGE("serial8250_em485_start_tx", 24),
STACK_USAGE("serial8250_em485_handle_start_tx", 32),
STACK_USAGE("serial8250_start_tx", 24),
STACK_USAGE("serial8250_throttle", 0),
STACK_USAGE("serial8250_unthrottle", 0),
STACK_USAGE("serial8250_enable_ms", 16),
STACK_USAGE("serial8250_read_char", 32),
STACK_USAGE("serial8250_rx_chars", 24),
STACK_USAGE("serial8250_tx_chars", 24),
STACK_USAGE("serial8250_modem_status", 16),
STACK_USAGE("serial8250_handle_irq", 40),
STACK_USAGE("serial8250_default_handle_irq", 24),
STACK_USAGE("serial8250_tx_threshold_handle_irq", 16),
STACK_USAGE("serial8250_tx_empty", 24),
STACK_USAGE("serial8250_do_get_mctrl", 24),
STACK_USAGE("serial8250_get_mctrl", 24),
STACK_USAGE("serial8250_do_set_mctrl", 0),
STACK_USAGE("serial8250_set_mctrl", 0),
STACK_USAGE("serial8250_break_ctl", 24),
STACK_USAGE("wait_for_xmitr", 24),
STACK_USAGE("serial8250_do_startup", 32),
STACK_USAGE("serial8250_startup", 0),
STACK_USAGE("serial8250_do_shutdown", 16),
STACK_USAGE("serial8250_shutdown", 0),
STACK_USAGE("serial8250_do_set_divisor", 16),
STACK_USAGE("serial8250_update_uartclk", 72),
STACK_USAGE("serial8250_do_set_termios", 64),
STACK_USAGE("serial8250_set_termios", 0),
STACK_USAGE("serial8250_do_set_ldisc", 16),
STACK_USAGE("serial8250_set_ldisc", 0),
STACK_USAGE("serial8250_do_pm", 32),
STACK_USAGE("serial8250_pm", 0),
STACK_USAGE("serial8250_request_std_resource", 24),
STACK_USAGE("serial8250_release_port", 16),
STACK_USAGE("serial8250_request_port", 0),
STACK_USAGE("serial8250_tx_dma", 0),
STACK_USAGE("rx_trig_bytes_show", 24),
STACK_USAGE("serial8250_rx_dma", 0),
STACK_USAGE("rx_trig_bytes_store", 56),
STACK_USAGE("serial8250_config_port", 64),
STACK_USAGE("serial8250_verify_port", 0),
STACK_USAGE("default_serial_dl_read", 16),
STACK_USAGE("serial8250_type", 0),
STACK_USAGE("serial8250_init_port", 8),
STACK_USAGE("serial8250_set_defaults", 0),
STACK_USAGE("serial8250_console_putchar", 16),
STACK_USAGE("default_serial_dl_write", 16),
STACK_USAGE("serial8250_console_write", 128),
STACK_USAGE("serial8250_console_setup", 72),
STACK_USAGE("serial8250_console_exit", 0),
STACK_USAGE("hub6_serial_in", 0),
STACK_USAGE("hub6_serial_out", 0),
STACK_USAGE("mem_serial_in", 0),
STACK_USAGE("mem_serial_out", 0),
STACK_USAGE("mem16_serial_out", 0),
STACK_USAGE("mem16_serial_in", 0),
STACK_USAGE("mem32_serial_out", 0),
STACK_USAGE("mem32_serial_in", 0),
STACK_USAGE("mem32be_serial_out", 0),
STACK_USAGE("mem32be_serial_in", 0),
STACK_USAGE("io_serial_in", 0),
STACK_USAGE("io_serial_out", 0),
STACK_USAGE("uart_handle_break", 24),
STACK_USAGE("serial8250_clear_and_reinit_fifos", 8),
STACK_USAGE("serial8250_rpm_get", 0),
STACK_USAGE("serial8250_rpm_put", 16),
STACK_USAGE("serial8250_em485_destroy", 8),
STACK_USAGE("serial8250_em485_config", 24),
STACK_USAGE("serial8250_rpm_get_tx", 0),
STACK_USAGE("serial8250_rpm_put_tx", 16),
STACK_USAGE("register_earlycon", 24),
STACK_USAGE("setup_earlycon", 48),
STACK_USAGE("param_setup_earlycon", 0),
STACK_USAGE("earlycon_init", 24),
STACK_USAGE("earlycon_print_info", 0),
STACK_USAGE("parse_options", 40),
STACK_USAGE("uart_get_lsr_info", 32),
STACK_USAGE("uart_tiocmget", 32),
STACK_USAGE("uart_tiocmset", 48),
STACK_USAGE("uart_break_ctl", 24),
STACK_USAGE("uart_stop", 16),
STACK_USAGE("uart_wait_modem_status", 152),
STACK_USAGE("uart_get_icount", 80),
STACK_USAGE("uart_get_rs485_config", 56),
STACK_USAGE("uart_set_rs485_config", 72),
STACK_USAGE("uart_get_iso7816_config", 64),
STACK_USAGE("uart_start", 32),
STACK_USAGE("uart_set_iso7816_config", 80),
STACK_USAGE("uart_ioctl", 72),
STACK_USAGE("uart_set_ldisc", 24),
STACK_USAGE("uart_set_termios", 48),
STACK_USAGE("uart_close", 24),
STACK_USAGE("uart_tty_port_shutdown", 24),
STACK_USAGE("uart_wait_until_sent", 24),
STACK_USAGE("uart_hangup", 32),
STACK_USAGE("uart_carrier_raised", 16),
STACK_USAGE("uart_dtr_rts", 32),
STACK_USAGE("uart_install", 0),
STACK_USAGE("uart_open", 0),
STACK_USAGE("uart_port_activate", 16),
STACK_USAGE("uart_proc_show", 136),
STACK_USAGE("uart_console_write", 40),
STACK_USAGE("uart_get_console", 0),
STACK_USAGE("uart_parse_earlycon", 40),
STACK_USAGE("uart_parse_options", 40),
STACK_USAGE("uart_set_options", 104),
STACK_USAGE("serial_match_port", 0),
STACK_USAGE("uart_suspend_port", 80),
STACK_USAGE("uart_resume_port", 128),
STACK_USAGE("uart_startup", 48),
STACK_USAGE("uart_register_driver", 40),
STACK_USAGE("uart_unregister_driver", 24),
STACK_USAGE("uart_console_device", 0),
STACK_USAGE("uartclk_show", 88),
STACK_USAGE("type_show", 88),
STACK_USAGE("line_show", 88),
STACK_USAGE("port_show", 88),
STACK_USAGE("irq_show", 88),
STACK_USAGE("flags_show", 88),
STACK_USAGE("xmit_fifo_size_show", 88),
STACK_USAGE("close_delay_show", 88),
STACK_USAGE("uart_shutdown", 32),
STACK_USAGE("closing_wait_show", 88),
STACK_USAGE("custom_divisor_show", 88),
STACK_USAGE("io_type_show", 88),
STACK_USAGE("iomem_base_show", 88),
STACK_USAGE("iomem_reg_shift_show", 88),
STACK_USAGE("console_show", 24),
STACK_USAGE("console_store", 40),
STACK_USAGE("uart_add_one_port", 184),
STACK_USAGE("uart_remove_one_port", 104),
STACK_USAGE("uart_match_port", 0),
STACK_USAGE("uart_handle_dcd_change", 40),
STACK_USAGE("uart_handle_cts_change", 16),
STACK_USAGE("uart_insert_char", 32),
STACK_USAGE("uart_try_toggle_sysrq", 0),
STACK_USAGE("uart_get_rs485_mode", 32),
STACK_USAGE("uart_update_timeout", 16),
STACK_USAGE("uart_get_baud_rate", 56),
STACK_USAGE("uart_get_divisor", 0),
STACK_USAGE("uart_change_speed", 32),
STACK_USAGE("uart_put_char", 32),
STACK_USAGE("uart_flush_chars", 0),
STACK_USAGE("uart_write", 72),
STACK_USAGE("uart_write_room", 24),
STACK_USAGE("uart_chars_in_buffer", 24),
STACK_USAGE("uart_flush_buffer", 24),
STACK_USAGE("uart_xchar_out", 8),
STACK_USAGE("uart_send_xchar", 24),
STACK_USAGE("uart_throttle", 40),
STACK_USAGE("uart_unthrottle", 40),
STACK_USAGE("uart_get_info", 40),
STACK_USAGE("uart_get_info_user", 0),
STACK_USAGE("uart_write_wakeup", 0),
STACK_USAGE("uart_set_info_user", 144),
STACK_USAGE("sysrq_handle_loglevel", 8),
STACK_USAGE("sysrq_reset_seq_param_set", 24),
STACK_USAGE("sysrq_toggle_support", 0),
STACK_USAGE("register_sysrq_key", 24),
STACK_USAGE("unregister_sysrq_key", 24),
STACK_USAGE("write_sysrq_trigger", 16),
STACK_USAGE("sysrq_init", 0),
STACK_USAGE("sysrq_handle_SAK", 0),
STACK_USAGE("sysrq_handle_unraw", 0),
STACK_USAGE("sysrq_handle_crash", 0),
STACK_USAGE("sysrq_handle_reboot", 0),
STACK_USAGE("sysrq_handle_sync", 0),
STACK_USAGE("sysrq_handle_show_timers", 0),
STACK_USAGE("sysrq_handle_mountro", 0),
STACK_USAGE("sysrq_handle_showlocks", 0),
STACK_USAGE("sysrq_handle_showallcpus", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("sysrq_handle_showregs", 0),
STACK_USAGE("sysrq_handle_showstate", 0),
STACK_USAGE("sysrq_handle_showstate_blocked", 0),
STACK_USAGE("sysrq_ftrace_dump", 0),
STACK_USAGE("sysrq_handle_showmem", 0),
STACK_USAGE("sysrq_handle_term", 16),
STACK_USAGE("moom_callback", 80),
STACK_USAGE("sysrq_handle_moom", 0),
STACK_USAGE("sysrq_handle_thaw", 0),
STACK_USAGE("sysrq_handle_kill", 16),
STACK_USAGE("sysrq_handle_unrt", 0),
STACK_USAGE("__handle_sysrq", 40),
STACK_USAGE("handle_sysrq", 0),
STACK_USAGE("sysrq_do_reset", 0),
STACK_USAGE("rcu_read_unlock", 0),
STACK_USAGE("sysrq_mask", 0),
STACK_USAGE("sysrq_reinject_alt_sysrq", 24),
STACK_USAGE("sysrq_always_enabled_setup", 0),
STACK_USAGE("sysrq_filter", 32),
STACK_USAGE("sysrq_connect", 32),
STACK_USAGE("sysrq_disconnect", 16),
STACK_USAGE("tty_audit_exit", 8),
STACK_USAGE("tty_audit_fork", 0),
STACK_USAGE("tty_audit_tiocsti", 40),
STACK_USAGE("tty_audit_push", 16),
STACK_USAGE("tty_audit_add_data", 48),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("tty_audit_log", 120),
STACK_USAGE("tty_termios_encode_baud_rate", 40),
STACK_USAGE("tty_encode_baud_rate", 0),
STACK_USAGE("tty_termios_baud_rate", 0),
STACK_USAGE("tty_termios_input_baud_rate", 0),
STACK_USAGE("tty_buffer_free_all", 32),
STACK_USAGE("tty_buffer_flush", 48),
STACK_USAGE("__tty_buffer_request_room", 56),
STACK_USAGE("tty_buffer_request_room", 0),
STACK_USAGE("tty_insert_flip_string_fixed_flag", 64),
STACK_USAGE("tty_insert_flip_string_flags", 64),
STACK_USAGE("__tty_insert_flip_char", 24),
STACK_USAGE("tty_prepare_flip_string", 32),
STACK_USAGE("tty_ldisc_receive_buf", 8),
STACK_USAGE("flush_to_ldisc", 56),
STACK_USAGE("tty_buffer_lock_exclusive", 0),
STACK_USAGE("tty_flip_buffer_push", 0),
STACK_USAGE("tty_buffer_init", 8),
STACK_USAGE("tty_buffer_set_limit", 0),
STACK_USAGE("tty_buffer_set_lock_subclass", 0),
STACK_USAGE("tty_buffer_restart_work", 0),
STACK_USAGE("tty_buffer_cancel_work", 0),
STACK_USAGE("tty_buffer_flush_work", 0),
STACK_USAGE("tty_buffer_unlock_exclusive", 24),
STACK_USAGE("tty_buffer_space_avail", 0),
STACK_USAGE("tty_write_message", 32),
STACK_USAGE("file_tty_write", 88),
STACK_USAGE("tty_write", 0),
STACK_USAGE("redirected_tty_write", 24),
STACK_USAGE("tty_send_xchar", 64),
STACK_USAGE("tty_init_termios", 16),
STACK_USAGE("tty_standard_install", 24),
STACK_USAGE("tty_reopen", 16),
STACK_USAGE("tty_init_dev", 32),
STACK_USAGE("tty_save_termios", 16),
STACK_USAGE("release_one_tty", 32),
STACK_USAGE("tty_kref_put", 16),
STACK_USAGE("release_tty", 24),
STACK_USAGE("tty_kclose", 8),
STACK_USAGE("tty_release_struct", 16),
STACK_USAGE("tty_release", 128),
STACK_USAGE("tty_alloc_file", 8),
STACK_USAGE("tty_lookup_driver", 32),
STACK_USAGE("tty_kopen", 48),
STACK_USAGE("tty_add_file", 24),
STACK_USAGE("tty_kopen_exclusive", 0),
STACK_USAGE("tty_kopen_shared", 0),
STACK_USAGE("tty_open", 80),
STACK_USAGE("tty_free_file", 0),
STACK_USAGE("tty_poll", 32),
STACK_USAGE("tty_fasync", 48),
STACK_USAGE("tiocsti", 40),
STACK_USAGE("tiocgwinsz", 24),
STACK_USAGE("tty_do_resize", 32),
STACK_USAGE("tiocswinsz", 24),
STACK_USAGE("tioccons", 16),
STACK_USAGE("tiocsetd", 16),
STACK_USAGE("tiocgetd", 16),
STACK_USAGE("tty_name", 0),
STACK_USAGE("send_break", 32),
STACK_USAGE("tty_tiocmget", 16),
STACK_USAGE("tty_driver_name", 0),
STACK_USAGE("tty_get_icount", 0),
STACK_USAGE("tty_tiocgicount", 96),
STACK_USAGE("tty_paranoia_check", 0),
STACK_USAGE("tty_tiocsserial", 136),
STACK_USAGE("tty_tiocgserial", 88),
STACK_USAGE("tty_ioctl", 48),
STACK_USAGE("check_tty_count", 32),
STACK_USAGE("compat_tty_tiocsserial", 200),
STACK_USAGE("compat_tty_tiocgserial", 152),
STACK_USAGE("tty_compat_ioctl", 40),
STACK_USAGE("this_tty", 0),
STACK_USAGE("__do_SAK", 56),
STACK_USAGE("do_SAK_work", 0),
STACK_USAGE("do_SAK", 0),
STACK_USAGE("alloc_tty_struct", 56),
STACK_USAGE("tty_put_char", 16),
STACK_USAGE("tty_register_device", 0),
STACK_USAGE("tty_device_create_release", 0),
STACK_USAGE("tty_register_device_attr", 136),
STACK_USAGE("tty_unregister_device", 16),
STACK_USAGE("__tty_alloc_driver", 40),
STACK_USAGE("tty_driver_kref_put", 16),
STACK_USAGE("tty_register_driver", 56),
STACK_USAGE("tty_dev_name_to_number", 80),
STACK_USAGE("tty_unregister_driver", 8),
STACK_USAGE("tty_devnum", 0),
STACK_USAGE("tty_default_fops", 0),
STACK_USAGE("tty_devnode", 0),
STACK_USAGE("tty_class_init", 8),
STACK_USAGE("show_cons_active", 200),
STACK_USAGE("console_sysfs_notify", 0),
STACK_USAGE("tty_init", 8),
STACK_USAGE("hung_up_tty_read", 0),
STACK_USAGE("hung_up_tty_write", 0),
STACK_USAGE("hung_up_tty_poll", 0),
STACK_USAGE("hung_up_tty_ioctl", 0),
STACK_USAGE("hung_up_tty_compat_ioctl", 0),
STACK_USAGE("hung_up_tty_fasync", 0),
STACK_USAGE("tty_show_fdinfo", 0),
STACK_USAGE("tty_wakeup", 16),
STACK_USAGE("__tty_hangup", 72),
STACK_USAGE("do_tty_hangup", 0),
STACK_USAGE("tty_hangup", 0),
STACK_USAGE("tty_vhangup", 0),
STACK_USAGE("tty_vhangup_self", 16),
STACK_USAGE("tty_vhangup_session", 0),
STACK_USAGE("tty_hung_up_p", 0),
STACK_USAGE("__stop_tty", 0),
STACK_USAGE("stop_tty", 24),
STACK_USAGE("__start_tty", 16),
STACK_USAGE("start_tty", 32),
STACK_USAGE("tty_read", 168),
STACK_USAGE("tty_unthrottle", 16),
STACK_USAGE("tty_throttle_safe", 24),
STACK_USAGE("tty_unthrottle_safe", 24),
STACK_USAGE("tty_wait_until_sent", 96),
STACK_USAGE("tty_termios_copy_hw", 0),
STACK_USAGE("tty_termios_hw_change", 0),
STACK_USAGE("tty_get_char_size", 0),
STACK_USAGE("tty_get_frame_size", 0),
STACK_USAGE("tty_set_termios", 80),
STACK_USAGE("set_termios", 88),
STACK_USAGE("tty_chars_in_buffer", 0),
STACK_USAGE("tty_change_softcar", 80),
STACK_USAGE("tty_mode_ioctl", 80),
STACK_USAGE("tty_write_room", 0),
STACK_USAGE("__tty_perform_flush", 24),
STACK_USAGE("tty_perform_flush", 32),
STACK_USAGE("n_tty_ioctl_helper", 16),
STACK_USAGE("tty_driver_flush_buffer", 0),
STACK_USAGE("tty_open_proc_set_tty", 24),
STACK_USAGE("get_current_tty", 24),
STACK_USAGE("session_clear_tty", 16),
STACK_USAGE("tty_signal_session_leader", 56),
STACK_USAGE("disassociate_ctty", 48),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("no_tty", 16),
STACK_USAGE("__tty_check_change", 48),
STACK_USAGE("tty_get_pgrp", 24),
STACK_USAGE("session_of_pgrp", 16),
STACK_USAGE("tty_jobctrl_ioctl", 48),
STACK_USAGE("tty_check_change", 0),
STACK_USAGE("rcu_read_unlock", 0),
STACK_USAGE("proc_clear_tty", 16),
STACK_USAGE("get_pid", 8),
STACK_USAGE("__proc_set_tty", 40),
STACK_USAGE("tty_ldisc_get", 40),
STACK_USAGE("tty_ldisc_put", 24),
STACK_USAGE("tty_ldiscs_seq_start", 0),
STACK_USAGE("tty_ldiscs_seq_next", 0),
STACK_USAGE("tty_ldiscs_seq_stop", 0),
STACK_USAGE("tty_ldiscs_seq_show", 32),
STACK_USAGE("tty_ldisc_ref_wait", 16),
STACK_USAGE("tty_ldisc_ref", 16),
STACK_USAGE("tty_ldisc_deref", 0),
STACK_USAGE("tty_ldisc_lock", 24),
STACK_USAGE("tty_ldisc_unlock", 0),
STACK_USAGE("tty_ldisc_flush", 24),
STACK_USAGE("tty_ldisc_failto", 32),
STACK_USAGE("tty_ldisc_restore", 16),
STACK_USAGE("tty_set_ldisc", 56),
STACK_USAGE("tty_register_ldisc", 8),
STACK_USAGE("tty_ldisc_kill", 32),
STACK_USAGE("tty_ldisc_reinit", 48),
STACK_USAGE("tty_ldisc_hangup", 40),
STACK_USAGE("tty_ldisc_setup", 32),
STACK_USAGE("tty_ldisc_release", 32),
STACK_USAGE("tty_ldisc_init", 16),
STACK_USAGE("tty_ldisc_deinit", 32),
STACK_USAGE("tty_unregister_ldisc", 8),
STACK_USAGE("tty_sysctl_init", 0),
STACK_USAGE("down_read_failed", 80),
STACK_USAGE("down_write_failed", 80),
STACK_USAGE("ldsem_down_read", 40),
STACK_USAGE("ldsem_down_read_trylock", 8),
STACK_USAGE("ldsem_down_write", 40),
STACK_USAGE("ldsem_down_write_trylock", 8),
STACK_USAGE("ldsem_up_read", 24),
STACK_USAGE("ldsem_up_write", 24),
STACK_USAGE("ldsem_down_read_nested", 48),
STACK_USAGE("ldsem_down_write_nested", 48),
STACK_USAGE("__init_ldsem", 24),
STACK_USAGE("__ldsem_wake_readers", 32),
STACK_USAGE("tty_lock", 8),
STACK_USAGE("tty_lock_interruptible", 24),
STACK_USAGE("tty_unlock", 8),
STACK_USAGE("tty_lock_slave", 8),
STACK_USAGE("tty_unlock_slave", 8),
STACK_USAGE("tty_set_lock_subclass", 0),
STACK_USAGE("tty_port_register_device", 0),
STACK_USAGE("tty_port_register_device_attr", 0),
STACK_USAGE("tty_port_register_device_attr_serdev", 0),
STACK_USAGE("tty_port_register_device_serdev", 0),
STACK_USAGE("tty_port_unregister_device", 0),
STACK_USAGE("tty_port_alloc_xmit_buf", 24),
STACK_USAGE("tty_port_default_receive_buf", 40),
STACK_USAGE("tty_port_free_xmit_buf", 16),
STACK_USAGE("tty_port_destroy", 8),
STACK_USAGE("tty_port_put", 8),
STACK_USAGE("tty_port_tty_get", 24),
STACK_USAGE("tty_port_tty_set", 32),
STACK_USAGE("tty_port_hangup", 24),
STACK_USAGE("tty_port_tty_hangup", 32),
STACK_USAGE("tty_port_tty_wakeup", 0),
STACK_USAGE("tty_port_carrier_raised", 0),
STACK_USAGE("tty_port_raise_dtr_rts", 0),
STACK_USAGE("tty_port_lower_dtr_rts", 0),
STACK_USAGE("tty_port_default_wakeup", 24),
STACK_USAGE("tty_port_block_til_ready", 120),
STACK_USAGE("tty_port_close_start", 48),
STACK_USAGE("tty_port_close_end", 24),
STACK_USAGE("tty_port_close", 24),
STACK_USAGE("tty_port_install", 0),
STACK_USAGE("tty_port_init", 8),
STACK_USAGE("tty_port_open", 48),
STACK_USAGE("tty_port_link_device", 0),
STACK_USAGE("set_inverse_transl", 32),
STACK_USAGE("set_translate", 0),
STACK_USAGE("inverse_translate", 0),
STACK_USAGE("update_user_maps", 32),
STACK_USAGE("con_set_trans_old", 792),
STACK_USAGE("con_get_trans_old", 296),
STACK_USAGE("con_set_trans_new", 536),
STACK_USAGE("con_get_trans_new", 552),
STACK_USAGE("con_release_unimap", 24),
STACK_USAGE("con_free_unimap", 8),
STACK_USAGE("con_unify_unimap", 64),
STACK_USAGE("con_do_clear_unimap", 16),
STACK_USAGE("con_clear_unimap", 8),
STACK_USAGE("con_set_unimap", 128),
STACK_USAGE("con_set_default_unimap", 80),
STACK_USAGE("con_copy_unimap", 32),
STACK_USAGE("con_get_unimap", 56),
STACK_USAGE("conv_8bit_to_uni", 0),
STACK_USAGE("conv_uni_to_8bit", 0),
STACK_USAGE("conv_uni_to_pc", 0),
STACK_USAGE("console_map_init", 16),
STACK_USAGE("kbd_led_trigger_activate", 8),
STACK_USAGE("setledstate", 24),
STACK_USAGE("vt_get_leds", 16),
STACK_USAGE("vt_set_led_state", 24),
STACK_USAGE("vt_kbd_con_start", 16),
STACK_USAGE("vt_kbd_con_stop", 16),
STACK_USAGE("kbd_bh", 32),
STACK_USAGE("kbd_event", 96),
STACK_USAGE("kbd_match", 16),
STACK_USAGE("kbd_connect", 24),
STACK_USAGE("kbd_disconnect", 8),
STACK_USAGE("kbd_start", 24),
STACK_USAGE("register_keyboard_notifier", 0),
STACK_USAGE("kbd_init", 8),
STACK_USAGE("vt_do_diacrit", 56),
STACK_USAGE("unregister_keyboard_notifier", 0),
STACK_USAGE("vt_do_kdskbmode", 32),
STACK_USAGE("vt_do_kdskbmeta", 24),
STACK_USAGE("vt_do_kbkeycode_ioctl", 96),
STACK_USAGE("getkeycode_helper", 8),
STACK_USAGE("vt_do_kdsk_ioctl", 72),
STACK_USAGE("vt_do_kdgkb_ioctl", 40),
STACK_USAGE("vt_do_kdskled", 24),
STACK_USAGE("vt_do_kdgkbmode", 0),
STACK_USAGE("vt_do_kdgkbmeta", 0),
STACK_USAGE("setkeycode_helper", 8),
STACK_USAGE("vt_reset_unicode", 8),
STACK_USAGE("vt_get_shift_state", 0),
STACK_USAGE("vt_reset_keyboard", 16),
STACK_USAGE("vt_get_kbd_mode_bit", 0),
STACK_USAGE("vt_set_kbd_mode_bit", 16),
STACK_USAGE("vt_clr_kbd_mode_bit", 16),
STACK_USAGE("kd_sound_helper", 24),
STACK_USAGE("kd_nosound", 0),
STACK_USAGE("kd_mksound", 24),
STACK_USAGE("kbd_rate_helper", 24),
STACK_USAGE("kbd_rate", 40),
STACK_USAGE("applkey", 8),
STACK_USAGE("to_utf8", 16),
STACK_USAGE("do_compute_shiftstate", 8),
STACK_USAGE("vt_set_leds_compute_shiftstate", 8),
STACK_USAGE("handle_diacr", 16),
STACK_USAGE("fn_enter", 8),
STACK_USAGE("fn_caps_toggle", 0),
STACK_USAGE("fn_caps_on", 0),
STACK_USAGE("fn_show_ptregs", 0),
STACK_USAGE("fn_hold", 0),
STACK_USAGE("fn_num", 8),
STACK_USAGE("fn_bare_num", 0),
STACK_USAGE("fn_lastcons", 0),
STACK_USAGE("fn_dec_console", 24),
STACK_USAGE("fn_inc_console", 24),
STACK_USAGE("fn_send_intr", 8),
STACK_USAGE("fn_scroll_forw", 0),
STACK_USAGE("fn_scroll_back", 0),
STACK_USAGE("fn_show_mem", 0),
STACK_USAGE("fn_show_state", 0),
STACK_USAGE("fn_boot_it", 0),
STACK_USAGE("fn_compose", 0),
STACK_USAGE("fn_spawn_con", 0),
STACK_USAGE("fn_SAK", 0),
STACK_USAGE("fn_null", 0),
STACK_USAGE("k_ignore", 0),
STACK_USAGE("k_spec", 0),
STACK_USAGE("k_lowercase", 0),
STACK_USAGE("k_unicode", 8),
STACK_USAGE("k_self", 16),
STACK_USAGE("k_dead2", 0),
STACK_USAGE("k_dead", 0),
STACK_USAGE("k_cons", 0),
STACK_USAGE("k_fn", 24),
STACK_USAGE("k_cur", 8),
STACK_USAGE("k_pad", 16),
STACK_USAGE("k_shift", 16),
STACK_USAGE("k_meta", 16),
STACK_USAGE("k_ascii", 0),
STACK_USAGE("k_lock", 0),
STACK_USAGE("k_slock", 16),
STACK_USAGE("k_brl", 24),
STACK_USAGE("sel_loadlut", 40),
STACK_USAGE("set_selection_user", 32),
STACK_USAGE("set_selection_kernel", 56),
STACK_USAGE("paste_selection", 104),
STACK_USAGE("clear_selection", 0),
STACK_USAGE("vc_is_sel", 0),
STACK_USAGE("vcs_poll_data_get", 32),
STACK_USAGE("vcs_lseek", 40),
STACK_USAGE("vcs_read", 168),
STACK_USAGE("vcs_write", 176),
STACK_USAGE("vcs_poll", 32),
STACK_USAGE("vcs_fasync", 24),
STACK_USAGE("vcs_open", 16),
STACK_USAGE("vcs_release", 8),
STACK_USAGE("vcs_make_sysfs", 16),
STACK_USAGE("vcs_remove_sysfs", 8),
STACK_USAGE("vcs_init", 0),
STACK_USAGE("vcs_notifier", 24),
STACK_USAGE("vc_cons_allocated", 0),
STACK_USAGE("visual_init", 24),
STACK_USAGE("vc_port_destruct", 0),
STACK_USAGE("vc_allocate", 72),
STACK_USAGE("vc_do_resize", 192),
STACK_USAGE("vc_resize", 0),
STACK_USAGE("vt_resize", 24),
STACK_USAGE("vc_deallocate", 48),
STACK_USAGE("gotoxy", 0),
STACK_USAGE("gotoxay", 0),
STACK_USAGE("scrollback", 0),
STACK_USAGE("scrollfront", 0),
STACK_USAGE("lf", 32),
STACK_USAGE("ri", 8),
STACK_USAGE("cr", 24),
STACK_USAGE("csi_J", 32),
STACK_USAGE("csi_K", 24),
STACK_USAGE("csi_X", 16),
STACK_USAGE("rgb_foreground", 0),
STACK_USAGE("rgb_background", 0),
STACK_USAGE("vc_t416_color", 24),
STACK_USAGE("csi_m", 16),
STACK_USAGE("cursor_report", 88),
STACK_USAGE("status_report", 8),
STACK_USAGE("respond_ID", 8),
STACK_USAGE("mouse_report", 40),
STACK_USAGE("mouse_reporting", 0),
STACK_USAGE("set_mode", 88),
STACK_USAGE("setterm_command", 8),
STACK_USAGE("csi_L", 8),
STACK_USAGE("csi_P", 40),
STACK_USAGE("csi_M", 8),
STACK_USAGE("restore_cur", 8),
STACK_USAGE("reset_terminal", 32),
STACK_USAGE("vc_setGx", 8),
STACK_USAGE("register_vt_notifier", 0),
STACK_USAGE("unregister_vt_notifier", 0),
STACK_USAGE("ucs_cmp", 0),
STACK_USAGE("do_con_write", 264),
STACK_USAGE("console_callback", 32),
STACK_USAGE("set_console", 0),
STACK_USAGE("vt_kmsg_redirect", 0),
STACK_USAGE("vt_console_print", 96),
STACK_USAGE("schedule_console_callback", 0),
STACK_USAGE("vt_console_device", 0),
STACK_USAGE("tioclinux", 24),
STACK_USAGE("con_write", 16),
STACK_USAGE("con_put_char", 16),
STACK_USAGE("con_write_room", 0),
STACK_USAGE("con_throttle", 0),
STACK_USAGE("con_unthrottle", 0),
STACK_USAGE("con_stop", 0),
STACK_USAGE("con_start", 0),
STACK_USAGE("con_flush_chars", 8),
STACK_USAGE("con_install", 40),
STACK_USAGE("con_open", 0),
STACK_USAGE("con_close", 0),
STACK_USAGE("con_shutdown", 8),
STACK_USAGE("con_cleanup", 0),
STACK_USAGE("vc_init", 16),
STACK_USAGE("con_init", 24),
STACK_USAGE("show_tty_active", 0),
STACK_USAGE("vty_init", 16),
STACK_USAGE("do_bind_con_driver", 80),
STACK_USAGE("do_unbind_con_driver", 80),
STACK_USAGE("store_bind", 48),
STACK_USAGE("show_bind", 24),
STACK_USAGE("show_name", 0),
STACK_USAGE("con_is_bound", 8),
STACK_USAGE("con_is_visible", 8),
STACK_USAGE("con_debug_enter", 0),
STACK_USAGE("con_debug_leave", 0),
STACK_USAGE("do_unregister_con_driver", 8),
STACK_USAGE("con_driver_unregister_callback", 48),
STACK_USAGE("do_take_over_console", 56),
STACK_USAGE("give_up_console", 8),
STACK_USAGE("vtconsole_class_init", 16),
STACK_USAGE("set_vesa_blanking", 8),
STACK_USAGE("do_blank_screen", 16),
STACK_USAGE("do_unblank_screen", 16),
STACK_USAGE("unblank_screen", 0),
STACK_USAGE("blank_screen_t", 0),
STACK_USAGE("poke_blanked_console", 0),
STACK_USAGE("set_palette", 8),
STACK_USAGE("con_set_cmap", 88),
STACK_USAGE("con_get_cmap", 72),
STACK_USAGE("reset_palette", 8),
STACK_USAGE("con_font_op", 104),
STACK_USAGE("screen_glyph", 8),
STACK_USAGE("screen_glyph_unicode", 8),
STACK_USAGE("screen_pos", 0),
STACK_USAGE("getconsxy", 0),
STACK_USAGE("putconsxy", 16),
STACK_USAGE("vcs_scr_readw", 0),
STACK_USAGE("vcs_scr_writew", 0),
STACK_USAGE("vcs_scr_updated", 24),
STACK_USAGE("vc_scrolldelta_helper", 24),
STACK_USAGE("vc_uniscr_check", 56),
STACK_USAGE("vc_uniscr_copy_line", 48),
STACK_USAGE("con_scroll", 72),
STACK_USAGE("do_update_region", 104),
STACK_USAGE("update_region", 24),
STACK_USAGE("update_attr", 24),
STACK_USAGE("invert_screen", 72),
STACK_USAGE("complement_pos", 48),
STACK_USAGE("insert_char", 32),
STACK_USAGE("add_softcursor", 16),
STACK_USAGE("hide_cursor", 8),
STACK_USAGE("set_origin", 8),
STACK_USAGE("clear_buffer_attributes", 0),
STACK_USAGE("redraw_screen", 56),
STACK_USAGE("vt_compat_ioctl", 96),
STACK_USAGE("vt_event_post", 32),
STACK_USAGE("complete_change_console", 24),
STACK_USAGE("change_console", 16),
STACK_USAGE("vt_move_to_console", 24),
STACK_USAGE("pm_set_vt_switch", 8),
STACK_USAGE("__vt_event_wait", 64),
STACK_USAGE("vt_event_wait_ioctl", 80),
STACK_USAGE("vt_waitactive", 88),
STACK_USAGE("vt_kdsetmode", 8),
STACK_USAGE("vt_reldisp", 8),
STACK_USAGE("vt_setactivate", 40),
STACK_USAGE("vt_disallocate", 24),
STACK_USAGE("vt_disallocate_all", 552),
STACK_USAGE("vt_resizex", 64),
STACK_USAGE("vt_ioctl", 104),
STACK_USAGE("get_pid", 8),
STACK_USAGE("reset_vc", 8),
STACK_USAGE("vc_SAK", 8),
STACK_USAGE("dbgp_wait_until_done", 24),
STACK_USAGE("dbgp_control_msg", 32),
STACK_USAGE("find_cap", 48),
STACK_USAGE("__find_dbgp", 24),
STACK_USAGE("find_dbgp", 56),
STACK_USAGE("_dbgp_external_startup", 64),
STACK_USAGE("default_set_debug_port", 0),
STACK_USAGE("nvidia_set_debug_port", 8),
STACK_USAGE("detect_set_debug_port", 0),
STACK_USAGE("early_ehci_bios_handoff", 40),
STACK_USAGE("ehci_setup", 40),
STACK_USAGE("early_dbgp_init", 88),
STACK_USAGE("early_dbgp_write", 72),
STACK_USAGE("vhost_iotlb_add_range", 0),
STACK_USAGE("vhost_iotlb_del_range", 24),
STACK_USAGE("vhost_iotlb_alloc", 16),
STACK_USAGE("vhost_iotlb_reset", 8),
STACK_USAGE("vhost_iotlb_free", 8),
STACK_USAGE("vhost_iotlb_itree_first", 0),
STACK_USAGE("vhost_iotlb_itree_next", 0),
STACK_USAGE("vhost_iotlb_itree_augment_rotate", 0),
STACK_USAGE("vhost_iotlb_map_free", 16),
STACK_USAGE("vhost_iotlb_add_range_ctx", 56),
STACK_USAGE("handle_rx", 384),
STACK_USAGE("put_page", 0),
STACK_USAGE("handle_tx_kick", 0),
STACK_USAGE("handle_rx_kick", 0),
STACK_USAGE("handle_tx_net", 0),
STACK_USAGE("handle_rx_net", 0),
STACK_USAGE("vhost_net_open", 40),
STACK_USAGE("vhost_net_stop", 48),
STACK_USAGE("vhost_net_flush", 16),
STACK_USAGE("vhost_net_release", 32),
STACK_USAGE("vhost_net_set_features", 56),
STACK_USAGE("vhost_net_ioctl", 128),
STACK_USAGE("vhost_net_chr_read_iter", 0),
STACK_USAGE("vhost_net_chr_write_iter", 0),
STACK_USAGE("vhost_net_chr_poll", 0),
STACK_USAGE("vhost_net_init", 0),
STACK_USAGE("vhost_net_exit", 0),
STACK_USAGE("vhost_net_buf_unproduce", 56),
STACK_USAGE("local_bh_disable", 0),
STACK_USAGE("vhost_net_ubuf_put_and_wait", 72),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("local_bh_enable", 0),
STACK_USAGE("vhost_zerocopy_signal_used", 24),
STACK_USAGE("vhost_zerocopy_callback", 32),
STACK_USAGE("vhost_tx_batch", 48),
STACK_USAGE("vhost_net_busy_poll", 96),
STACK_USAGE("get_tx_bufs", 64),
STACK_USAGE("virt_to_head_page", 0),
STACK_USAGE("handle_tx", 304),
STACK_USAGE("peek_head_len", 40),
STACK_USAGE("vhost_chr_write_iter", 112),
STACK_USAGE("vhost_chr_poll", 8),
STACK_USAGE("vhost_chr_read_iter", 144),
STACK_USAGE("vhost_iotlb_miss", 48),
STACK_USAGE("vq_access_ok", 0),
STACK_USAGE("iotlb_access_ok", 88),
STACK_USAGE("vq_meta_prefetch", 24),
STACK_USAGE("vhost_log_access_ok", 40),
STACK_USAGE("vq_log_used_access_ok", 0),
STACK_USAGE("vhost_vq_access_ok", 16),
STACK_USAGE("vhost_flush_work", 0),
STACK_USAGE("vhost_poll_func", 0),
STACK_USAGE("vhost_vring_ioctl", 112),
STACK_USAGE("vhost_poll_wakeup", 8),
STACK_USAGE("vhost_init_device_iotlb", 48),
STACK_USAGE("vhost_dev_ioctl", 72),
STACK_USAGE("vhost_work_init", 0),
STACK_USAGE("log_write", 64),
STACK_USAGE("vhost_poll_init", 0),
STACK_USAGE("log_used", 64),
STACK_USAGE("vhost_log_write", 96),
STACK_USAGE("vhost_update_used_flags", 16),
STACK_USAGE("vhost_vq_init_access", 32),
STACK_USAGE("translate_desc", 88),
STACK_USAGE("vhost_poll_start", 32),
STACK_USAGE("vhost_get_vq_desc", 208),
STACK_USAGE("vhost_poll_stop", 8),
STACK_USAGE("vhost_discard_vq_desc", 0),
STACK_USAGE("vhost_work_dev_flush", 136),
STACK_USAGE("vhost_add_used", 16),
STACK_USAGE("__vhost_add_used_n", 104),
STACK_USAGE("vhost_add_used_n", 40),
STACK_USAGE("vhost_signal", 24),
STACK_USAGE("vhost_add_used_and_signal", 24),
STACK_USAGE("vhost_add_used_and_signal_n", 8),
STACK_USAGE("vhost_vq_avail_empty", 8),
STACK_USAGE("vhost_poll_flush", 0),
STACK_USAGE("vhost_enable_notify", 16),
STACK_USAGE("vhost_disable_notify", 8),
STACK_USAGE("vhost_work_queue", 8),
STACK_USAGE("vhost_new_msg", 16),
STACK_USAGE("vhost_enqueue_msg", 32),
STACK_USAGE("vhost_dequeue_msg", 16),
STACK_USAGE("vhost_set_backend_features", 48),
STACK_USAGE("vhost_init", 0),
STACK_USAGE("vhost_exit", 0),
STACK_USAGE("vhost_has_work", 0),
STACK_USAGE("vhost_poll_queue", 8),
STACK_USAGE("vhost_vq_is_setup", 0),
STACK_USAGE("vhost_worker", 24),
STACK_USAGE("vhost_exceeds_weight", 16),
STACK_USAGE("vhost_dev_init", 48),
STACK_USAGE("vhost_dev_check_owner", 0),
STACK_USAGE("vhost_attach_cgroups_work", 8),
STACK_USAGE("vhost_dev_has_owner", 0),
STACK_USAGE("vhost_dev_set_owner", 96),
STACK_USAGE("vhost_dev_reset_owner_prepare", 0),
STACK_USAGE("vhost_dev_reset_owner", 16),
STACK_USAGE("vhost_dev_stop", 24),
STACK_USAGE("vhost_dev_cleanup", 48),
STACK_USAGE("vq_memory_access_ok", 0),
STACK_USAGE("memory_access_ok", 40),
STACK_USAGE("__vhost_get_user", 56),
STACK_USAGE("bl_power_show", 0),
STACK_USAGE("bl_power_store", 64),
STACK_USAGE("brightness_show", 0),
STACK_USAGE("backlight_device_set_brightness", 72),
STACK_USAGE("brightness_store", 32),
STACK_USAGE("type_show", 0),
STACK_USAGE("max_brightness_show", 0),
STACK_USAGE("actual_brightness_show", 32),
STACK_USAGE("scale_show", 0),
STACK_USAGE("backlight_suspend", 24),
STACK_USAGE("backlight_resume", 24),
STACK_USAGE("backlight_update_status", 24),
STACK_USAGE("bl_device_release", 0),
STACK_USAGE("backlight_force_update", 56),
STACK_USAGE("backlight_device_register", 56),
STACK_USAGE("backlight_device_get_by_type", 16),
STACK_USAGE("backlight_device_get_by_name", 0),
STACK_USAGE("backlight_device_unregister", 16),
STACK_USAGE("devm_backlight_device_release", 0),
STACK_USAGE("devm_backlight_device_match", 0),
STACK_USAGE("backlight_register_notifier", 0),
STACK_USAGE("backlight_unregister_notifier", 0),
STACK_USAGE("devm_backlight_device_register", 56),
STACK_USAGE("devm_backlight_device_unregister", 0),
STACK_USAGE("devm_of_find_backlight", 0),
STACK_USAGE("backlight_class_exit", 0),
STACK_USAGE("backlight_class_init", 8),
STACK_USAGE("fb_notifier_callback", 40),
STACK_USAGE("dummycon_init", 0),
STACK_USAGE("dummycon_deinit", 0),
STACK_USAGE("dummycon_clear", 0),
STACK_USAGE("dummycon_cursor", 0),
STACK_USAGE("dummycon_scroll", 0),
STACK_USAGE("dummycon_switch", 0),
STACK_USAGE("dummycon_register_output_notifier", 8),
STACK_USAGE("dummycon_unregister_output_notifier", 8),
STACK_USAGE("dummycon_putc", 0),
STACK_USAGE("dummycon_putcs", 0),
STACK_USAGE("dummycon_blank", 0),
STACK_USAGE("dummycon_startup", 0),
STACK_USAGE("vgacon_font_set", 48),
STACK_USAGE("no_scroll", 0),
STACK_USAGE("vgacon_font_get", 0),
STACK_USAGE("vgacon_resize", 24),
STACK_USAGE("vgacon_set_origin", 0),
STACK_USAGE("vgacon_save_screen", 0),
STACK_USAGE("vgacon_scroll", 32),
STACK_USAGE("vgacon_clear", 0),
STACK_USAGE("vgacon_putc", 0),
STACK_USAGE("vgacon_putcs", 0),
STACK_USAGE("vga_set_mem_top", 8),
STACK_USAGE("vgacon_restore_screen", 8),
STACK_USAGE("vgacon_scrolldelta", 8),
STACK_USAGE("vgacon_startup", 8),
STACK_USAGE("outb_p", 0),
STACK_USAGE("vgacon_init", 16),
STACK_USAGE("vgacon_deinit", 8),
STACK_USAGE("vgacon_build_attr", 0),
STACK_USAGE("vgacon_invert_region", 0),
STACK_USAGE("vgacon_set_cursor_size", 40),
STACK_USAGE("vgacon_cursor", 24),
STACK_USAGE("vgacon_doresize", 56),
STACK_USAGE("vgacon_switch", 40),
STACK_USAGE("vga_set_palette", 24),
STACK_USAGE("vgacon_set_palette", 16),
STACK_USAGE("vgacon_blank", 24),
STACK_USAGE("vgacon_do_font_op", 56),
STACK_USAGE("bit_putcs", 280),
STACK_USAGE("bit_clear_margins", 64),
STACK_USAGE("bit_cursor", 208),
STACK_USAGE("bit_update_start", 16),
STACK_USAGE("fbcon_set_bitops", 0),
STACK_USAGE("bit_bmove", 32),
STACK_USAGE("bit_clear", 32),
STACK_USAGE("cfb_copyarea", 104),
STACK_USAGE("bitfill_aligned_rev", 0),
STACK_USAGE("bitfill_unaligned_rev", 40),
STACK_USAGE("cfb_fillrect", 88),
STACK_USAGE("bitfill_aligned", 16),
STACK_USAGE("bitfill_unaligned", 32),
STACK_USAGE("cfb_imageblit", 216),
STACK_USAGE("fb_get_options", 56),
STACK_USAGE("video_setup", 8),
STACK_USAGE("fb_register_client", 0),
STACK_USAGE("fb_unregister_client", 0),
STACK_USAGE("fb_notifier_call_chain", 0),
STACK_USAGE("fb_alloc_cmap", 0),
STACK_USAGE("fb_dealloc_cmap", 8),
STACK_USAGE("fb_copy_cmap", 56),
STACK_USAGE("fb_cmap_to_user", 80),
STACK_USAGE("fb_set_cmap", 72),
STACK_USAGE("fb_set_user_cmap", 96),
STACK_USAGE("fb_default_cmap", 0),
STACK_USAGE("fb_invert_cmaps", 0),
STACK_USAGE("fb_alloc_cmap_gfp", 56),
STACK_USAGE("fbcon_init", 64),
STACK_USAGE("fbcon_deinit", 48),
STACK_USAGE("fbcon_clear", 72),
STACK_USAGE("fbcon_putcs", 88),
STACK_USAGE("fbcon_putc", 16),
STACK_USAGE("fbcon_cursor", 64),
STACK_USAGE("fbcon_set_disp", 48),
STACK_USAGE("fbcon_redraw", 112),
STACK_USAGE("fbcon_scroll", 48),
STACK_USAGE("fbcon_resize", 264),
STACK_USAGE("fbcon_switch", 224),
STACK_USAGE("fbcon_blank", 216),
STACK_USAGE("fbcon_debug_enter", 8),
STACK_USAGE("fbcon_debug_leave", 0),
STACK_USAGE("fbcon_get_font", 48),
STACK_USAGE("fbcon_do_set_font", 32),
STACK_USAGE("fbcon_set_font", 136),
STACK_USAGE("fbcon_set_def_font", 16),
STACK_USAGE("fbcon_set_palette", 24),
STACK_USAGE("fbcon_screen_pos", 0),
STACK_USAGE("fbcon_getxy", 0),
STACK_USAGE("fbcon_invert_region", 0),
STACK_USAGE("fbcon_suspended", 0),
STACK_USAGE("fbcon_resumed", 0),
STACK_USAGE("fbcon_modechanged", 40),
STACK_USAGE("fbcon_set_all_vcs", 96),
STACK_USAGE("fbcon_update_vcs", 0),
STACK_USAGE("fbcon_mode_deleted", 32),
STACK_USAGE("fbcon_fb_unbind", 40),
STACK_USAGE("fbcon_fb_unregistered", 8),
STACK_USAGE("fbcon_remap_all", 16),
STACK_USAGE("fbcon_fb_registered", 24),
STACK_USAGE("fbcon_fb_blanked", 16),
STACK_USAGE("fbcon_new_modelist", 232),
STACK_USAGE("fbcon_get_requirement", 0),
STACK_USAGE("fbcon_set_con2fb_map_ioctl", 24),
STACK_USAGE("fbcon_get_con2fb_map_ioctl", 24),
STACK_USAGE("store_rotate", 24),
STACK_USAGE("store_rotate_all", 24),
STACK_USAGE("show_rotate", 16),
STACK_USAGE("show_cursor_blink", 16),
STACK_USAGE("store_cursor_blink", 24),
STACK_USAGE("fbcon_register_existing_fbs", 8),
STACK_USAGE("fbcon_output_notifier", 0),
STACK_USAGE("fb_console_init", 8),
STACK_USAGE("fb_flashcursor", 72),
STACK_USAGE("cursor_timer_handler", 8),
STACK_USAGE("fbcon_add_cursor_timer", 16),
STACK_USAGE("fb_console_setup", 48),
STACK_USAGE("fbcon_prepare_logo", 128),
STACK_USAGE("con2fb_acquire_newinfo", 40),
STACK_USAGE("con2fb_release_oldinfo", 56),
STACK_USAGE("set_con2fb_map", 72),
STACK_USAGE("fbcon_startup", 48),
STACK_USAGE("ccw_putcs", 312),
STACK_USAGE("ccw_clear_margins", 56),
STACK_USAGE("ccw_cursor", 264),
STACK_USAGE("ccw_update_start", 16),
STACK_USAGE("fbcon_rotate_ccw", 0),
STACK_USAGE("ccw_bmove", 40),
STACK_USAGE("ccw_clear", 40),
STACK_USAGE("cw_putcs", 304),
STACK_USAGE("cw_clear_margins", 56),
STACK_USAGE("cw_cursor", 256),
STACK_USAGE("cw_update_start", 16),
STACK_USAGE("fbcon_rotate_cw", 0),
STACK_USAGE("cw_bmove", 48),
STACK_USAGE("cw_clear", 40),
STACK_USAGE("fbcon_rotate_font", 80),
STACK_USAGE("fbcon_set_rotate", 0),
STACK_USAGE("ud_putcs", 296),
STACK_USAGE("ud_clear_margins", 56),
STACK_USAGE("ud_cursor", 224),
STACK_USAGE("ud_update_start", 16),
STACK_USAGE("fbcon_rotate_ud", 0),
STACK_USAGE("ud_bmove", 56),
STACK_USAGE("ud_clear", 48),
STACK_USAGE("fb_find_mode_cvt", 152),
STACK_USAGE("fb_blank", 32),
STACK_USAGE("do_fb_ioctl", 248),
STACK_USAGE("fb_pad_aligned_buffer", 8),
STACK_USAGE("fb_ioctl", 0),
STACK_USAGE("fb_pad_unaligned_buffer", 72),
STACK_USAGE("fb_compat_ioctl", 264),
STACK_USAGE("fb_mmap", 40),
STACK_USAGE("fb_open", 32),
STACK_USAGE("fb_release", 16),
STACK_USAGE("do_remove_conflicting_framebuffers", 80),
STACK_USAGE("fb_get_buffer_offset", 32),
STACK_USAGE("do_unregister_framebuffer", 16),
STACK_USAGE("remove_conflicting_framebuffers", 40),
STACK_USAGE("is_firmware_framebuffer", 72),
STACK_USAGE("remove_conflicting_pci_framebuffers", 32),
STACK_USAGE("register_framebuffer", 112),
STACK_USAGE("unregister_framebuffer", 8),
STACK_USAGE("fb_set_suspend", 16),
STACK_USAGE("fbmem_init", 16),
STACK_USAGE("fb_new_modelist", 296),
STACK_USAGE("fb_prepare_logo", 32),
STACK_USAGE("fb_show_logo", 392),
STACK_USAGE("fb_seq_start", 16),
STACK_USAGE("fb_seq_next", 0),
STACK_USAGE("fb_seq_stop", 0),
STACK_USAGE("fb_seq_show", 0),
STACK_USAGE("fb_read", 64),
STACK_USAGE("fb_write", 64),
STACK_USAGE("fb_pan_display", 24),
STACK_USAGE("fb_get_color_depth", 0),
STACK_USAGE("fb_check_caps", 56),
STACK_USAGE("fb_set_var", 280),
STACK_USAGE("fb_get_mode", 96),
STACK_USAGE("fb_validate_mode", 40),
STACK_USAGE("check_edid", 24),
STACK_USAGE("fb_firmware_edid", 0),
STACK_USAGE("fix_edid", 8),
STACK_USAGE("get_std_timing", 48),
STACK_USAGE("fb_create_modedb", 128),
STACK_USAGE("fb_destroy_modedb", 0),
STACK_USAGE("copy_string", 0),
STACK_USAGE("fb_parse_edid", 32),
STACK_USAGE("fb_edid_to_monspecs", 72),
STACK_USAGE("store_mode", 344),
STACK_USAGE("show_mode", 0),
STACK_USAGE("store_modes", 72),
STACK_USAGE("show_modes", 48),
STACK_USAGE("store_bpp", 200),
STACK_USAGE("show_bpp", 0),
STACK_USAGE("store_rotate", 200),
STACK_USAGE("show_rotate", 0),
STACK_USAGE("store_virtual", 200),
STACK_USAGE("show_virtual", 0),
STACK_USAGE("show_stride", 0),
STACK_USAGE("store_blank", 48),
STACK_USAGE("show_blank", 0),
STACK_USAGE("store_console", 0),
STACK_USAGE("show_console", 0),
STACK_USAGE("store_cursor", 0),
STACK_USAGE("show_cursor", 0),
STACK_USAGE("store_pan", 200),
STACK_USAGE("framebuffer_alloc", 24),
STACK_USAGE("show_pan", 0),
STACK_USAGE("show_name", 0),
STACK_USAGE("store_fbstate", 48),
STACK_USAGE("show_fbstate", 0),
STACK_USAGE("fb_init_device", 16),
STACK_USAGE("fb_cleanup_device", 8),
STACK_USAGE("framebuffer_release", 8),
STACK_USAGE("fb_match_mode", 48),
STACK_USAGE("fb_add_videomode", 16),
STACK_USAGE("fb_delete_videomode", 32),
STACK_USAGE("fb_destroy_modelist", 32),
STACK_USAGE("fb_videomode_to_modelist", 24),
STACK_USAGE("fb_find_best_display", 16),
STACK_USAGE("fb_find_mode", 224),
STACK_USAGE("fb_var_to_videomode", 0),
STACK_USAGE("fb_videomode_to_var", 0),
STACK_USAGE("fb_mode_is_equal", 0),
STACK_USAGE("fb_find_best_mode", 0),
STACK_USAGE("fb_find_nearest_mode", 24),
STACK_USAGE("soft_cursor", 72),
STACK_USAGE("tile_update_start", 16),
STACK_USAGE("fbcon_set_tileops", 32),
STACK_USAGE("tile_bmove", 32),
STACK_USAGE("tile_clear", 56),
STACK_USAGE("tile_putcs", 88),
STACK_USAGE("tile_clear_margins", 0),
STACK_USAGE("tile_cursor", 32),
STACK_USAGE("efifb_show_boot_graphics", 64),
STACK_USAGE("efifb_destroy", 8),
STACK_USAGE("base_show", 0),
STACK_USAGE("linelength_show", 0),
STACK_USAGE("height_show", 0),
STACK_USAGE("width_show", 0),
STACK_USAGE("depth_show", 0),
STACK_USAGE("efifb_probe", 104),
STACK_USAGE("efifb_remove", 8),
STACK_USAGE("efifb_driver_init", 0),
STACK_USAGE("efifb_fixup_resources", 56),
STACK_USAGE("efifb_setcolreg", 0),
STACK_USAGE("vesafb_setcolreg", 32),
STACK_USAGE("vesafb_destroy", 16),
STACK_USAGE("vesafb_probe", 96),
STACK_USAGE("vesafb_remove", 8),
STACK_USAGE("vesafb_driver_exit", 0),
STACK_USAGE("vesafb_driver_init", 0),
STACK_USAGE("vesafb_pan_display", 0),
STACK_USAGE("hdmi_avi_infoframe_pack_only", 16),
STACK_USAGE("hdmi_infoframe_log", 72),
STACK_USAGE("hdmi_drm_infoframe_unpack_only", 0),
STACK_USAGE("hdmi_infoframe_unpack", 40),
STACK_USAGE("hdmi_avi_infoframe_pack", 0),
STACK_USAGE("hdmi_spd_infoframe_init", 24),
STACK_USAGE("hdmi_spd_infoframe_check", 0),
STACK_USAGE("hdmi_spd_infoframe_pack_only", 16),
STACK_USAGE("hdmi_spd_infoframe_pack", 16),
STACK_USAGE("hdmi_audio_infoframe_init", 0),
STACK_USAGE("hdmi_audio_infoframe_check", 0),
STACK_USAGE("hdmi_audio_infoframe_pack_only", 24),
STACK_USAGE("hdmi_audio_infoframe_pack", 0),
STACK_USAGE("hdmi_vendor_infoframe_init", 0),
STACK_USAGE("hdmi_vendor_infoframe_check", 0),
STACK_USAGE("hdmi_vendor_infoframe_pack_only", 32),
STACK_USAGE("hdmi_avi_infoframe_init", 0),
STACK_USAGE("hdmi_vendor_infoframe_pack", 0),
STACK_USAGE("hdmi_drm_infoframe_init", 0),
STACK_USAGE("hdmi_drm_infoframe_check", 0),
STACK_USAGE("hdmi_drm_infoframe_pack_only", 40),
STACK_USAGE("hdmi_drm_infoframe_pack", 0),
STACK_USAGE("hdmi_infoframe_check", 0),
STACK_USAGE("hdmi_infoframe_pack_only", 16),
STACK_USAGE("hdmi_avi_infoframe_check", 0),
STACK_USAGE("hdmi_infoframe_pack", 0),
STACK_USAGE("fb_logo_late_init", 0),
STACK_USAGE("fb_find_logo", 0),
STACK_USAGE("vmgenid_add", 56),
STACK_USAGE("vmgenid_notify", 40),
STACK_USAGE("vmgenid_driver_exit", 0),
STACK_USAGE("vmgenid_driver_init", 0),
STACK_USAGE("virtio_check_driver_offered_feature", 0),
STACK_USAGE("virtio_config_changed", 24),
STACK_USAGE("device_show", 0),
STACK_USAGE("virtio_add_status", 24),
STACK_USAGE("virtio_features_ok", 24),
STACK_USAGE("vendor_show", 0),
STACK_USAGE("virtio_reset_device", 0),
STACK_USAGE("virtio_dev_probe", 48),
STACK_USAGE("virtio_device_ready", 8),
STACK_USAGE("status_show", 8),
STACK_USAGE("virtio_dev_remove", 32),
STACK_USAGE("register_virtio_driver", 0),
STACK_USAGE("unregister_virtio_driver", 0),
STACK_USAGE("modalias_show", 0),
STACK_USAGE("register_virtio_device", 32),
STACK_USAGE("is_virtio_device", 0),
STACK_USAGE("unregister_virtio_device", 8),
STACK_USAGE("features_show", 0),
STACK_USAGE("virtio_device_freeze", 24),
STACK_USAGE("virtio_device_restore", 32),
STACK_USAGE("virtio_init", 0),
STACK_USAGE("virtio_exit", 0),
STACK_USAGE("virtio_dev_match", 0),
STACK_USAGE("virtio_uevent", 0),
STACK_USAGE("remove_common", 64),
STACK_USAGE("virtballoon_remove", 24),
STACK_USAGE("virtballoon_freeze", 0),
STACK_USAGE("virtballoon_restore", 40),
STACK_USAGE("virtballoon_validate", 8),
STACK_USAGE("virtio_balloon_driver_exit", 0),
STACK_USAGE("virtio_balloon_driver_init", 0),
STACK_USAGE("balloon_ack", 0),
STACK_USAGE("tell_host", 120),
STACK_USAGE("virtballoon_free_page_report", 96),
STACK_USAGE("virtio_device_ready", 8),
STACK_USAGE("leak_balloon", 88),
STACK_USAGE("stats_request", 16),
STACK_USAGE("towards_target", 24),
STACK_USAGE("virtballoon_changed", 32),
STACK_USAGE("update_balloon_stats_func", 1000),
STACK_USAGE("update_balloon_size_func", 96),
STACK_USAGE("init_vqs", 1176),
STACK_USAGE("report_free_page_func", 120),
STACK_USAGE("virtballoon_migratepage", 64),
STACK_USAGE("balloon_init_fs_context", 0),
STACK_USAGE("virtio_balloon_shrinker_scan", 56),
STACK_USAGE("virtio_balloon_shrinker_count", 0),
STACK_USAGE("virtio_balloon_oom_notify", 32),
STACK_USAGE("virtballoon_probe", 48),
STACK_USAGE("vp_setup_vq", 56),
STACK_USAGE("vp_del_vqs", 56),
STACK_USAGE("vp_find_vqs_msix", 104),
STACK_USAGE("vp_synchronize_vectors", 16),
STACK_USAGE("vp_find_vqs", 80),
STACK_USAGE("vp_bus_name", 0),
STACK_USAGE("vp_notify", 0),
STACK_USAGE("vp_set_vq_affinity", 32),
STACK_USAGE("vp_get_vq_affinity", 0),
STACK_USAGE("virtio_pci_freeze", 16),
STACK_USAGE("virtio_pci_restore", 16),
STACK_USAGE("virtio_pci_release_dev", 0),
STACK_USAGE("vp_config_changed", 0),
STACK_USAGE("virtio_pci_probe", 32),
STACK_USAGE("virtio_pci_remove", 24),
STACK_USAGE("vp_vring_interrupt", 48),
STACK_USAGE("virtio_pci_sriov_configure", 24),
STACK_USAGE("virtio_pci_driver_exit", 0),
STACK_USAGE("virtio_pci_driver_init", 0),
STACK_USAGE("vp_interrupt", 48),
STACK_USAGE("vp_config_vector", 0),
STACK_USAGE("setup_vq", 80),
STACK_USAGE("del_vq", 16),
STACK_USAGE("virtio_pci_legacy_probe", 8),
STACK_USAGE("vp_get_features", 0),
STACK_USAGE("virtio_pci_legacy_remove", 0),
STACK_USAGE("vp_finalize_features", 8),
STACK_USAGE("vp_get", 32),
STACK_USAGE("vp_set", 32),
STACK_USAGE("vp_get_status", 0),
STACK_USAGE("vp_set_status", 0),
STACK_USAGE("vp_reset", 16),
STACK_USAGE("vp_legacy_set_features", 0),
STACK_USAGE("vp_legacy_get_status", 0),
STACK_USAGE("vp_legacy_set_status", 0),
STACK_USAGE("vp_legacy_queue_vector", 16),
STACK_USAGE("vp_legacy_config_vector", 8),
STACK_USAGE("vp_legacy_probe", 24),
STACK_USAGE("vp_legacy_set_queue_address", 16),
STACK_USAGE("vp_legacy_get_queue_enable", 8),
STACK_USAGE("vp_legacy_get_queue_size", 8),
STACK_USAGE("vp_legacy_remove", 8),
STACK_USAGE("vp_legacy_get_features", 0),
STACK_USAGE("vp_legacy_get_driver_features", 0),
STACK_USAGE("vp_set", 24),
STACK_USAGE("vp_generation", 0),
STACK_USAGE("vp_get_status", 0),
STACK_USAGE("vp_set_status", 0),
STACK_USAGE("vp_reset", 16),
STACK_USAGE("vp_config_vector", 0),
STACK_USAGE("setup_vq", 80),
STACK_USAGE("vp_get_features", 0),
STACK_USAGE("vp_modern_find_vqs", 32),
STACK_USAGE("del_vq", 24),
STACK_USAGE("vp_get_shm_region", 80),
STACK_USAGE("vp_finalize_features", 16),
STACK_USAGE("virtio_pci_modern_probe", 8),
STACK_USAGE("virtio_pci_modern_remove", 0),
STACK_USAGE("vp_get", 24),
STACK_USAGE("vp_modern_probe", 72),
STACK_USAGE("vp_modern_map_capability", 80),
STACK_USAGE("vp_modern_remove", 16),
STACK_USAGE("vp_modern_get_features", 24),
STACK_USAGE("vp_modern_get_driver_features", 24),
STACK_USAGE("vp_modern_set_features", 24),
STACK_USAGE("vp_modern_generation", 0),
STACK_USAGE("vp_modern_get_status", 0),
STACK_USAGE("vp_modern_set_status", 0),
STACK_USAGE("vp_modern_queue_vector", 16),
STACK_USAGE("vp_modern_config_vector", 8),
STACK_USAGE("vp_modern_queue_address", 40),
STACK_USAGE("vp_modern_set_queue_enable", 16),
STACK_USAGE("vp_modern_get_queue_enable", 8),
STACK_USAGE("vp_modern_set_queue_size", 16),
STACK_USAGE("vp_modern_get_queue_size", 8),
STACK_USAGE("vp_modern_get_num_queues", 0),
STACK_USAGE("vp_modern_map_vq_notify", 24),
STACK_USAGE("detach_buf_packed", 64),
STACK_USAGE("virtqueue_add", 160),
STACK_USAGE("virtqueue_add_sgs", 72),
STACK_USAGE("virtqueue_add_outbuf", 16),
STACK_USAGE("virtqueue_add_inbuf", 16),
STACK_USAGE("virtqueue_add_inbuf_ctx", 16),
STACK_USAGE("virtqueue_kick_prepare", 0),
STACK_USAGE("virtqueue_notify", 8),
STACK_USAGE("virtqueue_kick", 8),
STACK_USAGE("virtqueue_get_buf_ctx", 24),
STACK_USAGE("virtqueue_get_buf", 0),
STACK_USAGE("virtqueue_disable_cb", 0),
STACK_USAGE("virtqueue_enable_cb_prepare", 0),
STACK_USAGE("virtqueue_poll", 0),
STACK_USAGE("virtqueue_enable_cb", 0),
STACK_USAGE("virtqueue_enable_cb_delayed", 0),
STACK_USAGE("virtqueue_detach_unused_buf", 16),
STACK_USAGE("vring_interrupt", 8),
STACK_USAGE("__vring_new_virtqueue", 56),
STACK_USAGE("vring_create_virtqueue", 136),
STACK_USAGE("vring_new_virtqueue", 80),
STACK_USAGE("vring_del_virtqueue", 16),
STACK_USAGE("vring_transport_features", 0),
STACK_USAGE("virtqueue_get_vring_size", 0),
STACK_USAGE("virtqueue_is_broken", 0),
STACK_USAGE("virtio_break_device", 16),
STACK_USAGE("virtqueue_get_desc_addr", 0),
STACK_USAGE("virtqueue_get_avail_addr", 0),
STACK_USAGE("virtqueue_get_used_addr", 0),
STACK_USAGE("virtqueue_get_vring", 0),
STACK_USAGE("virtio_max_dma_size", 0),
STACK_USAGE("vring_map_single", 32),
STACK_USAGE("detach_buf_split", 48),
STACK_USAGE("vring_unmap_extra_packed", 0),
STACK_USAGE("v9fs_acl_chmod", 56),
STACK_USAGE("v9fs_set_create_acl", 48),
STACK_USAGE("v9fs_put_acl", 8),
STACK_USAGE("v9fs_acl_mode", 64),
STACK_USAGE("__v9fs_get_acl", 32),
STACK_USAGE("v9fs_xattr_get_acl", 24),
STACK_USAGE("v9fs_xattr_set_acl", 152),
STACK_USAGE("v9fs_get_acl", 40),
STACK_USAGE("posix_acl_release", 0),
STACK_USAGE("v9fs_iop_get_acl", 0),
STACK_USAGE("v9fs_fid_lookup_with_uid", 72),
STACK_USAGE("v9fs_fid_lookup", 0),
STACK_USAGE("v9fs_writeback_fid", 16),
STACK_USAGE("v9fs_fid_add", 24),
STACK_USAGE("v9fs_open_fid_add", 24),
STACK_USAGE("v9fs_fid_find", 32),
STACK_USAGE("v9fs_show_options", 24),
STACK_USAGE("v9fs_session_init", 136),
STACK_USAGE("v9fs_session_close", 8),
STACK_USAGE("v9fs_session_cancel", 0),
STACK_USAGE("v9fs_session_begin_cancel", 0),
STACK_USAGE("v9fs_sysfs_init", 8),
STACK_USAGE("v9fs_inode_init_once", 0),
STACK_USAGE("init_v9fs", 16),
STACK_USAGE("exit_v9fs", 0),
STACK_USAGE("v9fs_release_page", 0),
STACK_USAGE("v9fs_invalidate_folio", 0),
STACK_USAGE("v9fs_vfs_write_folio_locked", 88),
STACK_USAGE("v9fs_vfs_writepage", 32),
STACK_USAGE("v9fs_launder_folio", 8),
STACK_USAGE("v9fs_direct_IO", 40),
STACK_USAGE("v9fs_write_begin", 24),
STACK_USAGE("v9fs_write_end", 32),
STACK_USAGE("v9fs_issue_read", 88),
STACK_USAGE("v9fs_init_request", 16),
STACK_USAGE("v9fs_req_cleanup", 0),
STACK_USAGE("v9fs_begin_cache_operation", 0),
STACK_USAGE("v9fs_cached_dentry_delete", 0),
STACK_USAGE("v9fs_dentry_release", 16),
STACK_USAGE("v9fs_lookup_revalidate", 24),
STACK_USAGE("v9fs_dir_readdir_dotl", 368),
STACK_USAGE("v9fs_dir_release", 16),
STACK_USAGE("v9fs_dir_readdir", 248),
STACK_USAGE("v9fs_file_lock", 8),
STACK_USAGE("v9fs_file_do_lock", 112),
STACK_USAGE("v9fs_file_lock_dotl", 96),
STACK_USAGE("v9fs_file_flock_dotl", 32),
STACK_USAGE("v9fs_file_read_iter", 24),
STACK_USAGE("v9fs_file_write_iter", 56),
STACK_USAGE("v9fs_file_fsync", 136),
STACK_USAGE("v9fs_file_open", 48),
STACK_USAGE("v9fs_file_fsync_dotl", 24),
STACK_USAGE("v9fs_file_mmap", 8),
STACK_USAGE("v9fs_mmap_file_mmap", 40),
STACK_USAGE("v9fs_vm_page_mkwrite", 16),
STACK_USAGE("v9fs_mmap_file_read_iter", 24),
STACK_USAGE("v9fs_mmap_file_write_iter", 0),
STACK_USAGE("v9fs_mmap_vm_close", 104),
STACK_USAGE("v9fs_vfs_getattr", 32),
STACK_USAGE("v9fs_vfs_setattr", 160),
STACK_USAGE("p9mode2unixmode", 40),
STACK_USAGE("v9fs_stat2inode", 48),
STACK_USAGE("v9fs_qid2ino", 0),
STACK_USAGE("v9fs_vfs_get_link", 32),
STACK_USAGE("v9fs_vfs_symlink", 16),
STACK_USAGE("v9fs_vfs_link", 64),
STACK_USAGE("v9fs_vfs_mknod", 72),
STACK_USAGE("v9fs_refresh_inode", 40),
STACK_USAGE("v9fs_uflags2omode", 0),
STACK_USAGE("v9fs_blank_wstat", 0),
STACK_USAGE("v9fs_alloc_inode", 8),
STACK_USAGE("v9fs_free_inode", 0),
STACK_USAGE("v9fs_init_inode", 32),
STACK_USAGE("v9fs_get_inode", 32),
STACK_USAGE("v9fs_evict_inode", 16),
STACK_USAGE("v9fs_test_inode", 32),
STACK_USAGE("v9fs_test_new_inode", 0),
STACK_USAGE("v9fs_set_inode", 0),
STACK_USAGE("v9fs_inode_from_fid", 56),
STACK_USAGE("v9fs_remove", 48),
STACK_USAGE("v9fs_create", 88),
STACK_USAGE("v9fs_vfs_create", 16),
STACK_USAGE("v9fs_vfs_mkdir", 24),
STACK_USAGE("v9fs_vfs_lookup", 56),
STACK_USAGE("v9fs_vfs_atomic_open", 64),
STACK_USAGE("v9fs_vfs_unlink", 0),
STACK_USAGE("v9fs_vfs_rmdir", 0),
STACK_USAGE("v9fs_vfs_rename", 208),
STACK_USAGE("v9fs_inode_from_fid_dotl", 48),
STACK_USAGE("v9fs_open_to_dotl_flags", 0),
STACK_USAGE("v9fs_vfs_create_dotl", 0),
STACK_USAGE("v9fs_get_new_inode_from_fid", 0),
STACK_USAGE("v9fs_vfs_atomic_open_dotl", 144),
STACK_USAGE("v9fs_vfs_mkdir_dotl", 112),
STACK_USAGE("v9fs_vfs_getattr_dotl", 32),
STACK_USAGE("v9fs_vfs_setattr_dotl", 104),
STACK_USAGE("v9fs_test_inode_dotl", 0),
STACK_USAGE("v9fs_stat2inode_dotl", 24),
STACK_USAGE("v9fs_vfs_symlink_dotl", 80),
STACK_USAGE("v9fs_vfs_link_dotl", 64),
STACK_USAGE("v9fs_test_new_inode_dotl", 0),
STACK_USAGE("v9fs_vfs_mknod_dotl", 128),
STACK_USAGE("v9fs_set_inode_dotl", 0),
STACK_USAGE("v9fs_vfs_get_link_dotl", 40),
STACK_USAGE("v9fs_refresh_inode_dotl", 24),
STACK_USAGE("v9fs_mount", 56),
STACK_USAGE("v9fs_kill_super", 16),
STACK_USAGE("v9fs_umount_begin", 0),
STACK_USAGE("v9fs_statfs", 104),
STACK_USAGE("v9fs_drop_inode", 0),
STACK_USAGE("v9fs_write_inode", 136),
STACK_USAGE("v9fs_write_inode_dotl", 24),
STACK_USAGE("v9fs_set_super", 0),
STACK_USAGE("v9fs_fid_xattr_set", 104),
STACK_USAGE("v9fs_listxattr", 24),
STACK_USAGE("v9fs_xattr_handler_get", 32),
STACK_USAGE("v9fs_xattr_handler_set", 32),
STACK_USAGE("v9fs_fid_xattr_get", 104),
STACK_USAGE("v9fs_xattr_get", 32),
STACK_USAGE("v9fs_xattr_set", 40),
STACK_USAGE("lookup_ioctx", 32),
STACK_USAGE("iocb_destroy", 8),
STACK_USAGE("iocb_put", 64),
STACK_USAGE("aio_read_events", 104),
STACK_USAGE("__ia32_sys_io_setup", 0),
STACK_USAGE("__se_sys_io_setup", 24),
STACK_USAGE("__x64_sys_io_setup", 0),
STACK_USAGE("__ia32_compat_sys_io_setup", 24),
STACK_USAGE("__ia32_sys_io_destroy", 120),
STACK_USAGE("__x64_sys_io_destroy", 120),
STACK_USAGE("aio_complete_rw", 32),
STACK_USAGE("aio_prep_rw", 16),
STACK_USAGE("aio_read", 248),
STACK_USAGE("aio_write", 248),
STACK_USAGE("aio_fsync_work", 16),
STACK_USAGE("aio_poll_put_work", 0),
STACK_USAGE("poll_iocb_lock_wq", 16),
STACK_USAGE("poll_iocb_unlock_wq", 0),
STACK_USAGE("aio_poll_complete_work", 56),
STACK_USAGE("aio_poll_cancel", 8),
STACK_USAGE("aio_poll_wake", 56),
STACK_USAGE("aio_poll_queue_proc", 0),
STACK_USAGE("io_submit_one", 160),
STACK_USAGE("__ia32_sys_io_submit", 0),
STACK_USAGE("__se_sys_io_submit", 96),
STACK_USAGE("__x64_sys_io_submit", 0),
STACK_USAGE("__ia32_compat_sys_io_submit", 96),
STACK_USAGE("__ia32_sys_io_cancel", 0),
STACK_USAGE("__se_sys_io_cancel", 40),
STACK_USAGE("__x64_sys_io_cancel", 0),
STACK_USAGE("do_io_getevents", 184),
STACK_USAGE("percpu_ref_get", 8),
STACK_USAGE("__ia32_sys_io_getevents", 64),
STACK_USAGE("__x64_sys_io_getevents", 64),
STACK_USAGE("__ia32_sys_io_pgetevents", 0),
STACK_USAGE("__se_sys_io_pgetevents", 88),
STACK_USAGE("__x64_sys_io_pgetevents", 0),
STACK_USAGE("__ia32_sys_io_getevents_time32", 64),
STACK_USAGE("__x64_sys_io_getevents_time32", 64),
STACK_USAGE("__ia32_compat_sys_io_pgetevents", 80),
STACK_USAGE("__ia32_compat_sys_io_pgetevents_time64", 80),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("aio_init_fs_context", 8),
STACK_USAGE("aio_setup", 0),
STACK_USAGE("aio_free_ring", 32),
STACK_USAGE("percpu_ref_put", 8),
STACK_USAGE("aio_ring_mremap", 48),
STACK_USAGE("aio_ring_mmap", 0),
STACK_USAGE("aio_migratepage", 64),
STACK_USAGE("aio_setup_ring", 88),
STACK_USAGE("kiocb_set_cancel_fn", 40),
STACK_USAGE("free_ioctx", 16),
STACK_USAGE("free_ioctx_reqs", 16),
STACK_USAGE("free_ioctx_users", 32),
STACK_USAGE("ioctx_add_table", 48),
STACK_USAGE("aio_nr_sub", 8),
STACK_USAGE("ioctx_alloc", 48),
STACK_USAGE("kill_ioctx", 32),
STACK_USAGE("exit_aio", 144),
STACK_USAGE("put_reqs_available", 48),
STACK_USAGE("__get_reqs_available", 40),
STACK_USAGE("refill_reqs_available", 48),
STACK_USAGE("anon_inode_getfile", 48),
STACK_USAGE("anon_inode_getfile_secure", 0),
STACK_USAGE("anon_inode_getfd", 56),
STACK_USAGE("anon_inode_getfd_secure", 48),
STACK_USAGE("anon_inode_init", 0),
STACK_USAGE("anon_inodefs_dname", 0),
STACK_USAGE("anon_inodefs_init_fs_context", 0),
STACK_USAGE("__anon_inode_getfile", 88),
STACK_USAGE("inode_newsize_ok", 0),
STACK_USAGE("setattr_copy", 24),
STACK_USAGE("may_setattr", 16),
STACK_USAGE("notify_change", 88),
STACK_USAGE("fsnotify_change", 0),
STACK_USAGE("setattr_prepare", 64),
STACK_USAGE("autofs_dev_ioctl_version", 0),
STACK_USAGE("autofs_dev_ioctl_protover", 0),
STACK_USAGE("autofs_dev_ioctl_protosubver", 0),
STACK_USAGE("autofs_dev_ioctl_openmount", 80),
STACK_USAGE("autofs_dev_ioctl_closemount", 0),
STACK_USAGE("autofs_dev_ioctl_ready", 0),
STACK_USAGE("autofs_dev_ioctl_fail", 0),
STACK_USAGE("autofs_dev_ioctl_setpipefd", 48),
STACK_USAGE("autofs_dev_ioctl_catatonic", 0),
STACK_USAGE("autofs_dev_ioctl_timeout", 0),
STACK_USAGE("autofs_dev_ioctl_requester", 72),
STACK_USAGE("autofs_dev_ioctl_expire", 0),
STACK_USAGE("autofs_dev_ioctl_askumount", 8),
STACK_USAGE("autofs_dev_ioctl_ismountpoint", 72),
STACK_USAGE("autofs_dev_ioctl", 80),
STACK_USAGE("autofs_dev_ioctl_compat", 0),
STACK_USAGE("autofs_dev_ioctl_init", 8),
STACK_USAGE("autofs_dev_ioctl_exit", 0),
STACK_USAGE("get_next_positive_dentry", 64),
STACK_USAGE("autofs_tree_busy", 56),
STACK_USAGE("autofs_check_leaves", 40),
STACK_USAGE("autofs_mount_busy", 48),
STACK_USAGE("should_expire", 40),
STACK_USAGE("autofs_expire_indirect", 96),
STACK_USAGE("autofs_expire_wait", 48),
STACK_USAGE("autofs_expire_run", 320),
STACK_USAGE("autofs_do_expire_multi", 88),
STACK_USAGE("autofs_expire_multi", 32),
STACK_USAGE("autofs_mount", 0),
STACK_USAGE("init_autofs_fs", 8),
STACK_USAGE("exit_autofs_fs", 0),
STACK_USAGE("autofs_evict_inode", 8),
STACK_USAGE("autofs_new_ino", 8),
STACK_USAGE("autofs_fill_super", 152),
STACK_USAGE("autofs_clean_ino", 0),
STACK_USAGE("autofs_free_ino", 0),
STACK_USAGE("autofs_get_inode", 24),
STACK_USAGE("autofs_kill_sb", 16),
STACK_USAGE("autofs_show_options", 24),
STACK_USAGE("autofs_dentry_release", 24),
STACK_USAGE("do_expire_wait", 112),
STACK_USAGE("autofs_d_automount", 48),
STACK_USAGE("autofs_d_manage", 56),
STACK_USAGE("autofs_lookup", 96),
STACK_USAGE("autofs_dir_symlink", 56),
STACK_USAGE("autofs_dir_unlink", 24),
STACK_USAGE("autofs_dir_rmdir", 40),
STACK_USAGE("autofs_dir_mkdir", 56),
STACK_USAGE("autofs_dir_open", 40),
STACK_USAGE("is_autofs_dentry", 0),
STACK_USAGE("autofs_root_ioctl_unlocked", 40),
STACK_USAGE("autofs_root_ioctl", 0),
STACK_USAGE("autofs_root_compat_ioctl", 0),
STACK_USAGE("autofs_get_link", 0),
STACK_USAGE("autofs_catatonic_mode", 32),
STACK_USAGE("autofs_wait", 184),
STACK_USAGE("autofs_wait_release", 48),
STACK_USAGE("autofs_notify_daemon", 384),
STACK_USAGE("bad_inode_setattr", 0),
STACK_USAGE("bad_inode_listxattr", 0),
STACK_USAGE("bad_inode_get_link", 0),
STACK_USAGE("bad_inode_get_acl", 0),
STACK_USAGE("bad_inode_fiemap", 0),
STACK_USAGE("bad_inode_update_time", 0),
STACK_USAGE("bad_inode_atomic_open", 0),
STACK_USAGE("bad_inode_tmpfile", 0),
STACK_USAGE("bad_inode_set_acl", 0),
STACK_USAGE("make_bad_inode", 8),
STACK_USAGE("bad_file_open", 0),
STACK_USAGE("is_bad_inode", 0),
STACK_USAGE("iget_failed", 8),
STACK_USAGE("bad_inode_create", 0),
STACK_USAGE("bad_inode_lookup", 0),
STACK_USAGE("bad_inode_link", 0),
STACK_USAGE("bad_inode_unlink", 0),
STACK_USAGE("bad_inode_symlink", 0),
STACK_USAGE("bad_inode_mkdir", 0),
STACK_USAGE("bad_inode_rmdir", 0),
STACK_USAGE("bad_inode_mknod", 0),
STACK_USAGE("bad_inode_rename2", 0),
STACK_USAGE("bad_inode_readlink", 0),
STACK_USAGE("bad_inode_permission", 0),
STACK_USAGE("bad_inode_getattr", 0),
STACK_USAGE("set_brk", 8),
STACK_USAGE("load_elf_library", 112),
STACK_USAGE("writenote", 48),
STACK_USAGE("create_elf_tables", 152),
STACK_USAGE("elf_core_dump", 488),
STACK_USAGE("init_elf_binfmt", 0),
STACK_USAGE("exit_elf_binfmt", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("elf_map", 40),
STACK_USAGE("total_mapping_size", 0),
STACK_USAGE("maximum_alignment", 0),
STACK_USAGE("load_elf_phdrs", 48),
STACK_USAGE("load_elf_interp", 96),
STACK_USAGE("load_elf_binary", 192),
STACK_USAGE("load_misc_binary", 64),
STACK_USAGE("scanarg", 0),
STACK_USAGE("bm_evict_inode", 16),
STACK_USAGE("bm_entry_read", 48),
STACK_USAGE("bm_entry_write", 48),
STACK_USAGE("bm_register_write", 80),
STACK_USAGE("bm_status_read", 0),
STACK_USAGE("bm_status_write", 56),
STACK_USAGE("bm_fill_super", 8),
STACK_USAGE("bm_get_tree", 0),
STACK_USAGE("bm_init_fs_context", 0),
STACK_USAGE("init_misc_binfmt", 8),
STACK_USAGE("exit_misc_binfmt", 0),
STACK_USAGE("init_script_binfmt", 0),
STACK_USAGE("exit_script_binfmt", 0),
STACK_USAGE("load_script", 48),
STACK_USAGE("mark_buffer_dirty", 16),
STACK_USAGE("mark_buffer_write_io_error", 16),
STACK_USAGE("__brelse", 0),
STACK_USAGE("__bforget", 16),
STACK_USAGE("__wait_on_buffer", 8),
STACK_USAGE("put_page", 0),
STACK_USAGE("__find_get_block", 72),
STACK_USAGE("__getblk_gfp", 88),
STACK_USAGE("__breadahead", 8),
STACK_USAGE("__breadahead_gfp", 8),
STACK_USAGE("__bread_gfp", 8),
STACK_USAGE("invalidate_bh_lru", 24),
STACK_USAGE("has_bh_in_lru", 0),
STACK_USAGE("invalidate_bh_lrus", 0),
STACK_USAGE("invalidate_bh_lrus_cpu", 40),
STACK_USAGE("set_bh_page", 0),
STACK_USAGE("block_invalidate_folio", 64),
STACK_USAGE("create_empty_buffers", 24),
STACK_USAGE("end_buffer_read_sync", 8),
STACK_USAGE("clean_bdev_aliases", 216),
STACK_USAGE("end_buffer_write_sync", 8),
STACK_USAGE("create_page_buffers", 8),
STACK_USAGE("__block_write_full_page", 104),
STACK_USAGE("page_zero_new_buffers", 48),
STACK_USAGE("__block_write_begin_int", 168),
STACK_USAGE("__block_write_begin", 0),
STACK_USAGE("block_write_begin", 40),
STACK_USAGE("block_write_end", 72),
STACK_USAGE("generic_write_end", 64),
STACK_USAGE("block_is_partially_uptodate", 0),
STACK_USAGE("block_read_full_page", 200),
STACK_USAGE("generic_cont_expand_simple", 40),
STACK_USAGE("zero_user_segments", 32),
STACK_USAGE("cont_write_begin", 112),
STACK_USAGE("end_buffer_async_read", 40),
STACK_USAGE("block_commit_write", 64),
STACK_USAGE("block_page_mkwrite", 56),
STACK_USAGE("end_buffer_read_nobh", 0),
STACK_USAGE("attach_nobh_buffers", 16),
STACK_USAGE("nobh_write_begin", 128),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("nobh_write_end", 64),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("nobh_writepage", 32),
STACK_USAGE("nobh_truncate_page", 256),
STACK_USAGE("block_truncate_page", 64),
STACK_USAGE("block_write_full_page", 32),
STACK_USAGE("generic_block_bmap", 208),
STACK_USAGE("end_bio_bh_io_sync", 8),
STACK_USAGE("submit_bh_wbc", 24),
STACK_USAGE("submit_bh", 0),
STACK_USAGE("ll_rw_block", 40),
STACK_USAGE("write_dirty_buffer", 16),
STACK_USAGE("__sync_dirty_buffer", 16),
STACK_USAGE("sync_dirty_buffer", 0),
STACK_USAGE("drop_buffers", 8),
STACK_USAGE("end_buffer_async_read_io", 0),
STACK_USAGE("try_to_free_buffers", 48),
STACK_USAGE("recalc_bh_state", 16),
STACK_USAGE("alloc_buffer_head", 8),
STACK_USAGE("free_buffer_head", 0),
STACK_USAGE("buffer_exit_cpu_dead", 32),
STACK_USAGE("bh_uptodate_or_lock", 8),
STACK_USAGE("bh_submit_read", 8),
STACK_USAGE("buffer_init", 0),
STACK_USAGE("end_buffer_async_write", 32),
STACK_USAGE("lock_buffer", 8),
STACK_USAGE("mark_buffer_async_write", 0),
STACK_USAGE("inode_has_buffers", 0),
STACK_USAGE("emergency_thaw_bdev", 8),
STACK_USAGE("sync_mapping_buffers", 120),
STACK_USAGE("write_boundary_block", 8),
STACK_USAGE("mark_buffer_dirty_inode", 24),
STACK_USAGE("touch_buffer", 8),
STACK_USAGE("block_dirty_folio", 32),
STACK_USAGE("__lock_buffer", 8),
STACK_USAGE("PageUptodate", 0),
STACK_USAGE("unlock_buffer", 0),
STACK_USAGE("invalidate_inode_buffers", 24),
STACK_USAGE("remove_inode_buffers", 24),
STACK_USAGE("alloc_page_buffers", 56),
STACK_USAGE("buffer_check_dirty_writeback", 0),
STACK_USAGE("init_page_buffers", 0),
STACK_USAGE("lock_page", 8),
STACK_USAGE("register_chrdev_region", 48),
STACK_USAGE("alloc_chrdev_region", 16),
STACK_USAGE("__register_chrdev", 56),
STACK_USAGE("unregister_chrdev_region", 48),
STACK_USAGE("__unregister_chrdev", 32),
STACK_USAGE("cdev_put", 8),
STACK_USAGE("chrdev_open", 64),
STACK_USAGE("cd_forget", 8),
STACK_USAGE("exact_match", 0),
STACK_USAGE("exact_lock", 16),
STACK_USAGE("cdev_add", 8),
STACK_USAGE("cdev_set_parent", 0),
STACK_USAGE("chrdev_show", 24),
STACK_USAGE("cdev_device_add", 24),
STACK_USAGE("cdev_device_del", 16),
STACK_USAGE("cdev_del", 8),
STACK_USAGE("cdev_default_release", 16),
STACK_USAGE("cdev_dynamic_release", 16),
STACK_USAGE("cdev_alloc", 8),
STACK_USAGE("cdev_init", 16),
STACK_USAGE("base_probe", 8),
STACK_USAGE("chrdev_init", 0),
STACK_USAGE("__register_chrdev_region", 48),
STACK_USAGE("set_brk", 8),
STACK_USAGE("load_elf_library", 104),
STACK_USAGE("writenote", 48),
STACK_USAGE("create_elf_tables", 168),
STACK_USAGE("elf_core_dump", 464),
STACK_USAGE("init_compat_elf_binfmt", 0),
STACK_USAGE("exit_compat_elf_binfmt", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("elf_map", 40),
STACK_USAGE("total_mapping_size", 0),
STACK_USAGE("maximum_alignment", 0),
STACK_USAGE("load_elf_phdrs", 48),
STACK_USAGE("load_elf_interp", 88),
STACK_USAGE("load_elf_binary", 192),
STACK_USAGE("configfs_depend_prep", 40),
STACK_USAGE("configfs_depend_item", 40),
STACK_USAGE("configfs_undepend_item", 8),
STACK_USAGE("configfs_depend_item_unlocked", 40),
STACK_USAGE("configfs_mkdir", 88),
STACK_USAGE("configfs_rmdir", 80),
STACK_USAGE("configfs_dir_open", 48),
STACK_USAGE("configfs_dir_close", 24),
STACK_USAGE("configfs_readdir", 72),
STACK_USAGE("configfs_dir_lseek", 24),
STACK_USAGE("configfs_register_group", 48),
STACK_USAGE("put_fragment", 0),
STACK_USAGE("configfs_unregister_group", 48),
STACK_USAGE("get_fragment", 0),
STACK_USAGE("configfs_register_default_group", 40),
STACK_USAGE("configfs_unregister_default_group", 8),
STACK_USAGE("configfs_register_subsystem", 48),
STACK_USAGE("configfs_new_dirent", 40),
STACK_USAGE("configfs_unregister_subsystem", 40),
STACK_USAGE("configfs_make_dirent", 16),
STACK_USAGE("configfs_remove_dirent", 8),
STACK_USAGE("configfs_dir_set_ready", 16),
STACK_USAGE("configfs_dirent_is_ready", 16),
STACK_USAGE("configfs_create_link", 24),
STACK_USAGE("configfs_remove_dir", 16),
STACK_USAGE("configfs_lookup", 48),
STACK_USAGE("configfs_d_iput", 24),
STACK_USAGE("configfs_detach_prep", 32),
STACK_USAGE("configfs_detach_rollback", 16),
STACK_USAGE("detach_attrs", 40),
STACK_USAGE("detach_groups", 56),
STACK_USAGE("create_default_group", 40),
STACK_USAGE("configfs_remove_default_groups", 32),
STACK_USAGE("unlink_obj", 8),
STACK_USAGE("link_obj", 8),
STACK_USAGE("unlink_group", 24),
STACK_USAGE("link_group", 24),
STACK_USAGE("configfs_attach_item", 56),
STACK_USAGE("configfs_attach_group", 56),
STACK_USAGE("client_disconnect_notify", 0),
STACK_USAGE("client_drop_item", 0),
STACK_USAGE("configfs_bin_read_iter", 64),
STACK_USAGE("configfs_write_iter", 48),
STACK_USAGE("configfs_bin_write_iter", 48),
STACK_USAGE("__configfs_open_file", 72),
STACK_USAGE("configfs_release", 8),
STACK_USAGE("configfs_open_file", 0),
STACK_USAGE("configfs_open_bin_file", 0),
STACK_USAGE("configfs_release_bin_file", 32),
STACK_USAGE("configfs_create_file", 40),
STACK_USAGE("configfs_create_bin_file", 40),
STACK_USAGE("configfs_read_iter", 56),
STACK_USAGE("configfs_new_inode", 24),
STACK_USAGE("configfs_create", 32),
STACK_USAGE("configfs_get_name", 0),
STACK_USAGE("configfs_drop_dentry", 24),
STACK_USAGE("configfs_hash_and_remove", 40),
STACK_USAGE("configfs_setattr", 56),
STACK_USAGE("config_group_put", 0),
STACK_USAGE("config_item_get", 8),
STACK_USAGE("config_item_get_unless_zero", 16),
STACK_USAGE("config_item_release", 32),
STACK_USAGE("config_item_put", 32),
STACK_USAGE("config_group_init", 0),
STACK_USAGE("config_group_find_item", 32),
STACK_USAGE("config_item_set_name", 136),
STACK_USAGE("config_item_init_type_name", 16),
STACK_USAGE("config_group_init_type_name", 16),
STACK_USAGE("configfs_init_fs_context", 0),
STACK_USAGE("configfs_pin_fs", 0),
STACK_USAGE("configfs_release_fs", 0),
STACK_USAGE("configfs_init", 16),
STACK_USAGE("configfs_exit", 0),
STACK_USAGE("configfs_free_inode", 8),
STACK_USAGE("configfs_is_root", 0),
STACK_USAGE("configfs_fill_super", 24),
STACK_USAGE("configfs_get_tree", 0),
STACK_USAGE("configfs_symlink", 120),
STACK_USAGE("configfs_unlink", 40),
STACK_USAGE("cn_printf", 88),
STACK_USAGE("free_vma_snapshot", 24),
STACK_USAGE("dump_vma_snapshot", 88),
STACK_USAGE("cn_esc_printf", 104),
STACK_USAGE("cn_print_exe_file", 40),
STACK_USAGE("i_uid_into_mnt", 8),
STACK_USAGE("file_start_write", 16),
STACK_USAGE("file_end_write", 8),
STACK_USAGE("get_fs_root", 24),
STACK_USAGE("dump_interrupted", 0),
STACK_USAGE("wait_for_dump_helpers", 72),
STACK_USAGE("umh_pipe_setup", 56),
STACK_USAGE("do_coredump", 352),
STACK_USAGE("dump_emit", 72),
STACK_USAGE("dump_skip_to", 0),
STACK_USAGE("cn_vprintf", 88),
STACK_USAGE("dump_skip", 0),
STACK_USAGE("dump_user_range", 48),
STACK_USAGE("dump_align", 0),
STACK_USAGE("validate_coredump_safety", 0),
STACK_USAGE("proc_dostring_coredump", 8),
STACK_USAGE("init_fs_coredump_sysctls", 0),
STACK_USAGE("read_seqbegin_or_lock", 48),
STACK_USAGE("prepend_path", 96),
STACK_USAGE("__d_path", 24),
STACK_USAGE("d_absolute_path", 40),
STACK_USAGE("d_path", 104),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("dynamic_dname", 168),
STACK_USAGE("simple_dname", 32),
STACK_USAGE("__dentry_path", 64),
STACK_USAGE("dentry_path_raw", 24),
STACK_USAGE("dentry_path", 32),
STACK_USAGE("__ia32_sys_getcwd", 0),
STACK_USAGE("__se_sys_getcwd", 120),
STACK_USAGE("__x64_sys_getcwd", 0),
STACK_USAGE("prepend", 24),
STACK_USAGE("d_find_any_alias", 24),
STACK_USAGE("d_find_alias", 32),
STACK_USAGE("d_find_alias_rcu", 24),
STACK_USAGE("d_prune_aliases", 40),
STACK_USAGE("shrink_lock_dentry", 48),
STACK_USAGE("shrink_dentry_list", 40),
STACK_USAGE("dentry_lru_isolate", 32),
STACK_USAGE("prune_dcache_sb", 40),
STACK_USAGE("dentry_lru_isolate_shrink", 32),
STACK_USAGE("shrink_dcache_sb", 112),
STACK_USAGE("d_walk", 96),
STACK_USAGE("path_check_mount", 16),
STACK_USAGE("path_has_submounts", 32),
STACK_USAGE("d_set_mounted", 40),
STACK_USAGE("hlist_bl_unlock", 0),
STACK_USAGE("select_collect", 24),
STACK_USAGE("select_collect2", 24),
STACK_USAGE("shrink_dcache_parent", 72),
STACK_USAGE("umount_check", 0),
STACK_USAGE("do_one_tree", 16),
STACK_USAGE("shrink_dcache_for_umount", 16),
STACK_USAGE("find_submount", 0),
STACK_USAGE("d_invalidate", 32),
STACK_USAGE("__d_alloc", 48),
STACK_USAGE("proc_nr_dentry", 72),
STACK_USAGE("d_alloc", 24),
STACK_USAGE("d_alloc_anon", 0),
STACK_USAGE("d_alloc_cursor", 16),
STACK_USAGE("d_alloc_pseudo", 0),
STACK_USAGE("d_alloc_name", 48),
STACK_USAGE("d_set_d_op", 0),
STACK_USAGE("d_set_fallthru", 16),
STACK_USAGE("init_fs_dcache_sysctls", 0),
STACK_USAGE("__d_instantiate", 32),
STACK_USAGE("d_instantiate", 24),
STACK_USAGE("d_instantiate_new", 24),
STACK_USAGE("d_make_root", 24),
STACK_USAGE("__d_instantiate_anon", 56),
STACK_USAGE("d_instantiate_anon", 0),
STACK_USAGE("__d_obtain_alias", 32),
STACK_USAGE("d_obtain_alias", 0),
STACK_USAGE("d_obtain_root", 0),
STACK_USAGE("d_add_ci", 48),
STACK_USAGE("__d_lookup_rcu", 88),
STACK_USAGE("d_lookup", 24),
STACK_USAGE("__d_lookup", 64),
STACK_USAGE("d_hash_and_lookup", 24),
STACK_USAGE("d_delete", 24),
STACK_USAGE("__d_rehash", 32),
STACK_USAGE("d_rehash", 16),
STACK_USAGE("d_wait_lookup", 72),
STACK_USAGE("d_alloc_parallel", 112),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("__d_lookup_done", 32),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("__d_add", 40),
STACK_USAGE("d_add", 16),
STACK_USAGE("d_exact_alias", 56),
STACK_USAGE("__d_move", 112),
STACK_USAGE("__d_free", 0),
STACK_USAGE("d_move", 24),
STACK_USAGE("d_exchange", 24),
STACK_USAGE("d_ancestor", 0),
STACK_USAGE("__d_free_external", 8),
STACK_USAGE("__d_unalias", 48),
STACK_USAGE("d_splice_alias", 40),
STACK_USAGE("take_dentry_name_snapshot", 32),
STACK_USAGE("is_subdir", 32),
STACK_USAGE("d_genocide_kill", 0),
STACK_USAGE("d_genocide", 0),
STACK_USAGE("d_tmpfile", 32),
STACK_USAGE("set_dhash_entries", 16),
STACK_USAGE("dcache_init_early", 0),
STACK_USAGE("dcache_init", 8),
STACK_USAGE("vfs_caches_init_early", 0),
STACK_USAGE("vfs_caches_init", 0),
STACK_USAGE("release_dentry_name_snapshot", 0),
STACK_USAGE("dentry_unlink_inode", 16),
STACK_USAGE("d_lru_add", 0),
STACK_USAGE("___d_drop", 16),
STACK_USAGE("__d_drop", 8),
STACK_USAGE("d_drop", 16),
STACK_USAGE("__dentry_kill", 24),
STACK_USAGE("__lock_parent", 32),
STACK_USAGE("lock_parent", 16),
STACK_USAGE("retain_dentry", 8),
STACK_USAGE("d_mark_dontcache", 32),
STACK_USAGE("dentry_kill", 24),
STACK_USAGE("rcu_read_unlock", 0),
STACK_USAGE("read_seqbegin", 24),
STACK_USAGE("write_seqlock", 0),
STACK_USAGE("dput", 24),
STACK_USAGE("write_sequnlock", 0),
STACK_USAGE("__dput_to_list", 16),
STACK_USAGE("dput_to_list", 24),
STACK_USAGE("dget_parent", 32),
STACK_USAGE("u32_array_open", 64),
STACK_USAGE("u32_array_read", 32),
STACK_USAGE("u32_array_release", 0),
STACK_USAGE("debugfs_create_u32_array", 0),
STACK_USAGE("debugfs_print_regs32", 48),
STACK_USAGE("debugfs_show_regset32", 48),
STACK_USAGE("debugfs_open_regset32", 0),
STACK_USAGE("debugfs_create_regset32", 0),
STACK_USAGE("debugfs_devm_entry_open", 0),
STACK_USAGE("debugfs_create_devm_seqfile", 32),
STACK_USAGE("debugfs_file_put", 0),
STACK_USAGE("open_proxy_open", 40),
STACK_USAGE("full_proxy_llseek", 32),
STACK_USAGE("full_proxy_read", 40),
STACK_USAGE("full_proxy_write", 40),
STACK_USAGE("full_proxy_unlocked_ioctl", 32),
STACK_USAGE("full_proxy_poll", 32),
STACK_USAGE("full_proxy_release", 40),
STACK_USAGE("full_proxy_open", 48),
STACK_USAGE("default_read_file", 0),
STACK_USAGE("default_write_file", 0),
STACK_USAGE("debugfs_attr_read", 40),
STACK_USAGE("debugfs_attr_write", 40),
STACK_USAGE("debugfs_u8_set", 0),
STACK_USAGE("debugfs_u8_get", 0),
STACK_USAGE("fops_u8_open", 0),
STACK_USAGE("fops_u8_ro_open", 0),
STACK_USAGE("fops_u8_wo_open", 0),
STACK_USAGE("debugfs_create_u8", 0),
STACK_USAGE("debugfs_u16_set", 0),
STACK_USAGE("debugfs_u16_get", 0),
STACK_USAGE("fops_u16_open", 0),
STACK_USAGE("fops_u16_ro_open", 0),
STACK_USAGE("fops_u16_wo_open", 0),
STACK_USAGE("debugfs_create_u16", 0),
STACK_USAGE("debugfs_u32_set", 0),
STACK_USAGE("debugfs_u32_get", 0),
STACK_USAGE("fops_u32_open", 0),
STACK_USAGE("fops_u32_ro_open", 0),
STACK_USAGE("fops_u32_wo_open", 0),
STACK_USAGE("debugfs_real_fops", 0),
STACK_USAGE("debugfs_create_u32", 0),
STACK_USAGE("debugfs_u64_set", 0),
STACK_USAGE("debugfs_u64_get", 0),
STACK_USAGE("fops_u64_open", 0),
STACK_USAGE("fops_u64_ro_open", 0),
STACK_USAGE("fops_u64_wo_open", 0),
STACK_USAGE("debugfs_create_u64", 0),
STACK_USAGE("debugfs_ulong_set", 0),
STACK_USAGE("debugfs_ulong_get", 0),
STACK_USAGE("fops_ulong_open", 0),
STACK_USAGE("fops_ulong_ro_open", 0),
STACK_USAGE("fops_ulong_wo_open", 0),
STACK_USAGE("debugfs_create_ulong", 0),
STACK_USAGE("fops_x8_open", 0),
STACK_USAGE("fops_x8_ro_open", 0),
STACK_USAGE("fops_x8_wo_open", 0),
STACK_USAGE("fops_x16_open", 0),
STACK_USAGE("fops_x16_ro_open", 0),
STACK_USAGE("fops_x16_wo_open", 0),
STACK_USAGE("fops_x32_open", 0),
STACK_USAGE("fops_x32_ro_open", 0),
STACK_USAGE("fops_x32_wo_open", 0),
STACK_USAGE("fops_x64_open", 0),
STACK_USAGE("fops_x64_ro_open", 0),
STACK_USAGE("fops_x64_wo_open", 0),
STACK_USAGE("debugfs_create_x8", 0),
STACK_USAGE("debugfs_create_x16", 0),
STACK_USAGE("debugfs_create_x32", 0),
STACK_USAGE("debugfs_create_x64", 0),
STACK_USAGE("debugfs_size_t_set", 0),
STACK_USAGE("debugfs_size_t_get", 0),
STACK_USAGE("fops_size_t_open", 0),
STACK_USAGE("fops_size_t_ro_open", 0),
STACK_USAGE("fops_size_t_wo_open", 0),
STACK_USAGE("debugfs_create_size_t", 0),
STACK_USAGE("debugfs_atomic_t_set", 0),
STACK_USAGE("debugfs_atomic_t_get", 0),
STACK_USAGE("fops_atomic_t_open", 0),
STACK_USAGE("fops_atomic_t_ro_open", 0),
STACK_USAGE("fops_atomic_t_wo_open", 0),
STACK_USAGE("debugfs_create_atomic_t", 0),
STACK_USAGE("debugfs_read_file_bool", 64),
STACK_USAGE("debugfs_write_file_bool", 40),
STACK_USAGE("debugfs_file_get", 24),
STACK_USAGE("debugfs_create_bool", 0),
STACK_USAGE("debugfs_read_file_str", 56),
STACK_USAGE("debugfs_write_file_str", 0),
STACK_USAGE("debugfs_create_str", 0),
STACK_USAGE("read_file_blob", 40),
STACK_USAGE("debugfs_create_blob", 0),
STACK_USAGE("debugfs_parse_options", 120),
STACK_USAGE("fsnotify_move", 64),
STACK_USAGE("debugfs_remount", 24),
STACK_USAGE("debugfs_show_options", 16),
STACK_USAGE("debugfs_free_inode", 8),
STACK_USAGE("debugfs_release_dentry", 0),
STACK_USAGE("debugfs_automount", 0),
STACK_USAGE("debug_fill_super", 24),
STACK_USAGE("debug_mount", 0),
STACK_USAGE("debugfs_lookup", 16),
STACK_USAGE("start_creating", 32),
STACK_USAGE("failed_creating", 8),
STACK_USAGE("__debugfs_create_file", 56),
STACK_USAGE("debugfs_create_file", 0),
STACK_USAGE("debugfs_setattr", 16),
STACK_USAGE("debugfs_create_file_unsafe", 0),
STACK_USAGE("debugfs_create_file_size", 8),
STACK_USAGE("debugfs_create_dir", 24),
STACK_USAGE("debugfs_create_automount", 40),
STACK_USAGE("debugfs_create_symlink", 32),
STACK_USAGE("remove_one", 8),
STACK_USAGE("debugfs_remove", 8),
STACK_USAGE("debugfs_rename", 96),
STACK_USAGE("debugfs_initialized", 0),
STACK_USAGE("debugfs_kernel", 8),
STACK_USAGE("debugfs_init", 8),
STACK_USAGE("devpts_mntget", 40),
STACK_USAGE("devpts_acquire", 32),
STACK_USAGE("devpts_release", 0),
STACK_USAGE("parse_mount_options", 120),
STACK_USAGE("devpts_remount", 8),
STACK_USAGE("devpts_show_options", 16),
STACK_USAGE("devpts_fill_super", 72),
STACK_USAGE("devpts_mount", 0),
STACK_USAGE("devpts_kill_sb", 16),
STACK_USAGE("devpts_new_index", 0),
STACK_USAGE("devpts_kill_index", 0),
STACK_USAGE("devpts_pty_new", 72),
STACK_USAGE("devpts_get_priv", 0),
STACK_USAGE("devpts_pty_kill", 8),
STACK_USAGE("init_devpts_fs", 8),
STACK_USAGE("__blockdev_direct_IO", 528),
STACK_USAGE("dio_init", 0),
STACK_USAGE("dio_complete", 40),
STACK_USAGE("dio_aio_complete_work", 0),
STACK_USAGE("dio_bio_end_aio", 32),
STACK_USAGE("dio_bio_end_io", 32),
STACK_USAGE("dio_await_one", 24),
STACK_USAGE("sb_init_dio_done_wq", 16),
STACK_USAGE("dio_new_bio", 64),
STACK_USAGE("dio_send_cur_page", 40),
STACK_USAGE("submit_page_section", 64),
STACK_USAGE("drop_pagecache_sb", 48),
STACK_USAGE("drop_caches_sysctl_handler", 16),
STACK_USAGE("efivarfs_file_write", 88),
STACK_USAGE("efivarfs_file_read", 72),
STACK_USAGE("efivarfs_unlink", 8),
STACK_USAGE("efivarfs_fileattr_get", 0),
STACK_USAGE("efivarfs_fileattr_set", 0),
STACK_USAGE("efivarfs_get_inode", 24),
STACK_USAGE("efivarfs_valid_name", 0),
STACK_USAGE("efivarfs_create", 64),
STACK_USAGE("efivarfs_callback", 104),
STACK_USAGE("efivarfs_destroy", 16),
STACK_USAGE("efivarfs_fill_super", 16),
STACK_USAGE("efivarfs_evict_inode", 0),
STACK_USAGE("efivarfs_get_tree", 0),
STACK_USAGE("efivarfs_init_fs_context", 0),
STACK_USAGE("efivarfs_kill_sb", 0),
STACK_USAGE("efivarfs_init", 0),
STACK_USAGE("efivarfs_exit", 0),
STACK_USAGE("efivarfs_d_compare", 24),
STACK_USAGE("efivarfs_d_hash", 32),
STACK_USAGE("eventfd_ctx_put", 8),
STACK_USAGE("eventfd_release", 8),
STACK_USAGE("eventfd_poll", 8),
STACK_USAGE("eventfd_ctx_do_read", 16),
STACK_USAGE("eventfd_ctx_remove_wait_queue", 40),
STACK_USAGE("eventfd_read", 104),
STACK_USAGE("eventfd_write", 96),
STACK_USAGE("eventfd_show_fdinfo", 24),
STACK_USAGE("eventfd_fget", 0),
STACK_USAGE("eventfd_ctx_fdget", 24),
STACK_USAGE("eventfd_ctx_fileget", 8),
STACK_USAGE("do_eventfd", 32),
STACK_USAGE("__ia32_sys_eventfd2", 0),
STACK_USAGE("__x64_sys_eventfd2", 0),
STACK_USAGE("__ia32_sys_eventfd", 0),
STACK_USAGE("__x64_sys_eventfd", 0),
STACK_USAGE("eventfd_signal", 40),
STACK_USAGE("get_epoll_tfile_raw_ptr", 40),
STACK_USAGE("ep_poll_callback", 72),
STACK_USAGE("ep_ptable_queue_proc", 32),
STACK_USAGE("reverse_path_check_proc", 32),
STACK_USAGE("ep_destroy_wakeup_source", 16),
STACK_USAGE("ep_insert", 144),
STACK_USAGE("ep_modify", 104),
STACK_USAGE("ep_poll", 208),
STACK_USAGE("ep_loop_check_proc", 48),
STACK_USAGE("do_epoll_create", 32),
STACK_USAGE("__ia32_sys_epoll_create1", 0),
STACK_USAGE("__x64_sys_epoll_create1", 0),
STACK_USAGE("__ia32_sys_epoll_create", 0),
STACK_USAGE("__x64_sys_epoll_create", 0),
STACK_USAGE("epoll_mutex_lock", 8),
STACK_USAGE("do_epoll_ctl", 80),
STACK_USAGE("__ia32_sys_epoll_ctl", 48),
STACK_USAGE("__x64_sys_epoll_ctl", 48),
STACK_USAGE("do_epoll_wait", 48),
STACK_USAGE("__ia32_sys_epoll_wait", 80),
STACK_USAGE("__x64_sys_epoll_wait", 80),
STACK_USAGE("__ia32_sys_epoll_pwait", 0),
STACK_USAGE("__se_sys_epoll_pwait", 96),
STACK_USAGE("__x64_sys_epoll_pwait", 0),
STACK_USAGE("__ia32_sys_epoll_pwait2", 0),
STACK_USAGE("__se_sys_epoll_pwait2", 72),
STACK_USAGE("__x64_sys_epoll_pwait2", 0),
STACK_USAGE("__ia32_compat_sys_epoll_pwait", 96),
STACK_USAGE("__ia32_compat_sys_epoll_pwait2", 72),
STACK_USAGE("eventpoll_init", 128),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("ep_busy_loop_end", 8),
STACK_USAGE("ep_unregister_pollwait", 16),
STACK_USAGE("ep_pm_stay_awake_rcu", 8),
STACK_USAGE("ep_done_scan", 48),
STACK_USAGE("epi_rcu_free", 0),
STACK_USAGE("ep_remove", 40),
STACK_USAGE("ep_free", 24),
STACK_USAGE("ep_eventpoll_release", 0),
STACK_USAGE("__ep_eventpoll_poll", 96),
STACK_USAGE("ep_eventpoll_poll", 0),
STACK_USAGE("ep_show_fdinfo", 24),
STACK_USAGE("eventpoll_release_file", 24),
STACK_USAGE("de_thread", 32),
STACK_USAGE("path_noexec", 0),
STACK_USAGE("unshare_sighand", 32),
STACK_USAGE("__get_task_comm", 32),
STACK_USAGE("__set_task_comm", 32),
STACK_USAGE("__ia32_sys_uselib", 0),
STACK_USAGE("__se_sys_uselib", 40),
STACK_USAGE("__x64_sys_uselib", 0),
STACK_USAGE("begin_new_exec", 72),
STACK_USAGE("would_dump", 48),
STACK_USAGE("setup_new_exec", 8),
STACK_USAGE("finalize_exec", 24),
STACK_USAGE("free_bprm", 8),
STACK_USAGE("alloc_bprm", 56),
STACK_USAGE("bprm_change_interp", 16),
STACK_USAGE("remove_arg_zero", 24),
STACK_USAGE("bprm_execve", 80),
STACK_USAGE("do_execveat_common", 72),
STACK_USAGE("acct_arg_size", 0),
STACK_USAGE("kernel_execve", 56),
STACK_USAGE("get_arg_page", 56),
STACK_USAGE("set_binfmt", 16),
STACK_USAGE("set_dumpable", 0),
STACK_USAGE("__ia32_sys_execve", 16),
STACK_USAGE("__x64_sys_execve", 16),
STACK_USAGE("__ia32_sys_execveat", 32),
STACK_USAGE("__x64_sys_execveat", 32),
STACK_USAGE("__ia32_compat_sys_execve", 16),
STACK_USAGE("__ia32_compat_sys_execveat", 32),
STACK_USAGE("proc_dointvec_minmax_coredump", 8),
STACK_USAGE("init_fs_exec_sysctls", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("count", 32),
STACK_USAGE("copy_strings", 104),
STACK_USAGE("copy_string_kernel", 56),
STACK_USAGE("cgroup_threadgroup_change_begin", 0),
STACK_USAGE("cgroup_threadgroup_change_end", 0),
STACK_USAGE("setup_arg_pages", 248),
STACK_USAGE("__register_binfmt", 16),
STACK_USAGE("do_open_execat", 56),
STACK_USAGE("open_exec", 16),
STACK_USAGE("unregister_binfmt", 8),
STACK_USAGE("exec_mmap", 72),
STACK_USAGE("reconnect_path", 48),
STACK_USAGE("filldir_one", 16),
STACK_USAGE("exportfs_get_name", 256),
STACK_USAGE("exportfs_encode_inode_fh", 0),
STACK_USAGE("exportfs_encode_fh", 40),
STACK_USAGE("exportfs_decode_fh_raw", 344),
STACK_USAGE("find_acceptable_alias", 48),
STACK_USAGE("exportfs_decode_fh", 0),
STACK_USAGE("ext4_get_acl", 56),
STACK_USAGE("__ext4_set_acl", 88),
STACK_USAGE("ext4_set_acl", 88),
STACK_USAGE("ext4_init_acl", 48),
STACK_USAGE("trace_ext4_read_block_bitmap_load", 0),
STACK_USAGE("ext4_init_block_bitmap", 64),
STACK_USAGE("ext4_free_clusters_after_init", 96),
STACK_USAGE("ext4_get_group_desc", 56),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("ext4_has_group_desc_csum", 0),
STACK_USAGE("ext4_get_group_info", 32),
STACK_USAGE("ext4_lock_group", 16),
STACK_USAGE("ext4_get_group_number", 0),
STACK_USAGE("ext4_validate_block_bitmap", 80),
STACK_USAGE("ext4_read_block_bitmap_nowait", 48),
STACK_USAGE("ext4_wait_block_bitmap", 32),
STACK_USAGE("ext4_get_group_no_and_offset", 0),
STACK_USAGE("ext4_read_block_bitmap", 24),
STACK_USAGE("ext4_has_free_clusters", 64),
STACK_USAGE("ext4_claim_free_clusters", 16),
STACK_USAGE("ext4_should_retry_alloc", 16),
STACK_USAGE("ext4_new_meta_blocks", 104),
STACK_USAGE("ext4_count_free_clusters", 40),
STACK_USAGE("ext4_bg_has_super", 0),
STACK_USAGE("ext4_bg_num_gdb", 8),
STACK_USAGE("ext4_num_base_meta_clusters", 16),
STACK_USAGE("ext4_inode_to_goal_block", 0),
STACK_USAGE("ext4_count_free", 8),
STACK_USAGE("ext4_inode_bitmap_csum_verify", 48),
STACK_USAGE("ext4_inode_bitmap_csum_set", 40),
STACK_USAGE("ext4_block_bitmap_csum_verify", 48),
STACK_USAGE("ext4_block_bitmap_csum_set", 40),
STACK_USAGE("ext4_destroy_system_zone", 24),
STACK_USAGE("ext4_setup_system_zone", 112),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("ext4_release_system_zone", 8),
STACK_USAGE("ext4_sb_block_valid", 40),
STACK_USAGE("ext4_init_system_zone", 8),
STACK_USAGE("ext4_inode_block_valid", 0),
STACK_USAGE("ext4_check_blockref", 56),
STACK_USAGE("ext4_exit_system_zone", 0),
STACK_USAGE("add_system_zone", 56),
STACK_USAGE("ext4_readdir", 168),
STACK_USAGE("ext4_dir_llseek", 16),
STACK_USAGE("ext4_htree_free_dir_info", 32),
STACK_USAGE("ext4_htree_store_dirent", 48),
STACK_USAGE("ext4_release_dir", 32),
STACK_USAGE("ext4_check_all_de", 56),
STACK_USAGE("__ext4_check_dir_entry", 48),
STACK_USAGE("__ext4_journal_stop", 40),
STACK_USAGE("ext4_inode_journal_mode", 0),
STACK_USAGE("__ext4_journal_start_reserved", 40),
STACK_USAGE("__ext4_journal_ensure_credits", 16),
STACK_USAGE("ext4_journal_abort_handle", 72),
STACK_USAGE("__ext4_journal_get_write_access", 120),
STACK_USAGE("__ext4_forget", 88),
STACK_USAGE("__ext4_journal_get_create_access", 88),
STACK_USAGE("__ext4_handle_dirty_metadata", 56),
STACK_USAGE("ext4_journal_check_start", 8),
STACK_USAGE("__ext4_journal_start_sb", 48),
STACK_USAGE("ext4_datasem_ensure_credits", 40),
STACK_USAGE("ext4_ext_get_access", 8),
STACK_USAGE("trace_ext4_fallocate_enter", 0),
STACK_USAGE("trace_ext4_fallocate_exit", 0),
STACK_USAGE("ext4_ext_search_right", 56),
STACK_USAGE("trace_ext4_ext_convert_to_initialized_fastpath", 0),
STACK_USAGE("ext4_ext_next_allocated_block", 0),
STACK_USAGE("__ext4_ext_dirty", 40),
STACK_USAGE("ext4_ext_correct_indexes", 56),
STACK_USAGE("ext4_es_is_delayed", 0),
STACK_USAGE("ext4_ext_try_to_merge_right", 56),
STACK_USAGE("ext4_ext_try_to_merge", 40),
STACK_USAGE("trace_ext4_get_implied_cluster_alloc_exit", 0),
STACK_USAGE("ext4_ext_check_overlap", 32),
STACK_USAGE("ext4_ext_find_goal", 0),
STACK_USAGE("ext4_ext_insert_extent", 192),
STACK_USAGE("ext4_ext_rm_idx", 64),
STACK_USAGE("memalloc_retry_wait", 0),
STACK_USAGE("ext4_ext_calc_credits_for_single_extent", 0),
STACK_USAGE("ext4_ext_index_trans_blocks", 0),
STACK_USAGE("ext4_ext_remove_space", 312),
STACK_USAGE("ext4_ext_init", 0),
STACK_USAGE("ext4_ext_release", 0),
STACK_USAGE("ext4_zeroout_es", 0),
STACK_USAGE("ext4_ext_zeroout", 0),
STACK_USAGE("ext4_split_extent_at", 192),
STACK_USAGE("ext4_split_extent", 72),
STACK_USAGE("ext4_update_inode_size", 32),
STACK_USAGE("get_implied_cluster_alloc", 32),
STACK_USAGE("ext4_ext_map_blocks", 288),
STACK_USAGE("__ext4_ext_check", 120),
STACK_USAGE("ext4_ext_truncate", 24),
STACK_USAGE("ext4_update_inode_fsync_trans", 0),
STACK_USAGE("ext4_alloc_file_blocks", 136),
STACK_USAGE("ext4_zero_range", 136),
STACK_USAGE("ext4_fallocate", 112),
STACK_USAGE("ext4_convert_unwritten_extents", 80),
STACK_USAGE("ext4_convert_unwritten_io_end_vec", 48),
STACK_USAGE("ext4_iomap_xattr_begin", 72),
STACK_USAGE("ext4_fiemap", 32),
STACK_USAGE("ext4_ext_check_inode", 0),
STACK_USAGE("ext4_get_es_cache", 112),
STACK_USAGE("ext4_ext_shift_extents", 176),
STACK_USAGE("__read_extent_tree_block", 72),
STACK_USAGE("ext4_swap_extents", 136),
STACK_USAGE("ext4_ext_precache", 56),
STACK_USAGE("ext4_clu_mapped", 48),
STACK_USAGE("ext4_ext_replay_update_ex", 88),
STACK_USAGE("ext4_ext_replay_shrink_inode", 56),
STACK_USAGE("ext4_ext_replay_set_iblocks", 120),
STACK_USAGE("ext4_ext_clear_bb", 80),
STACK_USAGE("ext4_ext_drop_refs", 24),
STACK_USAGE("ext4_extent_block_csum_set", 40),
STACK_USAGE("ext4_ext_tree_init", 0),
STACK_USAGE("ext4_find_extent", 88),
STACK_USAGE("ext4_ext_insert_index", 72),
STACK_USAGE("count_rsvd", 0),
STACK_USAGE("__es_remove_extent", 232),
STACK_USAGE("ext4_es_remove_extent", 56),
STACK_USAGE("__es_shrink", 104),
STACK_USAGE("ext4_es_count", 8),
STACK_USAGE("ext4_es_scan", 32),
STACK_USAGE("ext4_init_es", 8),
STACK_USAGE("ext4_seq_es_shrinker_info_show", 48),
STACK_USAGE("ext4_es_register_shrinker", 56),
STACK_USAGE("ext4_exit_es", 0),
STACK_USAGE("ext4_es_unregister_shrinker", 8),
STACK_USAGE("es_do_reclaim_extents", 64),
STACK_USAGE("ext4_es_init_tree", 0),
STACK_USAGE("es_reclaim_extents", 40),
STACK_USAGE("ext4_clear_inode_es", 40),
STACK_USAGE("ext4_init_pending", 8),
STACK_USAGE("ext4_exit_pending", 0),
STACK_USAGE("ext4_init_pending_tree", 0),
STACK_USAGE("ext4_remove_pending", 32),
STACK_USAGE("ext4_is_pending", 32),
STACK_USAGE("ext4_es_insert_delayed_block", 104),
STACK_USAGE("ext4_es_delayed_clu", 64),
STACK_USAGE("__es_find_extent_range", 48),
STACK_USAGE("ext4_es_find_extent_range", 48),
STACK_USAGE("ext4_es_scan_range", 88),
STACK_USAGE("ext4_es_scan_clu", 88),
STACK_USAGE("ext4_es_free_extent", 32),
STACK_USAGE("__es_insert_extent", 64),
STACK_USAGE("ext4_es_insert_extent", 144),
STACK_USAGE("ext4_es_cache_extent", 80),
STACK_USAGE("ext4_es_lookup_extent", 56),
STACK_USAGE("ext4_fc_update_stats", 0),
STACK_USAGE("ext4_fc_commit", 256),
STACK_USAGE("ext4_fc_cleanup", 72),
STACK_USAGE("ext4_fc_replay_link_internal", 64),
STACK_USAGE("ext4_fc_record_regions", 48),
STACK_USAGE("ext4_end_buffer_io_sync", 0),
STACK_USAGE("ext4_fc_set_bitmaps_and_counters", 104),
STACK_USAGE("ext4_fc_replay_check_excluded", 0),
STACK_USAGE("ext4_fc_init_inode", 8),
STACK_USAGE("ext4_fc_replay_cleanup", 8),
STACK_USAGE("ext4_fc_wait_committing_inode", 96),
STACK_USAGE("ext4_fc_replay", 184),
STACK_USAGE("ext4_fc_init", 0),
STACK_USAGE("ext4_fc_info_show", 16),
STACK_USAGE("ext4_fc_init_dentry_cache", 8),
STACK_USAGE("ext4_fc_destroy_dentry_cache", 0),
STACK_USAGE("ext4_fc_start_update", 24),
STACK_USAGE("ext4_fc_stop_update", 0),
STACK_USAGE("trace_ext4_fc_replay", 0),
STACK_USAGE("ext4_fc_del", 32),
STACK_USAGE("trace_ext4_fc_track_inode", 0),
STACK_USAGE("ext4_fc_mark_ineligible", 32),
STACK_USAGE("ext4_fc_track_template", 56),
STACK_USAGE("__track_dentry_update", 56),
STACK_USAGE("__ext4_fc_track_unlink", 64),
STACK_USAGE("ext4_fc_track_unlink", 0),
STACK_USAGE("__ext4_fc_track_link", 64),
STACK_USAGE("ext4_fc_track_link", 0),
STACK_USAGE("__ext4_fc_track_create", 64),
STACK_USAGE("ext4_fc_track_create", 0),
STACK_USAGE("__track_inode", 0),
STACK_USAGE("ext4_fc_track_inode", 24),
STACK_USAGE("ext4_fc_track_range", 64),
STACK_USAGE("ext4_fc_submit_bh", 32),
STACK_USAGE("ext4_fc_reserve_space", 80),
STACK_USAGE("ext4_fc_add_tlv", 80),
STACK_USAGE("ext4_fc_add_dentry_tlv", 80),
STACK_USAGE("ext4_fc_write_inode", 104),
STACK_USAGE("ext4_fc_write_inode_data", 120),
STACK_USAGE("ext4_file_read_iter", 32),
STACK_USAGE("ext4_release_file", 24),
STACK_USAGE("sb_end_intwrite", 8),
STACK_USAGE("sb_start_intwrite_trylock", 24),
STACK_USAGE("ext4_buffered_write_iter", 48),
STACK_USAGE("lock_buffer", 8),
STACK_USAGE("ext4_dio_write_end_io", 24),
STACK_USAGE("ext4_file_write_iter", 120),
STACK_USAGE("ext4_file_mmap", 8),
STACK_USAGE("ext4_file_open", 152),
STACK_USAGE("ext4_llseek", 40),
STACK_USAGE("ext4_fsmap_from_internal", 0),
STACK_USAGE("ext4_getfsmap_datadev_helper", 136),
STACK_USAGE("trace_ext4_fsmap_low_key", 0),
STACK_USAGE("trace_ext4_fsmap_high_key", 0),
STACK_USAGE("trace_ext4_fsmap_mapping", 0),
STACK_USAGE("ext4_getfsmap_logdev", 96),
STACK_USAGE("ext4_fsmap_to_internal", 0),
STACK_USAGE("ext4_getfsmap_compare", 0),
STACK_USAGE("ext4_getfsmap_datadev", 128),
STACK_USAGE("ext4_getfsmap", 408),
STACK_USAGE("ext4_getfsmap_dev_compare", 0),
STACK_USAGE("ext4_getfsmap_helper", 104),
STACK_USAGE("ext4_sync_file", 48),
STACK_USAGE("str2hashbuf_signed", 8),
STACK_USAGE("str2hashbuf_unsigned", 16),
STACK_USAGE("ext4fs_dirhash", 168),
STACK_USAGE("ext4_read_inode_bitmap", 56),
STACK_USAGE("trace_ext4_load_inode_bitmap", 0),
STACK_USAGE("ext4_orphan_get", 64),
STACK_USAGE("ext4_count_free_inodes", 32),
STACK_USAGE("ext4_count_dirs", 32),
STACK_USAGE("ext4_init_inode_table", 96),
STACK_USAGE("trace_ext4_allocate_inode", 0),
STACK_USAGE("ext4_free_inode", 104),
STACK_USAGE("ext4_chksum", 24),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("ext4_has_metadata_csum", 0),
STACK_USAGE("ext4_has_group_desc_csum", 0),
STACK_USAGE("ext4_get_group_info", 32),
STACK_USAGE("ext4_lock_group", 16),
STACK_USAGE("get_orlov_stats", 32),
STACK_USAGE("find_group_orlov", 176),
STACK_USAGE("ext4_mark_bitmap_end", 0),
STACK_USAGE("ext4_end_bitmap_read", 8),
STACK_USAGE("find_inode_bit", 72),
STACK_USAGE("rcu_read_unlock", 0),
STACK_USAGE("ext4_mark_inode_used", 80),
STACK_USAGE("ext4_xattr_credits_for_new_inode", 40),
STACK_USAGE("__ext4_new_inode", 200),
STACK_USAGE("ext4_ind_truncate", 200),
STACK_USAGE("ext4_ind_remove_space", 344),
STACK_USAGE("ext4_get_branch", 64),
STACK_USAGE("ext4_splice_branch", 48),
STACK_USAGE("ext4_update_inode_fsync_trans", 0),
STACK_USAGE("ext4_ind_map_blocks", 376),
STACK_USAGE("ext4_ind_trans_blocks", 0),
STACK_USAGE("ext4_ind_truncate_ensure_credits", 48),
STACK_USAGE("ext4_find_shared", 48),
STACK_USAGE("ext4_clear_blocks", 72),
STACK_USAGE("ext4_free_data", 48),
STACK_USAGE("ext4_free_branches", 72),
STACK_USAGE("ext4_add_dirent_to_inline", 64),
STACK_USAGE("ext4_finish_convert_inline_dir", 56),
STACK_USAGE("ext4_convert_inline_data_nolock", 96),
STACK_USAGE("put_page", 0),
STACK_USAGE("ext4_find_inline_data_nolock", 120),
STACK_USAGE("ext4_try_add_inline_entry", 88),
STACK_USAGE("ext4_inlinedir_to_tree", 424),
STACK_USAGE("ext4_read_inline_dir", 128),
STACK_USAGE("ext4_get_first_inline_block", 48),
STACK_USAGE("ext4_try_create_inline_dir", 64),
STACK_USAGE("ext4_find_inline_entry", 72),
STACK_USAGE("ext4_delete_inline_entry", 104),
STACK_USAGE("empty_inline_dir", 80),
STACK_USAGE("ext4_destroy_inline_data", 32),
STACK_USAGE("ext4_inline_data_iomap", 64),
STACK_USAGE("ext4_inline_data_truncate", 168),
STACK_USAGE("ext4_convert_inline_data", 72),
STACK_USAGE("memalloc_retry_wait", 0),
STACK_USAGE("ext4_create_inline_data", 144),
STACK_USAGE("zero_user_segment", 8),
STACK_USAGE("ext4_update_inline_data", 152),
STACK_USAGE("lock_buffer", 8),
STACK_USAGE("ext4_prepare_inline_data", 48),
STACK_USAGE("ext4_destroy_inline_data_nolock", 136),
STACK_USAGE("ext4_read_inline_page", 96),
STACK_USAGE("ext4_readpage_inline", 24),
STACK_USAGE("ext4_try_to_write_inline_data", 144),
STACK_USAGE("PageUptodate", 0),
STACK_USAGE("ext4_write_inline_data_end", 136),
STACK_USAGE("ext4_journalled_write_inline_data", 104),
STACK_USAGE("ext4_da_write_inline_data_begin", 120),
STACK_USAGE("ext4_get_max_inline_size", 64),
STACK_USAGE("do_journal_get_write_access", 24),
STACK_USAGE("ext4_inode_csum_set", 24),
STACK_USAGE("ext4_write_begin", 168),
STACK_USAGE("ext4_begin_ordered_truncate", 16),
STACK_USAGE("ext4_write_end", 88),
STACK_USAGE("ext4_journalled_zero_new_buffers", 56),
STACK_USAGE("ext4_journalled_write_end", 120),
STACK_USAGE("ext4_da_reserve_space", 24),
STACK_USAGE("ext4_da_release_space", 32),
STACK_USAGE("ext4_inode_is_fast_symlink", 0),
STACK_USAGE("mpage_release_unused_pages", 192),
STACK_USAGE("ext4_print_free_blocks", 24),
STACK_USAGE("ext4_evict_inode", 48),
STACK_USAGE("folio_size", 0),
STACK_USAGE("ext4_es_is_delayed", 0),
STACK_USAGE("trace_ext4_load_inode", 0),
STACK_USAGE("ext4_da_get_block_prep", 128),
STACK_USAGE("ext4_es_is_mapped", 0),
STACK_USAGE("ext4_es_is_delonly", 0),
STACK_USAGE("ext4_writepage", 128),
STACK_USAGE("mpage_process_page_bufs", 40),
STACK_USAGE("ext4_chksum", 24),
STACK_USAGE("mpage_prepare_extent_to_map", 208),
STACK_USAGE("ext4_writepages", 464),
STACK_USAGE("zero_user", 8),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("ext4_da_write_begin", 120),
STACK_USAGE("ext4_da_write_end", 80),
STACK_USAGE("ext4_alloc_da_blocks", 8),
STACK_USAGE("ext4_blocks_for_truncate", 0),
STACK_USAGE("ext4_bmap", 32),
STACK_USAGE("ext4_readpage", 16),
STACK_USAGE("ext4_readahead", 0),
STACK_USAGE("ext4_invalidate_folio", 24),
STACK_USAGE("__ext4_journalled_invalidate_folio", 32),
STACK_USAGE("ext4_journalled_invalidate_folio", 0),
STACK_USAGE("ext4_releasepage", 16),
STACK_USAGE("ext4_set_iomap", 48),
STACK_USAGE("ext4_has_metadata_csum", 0),
STACK_USAGE("ext4_has_group_desc_csum", 0),
STACK_USAGE("ext4_iomap_begin", 128),
STACK_USAGE("ext4_iomap_overwrite_begin", 8),
STACK_USAGE("ext4_get_reserved_space", 0),
STACK_USAGE("ext4_iomap_end", 0),
STACK_USAGE("ext4_iomap_begin_report", 128),
STACK_USAGE("wait_on_buffer", 8),
STACK_USAGE("ext4_da_update_reserve_space", 40),
STACK_USAGE("ext4_journalled_dirty_folio", 0),
STACK_USAGE("ext4_dirty_folio", 0),
STACK_USAGE("ext4_iomap_swap_activate", 0),
STACK_USAGE("ext4_set_aops", 8),
STACK_USAGE("ext4_block_zero_page_range", 72),
STACK_USAGE("ext4_zero_partial_blocks", 48),
STACK_USAGE("ext4_can_truncate", 0),
STACK_USAGE("ext4_update_disksize_before_punch", 32),
STACK_USAGE("ext4_break_layouts", 0),
STACK_USAGE("ext4_punch_hole", 88),
STACK_USAGE("ext4_inode_attach_jinode", 32),
STACK_USAGE("ext4_truncate", 48),
STACK_USAGE("ext4_issue_zeroout", 0),
STACK_USAGE("ext4_fill_raw_inode", 40),
STACK_USAGE("ext4_update_inode_fsync_trans", 0),
STACK_USAGE("__ext4_get_inode_loc", 152),
STACK_USAGE("ext4_get_inode_loc", 32),
STACK_USAGE("ext4_get_fc_inode_loc", 0),
STACK_USAGE("ext4_set_inode_flags", 24),
STACK_USAGE("ext4_inode_blocks", 0),
STACK_USAGE("ext4_iget_extra_inode", 0),
STACK_USAGE("ext4_get_projid", 0),
STACK_USAGE("__ext4_iget", 136),
STACK_USAGE("percpu_down_read", 8),
STACK_USAGE("ext4_map_blocks", 104),
STACK_USAGE("ext4_should_dioread_nolock", 16),
STACK_USAGE("ext4_write_inode", 64),
STACK_USAGE("ext4_wait_for_tail_page_commit", 48),
STACK_USAGE("ext4_setattr", 104),
STACK_USAGE("ext4_inode_csum", 64),
STACK_USAGE("ext4_getattr", 0),
STACK_USAGE("ext4_file_getattr", 16),
STACK_USAGE("ext4_writepage_trans_blocks", 24),
STACK_USAGE("ext4_chunk_trans_blocks", 16),
STACK_USAGE("ext4_mark_iloc_dirty", 136),
STACK_USAGE("ext4_reserve_inode_write", 48),
STACK_USAGE("ext4_expand_extra_isize", 56),
STACK_USAGE("__ext4_mark_inode_dirty", 104),
STACK_USAGE("ext4_dirty_inode", 16),
STACK_USAGE("ext4_change_inode_journal_flag", 40),
STACK_USAGE("ext4_page_mkwrite", 112),
STACK_USAGE("PageUptodate", 0),
STACK_USAGE("_ext4_get_block", 48),
STACK_USAGE("ext4_get_block", 0),
STACK_USAGE("ext4_get_block_unwritten", 0),
STACK_USAGE("ext4_getblk", 64),
STACK_USAGE("ext4_inode_csum_verify", 32),
STACK_USAGE("ext4_bread", 8),
STACK_USAGE("ext4_bread_batch", 56),
STACK_USAGE("ext4_walk_page_buffers", 72),
STACK_USAGE("percpu_up_read", 8),
STACK_USAGE("ext4_ioctl", 424),
STACK_USAGE("ext4_compat_ioctl", 96),
STACK_USAGE("set_overhead", 0),
STACK_USAGE("ext4_update_overhead", 0),
STACK_USAGE("ext4_update_superblocks_fn", 112),
STACK_USAGE("trace_ext4_update_sb", 0),
STACK_USAGE("swap_inode_data", 40),
STACK_USAGE("ext4_reset_inode_seed", 48),
STACK_USAGE("ext4_sb_setlabel", 0),
STACK_USAGE("ext4_dax_dontcache", 0),
STACK_USAGE("ext4_getfsmap_format", 96),
STACK_USAGE("ext4_ioctl_group_add", 40),
STACK_USAGE("ext4_fileattr_get", 16),
STACK_USAGE("ext4_fileattr_set", 152),
STACK_USAGE("mb_set_largest_free_order", 24),
STACK_USAGE("ext4_mb_generate_buddy", 144),
STACK_USAGE("trace_ext4_mballoc_discard", 0),
STACK_USAGE("ext4_mb_init_cache", 152),
STACK_USAGE("ext4_mb_init_group", 72),
STACK_USAGE("ext4_mb_load_buddy_gfp", 72),
STACK_USAGE("ext4_mb_unload_buddy", 8),
STACK_USAGE("mb_clear_bits", 0),
STACK_USAGE("mb_set_bits", 0),
STACK_USAGE("mb_free_blocks", 104),
STACK_USAGE("mb_find_extent", 48),
STACK_USAGE("mb_mark_used", 40),
STACK_USAGE("ext4_mb_use_best_found", 32),
STACK_USAGE("ext4_mb_try_best_found", 72),
STACK_USAGE("ext4_mb_find_by_goal", 72),
STACK_USAGE("ext4_mb_simple_scan_group", 64),
STACK_USAGE("ext4_mb_complex_scan_group", 128),
STACK_USAGE("ext4_mb_scan_aligned", 80),
STACK_USAGE("ext4_mb_good_group", 32),
STACK_USAGE("ext4_mb_prefetch", 104),
STACK_USAGE("ext4_mb_prefetch_fini", 32),
STACK_USAGE("ext4_mb_regular_allocator", 208),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("ext4_mb_seq_groups_start", 0),
STACK_USAGE("ext4_mb_seq_groups_next", 0),
STACK_USAGE("ext4_mb_seq_groups_show", 424),
STACK_USAGE("ext4_mb_seq_groups_stop", 0),
STACK_USAGE("ext4_seq_mb_stats_show", 24),
STACK_USAGE("ext4_mb_seq_structs_summary_start", 16),
STACK_USAGE("ext4_mb_seq_structs_summary_next", 0),
STACK_USAGE("ext4_mb_seq_structs_summary_show", 32),
STACK_USAGE("ext4_mb_seq_structs_summary_stop", 0),
STACK_USAGE("ext4_mb_alloc_groupinfo", 56),
STACK_USAGE("ext4_mb_add_groupinfo", 72),
STACK_USAGE("ext4_has_group_desc_csum", 0),
STACK_USAGE("ext4_discard_work", 152),
STACK_USAGE("ext4_get_group_info", 32),
STACK_USAGE("ext4_mb_init", 56),
STACK_USAGE("ext4_lock_group", 16),
STACK_USAGE("ext4_mb_release", 80),
STACK_USAGE("ext4_issue_discard", 24),
STACK_USAGE("ext4_process_freed_data", 144),
STACK_USAGE("ext4_init_mballoc", 8),
STACK_USAGE("ext4_exit_mballoc", 0),
STACK_USAGE("ext4_mb_mark_diskspace_used", 88),
STACK_USAGE("ext4_mb_mark_bb", 104),
STACK_USAGE("ext4_mb_normalize_request", 72),
STACK_USAGE("ext4_discard_allocated_blocks", 88),
STACK_USAGE("ext4_mb_use_inode_pa", 48),
STACK_USAGE("ext4_mb_use_preallocated", 72),
STACK_USAGE("ext4_mb_generate_from_pa", 88),
STACK_USAGE("ext4_mb_pa_callback", 0),
STACK_USAGE("ext4_mb_new_inode_pa", 40),
STACK_USAGE("ext4_mb_new_group_pa", 56),
STACK_USAGE("ext4_mb_release_inode_pa", 96),
STACK_USAGE("ext4_mb_release_group_pa", 40),
STACK_USAGE("ext4_mb_discard_group_preallocations", 168),
STACK_USAGE("ext4_discard_preallocations", 144),
STACK_USAGE("ext4_mb_pa_free", 0),
STACK_USAGE("ext4_mb_initialize_context", 56),
STACK_USAGE("ext4_mb_discard_lg_preallocations", 144),
STACK_USAGE("ext4_mb_discard_preallocations_should_retry", 80),
STACK_USAGE("ext4_mb_new_blocks", 184),
STACK_USAGE("ext4_try_merge_freed_extent", 24),
STACK_USAGE("ext4_mb_free_metadata", 48),
STACK_USAGE("ext4_free_blocks", 224),
STACK_USAGE("ext4_group_add_blocks", 152),
STACK_USAGE("ext4_try_to_trim_range", 144),
STACK_USAGE("ext4_trim_fs", 168),
STACK_USAGE("ext4_mballoc_query_range", 184),
STACK_USAGE("PageUptodate", 0),
STACK_USAGE("rcu_read_unlock", 0),
STACK_USAGE("mb_update_avg_fragment_size", 40),
STACK_USAGE("update_dind_extent_range", 64),
STACK_USAGE("update_tind_extent_range", 96),
STACK_USAGE("free_dind_blocks", 80),
STACK_USAGE("finish_range", 72),
STACK_USAGE("ext4_ext_swap_inode_data", 64),
STACK_USAGE("free_ext_idx", 56),
STACK_USAGE("free_ext_block", 32),
STACK_USAGE("ext4_journal_ensure_credits", 24),
STACK_USAGE("ext4_ext_migrate", 112),
STACK_USAGE("ext4_ind_migrate", 48),
STACK_USAGE("update_ind_extent_range", 72),
STACK_USAGE("__dump_mmp_msg", 32),
STACK_USAGE("kmmpd", 120),
STACK_USAGE("ext4_stop_mmpd", 8),
STACK_USAGE("ext4_multi_mount_protect", 72),
STACK_USAGE("write_mmp_block", 72),
STACK_USAGE("read_mmp_block", 64),
STACK_USAGE("move_extent_per_page", 376),
STACK_USAGE("mext_check_arguments", 40),
STACK_USAGE("ext4_double_down_write_data_sem", 8),
STACK_USAGE("ext4_move_extents", 160),
STACK_USAGE("ext4_double_up_write_data_sem", 8),
STACK_USAGE("mext_check_coverage", 64),
STACK_USAGE("htree_dirblock_to_tree", 112),
STACK_USAGE("__ext4_read_dirblock", 56),
STACK_USAGE("ext4_htree_fill_tree", 248),
STACK_USAGE("dx_insert_block", 40),
STACK_USAGE("ext4_search_dir", 72),
STACK_USAGE("__ext4_find_entry", 232),
STACK_USAGE("ext4_lookup", 96),
STACK_USAGE("ext4_get_parent", 80),
STACK_USAGE("do_split", 224),
STACK_USAGE("ext4_find_dest_de", 88),
STACK_USAGE("ext4_insert_dentry", 32),
STACK_USAGE("add_dirent_to_buf", 72),
STACK_USAGE("ext4_add_entry", 344),
STACK_USAGE("ext4_generic_delete_entry", 80),
STACK_USAGE("ext4_delete_entry", 64),
STACK_USAGE("ext4_inc_count", 8),
STACK_USAGE("ext4_add_nondir", 48),
STACK_USAGE("ext4_create", 88),
STACK_USAGE("ext4_mknod", 96),
STACK_USAGE("ext4_tmpfile", 80),
STACK_USAGE("ext4_init_dot_dotdot", 0),
STACK_USAGE("ext4_update_dx_flag", 0),
STACK_USAGE("ext4_init_new_dir", 72),
STACK_USAGE("ext4_mkdir", 88),
STACK_USAGE("ext4_empty_dir", 64),
STACK_USAGE("ext4_initialize_dirent_tail", 0),
STACK_USAGE("ext4_rmdir", 112),
STACK_USAGE("__ext4_unlink", 112),
STACK_USAGE("ext4_unlink", 32),
STACK_USAGE("ext4_symlink", 72),
STACK_USAGE("__ext4_link", 64),
STACK_USAGE("ext4_link", 24),
STACK_USAGE("ext4_rename_dir_prepare", 40),
STACK_USAGE("ext4_rename_dir_finish", 16),
STACK_USAGE("ext4_setent", 40),
STACK_USAGE("ext4_resetent", 168),
STACK_USAGE("ext4_rename_delete", 112),
STACK_USAGE("ext4_update_dir_count", 24),
STACK_USAGE("ext4_whiteout_for_rename", 64),
STACK_USAGE("ext4_dirblock_csum_verify", 32),
STACK_USAGE("ext4_handle_dirty_dirblock", 56),
STACK_USAGE("ext4_rename2", 280),
STACK_USAGE("ext4_dx_csum", 48),
STACK_USAGE("ext4_handle_dirty_dx_node", 40),
STACK_USAGE("ext4_append", 32),
STACK_USAGE("dx_node_limit", 0),
STACK_USAGE("dx_probe", 56),
STACK_USAGE("ext4_orphan_del", 112),
STACK_USAGE("ext4_process_orphan", 40),
STACK_USAGE("lock_buffer", 8),
STACK_USAGE("ext4_orphan_cleanup", 96),
STACK_USAGE("ext4_release_orphan_info", 24),
STACK_USAGE("ext4_orphan_file_block_trigger", 64),
STACK_USAGE("ext4_init_orphan_info", 144),
STACK_USAGE("ext4_orphan_file_empty", 0),
STACK_USAGE("ext4_orphan_add", 144),
STACK_USAGE("ext4_finish_bio", 96),
STACK_USAGE("ext4_release_io_end", 40),
STACK_USAGE("ext4_end_io_rsv_work", 72),
STACK_USAGE("ext4_init_io_end", 8),
STACK_USAGE("ext4_put_io_end_defer", 40),
STACK_USAGE("ext4_put_io_end", 16),
STACK_USAGE("ext4_get_io_end", 8),
STACK_USAGE("ext4_end_bio", 32),
STACK_USAGE("ext4_init_pageio", 8),
STACK_USAGE("ext4_io_submit", 8),
STACK_USAGE("ext4_io_submit_init", 0),
STACK_USAGE("ext4_bio_write_page", 56),
STACK_USAGE("ext4_exit_pageio", 0),
STACK_USAGE("ext4_alloc_io_end_vec", 8),
STACK_USAGE("ext4_last_io_end_vec", 0),
STACK_USAGE("verity_work", 8),
STACK_USAGE("bio_post_read_processing", 8),
STACK_USAGE("mpage_end_io", 0),
STACK_USAGE("ext4_mpage_readpages", 280),
STACK_USAGE("zero_user_segment", 8),
STACK_USAGE("ext4_init_post_read_processing", 8),
STACK_USAGE("ext4_exit_post_read_processing", 0),
STACK_USAGE("__read_end_io", 40),
STACK_USAGE("decrypt_work", 0),
STACK_USAGE("update_backups", 120),
STACK_USAGE("ext4_update_super", 72),
STACK_USAGE("ext4_flex_group_add", 264),
STACK_USAGE("ext4_group_add", 120),
STACK_USAGE("ext4_group_extend_no_check", 48),
STACK_USAGE("ext4_group_extend", 56),
STACK_USAGE("ext4_resize_fs", 264),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("ext4_rcu_ptr_callback", 8),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("ext4_kvfree_array_rcu", 8),
STACK_USAGE("set_flexbg_block_bitmap", 96),
STACK_USAGE("ext4_resize_begin", 24),
STACK_USAGE("ext4_list_backups", 0),
STACK_USAGE("verify_reserved_gdb", 64),
STACK_USAGE("ext4_resize_end", 0),
STACK_USAGE("__bpf_trace_ext4_alloc_da_blocks", 0),
STACK_USAGE("__traceiter_ext4_alloc_da_blocks", 16),
STACK_USAGE("perf_trace_ext4_alloc_da_blocks", 56),
STACK_USAGE("trace_event_raw_event_ext4_alloc_da_blocks", 72),
STACK_USAGE("trace_raw_output_ext4_alloc_da_blocks", 24),
STACK_USAGE("__bpf_trace_ext4_mballoc_alloc", 0),
STACK_USAGE("__traceiter_ext4_mballoc_alloc", 16),
STACK_USAGE("perf_trace_ext4_mballoc_alloc", 56),
STACK_USAGE("trace_event_raw_event_ext4_mballoc_alloc", 72),
STACK_USAGE("trace_raw_output_ext4_mballoc_alloc", 176),
STACK_USAGE("ext4_mark_group_bitmap_corrupted", 56),
STACK_USAGE("ext4_update_dynamic_rev", 8),
STACK_USAGE("__bpf_trace_ext4_mballoc_prealloc", 0),
STACK_USAGE("__traceiter_ext4_mballoc_prealloc", 16),
STACK_USAGE("perf_trace_ext4_mballoc_prealloc", 56),
STACK_USAGE("trace_event_raw_event_ext4_mballoc_prealloc", 72),
STACK_USAGE("trace_raw_output_ext4_mballoc_prealloc", 48),
STACK_USAGE("__bpf_trace_ext4__mballoc", 0),
STACK_USAGE("perf_trace_ext4__mballoc", 80),
STACK_USAGE("trace_event_raw_event_ext4__mballoc", 104),
STACK_USAGE("trace_raw_output_ext4__mballoc", 24),
STACK_USAGE("__traceiter_ext4_mballoc_discard", 48),
STACK_USAGE("__traceiter_ext4_mballoc_free", 48),
STACK_USAGE("__bpf_trace_ext4_forget", 0),
STACK_USAGE("__traceiter_ext4_forget", 32),
STACK_USAGE("perf_trace_ext4_forget", 72),
STACK_USAGE("trace_event_raw_event_ext4_forget", 88),
STACK_USAGE("trace_raw_output_ext4_forget", 24),
STACK_USAGE("ext4_put_super", 40),
STACK_USAGE("__bpf_trace_ext4_da_update_reserve_space", 0),
STACK_USAGE("__traceiter_ext4_da_update_reserve_space", 32),
STACK_USAGE("perf_trace_ext4_da_update_reserve_space", 72),
STACK_USAGE("trace_event_raw_event_ext4_da_update_reserve_space", 88),
STACK_USAGE("trace_raw_output_ext4_da_update_reserve_space", 24),
STACK_USAGE("__bpf_trace_ext4_other_inode_update_time", 0),
STACK_USAGE("__traceiter_ext4_other_inode_update_time", 24),
STACK_USAGE("perf_trace_ext4_other_inode_update_time", 72),
STACK_USAGE("trace_event_raw_event_ext4_other_inode_update_time", 80),
STACK_USAGE("trace_raw_output_ext4_other_inode_update_time", 24),
STACK_USAGE("__bpf_trace_ext4_da_reserve_space", 0),
STACK_USAGE("__traceiter_ext4_da_reserve_space", 16),
STACK_USAGE("perf_trace_ext4_da_reserve_space", 56),
STACK_USAGE("trace_event_raw_event_ext4_da_reserve_space", 72),
STACK_USAGE("trace_raw_output_ext4_da_reserve_space", 24),
STACK_USAGE("__bpf_trace_ext4_da_release_space", 0),
STACK_USAGE("__traceiter_ext4_da_release_space", 24),
STACK_USAGE("perf_trace_ext4_da_release_space", 64),
STACK_USAGE("trace_event_raw_event_ext4_da_release_space", 80),
STACK_USAGE("trace_raw_output_ext4_da_release_space", 24),
STACK_USAGE("__bpf_trace_ext4__bitmap_load", 0),
STACK_USAGE("perf_trace_ext4__bitmap_load", 64),
STACK_USAGE("trace_event_raw_event_ext4__bitmap_load", 80),
STACK_USAGE("trace_raw_output_ext4__bitmap_load", 24),
STACK_USAGE("ext4_alloc_inode", 16),
STACK_USAGE("__traceiter_ext4_mb_bitmap_load", 24),
STACK_USAGE("__traceiter_ext4_mb_buddy_bitmap_load", 24),
STACK_USAGE("__traceiter_ext4_load_inode_bitmap", 24),
STACK_USAGE("__bpf_trace_ext4_read_block_bitmap_load", 0),
STACK_USAGE("__traceiter_ext4_read_block_bitmap_load", 32),
STACK_USAGE("perf_trace_ext4_read_block_bitmap_load", 72),
STACK_USAGE("trace_event_raw_event_ext4_read_block_bitmap_load", 88),
STACK_USAGE("trace_raw_output_ext4_read_block_bitmap_load", 24),
STACK_USAGE("ext4_drop_inode", 8),
STACK_USAGE("ext4_free_in_core_inode", 8),
STACK_USAGE("__bpf_trace_ext4__fallocate_mode", 0),
STACK_USAGE("perf_trace_ext4__fallocate_mode", 72),
STACK_USAGE("trace_event_raw_event_ext4__fallocate_mode", 96),
STACK_USAGE("trace_raw_output_ext4__fallocate_mode", 64),
STACK_USAGE("ext4_destroy_inode", 16),
STACK_USAGE("init_once", 8),
STACK_USAGE("__traceiter_ext4_fallocate_enter", 40),
STACK_USAGE("__traceiter_ext4_punch_hole", 40),
STACK_USAGE("init_inodecache", 8),
STACK_USAGE("__traceiter_ext4_zero_range", 40),
STACK_USAGE("__bpf_trace_ext4_fallocate_exit", 0),
STACK_USAGE("__traceiter_ext4_fallocate_exit", 40),
STACK_USAGE("perf_trace_ext4_fallocate_exit", 72),
STACK_USAGE("trace_event_raw_event_ext4_fallocate_exit", 96),
STACK_USAGE("trace_raw_output_ext4_fallocate_exit", 24),
STACK_USAGE("ext4_clear_inode", 8),
STACK_USAGE("__bpf_trace_ext4_unlink_enter", 0),
STACK_USAGE("__traceiter_ext4_unlink_enter", 24),
STACK_USAGE("perf_trace_ext4_unlink_enter", 64),
STACK_USAGE("trace_event_raw_event_ext4_unlink_enter", 80),
STACK_USAGE("trace_raw_output_ext4_unlink_enter", 24),
STACK_USAGE("ext4_nfs_get_inode", 8),
STACK_USAGE("ext4_fh_to_dentry", 0),
STACK_USAGE("__bpf_trace_ext4_unlink_exit", 0),
STACK_USAGE("__traceiter_ext4_unlink_exit", 24),
STACK_USAGE("perf_trace_ext4_unlink_exit", 64),
STACK_USAGE("trace_event_raw_event_ext4_unlink_exit", 80),
STACK_USAGE("trace_raw_output_ext4_unlink_exit", 24),
STACK_USAGE("ext4_fh_to_parent", 0),
STACK_USAGE("ext4_nfs_commit_metadata", 112),
STACK_USAGE("__bpf_trace_ext4__truncate", 0),
STACK_USAGE("perf_trace_ext4__truncate", 56),
STACK_USAGE("trace_event_raw_event_ext4__truncate", 72),
STACK_USAGE("trace_raw_output_ext4__truncate", 24),
STACK_USAGE("__bpf_trace_ext4_free_inode", 0),
STACK_USAGE("__traceiter_ext4_free_inode", 16),
STACK_USAGE("perf_trace_ext4_free_inode", 64),
STACK_USAGE("trace_event_raw_event_ext4_free_inode", 72),
STACK_USAGE("trace_raw_output_ext4_free_inode", 24),
STACK_USAGE("__traceiter_ext4_truncate_enter", 16),
STACK_USAGE("__traceiter_ext4_truncate_exit", 16),
STACK_USAGE("__bpf_trace_ext4_ext_convert_to_initialized_enter", 0),
STACK_USAGE("__traceiter_ext4_ext_convert_to_initialized_enter", 32),
STACK_USAGE("perf_trace_ext4_ext_convert_to_initialized_enter", 72),
STACK_USAGE("trace_event_raw_event_ext4_ext_convert_to_initialized_enter", 88),
STACK_USAGE("trace_raw_output_ext4_ext_convert_to_initialized_enter", 24),
STACK_USAGE("__bpf_trace_ext4_ext_convert_to_initialized_fastpath", 0),
STACK_USAGE("__traceiter_ext4_ext_convert_to_initialized_fastpath", 40),
STACK_USAGE("perf_trace_ext4_ext_convert_to_initialized_fastpath", 80),
STACK_USAGE("trace_event_raw_event_ext4_ext_convert_to_initialized_fastpath", 96),
STACK_USAGE("trace_raw_output_ext4_ext_convert_to_initialized_fastpath", 40),
STACK_USAGE("__bpf_trace_ext4__map_blocks_enter", 0),
STACK_USAGE("perf_trace_ext4__map_blocks_enter", 72),
STACK_USAGE("trace_event_raw_event_ext4__map_blocks_enter", 96),
STACK_USAGE("trace_raw_output_ext4__map_blocks_enter", 64),
STACK_USAGE("ext4_get_dquots", 0),
STACK_USAGE("__traceiter_ext4_ext_map_blocks_enter", 40),
STACK_USAGE("__traceiter_ext4_ind_map_blocks_enter", 40),
STACK_USAGE("__bpf_trace_ext4__map_blocks_exit", 0),
STACK_USAGE("perf_trace_ext4__map_blocks_exit", 72),
STACK_USAGE("trace_event_raw_event_ext4__map_blocks_exit", 96),
STACK_USAGE("trace_raw_output_ext4__map_blocks_exit", 88),
STACK_USAGE("__traceiter_ext4_ext_map_blocks_exit", 40),
STACK_USAGE("__traceiter_ext4_ind_map_blocks_exit", 40),
STACK_USAGE("__bpf_trace_ext4_ext_load_extent", 0),
STACK_USAGE("__traceiter_ext4_ext_load_extent", 32),
STACK_USAGE("perf_trace_ext4_ext_load_extent", 72),
STACK_USAGE("trace_event_raw_event_ext4_ext_load_extent", 88),
STACK_USAGE("trace_raw_output_ext4_ext_load_extent", 24),
STACK_USAGE("__bpf_trace_ext4_load_inode", 0),
STACK_USAGE("__traceiter_ext4_load_inode", 24),
STACK_USAGE("perf_trace_ext4_load_inode", 64),
STACK_USAGE("trace_event_raw_event_ext4_load_inode", 80),
STACK_USAGE("trace_raw_output_ext4_load_inode", 24),
STACK_USAGE("__bpf_trace_ext4_journal_start", 0),
STACK_USAGE("__traceiter_ext4_journal_start", 48),
STACK_USAGE("perf_trace_ext4_journal_start", 80),
STACK_USAGE("trace_event_raw_event_ext4_journal_start", 104),
STACK_USAGE("trace_raw_output_ext4_journal_start", 24),
STACK_USAGE("ext4_read_bh_nowait", 0),
STACK_USAGE("__bpf_trace_ext4_journal_start_reserved", 0),
STACK_USAGE("__traceiter_ext4_journal_start_reserved", 32),
STACK_USAGE("perf_trace_ext4_journal_start_reserved", 72),
STACK_USAGE("trace_event_raw_event_ext4_journal_start_reserved", 88),
STACK_USAGE("trace_raw_output_ext4_journal_start_reserved", 24),
STACK_USAGE("__bpf_trace_ext4__trim", 0),
STACK_USAGE("perf_trace_ext4__trim", 72),
STACK_USAGE("trace_event_raw_event_ext4__trim", 96),
STACK_USAGE("trace_raw_output_ext4__trim", 24),
STACK_USAGE("__bpf_trace_ext4_request_inode", 0),
STACK_USAGE("__traceiter_ext4_request_inode", 24),
STACK_USAGE("perf_trace_ext4_request_inode", 64),
STACK_USAGE("trace_event_raw_event_ext4_request_inode", 80),
STACK_USAGE("trace_raw_output_ext4_request_inode", 24),
STACK_USAGE("__traceiter_ext4_trim_extent", 40),
STACK_USAGE("__traceiter_ext4_trim_all_free", 40),
STACK_USAGE("__bpf_trace_ext4_ext_handle_unwritten_extents", 0),
STACK_USAGE("__traceiter_ext4_ext_handle_unwritten_extents", 48),
STACK_USAGE("perf_trace_ext4_ext_handle_unwritten_extents", 80),
STACK_USAGE("trace_event_raw_event_ext4_ext_handle_unwritten_extents", 104),
STACK_USAGE("trace_raw_output_ext4_ext_handle_unwritten_extents", 72),
STACK_USAGE("__bpf_trace_ext4_get_implied_cluster_alloc_exit", 0),
STACK_USAGE("__traceiter_ext4_get_implied_cluster_alloc_exit", 32),
STACK_USAGE("perf_trace_ext4_get_implied_cluster_alloc_exit", 72),
STACK_USAGE("trace_event_raw_event_ext4_get_implied_cluster_alloc_exit", 88),
STACK_USAGE("trace_raw_output_ext4_get_implied_cluster_alloc_exit", 64),
STACK_USAGE("ext4_read_bh", 8),
STACK_USAGE("__bpf_trace_ext4_ext_show_extent", 0),
STACK_USAGE("__traceiter_ext4_ext_show_extent", 40),
STACK_USAGE("perf_trace_ext4_ext_show_extent", 72),
STACK_USAGE("trace_event_raw_event_ext4_ext_show_extent", 96),
STACK_USAGE("trace_raw_output_ext4_ext_show_extent", 24),
STACK_USAGE("__bpf_trace_ext4_remove_blocks", 0),
STACK_USAGE("__traceiter_ext4_remove_blocks", 48),
STACK_USAGE("perf_trace_ext4_remove_blocks", 80),
STACK_USAGE("trace_event_raw_event_ext4_remove_blocks", 104),
STACK_USAGE("trace_raw_output_ext4_remove_blocks", 40),
STACK_USAGE("__bpf_trace_ext4_ext_rm_leaf", 0),
STACK_USAGE("__traceiter_ext4_ext_rm_leaf", 40),
STACK_USAGE("perf_trace_ext4_ext_rm_leaf", 72),
STACK_USAGE("trace_event_raw_event_ext4_ext_rm_leaf", 96),
STACK_USAGE("trace_raw_output_ext4_ext_rm_leaf", 32),
STACK_USAGE("__bpf_trace_ext4_allocate_inode", 0),
STACK_USAGE("__traceiter_ext4_allocate_inode", 32),
STACK_USAGE("perf_trace_ext4_allocate_inode", 72),
STACK_USAGE("trace_event_raw_event_ext4_allocate_inode", 88),
STACK_USAGE("trace_raw_output_ext4_allocate_inode", 24),
STACK_USAGE("__bpf_trace_ext4_ext_rm_idx", 0),
STACK_USAGE("__traceiter_ext4_ext_rm_idx", 24),
STACK_USAGE("perf_trace_ext4_ext_rm_idx", 64),
STACK_USAGE("trace_event_raw_event_ext4_ext_rm_idx", 80),
STACK_USAGE("trace_raw_output_ext4_ext_rm_idx", 24),
STACK_USAGE("__bpf_trace_ext4_ext_remove_space", 0),
STACK_USAGE("__traceiter_ext4_ext_remove_space", 40),
STACK_USAGE("perf_trace_ext4_ext_remove_space", 72),
STACK_USAGE("trace_event_raw_event_ext4_ext_remove_space", 96),
STACK_USAGE("trace_raw_output_ext4_ext_remove_space", 24),
STACK_USAGE("ext4_fc_free", 8),
STACK_USAGE("ext4_read_bh_lock", 16),
STACK_USAGE("ext4_init_fs_context", 8),
STACK_USAGE("__bpf_trace_ext4_ext_remove_space_done", 0),
STACK_USAGE("__traceiter_ext4_ext_remove_space_done", 56),
STACK_USAGE("perf_trace_ext4_ext_remove_space_done", 80),
STACK_USAGE("trace_event_raw_event_ext4_ext_remove_space_done", 104),
STACK_USAGE("trace_raw_output_ext4_ext_remove_space_done", 40),
STACK_USAGE("note_qf_name", 40),
STACK_USAGE("__bpf_trace_ext4__es_extent", 0),
STACK_USAGE("perf_trace_ext4__es_extent", 64),
STACK_USAGE("trace_event_raw_event_ext4__es_extent", 80),
STACK_USAGE("trace_raw_output_ext4__es_extent", 72),
STACK_USAGE("unnote_qf_name", 24),
STACK_USAGE("__traceiter_ext4_es_insert_extent", 24),
STACK_USAGE("__traceiter_ext4_es_cache_extent", 24),
STACK_USAGE("__bpf_trace_ext4_es_remove_extent", 0),
STACK_USAGE("__traceiter_ext4_es_remove_extent", 32),
STACK_USAGE("perf_trace_ext4_es_remove_extent", 72),
STACK_USAGE("trace_event_raw_event_ext4_es_remove_extent", 88),
STACK_USAGE("trace_raw_output_ext4_es_remove_extent", 24),
STACK_USAGE("ext4_parse_param", 80),
STACK_USAGE("__bpf_trace_ext4_es_find_extent_range_enter", 0),
STACK_USAGE("__traceiter_ext4_es_find_extent_range_enter", 24),
STACK_USAGE("perf_trace_ext4_es_find_extent_range_enter", 64),
STACK_USAGE("trace_event_raw_event_ext4_es_find_extent_range_enter", 80),
STACK_USAGE("trace_raw_output_ext4_es_find_extent_range_enter", 24),
STACK_USAGE("__bpf_trace_ext4_es_find_extent_range_exit", 0),
STACK_USAGE("__traceiter_ext4_es_find_extent_range_exit", 24),
STACK_USAGE("perf_trace_ext4_es_find_extent_range_exit", 64),
STACK_USAGE("trace_event_raw_event_ext4_es_find_extent_range_exit", 80),
STACK_USAGE("trace_raw_output_ext4_es_find_extent_range_exit", 72),
STACK_USAGE("__bpf_trace_ext4_es_lookup_extent_enter", 0),
STACK_USAGE("__traceiter_ext4_es_lookup_extent_enter", 24),
STACK_USAGE("perf_trace_ext4_es_lookup_extent_enter", 64),
STACK_USAGE("trace_event_raw_event_ext4_es_lookup_extent_enter", 80),
STACK_USAGE("trace_raw_output_ext4_es_lookup_extent_enter", 24),
STACK_USAGE("__bpf_trace_ext4_es_lookup_extent_exit", 0),
STACK_USAGE("__traceiter_ext4_es_lookup_extent_exit", 32),
STACK_USAGE("perf_trace_ext4_es_lookup_extent_exit", 72),
STACK_USAGE("trace_event_raw_event_ext4_es_lookup_extent_exit", 88),
STACK_USAGE("trace_raw_output_ext4_es_lookup_extent_exit", 80),
STACK_USAGE("__bpf_trace_ext4_evict_inode", 0),
STACK_USAGE("__traceiter_ext4_evict_inode", 16),
STACK_USAGE("perf_trace_ext4_evict_inode", 56),
STACK_USAGE("trace_event_raw_event_ext4_evict_inode", 72),
STACK_USAGE("trace_raw_output_ext4_evict_inode", 24),
STACK_USAGE("__ext4_sb_bread_gfp", 16),
STACK_USAGE("__bpf_trace_ext4__es_shrink_enter", 0),
STACK_USAGE("perf_trace_ext4__es_shrink_enter", 72),
STACK_USAGE("trace_event_raw_event_ext4__es_shrink_enter", 88),
STACK_USAGE("trace_raw_output_ext4__es_shrink_enter", 24),
STACK_USAGE("__traceiter_ext4_es_shrink_count", 32),
STACK_USAGE("__traceiter_ext4_es_shrink_scan_enter", 32),
STACK_USAGE("__bpf_trace_ext4_es_shrink_scan_exit", 0),
STACK_USAGE("__traceiter_ext4_es_shrink_scan_exit", 32),
STACK_USAGE("perf_trace_ext4_es_shrink_scan_exit", 72),
STACK_USAGE("trace_event_raw_event_ext4_es_shrink_scan_exit", 88),
STACK_USAGE("trace_raw_output_ext4_es_shrink_scan_exit", 24),
STACK_USAGE("__bpf_trace_ext4_collapse_range", 0),
STACK_USAGE("__traceiter_ext4_collapse_range", 32),
STACK_USAGE("perf_trace_ext4_collapse_range", 72),
STACK_USAGE("trace_event_raw_event_ext4_collapse_range", 88),
STACK_USAGE("trace_raw_output_ext4_collapse_range", 24),
STACK_USAGE("__bpf_trace_ext4_insert_range", 0),
STACK_USAGE("__traceiter_ext4_insert_range", 32),
STACK_USAGE("perf_trace_ext4_insert_range", 72),
STACK_USAGE("trace_event_raw_event_ext4_insert_range", 88),
STACK_USAGE("trace_raw_output_ext4_insert_range", 24),
STACK_USAGE("__bpf_trace_ext4_es_shrink", 0),
STACK_USAGE("__traceiter_ext4_es_shrink", 48),
STACK_USAGE("perf_trace_ext4_es_shrink", 80),
STACK_USAGE("trace_event_raw_event_ext4_es_shrink", 104),
STACK_USAGE("trace_raw_output_ext4_es_shrink", 24),
STACK_USAGE("__bpf_trace_ext4_es_insert_delayed_block", 0),
STACK_USAGE("__traceiter_ext4_es_insert_delayed_block", 32),
STACK_USAGE("ext4_chksum", 24),
STACK_USAGE("perf_trace_ext4_es_insert_delayed_block", 72),
STACK_USAGE("trace_event_raw_event_ext4_es_insert_delayed_block", 88),
STACK_USAGE("trace_raw_output_ext4_es_insert_delayed_block", 72),
STACK_USAGE("__bpf_trace_ext4_fsmap_class", 0),
STACK_USAGE("perf_trace_ext4_fsmap_class", 88),
STACK_USAGE("trace_event_raw_event_ext4_fsmap_class", 104),
STACK_USAGE("trace_raw_output_ext4_fsmap_class", 24),
STACK_USAGE("__bpf_trace_ext4_drop_inode", 0),
STACK_USAGE("__traceiter_ext4_drop_inode", 24),
STACK_USAGE("perf_trace_ext4_drop_inode", 64),
STACK_USAGE("trace_event_raw_event_ext4_drop_inode", 80),
STACK_USAGE("trace_raw_output_ext4_drop_inode", 24),
STACK_USAGE("ext4_sb_bread", 0),
STACK_USAGE("__traceiter_ext4_fsmap_low_key", 48),
STACK_USAGE("__traceiter_ext4_fsmap_high_key", 48),
STACK_USAGE("__traceiter_ext4_fsmap_mapping", 48),
STACK_USAGE("__bpf_trace_ext4_getfsmap_class", 0),
STACK_USAGE("perf_trace_ext4_getfsmap_class", 64),
STACK_USAGE("trace_event_raw_event_ext4_getfsmap_class", 80),
STACK_USAGE("trace_raw_output_ext4_getfsmap_class", 24),
STACK_USAGE("__traceiter_ext4_getfsmap_low_key", 24),
STACK_USAGE("__traceiter_ext4_getfsmap_high_key", 24),
STACK_USAGE("__traceiter_ext4_getfsmap_mapping", 24),
STACK_USAGE("__bpf_trace_ext4_shutdown", 0),
STACK_USAGE("__traceiter_ext4_shutdown", 24),
STACK_USAGE("perf_trace_ext4_shutdown", 64),
STACK_USAGE("trace_event_raw_event_ext4_shutdown", 80),
STACK_USAGE("trace_raw_output_ext4_shutdown", 24),
STACK_USAGE("ext4_sb_bread_unmovable", 0),
STACK_USAGE("__bpf_trace_ext4_error", 0),
STACK_USAGE("__traceiter_ext4_error", 32),
STACK_USAGE("perf_trace_ext4_error", 72),
STACK_USAGE("trace_event_raw_event_ext4_error", 88),
STACK_USAGE("trace_ext4_error", 0),
STACK_USAGE("trace_raw_output_ext4_error", 24),
STACK_USAGE("parse_apply_sb_mount_options", 128),
STACK_USAGE("__bpf_trace_ext4_prefetch_bitmaps", 0),
STACK_USAGE("__traceiter_ext4_prefetch_bitmaps", 40),
STACK_USAGE("perf_trace_ext4_prefetch_bitmaps", 72),
STACK_USAGE("trace_event_raw_event_ext4_prefetch_bitmaps", 96),
STACK_USAGE("trace_raw_output_ext4_prefetch_bitmaps", 24),
STACK_USAGE("__bpf_trace_ext4_lazy_itable_init", 0),
STACK_USAGE("__traceiter_ext4_lazy_itable_init", 24),
STACK_USAGE("perf_trace_ext4_lazy_itable_init", 64),
STACK_USAGE("trace_event_raw_event_ext4_lazy_itable_init", 80),
STACK_USAGE("trace_raw_output_ext4_lazy_itable_init", 24),
STACK_USAGE("ext4_sb_breadahead_unmovable", 8),
STACK_USAGE("__bpf_trace_ext4_fc_replay_scan", 0),
STACK_USAGE("__traceiter_ext4_fc_replay_scan", 32),
STACK_USAGE("perf_trace_ext4_fc_replay_scan", 72),
STACK_USAGE("trace_event_raw_event_ext4_fc_replay_scan", 88),
STACK_USAGE("trace_raw_output_ext4_fc_replay_scan", 24),
STACK_USAGE("__bpf_trace_ext4_fc_replay", 0),
STACK_USAGE("__traceiter_ext4_fc_replay", 48),
STACK_USAGE("perf_trace_ext4_fc_replay", 80),
STACK_USAGE("trace_event_raw_event_ext4_fc_replay", 104),
STACK_USAGE("trace_raw_output_ext4_fc_replay", 24),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("__bpf_trace_ext4_fc_commit_start", 0),
STACK_USAGE("__traceiter_ext4_fc_commit_start", 24),
STACK_USAGE("perf_trace_ext4_fc_commit_start", 64),
STACK_USAGE("trace_event_raw_event_ext4_fc_commit_start", 80),
STACK_USAGE("trace_raw_output_ext4_fc_commit_start", 24),
STACK_USAGE("__bpf_trace_ext4_fc_commit_stop", 0),
STACK_USAGE("__traceiter_ext4_fc_commit_stop", 40),
STACK_USAGE("perf_trace_ext4_fc_commit_stop", 72),
STACK_USAGE("trace_event_raw_event_ext4_fc_commit_stop", 96),
STACK_USAGE("trace_raw_output_ext4_fc_commit_stop", 24),
STACK_USAGE("__bpf_trace_ext4_nfs_commit_metadata", 0),
STACK_USAGE("__traceiter_ext4_nfs_commit_metadata", 16),
STACK_USAGE("perf_trace_ext4_nfs_commit_metadata", 56),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("trace_event_raw_event_ext4_nfs_commit_metadata", 72),
STACK_USAGE("trace_raw_output_ext4_nfs_commit_metadata", 24),
STACK_USAGE("__bpf_trace_ext4_fc_stats", 0),
STACK_USAGE("__traceiter_ext4_fc_stats", 16),
STACK_USAGE("perf_trace_ext4_fc_stats", 56),
STACK_USAGE("trace_event_raw_event_ext4_fc_stats", 72),
STACK_USAGE("trace_raw_output_ext4_fc_stats", 176),
STACK_USAGE("__bpf_trace_ext4_fc_track_dentry", 0),
STACK_USAGE("perf_trace_ext4_fc_track_dentry", 72),
STACK_USAGE("trace_event_raw_event_ext4_fc_track_dentry", 88),
STACK_USAGE("trace_raw_output_ext4_fc_track_dentry", 24),
STACK_USAGE("ext4_check_opt_consistency", 48),
STACK_USAGE("ext4_superblock_csum", 24),
STACK_USAGE("__traceiter_ext4_fc_track_create", 40),
STACK_USAGE("__traceiter_ext4_fc_track_link", 40),
STACK_USAGE("__traceiter_ext4_fc_track_unlink", 40),
STACK_USAGE("__bpf_trace_ext4_fc_track_inode", 0),
STACK_USAGE("__traceiter_ext4_fc_track_inode", 32),
STACK_USAGE("perf_trace_ext4_fc_track_inode", 72),
STACK_USAGE("trace_event_raw_event_ext4_fc_track_inode", 88),
STACK_USAGE("trace_raw_output_ext4_fc_track_inode", 24),
STACK_USAGE("__bpf_trace_ext4_fc_track_range", 0),
STACK_USAGE("__traceiter_ext4_fc_track_range", 48),
STACK_USAGE("perf_trace_ext4_fc_track_range", 80),
STACK_USAGE("trace_event_raw_event_ext4_fc_track_range", 104),
STACK_USAGE("trace_raw_output_ext4_fc_track_range", 24),
STACK_USAGE("ext4_apply_options", 40),
STACK_USAGE("__bpf_trace_ext4_fc_cleanup", 0),
STACK_USAGE("__traceiter_ext4_fc_cleanup", 32),
STACK_USAGE("perf_trace_ext4_fc_cleanup", 72),
STACK_USAGE("trace_event_raw_event_ext4_fc_cleanup", 88),
STACK_USAGE("trace_raw_output_ext4_fc_cleanup", 24),
STACK_USAGE("__bpf_trace_ext4_mark_inode_dirty", 0),
STACK_USAGE("__traceiter_ext4_mark_inode_dirty", 24),
STACK_USAGE("perf_trace_ext4_mark_inode_dirty", 64),
STACK_USAGE("trace_event_raw_event_ext4_mark_inode_dirty", 80),
STACK_USAGE("trace_raw_output_ext4_mark_inode_dirty", 24),
STACK_USAGE("__bpf_trace_ext4_update_sb", 0),
STACK_USAGE("__traceiter_ext4_update_sb", 32),
STACK_USAGE("perf_trace_ext4_update_sb", 72),
STACK_USAGE("trace_event_raw_event_ext4_update_sb", 88),
STACK_USAGE("trace_raw_output_ext4_update_sb", 24),
STACK_USAGE("_ext4_show_options", 64),
STACK_USAGE("ext4_superblock_csum_set", 32),
STACK_USAGE("ext4_show_options", 0),
STACK_USAGE("ext4_seq_options_show", 16),
STACK_USAGE("ext4_setup_super", 32),
STACK_USAGE("ext4_block_bitmap", 0),
STACK_USAGE("__bpf_trace_ext4_begin_ordered_truncate", 0),
STACK_USAGE("__traceiter_ext4_begin_ordered_truncate", 24),
STACK_USAGE("perf_trace_ext4_begin_ordered_truncate", 64),
STACK_USAGE("trace_event_raw_event_ext4_begin_ordered_truncate", 80),
STACK_USAGE("trace_raw_output_ext4_begin_ordered_truncate", 24),
STACK_USAGE("ext4_alloc_flex_bg_array", 56),
STACK_USAGE("ext4_inode_bitmap", 0),
STACK_USAGE("ext4_fill_flex_info", 48),
STACK_USAGE("ext4_group_desc_csum", 56),
STACK_USAGE("ext4_inode_table", 0),
STACK_USAGE("ext4_has_metadata_csum", 0),
STACK_USAGE("ext4_group_desc_csum_verify", 8),
STACK_USAGE("ext4_group_desc_csum_set", 8),
STACK_USAGE("ext4_check_descriptors", 112),
STACK_USAGE("__bpf_trace_ext4__write_begin", 0),
STACK_USAGE("ext4_free_group_clusters", 0),
STACK_USAGE("perf_trace_ext4__write_begin", 72),
STACK_USAGE("trace_event_raw_event_ext4__write_begin", 96),
STACK_USAGE("trace_raw_output_ext4__write_begin", 24),
STACK_USAGE("ext4_free_inodes_count", 0),
STACK_USAGE("ext4_max_bitmap_size", 0),
STACK_USAGE("ext4_used_dirs_count", 0),
STACK_USAGE("descriptor_loc", 32),
STACK_USAGE("ext4_get_stripe_size", 0),
STACK_USAGE("ext4_itable_unused_count", 0),
STACK_USAGE("ext4_feature_set_ok", 16),
STACK_USAGE("__traceiter_ext4_write_begin", 40),
STACK_USAGE("ext4_block_bitmap_set", 0),
STACK_USAGE("print_daily_error_info", 24),
STACK_USAGE("__traceiter_ext4_da_write_begin", 40),
STACK_USAGE("ext4_inode_bitmap_set", 0),
STACK_USAGE("ext4_unregister_li_request", 8),
STACK_USAGE("__bpf_trace_ext4__write_end", 0),
STACK_USAGE("perf_trace_ext4__write_end", 72),
STACK_USAGE("trace_event_raw_event_ext4__write_end", 96),
STACK_USAGE("trace_raw_output_ext4__write_end", 24),
STACK_USAGE("ext4_lazyinit_thread", 104),
STACK_USAGE("ext4_inode_table_set", 0),
STACK_USAGE("ext4_free_group_clusters_set", 0),
STACK_USAGE("ext4_free_inodes_set", 0),
STACK_USAGE("ext4_register_li_request", 40),
STACK_USAGE("ext4_used_dirs_set", 0),
STACK_USAGE("__traceiter_ext4_write_end", 40),
STACK_USAGE("set_journal_csum_feature_set", 40),
STACK_USAGE("ext4_itable_unused_set", 0),
STACK_USAGE("__traceiter_ext4_journalled_write_end", 40),
STACK_USAGE("ext4_calculate_overhead", 120),
STACK_USAGE("__traceiter_ext4_da_write_end", 40),
STACK_USAGE("ext4_set_resv_clusters", 0),
STACK_USAGE("__bpf_trace_ext4_writepages", 0),
STACK_USAGE("__traceiter_ext4_writepages", 24),
STACK_USAGE("perf_trace_ext4_writepages", 64),
STACK_USAGE("trace_event_raw_event_ext4_writepages", 80),
STACK_USAGE("trace_raw_output_ext4_writepages", 24),
STACK_USAGE("__ext4_fill_super", 152),
STACK_USAGE("ext4_journal_commit_callback", 40),
STACK_USAGE("__bpf_trace_ext4_da_write_pages", 0),
STACK_USAGE("__traceiter_ext4_da_write_pages", 32),
STACK_USAGE("perf_trace_ext4_da_write_pages", 72),
STACK_USAGE("trace_event_raw_event_ext4_da_write_pages", 88),
STACK_USAGE("trace_raw_output_ext4_da_write_pages", 24),
STACK_USAGE("ext4_journalled_writepage_callback", 0),
STACK_USAGE("__bpf_trace_ext4_da_write_pages_extent", 0),
STACK_USAGE("__traceiter_ext4_da_write_pages_extent", 24),
STACK_USAGE("perf_trace_ext4_da_write_pages_extent", 64),
STACK_USAGE("trace_event_raw_event_ext4_da_write_pages_extent", 80),
STACK_USAGE("trace_raw_output_ext4_da_write_pages_extent", 64),
STACK_USAGE("__bpf_trace_ext4_writepages_result", 0),
STACK_USAGE("__traceiter_ext4_writepages_result", 40),
STACK_USAGE("perf_trace_ext4_writepages_result", 72),
STACK_USAGE("trace_event_raw_event_ext4_writepages_result", 96),
STACK_USAGE("trace_raw_output_ext4_writepages_result", 24),
STACK_USAGE("ext4_journal_submit_inode_data_buffers", 112),
STACK_USAGE("ext4_journal_finish_inode_data_buffers", 8),
STACK_USAGE("ext4_fill_super", 40),
STACK_USAGE("ext4_get_tree", 0),
STACK_USAGE("ext4_init_journal_params", 24),
STACK_USAGE("ext4_get_journal_inode", 16),
STACK_USAGE("__bpf_trace_ext4__page_op", 0),
STACK_USAGE("perf_trace_ext4__page_op", 56),
STACK_USAGE("trace_event_raw_event_ext4__page_op", 72),
STACK_USAGE("trace_raw_output_ext4__page_op", 24),
STACK_USAGE("ext4_load_journal", 104),
STACK_USAGE("__traceiter_ext4_writepage", 16),
STACK_USAGE("ext4_update_super", 72),
STACK_USAGE("__traceiter_ext4_readpage", 16),
STACK_USAGE("ext4_commit_super", 24),
STACK_USAGE("ext4_mark_recovery_complete", 24),
STACK_USAGE("__traceiter_ext4_releasepage", 16),
STACK_USAGE("ext4_clear_journal_err", 72),
STACK_USAGE("__bpf_trace_ext4_invalidate_folio_op", 0),
STACK_USAGE("perf_trace_ext4_invalidate_folio_op", 72),
STACK_USAGE("trace_event_raw_event_ext4_invalidate_folio_op", 88),
STACK_USAGE("trace_raw_output_ext4_invalidate_folio_op", 24),
STACK_USAGE("ext4_force_commit", 0),
STACK_USAGE("ext4_sync_fs", 56),
STACK_USAGE("ext4_freeze", 24),
STACK_USAGE("ext4_unfreeze", 16),
STACK_USAGE("__traceiter_ext4_invalidate_folio", 32),
STACK_USAGE("__traceiter_ext4_journalled_invalidate_folio", 32),
STACK_USAGE("__bpf_trace_ext4_discard_blocks", 0),
STACK_USAGE("__traceiter_ext4_discard_blocks", 32),
STACK_USAGE("perf_trace_ext4_discard_blocks", 72),
STACK_USAGE("trace_event_raw_event_ext4_discard_blocks", 88),
STACK_USAGE("trace_raw_output_ext4_discard_blocks", 24),
STACK_USAGE("ext4_reconfigure", 136),
STACK_USAGE("ext4_handle_error", 80),
STACK_USAGE("ext4_statfs", 64),
STACK_USAGE("ext4_write_dquot", 24),
STACK_USAGE("ext4_acquire_dquot", 24),
STACK_USAGE("ext4_release_dquot", 24),
STACK_USAGE("ext4_mark_dquot_dirty", 24),
STACK_USAGE("ext4_write_info", 24),
STACK_USAGE("ext4_quota_on", 56),
STACK_USAGE("__bpf_trace_ext4__mb_new_pa", 0),
STACK_USAGE("perf_trace_ext4__mb_new_pa", 64),
STACK_USAGE("trace_event_raw_event_ext4__mb_new_pa", 80),
STACK_USAGE("trace_raw_output_ext4__mb_new_pa", 24),
STACK_USAGE("ext4_enable_quotas", 136),
STACK_USAGE("ext4_quota_off", 40),
STACK_USAGE("ext4_quota_read", 80),
STACK_USAGE("ext4_quota_write", 96),
STACK_USAGE("__traceiter_ext4_mb_new_inode_pa", 24),
STACK_USAGE("register_as_ext2", 0),
STACK_USAGE("flush_stashed_error_work", 32),
STACK_USAGE("register_as_ext3", 0),
STACK_USAGE("ext3_feature_set_ok", 0),
STACK_USAGE("ext4_init_fs", 8),
STACK_USAGE("__traceiter_ext4_mb_new_group_pa", 24),
STACK_USAGE("ext4_exit_fs", 0),
STACK_USAGE("__bpf_trace_ext4_mb_release_inode_pa", 0),
STACK_USAGE("__traceiter_ext4_mb_release_inode_pa", 32),
STACK_USAGE("perf_trace_ext4_mb_release_inode_pa", 72),
STACK_USAGE("trace_event_raw_event_ext4_mb_release_inode_pa", 88),
STACK_USAGE("trace_raw_output_ext4_mb_release_inode_pa", 24),
STACK_USAGE("rcu_read_unlock", 0),
STACK_USAGE("__bpf_trace_ext4_mb_release_group_pa", 0),
STACK_USAGE("__traceiter_ext4_mb_release_group_pa", 24),
STACK_USAGE("perf_trace_ext4_mb_release_group_pa", 64),
STACK_USAGE("trace_event_raw_event_ext4_mb_release_group_pa", 80),
STACK_USAGE("trace_raw_output_ext4_mb_release_group_pa", 24),
STACK_USAGE("__ext4_error", 200),
STACK_USAGE("__bpf_trace_ext4_discard_preallocations", 0),
STACK_USAGE("__traceiter_ext4_discard_preallocations", 32),
STACK_USAGE("perf_trace_ext4_discard_preallocations", 72),
STACK_USAGE("trace_event_raw_event_ext4_discard_preallocations", 88),
STACK_USAGE("trace_raw_output_ext4_discard_preallocations", 24),
STACK_USAGE("__ext4_error_inode", 200),
STACK_USAGE("__bpf_trace_ext4_mb_discard_preallocations", 0),
STACK_USAGE("__traceiter_ext4_mb_discard_preallocations", 24),
STACK_USAGE("perf_trace_ext4_mb_discard_preallocations", 64),
STACK_USAGE("trace_event_raw_event_ext4_mb_discard_preallocations", 80),
STACK_USAGE("trace_raw_output_ext4_mb_discard_preallocations", 24),
STACK_USAGE("__bpf_trace_ext4_request_blocks", 0),
STACK_USAGE("__traceiter_ext4_request_blocks", 16),
STACK_USAGE("perf_trace_ext4_request_blocks", 56),
STACK_USAGE("trace_event_raw_event_ext4_request_blocks", 72),
STACK_USAGE("trace_raw_output_ext4_request_blocks", 64),
STACK_USAGE("__ext4_error_file", 280),
STACK_USAGE("__bpf_trace_ext4_allocate_blocks", 0),
STACK_USAGE("__traceiter_ext4_allocate_blocks", 24),
STACK_USAGE("perf_trace_ext4_allocate_blocks", 64),
STACK_USAGE("trace_event_raw_event_ext4_allocate_blocks", 80),
STACK_USAGE("trace_raw_output_ext4_allocate_blocks", 64),
STACK_USAGE("ext4_decode_error", 8),
STACK_USAGE("__bpf_trace_ext4_free_blocks", 0),
STACK_USAGE("__traceiter_ext4_free_blocks", 40),
STACK_USAGE("perf_trace_ext4_free_blocks", 72),
STACK_USAGE("trace_event_raw_event_ext4_free_blocks", 96),
STACK_USAGE("trace_raw_output_ext4_free_blocks", 72),
STACK_USAGE("__ext4_std_error", 104),
STACK_USAGE("__ext4_msg", 136),
STACK_USAGE("__bpf_trace_ext4_sync_file_enter", 0),
STACK_USAGE("__traceiter_ext4_sync_file_enter", 24),
STACK_USAGE("perf_trace_ext4_sync_file_enter", 64),
STACK_USAGE("trace_event_raw_event_ext4_sync_file_enter", 80),
STACK_USAGE("trace_raw_output_ext4_sync_file_enter", 24),
STACK_USAGE("__bpf_trace_ext4_sync_file_exit", 0),
STACK_USAGE("__ext4_warning", 136),
STACK_USAGE("__traceiter_ext4_sync_file_exit", 24),
STACK_USAGE("perf_trace_ext4_sync_file_exit", 64),
STACK_USAGE("trace_event_raw_event_ext4_sync_file_exit", 80),
STACK_USAGE("trace_raw_output_ext4_sync_file_exit", 24),
STACK_USAGE("__ext4_warning_inode", 136),
STACK_USAGE("__bpf_trace_ext4_sync_fs", 0),
STACK_USAGE("__traceiter_ext4_sync_fs", 24),
STACK_USAGE("perf_trace_ext4_sync_fs", 64),
STACK_USAGE("trace_event_raw_event_ext4_sync_fs", 80),
STACK_USAGE("trace_raw_output_ext4_sync_fs", 24),
STACK_USAGE("__ext4_grp_locked_error", 184),
STACK_USAGE("ext4_encrypted_get_link", 16),
STACK_USAGE("ext4_encrypted_symlink_getattr", 0),
STACK_USAGE("ext4_attr_show", 48),
STACK_USAGE("ext4_attr_store", 64),
STACK_USAGE("ext4_sb_release", 0),
STACK_USAGE("ext4_notify_error_sysfs", 0),
STACK_USAGE("ext4_register_sysfs", 40),
STACK_USAGE("ext4_unregister_sysfs", 8),
STACK_USAGE("ext4_init_sysfs", 8),
STACK_USAGE("ext4_exit_sysfs", 0),
STACK_USAGE("ext4_xattr_inode_inc_ref_all", 72),
STACK_USAGE("ext4_xattr_inode_dec_ref_all", 112),
STACK_USAGE("ext4_xattr_release_block", 72),
STACK_USAGE("ext4_xattr_inode_set_class", 0),
STACK_USAGE("ext4_xattr_block_csum", 64),
STACK_USAGE("ext4_xattr_set_entry", 240),
STACK_USAGE("ext4_xattr_block_csum_set", 8),
STACK_USAGE("ext4_xattr_block_find", 64),
STACK_USAGE("ext4_xattr_block_set", 240),
STACK_USAGE("ext4_xattr_ibody_find", 64),
STACK_USAGE("ext4_xattr_ibody_set", 16),
STACK_USAGE("ext4_xattr_value_same", 0),
STACK_USAGE("ext4_xattr_set_handle", 216),
STACK_USAGE("__ext4_xattr_check_block", 88),
STACK_USAGE("ext4_xattr_set_credits", 64),
STACK_USAGE("ext4_xattr_set", 104),
STACK_USAGE("__xattr_check_inode", 64),
STACK_USAGE("ext4_expand_extra_isize_ea", 224),
STACK_USAGE("ext4_xattr_delete_inode", 96),
STACK_USAGE("ext4_xattr_inode_array_free", 16),
STACK_USAGE("ext4_xattr_block_cache_insert", 0),
STACK_USAGE("ext4_xattr_create_cache", 0),
STACK_USAGE("ext4_xattr_destroy_cache", 0),
STACK_USAGE("ext4_xattr_inode_read", 152),
STACK_USAGE("lock_buffer", 8),
STACK_USAGE("ext4_xattr_inode_iget", 40),
STACK_USAGE("dquot_free_block", 8),
STACK_USAGE("ext4_xattr_inode_get", 80),
STACK_USAGE("ext4_xattr_ibody_get", 128),
STACK_USAGE("ext4_xattr_get", 104),
STACK_USAGE("ext4_listxattr", 112),
STACK_USAGE("ext4_xattr_update_super_block", 24),
STACK_USAGE("ext4_get_inode_usage", 80),
STACK_USAGE("ext4_xattr_inode_free_quota", 8),
STACK_USAGE("__ext4_xattr_set_credits", 40),
STACK_USAGE("ext4_xattr_inode_update_ref", 80),
STACK_USAGE("ext4_xattr_hurd_list", 0),
STACK_USAGE("ext4_xattr_hurd_get", 0),
STACK_USAGE("ext4_xattr_hurd_set", 0),
STACK_USAGE("ext4_xattr_security_get", 0),
STACK_USAGE("ext4_xattr_security_set", 0),
STACK_USAGE("ext4_initxattrs", 24),
STACK_USAGE("ext4_init_security", 0),
STACK_USAGE("ext4_xattr_trusted_list", 0),
STACK_USAGE("ext4_xattr_trusted_get", 0),
STACK_USAGE("ext4_xattr_trusted_set", 0),
STACK_USAGE("ext4_xattr_user_list", 0),
STACK_USAGE("ext4_xattr_user_get", 0),
STACK_USAGE("ext4_xattr_user_set", 0),
STACK_USAGE("fat_cache_add", 48),
STACK_USAGE("fat_cache_inval_inode", 24),
STACK_USAGE("fat_get_cluster", 176),
STACK_USAGE("fat_get_mapped_cluster", 80),
STACK_USAGE("fat_bmap", 0),
STACK_USAGE("init_once", 0),
STACK_USAGE("fat_cache_init", 8),
STACK_USAGE("fat_cache_destroy", 0),
STACK_USAGE("fat_remove_entries", 56),
STACK_USAGE("fat_zeroed_cluster", 64),
STACK_USAGE("fat_alloc_new_dir", 152),
STACK_USAGE("fat_get_entry", 112),
STACK_USAGE("fat_add_entries", 296),
STACK_USAGE("fat_checksum", 0),
STACK_USAGE("fat_shortname2uni", 40),
STACK_USAGE("fat_parse_long", 72),
STACK_USAGE("fat_parse_short", 200),
STACK_USAGE("fat_search_long", 248),
STACK_USAGE("__fat_readdir", 280),
STACK_USAGE("fat_readdir", 0),
STACK_USAGE("fat_ioctl_filldir", 64),
STACK_USAGE("fat_dir_ioctl", 120),
STACK_USAGE("fat_compat_ioctl_filldir", 64),
STACK_USAGE("fat_compat_dir_ioctl", 120),
STACK_USAGE("fat_get_dotdot_entry", 56),
STACK_USAGE("fat_dir_empty", 80),
STACK_USAGE("fat_subdirs", 72),
STACK_USAGE("fat_scan", 72),
STACK_USAGE("fat_scan_logstart", 64),
STACK_USAGE("__fat_remove_entries", 80),
STACK_USAGE("fat_ent_bread", 40),
STACK_USAGE("fat12_ent_get", 8),
STACK_USAGE("fat16_ent_get", 0),
STACK_USAGE("fat32_ent_get", 0),
STACK_USAGE("fat12_ent_put", 16),
STACK_USAGE("fat16_ent_put", 0),
STACK_USAGE("fat32_ent_put", 0),
STACK_USAGE("fat12_ent_next", 8),
STACK_USAGE("fat16_ent_next", 0),
STACK_USAGE("fat32_ent_next", 0),
STACK_USAGE("fat12_ent_blocknr", 0),
STACK_USAGE("fat_ent_access_init", 16),
STACK_USAGE("fat_ent_blocknr", 0),
STACK_USAGE("fat_ent_read", 64),
STACK_USAGE("fat_mirror_bhs", 80),
STACK_USAGE("fat_ent_write", 24),
STACK_USAGE("fat12_ent_set_ptr", 0),
STACK_USAGE("fat_alloc_clusters", 312),
STACK_USAGE("fat_free_clusters", 216),
STACK_USAGE("fat16_ent_set_ptr", 0),
STACK_USAGE("fat32_ent_set_ptr", 0),
STACK_USAGE("fat12_ent_bread", 32),
STACK_USAGE("fat_count_free_clusters", 240),
STACK_USAGE("fat_trim_clusters", 0),
STACK_USAGE("fat_trim_fs", 256),
STACK_USAGE("fat_generic_ioctl", 160),
STACK_USAGE("fat_file_release", 0),
STACK_USAGE("fat_file_fsync", 8),
STACK_USAGE("fat_cont_expand", 48),
STACK_USAGE("fat_fallocate", 48),
STACK_USAGE("fat_truncate_blocks", 120),
STACK_USAGE("fat_getattr", 16),
STACK_USAGE("fat_setattr", 64),
STACK_USAGE("fat_add_cluster", 32),
STACK_USAGE("fat_read_root", 40),
STACK_USAGE("fat_fill_super", 248),
STACK_USAGE("fat_get_block", 128),
STACK_USAGE("fat_flush_inodes", 24),
STACK_USAGE("init_fat_fs", 8),
STACK_USAGE("exit_fat_fs", 0),
STACK_USAGE("fat_writepage", 0),
STACK_USAGE("fat_writepages", 0),
STACK_USAGE("fat_readpage", 0),
STACK_USAGE("fat_readahead", 0),
STACK_USAGE("fat_write_begin", 32),
STACK_USAGE("fat_write_end", 40),
STACK_USAGE("fat_direct_IO", 40),
STACK_USAGE("fat_get_block_bmap", 48),
STACK_USAGE("_fat_bmap", 24),
STACK_USAGE("fat_block_truncate_page", 0),
STACK_USAGE("fat_attach", 48),
STACK_USAGE("fat_detach", 24),
STACK_USAGE("fat_iget", 40),
STACK_USAGE("fat_fill_inode", 88),
STACK_USAGE("fat_build_inode", 48),
STACK_USAGE("fat_evict_inode", 8),
STACK_USAGE("fat_set_state", 32),
STACK_USAGE("delayed_free", 8),
STACK_USAGE("fat_put_super", 8),
STACK_USAGE("fat_alloc_inode", 8),
STACK_USAGE("fat_free_inode", 0),
STACK_USAGE("init_once", 8),
STACK_USAGE("fat_destroy_inodecache", 0),
STACK_USAGE("fat_remount", 16),
STACK_USAGE("fat_statfs", 32),
STACK_USAGE("__fat_write_inode", 88),
STACK_USAGE("fat_write_inode", 24),
STACK_USAGE("fat_sync_inode", 0),
STACK_USAGE("fat_show_options", 24),
STACK_USAGE("fat_chain_add", 144),
STACK_USAGE("fat_time_fat2unix", 32),
STACK_USAGE("__fat_fs_error", 120),
STACK_USAGE("fat_time_unix2fat", 80),
STACK_USAGE("fat_truncate_time", 40),
STACK_USAGE("fat_update_time", 16),
STACK_USAGE("fat_sync_bhs", 40),
STACK_USAGE("fat_msg", 104),
STACK_USAGE("fat_clusters_flush", 32),
STACK_USAGE("msdos_hash", 40),
STACK_USAGE("msdos_cmp", 64),
STACK_USAGE("msdos_format_name", 96),
STACK_USAGE("msdos_lookup", 104),
STACK_USAGE("msdos_add_entry", 80),
STACK_USAGE("msdos_create", 128),
STACK_USAGE("msdos_rmdir", 120),
STACK_USAGE("msdos_mkdir", 136),
STACK_USAGE("msdos_unlink", 112),
STACK_USAGE("msdos_rename", 264),
STACK_USAGE("setup", 0),
STACK_USAGE("msdos_fill_super", 0),
STACK_USAGE("msdos_mount", 0),
STACK_USAGE("init_msdos_fs", 0),
STACK_USAGE("exit_msdos_fs", 0),
STACK_USAGE("setup", 0),
STACK_USAGE("vfat_fill_super", 0),
STACK_USAGE("vfat_mount", 0),
STACK_USAGE("init_vfat_fs", 0),
STACK_USAGE("exit_vfat_fs", 0),
STACK_USAGE("vfat_hash", 8),
STACK_USAGE("vfat_hashi", 0),
STACK_USAGE("vfat_cmpi", 0),
STACK_USAGE("vfat_cmp", 0),
STACK_USAGE("vfat_revalidate", 24),
STACK_USAGE("vfat_add_entry", 272),
STACK_USAGE("vfat_revalidate_ci", 24),
STACK_USAGE("vfat_lookup", 88),
STACK_USAGE("vfat_create", 104),
STACK_USAGE("vfat_rmdir", 96),
STACK_USAGE("vfat_unlink", 88),
STACK_USAGE("vfat_mkdir", 112),
STACK_USAGE("vfat_rename", 200),
STACK_USAGE("fat_encode_fh_nostale", 0),
STACK_USAGE("fat_fh_to_dentry", 0),
STACK_USAGE("fat_fh_to_dentry_nostale", 0),
STACK_USAGE("fat_fh_to_parent", 0),
STACK_USAGE("fat_fh_to_parent_nostale", 0),
STACK_USAGE("fat_get_parent", 136),
STACK_USAGE("__fat_nfs_get_inode", 40),
STACK_USAGE("fat_nfs_get_inode", 0),
STACK_USAGE("kill_fasync", 32),
STACK_USAGE("fcntl_init", 0),
STACK_USAGE("__f_setown", 32),
STACK_USAGE("f_setown", 40),
STACK_USAGE("f_delown", 16),
STACK_USAGE("f_getown", 24),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("do_fcntl", 80),
STACK_USAGE("__ia32_sys_fcntl", 0),
STACK_USAGE("__se_sys_fcntl", 48),
STACK_USAGE("__x64_sys_fcntl", 0),
STACK_USAGE("put_compat_flock", 24),
STACK_USAGE("put_compat_flock64", 32),
STACK_USAGE("do_compat_fcntl64", 120),
STACK_USAGE("__ia32_compat_sys_fcntl64", 0),
STACK_USAGE("__ia32_compat_sys_fcntl", 0),
STACK_USAGE("sigio_perm", 32),
STACK_USAGE("send_sigio_to_task", 96),
STACK_USAGE("send_sigio", 64),
STACK_USAGE("send_sigurg", 48),
STACK_USAGE("fasync_free_rcu", 0),
STACK_USAGE("fasync_remove_entry", 40),
STACK_USAGE("fasync_alloc", 0),
STACK_USAGE("f_modown", 40),
STACK_USAGE("fasync_free", 0),
STACK_USAGE("fasync_insert_entry", 48),
STACK_USAGE("fasync_helper", 32),
STACK_USAGE("vfs_dentry_acceptable", 0),
STACK_USAGE("do_handle_open", 80),
STACK_USAGE("__ia32_sys_open_by_handle_at", 0),
STACK_USAGE("__x64_sys_open_by_handle_at", 0),
STACK_USAGE("__ia32_compat_sys_open_by_handle_at", 0),
STACK_USAGE("__ia32_sys_name_to_handle_at", 0),
STACK_USAGE("__se_sys_name_to_handle_at", 80),
STACK_USAGE("__x64_sys_name_to_handle_at", 0),
STACK_USAGE("__fdget", 8),
STACK_USAGE("__fdget_raw", 16),
STACK_USAGE("__fdget_pos", 16),
STACK_USAGE("alloc_fdtable", 40),
STACK_USAGE("__f_unlock_pos", 0),
STACK_USAGE("set_close_on_exec", 40),
STACK_USAGE("get_close_on_exec", 24),
STACK_USAGE("do_dup2", 48),
STACK_USAGE("replace_fd", 48),
STACK_USAGE("__receive_fd", 32),
STACK_USAGE("receive_fd_replace", 24),
STACK_USAGE("receive_fd", 24),
STACK_USAGE("ksys_dup3", 56),
STACK_USAGE("__ia32_sys_dup3", 0),
STACK_USAGE("__x64_sys_dup3", 0),
STACK_USAGE("__ia32_sys_dup2", 0),
STACK_USAGE("__se_sys_dup2", 32),
STACK_USAGE("__x64_sys_dup2", 0),
STACK_USAGE("__ia32_sys_dup", 16),
STACK_USAGE("__x64_sys_dup", 16),
STACK_USAGE("f_dupfd", 16),
STACK_USAGE("iterate_fd", 56),
STACK_USAGE("expand_files", 112),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("sane_fdtable_size", 0),
STACK_USAGE("dup_fd", 96),
STACK_USAGE("__free_fdtable", 8),
STACK_USAGE("free_fdtable_rcu", 16),
STACK_USAGE("put_files_struct", 40),
STACK_USAGE("exit_files", 24),
STACK_USAGE("alloc_fd", 64),
STACK_USAGE("__get_unused_fd_flags", 0),
STACK_USAGE("get_unused_fd_flags", 0),
STACK_USAGE("put_unused_fd", 32),
STACK_USAGE("fd_install", 40),
STACK_USAGE("pick_file", 56),
STACK_USAGE("close_fd", 8),
STACK_USAGE("__close_range", 80),
STACK_USAGE("__close_fd_get_file", 56),
STACK_USAGE("rcu_read_unlock_sched", 0),
STACK_USAGE("close_fd_get_file", 24),
STACK_USAGE("do_close_on_exec", 80),
STACK_USAGE("__fget_files", 64),
STACK_USAGE("fget_many", 0),
STACK_USAGE("fget", 0),
STACK_USAGE("fget_raw", 0),
STACK_USAGE("fget_task", 24),
STACK_USAGE("task_lookup_fd_rcu", 32),
STACK_USAGE("task_lookup_next_fd_rcu", 56),
STACK_USAGE("init_fs_stat_sysctls", 0),
STACK_USAGE("__alloc_file", 32),
STACK_USAGE("alloc_empty_file", 16),
STACK_USAGE("alloc_empty_file_noaccount", 0),
STACK_USAGE("alloc_file", 24),
STACK_USAGE("alloc_file_pseudo", 80),
STACK_USAGE("alloc_file_clone", 16),
STACK_USAGE("__fput", 40),
STACK_USAGE("delayed_fput", 8),
STACK_USAGE("____fput", 0),
STACK_USAGE("flush_delayed_fput", 8),
STACK_USAGE("fput_many", 8),
STACK_USAGE("fput", 8),
STACK_USAGE("__fput_sync", 0),
STACK_USAGE("files_init", 0),
STACK_USAGE("files_maxfiles_init", 0),
STACK_USAGE("file_free_rcu", 16),
STACK_USAGE("get_max_files", 0),
STACK_USAGE("proc_nr_files", 0),
STACK_USAGE("unregister_filesystem", 8),
STACK_USAGE("__ia32_sys_sysfs", 0),
STACK_USAGE("__se_sys_sysfs", 40),
STACK_USAGE("__x64_sys_sysfs", 0),
STACK_USAGE("list_bdev_fs_names", 48),
STACK_USAGE("filesystems_proc_show", 24),
STACK_USAGE("proc_filesystems_init", 0),
STACK_USAGE("get_fs_type", 48),
STACK_USAGE("get_filesystem", 8),
STACK_USAGE("put_filesystem", 0),
STACK_USAGE("register_filesystem", 40),
STACK_USAGE("cgroup_writeback_by_id", 48),
STACK_USAGE("cgroup_writeback_umount", 0),
STACK_USAGE("cgroup_writeback_init", 8),
STACK_USAGE("inode_io_list_move_locked", 0),
STACK_USAGE("wb_start_background_writeback", 16),
STACK_USAGE("inode_io_list_del", 24),
STACK_USAGE("sb_mark_inode_writeback", 40),
STACK_USAGE("sb_clear_inode_writeback", 32),
STACK_USAGE("__traceiter_writeback_mark_inode_dirty", 24),
STACK_USAGE("redirty_tail_locked", 0),
STACK_USAGE("__traceiter_writeback_dirty_inode_start", 24),
STACK_USAGE("move_expired_inodes", 96),
STACK_USAGE("queue_io", 40),
STACK_USAGE("__traceiter_writeback_dirty_inode", 24),
STACK_USAGE("inode_wait_for_writeback", 104),
STACK_USAGE("__writeback_single_inode", 56),
STACK_USAGE("wb_queue_work", 24),
STACK_USAGE("writeback_single_inode", 120),
STACK_USAGE("xas_next_marked", 32),
STACK_USAGE("writeback_sb_inodes", 264),
STACK_USAGE("__bpf_trace_inode_foreign_history", 0),
STACK_USAGE("__traceiter_inode_foreign_history", 32),
STACK_USAGE("perf_trace_inode_foreign_history", 80),
STACK_USAGE("trace_event_raw_event_inode_foreign_history", 96),
STACK_USAGE("trace_raw_output_inode_foreign_history", 24),
STACK_USAGE("wb_wait_for_completion", 64),
STACK_USAGE("__writeback_inodes_wb", 56),
STACK_USAGE("writeback_inodes_wb", 120),
STACK_USAGE("wb_writeback", 184),
STACK_USAGE("__bpf_trace_inode_switch_wbs", 0),
STACK_USAGE("__traceiter_inode_switch_wbs", 32),
STACK_USAGE("perf_trace_inode_switch_wbs", 88),
STACK_USAGE("trace_event_raw_event_inode_switch_wbs", 96),
STACK_USAGE("trace_raw_output_inode_switch_wbs", 24),
STACK_USAGE("wb_workfn", 136),
STACK_USAGE("__wakeup_flusher_threads_bdi", 32),
STACK_USAGE("wakeup_flusher_threads_bdi", 16),
STACK_USAGE("wakeup_flusher_threads", 24),
STACK_USAGE("wakeup_dirtytime_writeback", 40),
STACK_USAGE("start_dirtytime_writeback", 0),
STACK_USAGE("dirtytime_interval_handler", 16),
STACK_USAGE("wb_get", 8),
STACK_USAGE("__mark_inode_dirty", 48),
STACK_USAGE("__bpf_trace_track_foreign_dirty", 0),
STACK_USAGE("__traceiter_track_foreign_dirty", 24),
STACK_USAGE("perf_trace_track_foreign_dirty", 88),
STACK_USAGE("trace_event_raw_event_track_foreign_dirty", 96),
STACK_USAGE("trace_raw_output_track_foreign_dirty", 24),
STACK_USAGE("__inode_attach_wb", 40),
STACK_USAGE("writeback_inodes_sb_nr", 80),
STACK_USAGE("writeback_inodes_sb", 104),
STACK_USAGE("wb_put", 0),
STACK_USAGE("try_to_writeback_inodes_sb", 112),
STACK_USAGE("sync_inodes_sb", 160),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("write_inode_now", 112),
STACK_USAGE("sync_inode_metadata", 104),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("__bpf_trace_flush_foreign", 0),
STACK_USAGE("__traceiter_flush_foreign", 32),
STACK_USAGE("perf_trace_flush_foreign", 80),
STACK_USAGE("trace_event_raw_event_flush_foreign", 96),
STACK_USAGE("trace_raw_output_flush_foreign", 24),
STACK_USAGE("inode_cgwb_move_to_attached", 0),
STACK_USAGE("locked_inode_to_wb_and_lock_list", 40),
STACK_USAGE("__bpf_trace_writeback_write_inode_template", 0),
STACK_USAGE("perf_trace_writeback_write_inode_template", 80),
STACK_USAGE("trace_event_raw_event_writeback_write_inode_template", 88),
STACK_USAGE("trace_raw_output_writeback_write_inode_template", 24),
STACK_USAGE("percpu_ref_put_many", 16),
STACK_USAGE("__traceiter_writeback_write_inode_start", 24),
STACK_USAGE("__traceiter_writeback_write_inode", 24),
STACK_USAGE("__bpf_trace_writeback_work_class", 0),
STACK_USAGE("perf_trace_writeback_work_class", 80),
STACK_USAGE("trace_event_raw_event_writeback_work_class", 88),
STACK_USAGE("trace_raw_output_writeback_work_class", 88),
STACK_USAGE("css_tryget", 16),
STACK_USAGE("__traceiter_writeback_queue", 24),
STACK_USAGE("__traceiter_writeback_exec", 24),
STACK_USAGE("__traceiter_writeback_start", 24),
STACK_USAGE("__traceiter_writeback_written", 24),
STACK_USAGE("__traceiter_writeback_wait", 24),
STACK_USAGE("__bpf_trace_writeback_pages_written", 0),
STACK_USAGE("__traceiter_writeback_pages_written", 16),
STACK_USAGE("perf_trace_writeback_pages_written", 56),
STACK_USAGE("trace_event_raw_event_writeback_pages_written", 72),
STACK_USAGE("trace_raw_output_writeback_pages_written", 24),
STACK_USAGE("trace_writeback_pages_written", 0),
STACK_USAGE("__bpf_trace_writeback_class", 0),
STACK_USAGE("perf_trace_writeback_class", 72),
STACK_USAGE("trace_event_raw_event_writeback_class", 80),
STACK_USAGE("trace_raw_output_writeback_class", 24),
STACK_USAGE("__traceiter_writeback_wake_background", 16),
STACK_USAGE("__bpf_trace_writeback_bdi_register", 0),
STACK_USAGE("__traceiter_writeback_bdi_register", 16),
STACK_USAGE("perf_trace_writeback_bdi_register", 72),
STACK_USAGE("trace_event_raw_event_writeback_bdi_register", 72),
STACK_USAGE("trace_raw_output_writeback_bdi_register", 24),
STACK_USAGE("__bpf_trace_wbc_class", 0),
STACK_USAGE("perf_trace_wbc_class", 72),
STACK_USAGE("trace_event_raw_event_wbc_class", 88),
STACK_USAGE("trace_raw_output_wbc_class", 32),
STACK_USAGE("inode_switch_wbs_work_fn", 240),
STACK_USAGE("__traceiter_wbc_writepage", 24),
STACK_USAGE("__bpf_trace_writeback_queue_io", 0),
STACK_USAGE("__traceiter_writeback_queue_io", 40),
STACK_USAGE("perf_trace_writeback_queue_io", 88),
STACK_USAGE("trace_event_raw_event_writeback_queue_io", 104),
STACK_USAGE("trace_raw_output_writeback_queue_io", 56),
STACK_USAGE("inode_prepare_wbs_switch", 24),
STACK_USAGE("__bpf_trace_global_dirty_state", 0),
STACK_USAGE("__traceiter_global_dirty_state", 24),
STACK_USAGE("perf_trace_global_dirty_state", 64),
STACK_USAGE("trace_event_raw_event_global_dirty_state", 80),
STACK_USAGE("trace_raw_output_global_dirty_state", 24),
STACK_USAGE("inode_switch_wbs", 40),
STACK_USAGE("__bpf_trace_writeback_folio_template", 0),
STACK_USAGE("perf_trace_writeback_folio_template", 80),
STACK_USAGE("trace_event_raw_event_writeback_folio_template", 88),
STACK_USAGE("trace_raw_output_writeback_folio_template", 24),
STACK_USAGE("__bpf_trace_bdi_dirty_ratelimit", 0),
STACK_USAGE("__traceiter_bdi_dirty_ratelimit", 32),
STACK_USAGE("perf_trace_bdi_dirty_ratelimit", 88),
STACK_USAGE("trace_event_raw_event_bdi_dirty_ratelimit", 96),
STACK_USAGE("trace_raw_output_bdi_dirty_ratelimit", 24),
STACK_USAGE("__bpf_trace_balance_dirty_pages", 0),
STACK_USAGE("__traceiter_balance_dirty_pages", 48),
STACK_USAGE("cleanup_offline_cgwb", 48),
STACK_USAGE("perf_trace_balance_dirty_pages", 112),
STACK_USAGE("trace_event_raw_event_balance_dirty_pages", 128),
STACK_USAGE("trace_raw_output_balance_dirty_pages", 24),
STACK_USAGE("wbc_attach_and_unlock_inode", 16),
STACK_USAGE("__bpf_trace_writeback_sb_inodes_requeue", 0),
STACK_USAGE("__traceiter_writeback_sb_inodes_requeue", 16),
STACK_USAGE("perf_trace_writeback_sb_inodes_requeue", 72),
STACK_USAGE("trace_event_raw_event_writeback_sb_inodes_requeue", 80),
STACK_USAGE("trace_raw_output_writeback_sb_inodes_requeue", 40),
STACK_USAGE("__bpf_trace_writeback_single_inode_template", 0),
STACK_USAGE("perf_trace_writeback_single_inode_template", 88),
STACK_USAGE("trace_event_raw_event_writeback_single_inode_template", 96),
STACK_USAGE("trace_raw_output_writeback_single_inode_template", 40),
STACK_USAGE("wbc_detach_inode", 40),
STACK_USAGE("__traceiter_writeback_single_inode_start", 32),
STACK_USAGE("__traceiter_writeback_single_inode", 32),
STACK_USAGE("__bpf_trace_writeback_inode_template", 0),
STACK_USAGE("perf_trace_writeback_inode_template", 56),
STACK_USAGE("trace_event_raw_event_writeback_inode_template", 72),
STACK_USAGE("trace_raw_output_writeback_inode_template", 56),
STACK_USAGE("__traceiter_writeback_lazytime", 16),
STACK_USAGE("__traceiter_writeback_dirty_folio", 24),
STACK_USAGE("__traceiter_writeback_lazytime_iput", 16),
STACK_USAGE("__traceiter_writeback_dirty_inode_enqueue", 16),
STACK_USAGE("trace_writeback_dirty_inode_enqueue", 0),
STACK_USAGE("__traceiter_sb_mark_inode_writeback", 16),
STACK_USAGE("__traceiter_sb_clear_inode_writeback", 16),
STACK_USAGE("wbc_account_cgroup_owner", 16),
STACK_USAGE("__traceiter_folio_wait_writeback", 24),
STACK_USAGE("bdi_split_work_to_wbs", 152),
STACK_USAGE("__bpf_trace_writeback_dirty_inode_template", 0),
STACK_USAGE("perf_trace_writeback_dirty_inode_template", 72),
STACK_USAGE("trace_event_raw_event_writeback_dirty_inode_template", 88),
STACK_USAGE("trace_raw_output_writeback_dirty_inode_template", 56),
STACK_USAGE("vfs_parse_fs_param", 32),
STACK_USAGE("vfs_parse_fs_string", 56),
STACK_USAGE("generic_parse_monolithic", 104),
STACK_USAGE("alloc_fs_context", 48),
STACK_USAGE("fs_context_for_mount", 0),
STACK_USAGE("fs_context_for_reconfigure", 0),
STACK_USAGE("fs_context_for_submount", 0),
STACK_USAGE("fc_drop_locked", 16),
STACK_USAGE("vfs_dup_fs_context", 32),
STACK_USAGE("logfc", 136),
STACK_USAGE("put_fs_context", 24),
STACK_USAGE("legacy_fs_context_free", 8),
STACK_USAGE("legacy_fs_context_dup", 32),
STACK_USAGE("legacy_parse_param", 64),
STACK_USAGE("legacy_parse_monolithic", 0),
STACK_USAGE("legacy_get_tree", 8),
STACK_USAGE("legacy_reconfigure", 0),
STACK_USAGE("legacy_init_fs_context", 8),
STACK_USAGE("parse_monolithic_mount_data", 0),
STACK_USAGE("vfs_clean_context", 8),
STACK_USAGE("finish_clean_context", 8),
STACK_USAGE("vfs_parse_fs_param_source", 16),
STACK_USAGE("__fs_parse", 72),
STACK_USAGE("fs_lookup_param", 56),
STACK_USAGE("fs_param_is_bool", 32),
STACK_USAGE("fs_param_is_u32", 16),
STACK_USAGE("fs_param_is_s32", 24),
STACK_USAGE("fs_param_is_u64", 24),
STACK_USAGE("fs_param_is_enum", 40),
STACK_USAGE("fs_param_is_string", 0),
STACK_USAGE("fs_param_is_blob", 0),
STACK_USAGE("fs_param_is_fd", 32),
STACK_USAGE("fs_param_is_blockdev", 0),
STACK_USAGE("fs_param_is_path", 0),
STACK_USAGE("validate_constant_table", 64),
STACK_USAGE("fs_validate_description", 48),
STACK_USAGE("lookup_constant", 24),
STACK_USAGE("pin_remove", 8),
STACK_USAGE("pin_insert", 16),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("pin_kill", 72),
STACK_USAGE("mnt_pin_kill", 8),
STACK_USAGE("rcu_read_unlock", 0),
STACK_USAGE("group_pin_kill", 8),
STACK_USAGE("copy_fs_struct", 24),
STACK_USAGE("unshare_fs_struct", 48),
STACK_USAGE("current_umask", 0),
STACK_USAGE("set_fs_root", 64),
STACK_USAGE("set_fs_pwd", 64),
STACK_USAGE("chroot_fs_refs", 96),
STACK_USAGE("free_fs_struct", 8),
STACK_USAGE("exit_fs", 32),
STACK_USAGE("fs_umode_to_dtype", 0),
STACK_USAGE("fs_ftype_to_dtype", 0),
STACK_USAGE("fs_umode_to_ftype", 0),
STACK_USAGE("__ia32_sys_fsopen", 0),
STACK_USAGE("__se_sys_fsopen", 32),
STACK_USAGE("__x64_sys_fsopen", 0),
STACK_USAGE("__ia32_sys_fspick", 0),
STACK_USAGE("__se_sys_fspick", 48),
STACK_USAGE("__x64_sys_fspick", 0),
STACK_USAGE("fscontext_read", 56),
STACK_USAGE("__ia32_sys_fsconfig", 0),
STACK_USAGE("__se_sys_fsconfig", 112),
STACK_USAGE("__x64_sys_fsconfig", 0),
STACK_USAGE("fscontext_release", 0),
STACK_USAGE("hugetlbfs_show_options", 40),
STACK_USAGE("hugetlbfs_statfs", 24),
STACK_USAGE("hugetlbfs_put_super", 8),
STACK_USAGE("hugetlbfs_inc_free_inodes", 16),
STACK_USAGE("hugetlbfs_alloc_inode", 24),
STACK_USAGE("hugetlbfs_free_inode", 0),
STACK_USAGE("hugetlbfs_destroy_inode", 24),
STACK_USAGE("init_once", 0),
STACK_USAGE("hugetlbfs_parse_param", 56),
STACK_USAGE("put_page", 0),
STACK_USAGE("hugetlbfs_file_mmap", 56),
STACK_USAGE("hugetlbfs_fill_super", 32),
STACK_USAGE("hugetlbfs_get_tree", 0),
STACK_USAGE("hugetlbfs_fs_context_free", 0),
STACK_USAGE("hugetlbfs_init_fs_context", 8),
STACK_USAGE("hugetlb_file_setup", 48),
STACK_USAGE("mount_one_hugetlbfs", 24),
STACK_USAGE("init_hugetlbfs_fs", 24),
STACK_USAGE("hugetlbfs_read_iter", 112),
STACK_USAGE("hugetlbfs_write_begin", 0),
STACK_USAGE("hugetlbfs_write_end", 0),
STACK_USAGE("remove_huge_page", 0),
STACK_USAGE("remove_inode_hugepages", 304),
STACK_USAGE("hugetlbfs_evict_inode", 8),
STACK_USAGE("hugetlbfs_fallocate", 328),
STACK_USAGE("hugetlbfs_setattr", 56),
STACK_USAGE("hugetlbfs_get_inode", 48),
STACK_USAGE("hugetlbfs_mknod", 24),
STACK_USAGE("hugetlbfs_mkdir", 24),
STACK_USAGE("hugetlbfs_create", 32),
STACK_USAGE("hugetlbfs_tmpfile", 32),
STACK_USAGE("hugetlbfs_symlink", 32),
STACK_USAGE("hugetlbfs_migrate_page", 32),
STACK_USAGE("hugetlbfs_error_remove_page", 16),
STACK_USAGE("init_chmod", 40),
STACK_USAGE("init_eaccess", 40),
STACK_USAGE("init_stat", 56),
STACK_USAGE("init_mknod", 64),
STACK_USAGE("init_link", 64),
STACK_USAGE("init_mount", 72),
STACK_USAGE("init_symlink", 56),
STACK_USAGE("init_unlink", 0),
STACK_USAGE("init_mkdir", 48),
STACK_USAGE("init_rmdir", 0),
STACK_USAGE("init_utimes", 48),
STACK_USAGE("init_dup", 16),
STACK_USAGE("init_umount", 32),
STACK_USAGE("init_chdir", 32),
STACK_USAGE("init_chroot", 40),
STACK_USAGE("init_chown", 56),
STACK_USAGE("new_inode_pseudo", 16),
STACK_USAGE("new_inode", 24),
STACK_USAGE("lockdep_annotate_inode_mutex_key", 24),
STACK_USAGE("unlock_new_inode", 24),
STACK_USAGE("discard_new_inode", 24),
STACK_USAGE("proc_nr_inodes", 64),
STACK_USAGE("lock_two_nondirectories", 16),
STACK_USAGE("unlock_two_nondirectories", 16),
STACK_USAGE("inode_insert5", 56),
STACK_USAGE("iget5_locked", 48),
STACK_USAGE("iget_locked", 48),
STACK_USAGE("iunique", 32),
STACK_USAGE("init_fs_inode_sysctls", 0),
STACK_USAGE("igrab", 16),
STACK_USAGE("ilookup5_nowait", 32),
STACK_USAGE("no_open", 0),
STACK_USAGE("ilookup5", 56),
STACK_USAGE("ilookup", 40),
STACK_USAGE("find_inode_nowait", 48),
STACK_USAGE("find_inode_rcu", 40),
STACK_USAGE("inode_init_always", 24),
STACK_USAGE("find_inode_by_ino_rcu", 32),
STACK_USAGE("insert_inode_locked", 56),
STACK_USAGE("insert_inode_locked4", 16),
STACK_USAGE("generic_delete_inode", 0),
STACK_USAGE("iput", 32),
STACK_USAGE("bmap", 8),
STACK_USAGE("generic_update_time", 0),
STACK_USAGE("inode_update_time", 0),
STACK_USAGE("atime_needs_update", 24),
STACK_USAGE("touch_atime", 64),
STACK_USAGE("should_remove_suid", 16),
STACK_USAGE("dentry_needs_remove_privs", 32),
STACK_USAGE("wait_on_inode", 8),
STACK_USAGE("file_remove_privs", 136),
STACK_USAGE("file_update_time", 56),
STACK_USAGE("file_modified", 8),
STACK_USAGE("inode_needs_sync", 0),
STACK_USAGE("set_ihash_entries", 16),
STACK_USAGE("inode_init_early", 0),
STACK_USAGE("inode_init", 0),
STACK_USAGE("init_special_inode", 0),
STACK_USAGE("inode_init_owner", 48),
STACK_USAGE("inode_owner_or_capable", 16),
STACK_USAGE("inode_dio_wait", 96),
STACK_USAGE("inode_set_flags", 0),
STACK_USAGE("inode_nohighmem", 0),
STACK_USAGE("timestamp_truncate", 16),
STACK_USAGE("current_time", 40),
STACK_USAGE("free_inode_nonrcu", 0),
STACK_USAGE("i_callback", 0),
STACK_USAGE("alloc_inode", 24),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("__destroy_inode", 24),
STACK_USAGE("destroy_inode", 16),
STACK_USAGE("drop_nlink", 0),
STACK_USAGE("clear_nlink", 0),
STACK_USAGE("set_nlink", 0),
STACK_USAGE("inc_nlink", 0),
STACK_USAGE("address_space_init_once", 8),
STACK_USAGE("inode_init_once", 16),
STACK_USAGE("init_once", 16),
STACK_USAGE("__iget", 0),
STACK_USAGE("ihold", 0),
STACK_USAGE("inode_add_lru", 0),
STACK_USAGE("inode_sb_list_add", 16),
STACK_USAGE("__insert_inode_hash", 40),
STACK_USAGE("__remove_inode_hash", 16),
STACK_USAGE("dump_mapping", 360),
STACK_USAGE("clear_inode", 16),
STACK_USAGE("evict", 40),
STACK_USAGE("evict_inodes", 80),
STACK_USAGE("invalidate_inodes", 96),
STACK_USAGE("inode_lru_isolate", 48),
STACK_USAGE("prune_icache_sb", 40),
STACK_USAGE("find_inode", 136),
STACK_USAGE("find_inode_fast", 128),
STACK_USAGE("get_nr_dirty_inodes", 32),
STACK_USAGE("get_next_ino", 8),
STACK_USAGE("io_wq_worker_cancel", 32),
STACK_USAGE("io_acct_cancel_pending_work", 48),
STACK_USAGE("io_wq_cancel_cb", 104),
STACK_USAGE("io_wqe_hash_wake", 16),
STACK_USAGE("io_wq_create", 88),
STACK_USAGE("io_task_work_match", 0),
STACK_USAGE("io_wq_exit_start", 0),
STACK_USAGE("io_wq_cancel_tw_create", 8),
STACK_USAGE("io_wq_put_and_exit", 136),
STACK_USAGE("__io_wq_cpu_online", 80),
STACK_USAGE("io_wq_cpu_online", 0),
STACK_USAGE("io_wq_cpu_offline", 0),
STACK_USAGE("io_wq_cpu_affinity", 32),
STACK_USAGE("io_wq_max_workers", 72),
STACK_USAGE("io_wq_init", 8),
STACK_USAGE("io_worker_ref_put", 0),
STACK_USAGE("io_worker_cancel_cb", 32),
STACK_USAGE("io_task_worker_match", 0),
STACK_USAGE("io_wqe_activate_free_worker", 32),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("create_worker_cb", 32),
STACK_USAGE("io_queue_worker_create", 40),
STACK_USAGE("io_wqe_dec_running", 40),
STACK_USAGE("io_wait_on_hash", 24),
STACK_USAGE("io_flush_signals", 8),
STACK_USAGE("io_worker_handle_work", 128),
STACK_USAGE("io_wqe_worker", 200),
STACK_USAGE("io_wq_worker_running", 0),
STACK_USAGE("io_wq_worker_sleeping", 0),
STACK_USAGE("io_wq_work_match_all", 0),
STACK_USAGE("create_worker_cont", 72),
STACK_USAGE("io_workqueue_create", 8),
STACK_USAGE("create_io_worker", 56),
STACK_USAGE("io_wq_for_each_worker", 56),
STACK_USAGE("io_wq_worker_wake", 16),
STACK_USAGE("io_wq_work_match_item", 0),
STACK_USAGE("io_wqe_enqueue", 88),
STACK_USAGE("io_wq_enqueue", 0),
STACK_USAGE("io_wq_hash_work", 0),
STACK_USAGE("io_unregister_personality", 16),
STACK_USAGE("io_tctx_exit_cb", 8),
STACK_USAGE("io_cancel_ctx_cb", 0),
STACK_USAGE("io_ring_exit_work", 176),
STACK_USAGE("io_kill_timeouts", 72),
STACK_USAGE("io_ring_ctx_wait_and_kill", 48),
STACK_USAGE("io_uring_release", 0),
STACK_USAGE("io_cancel_task_cb", 0),
STACK_USAGE("io_cancel_defer_files", 64),
STACK_USAGE("io_uring_try_cancel_iowq", 40),
STACK_USAGE("io_uring_try_cancel_requests", 88),
STACK_USAGE("__io_uring_add_tctx_node", 56),
STACK_USAGE("io_uring_del_tctx_node", 24),
STACK_USAGE("io_uring_clean_tctx", 48),
STACK_USAGE("io_uring_cancel_generic", 144),
STACK_USAGE("__io_uring_cancel", 0),
STACK_USAGE("io_uring_unreg_ringfd", 16),
STACK_USAGE("io_uring_mmap", 0),
STACK_USAGE("__ia32_sys_io_uring_enter", 0),
STACK_USAGE("__se_sys_io_uring_enter", 184),
STACK_USAGE("__x64_sys_io_uring_enter", 0),
STACK_USAGE("io_uring_show_cred", 72),
STACK_USAGE("__io_uring_show_fdinfo", 96),
STACK_USAGE("__bpf_trace_io_uring_file_get", 0),
STACK_USAGE("__traceiter_io_uring_file_get", 40),
STACK_USAGE("perf_trace_io_uring_file_get", 72),
STACK_USAGE("trace_event_raw_event_io_uring_file_get", 96),
STACK_USAGE("trace_raw_output_io_uring_file_get", 24),
STACK_USAGE("io_uring_show_fdinfo", 16),
STACK_USAGE("io_allocate_scq_urings", 48),
STACK_USAGE("io_uring_install_fd", 32),
STACK_USAGE("io_uring_get_file", 24),
STACK_USAGE("io_uring_create", 56),
STACK_USAGE("__ia32_sys_io_uring_setup", 144),
STACK_USAGE("__x64_sys_io_uring_setup", 144),
STACK_USAGE("io_probe", 40),
STACK_USAGE("io_register_restrictions", 32),
STACK_USAGE("__io_register_rsrc_update", 192),
STACK_USAGE("io_register_rsrc", 56),
STACK_USAGE("io_register_iowq_aff", 40),
STACK_USAGE("io_unregister_iowq_aff", 0),
STACK_USAGE("io_register_iowq_max_workers", 56),
STACK_USAGE("__ia32_sys_io_uring_register", 0),
STACK_USAGE("__se_sys_io_uring_register", 136),
STACK_USAGE("__x64_sys_io_uring_register", 0),
STACK_USAGE("io_uring_init", 0),
STACK_USAGE("put_task_struct_many", 0),
STACK_USAGE("io_uring_get_socket", 0),
STACK_USAGE("req_ref_put_and_test", 0),
STACK_USAGE("io_submit_flush_completions", 64),
STACK_USAGE("__bpf_trace_io_uring_queue_async_work", 0),
STACK_USAGE("__traceiter_io_uring_queue_async_work", 48),
STACK_USAGE("perf_trace_io_uring_queue_async_work", 80),
STACK_USAGE("trace_event_raw_event_io_uring_queue_async_work", 104),
STACK_USAGE("trace_raw_output_io_uring_queue_async_work", 24),
STACK_USAGE("io_ring_ctx_ref_free", 0),
STACK_USAGE("io_fallback_req_func", 64),
STACK_USAGE("io_ring_ctx_alloc", 48),
STACK_USAGE("__io_prep_linked_timeout", 0),
STACK_USAGE("io_prep_async_work", 32),
STACK_USAGE("io_queue_async_work", 48),
STACK_USAGE("io_kill_timeout", 16),
STACK_USAGE("io_queue_deferred", 16),
STACK_USAGE("io_flush_timeouts", 40),
STACK_USAGE("__io_commit_cqring_flush", 16),
STACK_USAGE("__io_cqring_overflow_flush", 56),
STACK_USAGE("__bpf_trace_io_uring_defer", 0),
STACK_USAGE("__traceiter_io_uring_defer", 40),
STACK_USAGE("perf_trace_io_uring_defer", 72),
STACK_USAGE("trace_event_raw_event_io_uring_defer", 96),
STACK_USAGE("trace_raw_output_io_uring_defer", 24),
STACK_USAGE("io_task_refs_refill", 16),
STACK_USAGE("io_uring_drop_tctx_refs", 16),
STACK_USAGE("percpu_ref_get_many", 16),
STACK_USAGE("io_fill_cqe_req", 24),
STACK_USAGE("io_fill_cqe_aux", 32),
STACK_USAGE("__io_req_complete_post", 48),
STACK_USAGE("io_req_complete_failed", 40),
STACK_USAGE("__io_alloc_req_refill", 104),
STACK_USAGE("__bpf_trace_io_uring_link", 0),
STACK_USAGE("__traceiter_io_uring_link", 32),
STACK_USAGE("perf_trace_io_uring_link", 72),
STACK_USAGE("trace_event_raw_event_io_uring_link", 88),
STACK_USAGE("trace_raw_output_io_uring_link", 24),
STACK_USAGE("__io_free_req", 40),
STACK_USAGE("io_fail_links", 40),
STACK_USAGE("io_disarm_next", 24),
STACK_USAGE("__io_req_find_next_prep", 24),
STACK_USAGE("ctx_commit_and_unlock", 8),
STACK_USAGE("tctx_task_work", 80),
STACK_USAGE("get_cred", 8),
STACK_USAGE("io_req_task_work_add", 40),
STACK_USAGE("__bpf_trace_io_uring_cqring_wait", 0),
STACK_USAGE("__traceiter_io_uring_cqring_wait", 24),
STACK_USAGE("perf_trace_io_uring_cqring_wait", 64),
STACK_USAGE("trace_event_raw_event_io_uring_cqring_wait", 80),
STACK_USAGE("trace_raw_output_io_uring_cqring_wait", 24),
STACK_USAGE("io_req_task_cancel", 16),
STACK_USAGE("io_req_task_submit", 16),
STACK_USAGE("__bpf_trace_io_uring_create", 0),
STACK_USAGE("__traceiter_io_uring_create", 48),
STACK_USAGE("perf_trace_io_uring_create", 80),
STACK_USAGE("trace_event_raw_event_io_uring_create", 104),
STACK_USAGE("trace_io_uring_create", 0),
STACK_USAGE("trace_raw_output_io_uring_create", 24),
STACK_USAGE("io_free_req_work", 8),
STACK_USAGE("io_free_batch_list", 48),
STACK_USAGE("percpu_ref_tryget", 8),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("io_run_task_work", 8),
STACK_USAGE("io_do_iopoll", 104),
STACK_USAGE("io_iopoll_try_reap_events", 16),
STACK_USAGE("__bpf_trace_io_uring_fail_link", 0),
STACK_USAGE("__traceiter_io_uring_fail_link", 48),
STACK_USAGE("perf_trace_io_uring_fail_link", 80),
STACK_USAGE("trace_event_raw_event_io_uring_fail_link", 104),
STACK_USAGE("trace_raw_output_io_uring_fail_link", 24),
STACK_USAGE("kiocb_end_write", 16),
STACK_USAGE("io_rw_should_reissue", 0),
STACK_USAGE("__io_complete_rw_common", 16),
STACK_USAGE("io_req_task_complete", 40),
STACK_USAGE("io_complete_rw", 16),
STACK_USAGE("io_complete_rw_iopoll", 16),
STACK_USAGE("kiocb_done", 56),
STACK_USAGE("__bpf_trace_io_uring_complete", 0),
STACK_USAGE("__traceiter_io_uring_complete", 48),
STACK_USAGE("perf_trace_io_uring_complete", 80),
STACK_USAGE("trace_event_raw_event_io_uring_complete", 104),
STACK_USAGE("trace_io_uring_complete", 0),
STACK_USAGE("trace_raw_output_io_uring_complete", 24),
STACK_USAGE("audit_free", 0),
STACK_USAGE("percpu_ref_put_many", 16),
STACK_USAGE("io_buffer_select", 40),
STACK_USAGE("io_import_iovec", 96),
STACK_USAGE("loop_rw_iter", 64),
STACK_USAGE("io_alloc_async_data", 8),
STACK_USAGE("io_setup_async_rw", 32),
STACK_USAGE("__bpf_trace_io_uring_submit_sqe", 0),
STACK_USAGE("__traceiter_io_uring_submit_sqe", 64),
STACK_USAGE("perf_trace_io_uring_submit_sqe", 80),
STACK_USAGE("trace_event_raw_event_io_uring_submit_sqe", 104),
STACK_USAGE("trace_raw_output_io_uring_submit_sqe", 24),
STACK_USAGE("io_async_buf_func", 0),
STACK_USAGE("io_rw_init_file", 32),
STACK_USAGE("io_write", 256),
STACK_USAGE("__bpf_trace_io_uring_poll_arm", 0),
STACK_USAGE("__traceiter_io_uring_poll_arm", 48),
STACK_USAGE("perf_trace_io_uring_poll_arm", 80),
STACK_USAGE("trace_event_raw_event_io_uring_poll_arm", 104),
STACK_USAGE("trace_raw_output_io_uring_poll_arm", 24),
STACK_USAGE("__bpf_trace_io_uring_task_add", 0),
STACK_USAGE("__traceiter_io_uring_task_add", 48),
STACK_USAGE("perf_trace_io_uring_task_add", 80),
STACK_USAGE("trace_event_raw_event_io_uring_task_add", 104),
STACK_USAGE("trace_raw_output_io_uring_task_add", 24),
STACK_USAGE("io_openat2", 88),
STACK_USAGE("__bpf_trace_io_uring_req_failed", 0),
STACK_USAGE("__traceiter_io_uring_req_failed", 40),
STACK_USAGE("perf_trace_io_uring_req_failed", 72),
STACK_USAGE("trace_event_raw_event_io_uring_req_failed", 96),
STACK_USAGE("trace_raw_output_io_uring_req_failed", 64),
STACK_USAGE("get_uid", 8),
STACK_USAGE("io_recvmsg_copy_hdr", 40),
STACK_USAGE("io_poll_remove_entries", 24),
STACK_USAGE("io_poll_check_events", 104),
STACK_USAGE("io_poll_task_func", 24),
STACK_USAGE("io_apoll_task_func", 32),
STACK_USAGE("__io_poll_execute", 8),
STACK_USAGE("io_poll_cancel_req", 0),
STACK_USAGE("io_poll_wake", 16),
STACK_USAGE("__io_queue_proc", 48),
STACK_USAGE("io_poll_queue_proc", 0),
STACK_USAGE("__io_arm_poll_handler", 48),
STACK_USAGE("io_async_queue_proc", 0),
STACK_USAGE("io_arm_poll_handler", 96),
STACK_USAGE("io_poll_remove_all", 64),
STACK_USAGE("io_poll_add", 72),
STACK_USAGE("io_timeout_fn", 24),
STACK_USAGE("io_timeout_prep", 48),
STACK_USAGE("io_cancel_cb", 0),
STACK_USAGE("io_try_cancel_userdata", 72),
STACK_USAGE("__bpf_trace_io_uring_register", 0),
STACK_USAGE("__traceiter_io_uring_register", 48),
STACK_USAGE("perf_trace_io_uring_register", 80),
STACK_USAGE("trace_event_raw_event_io_uring_register", 104),
STACK_USAGE("trace_raw_output_io_uring_register", 24),
STACK_USAGE("io_req_prep_async", 40),
STACK_USAGE("io_drain_req", 48),
STACK_USAGE("io_clean_op", 16),
STACK_USAGE("io_issue_sqe", 536),
STACK_USAGE("io_wq_free_work", 24),
STACK_USAGE("io_wq_submit_work", 64),
STACK_USAGE("io_fixed_file_set", 24),
STACK_USAGE("io_file_get_fixed", 48),
STACK_USAGE("io_file_get_normal", 24),
STACK_USAGE("io_req_task_link_timeout", 40),
STACK_USAGE("io_link_timeout_fn", 16),
STACK_USAGE("io_queue_linked_timeout", 24),
STACK_USAGE("io_queue_sqe_arm_apoll", 16),
STACK_USAGE("io_queue_sqe_fallback", 8),
STACK_USAGE("io_queue_sqe", 8),
STACK_USAGE("io_submit_sqes", 144),
STACK_USAGE("io_sq_thread", 264),
STACK_USAGE("io_wake_function", 0),
STACK_USAGE("io_alloc_page_table", 56),
STACK_USAGE("io_rsrc_node_ref_zero", 72),
STACK_USAGE("io_rsrc_node_switch", 32),
STACK_USAGE("io_rsrc_node_switch_start", 24),
STACK_USAGE("io_rsrc_ref_quiesce", 48),
STACK_USAGE("io_rsrc_data_free", 32),
STACK_USAGE("io_rsrc_data_alloc", 64),
STACK_USAGE("__io_sqe_files_unregister", 40),
STACK_USAGE("io_sq_thread_unpark", 0),
STACK_USAGE("io_sq_thread_park", 8),
STACK_USAGE("io_put_sq_data", 16),
STACK_USAGE("io_sq_thread_finish", 40),
STACK_USAGE("__io_sqe_files_scm", 88),
STACK_USAGE("io_sqe_files_scm", 48),
STACK_USAGE("io_rsrc_file_put", 144),
STACK_USAGE("io_rsrc_put_work", 96),
STACK_USAGE("io_sqe_files_register", 64),
STACK_USAGE("io_sqe_file_register", 72),
STACK_USAGE("io_install_fixed_file", 88),
STACK_USAGE("io_uring_alloc_task_context", 88),
STACK_USAGE("__io_uring_free", 16),
STACK_USAGE("io_sq_offload_create", 48),
STACK_USAGE("io_mem_free", 0),
STACK_USAGE("io_buffer_unmap", 40),
STACK_USAGE("io_rsrc_buf_put", 40),
STACK_USAGE("__io_sqe_buffers_unregister", 48),
STACK_USAGE("io_copy_iov", 24),
STACK_USAGE("io_sqe_buffer_register", 128),
STACK_USAGE("io_sqe_buffers_register", 96),
STACK_USAGE("io_eventfd_register", 48),
STACK_USAGE("io_eventfd_put", 8),
STACK_USAGE("io_eventfd_unregister", 8),
STACK_USAGE("io_req_caches_free", 32),
STACK_USAGE("io_ring_ctx_free", 64),
STACK_USAGE("io_uring_poll", 8),
STACK_USAGE("fiemap_fill_next_extent", 88),
STACK_USAGE("fiemap_prep", 0),
STACK_USAGE("vfs_ioctl", 0),
STACK_USAGE("fileattr_fill_xflags", 0),
STACK_USAGE("fileattr_fill_flags", 0),
STACK_USAGE("vfs_fileattr_get", 0),
STACK_USAGE("copy_fsxattr_to_user", 40),
STACK_USAGE("vfs_fileattr_set", 88),
STACK_USAGE("do_vfs_ioctl", 136),
STACK_USAGE("__ia32_sys_ioctl", 0),
STACK_USAGE("__se_sys_ioctl", 48),
STACK_USAGE("__x64_sys_ioctl", 0),
STACK_USAGE("compat_ptr_ioctl", 0),
STACK_USAGE("__ia32_compat_sys_ioctl", 112),
STACK_USAGE("iomap_finish_ioend", 160),
STACK_USAGE("iomap_finish_ioends", 48),
STACK_USAGE("iomap_ioend_try_merge", 0),
STACK_USAGE("iomap_ioend_compare", 0),
STACK_USAGE("iomap_sort_ioends", 0),
STACK_USAGE("iomap_writepage_end_bio", 8),
STACK_USAGE("iomap_do_writepage", 168),
STACK_USAGE("iomap_writepage", 24),
STACK_USAGE("iomap_writepages", 24),
STACK_USAGE("iomap_set_range_uptodate", 56),
STACK_USAGE("iomap_init", 0),
STACK_USAGE("iomap_read_end_io", 104),
STACK_USAGE("iomap_read_inline_data", 64),
STACK_USAGE("zero_user_segments", 32),
STACK_USAGE("iomap_readpage_iter", 104),
STACK_USAGE("bio_first_folio", 0),
STACK_USAGE("bio_next_folio", 0),
STACK_USAGE("iomap_readpage", 256),
STACK_USAGE("iomap_readahead", 280),
STACK_USAGE("iomap_is_partially_uptodate", 0),
STACK_USAGE("iomap_releasepage", 8),
STACK_USAGE("iomap_invalidate_folio", 24),
STACK_USAGE("iomap_page_create", 24),
STACK_USAGE("iomap_migrate_page", 40),
STACK_USAGE("iomap_write_begin", 296),
STACK_USAGE("iomap_page_release", 24),
STACK_USAGE("iomap_write_end", 72),
STACK_USAGE("iomap_file_buffered_write", 296),
STACK_USAGE("iomap_adjust_read_range", 48),
STACK_USAGE("iomap_file_unshare", 256),
STACK_USAGE("iomap_zero_range", 256),
STACK_USAGE("iomap_truncate_page", 0),
STACK_USAGE("iomap_page_mkwrite", 232),
STACK_USAGE("iomap_dio_complete_work", 16),
STACK_USAGE("iomap_dio_bio_end_io", 40),
STACK_USAGE("blk_wake_io_task", 0),
STACK_USAGE("iomap_dio_zero", 64),
STACK_USAGE("iomap_dio_bio_iter", 104),
STACK_USAGE("__iomap_dio_rw", 344),
STACK_USAGE("iomap_dio_rw", 0),
STACK_USAGE("iomap_dio_complete", 40),
STACK_USAGE("trace_iomap_dio_invalidate_fail", 0),
STACK_USAGE("iomap_fiemap", 248),
STACK_USAGE("iomap_bmap", 232),
STACK_USAGE("iomap_iter", 32),
STACK_USAGE("iomap_seek_hole", 232),
STACK_USAGE("iomap_seek_data", 224),
STACK_USAGE("iomap_swapfile_activate", 312),
STACK_USAGE("__bpf_trace_iomap_class", 0),
STACK_USAGE("perf_trace_iomap_class", 64),
STACK_USAGE("trace_event_raw_event_iomap_class", 80),
STACK_USAGE("trace_raw_output_iomap_class", 104),
STACK_USAGE("__traceiter_iomap_iter_dstmap", 24),
STACK_USAGE("__traceiter_iomap_iter_srcmap", 24),
STACK_USAGE("__bpf_trace_iomap_iter", 0),
STACK_USAGE("__traceiter_iomap_iter", 32),
STACK_USAGE("perf_trace_iomap_iter", 72),
STACK_USAGE("trace_event_raw_event_iomap_iter", 88),
STACK_USAGE("trace_raw_output_iomap_iter", 64),
STACK_USAGE("__bpf_trace_iomap_readpage_class", 0),
STACK_USAGE("perf_trace_iomap_readpage_class", 64),
STACK_USAGE("trace_event_raw_event_iomap_readpage_class", 80),
STACK_USAGE("trace_raw_output_iomap_readpage_class", 24),
STACK_USAGE("__traceiter_iomap_readpage", 24),
STACK_USAGE("__traceiter_iomap_readahead", 24),
STACK_USAGE("__bpf_trace_iomap_range_class", 0),
STACK_USAGE("perf_trace_iomap_range_class", 72),
STACK_USAGE("trace_event_raw_event_iomap_range_class", 88),
STACK_USAGE("trace_raw_output_iomap_range_class", 24),
STACK_USAGE("__traceiter_iomap_writepage", 32),
STACK_USAGE("__traceiter_iomap_releasepage", 32),
STACK_USAGE("__traceiter_iomap_invalidate_folio", 32),
STACK_USAGE("__traceiter_iomap_dio_invalidate_fail", 32),
STACK_USAGE("zisofs_readpage", 320),
STACK_USAGE("zisofs_init", 0),
STACK_USAGE("zisofs_cleanup", 0),
STACK_USAGE("isofs_name_translate", 16),
STACK_USAGE("isofs_readdir", 160),
STACK_USAGE("get_acorn_filename", 40),
STACK_USAGE("isofs_export_encode_fh", 0),
STACK_USAGE("isofs_fh_to_dentry", 16),
STACK_USAGE("isofs_fh_to_parent", 16),
STACK_USAGE("isofs_export_get_parent", 24),
STACK_USAGE("isofs_statfs", 0),
STACK_USAGE("isofs_get_blocks", 88),
STACK_USAGE("isofs_remount", 8),
STACK_USAGE("isofs_get_block", 16),
STACK_USAGE("isofs_bread", 192),
STACK_USAGE("isofs_readpage", 0),
STACK_USAGE("isofs_readahead", 0),
STACK_USAGE("_isofs_bmap", 0),
STACK_USAGE("isofs_iget5_test", 0),
STACK_USAGE("isofs_iget5_set", 0),
STACK_USAGE("__isofs_iget", 168),
STACK_USAGE("isofs_mount", 0),
STACK_USAGE("init_iso9660_fs", 8),
STACK_USAGE("exit_iso9660_fs", 0),
STACK_USAGE("isofs_hashi", 0),
STACK_USAGE("isofs_dentry_cmpi", 0),
STACK_USAGE("isofs_hash_ms", 8),
STACK_USAGE("isofs_hashi_ms", 0),
STACK_USAGE("isofs_dentry_cmp_ms", 0),
STACK_USAGE("isofs_dentry_cmpi_ms", 0),
STACK_USAGE("isofs_show_options", 24),
STACK_USAGE("isofs_put_super", 16),
STACK_USAGE("rootdir_empty", 8),
STACK_USAGE("isofs_fill_super", 216),
STACK_USAGE("isofs_alloc_inode", 0),
STACK_USAGE("isofs_free_inode", 0),
STACK_USAGE("init_once", 0),
STACK_USAGE("get_joliet_filename", 48),
STACK_USAGE("isofs_lookup", 184),
STACK_USAGE("rock_check_overflow", 24),
STACK_USAGE("get_rock_ridge_filename", 136),
STACK_USAGE("parse_rock_ridge_inode_internal", 152),
STACK_USAGE("parse_rock_ridge_inode", 24),
STACK_USAGE("rock_ridge_symlink_readpage", 136),
STACK_USAGE("rock_continue", 24),
STACK_USAGE("iso_date", 16),
STACK_USAGE("__jbd2_log_wait_for_space", 96),
STACK_USAGE("jbd2_log_do_checkpoint", 144),
STACK_USAGE("wait_on_buffer", 8),
STACK_USAGE("jbd2_cleanup_journal_tail", 32),
STACK_USAGE("jbd2_journal_shrink_checkpoint_list", 120),
STACK_USAGE("__jbd2_journal_clean_checkpoint_list", 64),
STACK_USAGE("jbd2_journal_destroy_checkpoint", 16),
STACK_USAGE("__jbd2_journal_remove_checkpoint", 32),
STACK_USAGE("__jbd2_journal_insert_checkpoint", 16),
STACK_USAGE("__jbd2_journal_drop_transaction", 0),
STACK_USAGE("journal_submit_commit_record", 80),
STACK_USAGE("trace_jbd2_submit_inode_data", 0),
STACK_USAGE("jbd2_journal_submit_inode_data_buffers", 104),
STACK_USAGE("jbd2_submit_inode_data", 112),
STACK_USAGE("jbd2_wait_inode_data", 0),
STACK_USAGE("jbd2_journal_finish_inode_data_buffers", 0),
STACK_USAGE("journal_end_buffer_io_sync", 8),
STACK_USAGE("jbd2_journal_commit_transaction", 368),
STACK_USAGE("jbd2_journal_get_descriptor_buffer", 48),
STACK_USAGE("jbd2_descriptor_block_csum_set", 40),
STACK_USAGE("jbd2_journal_get_log_tail", 40),
STACK_USAGE("__jbd2_update_log_tail", 48),
STACK_USAGE("jbd2_update_log_tail", 32),
STACK_USAGE("jbd2_seq_info_start", 0),
STACK_USAGE("jbd2_seq_info_next", 0),
STACK_USAGE("jbd2_seq_info_show", 24),
STACK_USAGE("__bpf_trace_jbd2_submit_inode_data", 0),
STACK_USAGE("__traceiter_jbd2_submit_inode_data", 16),
STACK_USAGE("perf_trace_jbd2_submit_inode_data", 56),
STACK_USAGE("trace_event_raw_event_jbd2_submit_inode_data", 72),
STACK_USAGE("trace_raw_output_jbd2_submit_inode_data", 24),
STACK_USAGE("jbd2_seq_info_stop", 0),
STACK_USAGE("jbd2_seq_info_open", 40),
STACK_USAGE("jbd2_seq_info_release", 24),
STACK_USAGE("jbd2_journal_shrink_scan", 40),
STACK_USAGE("jbd2_journal_shrink_count", 8),
STACK_USAGE("journal_init_common", 48),
STACK_USAGE("__bpf_trace_jbd2_handle_start_class", 0),
STACK_USAGE("perf_trace_jbd2_handle_start_class", 80),
STACK_USAGE("trace_event_raw_event_jbd2_handle_start_class", 104),
STACK_USAGE("trace_raw_output_jbd2_handle_start_class", 24),
STACK_USAGE("jbd2_journal_init_dev", 16),
STACK_USAGE("commit_timeout", 0),
STACK_USAGE("jbd2_journal_init_inode", 40),
STACK_USAGE("__bpf_trace_jbd2_checkpoint", 0),
STACK_USAGE("__traceiter_jbd2_checkpoint", 24),
STACK_USAGE("perf_trace_jbd2_checkpoint", 64),
STACK_USAGE("trace_event_raw_event_jbd2_checkpoint", 80),
STACK_USAGE("trace_raw_output_jbd2_checkpoint", 24),
STACK_USAGE("jbd2_write_superblock", 64),
STACK_USAGE("__traceiter_jbd2_handle_start", 48),
STACK_USAGE("jbd2_journal_update_sb_log_tail", 48),
STACK_USAGE("jbd2_mark_journal_empty", 32),
STACK_USAGE("__traceiter_jbd2_handle_restart", 48),
STACK_USAGE("kjournald2", 96),
STACK_USAGE("__bpf_trace_jbd2_handle_extend", 0),
STACK_USAGE("__traceiter_jbd2_handle_extend", 48),
STACK_USAGE("perf_trace_jbd2_handle_extend", 80),
STACK_USAGE("trace_event_raw_event_jbd2_handle_extend", 104),
STACK_USAGE("trace_raw_output_jbd2_handle_extend", 24),
STACK_USAGE("jbd2_journal_update_sb_errno", 24),
STACK_USAGE("journal_get_superblock", 56),
STACK_USAGE("jbd2_journal_load", 88),
STACK_USAGE("__bpf_trace_jbd2_handle_stats", 0),
STACK_USAGE("__traceiter_jbd2_handle_stats", 48),
STACK_USAGE("perf_trace_jbd2_handle_stats", 80),
STACK_USAGE("trace_event_raw_event_jbd2_handle_stats", 104),
STACK_USAGE("trace_raw_output_jbd2_handle_stats", 32),
STACK_USAGE("jbd2_journal_destroy", 88),
STACK_USAGE("jbd2_journal_check_used_features", 32),
STACK_USAGE("jbd2_journal_check_available_features", 0),
STACK_USAGE("jbd2_journal_set_features", 72),
STACK_USAGE("jbd2_journal_clear_features", 0),
STACK_USAGE("jbd2_journal_flush", 88),
STACK_USAGE("__bpf_trace_jbd2_run_stats", 0),
STACK_USAGE("__traceiter_jbd2_run_stats", 32),
STACK_USAGE("perf_trace_jbd2_run_stats", 72),
STACK_USAGE("trace_event_raw_event_jbd2_run_stats", 88),
STACK_USAGE("trace_raw_output_jbd2_run_stats", 88),
STACK_USAGE("jbd2_journal_wipe", 24),
STACK_USAGE("jbd2_journal_abort", 40),
STACK_USAGE("jbd2_journal_errno", 24),
STACK_USAGE("jbd2_journal_clear_err", 24),
STACK_USAGE("jbd2_journal_ack_err", 16),
STACK_USAGE("jbd2_journal_blocks_per_page", 0),
STACK_USAGE("journal_tag_bytes", 0),
STACK_USAGE("jbd2_alloc", 24),
STACK_USAGE("jbd2_free", 16),
STACK_USAGE("jbd2_journal_init_journal_head_cache", 8),
STACK_USAGE("jbd2_journal_add_journal_head", 16),
STACK_USAGE("jbd2_journal_grab_journal_head", 16),
STACK_USAGE("__bpf_trace_jbd2_checkpoint_stats", 0),
STACK_USAGE("__traceiter_jbd2_checkpoint_stats", 32),
STACK_USAGE("perf_trace_jbd2_checkpoint_stats", 72),
STACK_USAGE("trace_event_raw_event_jbd2_checkpoint_stats", 88),
STACK_USAGE("trace_raw_output_jbd2_checkpoint_stats", 48),
STACK_USAGE("jbd2_journal_put_journal_head", 56),
STACK_USAGE("jbd2_journal_init_jbd_inode", 0),
STACK_USAGE("jbd2_journal_release_jbd_inode", 128),
STACK_USAGE("jbd2_remove_jbd_stats_proc_entry", 0),
STACK_USAGE("jbd2_journal_init_inode_cache", 8),
STACK_USAGE("jbd2_journal_init_handle_cache", 8),
STACK_USAGE("journal_init_caches", 0),
STACK_USAGE("jbd2_journal_destroy_caches", 0),
STACK_USAGE("journal_init", 8),
STACK_USAGE("journal_exit", 0),
STACK_USAGE("__bpf_trace_jbd2_update_log_tail", 0),
STACK_USAGE("__traceiter_jbd2_update_log_tail", 40),
STACK_USAGE("perf_trace_jbd2_update_log_tail", 80),
STACK_USAGE("trace_event_raw_event_jbd2_update_log_tail", 96),
STACK_USAGE("trace_raw_output_jbd2_update_log_tail", 24),
STACK_USAGE("jbd2_journal_write_metadata_buffer", 152),
STACK_USAGE("__bpf_trace_jbd2_commit", 0),
STACK_USAGE("perf_trace_jbd2_commit", 64),
STACK_USAGE("trace_event_raw_event_jbd2_commit", 80),
STACK_USAGE("trace_raw_output_jbd2_commit", 24),
STACK_USAGE("__bpf_trace_jbd2_write_superblock", 0),
STACK_USAGE("__traceiter_jbd2_write_superblock", 24),
STACK_USAGE("perf_trace_jbd2_write_superblock", 64),
STACK_USAGE("trace_event_raw_event_jbd2_write_superblock", 80),
STACK_USAGE("trace_raw_output_jbd2_write_superblock", 24),
STACK_USAGE("__bpf_trace_jbd2_lock_buffer_stall", 0),
STACK_USAGE("__traceiter_jbd2_lock_buffer_stall", 24),
STACK_USAGE("perf_trace_jbd2_lock_buffer_stall", 64),
STACK_USAGE("trace_event_raw_event_jbd2_lock_buffer_stall", 80),
STACK_USAGE("trace_raw_output_jbd2_lock_buffer_stall", 24),
STACK_USAGE("__bpf_trace_jbd2_journal_shrink", 0),
STACK_USAGE("perf_trace_jbd2_journal_shrink", 72),
STACK_USAGE("trace_event_raw_event_jbd2_journal_shrink", 88),
STACK_USAGE("trace_raw_output_jbd2_journal_shrink", 24),
STACK_USAGE("__traceiter_jbd2_shrink_count", 32),
STACK_USAGE("__traceiter_jbd2_shrink_scan_enter", 32),
STACK_USAGE("__bpf_trace_jbd2_shrink_scan_exit", 0),
STACK_USAGE("__traceiter_jbd2_shrink_scan_exit", 40),
STACK_USAGE("perf_trace_jbd2_shrink_scan_exit", 80),
STACK_USAGE("trace_event_raw_event_jbd2_shrink_scan_exit", 96),
STACK_USAGE("trace_raw_output_jbd2_shrink_scan_exit", 24),
STACK_USAGE("__bpf_trace_jbd2_shrink_checkpoint_list", 0),
STACK_USAGE("__traceiter_jbd2_shrink_checkpoint_list", 48),
STACK_USAGE("perf_trace_jbd2_shrink_checkpoint_list", 80),
STACK_USAGE("trace_event_raw_event_jbd2_shrink_checkpoint_list", 104),
STACK_USAGE("trace_raw_output_jbd2_shrink_checkpoint_list", 24),
STACK_USAGE("__jbd2_log_start_commit", 8),
STACK_USAGE("jbd2_log_start_commit", 32),
STACK_USAGE("__jbd2_journal_force_commit", 32),
STACK_USAGE("jbd2_journal_force_commit_nested", 0),
STACK_USAGE("__traceiter_jbd2_start_commit", 24),
STACK_USAGE("jbd2_journal_force_commit", 0),
STACK_USAGE("jbd2_journal_start_commit", 32),
STACK_USAGE("jbd2_trans_will_send_data_barrier", 32),
STACK_USAGE("__traceiter_jbd2_commit_locking", 24),
STACK_USAGE("jbd2_log_wait_commit", 96),
STACK_USAGE("__traceiter_jbd2_commit_flushing", 24),
STACK_USAGE("jbd2_fc_begin_commit", 72),
STACK_USAGE("jbd2_fc_end_commit", 16),
STACK_USAGE("__traceiter_jbd2_commit_logging", 24),
STACK_USAGE("jbd2_fc_end_commit_fallback", 24),
STACK_USAGE("jbd2_transaction_committed", 32),
STACK_USAGE("jbd2_complete_transaction", 24),
STACK_USAGE("jbd2_journal_next_log_block", 56),
STACK_USAGE("__traceiter_jbd2_drop_transaction", 24),
STACK_USAGE("jbd2_fc_get_buf", 48),
STACK_USAGE("jbd2_fc_wait_bufs", 40),
STACK_USAGE("__bpf_trace_jbd2_end_commit", 0),
STACK_USAGE("__traceiter_jbd2_end_commit", 24),
STACK_USAGE("perf_trace_jbd2_end_commit", 64),
STACK_USAGE("trace_event_raw_event_jbd2_end_commit", 80),
STACK_USAGE("trace_raw_output_jbd2_end_commit", 24),
STACK_USAGE("jbd2_fc_release_bufs", 0),
STACK_USAGE("jbd2_journal_bmap", 40),
STACK_USAGE("jread", 152),
STACK_USAGE("jbd2_descriptor_block_csum_verify", 48),
STACK_USAGE("jbd2_journal_recover", 56),
STACK_USAGE("jbd2_journal_skip_recovery", 48),
STACK_USAGE("calc_chksums", 72),
STACK_USAGE("jbd2_commit_block_csum_verify", 40),
STACK_USAGE("do_one_pass", 224),
STACK_USAGE("jbd2_journal_destroy_revoke_record_cache", 0),
STACK_USAGE("jbd2_journal_destroy_revoke_table_cache", 0),
STACK_USAGE("jbd2_journal_init_revoke_record_cache", 8),
STACK_USAGE("jbd2_journal_init_revoke_table_cache", 8),
STACK_USAGE("jbd2_journal_init_revoke_table", 16),
STACK_USAGE("jbd2_journal_init_revoke", 24),
STACK_USAGE("jbd2_journal_destroy_revoke", 16),
STACK_USAGE("jbd2_journal_revoke", 48),
STACK_USAGE("jbd2_journal_cancel_revoke", 40),
STACK_USAGE("jbd2_clear_buffer_revoked_flags", 40),
STACK_USAGE("jbd2_journal_switch_revoke_table", 0),
STACK_USAGE("jbd2_journal_write_revoke_records", 88),
STACK_USAGE("jbd2_journal_set_revoke", 56),
STACK_USAGE("jbd2_journal_test_revoke", 40),
STACK_USAGE("jbd2_journal_clear_revoke", 40),
STACK_USAGE("jbd2_write_access_granted", 24),
STACK_USAGE("jbd2_journal_get_write_access", 24),
STACK_USAGE("jbd2_journal_get_create_access", 48),
STACK_USAGE("jbd2_journal_get_undo_access", 40),
STACK_USAGE("jbd2_journal_set_triggers", 8),
STACK_USAGE("jbd2_buffer_frozen_trigger", 0),
STACK_USAGE("jbd2_buffer_abort_trigger", 0),
STACK_USAGE("jbd2_journal_dirty_metadata", 56),
STACK_USAGE("jbd2_journal_forget", 64),
STACK_USAGE("trace_jbd2_handle_start", 0),
STACK_USAGE("wait_transaction_locked", 80),
STACK_USAGE("jbd2_journal_stop", 80),
STACK_USAGE("__jbd2_journal_temp_unlink_buffer", 16),
STACK_USAGE("jbd2_journal_unfile_buffer", 32),
STACK_USAGE("jbd2_journal_try_to_free_buffers", 56),
STACK_USAGE("__dispose_buffer", 24),
STACK_USAGE("add_transaction_credits", 96),
STACK_USAGE("jbd2_journal_invalidate_folio", 120),
STACK_USAGE("__jbd2_journal_file_buffer", 40),
STACK_USAGE("jbd2_journal_file_buffer", 40),
STACK_USAGE("__jbd2_journal_refile_buffer", 24),
STACK_USAGE("jbd2_journal_refile_buffer", 32),
STACK_USAGE("jbd2_journal_file_inode", 56),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("jbd2_journal_inode_ranged_write", 0),
STACK_USAGE("jbd2_journal_inode_ranged_wait", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("jbd2_journal_begin_ordered_truncate", 56),
STACK_USAGE("start_this_handle", 144),
STACK_USAGE("jbd2_journal_init_transaction_cache", 8),
STACK_USAGE("jbd2__journal_start", 64),
STACK_USAGE("jbd2_journal_destroy_transaction_cache", 0),
STACK_USAGE("jbd2_journal_start", 0),
STACK_USAGE("jbd2_journal_free_reserved", 24),
STACK_USAGE("jbd2_journal_free_transaction", 0),
STACK_USAGE("jbd2_journal_start_reserved", 40),
STACK_USAGE("jbd2_journal_extend", 56),
STACK_USAGE("stop_this_handle", 40),
STACK_USAGE("jbd2__journal_restart", 56),
STACK_USAGE("jbd2_journal_restart", 0),
STACK_USAGE("jbd2_journal_wait_updates", 88),
STACK_USAGE("jbd2_journal_lock_updates", 80),
STACK_USAGE("jbd2_journal_unlock_updates", 16),
STACK_USAGE("do_get_write_access", 72),
STACK_USAGE("kernel_read_file_from_path", 48),
STACK_USAGE("kernel_read_file_from_path_initns", 96),
STACK_USAGE("kernel_read_file_from_fd", 64),
STACK_USAGE("kernel_read_file", 96),
STACK_USAGE("kernfs_create_empty_dir", 24),
STACK_USAGE("kernfs_dop_revalidate", 32),
STACK_USAGE("kernfs_iop_lookup", 40),
STACK_USAGE("kernfs_iop_mkdir", 40),
STACK_USAGE("kernfs_iop_rmdir", 24),
STACK_USAGE("kernfs_iop_rename", 40),
STACK_USAGE("kernfs_path_from_node_locked", 96),
STACK_USAGE("kernfs_next_descendant_post", 16),
STACK_USAGE("kernfs_activate", 16),
STACK_USAGE("__kernfs_remove", 88),
STACK_USAGE("kernfs_remove", 16),
STACK_USAGE("kernfs_break_active_protection", 8),
STACK_USAGE("kernfs_unbreak_active_protection", 0),
STACK_USAGE("kernfs_remove_self", 88),
STACK_USAGE("kernfs_remove_by_name_ns", 32),
STACK_USAGE("kernfs_rename_ns", 56),
STACK_USAGE("kernfs_dir_fop_release", 0),
STACK_USAGE("kernfs_dir_pos", 40),
STACK_USAGE("kernfs_fop_readdir", 88),
STACK_USAGE("kernfs_name", 32),
STACK_USAGE("kernfs_path_from_node", 40),
STACK_USAGE("pr_cont_kernfs_name", 16),
STACK_USAGE("pr_cont_kernfs_path", 16),
STACK_USAGE("kernfs_get_parent", 8),
STACK_USAGE("kernfs_link_sibling", 48),
STACK_USAGE("local_lock_release", 8),
STACK_USAGE("kernfs_get_active", 8),
STACK_USAGE("kernfs_put_active", 8),
STACK_USAGE("kernfs_get", 0),
STACK_USAGE("kernfs_put", 56),
STACK_USAGE("kernfs_node_from_dentry", 0),
STACK_USAGE("__kernfs_new_node", 160),
STACK_USAGE("kernfs_new_node", 8),
STACK_USAGE("kernfs_find_and_get_node_by_id", 16),
STACK_USAGE("kernfs_add_one", 48),
STACK_USAGE("kernfs_find_ns", 48),
STACK_USAGE("kernfs_find_and_get_ns", 32),
STACK_USAGE("kernfs_walk_and_get_ns", 48),
STACK_USAGE("kernfs_create_root", 56),
STACK_USAGE("kernfs_destroy_root", 24),
STACK_USAGE("kernfs_root_to_node", 0),
STACK_USAGE("kernfs_create_dir_ns", 32),
STACK_USAGE("kernfs_seq_start", 24),
STACK_USAGE("kernfs_seq_next", 32),
STACK_USAGE("kernfs_seq_stop", 32),
STACK_USAGE("kernfs_seq_show", 0),
STACK_USAGE("kernfs_fop_read_iter", 56),
STACK_USAGE("kernfs_fop_write_iter", 48),
STACK_USAGE("kernfs_vma_open", 16),
STACK_USAGE("kernfs_vma_fault", 24),
STACK_USAGE("kernfs_vma_page_mkwrite", 32),
STACK_USAGE("kernfs_vma_access", 56),
STACK_USAGE("kernfs_vma_set_policy", 32),
STACK_USAGE("kernfs_vma_get_policy", 32),
STACK_USAGE("kernfs_fop_mmap", 40),
STACK_USAGE("kernfs_put_open_node", 24),
STACK_USAGE("kernfs_fop_open", 64),
STACK_USAGE("kernfs_fop_release", 40),
STACK_USAGE("kernfs_drain_open_files", 24),
STACK_USAGE("kernfs_generic_poll", 16),
STACK_USAGE("kernfs_fop_poll", 32),
STACK_USAGE("kernfs_notify_workfn", 72),
STACK_USAGE("kernfs_notify", 16),
STACK_USAGE("__kernfs_create_file", 24),
STACK_USAGE("kernfs_iop_setattr", 40),
STACK_USAGE("kernfs_iop_listxattr", 24),
STACK_USAGE("kernfs_iop_getattr", 40),
STACK_USAGE("kernfs_get_inode", 16),
STACK_USAGE("kernfs_evict_inode", 16),
STACK_USAGE("kernfs_iop_permission", 40),
STACK_USAGE("__kernfs_iattrs", 24),
STACK_USAGE("kernfs_xattr_get", 32),
STACK_USAGE("kernfs_xattr_set", 32),
STACK_USAGE("kernfs_vfs_xattr_get", 32),
STACK_USAGE("kernfs_vfs_xattr_set", 40),
STACK_USAGE("kernfs_vfs_user_xattr_set", 48),
STACK_USAGE("__kernfs_setattr", 24),
STACK_USAGE("kernfs_setattr", 40),
STACK_USAGE("kernfs_fh_to_dentry", 24),
STACK_USAGE("kernfs_fh_to_parent", 0),
STACK_USAGE("kernfs_get_parent_dentry", 0),
STACK_USAGE("kernfs_root_from_sb", 0),
STACK_USAGE("kernfs_node_dentry", 32),
STACK_USAGE("kernfs_sop_show_options", 0),
STACK_USAGE("kernfs_test_super", 0),
STACK_USAGE("kernfs_set_super", 0),
STACK_USAGE("kernfs_super_ns", 0),
STACK_USAGE("kernfs_get_tree", 56),
STACK_USAGE("kernfs_sop_show_path", 0),
STACK_USAGE("kernfs_free_fs_context", 8),
STACK_USAGE("kernfs_kill_sb", 24),
STACK_USAGE("kernfs_init", 0),
STACK_USAGE("kernfs_encode_fh", 0),
STACK_USAGE("__kernfs_fh_to_dentry", 32),
STACK_USAGE("kernfs_iop_get_link", 72),
STACK_USAGE("kernfs_create_link", 32),
STACK_USAGE("scan_positives", 64),
STACK_USAGE("generic_fh_to_dentry", 0),
STACK_USAGE("generic_fh_to_parent", 0),
STACK_USAGE("__generic_file_fsync", 40),
STACK_USAGE("generic_file_fsync", 8),
STACK_USAGE("generic_check_addressable", 0),
STACK_USAGE("noop_fsync", 0),
STACK_USAGE("noop_direct_IO", 0),
STACK_USAGE("kfree_link", 0),
STACK_USAGE("alloc_anon_inode", 8),
STACK_USAGE("simple_nosetlease", 0),
STACK_USAGE("simple_get_link", 0),
STACK_USAGE("empty_dir_lookup", 0),
STACK_USAGE("empty_dir_getattr", 0),
STACK_USAGE("empty_dir_setattr", 0),
STACK_USAGE("empty_dir_listxattr", 0),
STACK_USAGE("empty_dir_llseek", 0),
STACK_USAGE("empty_dir_readdir", 40),
STACK_USAGE("make_empty_dir_inode", 8),
STACK_USAGE("is_empty_dir_inode", 0),
STACK_USAGE("dcache_dir_lseek", 48),
STACK_USAGE("generic_set_encrypted_ci_d_ops", 0),
STACK_USAGE("dcache_readdir", 56),
STACK_USAGE("generic_read_dir", 0),
STACK_USAGE("zero_user_segments", 32),
STACK_USAGE("simple_recursive_removal", 80),
STACK_USAGE("simple_getattr", 16),
STACK_USAGE("pseudo_fs_fill_super", 32),
STACK_USAGE("pseudo_fs_get_tree", 0),
STACK_USAGE("pseudo_fs_free", 0),
STACK_USAGE("init_pseudo", 16),
STACK_USAGE("simple_open", 0),
STACK_USAGE("simple_link", 24),
STACK_USAGE("simple_empty", 32),
STACK_USAGE("simple_statfs", 0),
STACK_USAGE("simple_unlink", 24),
STACK_USAGE("simple_rmdir", 48),
STACK_USAGE("simple_rename_exchange", 48),
STACK_USAGE("simple_rename", 72),
STACK_USAGE("simple_setattr", 32),
STACK_USAGE("simple_readpage", 0),
STACK_USAGE("always_delete_dentry", 0),
STACK_USAGE("simple_write_begin", 24),
STACK_USAGE("simple_write_end", 32),
STACK_USAGE("simple_fill_super", 48),
STACK_USAGE("simple_lookup", 16),
STACK_USAGE("simple_pin_fs", 32),
STACK_USAGE("simple_release_fs", 24),
STACK_USAGE("simple_read_from_buffer", 24),
STACK_USAGE("simple_write_to_buffer", 24),
STACK_USAGE("dcache_dir_open", 8),
STACK_USAGE("memory_read_from_buffer", 24),
STACK_USAGE("simple_transaction_set", 0),
STACK_USAGE("simple_transaction_get", 32),
STACK_USAGE("dcache_dir_close", 0),
STACK_USAGE("simple_transaction_read", 24),
STACK_USAGE("simple_transaction_release", 0),
STACK_USAGE("simple_attr_open", 48),
STACK_USAGE("simple_attr_release", 0),
STACK_USAGE("simple_attr_read", 64),
STACK_USAGE("simple_attr_write", 64),
STACK_USAGE("encode_nlm4_lock", 40),
STACK_USAGE("nlm4_xdr_enc_testargs", 40),
STACK_USAGE("nlm4_xdr_enc_lockargs", 40),
STACK_USAGE("nlm4_xdr_enc_cancargs", 40),
STACK_USAGE("nlm4_xdr_enc_unlockargs", 32),
STACK_USAGE("nlm4_xdr_enc_res", 24),
STACK_USAGE("nlm4_xdr_enc_testres", 40),
STACK_USAGE("nlm4_xdr_dec_testres", 32),
STACK_USAGE("nlm4_xdr_dec_res", 40),
STACK_USAGE("nlmclnt_prepare_block", 24),
STACK_USAGE("nlmclnt_finish_block", 8),
STACK_USAGE("nlmclnt_block", 96),
STACK_USAGE("nlmclnt_grant", 80),
STACK_USAGE("nlmclnt_recovery", 8),
STACK_USAGE("reclaimer", 72),
STACK_USAGE("nlmclnt_init", 24),
STACK_USAGE("nlmclnt_done", 8),
STACK_USAGE("nlmclnt_proc", 224),
STACK_USAGE("nlm_alloc_call", 24),
STACK_USAGE("nlmclnt_release_call", 8),
STACK_USAGE("nlmclnt_rpc_release", 8),
STACK_USAGE("nlmclnt_call", 128),
STACK_USAGE("nlm_async_call", 136),
STACK_USAGE("nlm_async_reply", 136),
STACK_USAGE("nlmclnt_next_cookie", 0),
STACK_USAGE("nlmclnt_locks_copy_lock", 24),
STACK_USAGE("nlmclnt_locks_release_private", 24),
STACK_USAGE("nlmclnt_reclaim", 40),
STACK_USAGE("nlmclnt_unlock_prepare", 8),
STACK_USAGE("nlmclnt_unlock_callback", 8),
STACK_USAGE("nlmclnt_cancel_callback", 8),
STACK_USAGE("encode_nlm_lock", 32),
STACK_USAGE("nlm_xdr_enc_testargs", 40),
STACK_USAGE("nlm_xdr_enc_lockargs", 40),
STACK_USAGE("nlm_xdr_enc_cancargs", 40),
STACK_USAGE("nlm_xdr_enc_unlockargs", 32),
STACK_USAGE("nlm_xdr_enc_res", 24),
STACK_USAGE("nlm_xdr_enc_testres", 32),
STACK_USAGE("nlm_xdr_dec_testres", 32),
STACK_USAGE("nlm_xdr_dec_res", 40),
STACK_USAGE("nlm_alloc_host", 40),
STACK_USAGE("nlm_destroy_host_locked", 24),
STACK_USAGE("nlmclnt_lookup_host", 152),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("nlmclnt_release_host", 8),
STACK_USAGE("nlmsvc_lookup_host", 200),
STACK_USAGE("net_generic", 16),
STACK_USAGE("nlmsvc_release_host", 0),
STACK_USAGE("nlm_bind_host", 192),
STACK_USAGE("nlm_rebind_host", 8),
STACK_USAGE("nlm_get_host", 8),
STACK_USAGE("next_host_state", 32),
STACK_USAGE("nlm_host_rebooted", 24),
STACK_USAGE("nlm_shutdown_hosts_net", 32),
STACK_USAGE("nlm_shutdown_hosts", 0),
STACK_USAGE("nlm_gc_hosts", 40),
STACK_USAGE("nsm_monitor", 32),
STACK_USAGE("nsm_unmonitor", 24),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("nsm_get_handle", 96),
STACK_USAGE("nsm_reboot_lookup", 24),
STACK_USAGE("net_generic", 16),
STACK_USAGE("nsm_release", 8),
STACK_USAGE("nsm_xdr_enc_mon", 32),
STACK_USAGE("nsm_xdr_enc_unmon", 32),
STACK_USAGE("nsm_xdr_dec_stat_res", 8),
STACK_USAGE("nsm_xdr_dec_stat", 8),
STACK_USAGE("nsm_mon_unmon", 240),
STACK_USAGE("nlm_end_grace_write", 40),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("net_generic", 16),
STACK_USAGE("nlm_end_grace_read", 40),
STACK_USAGE("lockd_create_procfs", 8),
STACK_USAGE("lockd_remove_procfs", 0),
STACK_USAGE("lockd", 40),
STACK_USAGE("create_lockd_family", 56),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("lockd_inetaddr_event", 24),
STACK_USAGE("lockd_inet6addr_event", 48),
STACK_USAGE("net_generic", 16),
STACK_USAGE("lockd_up", 48),
STACK_USAGE("lockd_down", 24),
STACK_USAGE("lockd_authenticate", 0),
STACK_USAGE("param_set_port", 32),
STACK_USAGE("param_set_grace_period", 32),
STACK_USAGE("param_set_timeout", 32),
STACK_USAGE("lockd_init_net", 8),
STACK_USAGE("lockd_exit_net", 16),
STACK_USAGE("init_nlm", 8),
STACK_USAGE("exit_nlm", 0),
STACK_USAGE("nlmsvc_dispatch", 40),
STACK_USAGE("grace_ender", 0),
STACK_USAGE("nlm4svc_proc_test", 0),
STACK_USAGE("__nlm4svc_proc_lock", 64),
STACK_USAGE("nlm4svc_proc_lock", 0),
STACK_USAGE("__nlm4svc_proc_cancel", 56),
STACK_USAGE("nlm4svc_proc_cancel", 0),
STACK_USAGE("__nlm4svc_proc_unlock", 56),
STACK_USAGE("nlm4svc_proc_unlock", 0),
STACK_USAGE("nlm4svc_retrieve_args", 80),
STACK_USAGE("nlm4svc_proc_granted", 8),
STACK_USAGE("nlm4svc_callback_exit", 0),
STACK_USAGE("nlm4svc_callback_release", 0),
STACK_USAGE("nlm4svc_callback", 48),
STACK_USAGE("nlm4svc_proc_test_msg", 0),
STACK_USAGE("nlm4svc_proc_lock_msg", 0),
STACK_USAGE("nlm4svc_proc_cancel_msg", 0),
STACK_USAGE("nlm4svc_proc_unlock_msg", 0),
STACK_USAGE("nlm4svc_proc_granted_msg", 32),
STACK_USAGE("nlm4svc_proc_share", 48),
STACK_USAGE("nlm4svc_proc_unshare", 48),
STACK_USAGE("nlm4svc_proc_nm_lock", 0),
STACK_USAGE("nlm4svc_proc_free_all", 16),
STACK_USAGE("nlm4svc_proc_sm_notify", 104),
STACK_USAGE("nlm4svc_proc_granted_res", 0),
STACK_USAGE("nlm4svc_proc_unused", 0),
STACK_USAGE("nlm4svc_proc_null", 0),
STACK_USAGE("__nlm4svc_proc_test", 64),
STACK_USAGE("nlmsvc_retry_blocked", 64),
STACK_USAGE("nlmsvc_insert_block", 24),
STACK_USAGE("nlmsvc_lookup_block", 16),
STACK_USAGE("nlmsvc_release_block", 16),
STACK_USAGE("nlmsvc_traverse_blocks", 56),
STACK_USAGE("nlmsvc_release_lockowner", 16),
STACK_USAGE("nlmsvc_locks_init_private", 56),
STACK_USAGE("nlmsvc_defer_lock_rqst", 16),
STACK_USAGE("nlmsvc_lock", 80),
STACK_USAGE("nlmsvc_testlock", 48),
STACK_USAGE("nlmsvc_unlock", 16),
STACK_USAGE("nlmsvc_cancel_blocked", 32),
STACK_USAGE("nlmsvc_grant_deferred", 24),
STACK_USAGE("nlmsvc_notify_blocked", 16),
STACK_USAGE("nlmsvc_get_owner", 8),
STACK_USAGE("nlmsvc_put_owner", 16),
STACK_USAGE("nlmsvc_grant_callback", 24),
STACK_USAGE("nlmsvc_grant_release", 0),
STACK_USAGE("nlmsvc_grant_reply", 32),
STACK_USAGE("nlmsvc_proc_null", 0),
STACK_USAGE("__nlmsvc_proc_test", 56),
STACK_USAGE("nlmsvc_proc_test", 0),
STACK_USAGE("__nlmsvc_proc_lock", 64),
STACK_USAGE("nlmsvc_proc_lock", 0),
STACK_USAGE("__nlmsvc_proc_cancel", 56),
STACK_USAGE("nlmsvc_proc_cancel", 0),
STACK_USAGE("__nlmsvc_proc_unlock", 56),
STACK_USAGE("nlmsvc_proc_unlock", 0),
STACK_USAGE("nlmsvc_proc_granted", 8),
STACK_USAGE("nlmsvc_callback_exit", 0),
STACK_USAGE("nlmsvc_release_call", 8),
STACK_USAGE("nlmsvc_callback_release", 8),
STACK_USAGE("nlmsvc_callback", 48),
STACK_USAGE("nlmsvc_proc_test_msg", 0),
STACK_USAGE("nlmsvc_proc_lock_msg", 0),
STACK_USAGE("nlmsvc_proc_cancel_msg", 0),
STACK_USAGE("nlmsvc_proc_unlock_msg", 0),
STACK_USAGE("nlmsvc_proc_granted_msg", 32),
STACK_USAGE("nlmsvc_proc_share", 56),
STACK_USAGE("nlmsvc_proc_unshare", 56),
STACK_USAGE("nlmsvc_proc_nm_lock", 0),
STACK_USAGE("nlmsvc_proc_free_all", 16),
STACK_USAGE("nlmsvc_proc_sm_notify", 104),
STACK_USAGE("nlmsvc_proc_granted_res", 0),
STACK_USAGE("nlmsvc_retrieve_args", 64),
STACK_USAGE("nlmsvc_proc_unused", 0),
STACK_USAGE("nlmsvc_share_file", 48),
STACK_USAGE("nlmsvc_unshare_file", 32),
STACK_USAGE("nlmsvc_traverse_shares", 32),
STACK_USAGE("nlm_lookup_file", 72),
STACK_USAGE("nlmsvc_always_match", 0),
STACK_USAGE("nlm_traverse_files", 360),
STACK_USAGE("nlm_release_file", 24),
STACK_USAGE("nlmsvc_mark_host", 0),
STACK_USAGE("nlmsvc_same_host", 0),
STACK_USAGE("nlmsvc_is_client", 0),
STACK_USAGE("nlmsvc_mark_resources", 952),
STACK_USAGE("nlmsvc_free_host_resources", 8),
STACK_USAGE("nlmsvc_invalidate_all", 0),
STACK_USAGE("nlmsvc_match_sb", 0),
STACK_USAGE("nlmsvc_unlock_all_by_sb", 0),
STACK_USAGE("nlmsvc_match_ip", 16),
STACK_USAGE("nlmsvc_unlock_all_by_ip", 0),
STACK_USAGE("lock_to_openmode", 0),
STACK_USAGE("nlmsvc_decode_void", 0),
STACK_USAGE("nlmsvc_decode_testargs", 32),
STACK_USAGE("nlmsvc_decode_lockargs", 32),
STACK_USAGE("nlmsvc_decode_cancargs", 32),
STACK_USAGE("nlmsvc_decode_unlockargs", 32),
STACK_USAGE("nlmsvc_decode_res", 32),
STACK_USAGE("nlmsvc_decode_reboot", 24),
STACK_USAGE("nlmsvc_decode_shareargs", 32),
STACK_USAGE("nlmsvc_decode_notify", 24),
STACK_USAGE("nlmsvc_encode_void", 0),
STACK_USAGE("nlmsvc_encode_testres", 48),
STACK_USAGE("nlmsvc_encode_res", 24),
STACK_USAGE("nlmsvc_encode_shareres", 24),
STACK_USAGE("svcxdr_decode_lock", 32),
STACK_USAGE("nlm4svc_decode_void", 0),
STACK_USAGE("nlm4svc_decode_testargs", 32),
STACK_USAGE("nlm4svc_decode_lockargs", 32),
STACK_USAGE("nlm4svc_decode_cancargs", 32),
STACK_USAGE("nlm4svc_decode_unlockargs", 32),
STACK_USAGE("nlm4svc_decode_res", 32),
STACK_USAGE("nlm4svc_decode_reboot", 24),
STACK_USAGE("nlm4svc_decode_shareargs", 32),
STACK_USAGE("nlm4svc_decode_notify", 24),
STACK_USAGE("nlm4svc_encode_void", 0),
STACK_USAGE("nlm4svc_encode_testres", 48),
STACK_USAGE("nlm4svc_encode_res", 24),
STACK_USAGE("nlm4svc_encode_shareres", 24),
STACK_USAGE("svcxdr_decode_lock", 32),
STACK_USAGE("__traceiter_posix_lock_inode", 32),
STACK_USAGE("posix_lock_inode", 120),
STACK_USAGE("__traceiter_fcntl_setlk", 32),
STACK_USAGE("__traceiter_locks_remove_posix", 32),
STACK_USAGE("__traceiter_flock_lock_inode", 32),
STACK_USAGE("init_fs_locks_sysctls", 0),
STACK_USAGE("__bpf_trace_filelock_lease", 0),
STACK_USAGE("perf_trace_filelock_lease", 64),
STACK_USAGE("trace_event_raw_event_filelock_lease", 80),
STACK_USAGE("trace_raw_output_filelock_lease", 88),
STACK_USAGE("posix_lock_file", 0),
STACK_USAGE("lease_modify", 24),
STACK_USAGE("time_out_leases", 48),
STACK_USAGE("leases_conflict", 24),
STACK_USAGE("__break_lease", 152),
STACK_USAGE("lease_get_mtime", 40),
STACK_USAGE("__traceiter_break_lease_noblock", 24),
STACK_USAGE("fcntl_getlease", 72),
STACK_USAGE("__traceiter_break_lease_block", 24),
STACK_USAGE("check_conflicting_open", 0),
STACK_USAGE("__traceiter_break_lease_unblock", 24),
STACK_USAGE("__traceiter_generic_delete_lease", 24),
STACK_USAGE("trace_generic_delete_lease", 0),
STACK_USAGE("__traceiter_time_out_leases", 24),
STACK_USAGE("__bpf_trace_generic_add_lease", 0),
STACK_USAGE("__traceiter_generic_add_lease", 24),
STACK_USAGE("perf_trace_generic_add_lease", 64),
STACK_USAGE("trace_event_raw_event_generic_add_lease", 80),
STACK_USAGE("trace_raw_output_generic_add_lease", 96),
STACK_USAGE("locks_get_lock_context", 24),
STACK_USAGE("generic_setlease", 112),
STACK_USAGE("lease_register_notifier", 0),
STACK_USAGE("lease_unregister_notifier", 0),
STACK_USAGE("vfs_setlease", 32),
STACK_USAGE("fcntl_setlease", 64),
STACK_USAGE("locks_lock_inode_wait", 96),
STACK_USAGE("__ia32_sys_flock", 0),
STACK_USAGE("__se_sys_flock", 40),
STACK_USAGE("__x64_sys_flock", 0),
STACK_USAGE("locks_dump_ctx_list", 24),
STACK_USAGE("__bpf_trace_leases_conflict", 0),
STACK_USAGE("__traceiter_leases_conflict", 32),
STACK_USAGE("perf_trace_leases_conflict", 72),
STACK_USAGE("trace_event_raw_event_leases_conflict", 88),
STACK_USAGE("trace_raw_output_leases_conflict", 80),
STACK_USAGE("vfs_test_lock", 0),
STACK_USAGE("locks_translate_pid", 24),
STACK_USAGE("posix_lock_to_flock", 16),
STACK_USAGE("locks_check_ctx_lists", 16),
STACK_USAGE("fcntl_getlk", 40),
STACK_USAGE("vfs_lock_file", 0),
STACK_USAGE("do_lock_file_wait", 104),
STACK_USAGE("fcntl_setlk", 64),
STACK_USAGE("locks_free_lock_context", 8),
STACK_USAGE("locks_remove_posix", 312),
STACK_USAGE("locks_remove_file", 336),
STACK_USAGE("vfs_cancel_lock", 0),
STACK_USAGE("lock_get_status", 56),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("locks_alloc_lock", 8),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("locks_show", 40),
STACK_USAGE("locks_release_private", 8),
STACK_USAGE("show_fd_locks", 64),
STACK_USAGE("locks_start", 16),
STACK_USAGE("locks_next", 0),
STACK_USAGE("locks_stop", 0),
STACK_USAGE("proc_locks_init", 0),
STACK_USAGE("filelock_init", 16),
STACK_USAGE("locks_free_lock", 8),
STACK_USAGE("locks_init_lock", 16),
STACK_USAGE("locks_copy_conflock", 0),
STACK_USAGE("locks_copy_lock", 16),
STACK_USAGE("__bpf_trace_locks_get_lock_context", 0),
STACK_USAGE("__traceiter_locks_get_lock_context", 32),
STACK_USAGE("perf_trace_locks_get_lock_context", 72),
STACK_USAGE("trace_event_raw_event_locks_get_lock_context", 88),
STACK_USAGE("trace_raw_output_locks_get_lock_context", 48),
STACK_USAGE("percpu_down_read", 0),
STACK_USAGE("lease_break_callback", 0),
STACK_USAGE("lease_setup", 16),
STACK_USAGE("lease_alloc", 24),
STACK_USAGE("__bpf_trace_filelock_lock", 0),
STACK_USAGE("perf_trace_filelock_lock", 72),
STACK_USAGE("trace_event_raw_event_filelock_lock", 88),
STACK_USAGE("trace_raw_output_filelock_lock", 96),
STACK_USAGE("__locks_wake_up_blocks", 24),
STACK_USAGE("locks_delete_block", 16),
STACK_USAGE("locks_insert_block", 56),
STACK_USAGE("locks_insert_lock_ctx", 24),
STACK_USAGE("locks_unlink_lock_ctx", 16),
STACK_USAGE("flock_locks_conflict", 0),
STACK_USAGE("posix_test_lock", 24),
STACK_USAGE("files_lookup_fd_locked", 24),
STACK_USAGE("flock_lock_inode", 88),
STACK_USAGE("percpu_up_read", 0),
STACK_USAGE("__mb_cache_entry_free", 0),
STACK_USAGE("__entry_find", 40),
STACK_USAGE("mb_cache_entry_find_first", 0),
STACK_USAGE("mb_cache_entry_find_next", 0),
STACK_USAGE("mb_cache_entry_get", 40),
STACK_USAGE("mb_cache_entry_delete", 48),
STACK_USAGE("mb_cache_entry_touch", 0),
STACK_USAGE("mb_cache_count", 0),
STACK_USAGE("mb_cache_shrink", 72),
STACK_USAGE("mb_cache_scan", 0),
STACK_USAGE("mb_cache_shrink_worker", 0),
STACK_USAGE("mb_cache_create", 24),
STACK_USAGE("mb_cache_destroy", 40),
STACK_USAGE("mbcache_init", 8),
STACK_USAGE("mbcache_exit", 0),
STACK_USAGE("mb_cache_entry_create", 56),
STACK_USAGE("do_mpage_readpage", 200),
STACK_USAGE("zero_user_segment", 8),
STACK_USAGE("mpage_readahead", 248),
STACK_USAGE("mpage_readpage", 248),
STACK_USAGE("clean_buffers", 0),
STACK_USAGE("clean_page_buffers", 0),
STACK_USAGE("__mpage_writepage", 392),
STACK_USAGE("mpage_end_io", 48),
STACK_USAGE("mpage_writepages", 112),
STACK_USAGE("mpage_writepage", 56),
STACK_USAGE("put_link", 24),
STACK_USAGE("init_fs_namei_sysctls", 0),
STACK_USAGE("may_linkat", 24),
STACK_USAGE("follow_up", 32),
STACK_USAGE("choose_mountpoint_rcu", 48),
STACK_USAGE("getname_flags", 56),
STACK_USAGE("choose_mountpoint", 80),
STACK_USAGE("fsnotify_link_count", 0),
STACK_USAGE("__traverse_mounts", 72),
STACK_USAGE("fsnotify_move", 72),
STACK_USAGE("follow_down_one", 16),
STACK_USAGE("follow_down", 40),
STACK_USAGE("__lookup_hash", 40),
STACK_USAGE("i_uid_into_mnt", 8),
STACK_USAGE("lookup_fast", 56),
STACK_USAGE("i_gid_into_mnt", 8),
STACK_USAGE("fsuidgid_has_mapping", 32),
STACK_USAGE("__lookup_slow", 144),
STACK_USAGE("lookup_slow", 32),
STACK_USAGE("pick_link", 56),
STACK_USAGE("step_into", 88),
STACK_USAGE("handle_dots", 80),
STACK_USAGE("walk_component", 64),
STACK_USAGE("fsnotify_create", 16),
STACK_USAGE("getname_uflags", 0),
STACK_USAGE("full_name_hash", 0),
STACK_USAGE("hashlen_string", 8),
STACK_USAGE("getname", 0),
STACK_USAGE("fsnotify_link", 24),
STACK_USAGE("HAS_UNMAPPED_ID", 16),
STACK_USAGE("getname_kernel", 32),
STACK_USAGE("link_path_walk", 112),
STACK_USAGE("path_init", 88),
STACK_USAGE("handle_lookup_down", 8),
STACK_USAGE("path_lookupat", 32),
STACK_USAGE("filename_lookup", 272),
STACK_USAGE("try_break_deleg", 16),
STACK_USAGE("path_parentat", 24),
STACK_USAGE("d_delete_notify", 24),
STACK_USAGE("filename_parentat", 288),
STACK_USAGE("putname", 8),
STACK_USAGE("kern_path_locked", 64),
STACK_USAGE("kern_path", 24),
STACK_USAGE("vfs_path_lookup", 48),
STACK_USAGE("lookup_one_common", 48),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("try_lookup_one_len", 40),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("lookup_one_len", 48),
STACK_USAGE("lookup_one", 48),
STACK_USAGE("lookup_one_len_unlocked", 48),
STACK_USAGE("lookup_positive_unlocked", 0),
STACK_USAGE("path_pts", 48),
STACK_USAGE("user_path_at_empty", 32),
STACK_USAGE("__check_sticky", 40),
STACK_USAGE("may_delete", 48),
STACK_USAGE("check_acl", 40),
STACK_USAGE("lock_rename", 32),
STACK_USAGE("unlock_rename", 24),
STACK_USAGE("vfs_create", 56),
STACK_USAGE("vfs_mkobj", 72),
STACK_USAGE("may_open_dev", 0),
STACK_USAGE("may_open", 32),
STACK_USAGE("dont_mount", 16),
STACK_USAGE("vfs_tmpfile", 56),
STACK_USAGE("do_tmpfile", 72),
STACK_USAGE("do_o_path", 48),
STACK_USAGE("path_openat", 240),
STACK_USAGE("do_filp_open", 264),
STACK_USAGE("do_file_open_root", 280),
STACK_USAGE("filename_create", 88),
STACK_USAGE("kern_path_create", 32),
STACK_USAGE("done_path_create", 8),
STACK_USAGE("user_path_create", 32),
STACK_USAGE("vfs_mknod", 64),
STACK_USAGE("do_mknodat", 96),
STACK_USAGE("__ia32_sys_mknodat", 24),
STACK_USAGE("__x64_sys_mknodat", 24),
STACK_USAGE("__ia32_sys_mknod", 16),
STACK_USAGE("__x64_sys_mknod", 16),
STACK_USAGE("vfs_mkdir", 56),
STACK_USAGE("do_mkdirat", 88),
STACK_USAGE("generic_permission", 48),
STACK_USAGE("__ia32_sys_mkdirat", 16),
STACK_USAGE("__x64_sys_mkdirat", 16),
STACK_USAGE("__ia32_sys_mkdir", 8),
STACK_USAGE("__x64_sys_mkdir", 8),
STACK_USAGE("vfs_rmdir", 24),
STACK_USAGE("do_rmdir", 104),
STACK_USAGE("__ia32_sys_rmdir", 0),
STACK_USAGE("__x64_sys_rmdir", 0),
STACK_USAGE("vfs_unlink", 48),
STACK_USAGE("do_unlinkat", 128),
STACK_USAGE("__ia32_sys_unlinkat", 16),
STACK_USAGE("__x64_sys_unlinkat", 16),
STACK_USAGE("__ia32_sys_unlink", 0),
STACK_USAGE("__x64_sys_unlink", 0),
STACK_USAGE("vfs_symlink", 48),
STACK_USAGE("do_symlinkat", 88),
STACK_USAGE("__ia32_sys_symlinkat", 24),
STACK_USAGE("__x64_sys_symlinkat", 24),
STACK_USAGE("__ia32_sys_symlink", 16),
STACK_USAGE("__x64_sys_symlink", 16),
STACK_USAGE("vfs_link", 64),
STACK_USAGE("do_linkat", 128),
STACK_USAGE("__ia32_sys_linkat", 40),
STACK_USAGE("__x64_sys_linkat", 40),
STACK_USAGE("__ia32_sys_link", 16),
STACK_USAGE("__x64_sys_link", 16),
STACK_USAGE("vfs_rename", 160),
STACK_USAGE("do_renameat2", 288),
STACK_USAGE("__ia32_sys_renameat2", 40),
STACK_USAGE("__x64_sys_renameat2", 40),
STACK_USAGE("__ia32_sys_renameat", 32),
STACK_USAGE("__x64_sys_renameat", 32),
STACK_USAGE("__ia32_sys_rename", 16),
STACK_USAGE("__x64_sys_rename", 16),
STACK_USAGE("readlink_copy", 24),
STACK_USAGE("vfs_readlink", 64),
STACK_USAGE("vfs_get_link", 24),
STACK_USAGE("page_get_link", 32),
STACK_USAGE("page_put_link", 0),
STACK_USAGE("page_readlink", 48),
STACK_USAGE("inode_permission", 32),
STACK_USAGE("__page_symlink", 80),
STACK_USAGE("page_symlink", 0),
STACK_USAGE("path_get", 8),
STACK_USAGE("path_put", 8),
STACK_USAGE("nd_alloc_stack", 8),
STACK_USAGE("drop_links", 32),
STACK_USAGE("terminate_walk", 32),
STACK_USAGE("legitimize_path", 16),
STACK_USAGE("legitimize_links", 48),
STACK_USAGE("rcu_read_unlock", 0),
STACK_USAGE("try_to_unlazy", 24),
STACK_USAGE("try_to_unlazy_next", 24),
STACK_USAGE("complete_walk", 24),
STACK_USAGE("set_root", 64),
STACK_USAGE("nd_jump_root", 16),
STACK_USAGE("seqcount_lockdep_reader_access", 32),
STACK_USAGE("nd_jump_link", 24),
STACK_USAGE("vfs_create_mount", 24),
STACK_USAGE("lock_mount_hash", 0),
STACK_USAGE("fc_mount", 8),
STACK_USAGE("vfs_kern_mount", 24),
STACK_USAGE("unlock_mount_hash", 0),
STACK_USAGE("vfs_submount", 0),
STACK_USAGE("clone_mnt", 56),
STACK_USAGE("cleanup_mnt", 40),
STACK_USAGE("__cleanup_mnt", 0),
STACK_USAGE("delayed_mntput", 8),
STACK_USAGE("mntput_no_expire", 72),
STACK_USAGE("mntput", 0),
STACK_USAGE("mntget", 0),
STACK_USAGE("path_is_mountpoint", 16),
STACK_USAGE("mnt_clone_internal", 0),
STACK_USAGE("m_start", 32),
STACK_USAGE("m_next", 32),
STACK_USAGE("m_stop", 16),
STACK_USAGE("m_show", 0),
STACK_USAGE("mnt_cursor_del", 16),
STACK_USAGE("may_umount_tree", 64),
STACK_USAGE("may_umount", 16),
STACK_USAGE("namespace_unlock", 56),
STACK_USAGE("umount_tree", 72),
STACK_USAGE("mnt_release_group_id", 8),
STACK_USAGE("mnt_add_count", 0),
STACK_USAGE("sb_end_write", 8),
STACK_USAGE("__detach_mounts", 32),
STACK_USAGE("sb_start_write", 16),
STACK_USAGE("path_umount", 104),
STACK_USAGE("mnt_get_count", 32),
STACK_USAGE("__ia32_sys_umount", 32),
STACK_USAGE("__x64_sys_umount", 32),
STACK_USAGE("__ia32_sys_oldumount", 24),
STACK_USAGE("__x64_sys_oldumount", 24),
STACK_USAGE("from_mnt_ns", 0),
STACK_USAGE("copy_tree", 88),
STACK_USAGE("collect_mounts", 8),
STACK_USAGE("dissolve_on_fput", 32),
STACK_USAGE("alloc_vfsmnt", 24),
STACK_USAGE("drop_collected_mounts", 16),
STACK_USAGE("clone_private_mount", 40),
STACK_USAGE("iterate_mounts", 32),
STACK_USAGE("lock_mnt_tree", 0),
STACK_USAGE("invent_group_ids", 48),
STACK_USAGE("count_mounts", 0),
STACK_USAGE("attach_recursive_mnt", 88),
STACK_USAGE("lock_mount", 48),
STACK_USAGE("graft_tree", 0),
STACK_USAGE("do_change_type", 48),
STACK_USAGE("__do_loopback", 48),
STACK_USAGE("do_loopback", 56),
STACK_USAGE("__ia32_sys_open_tree", 0),
STACK_USAGE("__se_sys_open_tree", 72),
STACK_USAGE("__x64_sys_open_tree", 0),
STACK_USAGE("set_mount_attributes", 0),
STACK_USAGE("mnt_warn_timestamp_expiry", 88),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("__mnt_is_readonly", 0),
STACK_USAGE("tree_contains_unbindable", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("check_for_nsfs_mounts", 24),
STACK_USAGE("do_move_mount", 72),
STACK_USAGE("do_move_mount_old", 48),
STACK_USAGE("do_new_mount", 96),
STACK_USAGE("finish_automount", 56),
STACK_USAGE("mnt_set_expiry", 16),
STACK_USAGE("mark_mounts_for_expiry", 64),
STACK_USAGE("path_mount", 64),
STACK_USAGE("__mnt_want_write", 16),
STACK_USAGE("do_mount", 72),
STACK_USAGE("free_mnt_ns", 8),
STACK_USAGE("alloc_mnt_ns", 32),
STACK_USAGE("copy_mnt_ns", 48),
STACK_USAGE("mount_subtree", 56),
STACK_USAGE("__ia32_sys_mount", 0),
STACK_USAGE("__se_sys_mount", 80),
STACK_USAGE("__x64_sys_mount", 0),
STACK_USAGE("__ia32_sys_fsmount", 0),
STACK_USAGE("__se_sys_fsmount", 96),
STACK_USAGE("__x64_sys_fsmount", 0),
STACK_USAGE("__ia32_sys_move_mount", 0),
STACK_USAGE("__se_sys_move_mount", 80),
STACK_USAGE("__x64_sys_move_mount", 0),
STACK_USAGE("is_path_reachable", 0),
STACK_USAGE("path_is_under", 16),
STACK_USAGE("__ia32_sys_pivot_root", 0),
STACK_USAGE("__se_sys_pivot_root", 184),
STACK_USAGE("__x64_sys_pivot_root", 0),
STACK_USAGE("mnt_want_write", 16),
STACK_USAGE("__mnt_want_write_file", 0),
STACK_USAGE("__ia32_sys_mount_setattr", 0),
STACK_USAGE("__se_sys_mount_setattr", 152),
STACK_USAGE("__x64_sys_mount_setattr", 0),
STACK_USAGE("mnt_want_write_file", 16),
STACK_USAGE("init_mount_tree", 40),
STACK_USAGE("mnt_init", 8),
STACK_USAGE("put_mnt_ns", 24),
STACK_USAGE("kern_mount", 0),
STACK_USAGE("kern_unmount", 16),
STACK_USAGE("kern_unmount_array", 32),
STACK_USAGE("our_mnt", 0),
STACK_USAGE("current_chrooted", 64),
STACK_USAGE("__mnt_drop_write", 8),
STACK_USAGE("mount_too_revealing", 72),
STACK_USAGE("mnt_may_suid", 0),
STACK_USAGE("mntns_get", 24),
STACK_USAGE("mntns_put", 0),
STACK_USAGE("mntns_install", 72),
STACK_USAGE("mntns_owner", 0),
STACK_USAGE("mnt_drop_write", 8),
STACK_USAGE("init_fs_namespace_sysctls", 0),
STACK_USAGE("__mnt_drop_write_file", 8),
STACK_USAGE("mnt_drop_write_file", 16),
STACK_USAGE("set_mhash_entries", 16),
STACK_USAGE("sb_prepare_remount_readonly", 56),
STACK_USAGE("set_mphash_entries", 16),
STACK_USAGE("free_vfsmnt", 8),
STACK_USAGE("delayed_free_vfsmnt", 0),
STACK_USAGE("__legitimize_mnt", 16),
STACK_USAGE("legitimize_mnt", 16),
STACK_USAGE("__lookup_mnt", 0),
STACK_USAGE("lookup_mnt", 16),
STACK_USAGE("rcu_read_unlock", 0),
STACK_USAGE("__is_local_mountpoint", 24),
STACK_USAGE("get_mountpoint", 24),
STACK_USAGE("__put_mountpoint", 32),
STACK_USAGE("read_seqbegin", 24),
STACK_USAGE("unhash_mnt", 0),
STACK_USAGE("mnt_set_mountpoint", 0),
STACK_USAGE("mnt_change_mountpoint", 16),
STACK_USAGE("commit_tree", 24),
STACK_USAGE("netfs_rreq_expand", 32),
STACK_USAGE("trace_netfs_read", 0),
STACK_USAGE("netfs_readahead", 24),
STACK_USAGE("netfs_rreq_unlock_folios", 144),
STACK_USAGE("netfs_readpage", 40),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("netfs_write_begin", 128),
STACK_USAGE("netfs_rreq_unmark_after_write", 136),
STACK_USAGE("netfs_rreq_copy_terminated", 24),
STACK_USAGE("trace_netfs_rreq", 0),
STACK_USAGE("trace_netfs_sreq", 0),
STACK_USAGE("netfs_rreq_write_to_cache_work", 104),
STACK_USAGE("trace_netfs_failure", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("netfs_rreq_assess", 120),
STACK_USAGE("netfs_cache_read_terminated", 0),
STACK_USAGE("netfs_rreq_work", 0),
STACK_USAGE("netfs_subreq_terminated", 80),
STACK_USAGE("netfs_begin_read", 144),
STACK_USAGE("__bpf_trace_netfs_read", 0),
STACK_USAGE("__traceiter_netfs_read", 40),
STACK_USAGE("perf_trace_netfs_read", 72),
STACK_USAGE("trace_event_raw_event_netfs_read", 96),
STACK_USAGE("trace_raw_output_netfs_read", 32),
STACK_USAGE("__bpf_trace_netfs_rreq", 0),
STACK_USAGE("__traceiter_netfs_rreq", 24),
STACK_USAGE("perf_trace_netfs_rreq", 64),
STACK_USAGE("trace_event_raw_event_netfs_rreq", 80),
STACK_USAGE("trace_raw_output_netfs_rreq", 48),
STACK_USAGE("__bpf_trace_netfs_sreq", 0),
STACK_USAGE("__traceiter_netfs_sreq", 24),
STACK_USAGE("perf_trace_netfs_sreq", 64),
STACK_USAGE("trace_event_raw_event_netfs_sreq", 80),
STACK_USAGE("trace_raw_output_netfs_sreq", 64),
STACK_USAGE("__bpf_trace_netfs_failure", 0),
STACK_USAGE("__traceiter_netfs_failure", 40),
STACK_USAGE("perf_trace_netfs_failure", 72),
STACK_USAGE("trace_event_raw_event_netfs_failure", 96),
STACK_USAGE("trace_raw_output_netfs_failure", 88),
STACK_USAGE("__bpf_trace_netfs_rreq_ref", 0),
STACK_USAGE("__traceiter_netfs_rreq_ref", 32),
STACK_USAGE("perf_trace_netfs_rreq_ref", 72),
STACK_USAGE("trace_event_raw_event_netfs_rreq_ref", 88),
STACK_USAGE("trace_raw_output_netfs_rreq_ref", 32),
STACK_USAGE("__bpf_trace_netfs_sreq_ref", 0),
STACK_USAGE("__traceiter_netfs_sreq_ref", 40),
STACK_USAGE("perf_trace_netfs_sreq_ref", 72),
STACK_USAGE("trace_event_raw_event_netfs_sreq_ref", 96),
STACK_USAGE("trace_raw_output_netfs_sreq_ref", 40),
STACK_USAGE("netfs_alloc_subrequest", 24),
STACK_USAGE("netfs_get_subrequest", 24),
STACK_USAGE("netfs_free_subrequest", 32),
STACK_USAGE("netfs_put_subrequest", 48),
STACK_USAGE("netfs_alloc_request", 56),
STACK_USAGE("trace_netfs_rreq_ref", 0),
STACK_USAGE("trace_netfs_sreq_ref", 0),
STACK_USAGE("netfs_get_request", 24),
STACK_USAGE("netfs_clear_subrequests", 56),
STACK_USAGE("netfs_free_request", 56),
STACK_USAGE("netfs_put_request", 40),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("nfs_callback_up", 72),
STACK_USAGE("nfs_callback_down", 40),
STACK_USAGE("check_gss_callback_principal", 0),
STACK_USAGE("nfs_callback_authenticate", 0),
STACK_USAGE("net_generic", 16),
STACK_USAGE("nfs4_callback_svc", 24),
STACK_USAGE("trace_nfs4_cb_getattr", 0),
STACK_USAGE("trace_nfs4_cb_recall", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("nfs4_callback_getattr", 32),
STACK_USAGE("nfs4_callback_recall", 40),
STACK_USAGE("decode_getattr_args", 32),
STACK_USAGE("decode_recall_args", 24),
STACK_USAGE("nfs4_callback_null", 0),
STACK_USAGE("encode_getattr_res", 40),
STACK_USAGE("nfs4_encode_void", 0),
STACK_USAGE("nfs4_callback_compound", 136),
STACK_USAGE("nfs_callback_dispatch", 24),
STACK_USAGE("get_nfs_version", 16),
STACK_USAGE("nfs_create_server", 248),
STACK_USAGE("nfs_clone_server", 120),
STACK_USAGE("nfs_clients_init", 16),
STACK_USAGE("nfs_clients_exit", 16),
STACK_USAGE("put_nfs_version", 0),
STACK_USAGE("nfs_server_list_start", 16),
STACK_USAGE("nfs_server_list_next", 16),
STACK_USAGE("nfs_server_list_stop", 0),
STACK_USAGE("register_nfs_version", 8),
STACK_USAGE("nfs_server_list_show", 32),
STACK_USAGE("nfs_volume_list_start", 16),
STACK_USAGE("nfs_volume_list_next", 16),
STACK_USAGE("nfs_volume_list_stop", 0),
STACK_USAGE("nfs_volume_list_show", 104),
STACK_USAGE("nfs_fs_proc_net_init", 24),
STACK_USAGE("unregister_nfs_version", 8),
STACK_USAGE("nfs_fs_proc_net_exit", 0),
STACK_USAGE("nfs_fs_proc_init", 8),
STACK_USAGE("nfs_fs_proc_exit", 0),
STACK_USAGE("nfs_alloc_client", 24),
STACK_USAGE("nfs_free_client", 8),
STACK_USAGE("nfs_put_client", 16),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("nfs_client_init_is_complete", 0),
STACK_USAGE("nfs_client_init_status", 0),
STACK_USAGE("nfs_wait_client_init_complete", 64),
STACK_USAGE("nfs_get_client", 112),
STACK_USAGE("net_generic", 16),
STACK_USAGE("nfs_mark_client_ready", 0),
STACK_USAGE("nfs_init_timeout_values", 0),
STACK_USAGE("nfs_create_rpc_client", 152),
STACK_USAGE("nfs_destroy_server", 0),
STACK_USAGE("nfs_init_server_rpcclient", 16),
STACK_USAGE("nfs_init_client", 16),
STACK_USAGE("nfs_probe_fsinfo", 184),
STACK_USAGE("nfs_probe_server", 32),
STACK_USAGE("nfs_server_copy_userdata", 0),
STACK_USAGE("nfs_server_insert_lists", 32),
STACK_USAGE("nfs_server_remove_lists", 32),
STACK_USAGE("nfs_alloc_server", 8),
STACK_USAGE("nfs_free_server", 32),
STACK_USAGE("nfs_expire_unused_delegation_types", 24),
STACK_USAGE("nfs_expire_unreferenced_delegations", 8),
STACK_USAGE("nfs_async_inode_return_delegation", 40),
STACK_USAGE("nfs4_do_check_delegation", 32),
STACK_USAGE("nfs_delegation_find_inode", 56),
STACK_USAGE("nfs_delegation_mark_reclaim", 8),
STACK_USAGE("nfs_server_reap_unclaimed_delegations", 40),
STACK_USAGE("nfs_delegation_reap_unclaimed", 0),
STACK_USAGE("nfs_inode_mark_test_expired_delegation", 16),
STACK_USAGE("nfs_mark_test_expired_all_delegations", 8),
STACK_USAGE("nfs_test_expired_all_delegations", 8),
STACK_USAGE("nfs_delegation_test_free_expired", 16),
STACK_USAGE("nfs_server_reap_expired_delegations", 88),
STACK_USAGE("nfs4_have_delegation", 0),
STACK_USAGE("nfs_reap_expired_delegations", 0),
STACK_USAGE("nfs_inode_find_delegation_state_and_recover", 32),
STACK_USAGE("nfs_delegations_present", 8),
STACK_USAGE("nfs4_refresh_delegation_stateid", 16),
STACK_USAGE("nfs4_check_delegation", 0),
STACK_USAGE("nfs4_copy_delegation_stateid", 40),
STACK_USAGE("nfs4_delegation_flush_on_close", 24),
STACK_USAGE("nfs_inode_reclaim_delegation", 56),
STACK_USAGE("get_cred_rcu", 8),
STACK_USAGE("nfs_do_return_delegation", 40),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("put_cred", 8),
STACK_USAGE("nfs_start_delegation_return_locked", 24),
STACK_USAGE("nfs_detach_delegation_locked", 24),
STACK_USAGE("nfs_detach_delegation", 32),
STACK_USAGE("nfs_inode_set_delegation", 72),
STACK_USAGE("nfs_end_delegation_return", 136),
STACK_USAGE("nfs_put_delegation", 16),
STACK_USAGE("nfs_server_return_marked_delegations", 80),
STACK_USAGE("nfs_free_delegation", 8),
STACK_USAGE("nfs_client_return_marked_delegations", 24),
STACK_USAGE("rcu_read_unlock", 0),
STACK_USAGE("nfs_inode_evict_delegation", 40),
STACK_USAGE("nfs_mark_delegation_referenced", 0),
STACK_USAGE("nfs4_inode_return_delegation", 24),
STACK_USAGE("nfs4_inode_return_delegation_on_close", 24),
STACK_USAGE("nfs4_inode_make_writeable", 16),
STACK_USAGE("nfs_expire_all_delegations", 8),
STACK_USAGE("nfs_server_return_all_delegations", 32),
STACK_USAGE("nfs_remove_bad_delegation", 72),
STACK_USAGE("nfs_delegation_mark_returned", 32),
STACK_USAGE("nfs4_get_valid_delegation", 8),
STACK_USAGE("nfs_do_filldir", 72),
STACK_USAGE("nfs_opendir", 40),
STACK_USAGE("nfs_readdir", 136),
STACK_USAGE("nfs_llseek_dir", 40),
STACK_USAGE("nfs_closedir", 16),
STACK_USAGE("nfs_fsync_dir", 0),
STACK_USAGE("nfs_force_lookup_revalidate", 0),
STACK_USAGE("nfs_set_verifier", 24),
STACK_USAGE("nfs_clear_verifier_delegated", 24),
STACK_USAGE("nfs_check_verifier", 32),
STACK_USAGE("nfs_mark_dir_for_revalidate", 16),
STACK_USAGE("nfs_lookup_revalidate_done", 8),
STACK_USAGE("nfs_lookup_revalidate_dentry", 64),
STACK_USAGE("nfs_do_lookup_revalidate", 40),
STACK_USAGE("nfs_lookup_revalidate", 32),
STACK_USAGE("nfs_weak_revalidate", 16),
STACK_USAGE("nfs_dentry_delete", 0),
STACK_USAGE("nfs_dentry_iput", 16),
STACK_USAGE("nfs_d_release", 0),
STACK_USAGE("nfs_lookup", 64),
STACK_USAGE("nfs_d_prune_case_insensitive_aliases", 0),
STACK_USAGE("do_open", 0),
STACK_USAGE("nfs_atomic_open", 232),
STACK_USAGE("nfs4_do_lookup_revalidate", 40),
STACK_USAGE("nfs_readdir_clear_array", 32),
STACK_USAGE("nfs4_lookup_revalidate", 32),
STACK_USAGE("nfs_add_or_obtain", 48),
STACK_USAGE("nfs_instantiate", 0),
STACK_USAGE("nfs_create", 120),
STACK_USAGE("nfs_mknod", 112),
STACK_USAGE("nfs_mkdir", 112),
STACK_USAGE("nfs_dentry_remove_handle_error", 24),
STACK_USAGE("nfs_rmdir", 24),
STACK_USAGE("nfs_readdir_page_array_alloc", 16),
STACK_USAGE("nfs_unlink", 48),
STACK_USAGE("nfs_symlink", 152),
STACK_USAGE("nfs_link", 48),
STACK_USAGE("nfs_rename", 96),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("nfs_do_access_cache_scan", 72),
STACK_USAGE("nfs_access_cache_scan", 0),
STACK_USAGE("nfs_access_cache_count", 0),
STACK_USAGE("nfs_access_zap_cache", 64),
STACK_USAGE("nfs_access_get_cached", 64),
STACK_USAGE("nfs_access_add_cache", 48),
STACK_USAGE("nfs_access_set_mask", 0),
STACK_USAGE("nfs_do_access", 128),
STACK_USAGE("nfs_readdir_page_array_append", 48),
STACK_USAGE("nfs_may_open", 0),
STACK_USAGE("nfs_permission", 24),
STACK_USAGE("trace_nfs_readdir_invalidate_cache_range", 0),
STACK_USAGE("d_lookup_done", 16),
STACK_USAGE("nfs_readdir_page_init_and_validate", 48),
STACK_USAGE("trace_nfs_atomic_open_exit", 0),
STACK_USAGE("nfs_readdir_record_entry_cache_hit", 8),
STACK_USAGE("nfs_readdir_record_entry_cache_miss", 8),
STACK_USAGE("nfs_readdir_entry_decode", 152),
STACK_USAGE("nfs_readdir_xdr_to_array", 304),
STACK_USAGE("nfs_destroy_directcache", 0),
STACK_USAGE("nfs_direct_IO", 0),
STACK_USAGE("nfs_init_cinfo_from_dreq", 0),
STACK_USAGE("nfs_dreq_bytes_left", 0),
STACK_USAGE("nfs_direct_complete", 8),
STACK_USAGE("nfs_direct_read_completion", 40),
STACK_USAGE("nfs_read_sync_pgio_error", 8),
STACK_USAGE("nfs_direct_pgio_init", 0),
STACK_USAGE("nfs_file_direct_read", 296),
STACK_USAGE("nfs_direct_write_reschedule", 288),
STACK_USAGE("nfs_direct_commit_complete", 104),
STACK_USAGE("nfs_direct_resched_write", 32),
STACK_USAGE("nfs_direct_write_schedule_work", 96),
STACK_USAGE("nfs_direct_write_completion", 104),
STACK_USAGE("nfs_write_sync_pgio_error", 8),
STACK_USAGE("nfs_direct_write_reschedule_io", 24),
STACK_USAGE("nfs_direct_write_schedule_iovec", 288),
STACK_USAGE("nfs_file_direct_write", 72),
STACK_USAGE("nfs_init_directcache", 8),
STACK_USAGE("nfs_dns_resolve_name", 40),
STACK_USAGE("nfs_get_parent", 176),
STACK_USAGE("nfs_fetch_iversion", 8),
STACK_USAGE("nfs_encode_fh", 16),
STACK_USAGE("nfs_fh_to_dentry", 48),
STACK_USAGE("nfs_file_llseek", 40),
STACK_USAGE("nfs_file_flush", 32),
STACK_USAGE("nfs_file_read", 24),
STACK_USAGE("nfs_file_mmap", 24),
STACK_USAGE("nfs_file_fsync", 48),
STACK_USAGE("zero_user_segments", 32),
STACK_USAGE("nfs_write_begin", 80),
STACK_USAGE("nfs_write_end", 48),
STACK_USAGE("nfs_invalidate_folio", 8),
STACK_USAGE("nfs_release_page", 0),
STACK_USAGE("nfs_check_dirty_writeback", 24),
STACK_USAGE("nfs_launder_folio", 16),
STACK_USAGE("nfs_check_flags", 0),
STACK_USAGE("nfs_swap_activate", 56),
STACK_USAGE("nfs_swap_deactivate", 0),
STACK_USAGE("nfs_vm_page_mkwrite", 56),
STACK_USAGE("nfs_file_open", 0),
STACK_USAGE("nfs_file_write", 56),
STACK_USAGE("do_unlk", 56),
STACK_USAGE("nfs_page_length", 16),
STACK_USAGE("do_setlk", 48),
STACK_USAGE("nfs_file_release", 0),
STACK_USAGE("nfs_lock", 48),
STACK_USAGE("nfs_flock", 0),
STACK_USAGE("nfs_fs_context_parse_monolithic", 64),
STACK_USAGE("nfs_get_tree", 72),
STACK_USAGE("nfs_fs_context_dup", 32),
STACK_USAGE("nfs_fs_context_free", 8),
STACK_USAGE("nfs_init_fs_context", 32),
STACK_USAGE("nfs_parse_security_flavors", 48),
STACK_USAGE("nfs_parse_version_string", 16),
STACK_USAGE("nfs_fs_context_parse_param", 56),
STACK_USAGE("nfs_get_root", 200),
STACK_USAGE("nfs_close_context", 8),
STACK_USAGE("alloc_nfs_open_context", 32),
STACK_USAGE("get_nfs_open_context", 16),
STACK_USAGE("__put_nfs_open_context", 40),
STACK_USAGE("put_nfs_open_context", 0),
STACK_USAGE("nfs_inode_attach_open_context", 32),
STACK_USAGE("nfs_file_set_open_context", 40),
STACK_USAGE("nfs_find_open_context", 48),
STACK_USAGE("nfs_drop_inode", 0),
STACK_USAGE("nfs_file_clear_open_context", 16),
STACK_USAGE("nfs_open", 16),
STACK_USAGE("__nfs_revalidate_inode", 32),
STACK_USAGE("nfs_clear_inode", 16),
STACK_USAGE("nfs_attribute_cache_expired", 8),
STACK_USAGE("nfs_revalidate_inode", 8),
STACK_USAGE("nfs_clear_invalid_mapping", 40),
STACK_USAGE("nfs_evict_inode", 8),
STACK_USAGE("nfs_mapping_need_revalidate_inode", 16),
STACK_USAGE("nfs_revalidate_mapping_rcu", 24),
STACK_USAGE("nfs_sync_inode", 8),
STACK_USAGE("nfs_revalidate_mapping", 16),
STACK_USAGE("nfs_sync_mapping", 8),
STACK_USAGE("nfs_inc_attr_generation_counter", 0),
STACK_USAGE("nfs_fattr_init", 0),
STACK_USAGE("nfs_fattr_set_barrier", 0),
STACK_USAGE("nfs_alloc_fattr", 0),
STACK_USAGE("nfs_alloc_fattr_with_label", 0),
STACK_USAGE("nfs_alloc_fhandle", 0),
STACK_USAGE("nfs_check_cache_invalid", 16),
STACK_USAGE("nfs_refresh_inode_locked", 32),
STACK_USAGE("nfs_refresh_inode", 24),
STACK_USAGE("nfs_post_op_update_inode", 24),
STACK_USAGE("nfs_post_op_update_inode_force_wcc_locked", 16),
STACK_USAGE("nfs_set_cache_invalid", 16),
STACK_USAGE("nfs_post_op_update_inode_force_wcc", 24),
STACK_USAGE("nfs_update_inode", 96),
STACK_USAGE("nfs_alloc_inode", 0),
STACK_USAGE("nfs_free_inode", 0),
STACK_USAGE("init_once", 8),
STACK_USAGE("nfs_net_init", 8),
STACK_USAGE("nfs_net_exit", 8),
STACK_USAGE("init_nfs_fs", 8),
STACK_USAGE("exit_nfs_fs", 0),
STACK_USAGE("nfs_zap_caches", 16),
STACK_USAGE("nfs_zap_mapping", 16),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("nfs_zap_acl_cache", 16),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("nfs_invalidate_atime", 16),
STACK_USAGE("nfs_set_inode_stale_locked", 8),
STACK_USAGE("nfs_set_inode_stale", 16),
STACK_USAGE("nfs_find_actor", 16),
STACK_USAGE("nfs_init_locked", 0),
STACK_USAGE("nfs_setsecurity", 0),
STACK_USAGE("nfs_ilookup", 24),
STACK_USAGE("nfs_fhget", 72),
STACK_USAGE("nfs_setattr", 40),
STACK_USAGE("nfs_setattr_update_inode", 40),
STACK_USAGE("nfs_getattr", 64),
STACK_USAGE("nfs_wait_bit_killable", 16),
STACK_USAGE("nfs_get_lock_context", 72),
STACK_USAGE("nfs_compat_user_ino64", 0),
STACK_USAGE("nfs_put_lock_context", 24),
STACK_USAGE("nfs_start_io_direct", 16),
STACK_USAGE("nfs_end_io_direct", 0),
STACK_USAGE("nfs_start_io_read", 16),
STACK_USAGE("nfs_end_io_read", 0),
STACK_USAGE("nfs_start_io_write", 8),
STACK_USAGE("nfs_end_io_write", 0),
STACK_USAGE("nfs_mount", 272),
STACK_USAGE("nfs_umount", 176),
STACK_USAGE("mnt_xdr_enc_dirpath", 24),
STACK_USAGE("mnt_xdr_dec_mountres", 24),
STACK_USAGE("mnt_xdr_dec_mountres3", 48),
STACK_USAGE("nfs_d_automount", 48),
STACK_USAGE("nfs_namespace_getattr", 0),
STACK_USAGE("nfs_namespace_setattr", 0),
STACK_USAGE("nfs_expire_automounts", 16),
STACK_USAGE("nfs_release_automount_timer", 0),
STACK_USAGE("nfs_do_submount", 56),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("nfs_submount", 40),
STACK_USAGE("param_set_nfs_timeout", 32),
STACK_USAGE("param_get_nfs_timeout", 0),
STACK_USAGE("nfs_path", 120),
STACK_USAGE("init_nfs_v2", 0),
STACK_USAGE("exit_nfs_v2", 0),
STACK_USAGE("nfs2_xdr_dec_statfsres", 32),
STACK_USAGE("trace_nfs_xdr_status", 0),
STACK_USAGE("decode_fattr", 40),
STACK_USAGE("encode_sattr", 32),
STACK_USAGE("nfs2_xdr_enc_fhandle", 8),
STACK_USAGE("nfs2_xdr_enc_sattrargs", 32),
STACK_USAGE("nfs2_xdr_enc_diropargs", 32),
STACK_USAGE("nfs2_xdr_enc_readlinkargs", 24),
STACK_USAGE("nfs2_xdr_enc_readargs", 48),
STACK_USAGE("nfs2_xdr_enc_writeargs", 40),
STACK_USAGE("nfs2_xdr_enc_createargs", 48),
STACK_USAGE("nfs2_xdr_enc_removeargs", 32),
STACK_USAGE("nfs2_xdr_enc_renameargs", 48),
STACK_USAGE("nfs2_xdr_enc_linkargs", 32),
STACK_USAGE("nfs2_xdr_enc_symlinkargs", 48),
STACK_USAGE("nfs2_xdr_enc_readdirargs", 32),
STACK_USAGE("nfs2_xdr_dec_stat", 16),
STACK_USAGE("nfs2_xdr_dec_attrstat", 32),
STACK_USAGE("nfs2_xdr_dec_diropres", 40),
STACK_USAGE("nfs2_xdr_dec_readlinkres", 32),
STACK_USAGE("nfs2_xdr_dec_readres", 40),
STACK_USAGE("nfs2_xdr_dec_writeres", 40),
STACK_USAGE("nfs2_decode_dirent", 32),
STACK_USAGE("nfs2_xdr_dec_readdirres", 16),
STACK_USAGE("__nfs3_proc_setacls", 200),
STACK_USAGE("nfs3_proc_setacls", 0),
STACK_USAGE("nfs3_set_acl", 32),
STACK_USAGE("nfs3_complete_get_acl", 24),
STACK_USAGE("nfs3_list_one_acl", 40),
STACK_USAGE("nfs3_listxattr", 40),
STACK_USAGE("nfs3_get_acl", 200),
STACK_USAGE("posix_acl_release", 0),
STACK_USAGE("nfs3_create_server", 8),
STACK_USAGE("nfs3_clone_server", 16),
STACK_USAGE("nfs3_set_ds_client", 264),
STACK_USAGE("nfs3_proc_getattr", 56),
STACK_USAGE("nfs3_proc_setattr", 112),
STACK_USAGE("__nfs3_proc_lookup", 128),
STACK_USAGE("nfs3_proc_lookup", 0),
STACK_USAGE("nfs3_proc_lookupp", 48),
STACK_USAGE("nfs3_proc_access", 96),
STACK_USAGE("nfs3_proc_readlink", 96),
STACK_USAGE("nfs3_rpc_wrapper", 32),
STACK_USAGE("nfs3_proc_create", 72),
STACK_USAGE("nfs3_proc_remove", 168),
STACK_USAGE("nfs3_proc_unlink_setup", 0),
STACK_USAGE("nfs3_proc_unlink_rpc_prepare", 0),
STACK_USAGE("nfs3_proc_unlink_done", 8),
STACK_USAGE("nfs3_proc_rename_setup", 0),
STACK_USAGE("nfs3_proc_rename_rpc_prepare", 0),
STACK_USAGE("nfs3_proc_rename_done", 16),
STACK_USAGE("nfs3_proc_link", 112),
STACK_USAGE("nfs3_proc_symlink", 64),
STACK_USAGE("nfs3_proc_mkdir", 72),
STACK_USAGE("nfs3_proc_rmdir", 88),
STACK_USAGE("nfs3_proc_readdir", 120),
STACK_USAGE("nfs3_proc_mknod", 72),
STACK_USAGE("nfs3_proc_statfs", 48),
STACK_USAGE("nfs3_proc_fsinfo", 80),
STACK_USAGE("nfs3_proc_pathconf", 48),
STACK_USAGE("nfs3_read_done", 24),
STACK_USAGE("nfs3_proc_read_setup", 0),
STACK_USAGE("nfs3_proc_pgio_rpc_prepare", 0),
STACK_USAGE("nfs3_write_done", 8),
STACK_USAGE("nfs3_proc_get_root", 80),
STACK_USAGE("nfs3_proc_write_setup", 0),
STACK_USAGE("nfs3_proc_commit_rpc_prepare", 0),
STACK_USAGE("nfs3_commit_done", 8),
STACK_USAGE("nfs3_proc_commit_setup", 0),
STACK_USAGE("nfs3_nlm_alloc_call", 8),
STACK_USAGE("nfs3_nlm_unlock_prepare", 0),
STACK_USAGE("nfs3_nlm_release_call", 8),
STACK_USAGE("nfs3_proc_lock", 40),
STACK_USAGE("nfs3_have_delegation", 0),
STACK_USAGE("init_nfs_v3", 0),
STACK_USAGE("exit_nfs_v3", 0),
STACK_USAGE("nfs3_xdr_enc_create3args", 48),
STACK_USAGE("nfs3_xdr_enc_mkdir3args", 48),
STACK_USAGE("nfs3_xdr_enc_symlink3args", 48),
STACK_USAGE("nfs3_xdr_enc_mknod3args", 48),
STACK_USAGE("nfs3_xdr_enc_remove3args", 32),
STACK_USAGE("nfs3_xdr_enc_rename3args", 48),
STACK_USAGE("nfs3_xdr_enc_link3args", 32),
STACK_USAGE("nfs3_xdr_enc_readdir3args", 32),
STACK_USAGE("nfs3_xdr_enc_readdirplus3args", 40),
STACK_USAGE("nfs3_xdr_enc_commit3args", 24),
STACK_USAGE("nfs3_xdr_enc_getacl3args", 32),
STACK_USAGE("nfs3_xdr_enc_setacl3args", 32),
STACK_USAGE("nfs3_xdr_dec_getattr3res", 32),
STACK_USAGE("nfs3_xdr_dec_setattr3res", 40),
STACK_USAGE("nfs3_xdr_dec_lookup3res", 56),
STACK_USAGE("nfs3_xdr_dec_access3res", 48),
STACK_USAGE("nfs3_xdr_dec_readlink3res", 48),
STACK_USAGE("nfs3_xdr_dec_read3res", 56),
STACK_USAGE("trace_nfs_xdr_status", 0),
STACK_USAGE("trace_nfs_xdr_bad_filehandle", 0),
STACK_USAGE("nfs3_xdr_dec_write3res", 48),
STACK_USAGE("nfs3_xdr_dec_create3res", 56),
STACK_USAGE("nfs3_xdr_dec_remove3res", 40),
STACK_USAGE("nfs3_xdr_dec_rename3res", 40),
STACK_USAGE("nfs3_xdr_dec_link3res", 48),
STACK_USAGE("nfs3_decode_dirent", 48),
STACK_USAGE("nfs3_xdr_dec_readdir3res", 48),
STACK_USAGE("nfs3_xdr_dec_fsstat3res", 48),
STACK_USAGE("nfs3_xdr_dec_fsinfo3res", 48),
STACK_USAGE("nfs3_xdr_dec_pathconf3res", 48),
STACK_USAGE("nfs3_xdr_dec_commit3res", 56),
STACK_USAGE("nfs3_xdr_dec_getacl3res", 40),
STACK_USAGE("nfs3_xdr_dec_setacl3res", 40),
STACK_USAGE("encode_sattr3", 24),
STACK_USAGE("decode_fattr3", 32),
STACK_USAGE("decode_wcc_data", 32),
STACK_USAGE("nfs3_xdr_enc_getattr3args", 8),
STACK_USAGE("nfs3_xdr_enc_setattr3args", 32),
STACK_USAGE("nfs3_xdr_enc_lookup3args", 32),
STACK_USAGE("nfs3_xdr_enc_access3args", 24),
STACK_USAGE("nfs3_xdr_enc_readlink3args", 24),
STACK_USAGE("nfs3_xdr_enc_read3args", 40),
STACK_USAGE("nfs3_xdr_enc_write3args", 24),
STACK_USAGE("nfs4_server_set_init_caps", 0),
STACK_USAGE("nfs4_server_common_setup", 24),
STACK_USAGE("nfs4_create_server", 104),
STACK_USAGE("nfs4_create_referral_server", 40),
STACK_USAGE("nfs4_update_server", 344),
STACK_USAGE("nfs40_shutdown_client", 8),
STACK_USAGE("nfs4_alloc_client", 264),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("nfs4_free_client", 8),
STACK_USAGE("nfs40_init_client", 24),
STACK_USAGE("local_lock_release", 8),
STACK_USAGE("net_generic", 16),
STACK_USAGE("nfs4_init_client", 376),
STACK_USAGE("nfs40_walk_client_list", 112),
STACK_USAGE("nfs4_destroy_server", 40),
STACK_USAGE("nfs4_find_client_ident", 24),
STACK_USAGE("nfs4_find_client_sessionid", 0),
STACK_USAGE("nfs4_set_client", 112),
STACK_USAGE("nfs4_set_ds_client", 264),
STACK_USAGE("nfs4_file_flush", 24),
STACK_USAGE("nfs4_file_open", 152),
STACK_USAGE("nfs4_setlease", 0),
STACK_USAGE("nfs4_get_rootfh", 152),
STACK_USAGE("nfs_fattr_free_names", 8),
STACK_USAGE("nfs_fattr_map_and_free_names", 32),
STACK_USAGE("nfs_map_string_to_numeric", 88),
STACK_USAGE("nfs_idmap_init", 24),
STACK_USAGE("nfs_idmap_quit", 8),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("nfs_idmap_get_key", 80),
STACK_USAGE("nfs_idmap_pipe_destroy", 8),
STACK_USAGE("nfs_idmap_pipe_create", 8),
STACK_USAGE("nfs_idmap_new", 24),
STACK_USAGE("nfs_idmap_delete", 8),
STACK_USAGE("nfs_idmap_legacy_upcall", 64),
STACK_USAGE("idmap_pipe_downcall", 208),
STACK_USAGE("idmap_pipe_destroy_msg", 24),
STACK_USAGE("idmap_release_pipe", 16),
STACK_USAGE("nfs_map_name_to_uid", 88),
STACK_USAGE("nfs_map_group_to_gid", 88),
STACK_USAGE("nfs_map_uid_to_name", 72),
STACK_USAGE("nfs_map_gid_to_group", 72),
STACK_USAGE("nfs_fattr_init_names", 0),
STACK_USAGE("nfs_parse_server_name", 48),
STACK_USAGE("nfs4_negotiate_security", 72),
STACK_USAGE("nfs4_submount", 176),
STACK_USAGE("nfs4_replace_transport", 112),
STACK_USAGE("nfs4_sequence_done", 32),
STACK_USAGE("nfs4_match_stateid", 0),
STACK_USAGE("nfs4_setup_sequence", 64),
STACK_USAGE("nfs4_listxattr", 0),
STACK_USAGE("nfs4_enable_swap", 0),
STACK_USAGE("nfs4_disable_swap", 0),
STACK_USAGE("trace_nfs4_remove", 0),
STACK_USAGE("nfs40_call_sync_prepare", 0),
STACK_USAGE("nfs40_call_sync_done", 32),
STACK_USAGE("nfs4_call_sync", 112),
STACK_USAGE("nfs4_update_changeattr_locked", 24),
STACK_USAGE("trace_nfs4_open_stateid_update", 0),
STACK_USAGE("nfs4_update_changeattr", 40),
STACK_USAGE("nfs4_opendata_alloc", 96),
STACK_USAGE("nfs4_opendata_put", 40),
STACK_USAGE("update_open_stateid", 160),
STACK_USAGE("nfs4_opendata_check_deleg", 32),
STACK_USAGE("_nfs4_opendata_to_nfs4_state", 112),
STACK_USAGE("nfs4_opendata_to_nfs4_state", 40),
STACK_USAGE("nfs4_state_find_open_context_mode", 40),
STACK_USAGE("nfs4_open_recover_helper", 32),
STACK_USAGE("nfs4_open_recover", 40),
STACK_USAGE("nfs4_open_reclaim", 104),
STACK_USAGE("nfs4_handle_delegation_recall_error", 24),
STACK_USAGE("nfs4_open_delegation_recall", 64),
STACK_USAGE("nfs4_open_confirm_prepare", 0),
STACK_USAGE("nfs4_open_confirm_done", 40),
STACK_USAGE("nfs4_open_confirm_release", 8),
STACK_USAGE("_nfs4_proc_open_confirm", 136),
STACK_USAGE("nfs4_open_prepare", 32),
STACK_USAGE("nfs4_open_done", 40),
STACK_USAGE("nfs4_open_release", 8),
STACK_USAGE("nfs4_run_open_task", 136),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("nfs40_open_expired", 104),
STACK_USAGE("nfs40_test_and_free_expired_stateid", 0),
STACK_USAGE("nfs4_do_open", 328),
STACK_USAGE("nfs4_do_setattr", 432),
STACK_USAGE("nfs4_free_closedata", 24),
STACK_USAGE("nfs4_close_done", 192),
STACK_USAGE("nfs4_close_prepare", 72),
STACK_USAGE("nfs4_do_close", 160),
STACK_USAGE("nfs4_atomic_open", 0),
STACK_USAGE("nfs4_close_context", 0),
STACK_USAGE("nfs4_server_capabilities", 392),
STACK_USAGE("net_generic", 16),
STACK_USAGE("nfs4_discover_trunking", 0),
STACK_USAGE("nfs4_lookup_root", 344),
STACK_USAGE("nfs4_find_root_sec", 64),
STACK_USAGE("nfs4_proc_get_rootfh", 24),
STACK_USAGE("nfs4_proc_get_root", 24),
STACK_USAGE("nfs4_proc_getattr", 344),
STACK_USAGE("nfs4_proc_setattr", 40),
STACK_USAGE("nfs4_proc_lookup_common", 352),
STACK_USAGE("nfs4_proc_lookup", 40),
STACK_USAGE("nfs4_proc_lookup_mountpoint", 24),
STACK_USAGE("nfs4_proc_lookupp", 328),
STACK_USAGE("nfs4_proc_access", 344),
STACK_USAGE("nfs4_do_handle_exception", 40),
STACK_USAGE("nfs4_proc_readlink", 320),
STACK_USAGE("nfs4_proc_create", 40),
STACK_USAGE("_nfs4_proc_remove", 288),
STACK_USAGE("nfs4_proc_remove", 80),
STACK_USAGE("nfs4_proc_rmdir", 80),
STACK_USAGE("nfs4_proc_unlink_setup", 8),
STACK_USAGE("nfs4_proc_unlink_rpc_prepare", 0),
STACK_USAGE("nfs4_proc_unlink_done", 96),
STACK_USAGE("nfs4_proc_rename_setup", 40),
STACK_USAGE("nfs4_proc_rename_rpc_prepare", 0),
STACK_USAGE("nfs4_proc_rename_done", 112),
STACK_USAGE("nfs4_proc_link", 400),
STACK_USAGE("nfs4_do_create", 144),
STACK_USAGE("nfs4_proc_symlink", 136),
STACK_USAGE("nfs4_proc_mkdir", 112),
STACK_USAGE("nfs4_proc_readdir", 368),
STACK_USAGE("nfs4_proc_mknod", 136),
STACK_USAGE("nfs4_proc_statfs", 312),
STACK_USAGE("nfs4_do_fsinfo", 296),
STACK_USAGE("nfs4_proc_fsinfo", 24),
STACK_USAGE("nfs4_proc_pathconf", 312),
STACK_USAGE("nfs4_set_rw_stateid", 0),
STACK_USAGE("nfs4_read_done_cb", 88),
STACK_USAGE("nfs4_read_done", 72),
STACK_USAGE("nfs4_proc_read_setup", 0),
STACK_USAGE("nfs4_proc_pgio_rpc_prepare", 16),
STACK_USAGE("nfs4_write_done_cb", 80),
STACK_USAGE("nfs4_write_done", 72),
STACK_USAGE("nfs4_bitmask_set", 0),
STACK_USAGE("nfs4_proc_write_setup", 32),
STACK_USAGE("nfs4_proc_commit_rpc_prepare", 0),
STACK_USAGE("nfs4_commit_done_cb", 64),
STACK_USAGE("nfs4_commit_done", 40),
STACK_USAGE("nfs4_proc_commit_setup", 0),
STACK_USAGE("nfs4_proc_commit", 280),
STACK_USAGE("nfs4_renew_release", 16),
STACK_USAGE("nfs4_renew_done", 24),
STACK_USAGE("nfs4_proc_async_renew", 56),
STACK_USAGE("nfs4_proc_renew", 64),
STACK_USAGE("nfs4_buf_to_pages_noslab", 56),
STACK_USAGE("nfs4_zap_acl_attr", 16),
STACK_USAGE("nfs4_handle_exception", 24),
STACK_USAGE("trace_nfs4_cached_open", 0),
STACK_USAGE("nfs4_async_handle_exception", 48),
STACK_USAGE("nfs4_get_uniquifier", 16),
STACK_USAGE("nfs4_setclientid_done", 24),
STACK_USAGE("nfs4_proc_setclientid", 360),
STACK_USAGE("nfs4_proc_setclientid_confirm", 56),
STACK_USAGE("nfs4_async_handle_error", 64),
STACK_USAGE("nfs4_delegreturn_done", 128),
STACK_USAGE("nfs4_delegreturn_release", 24),
STACK_USAGE("nfs4_delegreturn_prepare", 0),
STACK_USAGE("nfs4_proc_delegreturn", 240),
STACK_USAGE("nfs4_locku_release_calldata", 8),
STACK_USAGE("nfs4_locku_done", 128),
STACK_USAGE("nfs4_locku_prepare", 32),
STACK_USAGE("nfs4_do_unlck", 184),
STACK_USAGE("nfs4_init_sequence", 0),
STACK_USAGE("nfs4_lock_prepare", 32),
STACK_USAGE("nfs4_lock_done", 48),
STACK_USAGE("nfs4_lock_release", 8),
STACK_USAGE("_nfs4_do_setlk", 184),
STACK_USAGE("nfs4_lock_reclaim", 88),
STACK_USAGE("nfs4_lock_expired", 88),
STACK_USAGE("nfs4_retry_setlk", 120),
STACK_USAGE("nfs4_proc_lock", 336),
STACK_USAGE("nfs4_proc_setlease", 48),
STACK_USAGE("nfs4_lock_delegation_recall", 32),
STACK_USAGE("nfs4_release_lockowner_prepare", 16),
STACK_USAGE("nfs4_release_lockowner_done", 96),
STACK_USAGE("nfs4_release_lockowner_release", 8),
STACK_USAGE("nfs4_release_lockowner", 56),
STACK_USAGE("nfs4_xattr_set_nfs4_acl", 504),
STACK_USAGE("nfs4_xattr_get_nfs4_acl", 368),
STACK_USAGE("nfs4_xattr_list_nfs4_acl", 0),
STACK_USAGE("nfs4_proc_fs_locations", 384),
STACK_USAGE("_nfs40_proc_get_locations", 312),
STACK_USAGE("nfs4_proc_get_locations", 104),
STACK_USAGE("_nfs40_proc_fsid_present", 272),
STACK_USAGE("nfs4_proc_fsid_present", 96),
STACK_USAGE("_nfs4_proc_secinfo", 232),
STACK_USAGE("nfs4_proc_secinfo", 304),
STACK_USAGE("read_seqbegin", 40),
STACK_USAGE("write_seqlock", 8),
STACK_USAGE("nfs4_get_lease_time_prepare", 0),
STACK_USAGE("nfs4_get_lease_time_done", 40),
STACK_USAGE("nfs4_proc_get_lease_time", 200),
STACK_USAGE("write_sequnlock", 8),
STACK_USAGE("nfs4_schedule_state_renewal", 16),
STACK_USAGE("nfs4_kill_renewd", 0),
STACK_USAGE("nfs4_set_lease_period", 24),
STACK_USAGE("nfs4_renew_state", 48),
STACK_USAGE("nfs4_try_to_lock_slot", 0),
STACK_USAGE("nfs4_lookup_slot", 40),
STACK_USAGE("nfs4_slot_seqid_in_use", 56),
STACK_USAGE("nfs4_slot_wait_on_seqid", 96),
STACK_USAGE("nfs4_alloc_slot", 32),
STACK_USAGE("nfs4_shutdown_slot_table", 8),
STACK_USAGE("nfs4_setup_slot_table", 56),
STACK_USAGE("nfs41_assign_slot", 0),
STACK_USAGE("nfs41_wake_and_assign_slot", 0),
STACK_USAGE("nfs41_wake_slot_table", 24),
STACK_USAGE("nfs4_slot_tbl_drain_complete", 0),
STACK_USAGE("nfs4_free_slot", 16),
STACK_USAGE("nfs4_copy_open_stateid", 56),
STACK_USAGE("nfs4_select_rw_stateid", 64),
STACK_USAGE("nfs_alloc_seqid", 8),
STACK_USAGE("nfs_release_seqid", 32),
STACK_USAGE("nfs_free_seqid", 32),
STACK_USAGE("nfs4_init_clientid", 160),
STACK_USAGE("nfs_increment_open_seqid", 16),
STACK_USAGE("nfs_increment_lock_seqid", 8),
STACK_USAGE("nfs_wait_on_sequence", 32),
STACK_USAGE("nfs4_schedule_state_manager", 104),
STACK_USAGE("nfs4_schedule_lease_recovery", 0),
STACK_USAGE("nfs4_schedule_migration_recovery", 0),
STACK_USAGE("nfs4_schedule_lease_moved_recovery", 0),
STACK_USAGE("nfs4_wait_clnt_recover", 16),
STACK_USAGE("nfs4_client_recover_expired_lease", 16),
STACK_USAGE("nfs4_schedule_path_down_recovery", 8),
STACK_USAGE("nfs4_state_mark_reclaim_reboot", 0),
STACK_USAGE("nfs4_state_mark_reclaim_nograce", 0),
STACK_USAGE("nfs4_schedule_stateid_recovery", 8),
STACK_USAGE("nfs_inode_find_state_and_recover", 72),
STACK_USAGE("nfs40_discover_server_trunking", 56),
STACK_USAGE("nfs4_state_mark_reclaim_helper", 80),
STACK_USAGE("nfs4_state_end_reclaim_reboot", 56),
STACK_USAGE("nfs4_recovery_handle_error", 8),
STACK_USAGE("nfs4_do_reclaim", 168),
STACK_USAGE("nfs4_get_machine_cred", 8),
STACK_USAGE("nfs4_handle_reclaim_lease_error", 16),
STACK_USAGE("nfs4_establish_lease", 32),
STACK_USAGE("nfs4_try_migration", 48),
STACK_USAGE("nfs4_discover_server_trunking", 56),
STACK_USAGE("nfs4_get_renew_cred", 32),
STACK_USAGE("nfs4_end_drain_session", 24),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("nfs4_run_state_manager", 152),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("nfs4_begin_drain_session", 24),
STACK_USAGE("nfs4_get_clid_cred", 8),
STACK_USAGE("net_generic", 16),
STACK_USAGE("nfs4_free_state_owner", 16),
STACK_USAGE("nfs4_get_state_owner", 80),
STACK_USAGE("nfs4_put_state_owner", 24),
STACK_USAGE("nfs4_purge_state_owners", 40),
STACK_USAGE("nfs4_free_state_owners", 32),
STACK_USAGE("nfs4_state_set_mode_locked", 0),
STACK_USAGE("nfs4_get_open_state", 64),
STACK_USAGE("nfs4_put_open_state", 40),
STACK_USAGE("__nfs4_close", 40),
STACK_USAGE("nfs4_close_state", 0),
STACK_USAGE("nfs4_close_sync", 0),
STACK_USAGE("nfs4_free_lock_state", 8),
STACK_USAGE("nfs4_put_lock_state", 24),
STACK_USAGE("nfs4_fl_copy_lock", 0),
STACK_USAGE("nfs4_fl_release_lock", 0),
STACK_USAGE("nfs4_set_lock_state", 64),
STACK_USAGE("nfs_referral_loop_unprotect", 8),
STACK_USAGE("do_nfs4_mount", 96),
STACK_USAGE("nfs4_try_get_tree", 16),
STACK_USAGE("nfs4_get_referral_tree", 16),
STACK_USAGE("init_nfs_v4", 8),
STACK_USAGE("exit_nfs_v4", 0),
STACK_USAGE("nfs4_write_inode", 0),
STACK_USAGE("nfs4_evict_inode", 8),
STACK_USAGE("nfs4_register_sysctl", 0),
STACK_USAGE("nfs4_unregister_sysctl", 0),
STACK_USAGE("__bpf_trace_nfs4_lookup_event", 0),
STACK_USAGE("perf_trace_nfs4_lookup_event", 88),
STACK_USAGE("trace_event_raw_event_nfs4_lookup_event", 104),
STACK_USAGE("trace_raw_output_nfs4_lookup_event", 32),
STACK_USAGE("__traceiter_nfs4_lookup", 32),
STACK_USAGE("__traceiter_nfs4_symlink", 32),
STACK_USAGE("__traceiter_nfs4_mkdir", 32),
STACK_USAGE("__traceiter_nfs4_mknod", 32),
STACK_USAGE("__traceiter_nfs4_remove", 32),
STACK_USAGE("__traceiter_nfs4_get_fs_locations", 32),
STACK_USAGE("__traceiter_nfs4_secinfo", 32),
STACK_USAGE("__bpf_trace_nfs4_lookupp", 0),
STACK_USAGE("__traceiter_nfs4_lookupp", 24),
STACK_USAGE("perf_trace_nfs4_lookupp", 64),
STACK_USAGE("trace_event_raw_event_nfs4_lookupp", 80),
STACK_USAGE("trace_raw_output_nfs4_lookupp", 32),
STACK_USAGE("__bpf_trace_nfs4_rename", 0),
STACK_USAGE("__traceiter_nfs4_rename", 48),
STACK_USAGE("perf_trace_nfs4_rename", 120),
STACK_USAGE("trace_event_raw_event_nfs4_rename", 128),
STACK_USAGE("trace_raw_output_nfs4_rename", 32),
STACK_USAGE("__bpf_trace_nfs4_inode_event", 0),
STACK_USAGE("perf_trace_nfs4_inode_event", 80),
STACK_USAGE("trace_event_raw_event_nfs4_inode_event", 80),
STACK_USAGE("trace_raw_output_nfs4_inode_event", 32),
STACK_USAGE("__traceiter_nfs4_access", 24),
STACK_USAGE("__traceiter_nfs4_readlink", 24),
STACK_USAGE("__traceiter_nfs4_readdir", 24),
STACK_USAGE("__traceiter_nfs4_get_acl", 24),
STACK_USAGE("__traceiter_nfs4_set_acl", 24),
STACK_USAGE("__bpf_trace_nfs4_inode_stateid_event", 0),
STACK_USAGE("perf_trace_nfs4_inode_stateid_event", 88),
STACK_USAGE("trace_event_raw_event_nfs4_inode_stateid_event", 88),
STACK_USAGE("trace_raw_output_nfs4_inode_stateid_event", 40),
STACK_USAGE("__traceiter_nfs4_setattr", 32),
STACK_USAGE("__traceiter_nfs4_delegreturn", 32),
STACK_USAGE("__traceiter_nfs4_open_stateid_update", 32),
STACK_USAGE("__traceiter_nfs4_open_stateid_update_wait", 32),
STACK_USAGE("__traceiter_nfs4_close_stateid_update_wait", 32),
STACK_USAGE("__bpf_trace_nfs4_getattr_event", 0),
STACK_USAGE("perf_trace_nfs4_getattr_event", 104),
STACK_USAGE("trace_event_raw_event_nfs4_getattr_event", 96),
STACK_USAGE("trace_raw_output_nfs4_getattr_event", 80),
STACK_USAGE("__traceiter_nfs4_getattr", 40),
STACK_USAGE("__traceiter_nfs4_lookup_root", 40),
STACK_USAGE("__traceiter_nfs4_fsinfo", 40),
STACK_USAGE("__bpf_trace_nfs4_inode_callback_event", 0),
STACK_USAGE("perf_trace_nfs4_inode_callback_event", 112),
STACK_USAGE("trace_event_raw_event_nfs4_inode_callback_event", 112),
STACK_USAGE("trace_raw_output_nfs4_inode_callback_event", 32),
STACK_USAGE("__traceiter_nfs4_cb_getattr", 40),
STACK_USAGE("__bpf_trace_nfs4_inode_stateid_callback_event", 0),
STACK_USAGE("perf_trace_nfs4_inode_stateid_callback_event", 120),
STACK_USAGE("trace_event_raw_event_nfs4_inode_stateid_callback_event", 120),
STACK_USAGE("trace_raw_output_nfs4_inode_stateid_callback_event", 48),
STACK_USAGE("__traceiter_nfs4_cb_recall", 48),
STACK_USAGE("__traceiter_nfs4_cb_layoutrecall_file", 48),
STACK_USAGE("__bpf_trace_nfs4_idmap_event", 0),
STACK_USAGE("perf_trace_nfs4_idmap_event", 96),
STACK_USAGE("trace_event_raw_event_nfs4_idmap_event", 104),
STACK_USAGE("trace_raw_output_nfs4_idmap_event", 32),
STACK_USAGE("__traceiter_nfs4_map_name_to_uid", 40),
STACK_USAGE("__traceiter_nfs4_map_group_to_gid", 40),
STACK_USAGE("__traceiter_nfs4_map_uid_to_name", 40),
STACK_USAGE("__traceiter_nfs4_map_gid_to_group", 40),
STACK_USAGE("__bpf_trace_nfs4_read_event", 0),
STACK_USAGE("perf_trace_nfs4_read_event", 96),
STACK_USAGE("trace_event_raw_event_nfs4_read_event", 96),
STACK_USAGE("trace_raw_output_nfs4_read_event", 72),
STACK_USAGE("__traceiter_nfs4_read", 24),
STACK_USAGE("__bpf_trace_nfs4_write_event", 0),
STACK_USAGE("perf_trace_nfs4_write_event", 96),
STACK_USAGE("trace_event_raw_event_nfs4_write_event", 96),
STACK_USAGE("trace_raw_output_nfs4_write_event", 72),
STACK_USAGE("__traceiter_nfs4_write", 24),
STACK_USAGE("__bpf_trace_nfs4_commit_event", 0),
STACK_USAGE("perf_trace_nfs4_commit_event", 88),
STACK_USAGE("trace_event_raw_event_nfs4_commit_event", 88),
STACK_USAGE("trace_raw_output_nfs4_commit_event", 48),
STACK_USAGE("__traceiter_nfs4_commit", 24),
STACK_USAGE("__bpf_trace_nfs4_setup_sequence", 0),
STACK_USAGE("__traceiter_nfs4_setup_sequence", 24),
STACK_USAGE("perf_trace_nfs4_setup_sequence", 56),
STACK_USAGE("trace_event_raw_event_nfs4_setup_sequence", 72),
STACK_USAGE("trace_raw_output_nfs4_setup_sequence", 24),
STACK_USAGE("__bpf_trace_nfs4_state_mgr", 0),
STACK_USAGE("__traceiter_nfs4_state_mgr", 16),
STACK_USAGE("perf_trace_nfs4_state_mgr", 80),
STACK_USAGE("trace_event_raw_event_nfs4_state_mgr", 88),
STACK_USAGE("trace_raw_output_nfs4_state_mgr", 32),
STACK_USAGE("__bpf_trace_nfs4_state_mgr_failed", 0),
STACK_USAGE("__traceiter_nfs4_state_mgr_failed", 32),
STACK_USAGE("perf_trace_nfs4_state_mgr_failed", 104),
STACK_USAGE("trace_event_raw_event_nfs4_state_mgr_failed", 112),
STACK_USAGE("trace_raw_output_nfs4_state_mgr_failed", 64),
STACK_USAGE("__bpf_trace_nfs4_clientid_event", 0),
STACK_USAGE("perf_trace_nfs4_clientid_event", 88),
STACK_USAGE("trace_event_raw_event_nfs4_clientid_event", 96),
STACK_USAGE("trace_raw_output_nfs4_clientid_event", 32),
STACK_USAGE("__bpf_trace_nfs4_xdr_bad_operation", 0),
STACK_USAGE("__traceiter_nfs4_xdr_bad_operation", 32),
STACK_USAGE("perf_trace_nfs4_xdr_bad_operation", 72),
STACK_USAGE("trace_event_raw_event_nfs4_xdr_bad_operation", 88),
STACK_USAGE("trace_raw_output_nfs4_xdr_bad_operation", 24),
STACK_USAGE("__bpf_trace_nfs4_xdr_event", 0),
STACK_USAGE("perf_trace_nfs4_xdr_event", 72),
STACK_USAGE("trace_event_raw_event_nfs4_xdr_event", 88),
STACK_USAGE("trace_raw_output_nfs4_xdr_event", 56),
STACK_USAGE("__traceiter_nfs4_xdr_status", 32),
STACK_USAGE("__traceiter_nfs4_xdr_bad_filehandle", 32),
STACK_USAGE("__bpf_trace_nfs4_cb_error_class", 0),
STACK_USAGE("perf_trace_nfs4_cb_error_class", 64),
STACK_USAGE("trace_event_raw_event_nfs4_cb_error_class", 80),
STACK_USAGE("trace_raw_output_nfs4_cb_error_class", 24),
STACK_USAGE("__traceiter_nfs_cb_no_clp", 24),
STACK_USAGE("__traceiter_nfs_cb_badprinc", 24),
STACK_USAGE("__bpf_trace_nfs4_open_event", 0),
STACK_USAGE("perf_trace_nfs4_open_event", 88),
STACK_USAGE("trace_event_raw_event_nfs4_open_event", 96),
STACK_USAGE("trace_raw_output_nfs4_open_event", 104),
STACK_USAGE("__traceiter_nfs4_open_reclaim", 32),
STACK_USAGE("__traceiter_nfs4_open_expired", 32),
STACK_USAGE("__traceiter_nfs4_open_file", 32),
STACK_USAGE("__bpf_trace_nfs4_cached_open", 0),
STACK_USAGE("__traceiter_nfs4_cached_open", 16),
STACK_USAGE("perf_trace_nfs4_cached_open", 72),
STACK_USAGE("trace_event_raw_event_nfs4_cached_open", 72),
STACK_USAGE("trace_raw_output_nfs4_cached_open", 24),
STACK_USAGE("__bpf_trace_nfs4_close", 0),
STACK_USAGE("__traceiter_nfs4_close", 40),
STACK_USAGE("perf_trace_nfs4_close", 96),
STACK_USAGE("trace_event_raw_event_nfs4_close", 88),
STACK_USAGE("trace_raw_output_nfs4_close", 48),
STACK_USAGE("__bpf_trace_nfs4_lock_event", 0),
STACK_USAGE("perf_trace_nfs4_lock_event", 88),
STACK_USAGE("trace_event_raw_event_nfs4_lock_event", 96),
STACK_USAGE("trace_raw_output_nfs4_lock_event", 72),
STACK_USAGE("__traceiter_nfs4_setclientid", 24),
STACK_USAGE("__traceiter_nfs4_setclientid_confirm", 24),
STACK_USAGE("__traceiter_nfs4_renew", 24),
STACK_USAGE("__traceiter_nfs4_renew_async", 24),
STACK_USAGE("__traceiter_nfs4_get_lock", 40),
STACK_USAGE("__traceiter_nfs4_unlock", 40),
STACK_USAGE("__bpf_trace_nfs4_set_lock", 0),
STACK_USAGE("__traceiter_nfs4_set_lock", 48),
STACK_USAGE("perf_trace_nfs4_set_lock", 96),
STACK_USAGE("trace_event_raw_event_nfs4_set_lock", 104),
STACK_USAGE("trace_raw_output_nfs4_set_lock", 88),
STACK_USAGE("__bpf_trace_nfs4_state_lock_reclaim", 0),
STACK_USAGE("__traceiter_nfs4_state_lock_reclaim", 24),
STACK_USAGE("perf_trace_nfs4_state_lock_reclaim", 80),
STACK_USAGE("trace_event_raw_event_nfs4_state_lock_reclaim", 80),
STACK_USAGE("trace_raw_output_nfs4_state_lock_reclaim", 88),
STACK_USAGE("__bpf_trace_nfs4_set_delegation_event", 0),
STACK_USAGE("perf_trace_nfs4_set_delegation_event", 72),
STACK_USAGE("trace_event_raw_event_nfs4_set_delegation_event", 80),
STACK_USAGE("trace_raw_output_nfs4_set_delegation_event", 24),
STACK_USAGE("__traceiter_nfs4_set_delegation", 24),
STACK_USAGE("__traceiter_nfs4_reclaim_delegation", 24),
STACK_USAGE("__bpf_trace_nfs4_delegreturn_exit", 0),
STACK_USAGE("__traceiter_nfs4_delegreturn_exit", 32),
STACK_USAGE("perf_trace_nfs4_delegreturn_exit", 88),
STACK_USAGE("trace_event_raw_event_nfs4_delegreturn_exit", 88),
STACK_USAGE("trace_raw_output_nfs4_delegreturn_exit", 32),
STACK_USAGE("encode_compound_hdr", 32),
STACK_USAGE("encode_attrs", 392),
STACK_USAGE("encode_getattr", 72),
STACK_USAGE("encode_open", 32),
STACK_USAGE("nfs4_xdr_enc_access", 96),
STACK_USAGE("nfs4_xdr_enc_lookup", 104),
STACK_USAGE("nfs4_xdr_enc_lookupp", 96),
STACK_USAGE("nfs4_xdr_enc_lookup_root", 80),
STACK_USAGE("nfs4_xdr_enc_remove", 88),
STACK_USAGE("nfs4_xdr_enc_rename", 96),
STACK_USAGE("nfs4_xdr_enc_link", 104),
STACK_USAGE("nfs4_xdr_enc_create", 96),
STACK_USAGE("nfs4_xdr_enc_symlink", 0),
STACK_USAGE("nfs4_xdr_enc_getattr", 80),
STACK_USAGE("nfs4_xdr_enc_close", 88),
STACK_USAGE("nfs4_xdr_enc_open", 96),
STACK_USAGE("nfs4_xdr_enc_open_confirm", 96),
STACK_USAGE("nfs4_xdr_enc_open_noattr", 88),
STACK_USAGE("nfs4_xdr_enc_open_downgrade", 96),
STACK_USAGE("nfs4_xdr_enc_lock", 96),
STACK_USAGE("nfs4_xdr_enc_lockt", 88),
STACK_USAGE("nfs4_xdr_enc_locku", 96),
STACK_USAGE("nfs4_xdr_enc_release_lockowner", 72),
STACK_USAGE("nfs4_xdr_enc_readlink", 104),
STACK_USAGE("nfs4_xdr_enc_readdir", 128),
STACK_USAGE("nfs4_xdr_enc_read", 104),
STACK_USAGE("nfs4_xdr_enc_setattr", 96),
STACK_USAGE("nfs4_xdr_enc_getacl", 112),
STACK_USAGE("nfs4_xdr_enc_write", 104),
STACK_USAGE("nfs4_xdr_enc_commit", 88),
STACK_USAGE("nfs4_xdr_enc_fsinfo", 80),
STACK_USAGE("nfs4_xdr_enc_pathconf", 80),
STACK_USAGE("nfs4_xdr_enc_statfs", 80),
STACK_USAGE("nfs4_xdr_enc_server_caps", 96),
STACK_USAGE("nfs4_xdr_enc_renew", 80),
STACK_USAGE("nfs4_xdr_enc_setclientid", 88),
STACK_USAGE("nfs4_xdr_enc_setclientid_confirm", 80),
STACK_USAGE("nfs4_xdr_enc_delegreturn", 88),
STACK_USAGE("nfs4_xdr_enc_fs_locations", 104),
STACK_USAGE("nfs4_xdr_enc_secinfo", 88),
STACK_USAGE("nfs4_xdr_enc_fsid_present", 88),
STACK_USAGE("nfs4_xdr_enc_get_lease_time", 72),
STACK_USAGE("decode_compound_hdr", 32),
STACK_USAGE("decode_attr_symlink_support", 24),
STACK_USAGE("decode_attr_exclcreat_supported", 56),
STACK_USAGE("decode_attr_aclsupport", 24),
STACK_USAGE("decode_attr_case_insensitive", 24),
STACK_USAGE("decode_attr_case_preserving", 24),
STACK_USAGE("decode_attr_mounted_on_fileid", 24),
STACK_USAGE("decode_pathname", 48),
STACK_USAGE("trace_nfs4_xdr_bad_operation", 0),
STACK_USAGE("decode_attr_maxfilesize", 24),
STACK_USAGE("decode_attr_maxread", 24),
STACK_USAGE("decode_attr_maxwrite", 24),
STACK_USAGE("decode_attr_nlink", 24),
STACK_USAGE("decode_attr_owner", 48),
STACK_USAGE("decode_attr_group", 48),
STACK_USAGE("decode_attr_rdev", 24),
STACK_USAGE("decode_attr_space_used", 24),
STACK_USAGE("decode_attr_time_access", 16),
STACK_USAGE("decode_attr_time_metadata", 16),
STACK_USAGE("decode_attr_time_delta", 16),
STACK_USAGE("decode_attr_security_label", 56),
STACK_USAGE("decode_attr_time_modify", 16),
STACK_USAGE("decode_attr_xattrsupport", 24),
STACK_USAGE("decode_access", 32),
STACK_USAGE("trace_nfs4_xdr_status", 0),
STACK_USAGE("trace_nfs4_xdr_bad_filehandle", 0),
STACK_USAGE("decode_attr_mdsthreshold", 88),
STACK_USAGE("decode_getfattr_attrs", 96),
STACK_USAGE("decode_getfattr_generic", 96),
STACK_USAGE("decode_attr_pnfstype", 32),
STACK_USAGE("decode_attr_layout_blksize", 24),
STACK_USAGE("decode_attr_clone_blksize", 24),
STACK_USAGE("decode_attr_change_attr_type", 16),
STACK_USAGE("decode_fsinfo", 80),
STACK_USAGE("decode_getfh", 24),
STACK_USAGE("decode_link", 24),
STACK_USAGE("decode_open", 24),
STACK_USAGE("decode_renew", 16),
STACK_USAGE("decode_restorefh", 16),
STACK_USAGE("decode_setattr", 16),
STACK_USAGE("nfs4_xdr_dec_open_downgrade", 80),
STACK_USAGE("nfs4_xdr_dec_access", 80),
STACK_USAGE("nfs4_xdr_dec_lookup", 72),
STACK_USAGE("nfs4_xdr_dec_lookupp", 72),
STACK_USAGE("nfs4_xdr_dec_lookup_root", 72),
STACK_USAGE("nfs4_xdr_dec_remove", 72),
STACK_USAGE("nfs4_xdr_dec_rename", 72),
STACK_USAGE("nfs4_xdr_dec_link", 80),
STACK_USAGE("nfs4_xdr_dec_create", 80),
STACK_USAGE("nfs4_xdr_dec_symlink", 0),
STACK_USAGE("nfs4_xdr_dec_getattr", 72),
STACK_USAGE("nfs4_xdr_enc_setacl", 96),
STACK_USAGE("nfs4_xdr_dec_setacl", 64),
STACK_USAGE("nfs4_xdr_dec_getacl", 120),
STACK_USAGE("nfs4_xdr_dec_close", 80),
STACK_USAGE("nfs4_xdr_dec_open", 80),
STACK_USAGE("nfs4_xdr_dec_open_confirm", 80),
STACK_USAGE("nfs4_xdr_dec_open_noattr", 80),
STACK_USAGE("nfs4_xdr_dec_setattr", 80),
STACK_USAGE("nfs4_xdr_dec_lock", 80),
STACK_USAGE("nfs4_xdr_dec_lockt", 72),
STACK_USAGE("nfs4_xdr_dec_locku", 80),
STACK_USAGE("nfs4_xdr_dec_release_lockowner", 64),
STACK_USAGE("nfs4_xdr_dec_readlink", 80),
STACK_USAGE("nfs4_xdr_dec_readdir", 72),
STACK_USAGE("nfs4_xdr_dec_read", 88),
STACK_USAGE("nfs4_xdr_dec_write", 80),
STACK_USAGE("nfs4_xdr_dec_commit", 72),
STACK_USAGE("nfs4_xdr_dec_fsinfo", 72),
STACK_USAGE("nfs4_xdr_dec_pathconf", 120),
STACK_USAGE("nfs4_xdr_dec_statfs", 120),
STACK_USAGE("nfs4_xdr_dec_server_caps", 136),
STACK_USAGE("nfs4_xdr_dec_renew", 64),
STACK_USAGE("nfs4_xdr_dec_setclientid", 72),
STACK_USAGE("nfs4_xdr_dec_setclientid_confirm", 64),
STACK_USAGE("nfs4_xdr_dec_delegreturn", 72),
STACK_USAGE("nfs4_xdr_dec_fs_locations", 72),
STACK_USAGE("nfs4_xdr_dec_secinfo", 104),
STACK_USAGE("nfs4_xdr_dec_fsid_present", 72),
STACK_USAGE("nfs4_xdr_dec_get_lease_time", 72),
STACK_USAGE("nfs4_decode_dirent", 88),
STACK_USAGE("nfs_root_setup", 8),
STACK_USAGE("root_nfs_cat", 8),
STACK_USAGE("root_nfs_parse_options", 32),
STACK_USAGE("root_nfs_data", 72),
STACK_USAGE("nfs_root_data", 16),
STACK_USAGE("__bpf_trace_nfs_aop_readahead", 0),
STACK_USAGE("__traceiter_nfs_aop_readahead", 32),
STACK_USAGE("perf_trace_nfs_aop_readahead", 80),
STACK_USAGE("trace_event_raw_event_nfs_aop_readahead", 88),
STACK_USAGE("trace_raw_output_nfs_aop_readahead", 24),
STACK_USAGE("__bpf_trace_nfs_aop_readahead_done", 0),
STACK_USAGE("__traceiter_nfs_aop_readahead_done", 32),
STACK_USAGE("perf_trace_nfs_aop_readahead_done", 80),
STACK_USAGE("trace_event_raw_event_nfs_aop_readahead_done", 88),
STACK_USAGE("trace_raw_output_nfs_aop_readahead_done", 24),
STACK_USAGE("__bpf_trace_nfs_initiate_read", 0),
STACK_USAGE("__traceiter_nfs_initiate_read", 16),
STACK_USAGE("perf_trace_nfs_initiate_read", 72),
STACK_USAGE("trace_event_raw_event_nfs_initiate_read", 72),
STACK_USAGE("trace_raw_output_nfs_initiate_read", 24),
STACK_USAGE("__bpf_trace_nfs_readpage_done", 0),
STACK_USAGE("__traceiter_nfs_readpage_done", 24),
STACK_USAGE("perf_trace_nfs_readpage_done", 72),
STACK_USAGE("trace_event_raw_event_nfs_readpage_done", 80),
STACK_USAGE("trace_raw_output_nfs_readpage_done", 32),
STACK_USAGE("__bpf_trace_nfs_readpage_short", 0),
STACK_USAGE("__traceiter_nfs_readpage_short", 24),
STACK_USAGE("perf_trace_nfs_readpage_short", 72),
STACK_USAGE("trace_event_raw_event_nfs_readpage_short", 80),
STACK_USAGE("trace_raw_output_nfs_readpage_short", 32),
STACK_USAGE("__bpf_trace_nfs_fscache_page_event", 0),
STACK_USAGE("perf_trace_nfs_fscache_page_event", 72),
STACK_USAGE("trace_event_raw_event_nfs_fscache_page_event", 80),
STACK_USAGE("trace_raw_output_nfs_fscache_page_event", 24),
STACK_USAGE("__bpf_trace_nfs_fscache_page_event_done", 0),
STACK_USAGE("perf_trace_nfs_fscache_page_event_done", 72),
STACK_USAGE("trace_event_raw_event_nfs_fscache_page_event_done", 88),
STACK_USAGE("trace_raw_output_nfs_fscache_page_event_done", 24),
STACK_USAGE("__traceiter_nfs_fscache_read_page", 24),
STACK_USAGE("__traceiter_nfs_fscache_read_page_exit", 32),
STACK_USAGE("__traceiter_nfs_fscache_write_page", 24),
STACK_USAGE("__traceiter_nfs_fscache_write_page_exit", 32),
STACK_USAGE("__bpf_trace_nfs_pgio_error", 0),
STACK_USAGE("__traceiter_nfs_pgio_error", 32),
STACK_USAGE("perf_trace_nfs_pgio_error", 72),
STACK_USAGE("trace_event_raw_event_nfs_pgio_error", 80),
STACK_USAGE("trace_raw_output_nfs_pgio_error", 24),
STACK_USAGE("__bpf_trace_nfs_initiate_write", 0),
STACK_USAGE("__traceiter_nfs_initiate_write", 16),
STACK_USAGE("perf_trace_nfs_initiate_write", 72),
STACK_USAGE("trace_event_raw_event_nfs_initiate_write", 72),
STACK_USAGE("trace_raw_output_nfs_initiate_write", 72),
STACK_USAGE("__bpf_trace_nfs_writeback_done", 0),
STACK_USAGE("__traceiter_nfs_writeback_done", 24),
STACK_USAGE("perf_trace_nfs_writeback_done", 72),
STACK_USAGE("trace_event_raw_event_nfs_writeback_done", 80),
STACK_USAGE("trace_raw_output_nfs_writeback_done", 104),
STACK_USAGE("__bpf_trace_nfs_page_error_class", 0),
STACK_USAGE("perf_trace_nfs_page_error_class", 64),
STACK_USAGE("trace_event_raw_event_nfs_page_error_class", 80),
STACK_USAGE("trace_raw_output_nfs_page_error_class", 24),
STACK_USAGE("__traceiter_nfs_set_inode_stale", 16),
STACK_USAGE("__traceiter_nfs_refresh_inode_enter", 16),
STACK_USAGE("__traceiter_nfs_refresh_inode_exit", 24),
STACK_USAGE("__traceiter_nfs_revalidate_inode_enter", 16),
STACK_USAGE("__traceiter_nfs_write_error", 24),
STACK_USAGE("__traceiter_nfs_revalidate_inode_exit", 24),
STACK_USAGE("__traceiter_nfs_comp_error", 24),
STACK_USAGE("__traceiter_nfs_commit_error", 24),
STACK_USAGE("__bpf_trace_nfs_initiate_commit", 0),
STACK_USAGE("__traceiter_nfs_initiate_commit", 16),
STACK_USAGE("perf_trace_nfs_initiate_commit", 72),
STACK_USAGE("trace_event_raw_event_nfs_initiate_commit", 72),
STACK_USAGE("trace_raw_output_nfs_initiate_commit", 24),
STACK_USAGE("__traceiter_nfs_invalidate_mapping_enter", 16),
STACK_USAGE("__traceiter_nfs_invalidate_mapping_exit", 24),
STACK_USAGE("__traceiter_nfs_getattr_enter", 16),
STACK_USAGE("__traceiter_nfs_getattr_exit", 24),
STACK_USAGE("__bpf_trace_nfs_commit_done", 0),
STACK_USAGE("__traceiter_nfs_commit_done", 24),
STACK_USAGE("perf_trace_nfs_commit_done", 72),
STACK_USAGE("trace_event_raw_event_nfs_commit_done", 80),
STACK_USAGE("trace_raw_output_nfs_commit_done", 88),
STACK_USAGE("__traceiter_nfs_setattr_enter", 16),
STACK_USAGE("__traceiter_nfs_setattr_exit", 24),
STACK_USAGE("__traceiter_nfs_writeback_page_enter", 16),
STACK_USAGE("__traceiter_nfs_writeback_page_exit", 24),
STACK_USAGE("__bpf_trace_nfs_fh_to_dentry", 0),
STACK_USAGE("__traceiter_nfs_fh_to_dentry", 40),
STACK_USAGE("perf_trace_nfs_fh_to_dentry", 80),
STACK_USAGE("trace_event_raw_event_nfs_fh_to_dentry", 96),
STACK_USAGE("trace_raw_output_nfs_fh_to_dentry", 24),
STACK_USAGE("__traceiter_nfs_writeback_inode_enter", 16),
STACK_USAGE("__traceiter_nfs_writeback_inode_exit", 24),
STACK_USAGE("__traceiter_nfs_fsync_enter", 16),
STACK_USAGE("__traceiter_nfs_fsync_exit", 24),
STACK_USAGE("__bpf_trace_nfs_xdr_event", 0),
STACK_USAGE("perf_trace_nfs_xdr_event", 96),
STACK_USAGE("trace_event_raw_event_nfs_xdr_event", 104),
STACK_USAGE("trace_raw_output_nfs_xdr_event", 72),
STACK_USAGE("__traceiter_nfs_access_enter", 16),
STACK_USAGE("__traceiter_nfs_set_cache_invalid", 24),
STACK_USAGE("__traceiter_nfs_readdir_force_readdirplus", 16),
STACK_USAGE("__traceiter_nfs_readdir_cache_fill_done", 24),
STACK_USAGE("__traceiter_nfs_readdir_uncached_done", 24),
STACK_USAGE("__traceiter_nfs_xdr_status", 24),
STACK_USAGE("__traceiter_nfs_xdr_bad_filehandle", 24),
STACK_USAGE("__bpf_trace_nfs_access_exit", 0),
STACK_USAGE("__traceiter_nfs_access_exit", 40),
STACK_USAGE("perf_trace_nfs_access_exit", 88),
STACK_USAGE("trace_event_raw_event_nfs_access_exit", 96),
STACK_USAGE("trace_raw_output_nfs_access_exit", 136),
STACK_USAGE("__bpf_trace_nfs_update_size_class", 0),
STACK_USAGE("perf_trace_nfs_update_size_class", 80),
STACK_USAGE("trace_event_raw_event_nfs_update_size_class", 80),
STACK_USAGE("trace_raw_output_nfs_update_size_class", 24),
STACK_USAGE("__traceiter_nfs_size_truncate", 24),
STACK_USAGE("__traceiter_nfs_size_wcc", 24),
STACK_USAGE("__traceiter_nfs_size_update", 24),
STACK_USAGE("__traceiter_nfs_size_grow", 24),
STACK_USAGE("__bpf_trace_nfs_inode_range_event", 0),
STACK_USAGE("perf_trace_nfs_inode_range_event", 88),
STACK_USAGE("trace_event_raw_event_nfs_inode_range_event", 88),
STACK_USAGE("trace_raw_output_nfs_inode_range_event", 24),
STACK_USAGE("__traceiter_nfs_readdir_invalidate_cache_range", 32),
STACK_USAGE("__bpf_trace_nfs_readdir_event", 0),
STACK_USAGE("perf_trace_nfs_readdir_event", 104),
STACK_USAGE("trace_event_raw_event_nfs_readdir_event", 104),
STACK_USAGE("trace_raw_output_nfs_readdir_event", 64),
STACK_USAGE("__traceiter_nfs_readdir_cache_fill", 48),
STACK_USAGE("__traceiter_nfs_readdir_uncached", 48),
STACK_USAGE("__bpf_trace_nfs_lookup_event", 0),
STACK_USAGE("perf_trace_nfs_lookup_event", 88),
STACK_USAGE("trace_event_raw_event_nfs_lookup_event", 104),
STACK_USAGE("trace_raw_output_nfs_lookup_event", 32),
STACK_USAGE("__bpf_trace_nfs_lookup_event_done", 0),
STACK_USAGE("perf_trace_nfs_lookup_event_done", 96),
STACK_USAGE("trace_event_raw_event_nfs_lookup_event_done", 112),
STACK_USAGE("trace_raw_output_nfs_lookup_event_done", 64),
STACK_USAGE("__traceiter_nfs_lookup_enter", 32),
STACK_USAGE("__traceiter_nfs_lookup_exit", 40),
STACK_USAGE("__traceiter_nfs_lookup_revalidate_enter", 32),
STACK_USAGE("__traceiter_nfs_lookup_revalidate_exit", 40),
STACK_USAGE("__traceiter_nfs_readdir_lookup", 32),
STACK_USAGE("__traceiter_nfs_readdir_lookup_revalidate_failed", 32),
STACK_USAGE("__traceiter_nfs_readdir_lookup_revalidate", 40),
STACK_USAGE("__bpf_trace_nfs_inode_event", 0),
STACK_USAGE("perf_trace_nfs_inode_event", 72),
STACK_USAGE("trace_event_raw_event_nfs_inode_event", 72),
STACK_USAGE("trace_raw_output_nfs_inode_event", 24),
STACK_USAGE("__bpf_trace_nfs_atomic_open_enter", 0),
STACK_USAGE("__traceiter_nfs_atomic_open_enter", 32),
STACK_USAGE("perf_trace_nfs_atomic_open_enter", 88),
STACK_USAGE("trace_event_raw_event_nfs_atomic_open_enter", 104),
STACK_USAGE("trace_raw_output_nfs_atomic_open_enter", 56),
STACK_USAGE("__bpf_trace_nfs_atomic_open_exit", 0),
STACK_USAGE("__traceiter_nfs_atomic_open_exit", 40),
STACK_USAGE("perf_trace_nfs_atomic_open_exit", 104),
STACK_USAGE("trace_event_raw_event_nfs_atomic_open_exit", 112),
STACK_USAGE("trace_raw_output_nfs_atomic_open_exit", 64),
STACK_USAGE("__bpf_trace_nfs_create_enter", 0),
STACK_USAGE("__traceiter_nfs_create_enter", 32),
STACK_USAGE("perf_trace_nfs_create_enter", 88),
STACK_USAGE("trace_event_raw_event_nfs_create_enter", 104),
STACK_USAGE("trace_raw_output_nfs_create_enter", 32),
STACK_USAGE("__bpf_trace_nfs_create_exit", 0),
STACK_USAGE("__traceiter_nfs_create_exit", 40),
STACK_USAGE("perf_trace_nfs_create_exit", 96),
STACK_USAGE("trace_event_raw_event_nfs_create_exit", 112),
STACK_USAGE("trace_raw_output_nfs_create_exit", 64),
STACK_USAGE("__bpf_trace_nfs_directory_event", 0),
STACK_USAGE("perf_trace_nfs_directory_event", 88),
STACK_USAGE("trace_event_raw_event_nfs_directory_event", 96),
STACK_USAGE("trace_raw_output_nfs_directory_event", 24),
STACK_USAGE("__bpf_trace_nfs_directory_event_done", 0),
STACK_USAGE("perf_trace_nfs_directory_event_done", 96),
STACK_USAGE("trace_event_raw_event_nfs_directory_event_done", 104),
STACK_USAGE("trace_raw_output_nfs_directory_event_done", 32),
STACK_USAGE("__traceiter_nfs_mknod_enter", 24),
STACK_USAGE("__traceiter_nfs_mknod_exit", 32),
STACK_USAGE("__traceiter_nfs_mkdir_enter", 24),
STACK_USAGE("__traceiter_nfs_mkdir_exit", 32),
STACK_USAGE("__traceiter_nfs_rmdir_enter", 24),
STACK_USAGE("__traceiter_nfs_rmdir_exit", 32),
STACK_USAGE("__traceiter_nfs_remove_enter", 24),
STACK_USAGE("__traceiter_nfs_remove_exit", 32),
STACK_USAGE("__traceiter_nfs_unlink_enter", 24),
STACK_USAGE("__traceiter_nfs_unlink_exit", 32),
STACK_USAGE("__traceiter_nfs_symlink_enter", 24),
STACK_USAGE("__traceiter_nfs_symlink_exit", 32),
STACK_USAGE("__bpf_trace_nfs_link_enter", 0),
STACK_USAGE("__traceiter_nfs_link_enter", 32),
STACK_USAGE("perf_trace_nfs_link_enter", 96),
STACK_USAGE("trace_event_raw_event_nfs_link_enter", 104),
STACK_USAGE("trace_raw_output_nfs_link_enter", 24),
STACK_USAGE("__bpf_trace_nfs_link_exit", 0),
STACK_USAGE("__traceiter_nfs_link_exit", 40),
STACK_USAGE("perf_trace_nfs_link_exit", 112),
STACK_USAGE("trace_event_raw_event_nfs_link_exit", 112),
STACK_USAGE("trace_raw_output_nfs_link_exit", 32),
STACK_USAGE("__bpf_trace_nfs_rename_event", 0),
STACK_USAGE("perf_trace_nfs_rename_event", 120),
STACK_USAGE("trace_event_raw_event_nfs_rename_event", 120),
STACK_USAGE("trace_raw_output_nfs_rename_event", 24),
STACK_USAGE("__bpf_trace_nfs_inode_event_done", 0),
STACK_USAGE("perf_trace_nfs_inode_event_done", 80),
STACK_USAGE("trace_event_raw_event_nfs_inode_event_done", 80),
STACK_USAGE("trace_raw_output_nfs_inode_event_done", 136),
STACK_USAGE("__bpf_trace_nfs_rename_event_done", 0),
STACK_USAGE("perf_trace_nfs_rename_event_done", 120),
STACK_USAGE("trace_event_raw_event_nfs_rename_event_done", 128),
STACK_USAGE("trace_raw_output_nfs_rename_event_done", 32),
STACK_USAGE("__traceiter_nfs_rename_enter", 40),
STACK_USAGE("__traceiter_nfs_rename_exit", 48),
STACK_USAGE("__traceiter_nfs_sillyrename_rename", 48),
STACK_USAGE("__bpf_trace_nfs_sillyrename_unlink", 0),
STACK_USAGE("__traceiter_nfs_sillyrename_unlink", 24),
STACK_USAGE("perf_trace_nfs_sillyrename_unlink", 80),
STACK_USAGE("trace_event_raw_event_nfs_sillyrename_unlink", 96),
STACK_USAGE("trace_raw_output_nfs_sillyrename_unlink", 32),
STACK_USAGE("__bpf_trace_nfs_aop_readpage", 0),
STACK_USAGE("__traceiter_nfs_aop_readpage", 24),
STACK_USAGE("perf_trace_nfs_aop_readpage", 72),
STACK_USAGE("trace_event_raw_event_nfs_aop_readpage", 88),
STACK_USAGE("trace_raw_output_nfs_aop_readpage", 24),
STACK_USAGE("__bpf_trace_nfs_aop_readpage_done", 0),
STACK_USAGE("__traceiter_nfs_aop_readpage_done", 32),
STACK_USAGE("perf_trace_nfs_aop_readpage_done", 72),
STACK_USAGE("trace_event_raw_event_nfs_aop_readpage_done", 88),
STACK_USAGE("trace_raw_output_nfs_aop_readpage_done", 24),
STACK_USAGE("nfs_pageio_cleanup_request", 24),
STACK_USAGE("__nfs_pageio_add_request", 88),
STACK_USAGE("nfs_iocounter_wait", 96),
STACK_USAGE("nfs_do_recoalesce", 48),
STACK_USAGE("nfs_pageio_add_request", 80),
STACK_USAGE("nfs_async_iocounter_wait", 32),
STACK_USAGE("nfs_pageio_resend", 48),
STACK_USAGE("nfs_pageio_complete", 40),
STACK_USAGE("nfs_pageio_cond_complete", 24),
STACK_USAGE("nfs_pageio_stop_mirroring", 0),
STACK_USAGE("nfs_init_nfspagecache", 8),
STACK_USAGE("nfs_destroy_nfspagecache", 0),
STACK_USAGE("nfs_page_group_lock_head", 24),
STACK_USAGE("nfs_page_group_lock_subrequests", 56),
STACK_USAGE("nfs_page_set_headlock", 8),
STACK_USAGE("nfs_page_clear_headlock", 0),
STACK_USAGE("nfs_page_group_lock", 24),
STACK_USAGE("nfs_page_group_unlock", 8),
STACK_USAGE("nfs_page_group_sync_on_bit", 24),
STACK_USAGE("__nfs_create_request", 48),
STACK_USAGE("nfs_pgio_current_mirror", 0),
STACK_USAGE("nfs_create_request", 32),
STACK_USAGE("nfs_create_subreq", 24),
STACK_USAGE("nfs_unlock_request", 0),
STACK_USAGE("nfs_unlock_and_release_request", 24),
STACK_USAGE("nfs_free_request", 16),
STACK_USAGE("nfs_pgheader_init", 24),
STACK_USAGE("nfs_release_request", 24),
STACK_USAGE("nfs_wait_on_request", 8),
STACK_USAGE("nfs_generic_pg_test", 8),
STACK_USAGE("nfs_pgio_header_alloc", 8),
STACK_USAGE("nfs_pgio_header_free", 8),
STACK_USAGE("nfs_pgio_prepare", 8),
STACK_USAGE("nfs_initiate_pgio", 120),
STACK_USAGE("nfs_pgio_release", 0),
STACK_USAGE("nfs_set_pgio_error", 24),
STACK_USAGE("nfs_pageio_init", 0),
STACK_USAGE("nfs_pgio_result", 16),
STACK_USAGE("nfs_generic_pgio", 88),
STACK_USAGE("nfs_generic_pg_pgios", 136),
STACK_USAGE("nfs_proc_getattr", 56),
STACK_USAGE("nfs_proc_setattr", 88),
STACK_USAGE("nfs_proc_lookup", 96),
STACK_USAGE("nfs_proc_readlink", 72),
STACK_USAGE("nfs_proc_create", 80),
STACK_USAGE("nfs_proc_mknod", 104),
STACK_USAGE("nfs_proc_remove", 104),
STACK_USAGE("nfs_proc_unlink_setup", 0),
STACK_USAGE("nfs_proc_unlink_rpc_prepare", 0),
STACK_USAGE("nfs_proc_unlink_done", 16),
STACK_USAGE("nfs_proc_rename_setup", 0),
STACK_USAGE("nfs_proc_rename_rpc_prepare", 0),
STACK_USAGE("nfs_proc_rename_done", 24),
STACK_USAGE("nfs_proc_link", 104),
STACK_USAGE("nfs_proc_symlink", 144),
STACK_USAGE("nfs_proc_mkdir", 80),
STACK_USAGE("nfs_proc_rmdir", 88),
STACK_USAGE("nfs_proc_readdir", 88),
STACK_USAGE("nfs_proc_statfs", 80),
STACK_USAGE("nfs_proc_get_root", 80),
STACK_USAGE("nfs_proc_fsinfo", 80),
STACK_USAGE("nfs_proc_pathconf", 0),
STACK_USAGE("nfs_read_done", 24),
STACK_USAGE("nfs_proc_read_setup", 0),
STACK_USAGE("nfs_proc_pgio_rpc_prepare", 0),
STACK_USAGE("nfs_write_done", 0),
STACK_USAGE("nfs_proc_write_setup", 0),
STACK_USAGE("nfs_proc_commit_rpc_prepare", 0),
STACK_USAGE("nfs_proc_commit_setup", 0),
STACK_USAGE("nfs_proc_lock", 0),
STACK_USAGE("nfs_lock_check_bounds", 0),
STACK_USAGE("nfs_have_delegation", 0),
STACK_USAGE("nfs_readpage_release", 16),
STACK_USAGE("nfs_read_completion", 32),
STACK_USAGE("nfs_initiate_read", 8),
STACK_USAGE("nfs_async_read_error", 16),
STACK_USAGE("nfs_readpage_done", 32),
STACK_USAGE("zero_user_segments", 8),
STACK_USAGE("nfs_readpage_result", 16),
STACK_USAGE("readpage_async_filler", 40),
STACK_USAGE("nfs_readpage", 200),
STACK_USAGE("nfs_readhdr_alloc", 0),
STACK_USAGE("nfs_readahead", 224),
STACK_USAGE("nfs_init_readpagecache", 8),
STACK_USAGE("nfs_destroy_readpagecache", 0),
STACK_USAGE("nfs_readhdr_free", 0),
STACK_USAGE("nfs_pageio_init_read", 0),
STACK_USAGE("PageUptodate", 0),
STACK_USAGE("nfs_pageio_complete_read", 8),
STACK_USAGE("nfs_pageio_reset_read_mds", 8),
STACK_USAGE("trace_nfs_aop_readpage_done", 0),
STACK_USAGE("wait_on_page_locked_killable", 0),
STACK_USAGE("nfs_reconfigure", 32),
STACK_USAGE("nfs_set_super", 16),
STACK_USAGE("nfs_compare_super", 32),
STACK_USAGE("rpc_cmp_addr", 16),
STACK_USAGE("nfs_get_tree_common", 48),
STACK_USAGE("nfs_kill_super", 16),
STACK_USAGE("param_set_portnr", 32),
STACK_USAGE("register_nfs_fs", 16),
STACK_USAGE("unregister_nfs_fs", 0),
STACK_USAGE("nfs_sb_active", 0),
STACK_USAGE("nfs_sb_deactive", 0),
STACK_USAGE("nfs_client_for_each_server", 48),
STACK_USAGE("nfs_statfs", 96),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("nfs_show_mount_options", 48),
STACK_USAGE("nfs_show_options", 16),
STACK_USAGE("nfs_show_devname", 48),
STACK_USAGE("nfs_show_path", 0),
STACK_USAGE("nfs_show_stats", 632),
STACK_USAGE("nfs_umount_begin", 8),
STACK_USAGE("nfs_auth_info_match", 0),
STACK_USAGE("nfs_try_get_tree", 216),
STACK_USAGE("nfs_symlink_filler", 16),
STACK_USAGE("nfs_get_link", 16),
STACK_USAGE("nfs_register_sysctl", 0),
STACK_USAGE("nfs_unregister_sysctl", 0),
STACK_USAGE("nfs_netns_client_release", 8),
STACK_USAGE("nfs_netns_client_namespace", 0),
STACK_USAGE("nfs_netns_sysfs_setup", 32),
STACK_USAGE("nfs_netns_sysfs_destroy", 16),
STACK_USAGE("nfs_netns_object_release", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("nfs_netns_object_child_ns_type", 0),
STACK_USAGE("nfs_sysfs_init", 24),
STACK_USAGE("nfs_sysfs_exit", 0),
STACK_USAGE("nfs_netns_identifier_show", 16),
STACK_USAGE("nfs_netns_identifier_store", 24),
STACK_USAGE("nfs_complete_unlink", 152),
STACK_USAGE("nfs_cancel_async_unlink", 24),
STACK_USAGE("nfs_async_rename_done", 32),
STACK_USAGE("nfs_async_rename_release", 32),
STACK_USAGE("nfs_rename_prepare", 0),
STACK_USAGE("nfs_async_rename", 184),
STACK_USAGE("nfs_complete_sillyrename", 0),
STACK_USAGE("nfs_sillyrename", 104),
STACK_USAGE("nfs_async_unlink_done", 16),
STACK_USAGE("nfs_async_unlink_release", 32),
STACK_USAGE("nfs_unlink_prepare", 0),
STACK_USAGE("nfs_reqs_to_commit", 0),
STACK_USAGE("nfs_scan_commit_list", 56),
STACK_USAGE("nfs_scan_commit", 32),
STACK_USAGE("nfs_writehdr_free", 0),
STACK_USAGE("nfs_flush_incompatible", 80),
STACK_USAGE("nfs_key_timeout_notify", 8),
STACK_USAGE("nfs_ctx_key_to_expire", 56),
STACK_USAGE("nfs_updatepage", 80),
STACK_USAGE("nfs_initiate_write", 8),
STACK_USAGE("nfs_async_write_error", 48),
STACK_USAGE("nfs_async_write_reschedule_io", 24),
STACK_USAGE("nfs_pageio_init_write", 0),
STACK_USAGE("nfs_pageio_reset_write_mds", 8),
STACK_USAGE("nfs_commit_prepare", 0),
STACK_USAGE("nfs_writeback_update_inode", 32),
STACK_USAGE("nfs_writeback_done", 32),
STACK_USAGE("nfs_writeback_result", 16),
STACK_USAGE("nfs_commit_end", 8),
STACK_USAGE("nfs_commitdata_release", 8),
STACK_USAGE("nfs_initiate_commit", 136),
STACK_USAGE("nfs_init_commit", 24),
STACK_USAGE("nfs_retry_commit", 24),
STACK_USAGE("nfs_commit_resched_write", 0),
STACK_USAGE("nfs_commit_done", 16),
STACK_USAGE("nfs_commit_release_pages", 88),
STACK_USAGE("nfs_commit_release", 8),
STACK_USAGE("nfs_generic_commit_list", 40),
STACK_USAGE("__nfs_commit_inode", 200),
STACK_USAGE("nfs_commit_inode", 0),
STACK_USAGE("nfs_write_inode", 16),
STACK_USAGE("nfs_filemap_write_and_wait_range", 0),
STACK_USAGE("nfs_wb_all", 16),
STACK_USAGE("nfs_wb_folio_cancel", 16),
STACK_USAGE("nfs_wb_page", 136),
STACK_USAGE("nfs_migrate_page", 32),
STACK_USAGE("nfs_init_writepagecache", 8),
STACK_USAGE("nfs_destroy_writepagecache", 0),
STACK_USAGE("nfs_page_find_head_request", 32),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("nfs_mapping_set_error", 24),
STACK_USAGE("nfs_end_page_writeback", 24),
STACK_USAGE("nfs_join_page_group", 48),
STACK_USAGE("nfs_lock_and_join_requests", 40),
STACK_USAGE("nfs_write_error", 16),
STACK_USAGE("nfs_do_writepage", 48),
STACK_USAGE("nfs_writepage_locked", 192),
STACK_USAGE("nfs_writepage", 16),
STACK_USAGE("nfs_writepages_callback", 16),
STACK_USAGE("nfs_io_completion_commit", 0),
STACK_USAGE("nfs_writepages", 208),
STACK_USAGE("nfs_commitdata_alloc", 8),
STACK_USAGE("nfs_page_length", 16),
STACK_USAGE("nfs_inode_remove_request", 32),
STACK_USAGE("nfs_request_add_commit_list_locked", 0),
STACK_USAGE("nfs_request_add_commit_list", 32),
STACK_USAGE("nfs_commit_free", 0),
STACK_USAGE("nfs_request_remove_commit_list", 0),
STACK_USAGE("nfs_init_cinfo", 0),
STACK_USAGE("nfs_mark_request_commit", 0),
STACK_USAGE("nfs_writehdr_alloc", 8),
STACK_USAGE("nfs_clear_page_commit", 16),
STACK_USAGE("nfs_write_need_commit", 0),
STACK_USAGE("nfs_async_write_init", 0),
STACK_USAGE("nfs_write_completion", 88),
STACK_USAGE("grace_init_net", 0),
STACK_USAGE("grace_exit_net", 8),
STACK_USAGE("init_grace", 0),
STACK_USAGE("exit_grace", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("locks_start_grace", 24),
STACK_USAGE("net_generic", 16),
STACK_USAGE("locks_end_grace", 8),
STACK_USAGE("locks_in_grace", 0),
STACK_USAGE("opens_in_grace", 8),
STACK_USAGE("nfs_stream_encode_acl", 160),
STACK_USAGE("xdr_nfsace_decode", 32),
STACK_USAGE("cmp_acl_entry", 0),
STACK_USAGE("nfsacl_decode", 104),
STACK_USAGE("nfs_stream_decode_acl", 96),
STACK_USAGE("xdr_nfsace_encode", 24),
STACK_USAGE("nfsacl_encode", 168),
STACK_USAGE("uni2char", 0),
STACK_USAGE("char2uni", 0),
STACK_USAGE("init_nls_ascii", 0),
STACK_USAGE("exit_nls_ascii", 0),
STACK_USAGE("utf8s_to_utf16s", 64),
STACK_USAGE("utf16s_to_utf8s", 40),
STACK_USAGE("__register_nls", 16),
STACK_USAGE("unregister_nls", 16),
STACK_USAGE("find_nls", 24),
STACK_USAGE("load_nls", 8),
STACK_USAGE("unload_nls", 0),
STACK_USAGE("uni2char", 0),
STACK_USAGE("char2uni", 0),
STACK_USAGE("load_nls_default", 0),
STACK_USAGE("utf8_to_utf32", 0),
STACK_USAGE("utf32_to_utf8", 0),
STACK_USAGE("uni2char", 0),
STACK_USAGE("char2uni", 0),
STACK_USAGE("init_nls_cp437", 0),
STACK_USAGE("exit_nls_cp437", 0),
STACK_USAGE("uni2char", 0),
STACK_USAGE("char2uni", 0),
STACK_USAGE("init_nls_iso8859_1", 0),
STACK_USAGE("exit_nls_iso8859_1", 0),
STACK_USAGE("uni2char", 8),
STACK_USAGE("char2uni", 32),
STACK_USAGE("init_nls_utf8", 0),
STACK_USAGE("exit_nls_utf8", 0),
STACK_USAGE("dnotify_free_mark", 0),
STACK_USAGE("dnotify_flush", 40),
STACK_USAGE("attach_dn", 0),
STACK_USAGE("fcntl_dirnotify", 96),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("dnotify_init", 0),
STACK_USAGE("dnotify_recalc_inode_mask", 0),
STACK_USAGE("dnotify_handle_event", 56),
STACK_USAGE("fanotify_free_event", 16),
STACK_USAGE("fanotify_freeing_mark", 0),
STACK_USAGE("fanotify_free_mark", 0),
STACK_USAGE("fanotify_merge", 136),
STACK_USAGE("fanotify_encode_fh", 72),
STACK_USAGE("fanotify_insert_event", 0),
STACK_USAGE("fanotify_handle_event", 168),
STACK_USAGE("fanotify_free_group_priv", 8),
STACK_USAGE("fanotify_remove_mark", 64),
STACK_USAGE("fanotify_add_mark", 72),
STACK_USAGE("__ia32_sys_fanotify_init", 0),
STACK_USAGE("__se_sys_fanotify_init", 56),
STACK_USAGE("__x64_sys_fanotify_init", 0),
STACK_USAGE("fanotify_test_fsid", 32),
STACK_USAGE("do_fanotify_mark", 128),
STACK_USAGE("fanotify_event_len", 0),
STACK_USAGE("__ia32_sys_fanotify_mark", 0),
STACK_USAGE("__x64_sys_fanotify_mark", 0),
STACK_USAGE("__ia32_compat_sys_fanotify_mark", 0),
STACK_USAGE("fanotify_user_setup", 128),
STACK_USAGE("copy_fid_info_to_user", 104),
STACK_USAGE("fanotify_poll", 16),
STACK_USAGE("fanotify_read", 256),
STACK_USAGE("fanotify_write", 0),
STACK_USAGE("fanotify_release", 32),
STACK_USAGE("fanotify_ioctl", 32),
STACK_USAGE("fanotify_find_path", 48),
STACK_USAGE("inotify_show_fdinfo", 48),
STACK_USAGE("fanotify_show_fdinfo", 48),
STACK_USAGE("show_mark_fhandle", 168),
STACK_USAGE("__fsnotify_update_child_dentry_flags", 64),
STACK_USAGE("__fsnotify_parent", 128),
STACK_USAGE("__fsnotify_inode_delete", 0),
STACK_USAGE("fsnotify_handle_inode_event", 8),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("__fsnotify_vfsmount_delete", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("fsnotify_first_mark", 8),
STACK_USAGE("fsnotify", 168),
STACK_USAGE("fsnotify_init", 0),
STACK_USAGE("fsnotify_sb_delete", 128),
STACK_USAGE("fsnotify_put_group", 24),
STACK_USAGE("fsnotify_alloc_group", 16),
STACK_USAGE("fsnotify_alloc_user_group", 16),
STACK_USAGE("fsnotify_fasync", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("fsnotify_group_stop_queueing", 16),
STACK_USAGE("fsnotify_destroy_group", 72),
STACK_USAGE("fsnotify_get_group", 0),
STACK_USAGE("inotify_freeing_mark", 0),
STACK_USAGE("idr_callback", 8),
STACK_USAGE("inotify_free_group_priv", 16),
STACK_USAGE("inotify_free_event", 0),
STACK_USAGE("inotify_free_mark", 0),
STACK_USAGE("inotify_merge", 8),
STACK_USAGE("inotify_handle_inode_event", 64),
STACK_USAGE("inotify_poll", 16),
STACK_USAGE("inotify_read", 168),
STACK_USAGE("inotify_release", 0),
STACK_USAGE("inotify_ioctl", 32),
STACK_USAGE("local_lock_release", 8),
STACK_USAGE("inotify_remove_from_idr", 40),
STACK_USAGE("inotify_ignored_and_remove_idr", 16),
STACK_USAGE("do_inotify_init", 24),
STACK_USAGE("__ia32_sys_inotify_init1", 0),
STACK_USAGE("__x64_sys_inotify_init1", 0),
STACK_USAGE("__do_sys_inotify_init", 0),
STACK_USAGE("__ia32_sys_inotify_add_watch", 0),
STACK_USAGE("__se_sys_inotify_add_watch", 120),
STACK_USAGE("__x64_sys_inotify_add_watch", 0),
STACK_USAGE("__ia32_sys_inotify_rm_watch", 0),
STACK_USAGE("__se_sys_inotify_rm_watch", 48),
STACK_USAGE("__x64_sys_inotify_rm_watch", 0),
STACK_USAGE("inotify_user_setup", 128),
STACK_USAGE("fsnotify_conn_mask", 0),
STACK_USAGE("fsnotify_recalc_mask", 8),
STACK_USAGE("fsnotify_connector_destroy_workfn", 16),
STACK_USAGE("fsnotify_put_mark", 32),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("fsnotify_prepare_user_wait", 48),
STACK_USAGE("fsnotify_finish_user_wait", 16),
STACK_USAGE("fsnotify_detach_mark", 16),
STACK_USAGE("fsnotify_free_mark", 24),
STACK_USAGE("fsnotify_destroy_mark", 24),
STACK_USAGE("fsnotify_compare_groups", 0),
STACK_USAGE("fsnotify_grab_connector", 16),
STACK_USAGE("fsnotify_add_mark_locked", 96),
STACK_USAGE("fsnotify_add_mark", 48),
STACK_USAGE("fsnotify_find_mark", 32),
STACK_USAGE("fsnotify_clear_marks_by_group", 72),
STACK_USAGE("fsnotify_destroy_marks", 32),
STACK_USAGE("fsnotify_init_mark", 16),
STACK_USAGE("fsnotify_mark_destroy_workfn", 48),
STACK_USAGE("fsnotify_wait_marks_destroyed", 0),
STACK_USAGE("fsnotify_get_mark", 0),
STACK_USAGE("fsnotify_remove_queued_event", 0),
STACK_USAGE("fsnotify_peek_first_event", 0),
STACK_USAGE("fsnotify_remove_first_event", 0),
STACK_USAGE("fsnotify_flush_notify", 32),
STACK_USAGE("fsnotify_get_cookie", 0),
STACK_USAGE("fsnotify_destroy_event", 24),
STACK_USAGE("fsnotify_insert_event", 48),
STACK_USAGE("ns_get_path_cb", 24),
STACK_USAGE("ns_get_path", 24),
STACK_USAGE("open_related_ns", 64),
STACK_USAGE("ns_ioctl", 56),
STACK_USAGE("ns_get_name", 40),
STACK_USAGE("proc_ns_file", 0),
STACK_USAGE("proc_ns_fget", 0),
STACK_USAGE("ns_match", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("nsfs_show_path", 0),
STACK_USAGE("ns_dname", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("nsfs_init_fs_context", 0),
STACK_USAGE("nsfs_init", 0),
STACK_USAGE("ns_prune_dentry", 0),
STACK_USAGE("nsfs_evict", 8),
STACK_USAGE("__ns_get_path", 40),
STACK_USAGE("build_open_how", 0),
STACK_USAGE("build_open_flags", 0),
STACK_USAGE("file_open_name", 64),
STACK_USAGE("filp_open", 80),
STACK_USAGE("file_open_root", 72),
STACK_USAGE("do_sys_openat2", 72),
STACK_USAGE("do_sys_open", 32),
STACK_USAGE("do_sys_truncate", 56),
STACK_USAGE("__ia32_sys_open", 32),
STACK_USAGE("__x64_sys_open", 32),
STACK_USAGE("__ia32_sys_openat", 32),
STACK_USAGE("__x64_sys_openat", 32),
STACK_USAGE("__ia32_sys_openat2", 0),
STACK_USAGE("__se_sys_openat2", 56),
STACK_USAGE("__x64_sys_openat2", 0),
STACK_USAGE("__ia32_compat_sys_open", 32),
STACK_USAGE("__ia32_compat_sys_openat", 32),
STACK_USAGE("__ia32_sys_creat", 32),
STACK_USAGE("__x64_sys_creat", 32),
STACK_USAGE("filp_close", 24),
STACK_USAGE("__ia32_sys_close", 0),
STACK_USAGE("__x64_sys_close", 0),
STACK_USAGE("__ia32_sys_close_range", 0),
STACK_USAGE("__x64_sys_close_range", 0),
STACK_USAGE("__do_sys_vhangup", 0),
STACK_USAGE("generic_file_open", 0),
STACK_USAGE("nonseekable_open", 0),
STACK_USAGE("stream_open", 0),
STACK_USAGE("__ia32_sys_truncate", 0),
STACK_USAGE("__x64_sys_truncate", 0),
STACK_USAGE("__ia32_compat_sys_truncate", 0),
STACK_USAGE("do_sys_ftruncate", 144),
STACK_USAGE("__sb_end_write", 8),
STACK_USAGE("sb_start_write", 16),
STACK_USAGE("__ia32_sys_ftruncate", 0),
STACK_USAGE("__x64_sys_ftruncate", 0),
STACK_USAGE("__ia32_compat_sys_ftruncate", 0),
STACK_USAGE("vfs_fallocate", 48),
STACK_USAGE("break_lease", 0),
STACK_USAGE("fsnotify_modify", 0),
STACK_USAGE("ksys_fallocate", 40),
STACK_USAGE("__ia32_sys_fallocate", 40),
STACK_USAGE("__x64_sys_fallocate", 40),
STACK_USAGE("do_faccessat", 104),
STACK_USAGE("do_truncate", 120),
STACK_USAGE("__ia32_sys_faccessat", 0),
STACK_USAGE("__x64_sys_faccessat", 0),
STACK_USAGE("__ia32_sys_faccessat2", 0),
STACK_USAGE("__x64_sys_faccessat2", 0),
STACK_USAGE("__ia32_sys_access", 0),
STACK_USAGE("__x64_sys_access", 0),
STACK_USAGE("__ia32_sys_chdir", 0),
STACK_USAGE("__se_sys_chdir", 56),
STACK_USAGE("__x64_sys_chdir", 0),
STACK_USAGE("__ia32_sys_fchdir", 0),
STACK_USAGE("__se_sys_fchdir", 24),
STACK_USAGE("__x64_sys_fchdir", 0),
STACK_USAGE("__ia32_sys_chroot", 0),
STACK_USAGE("__se_sys_chroot", 56),
STACK_USAGE("__x64_sys_chroot", 0),
STACK_USAGE("chmod_common", 144),
STACK_USAGE("vfs_fchmod", 16),
STACK_USAGE("__ia32_sys_fchmod", 24),
STACK_USAGE("__x64_sys_fchmod", 24),
STACK_USAGE("__ia32_sys_fchmodat", 72),
STACK_USAGE("__x64_sys_fchmodat", 72),
STACK_USAGE("__ia32_sys_chmod", 64),
STACK_USAGE("__x64_sys_chmod", 64),
STACK_USAGE("chown_common", 160),
STACK_USAGE("do_fchownat", 80),
STACK_USAGE("vfs_truncate", 40),
STACK_USAGE("__ia32_sys_fchownat", 0),
STACK_USAGE("__x64_sys_fchownat", 0),
STACK_USAGE("__ia32_sys_chown", 0),
STACK_USAGE("__x64_sys_chown", 0),
STACK_USAGE("__ia32_sys_lchown", 0),
STACK_USAGE("__x64_sys_lchown", 0),
STACK_USAGE("vfs_fchown", 24),
STACK_USAGE("ksys_fchown", 40),
STACK_USAGE("__ia32_sys_fchown", 0),
STACK_USAGE("__x64_sys_fchown", 0),
STACK_USAGE("do_dentry_open", 48),
STACK_USAGE("finish_open", 0),
STACK_USAGE("finish_no_open", 0),
STACK_USAGE("file_path", 0),
STACK_USAGE("vfs_open", 0),
STACK_USAGE("dentry_open", 24),
STACK_USAGE("open_with_fake_path", 32),
STACK_USAGE("ovl_copy_up_flags", 648),
STACK_USAGE("ovl_maybe_copy_up", 24),
STACK_USAGE("ovl_copy_up_with_data", 0),
STACK_USAGE("ovl_copy_up", 0),
STACK_USAGE("ovl_copy_up_data", 88),
STACK_USAGE("ovl_ccup_set", 0),
STACK_USAGE("ovl_set_attr", 104),
STACK_USAGE("ovl_ccup_get", 0),
STACK_USAGE("ovl_encode_real_fh", 56),
STACK_USAGE("ovl_set_origin", 40),
STACK_USAGE("ovl_must_copy_xattr", 16),
STACK_USAGE("ovl_create_index", 160),
STACK_USAGE("ovl_copy_xattr", 80),
STACK_USAGE("ovl_copy_up_inode", 192),
STACK_USAGE("ovl_set_redirect", 64),
STACK_USAGE("ovl_rename", 256),
STACK_USAGE("ovl_cleanup_and_whiteout", 128),
STACK_USAGE("ovl_mkdir_real", 32),
STACK_USAGE("ovl_create_real", 24),
STACK_USAGE("ovl_create_temp", 16),
STACK_USAGE("ovl_set_opaque_xerr", 16),
STACK_USAGE("ovl_set_opaque", 16),
STACK_USAGE("ovl_instantiate", 88),
STACK_USAGE("ovl_cleanup", 24),
STACK_USAGE("ovl_clear_empty", 328),
STACK_USAGE("ovl_set_upper_acl", 40),
STACK_USAGE("ovl_lookup_temp", 56),
STACK_USAGE("ovl_create_or_link", 216),
STACK_USAGE("ovl_create_object", 64),
STACK_USAGE("ovl_create", 0),
STACK_USAGE("ovl_mkdir", 0),
STACK_USAGE("ovl_mknod", 0),
STACK_USAGE("ovl_symlink", 0),
STACK_USAGE("ovl_link", 64),
STACK_USAGE("ovl_drop_nlink", 32),
STACK_USAGE("ovl_do_remove", 96),
STACK_USAGE("ovl_unlink", 0),
STACK_USAGE("ovl_rmdir", 0),
STACK_USAGE("ovl_encode_fh", 72),
STACK_USAGE("ovl_lookup_real_ancestor", 64),
STACK_USAGE("ovl_lookup_real", 144),
STACK_USAGE("ovl_get_dentry", 112),
STACK_USAGE("ovl_fh_to_dentry", 104),
STACK_USAGE("ovl_fh_to_parent", 0),
STACK_USAGE("ovl_get_name", 0),
STACK_USAGE("ovl_get_parent", 0),
STACK_USAGE("ovl_real_fdget", 32),
STACK_USAGE("ovl_open", 16),
STACK_USAGE("ovl_release", 0),
STACK_USAGE("ovl_llseek", 72),
STACK_USAGE("ovl_aio_cleanup_handler", 24),
STACK_USAGE("file_start_write", 16),
STACK_USAGE("file_end_write", 8),
STACK_USAGE("ovl_aio_rw_complete", 16),
STACK_USAGE("ovl_read_iter", 72),
STACK_USAGE("ovl_write_iter", 104),
STACK_USAGE("ovl_open_realfile", 40),
STACK_USAGE("ovl_splice_write", 144),
STACK_USAGE("ovl_fsync", 64),
STACK_USAGE("ovl_mmap", 32),
STACK_USAGE("ovl_fallocate", 80),
STACK_USAGE("ovl_fadvise", 72),
STACK_USAGE("ovl_copyfile", 128),
STACK_USAGE("ovl_copy_file_range", 0),
STACK_USAGE("ovl_remap_file_range", 64),
STACK_USAGE("ovl_flush", 56),
STACK_USAGE("ovl_aio_request_cache_init", 8),
STACK_USAGE("ovl_aio_request_cache_destroy", 0),
STACK_USAGE("ovl_change_flags", 24),
STACK_USAGE("ovl_lookup_trap_inode", 16),
STACK_USAGE("ovl_get_trap_inode", 8),
STACK_USAGE("ovl_get_inode", 128),
STACK_USAGE("ovl_getattr", 256),
STACK_USAGE("ovl_setattr", 56),
STACK_USAGE("ovl_permission", 40),
STACK_USAGE("ovl_get_link", 24),
STACK_USAGE("ovl_is_private_xattr", 0),
STACK_USAGE("ovl_xattr_set", 80),
STACK_USAGE("ovl_xattr_get", 40),
STACK_USAGE("ovl_listxattr", 48),
STACK_USAGE("ovl_get_acl", 32),
STACK_USAGE("ovl_update_time", 32),
STACK_USAGE("ovl_fiemap", 40),
STACK_USAGE("ovl_real_fileattr_set", 32),
STACK_USAGE("ovl_fileattr_set", 72),
STACK_USAGE("ovl_real_fileattr_get", 32),
STACK_USAGE("ovl_fileattr_get", 64),
STACK_USAGE("ovl_inode_init", 32),
STACK_USAGE("ovl_fill_inode", 32),
STACK_USAGE("ovl_set_nlink_upper", 48),
STACK_USAGE("ovl_set_nlink_lower", 48),
STACK_USAGE("ovl_get_nlink", 64),
STACK_USAGE("ovl_new_inode", 24),
STACK_USAGE("ovl_inode_test", 0),
STACK_USAGE("ovl_inode_set", 0),
STACK_USAGE("ovl_lookup_inode", 32),
STACK_USAGE("ovl_get_fh", 48),
STACK_USAGE("ovl_lower_positive", 48),
STACK_USAGE("ovl_decode_real_fh", 32),
STACK_USAGE("ovl_lookup_single", 48),
STACK_USAGE("ovl_check_redirect", 40),
STACK_USAGE("ovl_lookup_layer", 88),
STACK_USAGE("ovl_check_origin_fh", 64),
STACK_USAGE("ovl_verify_fh", 24),
STACK_USAGE("ovl_verify_set_fh", 56),
STACK_USAGE("ovl_index_upper", 24),
STACK_USAGE("ovl_verify_index", 80),
STACK_USAGE("ovl_get_index_name", 32),
STACK_USAGE("ovl_acceptable", 0),
STACK_USAGE("ovl_get_index_fh", 24),
STACK_USAGE("ovl_lookup_index", 80),
STACK_USAGE("ovl_path_next", 16),
STACK_USAGE("ovl_lookup", 288),
STACK_USAGE("ovl_check_fb_len", 0),
STACK_USAGE("ovl_cleanup_whiteouts", 48),
STACK_USAGE("ovl_check_d_type", 32),
STACK_USAGE("ovl_check_d_type_supported", 96),
STACK_USAGE("ovl_workdir_cleanup", 224),
STACK_USAGE("ovl_indexdir_cleanup", 200),
STACK_USAGE("ovl_cache_entry_new", 56),
STACK_USAGE("ovl_cache_free", 16),
STACK_USAGE("ovl_dir_cache_free", 24),
STACK_USAGE("ovl_cache_put", 24),
STACK_USAGE("ovl_fill_merge", 64),
STACK_USAGE("ovl_dir_read", 56),
STACK_USAGE("ovl_dir_read_merged", 152),
STACK_USAGE("ovl_cache_update_ino", 232),
STACK_USAGE("ovl_fill_plain", 8),
STACK_USAGE("ovl_fill_real", 72),
STACK_USAGE("ovl_iterate", 360),
STACK_USAGE("ovl_dir_llseek", 56),
STACK_USAGE("ovl_dir_real_file", 64),
STACK_USAGE("ovl_dir_fsync", 32),
STACK_USAGE("ovl_dir_release", 24),
STACK_USAGE("ovl_dir_open", 64),
STACK_USAGE("ovl_check_empty_dir", 56),
STACK_USAGE("ovl_posix_acl_xattr_get", 0),
STACK_USAGE("ovl_posix_acl_xattr_set", 152),
STACK_USAGE("ovl_own_xattr_get", 0),
STACK_USAGE("ovl_own_xattr_set", 0),
STACK_USAGE("ovl_other_xattr_get", 0),
STACK_USAGE("ovl_other_xattr_set", 0),
STACK_USAGE("ovl_get_upper", 176),
STACK_USAGE("ovl_create_volatile_dirty", 56),
STACK_USAGE("ovl_get_workdir", 240),
STACK_USAGE("ovl_get_indexdir", 48),
STACK_USAGE("ovl_dentry_revalidate", 56),
STACK_USAGE("ovl_dentry_weak_revalidate", 32),
STACK_USAGE("ovl_alloc_inode", 8),
STACK_USAGE("ovl_get_lowerstack", 248),
STACK_USAGE("ovl_check_layer", 56),
STACK_USAGE("ovl_check_overlapping_layers", 32),
STACK_USAGE("ovl_get_root", 104),
STACK_USAGE("ovl_free_inode", 16),
STACK_USAGE("ovl_fill_super", 168),
STACK_USAGE("ovl_destroy_inode", 8),
STACK_USAGE("ovl_mount", 0),
STACK_USAGE("ovl_free_fs", 32),
STACK_USAGE("ovl_inode_init_once", 0),
STACK_USAGE("ovl_init", 8),
STACK_USAGE("ovl_exit", 0),
STACK_USAGE("ovl_put_super", 0),
STACK_USAGE("ovl_sync_fs", 32),
STACK_USAGE("ovl_statfs", 48),
STACK_USAGE("ovl_show_options", 32),
STACK_USAGE("ovl_remount", 16),
STACK_USAGE("ovl_entry_stack_free", 24),
STACK_USAGE("ovl_dentry_release", 24),
STACK_USAGE("ovl_workdir_create", 168),
STACK_USAGE("ovl_d_real", 24),
STACK_USAGE("ovl_mount_dir_noesc", 24),
STACK_USAGE("ovl_mount_dir", 24),
STACK_USAGE("ovl_dentry_update_reval", 32),
STACK_USAGE("ovl_sync_status", 0),
STACK_USAGE("ovl_dentry_weird", 0),
STACK_USAGE("ovl_path_type", 0),
STACK_USAGE("ovl_path_upper", 0),
STACK_USAGE("ovl_path_lower", 0),
STACK_USAGE("ovl_path_lowerdata", 0),
STACK_USAGE("ovl_path_real", 0),
STACK_USAGE("ovl_dentry_upper", 0),
STACK_USAGE("ovl_want_write", 0),
STACK_USAGE("ovl_dentry_lower", 0),
STACK_USAGE("ovl_layer_lower", 0),
STACK_USAGE("ovl_dentry_lowerdata", 0),
STACK_USAGE("ovl_dentry_real", 0),
STACK_USAGE("ovl_i_dentry_upper", 0),
STACK_USAGE("ovl_inode_upper", 0),
STACK_USAGE("ovl_inode_lower", 0),
STACK_USAGE("ovl_inode_real", 0),
STACK_USAGE("ovl_inode_lowerdata", 0),
STACK_USAGE("ovl_drop_write", 0),
STACK_USAGE("ovl_inode_realdata", 0),
STACK_USAGE("ovl_dir_cache", 0),
STACK_USAGE("ovl_set_dir_cache", 0),
STACK_USAGE("ovl_dentry_set_flag", 0),
STACK_USAGE("ovl_dentry_clear_flag", 0),
STACK_USAGE("ovl_dentry_test_flag", 0),
STACK_USAGE("ovl_dentry_is_opaque", 0),
STACK_USAGE("ovl_dentry_is_whiteout", 0),
STACK_USAGE("ovl_dentry_set_opaque", 0),
STACK_USAGE("ovl_workdir", 0),
STACK_USAGE("ovl_dentry_has_upper_alias", 0),
STACK_USAGE("ovl_dentry_set_upper_alias", 0),
STACK_USAGE("ovl_has_upperdata", 0),
STACK_USAGE("ovl_set_upperdata", 0),
STACK_USAGE("ovl_dentry_needs_data_copy_up_locked", 0),
STACK_USAGE("ovl_override_creds", 0),
STACK_USAGE("ovl_dentry_needs_data_copy_up", 0),
STACK_USAGE("ovl_redirect_dir", 0),
STACK_USAGE("ovl_dentry_get_redirect", 0),
STACK_USAGE("ovl_dentry_set_redirect", 16),
STACK_USAGE("ovl_inode_update", 0),
STACK_USAGE("ovl_dir_modified", 0),
STACK_USAGE("ovl_dentry_version_get", 0),
STACK_USAGE("ovl_is_whiteout", 0),
STACK_USAGE("ovl_path_open", 24),
STACK_USAGE("ovl_already_copied_up", 0),
STACK_USAGE("ovl_can_decode_fh", 8),
STACK_USAGE("ovl_copy_up_start", 24),
STACK_USAGE("ovl_copy_up_end", 0),
STACK_USAGE("ovl_check_origin_xattr", 0),
STACK_USAGE("ovl_check_dir_xattr", 16),
STACK_USAGE("ovl_check_setxattr", 24),
STACK_USAGE("ovl_set_impure", 16),
STACK_USAGE("ovl_indexdir", 0),
STACK_USAGE("ovl_check_protattr", 88),
STACK_USAGE("ovl_set_protattr", 88),
STACK_USAGE("ovl_index_all", 0),
STACK_USAGE("ovl_inuse_trylock", 16),
STACK_USAGE("ovl_inuse_unlock", 16),
STACK_USAGE("ovl_is_inuse", 16),
STACK_USAGE("ovl_need_index", 0),
STACK_USAGE("ovl_verify_lower", 0),
STACK_USAGE("ovl_nlink_start", 24),
STACK_USAGE("ovl_alloc_entry", 8),
STACK_USAGE("ovl_nlink_end", 88),
STACK_USAGE("ovl_lock_rename_workdir", 16),
STACK_USAGE("ovl_check_metacopy_xattr", 16),
STACK_USAGE("ovl_is_metacopy_dentry", 0),
STACK_USAGE("ovl_dentry_remote", 0),
STACK_USAGE("ovl_get_redirect_xattr", 40),
STACK_USAGE("do_pipe2", 56),
STACK_USAGE("__ia32_sys_pipe2", 0),
STACK_USAGE("__x64_sys_pipe2", 0),
STACK_USAGE("__ia32_sys_pipe", 0),
STACK_USAGE("__x64_sys_pipe", 0),
STACK_USAGE("pipe_wait_readable", 72),
STACK_USAGE("pipe_wait_writable", 72),
STACK_USAGE("wait_for_partner", 96),
STACK_USAGE("fifo_open", 48),
STACK_USAGE("pipe_double_lock", 16),
STACK_USAGE("round_pipe_size", 8),
STACK_USAGE("pipe_resize_ring", 56),
STACK_USAGE("anon_pipe_buf_release", 0),
STACK_USAGE("get_pipe_info", 0),
STACK_USAGE("pipe_fcntl", 48),
STACK_USAGE("pipefs_init_fs_context", 0),
STACK_USAGE("anon_pipe_buf_try_steal", 16),
STACK_USAGE("do_proc_dopipe_max_size_conv", 8),
STACK_USAGE("proc_dopipe_max_size", 0),
STACK_USAGE("init_pipe_fs", 16),
STACK_USAGE("generic_pipe_buf_try_steal", 16),
STACK_USAGE("generic_pipe_buf_get", 0),
STACK_USAGE("generic_pipe_buf_release", 0),
STACK_USAGE("pipe_read", 184),
STACK_USAGE("pipe_write", 152),
STACK_USAGE("pipe_ioctl", 32),
STACK_USAGE("pipe_poll", 24),
STACK_USAGE("pipe_release", 24),
STACK_USAGE("pipe_fasync", 40),
STACK_USAGE("account_pipe_buffers", 0),
STACK_USAGE("too_many_pipe_buffers_soft", 0),
STACK_USAGE("too_many_pipe_buffers_hard", 0),
STACK_USAGE("pipe_is_unprivileged_user", 0),
STACK_USAGE("alloc_pipe_info", 32),
STACK_USAGE("free_pipe_info", 24),
STACK_USAGE("pipe_lock", 0),
STACK_USAGE("pipefs_dname", 0),
STACK_USAGE("create_pipe_files", 40),
STACK_USAGE("pipe_unlock", 0),
STACK_USAGE("__do_pipe_flags", 40),
STACK_USAGE("do_pipe_flags", 56),
STACK_USAGE("change_mnt_propagation", 24),
STACK_USAGE("propagate_one", 16),
STACK_USAGE("propagate_mnt", 48),
STACK_USAGE("propagate_mount_busy", 48),
STACK_USAGE("propagate_mount_unlock", 32),
STACK_USAGE("propagate_umount", 112),
STACK_USAGE("get_dominating_id", 48),
STACK_USAGE("simple_acl_create", 56),
STACK_USAGE("forget_all_cached_acls", 16),
STACK_USAGE("get_acl", 40),
STACK_USAGE("posix_acl_init", 0),
STACK_USAGE("posix_acl_alloc", 8),
STACK_USAGE("posix_acl_valid", 24),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("posix_acl_equiv_mode", 0),
STACK_USAGE("posix_acl_from_mode", 8),
STACK_USAGE("posix_acl_permission", 72),
STACK_USAGE("get_cached_acl", 24),
STACK_USAGE("posix_acl_create_masq", 0),
STACK_USAGE("__posix_acl_create", 24),
STACK_USAGE("__posix_acl_chmod", 32),
STACK_USAGE("posix_acl_release", 0),
STACK_USAGE("posix_acl_chmod", 48),
STACK_USAGE("get_cached_acl_rcu", 24),
STACK_USAGE("posix_acl_create", 48),
STACK_USAGE("posix_acl_update_mode", 40),
STACK_USAGE("posix_acl_fix_xattr_userns", 56),
STACK_USAGE("set_cached_acl", 16),
STACK_USAGE("posix_acl_fix_xattr_from_user", 0),
STACK_USAGE("posix_acl_fix_xattr_to_user", 0),
STACK_USAGE("posix_acl_from_xattr", 48),
STACK_USAGE("posix_acl_to_xattr", 40),
STACK_USAGE("posix_acl_xattr_get", 40),
STACK_USAGE("set_posix_acl", 32),
STACK_USAGE("posix_acl_xattr_set", 40),
STACK_USAGE("forget_cached_acl", 0),
STACK_USAGE("posix_acl_xattr_list", 0),
STACK_USAGE("simple_set_acl", 40),
STACK_USAGE("render_sigset_t", 24),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("proc_pid_status", 232),
STACK_USAGE("do_task_stat", 360),
STACK_USAGE("proc_tid_stat", 0),
STACK_USAGE("proc_tgid_stat", 0),
STACK_USAGE("proc_pid_statm", 64),
STACK_USAGE("get_children_pid", 32),
STACK_USAGE("children_seq_show", 8),
STACK_USAGE("children_seq_start", 0),
STACK_USAGE("children_seq_next", 24),
STACK_USAGE("children_seq_stop", 0),
STACK_USAGE("children_seq_open", 0),
STACK_USAGE("get_pid", 8),
STACK_USAGE("proc_task_name", 104),
STACK_USAGE("auxv_open", 8),
STACK_USAGE("auxv_read", 0),
STACK_USAGE("oom_adj_read", 56),
STACK_USAGE("__set_oom_adj", 64),
STACK_USAGE("oom_adj_write", 48),
STACK_USAGE("oom_score_adj_read", 64),
STACK_USAGE("oom_score_adj_write", 48),
STACK_USAGE("proc_loginuid_read", 72),
STACK_USAGE("proc_loginuid_write", 72),
STACK_USAGE("proc_sessionid_read", 64),
STACK_USAGE("proc_fault_inject_read", 64),
STACK_USAGE("proc_fault_inject_write", 64),
STACK_USAGE("proc_fail_nth_write", 32),
STACK_USAGE("proc_fail_nth_read", 64),
STACK_USAGE("mmap_read_unlock", 8),
STACK_USAGE("timens_offsets_show", 16),
STACK_USAGE("timens_offsets_write", 136),
STACK_USAGE("timens_offsets_open", 0),
STACK_USAGE("comm_write", 56),
STACK_USAGE("comm_show", 24),
STACK_USAGE("comm_open", 0),
STACK_USAGE("proc_exe_link", 32),
STACK_USAGE("proc_pid_get_link", 64),
STACK_USAGE("proc_pid_readlink", 88),
STACK_USAGE("task_dump_owner", 48),
STACK_USAGE("proc_cwd_link", 40),
STACK_USAGE("proc_pid_evict_inode", 24),
STACK_USAGE("proc_pid_make_inode", 32),
STACK_USAGE("pid_getattr", 40),
STACK_USAGE("pid_update_inode", 16),
STACK_USAGE("pid_revalidate", 24),
STACK_USAGE("pid_delete_dentry", 0),
STACK_USAGE("proc_root_link", 40),
STACK_USAGE("proc_fill_cache", 176),
STACK_USAGE("map_files_d_revalidate", 80),
STACK_USAGE("map_files_get_link", 72),
STACK_USAGE("proc_map_files_get_link", 16),
STACK_USAGE("proc_map_files_instantiate", 16),
STACK_USAGE("proc_map_files_lookup", 88),
STACK_USAGE("proc_map_files_readdir", 152),
STACK_USAGE("timerslack_ns_write", 48),
STACK_USAGE("timerslack_ns_show", 32),
STACK_USAGE("timerslack_ns_open", 0),
STACK_USAGE("proc_pident_instantiate", 32),
STACK_USAGE("proc_pident_lookup", 48),
STACK_USAGE("proc_pident_readdir", 64),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("proc_pid_attr_open", 8),
STACK_USAGE("proc_pid_attr_read", 64),
STACK_USAGE("proc_pid_attr_write", 64),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("proc_attr_dir_readdir", 0),
STACK_USAGE("proc_attr_dir_lookup", 0),
STACK_USAGE("proc_coredump_filter_read", 72),
STACK_USAGE("proc_coredump_filter_write", 48),
STACK_USAGE("do_io_accounting", 112),
STACK_USAGE("proc_tid_io_accounting", 112),
STACK_USAGE("proc_tgid_io_accounting", 0),
STACK_USAGE("proc_id_map_open", 40),
STACK_USAGE("proc_id_map_release", 16),
STACK_USAGE("proc_uid_map_open", 0),
STACK_USAGE("proc_gid_map_open", 0),
STACK_USAGE("proc_projid_map_open", 0),
STACK_USAGE("proc_setgroups_open", 32),
STACK_USAGE("proc_setgroups_release", 16),
STACK_USAGE("proc_pid_personality", 24),
STACK_USAGE("proc_tgid_base_readdir", 0),
STACK_USAGE("tgid_pidfd_to_pid", 0),
STACK_USAGE("proc_tgid_base_lookup", 0),
STACK_USAGE("proc_flush_pid", 0),
STACK_USAGE("proc_pid_instantiate", 24),
STACK_USAGE("proc_pid_lookup", 40),
STACK_USAGE("next_tgid", 32),
STACK_USAGE("proc_pid_readdir", 80),
STACK_USAGE("proc_tid_comm_permission", 32),
STACK_USAGE("proc_pid_cmdline_read", 112),
STACK_USAGE("proc_tid_base_readdir", 0),
STACK_USAGE("proc_tid_base_lookup", 0),
STACK_USAGE("proc_task_instantiate", 24),
STACK_USAGE("proc_task_lookup", 40),
STACK_USAGE("proc_task_readdir", 72),
STACK_USAGE("proc_task_getattr", 24),
STACK_USAGE("set_proc_pid_nlink", 0),
STACK_USAGE("proc_pid_wchan", 168),
STACK_USAGE("proc_pid_stack", 48),
STACK_USAGE("proc_pid_schedstat", 0),
STACK_USAGE("proc_oom_score", 16),
STACK_USAGE("proc_pid_limits", 312),
STACK_USAGE("proc_pid_syscall", 96),
STACK_USAGE("proc_setattr", 16),
STACK_USAGE("proc_pid_permission", 40),
STACK_USAGE("proc_single_show", 40),
STACK_USAGE("proc_single_open", 0),
STACK_USAGE("proc_mem_open", 24),
STACK_USAGE("mem_open", 8),
STACK_USAGE("mem_rw", 88),
STACK_USAGE("mem_read", 0),
STACK_USAGE("mem_write", 0),
STACK_USAGE("mem_lseek", 0),
STACK_USAGE("mem_release", 0),
STACK_USAGE("environ_open", 8),
STACK_USAGE("environ_read", 112),
STACK_USAGE("boot_config_proc_show", 0),
STACK_USAGE("copy_xbc_key_value_list", 64),
STACK_USAGE("proc_boot_config_init", 16),
STACK_USAGE("proc_cmdline_init", 0),
STACK_USAGE("cmdline_proc_show", 8),
STACK_USAGE("show_console_dev", 40),
STACK_USAGE("c_start", 8),
STACK_USAGE("c_next", 0),
STACK_USAGE("c_stop", 0),
STACK_USAGE("proc_consoles_init", 0),
STACK_USAGE("cpuinfo_open", 8),
STACK_USAGE("proc_cpuinfo_init", 0),
STACK_USAGE("arch_freq_prepare_all", 0),
STACK_USAGE("devinfo_start", 0),
STACK_USAGE("devinfo_next", 0),
STACK_USAGE("devinfo_stop", 0),
STACK_USAGE("proc_devices_init", 0),
STACK_USAGE("devinfo_show", 16),
STACK_USAGE("tid_fd_mode", 24),
STACK_USAGE("tid_fd_revalidate", 40),
STACK_USAGE("proc_fd_link", 24),
STACK_USAGE("proc_fd_instantiate", 40),
STACK_USAGE("proc_lookupfd_common", 48),
STACK_USAGE("seq_show", 80),
STACK_USAGE("proc_readfd_common", 88),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("proc_readfd", 0),
STACK_USAGE("proc_lookupfd", 0),
STACK_USAGE("proc_fd_permission", 16),
STACK_USAGE("proc_fdinfo_instantiate", 32),
STACK_USAGE("proc_lookupfdinfo", 0),
STACK_USAGE("proc_readfdinfo", 0),
STACK_USAGE("proc_open_fdinfo", 16),
STACK_USAGE("seq_fdinfo_open", 32),
STACK_USAGE("proc_notify_change", 32),
STACK_USAGE("proc_getattr", 16),
STACK_USAGE("__xlate_proc_name", 64),
STACK_USAGE("proc_alloc_inum", 16),
STACK_USAGE("proc_free_inum", 0),
STACK_USAGE("proc_misc_d_revalidate", 0),
STACK_USAGE("proc_misc_d_delete", 0),
STACK_USAGE("proc_lookup_de", 40),
STACK_USAGE("proc_lookup", 0),
STACK_USAGE("proc_readdir_de", 48),
STACK_USAGE("proc_readdir", 0),
STACK_USAGE("proc_net_d_revalidate", 0),
STACK_USAGE("proc_register", 56),
STACK_USAGE("pde_free", 8),
STACK_USAGE("__proc_create", 72),
STACK_USAGE("proc_symlink", 32),
STACK_USAGE("_proc_mkdir", 32),
STACK_USAGE("proc_mkdir_data", 24),
STACK_USAGE("proc_mkdir_mode", 16),
STACK_USAGE("proc_mkdir", 16),
STACK_USAGE("proc_create_mount_point", 16),
STACK_USAGE("proc_create_reg", 8),
STACK_USAGE("proc_create_data", 32),
STACK_USAGE("proc_create", 24),
STACK_USAGE("proc_seq_open", 0),
STACK_USAGE("proc_seq_release", 0),
STACK_USAGE("proc_create_seq_private", 40),
STACK_USAGE("proc_single_open", 0),
STACK_USAGE("proc_create_single_data", 32),
STACK_USAGE("proc_set_size", 0),
STACK_USAGE("proc_set_user", 0),
STACK_USAGE("pde_put", 8),
STACK_USAGE("remove_proc_entry", 88),
STACK_USAGE("remove_proc_subtree", 64),
STACK_USAGE("proc_get_parent_data", 0),
STACK_USAGE("proc_remove", 0),
STACK_USAGE("proc_simple_write", 32),
STACK_USAGE("proc_invalidate_siblings_dcache", 48),
STACK_USAGE("proc_show_options", 24),
STACK_USAGE("close_pdeo", 120),
STACK_USAGE("proc_entry_rundown", 120),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("proc_reg_llseek", 16),
STACK_USAGE("proc_reg_read_iter", 16),
STACK_USAGE("proc_reg_read", 24),
STACK_USAGE("proc_reg_write", 24),
STACK_USAGE("proc_evict_inode", 16),
STACK_USAGE("proc_reg_poll", 16),
STACK_USAGE("proc_reg_unlocked_ioctl", 16),
STACK_USAGE("proc_reg_compat_ioctl", 16),
STACK_USAGE("proc_reg_mmap", 16),
STACK_USAGE("proc_reg_get_unmapped_area", 16),
STACK_USAGE("proc_reg_open", 40),
STACK_USAGE("proc_reg_release", 24),
STACK_USAGE("proc_put_link", 0),
STACK_USAGE("proc_get_link", 0),
STACK_USAGE("proc_get_inode", 16),
STACK_USAGE("proc_alloc_inode", 0),
STACK_USAGE("proc_free_inode", 0),
STACK_USAGE("init_once", 0),
STACK_USAGE("proc_init_kmemcache", 0),
STACK_USAGE("int_seq_start", 0),
STACK_USAGE("int_seq_next", 0),
STACK_USAGE("int_seq_stop", 0),
STACK_USAGE("proc_interrupts_init", 0),
STACK_USAGE("kclist_add_private", 48),
STACK_USAGE("kcore_update_ram", 88),
STACK_USAGE("read_kcore", 584),
STACK_USAGE("open_kcore", 32),
STACK_USAGE("release_kcore", 0),
STACK_USAGE("register_mem_pfn_is_ram", 0),
STACK_USAGE("add_modules_range", 0),
STACK_USAGE("proc_kcore_init", 0),
STACK_USAGE("kclist_add", 0),
STACK_USAGE("kmsg_open", 0),
STACK_USAGE("kmsg_release", 0),
STACK_USAGE("kmsg_read", 16),
STACK_USAGE("kmsg_poll", 0),
STACK_USAGE("proc_kmsg_init", 0),
STACK_USAGE("loadavg_proc_show", 120),
STACK_USAGE("proc_loadavg_init", 0),
STACK_USAGE("proc_meminfo_init", 0),
STACK_USAGE("arch_report_meminfo", 0),
STACK_USAGE("meminfo_proc_show", 216),
STACK_USAGE("proc_ns_dir_readdir", 48),
STACK_USAGE("proc_ns_dir_lookup", 48),
STACK_USAGE("proc_ns_get_link", 48),
STACK_USAGE("proc_ns_readlink", 120),
STACK_USAGE("proc_ns_instantiate", 32),
STACK_USAGE("stable_page_flags", 24),
STACK_USAGE("kpageflags_read", 56),
STACK_USAGE("kpagecgroup_read", 56),
STACK_USAGE("proc_page_init", 0),
STACK_USAGE("kpagecount_read", 56),
STACK_USAGE("bpf_iter_fini_seq_net", 0),
STACK_USAGE("proc_create_net_data", 32),
STACK_USAGE("proc_create_net_data_write", 40),
STACK_USAGE("single_open_net", 48),
STACK_USAGE("single_release_net", 16),
STACK_USAGE("proc_create_net_single", 24),
STACK_USAGE("proc_create_net_single_write", 32),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("get_proc_task_net", 16),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("proc_tgid_net_lookup", 24),
STACK_USAGE("proc_tgid_net_getattr", 24),
STACK_USAGE("proc_tgid_net_readdir", 24),
STACK_USAGE("proc_net_ns_init", 24),
STACK_USAGE("proc_net_ns_exit", 8),
STACK_USAGE("proc_net_init", 0),
STACK_USAGE("seq_open_net", 48),
STACK_USAGE("seq_release_net", 16),
STACK_USAGE("bpf_iter_init_seq_net", 16),
STACK_USAGE("xlate_dir", 72),
STACK_USAGE("sysctl_follow_link", 80),
STACK_USAGE("sysctl_print_dir", 8),
STACK_USAGE("sysctl_err", 104),
STACK_USAGE("get_links", 120),
STACK_USAGE("__register_sysctl_table", 104),
STACK_USAGE("register_sysctl", 0),
STACK_USAGE("__register_sysctl_init", 16),
STACK_USAGE("count_subheaders", 24),
STACK_USAGE("register_leaf_sysctl_tables", 88),
STACK_USAGE("__register_sysctl_paths", 96),
STACK_USAGE("register_sysctl_paths", 0),
STACK_USAGE("register_sysctl_table", 0),
STACK_USAGE("__register_sysctl_base", 0),
STACK_USAGE("put_links", 104),
STACK_USAGE("drop_sysctl_table", 128),
STACK_USAGE("unregister_sysctl_table", 32),
STACK_USAGE("setup_sysctl_set", 0),
STACK_USAGE("retire_sysctl_set", 0),
STACK_USAGE("proc_sys_init", 0),
STACK_USAGE("process_sysctl_arg", 80),
STACK_USAGE("do_sysctl_args", 24),
STACK_USAGE("insert_header", 112),
STACK_USAGE("proc_sys_make_inode", 32),
STACK_USAGE("proc_sys_evict_inode", 16),
STACK_USAGE("register_sysctl_mount_point", 0),
STACK_USAGE("proc_sys_lookup", 120),
STACK_USAGE("proc_sys_call_handler", 88),
STACK_USAGE("proc_sys_read", 0),
STACK_USAGE("proc_sys_write", 0),
STACK_USAGE("proc_sys_open", 24),
STACK_USAGE("proc_sys_poll", 48),
STACK_USAGE("proc_sys_fill_cache", 152),
STACK_USAGE("proc_sys_poll_notify", 0),
STACK_USAGE("proc_sys_link_fill_cache", 56),
STACK_USAGE("proc_sys_readdir", 48),
STACK_USAGE("proc_sys_permission", 32),
STACK_USAGE("proc_sys_setattr", 16),
STACK_USAGE("proc_sys_getattr", 32),
STACK_USAGE("proc_sys_revalidate", 0),
STACK_USAGE("proc_sys_delete", 0),
STACK_USAGE("proc_sys_compare", 32),
STACK_USAGE("t_start", 8),
STACK_USAGE("t_next", 0),
STACK_USAGE("t_stop", 0),
STACK_USAGE("proc_tty_register_driver", 8),
STACK_USAGE("proc_tty_unregister_driver", 8),
STACK_USAGE("proc_tty_init", 0),
STACK_USAGE("show_tty_range", 32),
STACK_USAGE("show_tty_driver", 56),
STACK_USAGE("proc_parse_param", 96),
STACK_USAGE("proc_fill_super", 40),
STACK_USAGE("proc_reconfigure", 16),
STACK_USAGE("proc_get_tree", 0),
STACK_USAGE("proc_fs_context_free", 8),
STACK_USAGE("proc_init_fs_context", 24),
STACK_USAGE("proc_kill_sb", 16),
STACK_USAGE("proc_root_init", 0),
STACK_USAGE("proc_root_getattr", 16),
STACK_USAGE("proc_root_lookup", 24),
STACK_USAGE("proc_root_readdir", 16),
STACK_USAGE("proc_self_get_link", 32),
STACK_USAGE("proc_setup_self", 32),
STACK_USAGE("proc_self_init", 0),
STACK_USAGE("show_softirqs", 24),
STACK_USAGE("proc_softirqs_init", 0),
STACK_USAGE("show_stat", 296),
STACK_USAGE("stat_open", 0),
STACK_USAGE("proc_stat_init", 0),
STACK_USAGE("get_idle_time", 8),
STACK_USAGE("smaps_rollup_open", 40),
STACK_USAGE("smaps_rollup_release", 24),
STACK_USAGE("mmap_write_unlock", 8),
STACK_USAGE("clear_refs_pte_range", 64),
STACK_USAGE("clear_refs_test_walk", 0),
STACK_USAGE("clear_refs_write", 136),
STACK_USAGE("m_start", 40),
STACK_USAGE("pagemap_pte_hole", 40),
STACK_USAGE("pagemap_pmd_range", 72),
STACK_USAGE("pagemap_hugetlb_range", 56),
STACK_USAGE("pagemap_read", 128),
STACK_USAGE("m_next", 0),
STACK_USAGE("pagemap_open", 8),
STACK_USAGE("pagemap_release", 0),
STACK_USAGE("gather_stats", 32),
STACK_USAGE("gather_pte_stats", 56),
STACK_USAGE("m_stop", 16),
STACK_USAGE("gather_hugetlb_stats", 8),
STACK_USAGE("show_numa_map", 152),
STACK_USAGE("pid_numa_maps_open", 32),
STACK_USAGE("proc_map_release", 16),
STACK_USAGE("pfn_swap_entry_to_page", 0),
STACK_USAGE("show_vma_header_prefix", 48),
STACK_USAGE("show_map_vma", 32),
STACK_USAGE("task_mem", 88),
STACK_USAGE("show_map", 0),
STACK_USAGE("pid_maps_open", 32),
STACK_USAGE("smaps_page_accumulate", 0),
STACK_USAGE("smaps_account", 48),
STACK_USAGE("mmu_notifier_invalidate_range_start", 8),
STACK_USAGE("mmu_notifier_invalidate_range_end", 8),
STACK_USAGE("smaps_pte_hole", 40),
STACK_USAGE("smaps_pte_range", 80),
STACK_USAGE("smaps_hugetlb_range", 16),
STACK_USAGE("__show_smap", 24),
STACK_USAGE("task_vsize", 0),
STACK_USAGE("show_smap", 192),
STACK_USAGE("show_smaps_rollup", 224),
STACK_USAGE("task_statm", 0),
STACK_USAGE("pid_smaps_open", 32),
STACK_USAGE("proc_thread_self_get_link", 40),
STACK_USAGE("proc_setup_thread_self", 32),
STACK_USAGE("proc_thread_self_init", 0),
STACK_USAGE("uptime_proc_show", 128),
STACK_USAGE("proc_uptime_init", 0),
STACK_USAGE("name_to_int", 0),
STACK_USAGE("proc_version_init", 0),
STACK_USAGE("version_proc_show", 0),
STACK_USAGE("copy_notes_elf32", 56),
STACK_USAGE("merge_note_headers_elf32", 40),
STACK_USAGE("process_ptload_program_headers_elf64", 48),
STACK_USAGE("process_ptload_program_headers_elf32", 48),
STACK_USAGE("open_vmcore", 0),
STACK_USAGE("free_elfcorebuf", 8),
STACK_USAGE("parse_crash_elf64_headers", 96),
STACK_USAGE("parse_crash_elf32_headers", 88),
STACK_USAGE("read_from_oldmem", 80),
STACK_USAGE("parse_crash_elf_headers", 56),
STACK_USAGE("vmcore_init", 8),
STACK_USAGE("vmcore_cleanup", 32),
STACK_USAGE("elfcorehdr_alloc", 0),
STACK_USAGE("elfcorehdr_free", 0),
STACK_USAGE("elfcorehdr_read", 0),
STACK_USAGE("elfcorehdr_read_notes", 0),
STACK_USAGE("remap_oldmem_pfn_range", 0),
STACK_USAGE("copy_oldmem_page_encrypted", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("read_vmcore", 72),
STACK_USAGE("mmap_vmcore_fault", 0),
STACK_USAGE("mmap_vmcore", 136),
STACK_USAGE("register_vmcore_cb", 16),
STACK_USAGE("update_note_header_size_elf64", 72),
STACK_USAGE("copy_notes_elf64", 56),
STACK_USAGE("merge_note_headers_elf64", 48),
STACK_USAGE("unregister_vmcore_cb", 8),
STACK_USAGE("update_note_header_size_elf32", 72),
STACK_USAGE("show_vfsmnt", 64),
STACK_USAGE("show_mountinfo", 72),
STACK_USAGE("show_vfsstat", 64),
STACK_USAGE("mounts_poll", 16),
STACK_USAGE("mounts_open_common", 80),
STACK_USAGE("mounts_release", 24),
STACK_USAGE("mounts_open", 0),
STACK_USAGE("mountinfo_open", 0),
STACK_USAGE("mountstats_open", 0),
STACK_USAGE("show_sb_opts", 16),
STACK_USAGE("show_mnt_opts", 16),
STACK_USAGE("dquot_add_inodes", 48),
STACK_USAGE("dquot_add_space", 88),
STACK_USAGE("__quota_error", 136),
STACK_USAGE("__dquot_initialize", 136),
STACK_USAGE("dquot_initialize", 0),
STACK_USAGE("dquot_initialize_needed", 8),
STACK_USAGE("dquot_drop", 32),
STACK_USAGE("__dquot_alloc_space", 168),
STACK_USAGE("register_quota_format", 8),
STACK_USAGE("dquot_alloc_inode", 152),
STACK_USAGE("unregister_quota_format", 8),
STACK_USAGE("dquot_claim_space_nodirty", 56),
STACK_USAGE("dquot_reclaim_space_nodirty", 56),
STACK_USAGE("__dquot_free_space", 168),
STACK_USAGE("dquot_free_inode", 152),
STACK_USAGE("__dquot_transfer", 456),
STACK_USAGE("dquot_transfer", 88),
STACK_USAGE("dquot_commit_info", 0),
STACK_USAGE("dquot_get_next_id", 0),
STACK_USAGE("dquot_file_open", 16),
STACK_USAGE("dquot_disable", 128),
STACK_USAGE("dquot_quota_off", 0),
STACK_USAGE("dquot_load_quota_sb", 48),
STACK_USAGE("dquot_load_quota_inode", 72),
STACK_USAGE("dquot_resume", 64),
STACK_USAGE("dquot_quota_on", 32),
STACK_USAGE("dquot_quota_on_mount", 32),
STACK_USAGE("dquot_quota_enable", 40),
STACK_USAGE("dquot_quota_disable", 32),
STACK_USAGE("dquot_get_dqblk", 24),
STACK_USAGE("dquot_get_next_dqblk", 32),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("dquot_set_dqblk", 48),
STACK_USAGE("dquot_get_state", 32),
STACK_USAGE("dquot_set_dqinfo", 40),
STACK_USAGE("do_proc_dqstats", 56),
STACK_USAGE("dquot_init", 8),
STACK_USAGE("dquot_mark_dquot_dirty", 16),
STACK_USAGE("mark_info_dirty", 16),
STACK_USAGE("dquot_acquire", 32),
STACK_USAGE("dquot_commit", 32),
STACK_USAGE("dquot_release", 40),
STACK_USAGE("dquot_destroy", 0),
STACK_USAGE("dquot_scan_active", 64),
STACK_USAGE("dquot_writeback_dquots", 88),
STACK_USAGE("dquot_quota_sync", 24),
STACK_USAGE("dqcache_shrink_scan", 48),
STACK_USAGE("dqcache_shrink_count", 0),
STACK_USAGE("dqput", 16),
STACK_USAGE("dquot_alloc", 0),
STACK_USAGE("dqget", 72),
STACK_USAGE("add_dquot_ref", 64),
STACK_USAGE("from_kqid_munged", 0),
STACK_USAGE("qid_valid", 0),
STACK_USAGE("qid_eq", 0),
STACK_USAGE("qid_lt", 0),
STACK_USAGE("from_kqid", 0),
STACK_USAGE("quota_send_warning", 56),
STACK_USAGE("quota_init", 0),
STACK_USAGE("quota_getfmt", 16),
STACK_USAGE("quota_getinfo", 224),
STACK_USAGE("quota_setinfo", 80),
STACK_USAGE("quota_getquota", 240),
STACK_USAGE("quota_getnextquota", 240),
STACK_USAGE("quota_setquota", 248),
STACK_USAGE("quota_enable", 24),
STACK_USAGE("quota_disable", 24),
STACK_USAGE("compat_copy_fs_qfilestat", 16),
STACK_USAGE("quota_getxstate", 304),
STACK_USAGE("quota_getxstatev", 376),
STACK_USAGE("quota_sync_one", 0),
STACK_USAGE("copy_qcinfo_from_xfs_dqblk", 0),
STACK_USAGE("quota_setxquota", 280),
STACK_USAGE("quota_getxquota", 280),
STACK_USAGE("quota_getnextxquota", 280),
STACK_USAGE("qtype_enforce_flag", 0),
STACK_USAGE("quota_rmxquota", 24),
STACK_USAGE("do_quotactl", 56),
STACK_USAGE("quota_quotaon", 0),
STACK_USAGE("__ia32_sys_quotactl", 0),
STACK_USAGE("__se_sys_quotactl", 144),
STACK_USAGE("__x64_sys_quotactl", 0),
STACK_USAGE("__ia32_sys_quotactl_fd", 0),
STACK_USAGE("__se_sys_quotactl_fd", 80),
STACK_USAGE("__x64_sys_quotactl_fd", 0),
STACK_USAGE("quota_quotaoff", 0),
STACK_USAGE("put_free_dqblk", 32),
STACK_USAGE("remove_free_dqentry", 64),
STACK_USAGE("qtree_entry_unused", 0),
STACK_USAGE("do_insert_tree", 128),
STACK_USAGE("qtree_write_dquot", 64),
STACK_USAGE("remove_tree", 120),
STACK_USAGE("qtree_delete_dquot", 16),
STACK_USAGE("find_tree_dqentry", 64),
STACK_USAGE("qtree_read_dquot", 48),
STACK_USAGE("qtree_release_dquot", 16),
STACK_USAGE("find_next_id", 80),
STACK_USAGE("qtree_get_next_id", 32),
STACK_USAGE("get_free_dqblk", 32),
STACK_USAGE("v2_write_file_info", 72),
STACK_USAGE("v2r0_disk2memdqb", 64),
STACK_USAGE("v2r0_mem2diskdqb", 16),
STACK_USAGE("v2r0_is_id", 24),
STACK_USAGE("v2r1_disk2memdqb", 88),
STACK_USAGE("v2r1_mem2diskdqb", 16),
STACK_USAGE("v2r1_is_id", 24),
STACK_USAGE("v2_read_dquot", 16),
STACK_USAGE("v2_write_dquot", 24),
STACK_USAGE("v2_release_dquot", 16),
STACK_USAGE("v2_free_file_info", 0),
STACK_USAGE("v2_get_next_id", 24),
STACK_USAGE("init_v2_quota_format", 0),
STACK_USAGE("exit_v2_quota_format", 0),
STACK_USAGE("v2_check_quota_file", 48),
STACK_USAGE("v2_read_file_info", 104),
STACK_USAGE("ramfs_mmu_get_unmapped_area", 0),
STACK_USAGE("ramfs_mkdir", 16),
STACK_USAGE("ramfs_create", 16),
STACK_USAGE("ramfs_symlink", 40),
STACK_USAGE("ramfs_tmpfile", 16),
STACK_USAGE("ramfs_show_options", 0),
STACK_USAGE("ramfs_parse_param", 48),
STACK_USAGE("ramfs_fill_super", 16),
STACK_USAGE("ramfs_get_tree", 0),
STACK_USAGE("ramfs_free_fc", 0),
STACK_USAGE("ramfs_init_fs_context", 8),
STACK_USAGE("ramfs_kill_sb", 8),
STACK_USAGE("init_ramfs_fs", 0),
STACK_USAGE("ramfs_get_inode", 40),
STACK_USAGE("ramfs_mknod", 16),
STACK_USAGE("do_pwritev", 248),
STACK_USAGE("__ia32_sys_readv", 0),
STACK_USAGE("__x64_sys_readv", 0),
STACK_USAGE("__ia32_sys_writev", 0),
STACK_USAGE("__x64_sys_writev", 0),
STACK_USAGE("__ia32_sys_preadv", 0),
STACK_USAGE("__x64_sys_preadv", 0),
STACK_USAGE("__ia32_sys_preadv2", 0),
STACK_USAGE("__x64_sys_preadv2", 0),
STACK_USAGE("__ia32_sys_pwritev", 0),
STACK_USAGE("__x64_sys_pwritev", 0),
STACK_USAGE("__ia32_sys_pwritev2", 0),
STACK_USAGE("__x64_sys_pwritev2", 0),
STACK_USAGE("__ia32_compat_sys_preadv64", 0),
STACK_USAGE("__ia32_compat_sys_preadv", 0),
STACK_USAGE("__ia32_compat_sys_preadv64v2", 0),
STACK_USAGE("__ia32_compat_sys_preadv2", 0),
STACK_USAGE("__ia32_compat_sys_pwritev64", 0),
STACK_USAGE("__ia32_compat_sys_pwritev", 0),
STACK_USAGE("__ia32_compat_sys_pwritev64v2", 0),
STACK_USAGE("__ia32_compat_sys_pwritev2", 0),
STACK_USAGE("do_sendfile", 96),
STACK_USAGE("__ia32_sys_sendfile", 0),
STACK_USAGE("__se_sys_sendfile", 48),
STACK_USAGE("__x64_sys_sendfile", 0),
STACK_USAGE("__ia32_sys_sendfile64", 0),
STACK_USAGE("__se_sys_sendfile64", 48),
STACK_USAGE("__x64_sys_sendfile64", 0),
STACK_USAGE("__ia32_compat_sys_sendfile", 48),
STACK_USAGE("__ia32_compat_sys_sendfile64", 48),
STACK_USAGE("generic_copy_file_range", 24),
STACK_USAGE("generic_file_llseek", 0),
STACK_USAGE("vfs_copy_file_range", 80),
STACK_USAGE("__ia32_sys_copy_file_range", 0),
STACK_USAGE("__se_sys_copy_file_range", 96),
STACK_USAGE("__x64_sys_copy_file_range", 0),
STACK_USAGE("generic_write_check_limits", 0),
STACK_USAGE("generic_write_checks_count", 0),
STACK_USAGE("fixed_size_llseek", 0),
STACK_USAGE("generic_write_checks", 0),
STACK_USAGE("generic_file_rw_checks", 0),
STACK_USAGE("no_seek_end_llseek", 0),
STACK_USAGE("no_seek_end_llseek_size", 0),
STACK_USAGE("noop_llseek", 0),
STACK_USAGE("no_llseek", 0),
STACK_USAGE("default_llseek", 48),
STACK_USAGE("file_start_write", 16),
STACK_USAGE("file_end_write", 8),
STACK_USAGE("vfs_llseek", 0),
STACK_USAGE("__ia32_sys_lseek", 40),
STACK_USAGE("__x64_sys_lseek", 40),
STACK_USAGE("__ia32_compat_sys_lseek", 40),
STACK_USAGE("__ia32_sys_llseek", 0),
STACK_USAGE("__se_sys_llseek", 72),
STACK_USAGE("__x64_sys_llseek", 0),
STACK_USAGE("rw_verify_area", 0),
STACK_USAGE("warn_unsupported", 16),
STACK_USAGE("__kernel_read", 144),
STACK_USAGE("kernel_read", 32),
STACK_USAGE("vfs_read", 152),
STACK_USAGE("__kernel_write", 144),
STACK_USAGE("vfs_setpos", 0),
STACK_USAGE("kernel_write", 32),
STACK_USAGE("vfs_write", 152),
STACK_USAGE("ksys_read", 64),
STACK_USAGE("__ia32_sys_read", 0),
STACK_USAGE("__x64_sys_read", 0),
STACK_USAGE("ksys_write", 64),
STACK_USAGE("__ia32_sys_write", 0),
STACK_USAGE("__x64_sys_write", 0),
STACK_USAGE("ksys_pread64", 56),
STACK_USAGE("__ia32_sys_pread64", 56),
STACK_USAGE("__x64_sys_pread64", 56),
STACK_USAGE("ksys_pwrite64", 56),
STACK_USAGE("__ia32_sys_pwrite64", 56),
STACK_USAGE("__x64_sys_pwrite64", 56),
STACK_USAGE("do_iter_readv_writev", 72),
STACK_USAGE("do_iter_read", 40),
STACK_USAGE("vfs_iocb_iter_read", 32),
STACK_USAGE("vfs_iter_read", 0),
STACK_USAGE("do_iter_write", 40),
STACK_USAGE("vfs_iocb_iter_write", 32),
STACK_USAGE("generic_file_llseek_size", 40),
STACK_USAGE("vfs_iter_write", 0),
STACK_USAGE("do_readv", 264),
STACK_USAGE("do_writev", 264),
STACK_USAGE("do_preadv", 248),
STACK_USAGE("fillonedir", 48),
STACK_USAGE("__ia32_sys_old_readdir", 64),
STACK_USAGE("__x64_sys_old_readdir", 64),
STACK_USAGE("filldir", 48),
STACK_USAGE("__ia32_sys_getdents", 0),
STACK_USAGE("__se_sys_getdents", 88),
STACK_USAGE("__x64_sys_getdents", 0),
STACK_USAGE("filldir64", 48),
STACK_USAGE("__ia32_sys_getdents64", 0),
STACK_USAGE("__se_sys_getdents64", 96),
STACK_USAGE("__x64_sys_getdents64", 0),
STACK_USAGE("compat_fillonedir", 48),
STACK_USAGE("iterate_dir", 40),
STACK_USAGE("__ia32_compat_sys_old_readdir", 64),
STACK_USAGE("compat_filldir", 48),
STACK_USAGE("__ia32_compat_sys_getdents", 88),
STACK_USAGE("generic_remap_check_len", 0),
STACK_USAGE("vfs_dedupe_file_range_compare", 96),
STACK_USAGE("generic_remap_file_range_prep", 128),
STACK_USAGE("fsnotify_access", 0),
STACK_USAGE("fsnotify_modify", 0),
STACK_USAGE("do_clone_file_range", 48),
STACK_USAGE("vfs_clone_file_range", 64),
STACK_USAGE("vfs_dedupe_file_range_one", 72),
STACK_USAGE("vfs_dedupe_file_range", 64),
STACK_USAGE("do_restart_poll", 32),
STACK_USAGE("__ia32_sys_poll", 0),
STACK_USAGE("__se_sys_poll", 72),
STACK_USAGE("__x64_sys_poll", 0),
STACK_USAGE("__ia32_sys_ppoll", 0),
STACK_USAGE("__se_sys_ppoll", 104),
STACK_USAGE("__x64_sys_ppoll", 0),
STACK_USAGE("compat_core_sys_select", 424),
STACK_USAGE("poll_initwait", 0),
STACK_USAGE("do_compat_select", 96),
STACK_USAGE("__ia32_compat_sys_select", 0),
STACK_USAGE("__ia32_compat_sys_old_select", 32),
STACK_USAGE("do_compat_pselect", 112),
STACK_USAGE("__ia32_compat_sys_pselect6_time64", 0),
STACK_USAGE("__ia32_compat_sys_pselect6_time32", 0),
STACK_USAGE("__ia32_compat_sys_ppoll_time32", 104),
STACK_USAGE("poll_freewait", 32),
STACK_USAGE("__ia32_compat_sys_ppoll_time64", 104),
STACK_USAGE("pollwake", 48),
STACK_USAGE("__pollwait", 32),
STACK_USAGE("poll_schedule_timeout", 16),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("poll_select_set_timeout", 24),
STACK_USAGE("poll_select_finish", 80),
STACK_USAGE("set_fd_set", 24),
STACK_USAGE("do_select", 840),
STACK_USAGE("core_sys_select", 440),
STACK_USAGE("__ia32_sys_select", 0),
STACK_USAGE("__se_sys_select", 104),
STACK_USAGE("__x64_sys_select", 0),
STACK_USAGE("select_estimate_accuracy", 56),
STACK_USAGE("__ia32_sys_pselect6", 0),
STACK_USAGE("__se_sys_pselect6", 120),
STACK_USAGE("__x64_sys_pselect6", 0),
STACK_USAGE("do_sys_poll", 1000),
STACK_USAGE("seq_hlist_start_rcu", 16),
STACK_USAGE("seq_hlist_start_head_rcu", 0),
STACK_USAGE("seq_hlist_next_rcu", 8),
STACK_USAGE("seq_hlist_start_percpu", 24),
STACK_USAGE("seq_hlist_next_percpu", 16),
STACK_USAGE("seq_file_init", 0),
STACK_USAGE("seq_read", 128),
STACK_USAGE("seq_read_iter", 80),
STACK_USAGE("seq_lseek", 48),
STACK_USAGE("seq_release", 8),
STACK_USAGE("seq_escape_mem", 16),
STACK_USAGE("seq_vprintf", 8),
STACK_USAGE("seq_printf", 104),
STACK_USAGE("seq_bprintf", 8),
STACK_USAGE("mangle_path", 32),
STACK_USAGE("seq_path", 48),
STACK_USAGE("seq_file_path", 0),
STACK_USAGE("seq_path_root", 48),
STACK_USAGE("seq_dentry", 48),
STACK_USAGE("single_start", 0),
STACK_USAGE("single_next", 0),
STACK_USAGE("single_stop", 0),
STACK_USAGE("single_open", 48),
STACK_USAGE("seq_open", 24),
STACK_USAGE("single_open_size", 48),
STACK_USAGE("single_release", 16),
STACK_USAGE("seq_release_private", 16),
STACK_USAGE("__seq_open_private", 32),
STACK_USAGE("seq_open_private", 0),
STACK_USAGE("seq_putc", 0),
STACK_USAGE("seq_puts", 24),
STACK_USAGE("seq_put_decimal_ull_width", 56),
STACK_USAGE("seq_put_decimal_ull", 0),
STACK_USAGE("seq_put_hex_ll", 40),
STACK_USAGE("seq_put_decimal_ll", 48),
STACK_USAGE("seq_write", 16),
STACK_USAGE("seq_pad", 24),
STACK_USAGE("seq_hex_dump", 72),
STACK_USAGE("seq_list_start", 0),
STACK_USAGE("traverse", 48),
STACK_USAGE("seq_list_start_head", 0),
STACK_USAGE("seq_list_next", 0),
STACK_USAGE("seq_hlist_start", 0),
STACK_USAGE("seq_hlist_start_head", 0),
STACK_USAGE("seq_hlist_next", 0),
STACK_USAGE("signalfd_dequeue", 104),
STACK_USAGE("signalfd_read", 232),
STACK_USAGE("signalfd_show_fdinfo", 16),
STACK_USAGE("do_signalfd4", 48),
STACK_USAGE("__ia32_sys_signalfd4", 32),
STACK_USAGE("__x64_sys_signalfd4", 32),
STACK_USAGE("__ia32_sys_signalfd", 24),
STACK_USAGE("__x64_sys_signalfd", 24),
STACK_USAGE("__ia32_compat_sys_signalfd4", 32),
STACK_USAGE("__ia32_compat_sys_signalfd", 24),
STACK_USAGE("signalfd_cleanup", 0),
STACK_USAGE("signalfd_release", 0),
STACK_USAGE("signalfd_poll", 16),
STACK_USAGE("splice_file_to_pipe", 48),
STACK_USAGE("do_splice", 128),
STACK_USAGE("page_cache_pipe_buf_confirm", 16),
STACK_USAGE("pipe_to_user", 8),
STACK_USAGE("__ia32_sys_vmsplice", 0),
STACK_USAGE("__se_sys_vmsplice", 456),
STACK_USAGE("__x64_sys_vmsplice", 0),
STACK_USAGE("__ia32_sys_splice", 0),
STACK_USAGE("__se_sys_splice", 112),
STACK_USAGE("__x64_sys_splice", 0),
STACK_USAGE("opipe_prep", 24),
STACK_USAGE("user_page_pipe_buf_try_steal", 0),
STACK_USAGE("do_tee", 72),
STACK_USAGE("__ia32_sys_tee", 0),
STACK_USAGE("__se_sys_tee", 48),
STACK_USAGE("__x64_sys_tee", 0),
STACK_USAGE("splice_to_pipe", 48),
STACK_USAGE("add_to_pipe", 24),
STACK_USAGE("splice_grow_spd", 24),
STACK_USAGE("splice_shrink_spd", 8),
STACK_USAGE("generic_file_splice_read", 128),
STACK_USAGE("pipe_to_sendpage", 16),
STACK_USAGE("page_cache_pipe_buf_try_steal", 24),
STACK_USAGE("splice_from_pipe_next", 56),
STACK_USAGE("__splice_from_pipe", 72),
STACK_USAGE("splice_from_pipe", 80),
STACK_USAGE("iter_file_splice_write", 216),
STACK_USAGE("generic_splice_sendpage", 80),
STACK_USAGE("splice_direct_to_actor", 112),
STACK_USAGE("page_cache_pipe_buf_release", 8),
STACK_USAGE("direct_splice_actor", 0),
STACK_USAGE("do_splice_direct", 80),
STACK_USAGE("fsstack_copy_inode_size", 0),
STACK_USAGE("fsstack_copy_attr_all", 0),
STACK_USAGE("vfs_getattr", 40),
STACK_USAGE("vfs_fstat", 48),
STACK_USAGE("getname_statx_lookup_flags", 0),
STACK_USAGE("vfs_statx", 88),
STACK_USAGE("vfs_fstatat", 32),
STACK_USAGE("cp_old_stat", 64),
STACK_USAGE("__ia32_sys_stat", 176),
STACK_USAGE("__x64_sys_stat", 176),
STACK_USAGE("__ia32_sys_lstat", 176),
STACK_USAGE("__x64_sys_lstat", 176),
STACK_USAGE("__ia32_sys_fstat", 160),
STACK_USAGE("__x64_sys_fstat", 160),
STACK_USAGE("__ia32_sys_newstat", 0),
STACK_USAGE("__se_sys_newstat", 328),
STACK_USAGE("__x64_sys_newstat", 0),
STACK_USAGE("__ia32_sys_newlstat", 0),
STACK_USAGE("__se_sys_newlstat", 328),
STACK_USAGE("__x64_sys_newlstat", 0),
STACK_USAGE("__ia32_sys_newfstatat", 0),
STACK_USAGE("__se_sys_newfstatat", 336),
STACK_USAGE("__x64_sys_newfstatat", 0),
STACK_USAGE("__ia32_sys_newfstat", 0),
STACK_USAGE("__se_sys_newfstat", 312),
STACK_USAGE("__x64_sys_newfstat", 0),
STACK_USAGE("generic_fillattr", 32),
STACK_USAGE("do_readlinkat", 96),
STACK_USAGE("__ia32_sys_readlinkat", 0),
STACK_USAGE("__x64_sys_readlinkat", 0),
STACK_USAGE("__ia32_sys_readlink", 0),
STACK_USAGE("__x64_sys_readlink", 0),
STACK_USAGE("cp_statx", 296),
STACK_USAGE("do_statx", 160),
STACK_USAGE("__ia32_sys_statx", 200),
STACK_USAGE("__x64_sys_statx", 200),
STACK_USAGE("cp_compat_stat", 104),
STACK_USAGE("__ia32_compat_sys_newstat", 176),
STACK_USAGE("generic_fill_statx_attr", 0),
STACK_USAGE("__ia32_compat_sys_newlstat", 176),
STACK_USAGE("__ia32_compat_sys_newfstatat", 184),
STACK_USAGE("__ia32_compat_sys_newfstat", 160),
STACK_USAGE("__inode_add_bytes", 0),
STACK_USAGE("inode_add_bytes", 24),
STACK_USAGE("__inode_sub_bytes", 0),
STACK_USAGE("inode_sub_bytes", 24),
STACK_USAGE("inode_get_bytes", 16),
STACK_USAGE("inode_set_bytes", 0),
STACK_USAGE("vfs_getattr_nosec", 40),
STACK_USAGE("fd_statfs", 40),
STACK_USAGE("__ia32_sys_statfs", 256),
STACK_USAGE("__x64_sys_statfs", 256),
STACK_USAGE("__ia32_sys_statfs64", 256),
STACK_USAGE("__x64_sys_statfs64", 256),
STACK_USAGE("__ia32_sys_fstatfs", 256),
STACK_USAGE("__x64_sys_fstatfs", 256),
STACK_USAGE("__ia32_sys_fstatfs64", 256),
STACK_USAGE("__x64_sys_fstatfs64", 256),
STACK_USAGE("__ia32_sys_ustat", 0),
STACK_USAGE("__se_sys_ustat", 192),
STACK_USAGE("__x64_sys_ustat", 0),
STACK_USAGE("__ia32_compat_sys_statfs", 208),
STACK_USAGE("__ia32_compat_sys_fstatfs", 208),
STACK_USAGE("kcompat_sys_statfs64", 224),
STACK_USAGE("__ia32_compat_sys_statfs64", 224),
STACK_USAGE("kcompat_sys_fstatfs64", 224),
STACK_USAGE("__ia32_compat_sys_fstatfs64", 224),
STACK_USAGE("__ia32_compat_sys_ustat", 184),
STACK_USAGE("vfs_get_fsid", 144),
STACK_USAGE("vfs_statfs", 24),
STACK_USAGE("user_statfs", 72),
STACK_USAGE("get_anon_bdev", 8),
STACK_USAGE("free_anon_bdev", 0),
STACK_USAGE("set_anon_super", 8),
STACK_USAGE("kill_anon_super", 8),
STACK_USAGE("kill_litter_super", 16),
STACK_USAGE("set_anon_super_fc", 8),
STACK_USAGE("test_keyed_super", 0),
STACK_USAGE("test_single_super", 0),
STACK_USAGE("vfs_get_super", 40),
STACK_USAGE("get_tree_nodev", 32),
STACK_USAGE("get_tree_single", 32),
STACK_USAGE("super_cache_count", 32),
STACK_USAGE("get_tree_single_reconf", 0),
STACK_USAGE("get_tree_keyed", 32),
STACK_USAGE("set_bdev_super", 16),
STACK_USAGE("set_bdev_super_fc", 16),
STACK_USAGE("test_bdev_super_fc", 0),
STACK_USAGE("get_tree_bdev", 48),
STACK_USAGE("test_bdev_super", 0),
STACK_USAGE("mount_bdev", 56),
STACK_USAGE("kill_block_super", 16),
STACK_USAGE("mount_nodev", 32),
STACK_USAGE("reconfigure_single", 16),
STACK_USAGE("compare_single", 0),
STACK_USAGE("mount_single", 32),
STACK_USAGE("vfs_get_tree", 32),
STACK_USAGE("super_setup_bdi_name", 120),
STACK_USAGE("destroy_super_work", 8),
STACK_USAGE("super_setup_bdi", 0),
STACK_USAGE("lockdep_sb_freeze_release", 16),
STACK_USAGE("lockdep_sb_freeze_acquire", 16),
STACK_USAGE("freeze_super", 48),
STACK_USAGE("destroy_super_rcu", 16),
STACK_USAGE("thaw_super_locked", 16),
STACK_USAGE("destroy_unused_super", 8),
STACK_USAGE("thaw_super", 8),
STACK_USAGE("alloc_super", 32),
STACK_USAGE("__put_super", 8),
STACK_USAGE("put_super", 8),
STACK_USAGE("deactivate_locked_super", 16),
STACK_USAGE("deactivate_super", 8),
STACK_USAGE("grab_super", 24),
STACK_USAGE("trylock_super", 16),
STACK_USAGE("generic_shutdown_super", 16),
STACK_USAGE("mount_capable", 0),
STACK_USAGE("sget_fc", 48),
STACK_USAGE("sget", 72),
STACK_USAGE("super_cache_scan", 80),
STACK_USAGE("drop_super", 8),
STACK_USAGE("drop_super_exclusive", 8),
STACK_USAGE("__iterate_supers", 32),
STACK_USAGE("iterate_supers", 48),
STACK_USAGE("iterate_supers_type", 40),
STACK_USAGE("get_super", 32),
STACK_USAGE("get_active_super", 24),
STACK_USAGE("user_get_super", 40),
STACK_USAGE("reconfigure_super", 40),
STACK_USAGE("do_emergency_remount_callback", 24),
STACK_USAGE("do_emergency_remount", 8),
STACK_USAGE("emergency_remount", 8),
STACK_USAGE("do_thaw_all_callback", 16),
STACK_USAGE("do_thaw_all", 8),
STACK_USAGE("emergency_thaw_all", 8),
STACK_USAGE("__do_sys_sync", 0),
STACK_USAGE("do_sync_work", 32),
STACK_USAGE("emergency_sync", 8),
STACK_USAGE("__ia32_sys_syncfs", 0),
STACK_USAGE("__se_sys_syncfs", 40),
STACK_USAGE("__x64_sys_syncfs", 0),
STACK_USAGE("vfs_fsync_range", 32),
STACK_USAGE("vfs_fsync", 16),
STACK_USAGE("__ia32_sys_fsync", 24),
STACK_USAGE("__x64_sys_fsync", 24),
STACK_USAGE("__ia32_sys_fdatasync", 24),
STACK_USAGE("__x64_sys_fdatasync", 24),
STACK_USAGE("sync_file_range", 40),
STACK_USAGE("sync_filesystem", 8),
STACK_USAGE("ksys_sync_file_range", 40),
STACK_USAGE("__ia32_sys_sync_file_range", 40),
STACK_USAGE("__x64_sys_sync_file_range", 40),
STACK_USAGE("__ia32_sys_sync_file_range2", 40),
STACK_USAGE("__x64_sys_sync_file_range2", 40),
STACK_USAGE("sync_inodes_one_sb", 0),
STACK_USAGE("sync_fs_one_sb", 0),
STACK_USAGE("ksys_sync", 16),
STACK_USAGE("sysfs_rename_dir_ns", 32),
STACK_USAGE("sysfs_move_dir_ns", 0),
STACK_USAGE("sysfs_create_mount_point", 32),
STACK_USAGE("sysfs_remove_mount_point", 0),
STACK_USAGE("sysfs_warn_dup", 24),
STACK_USAGE("sysfs_create_dir_ns", 56),
STACK_USAGE("sysfs_remove_dir", 16),
STACK_USAGE("sysfs_kf_read", 40),
STACK_USAGE("sysfs_kf_write", 32),
STACK_USAGE("sysfs_kf_bin_write", 0),
STACK_USAGE("sysfs_kf_bin_mmap", 0),
STACK_USAGE("sysfs_kf_bin_open", 8),
STACK_USAGE("sysfs_notify", 16),
STACK_USAGE("sysfs_add_file_mode_ns", 32),
STACK_USAGE("sysfs_add_bin_file_mode_ns", 32),
STACK_USAGE("sysfs_create_file_ns", 48),
STACK_USAGE("sysfs_create_files", 72),
STACK_USAGE("sysfs_add_file_to_group", 56),
STACK_USAGE("sysfs_kf_seq_show", 40),
STACK_USAGE("sysfs_chmod_file", 104),
STACK_USAGE("sysfs_break_active_protection", 16),
STACK_USAGE("sysfs_unbreak_active_protection", 16),
STACK_USAGE("sysfs_remove_file_ns", 0),
STACK_USAGE("sysfs_remove_file_self", 16),
STACK_USAGE("sysfs_remove_files", 24),
STACK_USAGE("sysfs_remove_file_from_group", 16),
STACK_USAGE("sysfs_create_bin_file", 56),
STACK_USAGE("sysfs_remove_bin_file", 0),
STACK_USAGE("sysfs_link_change_owner", 128),
STACK_USAGE("sysfs_file_change_owner", 120),
STACK_USAGE("sysfs_change_owner", 112),
STACK_USAGE("sysfs_emit", 88),
STACK_USAGE("sysfs_emit_at", 88),
STACK_USAGE("sysfs_kf_bin_read", 0),
STACK_USAGE("internal_create_group", 96),
STACK_USAGE("sysfs_create_group", 0),
STACK_USAGE("sysfs_create_groups", 32),
STACK_USAGE("sysfs_update_groups", 40),
STACK_USAGE("sysfs_update_group", 0),
STACK_USAGE("sysfs_remove_group", 32),
STACK_USAGE("sysfs_remove_groups", 24),
STACK_USAGE("sysfs_merge_group", 64),
STACK_USAGE("sysfs_unmerge_group", 24),
STACK_USAGE("sysfs_add_link_to_group", 32),
STACK_USAGE("sysfs_remove_link_from_group", 16),
STACK_USAGE("compat_only_sysfs_link_entry_to_kobj", 48),
STACK_USAGE("sysfs_group_change_owner", 136),
STACK_USAGE("sysfs_groups_change_owner", 48),
STACK_USAGE("sysfs_get_tree", 16),
STACK_USAGE("sysfs_fs_context_free", 16),
STACK_USAGE("sysfs_init_fs_context", 24),
STACK_USAGE("sysfs_kill_sb", 16),
STACK_USAGE("sysfs_init", 16),
STACK_USAGE("sysfs_create_link_nowarn", 0),
STACK_USAGE("sysfs_delete_link", 32),
STACK_USAGE("sysfs_remove_link", 0),
STACK_USAGE("sysfs_rename_link_ns", 48),
STACK_USAGE("sysfs_do_create_link_sd", 40),
STACK_USAGE("sysfs_create_link_sd", 0),
STACK_USAGE("sysfs_create_link", 0),
STACK_USAGE("timerfd_resume_work", 0),
STACK_USAGE("timerfd_resume", 0),
STACK_USAGE("timerfd_release", 16),
STACK_USAGE("timerfd_poll", 24),
STACK_USAGE("timerfd_read", 96),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("timerfd_show", 56),
STACK_USAGE("__ia32_sys_timerfd_create", 0),
STACK_USAGE("__se_sys_timerfd_create", 32),
STACK_USAGE("__x64_sys_timerfd_create", 0),
STACK_USAGE("do_timerfd_settime", 72),
STACK_USAGE("do_timerfd_gettime", 48),
STACK_USAGE("__ia32_sys_timerfd_settime", 104),
STACK_USAGE("__x64_sys_timerfd_settime", 104),
STACK_USAGE("__ia32_sys_timerfd_gettime", 48),
STACK_USAGE("__x64_sys_timerfd_gettime", 48),
STACK_USAGE("__ia32_sys_timerfd_settime32", 104),
STACK_USAGE("__x64_sys_timerfd_settime32", 104),
STACK_USAGE("__ia32_sys_timerfd_gettime32", 48),
STACK_USAGE("__x64_sys_timerfd_gettime32", 48),
STACK_USAGE("timerfd_tmrproc", 24),
STACK_USAGE("timerfd_alarmproc", 24),
STACK_USAGE("timerfd_clock_was_set", 48),
STACK_USAGE("tracefs_parse_options", 120),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("tracefs_apply_options", 64),
STACK_USAGE("tracefs_remount", 24),
STACK_USAGE("tracefs_show_options", 16),
STACK_USAGE("default_read_file", 0),
STACK_USAGE("trace_fill_super", 24),
STACK_USAGE("trace_mount", 0),
STACK_USAGE("default_write_file", 0),
STACK_USAGE("start_creating", 32),
STACK_USAGE("failed_creating", 8),
STACK_USAGE("tracefs_create_file", 40),
STACK_USAGE("__create_dir", 24),
STACK_USAGE("tracefs_create_dir", 0),
STACK_USAGE("tracefs_create_instance_dir", 16),
STACK_USAGE("remove_one", 0),
STACK_USAGE("tracefs_remove", 8),
STACK_USAGE("tracefs_initialized", 0),
STACK_USAGE("tracefs_init", 0),
STACK_USAGE("tracefs_syscall_mkdir", 40),
STACK_USAGE("tracefs_syscall_rmdir", 48),
STACK_USAGE("userfaultfd_wake_function", 8),
STACK_USAGE("userfaultfd_read", 88),
STACK_USAGE("userfaultfd_ioctl", 216),
STACK_USAGE("userfaultfd_show_fdinfo", 32),
STACK_USAGE("init_once_userfaultfd_ctx", 8),
STACK_USAGE("__ia32_sys_userfaultfd", 0),
STACK_USAGE("__se_sys_userfaultfd", 24),
STACK_USAGE("__x64_sys_userfaultfd", 0),
STACK_USAGE("userfaultfd_init", 0),
STACK_USAGE("handle_userfault", 176),
STACK_USAGE("userfaultfd_event_wait_completion", 48),
STACK_USAGE("dup_userfaultfd", 48),
STACK_USAGE("dup_userfaultfd_complete", 144),
STACK_USAGE("mremap_userfaultfd_prep", 8),
STACK_USAGE("mremap_userfaultfd_complete", 104),
STACK_USAGE("userfaultfd_remove", 128),
STACK_USAGE("userfaultfd_unmap_prep", 48),
STACK_USAGE("userfaultfd_unmap_complete", 144),
STACK_USAGE("userfaultfd_release", 80),
STACK_USAGE("userfaultfd_poll", 16),
STACK_USAGE("userfaultfd_ctx_read", 176),
STACK_USAGE("do_utimes", 80),
STACK_USAGE("__ia32_sys_utimensat", 104),
STACK_USAGE("__x64_sys_utimensat", 104),
STACK_USAGE("vfs_utimes", 136),
STACK_USAGE("__ia32_sys_futimesat", 104),
STACK_USAGE("__x64_sys_futimesat", 104),
STACK_USAGE("__ia32_sys_utimes", 0),
STACK_USAGE("__se_sys_utimes", 136),
STACK_USAGE("__x64_sys_utimes", 0),
STACK_USAGE("__ia32_sys_utime", 0),
STACK_USAGE("__se_sys_utime", 104),
STACK_USAGE("__x64_sys_utime", 0),
STACK_USAGE("__ia32_sys_utime32", 0),
STACK_USAGE("__se_sys_utime32", 104),
STACK_USAGE("__x64_sys_utime32", 0),
STACK_USAGE("__ia32_sys_utimensat_time32", 104),
STACK_USAGE("__x64_sys_utimensat_time32", 104),
STACK_USAGE("do_compat_futimesat", 88),
STACK_USAGE("__ia32_sys_futimesat_time32", 0),
STACK_USAGE("__x64_sys_futimesat_time32", 0),
STACK_USAGE("__ia32_sys_utimes_time32", 0),
STACK_USAGE("__x64_sys_utimes_time32", 0),
STACK_USAGE("simple_xattr_set", 56),
STACK_USAGE("simple_xattr_list", 72),
STACK_USAGE("simple_xattr_list_add", 24),
STACK_USAGE("xattr_supported_namespace", 32),
STACK_USAGE("__vfs_setxattr", 40),
STACK_USAGE("__vfs_setxattr_noperm", 64),
STACK_USAGE("__vfs_setxattr_locked", 72),
STACK_USAGE("vfs_setxattr", 88),
STACK_USAGE("vfs_getxattr_alloc", 72),
STACK_USAGE("__vfs_getxattr", 24),
STACK_USAGE("vfs_getxattr", 72),
STACK_USAGE("vfs_listxattr", 32),
STACK_USAGE("__vfs_removexattr", 16),
STACK_USAGE("__vfs_removexattr_locked", 48),
STACK_USAGE("vfs_removexattr", 64),
STACK_USAGE("setxattr", 328),
STACK_USAGE("path_setxattr", 96),
STACK_USAGE("__ia32_sys_setxattr", 0),
STACK_USAGE("__x64_sys_setxattr", 0),
STACK_USAGE("__ia32_sys_lsetxattr", 0),
STACK_USAGE("__x64_sys_lsetxattr", 0),
STACK_USAGE("__ia32_sys_fsetxattr", 0),
STACK_USAGE("__se_sys_fsetxattr", 64),
STACK_USAGE("__x64_sys_fsetxattr", 0),
STACK_USAGE("getxattr", 328),
STACK_USAGE("__ia32_sys_getxattr", 80),
STACK_USAGE("__x64_sys_getxattr", 80),
STACK_USAGE("__ia32_sys_lgetxattr", 80),
STACK_USAGE("__x64_sys_lgetxattr", 80),
STACK_USAGE("__ia32_sys_fgetxattr", 40),
STACK_USAGE("__x64_sys_fgetxattr", 40),
STACK_USAGE("listxattr", 40),
STACK_USAGE("__ia32_sys_listxattr", 72),
STACK_USAGE("__x64_sys_listxattr", 72),
STACK_USAGE("__ia32_sys_llistxattr", 72),
STACK_USAGE("__x64_sys_llistxattr", 72),
STACK_USAGE("__ia32_sys_flistxattr", 32),
STACK_USAGE("__x64_sys_flistxattr", 32),
STACK_USAGE("path_removexattr", 360),
STACK_USAGE("__ia32_sys_removexattr", 0),
STACK_USAGE("__x64_sys_removexattr", 0),
STACK_USAGE("__ia32_sys_lremovexattr", 0),
STACK_USAGE("__x64_sys_lremovexattr", 0),
STACK_USAGE("__ia32_sys_fremovexattr", 0),
STACK_USAGE("__se_sys_fremovexattr", 328),
STACK_USAGE("__x64_sys_fremovexattr", 0),
STACK_USAGE("xattr_permission", 40),
STACK_USAGE("generic_listxattr", 56),
STACK_USAGE("xattr_full_name", 8),
STACK_USAGE("simple_xattr_alloc", 24),
STACK_USAGE("simple_xattr_get", 48),
STACK_USAGE("lpj_setup", 0),
STACK_USAGE("calibrate_delay_converge", 56),
STACK_USAGE("calibrate_delay_is_known", 0),
STACK_USAGE("calibration_delay_done", 0),
STACK_USAGE("calibrate_delay", 184),
STACK_USAGE("match_dev_by_label", 0),
STACK_USAGE("create_dev", 8),
STACK_USAGE("name_to_dev_t", 104),
STACK_USAGE("root_dev_setup", 0),
STACK_USAGE("rootwait_setup", 0),
STACK_USAGE("root_data_setup", 0),
STACK_USAGE("fs_names_setup", 0),
STACK_USAGE("root_delay_setup", 0),
STACK_USAGE("split_fs_names", 8),
STACK_USAGE("do_mount_root", 48),
STACK_USAGE("load_ramdisk", 0),
STACK_USAGE("mount_block_root", 120),
STACK_USAGE("readonly", 0),
STACK_USAGE("mount_nfs_root", 56),
STACK_USAGE("fs_is_nodev", 8),
STACK_USAGE("readwrite", 0),
STACK_USAGE("mount_nodev_root", 32),
STACK_USAGE("mount_root", 0),
STACK_USAGE("prepare_namespace", 8),
STACK_USAGE("rootfs_init_fs_context", 0),
STACK_USAGE("init_rootfs", 0),
STACK_USAGE("match_dev_by_uuid", 0),
STACK_USAGE("initrd_load", 0),
STACK_USAGE("create_dev", 8),
STACK_USAGE("no_initrd", 0),
STACK_USAGE("early_initrdmem", 32),
STACK_USAGE("early_initrd", 0),
STACK_USAGE("init_linuxrc", 0),
STACK_USAGE("handle_initrd", 8),
STACK_USAGE("create_dev", 16),
STACK_USAGE("rd_load_image", 56),
STACK_USAGE("prompt_ramdisk", 0),
STACK_USAGE("rd_load_disk", 8),
STACK_USAGE("compr_fill", 8),
STACK_USAGE("compr_flush", 8),
STACK_USAGE("ramdisk_start_setup", 0),
STACK_USAGE("error", 0),
STACK_USAGE("crd_load", 0),
STACK_USAGE("identify_ramdisk_image", 72),
STACK_USAGE("free_hash", 16),
STACK_USAGE("dir_add", 24),
STACK_USAGE("dir_utime", 88),
STACK_USAGE("parse_header", 152),
STACK_USAGE("xwrite", 40),
STACK_USAGE("do_start", 0),
STACK_USAGE("do_collect", 40),
STACK_USAGE("do_header", 0),
STACK_USAGE("do_skip", 0),
STACK_USAGE("do_reset", 0),
STACK_USAGE("clean_path", 168),
STACK_USAGE("maybe_link", 16),
STACK_USAGE("do_name", 56),
STACK_USAGE("do_copy", 56),
STACK_USAGE("do_symlink", 56),
STACK_USAGE("flush_buffer", 24),
STACK_USAGE("error", 0),
STACK_USAGE("unpack_to_rootfs", 56),
STACK_USAGE("panic_show_mem", 104),
STACK_USAGE("retain_initrd_param", 0),
STACK_USAGE("initramfs_async_setup", 0),
STACK_USAGE("reserve_initrd_mem", 16),
STACK_USAGE("free_initrd_mem", 0),
STACK_USAGE("kexec_free_initrd", 16),
STACK_USAGE("populate_initrd_image", 24),
STACK_USAGE("do_populate_rootfs", 0),
STACK_USAGE("wait_for_initramfs", 0),
STACK_USAGE("populate_rootfs", 0),
STACK_USAGE("find_link", 56),
STACK_USAGE("__bpf_trace_initcall_level", 0),
STACK_USAGE("__traceiter_initcall_level", 16),
STACK_USAGE("perf_trace_initcall_level", 80),
STACK_USAGE("trace_event_raw_event_initcall_level", 88),
STACK_USAGE("trace_initcall_level", 0),
STACK_USAGE("trace_raw_output_initcall_level", 24),
STACK_USAGE("initcall_blacklist", 40),
STACK_USAGE("trace_initcall_start_cb", 8),
STACK_USAGE("trace_initcall_finish_cb", 24),
STACK_USAGE("initcall_debug_enable", 8),
STACK_USAGE("do_one_initcall", 360),
STACK_USAGE("ignore_unknown_bootoption", 0),
STACK_USAGE("do_initcall_level", 32),
STACK_USAGE("do_initcalls", 16),
STACK_USAGE("do_basic_setup", 0),
STACK_USAGE("do_pre_smp_initcalls", 24),
STACK_USAGE("run_init_process", 16),
STACK_USAGE("set_debug_rodata", 8),
STACK_USAGE("free_initmem", 0),
STACK_USAGE("kernel_init", 0),
STACK_USAGE("console_on_rootfs", 8),
STACK_USAGE("kernel_init_freeable", 64),
STACK_USAGE("set_reset_devices", 0),
STACK_USAGE("obsolete_checksetup", 48),
STACK_USAGE("debug_kernel", 0),
STACK_USAGE("quiet_kernel", 0),
STACK_USAGE("loglevel", 24),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("get_boot_config_from_initrd", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("__bpf_trace_initcall_start", 0),
STACK_USAGE("__traceiter_initcall_start", 16),
STACK_USAGE("perf_trace_initcall_start", 56),
STACK_USAGE("trace_event_raw_event_initcall_start", 72),
STACK_USAGE("trace_raw_output_initcall_start", 24),
STACK_USAGE("xbc_snprint_cmdline", 64),
STACK_USAGE("xbc_make_cmdline", 32),
STACK_USAGE("bootconfig_params", 0),
STACK_USAGE("warn_bootconfig", 0),
STACK_USAGE("setup_boot_config", 40),
STACK_USAGE("__bpf_trace_initcall_finish", 0),
STACK_USAGE("__traceiter_initcall_finish", 24),
STACK_USAGE("perf_trace_initcall_finish", 64),
STACK_USAGE("trace_event_raw_event_initcall_finish", 80),
STACK_USAGE("trace_raw_output_initcall_finish", 24),
STACK_USAGE("repair_env_string", 16),
STACK_USAGE("set_init_arg", 8),
STACK_USAGE("unknown_bootoption", 40),
STACK_USAGE("init_setup", 0),
STACK_USAGE("rdinit_setup", 0),
STACK_USAGE("setup_command_line", 40),
STACK_USAGE("rest_init", 8),
STACK_USAGE("rcu_read_unlock", 0),
STACK_USAGE("do_early_param", 32),
STACK_USAGE("parse_early_options", 0),
STACK_USAGE("parse_early_param", 0),
STACK_USAGE("arch_post_acpi_subsys_init", 0),
STACK_USAGE("smp_setup_processor_id", 0),
STACK_USAGE("thread_stack_cache_init", 0),
STACK_USAGE("mem_encrypt_init", 0),
STACK_USAGE("poking_init", 0),
STACK_USAGE("pgtable_cache_init", 0),
STACK_USAGE("trap_init", 0),
STACK_USAGE("report_meminit", 0),
STACK_USAGE("mm_init", 0),
STACK_USAGE("early_randomize_kstack_offset", 24),
STACK_USAGE("arch_call_rest_init", 0),
STACK_USAGE("print_unknown_bootoptions", 40),
STACK_USAGE("start_kernel", 32),
STACK_USAGE("get_compat_ipc64_perm", 56),
STACK_USAGE("get_compat_ipc_perm", 32),
STACK_USAGE("to_compat_ipc64_perm", 0),
STACK_USAGE("to_compat_ipc_perm", 0),
STACK_USAGE("ipc_sysctl_init", 0),
STACK_USAGE("ipc_mni_extend", 0),
STACK_USAGE("proc_ipc_dointvec_minmax", 72),
STACK_USAGE("proc_ipc_dointvec_minmax_orphans", 96),
STACK_USAGE("proc_ipc_doulongvec_minmax", 72),
STACK_USAGE("proc_ipc_auto_msgmni", 112),
STACK_USAGE("proc_ipc_sem_dointvec", 112),
STACK_USAGE("mq_register_sysctl_table", 0),
STACK_USAGE("proc_mq_dointvec", 72),
STACK_USAGE("proc_mq_dointvec_minmax", 72),
STACK_USAGE("do_mq_timedsend", 168),
STACK_USAGE("do_mq_timedreceive", 144),
STACK_USAGE("__ia32_sys_mq_timedsend", 64),
STACK_USAGE("__x64_sys_mq_timedsend", 64),
STACK_USAGE("__ia32_sys_mq_timedreceive", 64),
STACK_USAGE("__x64_sys_mq_timedreceive", 64),
STACK_USAGE("do_mq_notify", 88),
STACK_USAGE("__ia32_sys_mq_notify", 88),
STACK_USAGE("__x64_sys_mq_notify", 88),
STACK_USAGE("do_mq_getsetattr", 56),
STACK_USAGE("__ia32_sys_mq_getsetattr", 168),
STACK_USAGE("__x64_sys_mq_getsetattr", 168),
STACK_USAGE("__ia32_compat_sys_mq_open", 128),
STACK_USAGE("__ia32_compat_sys_mq_notify", 88),
STACK_USAGE("__ia32_compat_sys_mq_getsetattr", 192),
STACK_USAGE("__ia32_sys_mq_timedsend_time32", 64),
STACK_USAGE("__x64_sys_mq_timedsend_time32", 64),
STACK_USAGE("__ia32_sys_mq_timedreceive_time32", 64),
STACK_USAGE("__x64_sys_mq_timedreceive_time32", 64),
STACK_USAGE("mq_init_ns", 24),
STACK_USAGE("mq_clear_sbinfo", 0),
STACK_USAGE("mq_put_mnt", 0),
STACK_USAGE("init_mqueue_fs", 8),
STACK_USAGE("msg_insert", 56),
STACK_USAGE("msg_tree_erase", 16),
STACK_USAGE("msg_get", 24),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("mqueue_get_inode", 40),
STACK_USAGE("mqueue_fill_super", 16),
STACK_USAGE("mqueue_get_tree", 0),
STACK_USAGE("mqueue_fs_context_free", 8),
STACK_USAGE("mqueue_init_fs_context", 24),
STACK_USAGE("init_once", 0),
STACK_USAGE("mqueue_alloc_inode", 0),
STACK_USAGE("mqueue_free_inode", 0),
STACK_USAGE("mqueue_evict_inode", 72),
STACK_USAGE("mqueue_create_attr", 48),
STACK_USAGE("mqueue_create", 0),
STACK_USAGE("mqueue_unlink", 24),
STACK_USAGE("mqueue_read_file", 184),
STACK_USAGE("mqueue_flush_file", 16),
STACK_USAGE("mqueue_poll_file", 24),
STACK_USAGE("wq_sleep", 48),
STACK_USAGE("remove_notification", 8),
STACK_USAGE("do_mq_open", 96),
STACK_USAGE("__ia32_sys_mq_open", 104),
STACK_USAGE("__x64_sys_mq_open", 104),
STACK_USAGE("__ia32_sys_mq_unlink", 0),
STACK_USAGE("__se_sys_mq_unlink", 40),
STACK_USAGE("__x64_sys_mq_unlink", 0),
STACK_USAGE("do_msg_fill", 32),
STACK_USAGE("do_msgrcv", 192),
STACK_USAGE("ksys_msgrcv", 0),
STACK_USAGE("__ia32_sys_msgrcv", 0),
STACK_USAGE("__x64_sys_msgrcv", 0),
STACK_USAGE("compat_do_msg_fill", 32),
STACK_USAGE("msg_rcu_free", 8),
STACK_USAGE("compat_ksys_msgrcv", 0),
STACK_USAGE("__ia32_compat_sys_msgrcv", 0),
STACK_USAGE("msg_init_ns", 0),
STACK_USAGE("msg_exit_ns", 8),
STACK_USAGE("sysvipc_msg_proc_show", 96),
STACK_USAGE("msg_init", 0),
STACK_USAGE("newque", 32),
STACK_USAGE("ss_add", 0),
STACK_USAGE("ss_wakeup", 48),
STACK_USAGE("expunge_all", 48),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("freeque", 80),
STACK_USAGE("ksys_msgget", 24),
STACK_USAGE("__ia32_sys_msgget", 24),
STACK_USAGE("__x64_sys_msgget", 24),
STACK_USAGE("msgctl_down", 80),
STACK_USAGE("msgctl_stat", 32),
STACK_USAGE("__ia32_sys_msgctl", 0),
STACK_USAGE("__se_sys_msgctl", 168),
STACK_USAGE("__x64_sys_msgctl", 0),
STACK_USAGE("rcu_read_unlock", 0),
STACK_USAGE("compat_ksys_msgctl", 264),
STACK_USAGE("__ia32_compat_sys_msgctl", 0),
STACK_USAGE("compat_ksys_old_msgctl", 0),
STACK_USAGE("__ia32_compat_sys_old_msgctl", 0),
STACK_USAGE("do_msgsnd", 120),
STACK_USAGE("ksys_msgsnd", 32),
STACK_USAGE("__ia32_sys_msgsnd", 32),
STACK_USAGE("__x64_sys_msgsnd", 32),
STACK_USAGE("compat_ksys_msgsnd", 32),
STACK_USAGE("__ia32_compat_sys_msgsnd", 32),
STACK_USAGE("copy_msg", 0),
STACK_USAGE("store_msg", 48),
STACK_USAGE("free_msg", 16),
STACK_USAGE("load_msg", 64),
STACK_USAGE("free_ipc", 24),
STACK_USAGE("put_ipc_ns", 8),
STACK_USAGE("ipcns_get", 16),
STACK_USAGE("ipcns_put", 8),
STACK_USAGE("ipcns_install", 32),
STACK_USAGE("ipcns_owner", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("copy_ipcs", 40),
STACK_USAGE("free_ipcs", 64),
STACK_USAGE("do_smart_update", 48),
STACK_USAGE("count_semcnt", 56),
STACK_USAGE("freeary", 112),
STACK_USAGE("semctl_stat", 40),
STACK_USAGE("semctl_info", 88),
STACK_USAGE("semctl_setval", 72),
STACK_USAGE("semctl_main", 632),
STACK_USAGE("semctl_down", 56),
STACK_USAGE("__ia32_sys_semctl", 0),
STACK_USAGE("__se_sys_semctl", 144),
STACK_USAGE("__x64_sys_semctl", 0),
STACK_USAGE("compat_ksys_semctl", 216),
STACK_USAGE("__ia32_compat_sys_semctl", 0),
STACK_USAGE("compat_ksys_old_semctl", 0),
STACK_USAGE("__ia32_compat_sys_old_semctl", 0),
STACK_USAGE("ipc_update_pid", 24),
STACK_USAGE("lookup_undo", 0),
STACK_USAGE("__do_semtimedop", 216),
STACK_USAGE("do_semtimedop", 456),
STACK_USAGE("ksys_semtimedop", 48),
STACK_USAGE("__ia32_sys_semtimedop", 48),
STACK_USAGE("__x64_sys_semtimedop", 48),
STACK_USAGE("compat_ksys_semtimedop", 48),
STACK_USAGE("__ia32_sys_semtimedop_time32", 48),
STACK_USAGE("__x64_sys_semtimedop_time32", 48),
STACK_USAGE("__ia32_sys_semop", 0),
STACK_USAGE("__x64_sys_semop", 0),
STACK_USAGE("copy_semundo", 32),
STACK_USAGE("exit_sem", 104),
STACK_USAGE("sysvipc_sem_proc_show", 80),
STACK_USAGE("sem_init_ns", 0),
STACK_USAGE("sem_exit_ns", 8),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("sem_init", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("merge_queues", 0),
STACK_USAGE("sem_rcu_free", 8),
STACK_USAGE("sem_lock", 48),
STACK_USAGE("sem_unlock", 0),
STACK_USAGE("sem_lock_and_putref", 24),
STACK_USAGE("newary", 48),
STACK_USAGE("sem_more_checks", 0),
STACK_USAGE("ksys_semget", 24),
STACK_USAGE("__ia32_sys_semget", 24),
STACK_USAGE("__x64_sys_semget", 24),
STACK_USAGE("perform_atomic_semop_slow", 56),
STACK_USAGE("perform_atomic_semop", 72),
STACK_USAGE("rcu_read_unlock", 0),
STACK_USAGE("wake_const_ops", 64),
STACK_USAGE("do_smart_wakeup_zero", 48),
STACK_USAGE("update_queue", 96),
STACK_USAGE("mmap_write_unlock", 8),
STACK_USAGE("shmctl_shm_info", 80),
STACK_USAGE("shmctl_stat", 32),
STACK_USAGE("shm_init_ns", 0),
STACK_USAGE("shmctl_do_lock", 40),
STACK_USAGE("do_shm_rmid", 8),
STACK_USAGE("get_ipc_ns", 8),
STACK_USAGE("__ia32_sys_shmctl", 0),
STACK_USAGE("__se_sys_shmctl", 160),
STACK_USAGE("__x64_sys_shmctl", 0),
STACK_USAGE("shm_exit_ns", 8),
STACK_USAGE("compat_ksys_shmctl", 272),
STACK_USAGE("__ia32_compat_sys_shmctl", 0),
STACK_USAGE("ipc_ns_init", 0),
STACK_USAGE("compat_ksys_old_shmctl", 0),
STACK_USAGE("__ia32_compat_sys_old_shmctl", 0),
STACK_USAGE("do_shmat", 128),
STACK_USAGE("shm_init", 0),
STACK_USAGE("__ia32_sys_shmat", 16),
STACK_USAGE("__x64_sys_shmat", 16),
STACK_USAGE("__ia32_compat_sys_shmat", 16),
STACK_USAGE("ksys_shmdt", 56),
STACK_USAGE("__ia32_sys_shmdt", 0),
STACK_USAGE("__x64_sys_shmdt", 0),
STACK_USAGE("sysvipc_shm_proc_show", 112),
STACK_USAGE("shm_lock", 16),
STACK_USAGE("ipc_unlock", 0),
STACK_USAGE("shm_rcu_free", 8),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("__shm_open", 32),
STACK_USAGE("shm_open", 0),
STACK_USAGE("shm_destroy", 32),
STACK_USAGE("shm_close", 40),
STACK_USAGE("shm_try_destroy_orphaned", 16),
STACK_USAGE("shm_destroy_orphaned", 16),
STACK_USAGE("exit_shm", 48),
STACK_USAGE("shm_fault", 0),
STACK_USAGE("shm_may_split", 0),
STACK_USAGE("shm_pagesize", 0),
STACK_USAGE("shm_set_policy", 0),
STACK_USAGE("shm_get_policy", 0),
STACK_USAGE("shm_mmap", 24),
STACK_USAGE("shm_release", 16),
STACK_USAGE("shm_fsync", 0),
STACK_USAGE("shm_fallocate", 0),
STACK_USAGE("shm_get_unmapped_area", 0),
STACK_USAGE("is_file_shm_hugepages", 0),
STACK_USAGE("newseg", 80),
STACK_USAGE("rcu_read_unlock", 0),
STACK_USAGE("shm_more_checks", 0),
STACK_USAGE("ksys_shmget", 24),
STACK_USAGE("mmap_write_lock_killable", 16),
STACK_USAGE("__ia32_sys_shmget", 24),
STACK_USAGE("__x64_sys_shmget", 24),
STACK_USAGE("get_pid", 8),
STACK_USAGE("shmctl_down", 48),
STACK_USAGE("compat_ksys_ipc", 48),
STACK_USAGE("__ia32_compat_sys_ipc", 0),
STACK_USAGE("ipc_init_ids", 8),
STACK_USAGE("ipc_init_proc_interface", 40),
STACK_USAGE("local_bh_disable", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("ipc_addid", 96),
STACK_USAGE("local_bh_enable", 0),
STACK_USAGE("rht_lock", 16),
STACK_USAGE("rht_unlock", 8),
STACK_USAGE("local_lock_release", 8),
STACK_USAGE("rht_assign_unlock", 16),
STACK_USAGE("ipc_kht_remove", 72),
STACK_USAGE("ipc_search_maxidx", 56),
STACK_USAGE("ipc_rmid", 24),
STACK_USAGE("ipc_set_key_private", 8),
STACK_USAGE("ipc_rcu_getref", 8),
STACK_USAGE("ipc_rcu_putref", 0),
STACK_USAGE("ipcperms", 48),
STACK_USAGE("kernel_to_ipc64_perm", 24),
STACK_USAGE("ipc64_perm_to_ipc_perm", 0),
STACK_USAGE("ipc_obtain_object_idr", 0),
STACK_USAGE("ipc_obtain_object_check", 8),
STACK_USAGE("ipcget", 144),
STACK_USAGE("ipc_update_perm", 32),
STACK_USAGE("ipcctl_obtain_check", 48),
STACK_USAGE("ipc_seq_pid_ns", 0),
STACK_USAGE("sysvipc_find_ipc", 40),
STACK_USAGE("sysvipc_proc_next", 24),
STACK_USAGE("sysvipc_proc_start", 16),
STACK_USAGE("sysvipc_proc_stop", 16),
STACK_USAGE("sysvipc_proc_show", 0),
STACK_USAGE("sysvipc_proc_open", 24),
STACK_USAGE("sysvipc_proc_release", 24),
STACK_USAGE("ipc_init", 0),
STACK_USAGE("acct_pin_kill", 24),
STACK_USAGE("close_work", 16),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("__ia32_sys_acct", 0),
STACK_USAGE("__se_sys_acct", 48),
STACK_USAGE("__x64_sys_acct", 0),
STACK_USAGE("acct_exit_ns", 8),
STACK_USAGE("do_acct_process", 200),
STACK_USAGE("acct_collect", 40),
STACK_USAGE("slow_acct_process", 24),
STACK_USAGE("acct_process", 0),
STACK_USAGE("async_run_entry_fn", 24),
STACK_USAGE("async_schedule_node_domain", 64),
STACK_USAGE("async_schedule_node", 0),
STACK_USAGE("async_synchronize_full", 0),
STACK_USAGE("async_synchronize_full_domain", 0),
STACK_USAGE("async_synchronize_cookie_domain", 88),
STACK_USAGE("async_synchronize_cookie", 0),
STACK_USAGE("current_is_async", 0),
STACK_USAGE("audit_log_common_recv_msg", 48),
STACK_USAGE("is_audit_feature_set", 0),
STACK_USAGE("audit_receive", 192),
STACK_USAGE("audit_log_multicast", 104),
STACK_USAGE("audit_multicast_bind", 16),
STACK_USAGE("audit_multicast_unbind", 0),
STACK_USAGE("audit_net_init", 80),
STACK_USAGE("audit_net_exit", 0),
STACK_USAGE("audit_init", 8),
STACK_USAGE("audit_enable", 16),
STACK_USAGE("audit_backlog_limit_set", 24),
STACK_USAGE("audit_serial", 0),
STACK_USAGE("audit_log_start", 120),
STACK_USAGE("audit_log_vformat", 104),
STACK_USAGE("audit_log_format", 88),
STACK_USAGE("audit_log_n_hex", 40),
STACK_USAGE("audit_log_n_string", 32),
STACK_USAGE("audit_string_contains_control", 0),
STACK_USAGE("audit_log_n_untrustedstring", 0),
STACK_USAGE("audit_log_untrustedstring", 16),
STACK_USAGE("audit_log_d_path", 24),
STACK_USAGE("audit_log_session_info", 16),
STACK_USAGE("audit_log_key", 16),
STACK_USAGE("audit_log_task_context", 40),
STACK_USAGE("auditd_test_task", 16),
STACK_USAGE("audit_log_d_path_exe", 16),
STACK_USAGE("audit_get_tty", 24),
STACK_USAGE("audit_put_tty", 0),
STACK_USAGE("audit_log_task_info", 136),
STACK_USAGE("audit_log_path_denied", 16),
STACK_USAGE("audit_set_loginuid", 80),
STACK_USAGE("audit_ctl_lock", 0),
STACK_USAGE("audit_signal_info", 32),
STACK_USAGE("audit_log_end", 8),
STACK_USAGE("audit_ctl_unlock", 0),
STACK_USAGE("audit_log", 104),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("auditd_pid_vnr", 16),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("audit_panic", 8),
STACK_USAGE("audit_log_lost", 8),
STACK_USAGE("audit_log_config_change", 48),
STACK_USAGE("net_generic", 16),
STACK_USAGE("auditd_conn_free", 16),
STACK_USAGE("kauditd_hold_skb", 24),
STACK_USAGE("kauditd_retry_skb", 16),
STACK_USAGE("auditd_reset", 24),
STACK_USAGE("kauditd_send_queue", 88),
STACK_USAGE("kauditd_send_multicast_skb", 16),
STACK_USAGE("kauditd_thread", 136),
STACK_USAGE("audit_send_list_thread", 24),
STACK_USAGE("audit_make_reply", 64),
STACK_USAGE("audit_send_reply_thread", 16),
STACK_USAGE("audit_send_reply", 72),
STACK_USAGE("audit_remove_mark", 8),
STACK_USAGE("audit_remove_mark_rule", 8),
STACK_USAGE("audit_mark_handle_event", 24),
STACK_USAGE("audit_fsnotify_init", 0),
STACK_USAGE("audit_fsnotify_free_mark", 8),
STACK_USAGE("audit_mark_path", 0),
STACK_USAGE("audit_mark_compare", 0),
STACK_USAGE("audit_alloc_mark", 72),
STACK_USAGE("audit_tree_handle_event", 0),
STACK_USAGE("audit_tree_freeing_mark", 48),
STACK_USAGE("audit_tree_init", 0),
STACK_USAGE("put_tree", 0),
STACK_USAGE("audit_tree_path", 0),
STACK_USAGE("audit_put_chunk", 24),
STACK_USAGE("__put_chunk", 32),
STACK_USAGE("audit_tree_destroy_watch", 0),
STACK_USAGE("audit_tree_lookup", 0),
STACK_USAGE("audit_tree_match", 0),
STACK_USAGE("replace_chunk", 56),
STACK_USAGE("kill_rules", 56),
STACK_USAGE("prune_tree_chunks", 64),
STACK_USAGE("trim_marked", 8),
STACK_USAGE("audit_remove_tree_rule", 16),
STACK_USAGE("compare_root", 0),
STACK_USAGE("audit_trim_trees", 88),
STACK_USAGE("audit_make_tree", 8),
STACK_USAGE("audit_put_tree", 0),
STACK_USAGE("tag_mount", 56),
STACK_USAGE("prune_tree_thread", 24),
STACK_USAGE("audit_launch_prune", 16),
STACK_USAGE("audit_add_tree_rule", 80),
STACK_USAGE("audit_tag_tree", 120),
STACK_USAGE("alloc_tree", 16),
STACK_USAGE("audit_kill_trees", 32),
STACK_USAGE("audit_get_watch", 0),
STACK_USAGE("audit_put_watch", 8),
STACK_USAGE("audit_remove_watch", 8),
STACK_USAGE("audit_watch_path", 0),
STACK_USAGE("audit_watch_compare", 0),
STACK_USAGE("audit_init_watch", 8),
STACK_USAGE("audit_to_watch", 8),
STACK_USAGE("audit_update_watch", 96),
STACK_USAGE("audit_add_watch", 72),
STACK_USAGE("audit_remove_watch_rule", 16),
STACK_USAGE("audit_watch_handle_event", 88),
STACK_USAGE("audit_watch_init", 0),
STACK_USAGE("audit_dupe_exe", 24),
STACK_USAGE("audit_exe_compare", 24),
STACK_USAGE("audit_watch_free_mark", 0),
STACK_USAGE("audit_del_rule", 56),
STACK_USAGE("audit_log_rule_change", 32),
STACK_USAGE("audit_rule_change", 80),
STACK_USAGE("audit_list_rules_send", 104),
STACK_USAGE("audit_comparator", 0),
STACK_USAGE("audit_uid_comparator", 0),
STACK_USAGE("audit_gid_comparator", 0),
STACK_USAGE("parent_len", 8),
STACK_USAGE("audit_unpack_string", 40),
STACK_USAGE("audit_compare_dname_path", 40),
STACK_USAGE("audit_filter", 80),
STACK_USAGE("audit_update_lsm_rules", 56),
STACK_USAGE("audit_register_class", 16),
STACK_USAGE("audit_match_class", 0),
STACK_USAGE("audit_match_signal", 8),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("audit_data_to_entry", 128),
STACK_USAGE("audit_compare_rule", 48),
STACK_USAGE("audit_dupe_rule", 72),
STACK_USAGE("audit_free_rule_rcu", 40),
STACK_USAGE("audit_alloc_context", 8),
STACK_USAGE("audit_alloc", 32),
STACK_USAGE("audit_alloc_kernel", 40),
STACK_USAGE("audit_log_pid_context", 72),
STACK_USAGE("task_ppid_nr", 8),
STACK_USAGE("audit_log_uring", 88),
STACK_USAGE("audit_log_exit", 280),
STACK_USAGE("__audit_free", 24),
STACK_USAGE("__audit_uring_entry", 0),
STACK_USAGE("__audit_uring_exit", 32),
STACK_USAGE("__audit_syscall_entry", 64),
STACK_USAGE("__audit_syscall_exit", 32),
STACK_USAGE("audit_alloc_name", 40),
STACK_USAGE("__audit_reusename", 0),
STACK_USAGE("__audit_getname", 8),
STACK_USAGE("audit_copy_inode", 56),
STACK_USAGE("__audit_inode", 112),
STACK_USAGE("__audit_file", 0),
STACK_USAGE("__audit_inode_child", 120),
STACK_USAGE("grow_tree_refs", 16),
STACK_USAGE("auditsc_get_stamp", 24),
STACK_USAGE("__audit_mq_open", 0),
STACK_USAGE("__audit_mq_sendrecv", 0),
STACK_USAGE("__audit_mq_notify", 0),
STACK_USAGE("__audit_mq_getsetattr", 0),
STACK_USAGE("__audit_ipc_obj", 8),
STACK_USAGE("__audit_ipc_set_perm", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("__audit_bprm", 0),
STACK_USAGE("unroll_tree_refs", 48),
STACK_USAGE("__audit_socketcall", 0),
STACK_USAGE("__audit_fd_pair", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("__audit_sockaddr", 24),
STACK_USAGE("__audit_ptrace", 24),
STACK_USAGE("audit_signal_info_syscall", 40),
STACK_USAGE("__audit_log_bprm_fcaps", 72),
STACK_USAGE("__audit_log_capset", 0),
STACK_USAGE("__audit_mmap_fd", 0),
STACK_USAGE("__audit_openat2_how", 0),
STACK_USAGE("__audit_log_kern_module", 8),
STACK_USAGE("__audit_fanotify", 0),
STACK_USAGE("__audit_tk_injoffset", 0),
STACK_USAGE("__audit_ntp_log", 0),
STACK_USAGE("__audit_log_nfcfg", 88),
STACK_USAGE("audit_log_task", 88),
STACK_USAGE("audit_core_dumps", 16),
STACK_USAGE("audit_seccomp", 40),
STACK_USAGE("audit_seccomp_actions_logged", 32),
STACK_USAGE("audit_killed_trees", 0),
STACK_USAGE("audit_filter_rules", 144),
STACK_USAGE("rcu_read_unlock", 0),
STACK_USAGE("audit_filter_task", 56),
STACK_USAGE("audit_filter_uring", 56),
STACK_USAGE("audit_filter_syscall", 56),
STACK_USAGE("audit_filter_inodes", 72),
STACK_USAGE("audit_reset_context", 48),
STACK_USAGE("main", 8),
STACK_USAGE("prog_array_map_clear_deferred", 32),
STACK_USAGE("prog_array_map_clear", 8),
STACK_USAGE("prog_array_map_alloc", 16),
STACK_USAGE("prog_array_map_free", 24),
STACK_USAGE("__bpf_event_entry_free", 8),
STACK_USAGE("perf_event_fd_array_get_ptr", 40),
STACK_USAGE("perf_event_fd_array_put_ptr", 0),
STACK_USAGE("perf_event_fd_array_release", 48),
STACK_USAGE("perf_event_fd_array_map_free", 32),
STACK_USAGE("cgroup_fd_array_get_ptr", 0),
STACK_USAGE("cgroup_fd_array_put_ptr", 16),
STACK_USAGE("cgroup_fd_array_free", 40),
STACK_USAGE("array_of_map_alloc", 16),
STACK_USAGE("array_of_map_free", 40),
STACK_USAGE("array_of_map_lookup_elem", 0),
STACK_USAGE("array_of_map_gen_lookup", 4),
STACK_USAGE("array_map_lookup_elem", 0),
STACK_USAGE("array_map_direct_value_addr", 0),
STACK_USAGE("array_map_direct_value_meta", 0),
STACK_USAGE("array_map_gen_lookup", 4),
STACK_USAGE("percpu_array_map_lookup_elem", 8),
STACK_USAGE("bpf_percpu_array_copy", 80),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("array_map_get_next_key", 0),
STACK_USAGE("array_map_update_elem", 56),
STACK_USAGE("bpf_percpu_array_update", 80),
STACK_USAGE("array_map_delete_elem", 0),
STACK_USAGE("array_map_free_timers", 24),
STACK_USAGE("array_map_free", 16),
STACK_USAGE("array_map_seq_show_elem", 32),
STACK_USAGE("percpu_array_map_seq_show_elem", 40),
STACK_USAGE("array_map_check_btf", 24),
STACK_USAGE("array_map_mmap", 0),
STACK_USAGE("array_map_meta_equal", 16),
STACK_USAGE("bpf_array_map_seq_start", 0),
STACK_USAGE("array_map_alloc_check", 0),
STACK_USAGE("bpf_array_map_seq_next", 0),
STACK_USAGE("__bpf_array_map_seq_show", 152),
STACK_USAGE("bpf_array_map_seq_show", 0),
STACK_USAGE("bpf_array_map_seq_stop", 80),
STACK_USAGE("bpf_iter_init_array_map", 24),
STACK_USAGE("bpf_iter_fini_array_map", 0),
STACK_USAGE("bpf_for_each_array_elem", 64),
STACK_USAGE("fd_array_map_alloc_check", 0),
STACK_USAGE("fd_array_map_lookup_elem", 0),
STACK_USAGE("bpf_fd_array_map_lookup_elem", 24),
STACK_USAGE("bpf_fd_array_map_update_elem", 32),
STACK_USAGE("fd_array_map_delete_elem", 24),
STACK_USAGE("array_map_alloc", 64),
STACK_USAGE("prog_fd_array_get_ptr", 16),
STACK_USAGE("prog_fd_array_put_ptr", 0),
STACK_USAGE("prog_fd_array_sys_lookup_elem", 0),
STACK_USAGE("prog_array_map_seq_show_elem", 40),
STACK_USAGE("prog_array_map_poke_track", 24),
STACK_USAGE("prog_array_map_poke_untrack", 24),
STACK_USAGE("prog_array_map_poke_run", 88),
STACK_USAGE("bloom_map_free", 0),
STACK_USAGE("bloom_map_lookup_elem", 0),
STACK_USAGE("bloom_map_update_elem", 0),
STACK_USAGE("bloom_map_check_btf", 0),
STACK_USAGE("hash", 0),
STACK_USAGE("bloom_map_peek_elem", 24),
STACK_USAGE("bloom_map_push_elem", 32),
STACK_USAGE("bloom_map_pop_elem", 0),
STACK_USAGE("bloom_map_delete_elem", 0),
STACK_USAGE("bloom_map_get_next_key", 0),
STACK_USAGE("bloom_map_alloc", 48),
STACK_USAGE("bpf_fd_inode_storage_lookup_elem", 16),
STACK_USAGE("bpf_fd_inode_storage_update_elem", 40),
STACK_USAGE("bpf_fd_inode_storage_delete_elem", 24),
STACK_USAGE("bpf_inode_storage_get", 40),
STACK_USAGE("bpf_inode_storage_delete", 16),
STACK_USAGE("notsupp_get_next_key", 0),
STACK_USAGE("inode_storage_map_alloc", 8),
STACK_USAGE("inode_storage_map_free", 8),
STACK_USAGE("inode_storage_ptr", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("inode_storage_lookup", 24),
STACK_USAGE("bpf_inode_storage_free", 40),
STACK_USAGE("iter_open", 0),
STACK_USAGE("iter_release", 40),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("bpf_iter_reg_target", 16),
STACK_USAGE("bpf_iter_unreg_target", 8),
STACK_USAGE("bpf_iter_prog_supported", 40),
STACK_USAGE("bpf_iter_get_func_proto", 24),
STACK_USAGE("bpf_iter_link_release", 0),
STACK_USAGE("bpf_iter_link_dealloc", 0),
STACK_USAGE("bpf_iter_link_replace", 32),
STACK_USAGE("bpf_iter_link_show_fdinfo", 16),
STACK_USAGE("bpf_iter_link_fill_link_info", 40),
STACK_USAGE("bpf_link_is_iter", 0),
STACK_USAGE("bpf_iter_link_attach", 88),
STACK_USAGE("copy_from_bpfptr", 0),
STACK_USAGE("prepare_seq_file", 56),
STACK_USAGE("bpf_iter_new_fd", 32),
STACK_USAGE("bpf_iter_get_info", 0),
STACK_USAGE("bpf_iter_run_prog", 40),
STACK_USAGE("bpf_for_each_map_elem", 0),
STACK_USAGE("bpf_loop", 32),
STACK_USAGE("bpf_seq_read", 96),
STACK_USAGE("bpf_selem_unlink_storage_nolock", 40),
STACK_USAGE("bpf_selem_link_storage_nolock", 0),
STACK_USAGE("bpf_selem_unlink_map", 16),
STACK_USAGE("bpf_selem_link_map", 48),
STACK_USAGE("bpf_selem_unlink", 40),
STACK_USAGE("bpf_local_storage_lookup", 40),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("bpf_local_storage_alloc", 64),
STACK_USAGE("bpf_local_storage_update", 88),
STACK_USAGE("bpf_local_storage_cache_idx_get", 16),
STACK_USAGE("bpf_local_storage_cache_idx_free", 16),
STACK_USAGE("bpf_local_storage_map_free", 40),
STACK_USAGE("bpf_local_storage_map_alloc_check", 8),
STACK_USAGE("bpf_local_storage_map_alloc", 56),
STACK_USAGE("bpf_local_storage_map_check_btf", 0),
STACK_USAGE("bpf_selem_alloc", 40),
STACK_USAGE("bpf_local_storage_free_rcu", 0),
STACK_USAGE("bpf_selem_free_rcu", 0),
STACK_USAGE("__bpf_lru_list_rotate", 0),
STACK_USAGE("__bpf_lru_list_shrink", 72),
STACK_USAGE("bpf_lru_pop_free", 112),
STACK_USAGE("bpf_lru_push_free", 40),
STACK_USAGE("bpf_lru_populate", 56),
STACK_USAGE("bpf_lru_init", 56),
STACK_USAGE("bpf_lru_destroy", 0),
STACK_USAGE("bpf_ima_file_hash", 0),
STACK_USAGE("bpf_lsm_path_notify", 0),
STACK_USAGE("bpf_lsm_inode_alloc_security", 0),
STACK_USAGE("bpf_lsm_inode_free_security", 0),
STACK_USAGE("bpf_lsm_inode_init_security", 0),
STACK_USAGE("bpf_lsm_inode_init_security_anon", 0),
STACK_USAGE("bpf_lsm_inode_create", 0),
STACK_USAGE("bpf_lsm_func_proto", 0),
STACK_USAGE("bpf_lsm_inode_link", 0),
STACK_USAGE("bpf_lsm_inode_unlink", 0),
STACK_USAGE("bpf_lsm_inode_symlink", 0),
STACK_USAGE("bpf_lsm_inode_mkdir", 0),
STACK_USAGE("bpf_lsm_inode_rmdir", 0),
STACK_USAGE("bpf_lsm_inode_mknod", 0),
STACK_USAGE("bpf_lsm_inode_rename", 0),
STACK_USAGE("bpf_lsm_inode_readlink", 0),
STACK_USAGE("bpf_lsm_inode_follow_link", 0),
STACK_USAGE("bpf_lsm_inode_permission", 0),
STACK_USAGE("bpf_lsm_inode_setattr", 0),
STACK_USAGE("bpf_lsm_inode_getattr", 0),
STACK_USAGE("bpf_lsm_inode_setxattr", 0),
STACK_USAGE("bpf_lsm_inode_post_setxattr", 0),
STACK_USAGE("bpf_lsm_inode_getxattr", 0),
STACK_USAGE("bpf_lsm_inode_listxattr", 0),
STACK_USAGE("bpf_lsm_inode_removexattr", 0),
STACK_USAGE("bpf_lsm_inode_need_killpriv", 0),
STACK_USAGE("bpf_lsm_inode_killpriv", 0),
STACK_USAGE("bpf_lsm_inode_getsecurity", 0),
STACK_USAGE("bpf_lsm_inode_setsecurity", 0),
STACK_USAGE("bpf_lsm_inode_listsecurity", 0),
STACK_USAGE("bpf_lsm_inode_getsecid", 0),
STACK_USAGE("bpf_lsm_inode_copy_up", 0),
STACK_USAGE("bpf_lsm_inode_copy_up_xattr", 0),
STACK_USAGE("bpf_lsm_kernfs_init_security", 0),
STACK_USAGE("bpf_lsm_file_permission", 0),
STACK_USAGE("bpf_lsm_file_alloc_security", 0),
STACK_USAGE("bpf_lsm_file_free_security", 0),
STACK_USAGE("bpf_lsm_file_ioctl", 0),
STACK_USAGE("bpf_lsm_mmap_addr", 0),
STACK_USAGE("bpf_lsm_mmap_file", 0),
STACK_USAGE("bpf_lsm_file_mprotect", 0),
STACK_USAGE("bpf_lsm_file_lock", 0),
STACK_USAGE("bpf_lsm_file_fcntl", 0),
STACK_USAGE("bpf_lsm_file_set_fowner", 0),
STACK_USAGE("bpf_lsm_file_send_sigiotask", 0),
STACK_USAGE("bpf_lsm_file_receive", 0),
STACK_USAGE("bpf_lsm_file_open", 0),
STACK_USAGE("bpf_lsm_task_alloc", 0),
STACK_USAGE("bpf_lsm_task_free", 0),
STACK_USAGE("bpf_lsm_cred_alloc_blank", 0),
STACK_USAGE("bpf_lsm_cred_free", 0),
STACK_USAGE("bpf_lsm_cred_prepare", 0),
STACK_USAGE("bpf_lsm_cred_transfer", 0),
STACK_USAGE("bpf_lsm_cred_getsecid", 0),
STACK_USAGE("bpf_lsm_kernel_act_as", 0),
STACK_USAGE("bpf_lsm_kernel_create_files_as", 0),
STACK_USAGE("bpf_lsm_kernel_module_request", 0),
STACK_USAGE("bpf_lsm_kernel_load_data", 0),
STACK_USAGE("bpf_lsm_kernel_post_load_data", 0),
STACK_USAGE("bpf_lsm_kernel_read_file", 0),
STACK_USAGE("bpf_lsm_kernel_post_read_file", 0),
STACK_USAGE("bpf_lsm_task_fix_setuid", 0),
STACK_USAGE("bpf_lsm_task_fix_setgid", 0),
STACK_USAGE("bpf_lsm_task_setpgid", 0),
STACK_USAGE("bpf_lsm_task_getpgid", 0),
STACK_USAGE("bpf_lsm_task_getsid", 0),
STACK_USAGE("bpf_lsm_current_getsecid_subj", 0),
STACK_USAGE("bpf_lsm_task_getsecid_obj", 0),
STACK_USAGE("bpf_lsm_task_setnice", 0),
STACK_USAGE("bpf_lsm_task_setioprio", 0),
STACK_USAGE("bpf_lsm_task_getioprio", 0),
STACK_USAGE("bpf_lsm_task_prlimit", 0),
STACK_USAGE("bpf_lsm_task_setrlimit", 0),
STACK_USAGE("bpf_lsm_task_setscheduler", 0),
STACK_USAGE("bpf_lsm_task_getscheduler", 0),
STACK_USAGE("bpf_lsm_task_movememory", 0),
STACK_USAGE("bpf_lsm_task_kill", 0),
STACK_USAGE("bpf_lsm_task_prctl", 0),
STACK_USAGE("bpf_lsm_task_to_inode", 0),
STACK_USAGE("bpf_lsm_ipc_permission", 0),
STACK_USAGE("bpf_lsm_ipc_getsecid", 0),
STACK_USAGE("bpf_lsm_msg_msg_alloc_security", 0),
STACK_USAGE("bpf_lsm_msg_msg_free_security", 0),
STACK_USAGE("bpf_lsm_msg_queue_alloc_security", 0),
STACK_USAGE("bpf_lsm_msg_queue_free_security", 0),
STACK_USAGE("bpf_lsm_msg_queue_associate", 0),
STACK_USAGE("bpf_lsm_msg_queue_msgctl", 0),
STACK_USAGE("bpf_lsm_msg_queue_msgsnd", 0),
STACK_USAGE("bpf_lsm_is_sleepable_hook", 0),
STACK_USAGE("bpf_lsm_msg_queue_msgrcv", 0),
STACK_USAGE("bpf_lsm_shm_alloc_security", 0),
STACK_USAGE("bpf_lsm_shm_free_security", 0),
STACK_USAGE("bpf_lsm_shm_associate", 0),
STACK_USAGE("bpf_lsm_shm_shmctl", 0),
STACK_USAGE("bpf_lsm_shm_shmat", 0),
STACK_USAGE("bpf_lsm_sem_alloc_security", 0),
STACK_USAGE("bpf_lsm_sem_free_security", 0),
STACK_USAGE("bpf_lsm_sem_associate", 0),
STACK_USAGE("bpf_lsm_sem_semctl", 0),
STACK_USAGE("bpf_lsm_sem_semop", 0),
STACK_USAGE("bpf_lsm_netlink_send", 0),
STACK_USAGE("bpf_lsm_d_instantiate", 0),
STACK_USAGE("bpf_lsm_getprocattr", 0),
STACK_USAGE("bpf_lsm_setprocattr", 0),
STACK_USAGE("bpf_lsm_ismaclabel", 0),
STACK_USAGE("bpf_lsm_secid_to_secctx", 0),
STACK_USAGE("bpf_lsm_secctx_to_secid", 0),
STACK_USAGE("bpf_lsm_release_secctx", 0),
STACK_USAGE("bpf_lsm_inode_invalidate_secctx", 0),
STACK_USAGE("bpf_lsm_inode_notifysecctx", 0),
STACK_USAGE("bpf_lsm_inode_setsecctx", 0),
STACK_USAGE("bpf_lsm_inode_getsecctx", 0),
STACK_USAGE("bpf_lsm_unix_stream_connect", 0),
STACK_USAGE("bpf_lsm_unix_may_send", 0),
STACK_USAGE("bpf_lsm_socket_create", 0),
STACK_USAGE("bpf_lsm_socket_post_create", 0),
STACK_USAGE("bpf_lsm_socket_socketpair", 0),
STACK_USAGE("bpf_lsm_socket_bind", 0),
STACK_USAGE("bpf_lsm_socket_connect", 0),
STACK_USAGE("bpf_lsm_socket_listen", 0),
STACK_USAGE("bpf_lsm_socket_accept", 0),
STACK_USAGE("bpf_lsm_socket_sendmsg", 0),
STACK_USAGE("bpf_lsm_socket_recvmsg", 0),
STACK_USAGE("bpf_lsm_socket_getsockname", 0),
STACK_USAGE("bpf_lsm_socket_getpeername", 0),
STACK_USAGE("bpf_lsm_socket_getsockopt", 0),
STACK_USAGE("bpf_lsm_socket_setsockopt", 0),
STACK_USAGE("bpf_lsm_binder_set_context_mgr", 0),
STACK_USAGE("bpf_lsm_socket_shutdown", 0),
STACK_USAGE("bpf_lsm_socket_sock_rcv_skb", 0),
STACK_USAGE("bpf_lsm_socket_getpeersec_stream", 0),
STACK_USAGE("bpf_lsm_socket_getpeersec_dgram", 0),
STACK_USAGE("bpf_lsm_sk_alloc_security", 0),
STACK_USAGE("bpf_lsm_sk_free_security", 0),
STACK_USAGE("bpf_lsm_sk_clone_security", 0),
STACK_USAGE("bpf_lsm_binder_transaction", 0),
STACK_USAGE("bpf_lsm_sk_getsecid", 0),
STACK_USAGE("bpf_lsm_sock_graft", 0),
STACK_USAGE("bpf_lsm_inet_conn_request", 0),
STACK_USAGE("bpf_lsm_inet_csk_clone", 0),
STACK_USAGE("bpf_lsm_inet_conn_established", 0),
STACK_USAGE("bpf_lsm_secmark_relabel_packet", 0),
STACK_USAGE("bpf_lsm_secmark_refcount_inc", 0),
STACK_USAGE("bpf_lsm_secmark_refcount_dec", 0),
STACK_USAGE("bpf_lsm_req_classify_flow", 0),
STACK_USAGE("bpf_lsm_tun_dev_alloc_security", 0),
STACK_USAGE("bpf_lsm_tun_dev_free_security", 0),
STACK_USAGE("bpf_lsm_tun_dev_create", 0),
STACK_USAGE("bpf_lsm_tun_dev_attach_queue", 0),
STACK_USAGE("bpf_lsm_tun_dev_attach", 0),
STACK_USAGE("bpf_lsm_tun_dev_open", 0),
STACK_USAGE("bpf_lsm_sctp_assoc_request", 0),
STACK_USAGE("bpf_lsm_binder_transfer_binder", 0),
STACK_USAGE("bpf_lsm_sctp_bind_connect", 0),
STACK_USAGE("bpf_lsm_sctp_sk_clone", 0),
STACK_USAGE("bpf_lsm_sctp_assoc_established", 0),
STACK_USAGE("bpf_lsm_binder_transfer_file", 0),
STACK_USAGE("bpf_lsm_ptrace_access_check", 0),
STACK_USAGE("bpf_lsm_key_alloc", 0),
STACK_USAGE("bpf_lsm_key_free", 0),
STACK_USAGE("bpf_lsm_key_permission", 0),
STACK_USAGE("bpf_lsm_key_getsecurity", 0),
STACK_USAGE("bpf_lsm_audit_rule_init", 0),
STACK_USAGE("bpf_lsm_audit_rule_known", 0),
STACK_USAGE("bpf_lsm_audit_rule_match", 0),
STACK_USAGE("bpf_lsm_audit_rule_free", 0),
STACK_USAGE("bpf_lsm_bpf", 0),
STACK_USAGE("bpf_lsm_bpf_map", 0),
STACK_USAGE("bpf_lsm_bpf_prog", 0),
STACK_USAGE("bpf_lsm_ptrace_traceme", 0),
STACK_USAGE("bpf_lsm_verify_prog", 16),
STACK_USAGE("bpf_lsm_bpf_map_alloc_security", 0),
STACK_USAGE("bpf_lsm_bpf_map_free_security", 0),
STACK_USAGE("bpf_lsm_bpf_prog_alloc_security", 0),
STACK_USAGE("bpf_lsm_bpf_prog_free_security", 0),
STACK_USAGE("bpf_lsm_locked_down", 0),
STACK_USAGE("bpf_lsm_perf_event_open", 0),
STACK_USAGE("bpf_lsm_capget", 0),
STACK_USAGE("bpf_lsm_perf_event_alloc", 0),
STACK_USAGE("bpf_lsm_perf_event_free", 0),
STACK_USAGE("bpf_lsm_perf_event_read", 0),
STACK_USAGE("bpf_lsm_perf_event_write", 0),
STACK_USAGE("bpf_lsm_uring_override_creds", 0),
STACK_USAGE("bpf_lsm_uring_sqpoll", 0),
STACK_USAGE("bpf_lsm_capset", 0),
STACK_USAGE("bpf_lsm_capable", 0),
STACK_USAGE("bpf_lsm_quotactl", 0),
STACK_USAGE("bpf_lsm_quota_on", 0),
STACK_USAGE("bpf_lsm_syslog", 0),
STACK_USAGE("bpf_lsm_settime", 0),
STACK_USAGE("bpf_lsm_vm_enough_memory", 0),
STACK_USAGE("bpf_lsm_bprm_creds_for_exec", 0),
STACK_USAGE("bpf_lsm_bprm_creds_from_file", 0),
STACK_USAGE("bpf_lsm_bprm_check_security", 0),
STACK_USAGE("bpf_lsm_bprm_committing_creds", 0),
STACK_USAGE("bpf_lsm_bprm_committed_creds", 0),
STACK_USAGE("bpf_lsm_fs_context_dup", 0),
STACK_USAGE("bpf_bprm_opts_set", 0),
STACK_USAGE("bpf_lsm_fs_context_parse_param", 0),
STACK_USAGE("bpf_lsm_sb_alloc_security", 0),
STACK_USAGE("bpf_lsm_sb_delete", 0),
STACK_USAGE("bpf_lsm_sb_free_security", 0),
STACK_USAGE("bpf_lsm_sb_free_mnt_opts", 0),
STACK_USAGE("bpf_lsm_sb_eat_lsm_opts", 0),
STACK_USAGE("bpf_lsm_sb_mnt_opts_compat", 0),
STACK_USAGE("bpf_lsm_sb_remount", 0),
STACK_USAGE("bpf_lsm_sb_kern_mount", 0),
STACK_USAGE("bpf_lsm_sb_show_options", 0),
STACK_USAGE("bpf_lsm_sb_statfs", 0),
STACK_USAGE("bpf_lsm_sb_mount", 0),
STACK_USAGE("bpf_lsm_sb_umount", 0),
STACK_USAGE("bpf_lsm_sb_pivotroot", 0),
STACK_USAGE("bpf_lsm_sb_set_mnt_opts", 0),
STACK_USAGE("bpf_lsm_sb_clone_mnt_opts", 0),
STACK_USAGE("bpf_ima_inode_hash", 0),
STACK_USAGE("bpf_lsm_move_mount", 0),
STACK_USAGE("bpf_lsm_dentry_init_security", 0),
STACK_USAGE("bpf_ima_inode_hash_allowed", 0),
STACK_USAGE("bpf_lsm_dentry_create_files_as", 0),
STACK_USAGE("bpf_struct_ops_init", 232),
STACK_USAGE("bpf_struct_ops_find", 0),
STACK_USAGE("bpf_struct_ops_map_get_next_key", 0),
STACK_USAGE("bpf_struct_ops_map_sys_lookup_elem", 24),
STACK_USAGE("bpf_struct_ops_map_lookup_elem", 0),
STACK_USAGE("bpf_struct_ops_map_put_progs", 24),
STACK_USAGE("check_zero_holes", 64),
STACK_USAGE("bpf_struct_ops_prepare_trampoline", 0),
STACK_USAGE("bpf_struct_ops_map_update_elem", 160),
STACK_USAGE("bpf_struct_ops_map_delete_elem", 16),
STACK_USAGE("bpf_struct_ops_map_seq_show_elem", 40),
STACK_USAGE("bpf_struct_ops_map_free", 24),
STACK_USAGE("bpf_struct_ops_map_alloc_check", 0),
STACK_USAGE("bpf_struct_ops_map_alloc", 48),
STACK_USAGE("bpf_struct_ops_get", 8),
STACK_USAGE("bpf_struct_ops_put_rcu", 0),
STACK_USAGE("bpf_struct_ops_put", 0),
STACK_USAGE("bpf_pid_task_storage_lookup_elem", 40),
STACK_USAGE("bpf_pid_task_storage_update_elem", 64),
STACK_USAGE("bpf_pid_task_storage_delete_elem", 48),
STACK_USAGE("bpf_task_storage_get", 48),
STACK_USAGE("bpf_task_storage_delete", 16),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("notsupp_get_next_key", 0),
STACK_USAGE("task_storage_map_alloc", 8),
STACK_USAGE("task_storage_map_free", 8),
STACK_USAGE("task_storage_ptr", 0),
STACK_USAGE("task_storage_lookup", 24),
STACK_USAGE("bpf_task_storage_free", 48),
STACK_USAGE("btf_show", 88),
STACK_USAGE("btf_show_start_type", 40),
STACK_USAGE("__btf_verifier_log", 88),
STACK_USAGE("btf_verifier_log", 88),
STACK_USAGE("__btf_verifier_log_type", 136),
STACK_USAGE("btf_verifier_log_member", 136),
STACK_USAGE("btf_verifier_log_vsi", 120),
STACK_USAGE("btf_alloc_id", 16),
STACK_USAGE("btf_free_kfunc_set_tab", 16),
STACK_USAGE("btf_free_rcu", 16),
STACK_USAGE("btf_get", 0),
STACK_USAGE("btf_put", 16),
STACK_USAGE("env_type_is_resolve_sink", 0),
STACK_USAGE("env_stack_push", 0),
STACK_USAGE("__btf_resolve_size", 56),
STACK_USAGE("btf_resolve_size", 0),
STACK_USAGE("btf_type_id_size", 16),
STACK_USAGE("btf_df_check_member", 0),
STACK_USAGE("btf_df_check_kflag_member", 0),
STACK_USAGE("btf_generic_check_kflag_member", 0),
STACK_USAGE("btf_df_resolve", 0),
STACK_USAGE("btf_df_show", 0),
STACK_USAGE("btf_int_check_member", 0),
STACK_USAGE("btf_int_check_kflag_member", 0),
STACK_USAGE("btf_int_check_meta", 0),
STACK_USAGE("btf_int_log", 0),
STACK_USAGE("btf_int128_print", 32),
STACK_USAGE("btf_int_bits_show", 72),
STACK_USAGE("btf_int_show", 48),
STACK_USAGE("btf_modifier_check_member", 48),
STACK_USAGE("btf_modifier_check_kflag_member", 48),
STACK_USAGE("btf_ptr_check_member", 0),
STACK_USAGE("btf_ref_type_check_meta", 8),
STACK_USAGE("btf_modifier_resolve", 64),
STACK_USAGE("btf_var_resolve", 64),
STACK_USAGE("btf_ptr_resolve", 64),
STACK_USAGE("btf_modifier_show", 0),
STACK_USAGE("btf_var_show", 0),
STACK_USAGE("btf_ptr_show", 24),
STACK_USAGE("btf_ref_type_log", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("btf_fwd_check_meta", 8),
STACK_USAGE("btf_fwd_type_log", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("btf_array_check_member", 48),
STACK_USAGE("btf_array_check_meta", 0),
STACK_USAGE("btf_array_resolve", 72),
STACK_USAGE("btf_array_log", 0),
STACK_USAGE("__btf_array_show", 88),
STACK_USAGE("btf_array_show", 56),
STACK_USAGE("btf_struct_check_member", 0),
STACK_USAGE("btf_struct_check_meta", 72),
STACK_USAGE("btf_type_str", 0),
STACK_USAGE("btf_struct_resolve", 48),
STACK_USAGE("btf_struct_log", 0),
STACK_USAGE("btf_find_field", 72),
STACK_USAGE("btf_find_spin_lock", 0),
STACK_USAGE("btf_find_timer", 0),
STACK_USAGE("__btf_struct_show", 120),
STACK_USAGE("btf_struct_show", 48),
STACK_USAGE("btf_enum_check_member", 0),
STACK_USAGE("btf_enum_check_kflag_member", 0),
STACK_USAGE("btf_enum_check_meta", 56),
STACK_USAGE("btf_enum_log", 0),
STACK_USAGE("btf_enum_show", 48),
STACK_USAGE("local_lock_release", 8),
STACK_USAGE("btf_func_proto_check_meta", 8),
STACK_USAGE("btf_func_proto_log", 56),
STACK_USAGE("btf_func_check_meta", 8),
STACK_USAGE("btf_func_resolve", 0),
STACK_USAGE("btf_var_check_meta", 0),
STACK_USAGE("btf_var_log", 0),
STACK_USAGE("btf_datasec_check_meta", 56),
STACK_USAGE("btf_datasec_resolve", 72),
STACK_USAGE("btf_datasec_log", 0),
STACK_USAGE("btf_datasec_show", 64),
STACK_USAGE("btf_float_check_meta", 8),
STACK_USAGE("btf_float_check_member", 0),
STACK_USAGE("btf_float_log", 0),
STACK_USAGE("btf_decl_tag_check_meta", 0),
STACK_USAGE("btf_decl_tag_resolve", 48),
STACK_USAGE("btf_decl_tag_log", 0),
STACK_USAGE("btf_check_all_metas", 56),
STACK_USAGE("btf_resolve", 56),
STACK_USAGE("btf_parse_type_sec", 80),
STACK_USAGE("btf_sec_info_cmp", 0),
STACK_USAGE("btf_check_sec_info", 56),
STACK_USAGE("btf_parse_hdr", 48),
STACK_USAGE("btf_type_is_void", 0),
STACK_USAGE("btf_get_prog_ctx_type", 8),
STACK_USAGE("btf_parse_vmlinux", 80),
STACK_USAGE("bpf_prog_get_target_btf", 0),
STACK_USAGE("is_int_ptr", 0),
STACK_USAGE("btf_ctx_access", 80),
STACK_USAGE("btf_nr_types", 0),
STACK_USAGE("btf_find_by_name_kind", 48),
STACK_USAGE("btf_struct_walk", 152),
STACK_USAGE("btf_struct_access", 64),
STACK_USAGE("btf_struct_ids_match", 64),
STACK_USAGE("__get_type_size", 0),
STACK_USAGE("btf_distill_func_proto", 80),
STACK_USAGE("btf_check_type_match", 88),
STACK_USAGE("__btf_type_is_scalar_struct", 56),
STACK_USAGE("btf_type_skip_modifiers", 0),
STACK_USAGE("is_kfunc_arg_mem_size", 8),
STACK_USAGE("btf_check_func_arg_match", 200),
STACK_USAGE("btf_type_resolve_ptr", 0),
STACK_USAGE("btf_check_subprog_arg_match", 16),
STACK_USAGE("btf_check_kfunc_arg_match", 0),
STACK_USAGE("btf_type_resolve_func_ptr", 0),
STACK_USAGE("btf_prepare_func_args", 112),
STACK_USAGE("btf_seq_show", 0),
STACK_USAGE("btf_type_seq_show_flags", 240),
STACK_USAGE("btf_type_seq_show", 240),
STACK_USAGE("btf_snprintf_show", 8),
STACK_USAGE("btf_type_snprintf_show", 248),
STACK_USAGE("bpf_btf_show_fdinfo", 0),
STACK_USAGE("btf_release", 16),
STACK_USAGE("btf_new_fd", 56),
STACK_USAGE("btf_get_by_fd", 24),
STACK_USAGE("btf_get_info_by_fd", 88),
STACK_USAGE("btf_get_fd_by_id", 24),
STACK_USAGE("btf_obj_id", 0),
STACK_USAGE("btf_is_kernel", 0),
STACK_USAGE("btf_is_module", 0),
STACK_USAGE("btf_id_cmp_func", 0),
STACK_USAGE("btf_id_set_contains", 16),
STACK_USAGE("btf_try_get_module", 0),
STACK_USAGE("bpf_btf_find_by_name_kind", 80),
STACK_USAGE("btf_kfunc_id_set_contains", 16),
STACK_USAGE("register_btf_kfunc_id_set", 88),
STACK_USAGE("__bpf_core_types_are_compat", 104),
STACK_USAGE("bpf_core_types_are_compat", 0),
STACK_USAGE("bpf_core_essential_name_len", 8),
STACK_USAGE("__print_cand_cache", 48),
STACK_USAGE("hash_cands", 0),
STACK_USAGE("populate_cand_cache", 32),
STACK_USAGE("bpf_core_add_cands", 64),
STACK_USAGE("bpf_core_apply", 168),
STACK_USAGE("btf_name_by_offset", 0),
STACK_USAGE("btf_type_by_id", 0),
STACK_USAGE("btf_member_is_reg_int", 56),
STACK_USAGE("btf_show_name", 64),
STACK_USAGE("cgroup_bpf_prog_query", 88),
STACK_USAGE("__cgroup_bpf_run_filter_skb", 200),
STACK_USAGE("cgroup_bpf_release", 72),
STACK_USAGE("__cgroup_bpf_run_filter_sk", 96),
STACK_USAGE("__cgroup_bpf_run_filter_sock_addr", 264),
STACK_USAGE("__cgroup_bpf_run_filter_sock_ops", 96),
STACK_USAGE("__cgroup_bpf_check_dev_permission", 112),
STACK_USAGE("bpf_get_retval", 0),
STACK_USAGE("bpf_set_retval", 0),
STACK_USAGE("cgroup_dev_func_proto", 0),
STACK_USAGE("cgroup_dev_is_valid_access", 0),
STACK_USAGE("__cgroup_bpf_run_filter_sysctl", 192),
STACK_USAGE("__cgroup_bpf_run_filter_setsockopt", 232),
STACK_USAGE("__cgroup_bpf_run_filter_getsockopt", 216),
STACK_USAGE("__cgroup_bpf_run_filter_getsockopt_kern", 160),
STACK_USAGE("cgroup_bpf_release_fn", 16),
STACK_USAGE("sysctl_cpy_dir", 32),
STACK_USAGE("bpf_sysctl_get_name", 40),
STACK_USAGE("bpf_sysctl_get_current_value", 32),
STACK_USAGE("bpf_sysctl_get_new_value", 32),
STACK_USAGE("bpf_sysctl_set_new_value", 16),
STACK_USAGE("sysctl_func_proto", 0),
STACK_USAGE("sysctl_is_valid_access", 0),
STACK_USAGE("sysctl_convert_ctx_access", 0),
STACK_USAGE("bpf_get_netns_cookie_sockopt", 0),
STACK_USAGE("cg_sockopt_func_proto", 0),
STACK_USAGE("cg_sockopt_is_valid_access", 0),
STACK_USAGE("cg_sockopt_convert_ctx_access", 0),
STACK_USAGE("cg_sockopt_get_prologue", 0),
STACK_USAGE("percpu_ref_get", 8),
STACK_USAGE("compute_effective_progs", 40),
STACK_USAGE("cgroup_bpf_offline", 8),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("cgroup_bpf_inherit", 232),
STACK_USAGE("update_effective_progs", 32),
STACK_USAGE("percpu_ref_put", 8),
STACK_USAGE("cgroup_bpf_attach", 144),
STACK_USAGE("cgroup_bpf_replace", 56),
STACK_USAGE("__cgroup_bpf_detach", 56),
STACK_USAGE("cgroup_bpf_prog_attach", 32),
STACK_USAGE("cgroup_bpf_prog_detach", 32),
STACK_USAGE("bpf_cgroup_link_release", 16),
STACK_USAGE("bpf_cgroup_link_dealloc", 0),
STACK_USAGE("bpf_cgroup_link_detach", 0),
STACK_USAGE("bpf_cgroup_link_show_fdinfo", 24),
STACK_USAGE("bpf_cgroup_link_fill_link_info", 24),
STACK_USAGE("cgroup_bpf_link_attach", 72),
STACK_USAGE("bpf_jit_charge_modmem", 16),
STACK_USAGE("bpf_jit_uncharge_modmem", 0),
STACK_USAGE("bpf_jit_alloc_exec", 0),
STACK_USAGE("bpf_jit_free_exec", 0),
STACK_USAGE("bpf_jit_binary_alloc", 56),
STACK_USAGE("bpf_jit_binary_free", 8),
STACK_USAGE("bpf_jit_binary_pack_alloc", 104),
STACK_USAGE("bpf_jit_binary_pack_finalize", 32),
STACK_USAGE("bpf_jit_binary_pack_free", 16),
STACK_USAGE("bpf_prog_alloc", 16),
STACK_USAGE("bpf_jit_free", 16),
STACK_USAGE("bpf_jit_get_func_addr", 0),
STACK_USAGE("bpf_jit_prog_release_other", 0),
STACK_USAGE("__traceiter_xdp_redirect", 48),
STACK_USAGE("bpf_jit_blind_constants", 216),
STACK_USAGE("bpf_prog_alloc_jited_linfo", 8),
STACK_USAGE("__bpf_call_base", 0),
STACK_USAGE("__traceiter_xdp_redirect_err", 48),
STACK_USAGE("bpf_prog_jit_attempt_done", 8),
STACK_USAGE("bpf_opcode_in_insntable", 0),
STACK_USAGE("__traceiter_xdp_redirect_map", 48),
STACK_USAGE("__traceiter_xdp_redirect_map_err", 48),
STACK_USAGE("__bpf_trace_xdp_cpumap_kthread", 0),
STACK_USAGE("__traceiter_xdp_cpumap_kthread", 48),
STACK_USAGE("perf_trace_xdp_cpumap_kthread", 80),
STACK_USAGE("trace_event_raw_event_xdp_cpumap_kthread", 104),
STACK_USAGE("trace_raw_output_xdp_cpumap_kthread", 56),
STACK_USAGE("bpf_prog_fill_jited_linfo", 8),
STACK_USAGE("__bpf_prog_ret0_warn", 0),
STACK_USAGE("bpf_prog_map_compatible", 24),
STACK_USAGE("bpf_prog_select_runtime", 72),
STACK_USAGE("__bpf_prog_ret1", 0),
STACK_USAGE("bpf_prog_array_alloc", 0),
STACK_USAGE("bpf_prog_realloc", 24),
STACK_USAGE("bpf_prog_array_free", 0),
STACK_USAGE("bpf_prog_array_length", 0),
STACK_USAGE("bpf_prog_array_is_empty", 0),
STACK_USAGE("bpf_prog_array_copy_to_user", 48),
STACK_USAGE("__bpf_trace_xdp_cpumap_enqueue", 0),
STACK_USAGE("__traceiter_xdp_cpumap_enqueue", 40),
STACK_USAGE("perf_trace_xdp_cpumap_enqueue", 80),
STACK_USAGE("trace_event_raw_event_xdp_cpumap_enqueue", 96),
STACK_USAGE("trace_raw_output_xdp_cpumap_enqueue", 40),
STACK_USAGE("bpf_prog_array_delete_safe", 0),
STACK_USAGE("bpf_prog_array_delete_safe_at", 0),
STACK_USAGE("bpf_prog_array_update_at", 0),
STACK_USAGE("bpf_prog_array_copy", 48),
STACK_USAGE("bpf_prog_array_copy_info", 0),
STACK_USAGE("__bpf_free_used_maps", 40),
STACK_USAGE("__bpf_free_used_btfs", 24),
STACK_USAGE("bpf_prog_free_deferred", 48),
STACK_USAGE("__bpf_prog_free", 8),
STACK_USAGE("bpf_prog_free", 16),
STACK_USAGE("bpf_user_rnd_init_once", 16),
STACK_USAGE("bpf_user_rnd_u32", 8),
STACK_USAGE("bpf_get_raw_cpu_id", 0),
STACK_USAGE("bpf_get_trace_printk_proto", 0),
STACK_USAGE("bpf_get_trace_vprintk_proto", 0),
STACK_USAGE("bpf_event_output", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("bpf_int_jit_compile", 0),
STACK_USAGE("__bpf_trace_xdp_devmap_xmit", 0),
STACK_USAGE("__traceiter_xdp_devmap_xmit", 48),
STACK_USAGE("perf_trace_xdp_devmap_xmit", 80),
STACK_USAGE("trace_event_raw_event_xdp_devmap_xmit", 104),
STACK_USAGE("trace_raw_output_xdp_devmap_xmit", 40),
STACK_USAGE("bpf_jit_compile", 0),
STACK_USAGE("bpf_helper_changes_pkt_data", 0),
STACK_USAGE("bpf_prog_calc_tag", 168),
STACK_USAGE("bpf_jit_needs_zext", 0),
STACK_USAGE("bpf_jit_supports_kfunc_call", 0),
STACK_USAGE("skb_copy_bits", 0),
STACK_USAGE("bpf_arch_text_poke", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("bpf_arch_text_copy", 0),
STACK_USAGE("__bpf_trace_xdp_exception", 0),
STACK_USAGE("__traceiter_xdp_exception", 32),
STACK_USAGE("perf_trace_xdp_exception", 72),
STACK_USAGE("trace_event_raw_event_xdp_exception", 88),
STACK_USAGE("trace_raw_output_xdp_exception", 32),
STACK_USAGE("__bpf_trace_mem_disconnect", 0),
STACK_USAGE("__traceiter_mem_disconnect", 16),
STACK_USAGE("perf_trace_mem_disconnect", 56),
STACK_USAGE("trace_event_raw_event_mem_disconnect", 72),
STACK_USAGE("trace_raw_output_mem_disconnect", 32),
STACK_USAGE("__bpf_trace_mem_connect", 0),
STACK_USAGE("__traceiter_mem_connect", 24),
STACK_USAGE("perf_trace_mem_connect", 64),
STACK_USAGE("trace_event_raw_event_mem_connect", 80),
STACK_USAGE("trace_raw_output_mem_connect", 32),
STACK_USAGE("bpf_adj_branches", 64),
STACK_USAGE("__bpf_trace_mem_return_failed", 0),
STACK_USAGE("__traceiter_mem_return_failed", 24),
STACK_USAGE("perf_trace_mem_return_failed", 64),
STACK_USAGE("trace_event_raw_event_mem_return_failed", 80),
STACK_USAGE("trace_raw_output_mem_return_failed", 32),
STACK_USAGE("bpf_patch_insn_single", 72),
STACK_USAGE("bpf_remove_insns", 32),
STACK_USAGE("bpf_prog_kallsyms_del_all", 16),
STACK_USAGE("__bpf_trace_xdp_bulk_tx", 0),
STACK_USAGE("__traceiter_xdp_bulk_tx", 40),
STACK_USAGE("perf_trace_xdp_bulk_tx", 72),
STACK_USAGE("trace_event_raw_event_xdp_bulk_tx", 96),
STACK_USAGE("trace_raw_output_xdp_bulk_tx", 32),
STACK_USAGE("bpf_ksym_add", 16),
STACK_USAGE("bpf_ksym_del", 8),
STACK_USAGE("bpf_prog_kallsyms_add", 24),
STACK_USAGE("bpf_prog_kallsyms_del", 8),
STACK_USAGE("bpf_internal_load_pointer_neg_helper", 0),
STACK_USAGE("__bpf_address_lookup", 48),
STACK_USAGE("is_bpf_text_address", 16),
STACK_USAGE("search_bpf_extables", 16),
STACK_USAGE("bpf_get_kallsym", 48),
STACK_USAGE("bpf_jit_add_poke_descriptor", 32),
STACK_USAGE("bpf_prog_alloc_no_stats", 40),
STACK_USAGE("__bpf_trace_xdp_redirect_template", 0),
STACK_USAGE("perf_trace_xdp_redirect_template", 88),
STACK_USAGE("trace_event_raw_event_xdp_redirect_template", 104),
STACK_USAGE("trace_raw_output_xdp_redirect_template", 32),
STACK_USAGE("bpf_prog_pack_free", 24),
STACK_USAGE("bpf_jit_alloc_exec_limit", 0),
STACK_USAGE("bpf_jit_charge_init", 0),
STACK_USAGE("cpu_map_kthread_stop", 8),
STACK_USAGE("put_cpu_map_entry", 32),
STACK_USAGE("local_bh_disable", 0),
STACK_USAGE("trace_xdp_cpumap_enqueue", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("cpu_map_kthread_run", 440),
STACK_USAGE("local_bh_enable", 0),
STACK_USAGE("__cpu_map_entry_free", 8),
STACK_USAGE("cpu_map_delete_elem", 24),
STACK_USAGE("cpu_map_update_elem", 72),
STACK_USAGE("cpu_map_free", 48),
STACK_USAGE("cpu_map_lookup_elem", 8),
STACK_USAGE("cpu_map_get_next_key", 0),
STACK_USAGE("cpu_map_redirect", 40),
STACK_USAGE("bq_flush_to_queue", 56),
STACK_USAGE("cpu_map_enqueue", 32),
STACK_USAGE("cpu_map_generic_redirect", 48),
STACK_USAGE("__cpu_map_flush", 24),
STACK_USAGE("cpu_map_init", 0),
STACK_USAGE("cpu_map_alloc", 24),
STACK_USAGE("dev_hash_map_redirect", 24),
STACK_USAGE("dev_map_notification", 56),
STACK_USAGE("dev_map_init", 0),
STACK_USAGE("dev_map_alloc", 32),
STACK_USAGE("dev_map_free", 40),
STACK_USAGE("dev_map_get_next_key", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("dev_map_hash_get_next_key", 16),
STACK_USAGE("trace_xdp_exception", 0),
STACK_USAGE("bq_xmit_all", 176),
STACK_USAGE("__dev_flush", 24),
STACK_USAGE("dev_xdp_enqueue", 40),
STACK_USAGE("dev_map_enqueue", 48),
STACK_USAGE("dev_map_enqueue_clone", 48),
STACK_USAGE("dev_map_enqueue_multi", 136),
STACK_USAGE("dev_map_generic_redirect", 104),
STACK_USAGE("dev_map_redirect_multi", 152),
STACK_USAGE("dev_map_lookup_elem", 8),
STACK_USAGE("dev_map_hash_lookup_elem", 0),
STACK_USAGE("__dev_map_entry_free", 8),
STACK_USAGE("dev_map_delete_elem", 8),
STACK_USAGE("dev_map_hash_delete_elem", 40),
STACK_USAGE("__dev_map_alloc_node", 40),
STACK_USAGE("dev_map_update_elem", 48),
STACK_USAGE("dev_map_hash_update_elem", 72),
STACK_USAGE("dev_map_redirect", 40),
STACK_USAGE("print_bpf_insn", 120),
STACK_USAGE("__func_get_name", 16),
STACK_USAGE("__func_imm_name", 8),
STACK_USAGE("func_id_name", 0),
STACK_USAGE("bpf_dispatcher_change_prog", 440),
STACK_USAGE("arch_prepare_bpf_dispatcher", 0),
STACK_USAGE("htab_map_update_elem", 112),
STACK_USAGE("htab_lru_map_update_elem", 144),
STACK_USAGE("__htab_percpu_map_update_elem", 128),
STACK_USAGE("__htab_lru_percpu_map_update_elem", 128),
STACK_USAGE("htab_percpu_map_update_elem", 0),
STACK_USAGE("htab_lru_percpu_map_update_elem", 0),
STACK_USAGE("htab_map_delete_elem", 80),
STACK_USAGE("htab_lru_map_delete_elem", 88),
STACK_USAGE("htab_free_malloced_timers", 24),
STACK_USAGE("htab_map_free_timers", 0),
STACK_USAGE("htab_map_free", 40),
STACK_USAGE("htab_map_seq_show_elem", 32),
STACK_USAGE("__htab_map_lookup_and_delete_elem", 128),
STACK_USAGE("htab_map_lookup_and_delete_elem", 0),
STACK_USAGE("htab_percpu_map_lookup_and_delete_elem", 0),
STACK_USAGE("htab_lru_map_lookup_and_delete_elem", 0),
STACK_USAGE("htab_lru_percpu_map_lookup_and_delete_elem", 0),
STACK_USAGE("__htab_map_lookup_and_delete_batch", 320),
STACK_USAGE("htab_percpu_map_lookup_batch", 0),
STACK_USAGE("htab_percpu_map_lookup_and_delete_batch", 0),
STACK_USAGE("htab_map_lookup_batch", 0),
STACK_USAGE("htab_map_lookup_and_delete_batch", 0),
STACK_USAGE("htab_lru_percpu_map_lookup_batch", 0),
STACK_USAGE("htab_unlock_bucket", 16),
STACK_USAGE("htab_lru_percpu_map_lookup_and_delete_batch", 0),
STACK_USAGE("htab_lru_map_lookup_batch", 0),
STACK_USAGE("htab_lru_map_lookup_and_delete_batch", 0),
STACK_USAGE("bpf_hash_map_seq_find_next", 40),
STACK_USAGE("bpf_hash_map_seq_start", 8),
STACK_USAGE("bpf_hash_map_seq_next", 0),
STACK_USAGE("__bpf_hash_map_seq_show", 152),
STACK_USAGE("bpf_hash_map_seq_show", 0),
STACK_USAGE("bpf_hash_map_seq_stop", 80),
STACK_USAGE("bpf_iter_init_hash_map", 24),
STACK_USAGE("bpf_iter_fini_hash_map", 0),
STACK_USAGE("bpf_for_each_hash_elem", 88),
STACK_USAGE("htab_percpu_map_lookup_elem", 8),
STACK_USAGE("htab_lru_percpu_map_lookup_elem", 8),
STACK_USAGE("bpf_percpu_hash_copy", 80),
STACK_USAGE("bpf_percpu_hash_update", 32),
STACK_USAGE("htab_percpu_map_seq_show_elem", 40),
STACK_USAGE("fd_htab_map_alloc_check", 0),
STACK_USAGE("bpf_fd_htab_map_lookup_elem", 24),
STACK_USAGE("bpf_fd_htab_map_update_elem", 48),
STACK_USAGE("htab_of_map_alloc", 16),
STACK_USAGE("htab_free_prealloced_timers", 24),
STACK_USAGE("htab_of_map_lookup_elem", 8),
STACK_USAGE("htab_of_map_gen_lookup", 0),
STACK_USAGE("htab_of_map_free", 24),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("prealloc_destroy", 16),
STACK_USAGE("alloc_extra_elems", 32),
STACK_USAGE("htab_map_alloc_check", 40),
STACK_USAGE("htab_map_alloc", 72),
STACK_USAGE("htab_map_hash", 0),
STACK_USAGE("lookup_nulls_elem_raw", 48),
STACK_USAGE("__htab_map_lookup_elem", 56),
STACK_USAGE("htab_map_lookup_elem", 8),
STACK_USAGE("htab_map_gen_lookup", 0),
STACK_USAGE("htab_lru_map_lookup_elem", 8),
STACK_USAGE("htab_lru_map_lookup_elem_sys", 8),
STACK_USAGE("htab_lru_map_gen_lookup", 0),
STACK_USAGE("rcu_read_unlock", 0),
STACK_USAGE("htab_lru_map_delete_node", 56),
STACK_USAGE("htab_map_get_next_key", 72),
STACK_USAGE("htab_elem_free_rcu", 16),
STACK_USAGE("pcpu_init_value", 80),
STACK_USAGE("alloc_htab_elem", 96),
STACK_USAGE("bpf_snprintf", 40),
STACK_USAGE("bpf_timer_cb", 48),
STACK_USAGE("bpf_map_peek_elem", 0),
STACK_USAGE("bpf_timer_init", 56),
STACK_USAGE("bpf_timer_set_callback", 56),
STACK_USAGE("bpf_timer_start", 48),
STACK_USAGE("bpf_get_smp_processor_id", 0),
STACK_USAGE("bpf_timer_cancel", 48),
STACK_USAGE("bpf_timer_cancel_and_free", 40),
STACK_USAGE("bpf_base_func_proto", 8),
STACK_USAGE("bpf_get_numa_node_id", 0),
STACK_USAGE("bpf_ktime_get_ns", 0),
STACK_USAGE("bpf_ktime_get_boot_ns", 0),
STACK_USAGE("bpf_ktime_get_coarse_ns", 24),
STACK_USAGE("bpf_get_current_pid_tgid", 0),
STACK_USAGE("bpf_get_current_uid_gid", 16),
STACK_USAGE("bpf_get_current_comm", 0),
STACK_USAGE("perfmon_capable", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("bpf_spin_lock", 32),
STACK_USAGE("bpf_spin_unlock", 8),
STACK_USAGE("copy_map_value_locked", 80),
STACK_USAGE("bpf_map_lookup_elem", 16),
STACK_USAGE("bpf_jiffies64", 0),
STACK_USAGE("bpf_get_current_cgroup_id", 16),
STACK_USAGE("bpf_get_current_ancestor_cgroup_id", 24),
STACK_USAGE("bpf_get_local_storage", 8),
STACK_USAGE("__bpf_strtoull", 136),
STACK_USAGE("bpf_map_update_elem", 32),
STACK_USAGE("bpf_strtol", 32),
STACK_USAGE("bpf_strtoul", 32),
STACK_USAGE("bpf_strncmp", 0),
STACK_USAGE("bpf_get_ns_current_pid_tgid", 56),
STACK_USAGE("bpf_event_output_data", 0),
STACK_USAGE("bpf_copy_from_user", 16),
STACK_USAGE("bpf_map_delete_elem", 16),
STACK_USAGE("bpf_copy_from_user_task", 32),
STACK_USAGE("bpf_per_cpu_ptr", 0),
STACK_USAGE("bpf_this_cpu_ptr", 8),
STACK_USAGE("bpf_bprintf_cleanup", 0),
STACK_USAGE("bpf_bprintf_prepare", 152),
STACK_USAGE("bpf_map_push_elem", 0),
STACK_USAGE("bpf_map_pop_elem", 0),
STACK_USAGE("bpf_mkdir", 32),
STACK_USAGE("map_seq_next", 32),
STACK_USAGE("map_seq_start", 0),
STACK_USAGE("map_seq_stop", 0),
STACK_USAGE("map_seq_show", 8),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("bpffs_map_open", 32),
STACK_USAGE("bpffs_map_release", 24),
STACK_USAGE("bpffs_obj_open", 0),
STACK_USAGE("bpf_mkobj_ops", 56),
STACK_USAGE("bpf_mkprog", 0),
STACK_USAGE("bpf_mkmap", 0),
STACK_USAGE("bpf_mklink", 24),
STACK_USAGE("bpf_lookup", 24),
STACK_USAGE("bpf_symlink", 32),
STACK_USAGE("bpf_obj_pin_user", 56),
STACK_USAGE("bpf_obj_get_user", 56),
STACK_USAGE("bpf_prog_get_type_path", 48),
STACK_USAGE("bpf_show_options", 0),
STACK_USAGE("bpf_free_inode", 8),
STACK_USAGE("bpf_parse_param", 48),
STACK_USAGE("bpf_fill_super", 136),
STACK_USAGE("bpf_get_tree", 0),
STACK_USAGE("bpf_free_fc", 0),
STACK_USAGE("bpf_init_fs_context", 8),
STACK_USAGE("bpf_init", 8),
STACK_USAGE("cgroup_storage_lookup_elem", 32),
STACK_USAGE("cgroup_storage_update_elem", 48),
STACK_USAGE("bpf_percpu_cgroup_storage_copy", 80),
STACK_USAGE("bpf_percpu_cgroup_storage_update", 80),
STACK_USAGE("cgroup_storage_get_next_key", 40),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("cgroup_storage_map_alloc", 16),
STACK_USAGE("cgroup_storage_map_free", 56),
STACK_USAGE("cgroup_storage_delete_elem", 0),
STACK_USAGE("cgroup_storage_check_btf", 24),
STACK_USAGE("cgroup_storage_seq_show_elem", 40),
STACK_USAGE("bpf_cgroup_storage_assign", 0),
STACK_USAGE("bpf_cgroup_storage_alloc", 32),
STACK_USAGE("free_shared_cgroup_storage_rcu", 8),
STACK_USAGE("free_percpu_cgroup_storage_rcu", 8),
STACK_USAGE("bpf_cgroup_storage_free", 0),
STACK_USAGE("bpf_cgroup_storage_link", 40),
STACK_USAGE("bpf_cgroup_storage_unlink", 24),
STACK_USAGE("cgroup_storage_lookup", 32),
STACK_USAGE("longest_prefix_match", 32),
STACK_USAGE("trie_lookup_elem", 32),
STACK_USAGE("trie_update_elem", 80),
STACK_USAGE("trie_delete_elem", 80),
STACK_USAGE("trie_alloc", 16),
STACK_USAGE("trie_free", 24),
STACK_USAGE("trie_get_next_key", 64),
STACK_USAGE("trie_check_btf", 0),
STACK_USAGE("bpf_map_meta_alloc", 32),
STACK_USAGE("bpf_map_fd_put_ptr", 0),
STACK_USAGE("bpf_map_fd_sys_lookup_elem", 0),
STACK_USAGE("bpf_map_meta_free", 8),
STACK_USAGE("bpf_map_meta_equal", 0),
STACK_USAGE("bpf_map_fd_get_ptr", 32),
STACK_USAGE("bpf_iter_attach_map", 48),
STACK_USAGE("bpf_map_seq_start", 8),
STACK_USAGE("bpf_iter_detach_map", 0),
STACK_USAGE("bpf_iter_map_show_fdinfo", 0),
STACK_USAGE("bpf_iter_map_fill_link_info", 0),
STACK_USAGE("bpf_iter_bpf_map_elem", 0),
STACK_USAGE("bpf_map_iter_init", 0),
STACK_USAGE("bpf_map_seq_next", 8),
STACK_USAGE("bpf_iter_bpf_map", 0),
STACK_USAGE("bpf_map_seq_show", 56),
STACK_USAGE("bpf_map_seq_stop", 48),
STACK_USAGE("bpf_netns_link_release", 56),
STACK_USAGE("bpf_netns_link_detach", 0),
STACK_USAGE("bpf_netns_link_dealloc", 0),
STACK_USAGE("bpf_netns_link_update_prog", 40),
STACK_USAGE("bpf_netns_link_fill_info", 24),
STACK_USAGE("bpf_netns_link_show_fdinfo", 24),
STACK_USAGE("put_net", 0),
STACK_USAGE("netns_bpf_prog_query", 72),
STACK_USAGE("netns_bpf_prog_attach", 40),
STACK_USAGE("netns_bpf_prog_detach", 40),
STACK_USAGE("netns_bpf_link_create", 96),
STACK_USAGE("netns_bpf_pernet_init", 0),
STACK_USAGE("netns_bpf_pernet_pre_exit", 24),
STACK_USAGE("netns_bpf_init", 0),
STACK_USAGE("bpf_prog_offload_verifier_prep", 24),
STACK_USAGE("bpf_prog_offload_verify_insn", 24),
STACK_USAGE("bpf_prog_offload_finalize", 8),
STACK_USAGE("bpf_prog_offload_replace_insn", 32),
STACK_USAGE("local_bh_disable", 0),
STACK_USAGE("bpf_prog_offload_remove_insns", 32),
STACK_USAGE("bpf_prog_offload_destroy", 16),
STACK_USAGE("bpf_prog_warn_on_exec", 0),
STACK_USAGE("bpf_prog_offload_compile", 8),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("bpf_prog_offload_info_fill_ns", 16),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("bpf_prog_offload_info_fill", 56),
STACK_USAGE("local_bh_enable", 0),
STACK_USAGE("rht_lock", 16),
STACK_USAGE("rht_unlock", 8),
STACK_USAGE("bpf_map_offload_map_alloc", 64),
STACK_USAGE("rht_assign_unlock", 16),
STACK_USAGE("__bpf_map_offload_destroy", 48),
STACK_USAGE("bpf_map_offload_map_free", 8),
STACK_USAGE("bpf_map_offload_lookup_elem", 24),
STACK_USAGE("bpf_map_offload_update_elem", 32),
STACK_USAGE("bpf_map_offload_delete_elem", 16),
STACK_USAGE("bpf_map_offload_get_next_key", 24),
STACK_USAGE("bpf_map_offload_info_fill_ns", 8),
STACK_USAGE("bpf_map_offload_info_fill", 48),
STACK_USAGE("__bpf_offload_dev_match", 32),
STACK_USAGE("bpf_offload_dev_match", 16),
STACK_USAGE("bpf_offload_prog_map_match", 16),
STACK_USAGE("bpf_offload_dev_netdev_register", 72),
STACK_USAGE("bpf_offload_dev_netdev_unregister", 72),
STACK_USAGE("rhashtable_lookup_fast", 88),
STACK_USAGE("bpf_offload_dev_create", 24),
STACK_USAGE("bpf_offload_dev_destroy", 0),
STACK_USAGE("bpf_offload_dev_priv", 0),
STACK_USAGE("bpf_prog_offload_init", 56),
STACK_USAGE("pcpu_freelist_populate", 48),
STACK_USAGE("__pcpu_freelist_pop", 56),
STACK_USAGE("pcpu_freelist_pop", 24),
STACK_USAGE("pcpu_freelist_destroy", 0),
STACK_USAGE("pcpu_freelist_init", 32),
STACK_USAGE("__pcpu_freelist_push", 64),
STACK_USAGE("pcpu_freelist_push", 32),
STACK_USAGE("free_links_and_skel", 0),
STACK_USAGE("preload", 8),
STACK_USAGE("iterators_bpf__destroy", 8),
STACK_USAGE("load", 336),
STACK_USAGE("fini", 0),
STACK_USAGE("bpf_prog_iter_init", 0),
STACK_USAGE("bpf_prog_seq_start", 8),
STACK_USAGE("bpf_prog_seq_next", 8),
STACK_USAGE("bpf_iter_bpf_prog", 0),
STACK_USAGE("bpf_prog_seq_show", 56),
STACK_USAGE("bpf_prog_seq_stop", 48),
STACK_USAGE("queue_map_peek_elem", 32),
STACK_USAGE("stack_map_peek_elem", 32),
STACK_USAGE("queue_map_pop_elem", 40),
STACK_USAGE("stack_map_pop_elem", 40),
STACK_USAGE("queue_stack_map_push_elem", 48),
STACK_USAGE("queue_stack_map_lookup_elem", 0),
STACK_USAGE("queue_stack_map_update_elem", 0),
STACK_USAGE("queue_stack_map_delete_elem", 0),
STACK_USAGE("queue_stack_map_get_next_key", 0),
STACK_USAGE("queue_stack_map_alloc_check", 8),
STACK_USAGE("queue_stack_map_alloc", 24),
STACK_USAGE("queue_stack_map_free", 0),
STACK_USAGE("reuseport_array_alloc", 24),
STACK_USAGE("bpf_fd_reuseport_array_lookup_elem", 32),
STACK_USAGE("bpf_sk_reuseport_detach", 16),
STACK_USAGE("bpf_fd_reuseport_array_update_elem", 64),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("reuseport_array_get_next_key", 0),
STACK_USAGE("reuseport_array_alloc_check", 0),
STACK_USAGE("reuseport_array_lookup_elem", 8),
STACK_USAGE("reuseport_array_delete_elem", 32),
STACK_USAGE("reuseport_array_free", 32),
STACK_USAGE("bpf_ringbuf_notify", 0),
STACK_USAGE("bpf_ringbuf_alloc", 64),
STACK_USAGE("ringbuf_map_alloc", 24),
STACK_USAGE("ringbuf_map_free", 32),
STACK_USAGE("ringbuf_map_lookup_elem", 0),
STACK_USAGE("ringbuf_map_update_elem", 0),
STACK_USAGE("ringbuf_map_delete_elem", 0),
STACK_USAGE("ringbuf_map_get_next_key", 0),
STACK_USAGE("ringbuf_map_mmap", 0),
STACK_USAGE("ringbuf_map_poll", 8),
STACK_USAGE("__bpf_ringbuf_reserve", 56),
STACK_USAGE("bpf_ringbuf_reserve", 0),
STACK_USAGE("bpf_ringbuf_submit", 0),
STACK_USAGE("bpf_ringbuf_discard", 0),
STACK_USAGE("bpf_ringbuf_output", 40),
STACK_USAGE("bpf_ringbuf_query", 0),
STACK_USAGE("stack_map_get_build_id_offset", 96),
STACK_USAGE("__bpf_get_stackid", 96),
STACK_USAGE("bpf_get_stackid", 16),
STACK_USAGE("bpf_get_stackid_pe", 32),
STACK_USAGE("__bpf_get_stack", 88),
STACK_USAGE("bpf_get_stack", 0),
STACK_USAGE("prealloc_elems_and_freelist", 32),
STACK_USAGE("bpf_get_task_stack", 48),
STACK_USAGE("bpf_get_stack_pe", 48),
STACK_USAGE("stack_map_lookup_elem", 0),
STACK_USAGE("bpf_stackmap_copy", 40),
STACK_USAGE("stack_map_get_next_key", 24),
STACK_USAGE("stack_map_update_elem", 0),
STACK_USAGE("stack_map_delete_elem", 8),
STACK_USAGE("stack_map_free", 8),
STACK_USAGE("stack_map_alloc", 40),
STACK_USAGE("bpf_map_inc_not_zero", 16),
STACK_USAGE("bpf_stackmap_copy", 0),
STACK_USAGE("map_lookup_elem", 72),
STACK_USAGE("map_update_elem", 80),
STACK_USAGE("map_delete_elem", 48),
STACK_USAGE("map_get_next_key", 56),
STACK_USAGE("generic_map_delete_batch", 72),
STACK_USAGE("generic_map_update_batch", 144),
STACK_USAGE("generic_map_lookup_batch", 168),
STACK_USAGE("bpf_map_write_active", 0),
STACK_USAGE("bpf_map_value_size", 8),
STACK_USAGE("map_lookup_and_delete_elem", 72),
STACK_USAGE("map_freeze", 40),
STACK_USAGE("bpf_audit_prog", 24),
STACK_USAGE("bpf_prog_alloc_id", 16),
STACK_USAGE("bpf_prog_free_id", 16),
STACK_USAGE("bpf_map_update_value", 48),
STACK_USAGE("__bpf_prog_put_rcu", 16),
STACK_USAGE("__bpf_prog_put_noref", 16),
STACK_USAGE("bpf_prog_put_deferred", 16),
STACK_USAGE("bpf_prog_put", 40),
STACK_USAGE("bpf_prog_release", 0),
STACK_USAGE("bpf_prog_show_fdinfo", 104),
STACK_USAGE("bpf_prog_new_fd", 8),
STACK_USAGE("bpf_prog_add", 0),
STACK_USAGE("bpf_prog_sub", 0),
STACK_USAGE("bpf_prog_inc", 0),
STACK_USAGE("bpf_prog_inc_not_zero", 0),
STACK_USAGE("bpf_prog_get_ok", 0),
STACK_USAGE("bpf_prog_get", 8),
STACK_USAGE("bpf_prog_get_type_dev", 24),
STACK_USAGE("bpf_prog_get_type", 16),
STACK_USAGE("bpf_prog_load_check_attach", 0),
STACK_USAGE("bpf_prog_load", 232),
STACK_USAGE("copy_map_value", 56),
STACK_USAGE("bpf_map_copy_value", 32),
STACK_USAGE("bpf_obj_pin", 8),
STACK_USAGE("bpf_obj_get", 8),
STACK_USAGE("bpf_link_init", 0),
STACK_USAGE("bpf_link_cleanup", 16),
STACK_USAGE("bpf_link_inc", 0),
STACK_USAGE("bpf_link_put_deferred", 16),
STACK_USAGE("bpf_link_put", 16),
STACK_USAGE("bpf_link_release", 0),
STACK_USAGE("bpf_link_show_fdinfo", 72),
STACK_USAGE("bpf_link_prime", 40),
STACK_USAGE("perfmon_capable", 0),
STACK_USAGE("bpf_link_settle", 8),
STACK_USAGE("bpf_link_new_fd", 0),
STACK_USAGE("bpf_link_get_from_fd", 8),
STACK_USAGE("bpf_capable", 0),
STACK_USAGE("bpf_tracing_link_release", 8),
STACK_USAGE("bpf_tracing_link_dealloc", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("bpf_tracing_link_show_fdinfo", 0),
STACK_USAGE("bpf_tracing_link_fill_link_info", 0),
STACK_USAGE("bpf_tracing_prog_attach", 112),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("bpf_raw_tp_link_release", 8),
STACK_USAGE("bpf_raw_tp_link_dealloc", 0),
STACK_USAGE("bpf_raw_tp_link_show_fdinfo", 0),
STACK_USAGE("bpf_raw_tp_link_fill_link_info", 32),
STACK_USAGE("bpf_perf_link_release", 8),
STACK_USAGE("bpf_perf_link_dealloc", 0),
STACK_USAGE("bpf_perf_link_attach", 72),
STACK_USAGE("bpf_raw_tracepoint_open", 216),
STACK_USAGE("attach_type_to_prog_type", 0),
STACK_USAGE("bpf_prog_attach", 40),
STACK_USAGE("bpf_prog_detach", 8),
STACK_USAGE("bpf_prog_query", 16),
STACK_USAGE("bpf_prog_test_run", 24),
STACK_USAGE("bpf_map_area_alloc", 16),
STACK_USAGE("bpf_obj_get_next_id", 48),
STACK_USAGE("bpf_map_get_curr_or_next", 16),
STACK_USAGE("bpf_map_area_mmapable_alloc", 0),
STACK_USAGE("bpf_prog_get_curr_or_next", 16),
STACK_USAGE("bpf_prog_by_id", 8),
STACK_USAGE("bpf_map_area_free", 0),
STACK_USAGE("bpf_prog_get_fd_by_id", 16),
STACK_USAGE("bpf_map_get_fd_by_id", 24),
STACK_USAGE("local_lock_release", 8),
STACK_USAGE("bpf_insn_prepare_dump", 88),
STACK_USAGE("bpf_map_init_from_attr", 0),
STACK_USAGE("bpf_map_alloc_id", 16),
STACK_USAGE("bpf_map_free_id", 16),
STACK_USAGE("bpf_obj_get_info_by_fd", 336),
STACK_USAGE("bpf_btf_load", 24),
STACK_USAGE("bpf_btf_get_fd_by_id", 8),
STACK_USAGE("bpf_task_fd_query_copy", 64),
STACK_USAGE("bpf_task_fd_query", 80),
STACK_USAGE("bpf_map_do_batch", 48),
STACK_USAGE("tracing_bpf_link_attach", 0),
STACK_USAGE("link_create", 48),
STACK_USAGE("bpf_map_kmalloc_node", 8),
STACK_USAGE("link_update", 32),
STACK_USAGE("link_detach", 16),
STACK_USAGE("bpf_map_kzalloc", 8),
STACK_USAGE("bpf_link_by_id", 8),
STACK_USAGE("bpf_link_get_fd_by_id", 16),
STACK_USAGE("bpf_stats_release", 0),
STACK_USAGE("bpf_enable_stats", 16),
STACK_USAGE("bpf_iter_create", 16),
STACK_USAGE("bpf_map_alloc_percpu", 8),
STACK_USAGE("bpf_prog_bind_map", 40),
STACK_USAGE("__sys_bpf", 192),
STACK_USAGE("__ia32_sys_bpf", 0),
STACK_USAGE("__x64_sys_bpf", 0),
STACK_USAGE("syscall_prog_is_valid_access", 0),
STACK_USAGE("bpf_map_free_deferred", 24),
STACK_USAGE("bpf_sys_bpf", 48),
STACK_USAGE("tracing_prog_func_proto", 0),
STACK_USAGE("bpf_sys_close", 0),
STACK_USAGE("bpf_kallsyms_lookup_name", 16),
STACK_USAGE("syscall_prog_func_proto", 0),
STACK_USAGE("get_uid", 8),
STACK_USAGE("bpf_map_put", 16),
STACK_USAGE("bpf_map_put_with_uref", 8),
STACK_USAGE("bpf_map_release", 8),
STACK_USAGE("bpf_map_show_fdinfo", 80),
STACK_USAGE("copy_from_bpfptr", 0),
STACK_USAGE("bpf_dummy_read", 0),
STACK_USAGE("bpf_dummy_write", 0),
STACK_USAGE("bpf_map_mmap_open", 0),
STACK_USAGE("bpf_map_mmap_close", 0),
STACK_USAGE("bpf_map_mmap", 32),
STACK_USAGE("bpf_map_poll", 0),
STACK_USAGE("bpf_map_new_fd", 16),
STACK_USAGE("bpf_get_file_flag", 0),
STACK_USAGE("rcu_read_unlock", 0),
STACK_USAGE("bpf_obj_name_cpy", 32),
STACK_USAGE("map_check_no_btf", 0),
STACK_USAGE("map_check_btf", 64),
STACK_USAGE("bpf_check_uarg_tail_zero", 0),
STACK_USAGE("map_create", 40),
STACK_USAGE("__bpf_map_get", 8),
STACK_USAGE("bpf_map_inc", 0),
STACK_USAGE("bpf_map_inc_with_uref", 0),
STACK_USAGE("bpf_map_get", 8),
STACK_USAGE("bpf_map_get_with_uref", 8),
STACK_USAGE("task_seq_show", 80),
STACK_USAGE("task_seq_stop", 64),
STACK_USAGE("task_file_seq_get_next", 64),
STACK_USAGE("task_file_seq_start", 8),
STACK_USAGE("task_file_seq_next", 8),
STACK_USAGE("bpf_iter_task_file", 0),
STACK_USAGE("task_file_seq_show", 96),
STACK_USAGE("task_file_seq_stop", 80),
STACK_USAGE("task_seq_get_next", 32),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("init_seq_pidns", 16),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("fini_seq_pidns", 0),
STACK_USAGE("task_vma_seq_get_next", 80),
STACK_USAGE("task_vma_seq_start", 8),
STACK_USAGE("task_vma_seq_next", 0),
STACK_USAGE("bpf_iter_task_vma", 0),
STACK_USAGE("task_vma_seq_show", 80),
STACK_USAGE("task_vma_seq_stop", 72),
STACK_USAGE("task_seq_start", 8),
STACK_USAGE("bpf_find_vma", 80),
STACK_USAGE("do_mmap_read_unlock", 8),
STACK_USAGE("task_iter_init", 8),
STACK_USAGE("task_seq_next", 16),
STACK_USAGE("bpf_iter_task", 0),
STACK_USAGE("tnum_xor", 0),
STACK_USAGE("tnum_mul", 0),
STACK_USAGE("tnum_intersect", 0),
STACK_USAGE("tnum_cast", 0),
STACK_USAGE("tnum_is_aligned", 0),
STACK_USAGE("tnum_in", 0),
STACK_USAGE("tnum_const", 0),
STACK_USAGE("tnum_strn", 0),
STACK_USAGE("tnum_sbin", 0),
STACK_USAGE("tnum_subreg", 0),
STACK_USAGE("tnum_clear_subreg", 0),
STACK_USAGE("tnum_const_subreg", 0),
STACK_USAGE("tnum_range", 8),
STACK_USAGE("tnum_lshift", 0),
STACK_USAGE("tnum_rshift", 0),
STACK_USAGE("tnum_arshift", 0),
STACK_USAGE("tnum_add", 0),
STACK_USAGE("tnum_sub", 0),
STACK_USAGE("tnum_and", 0),
STACK_USAGE("tnum_or", 0),
STACK_USAGE("__bpf_tramp_image_put_deferred", 16),
STACK_USAGE("__bpf_tramp_image_put_rcu", 8),
STACK_USAGE("__bpf_tramp_image_release", 0),
STACK_USAGE("__bpf_tramp_image_put_rcu_tasks", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("bpf_prog_has_trampoline", 0),
STACK_USAGE("bpf_trampoline_update", 80),
STACK_USAGE("bpf_jit_alloc_exec_page", 8),
STACK_USAGE("bpf_trampoline_link_prog", 40),
STACK_USAGE("bpf_trampoline_unlink_prog", 32),
STACK_USAGE("bpf_trampoline_get", 32),
STACK_USAGE("bpf_trampoline_put", 8),
STACK_USAGE("bpf_image_ksym_add", 8),
STACK_USAGE("__bpf_prog_enter", 8),
STACK_USAGE("__bpf_prog_exit", 32),
STACK_USAGE("__bpf_prog_enter_sleepable", 8),
STACK_USAGE("__bpf_prog_exit_sleepable", 32),
STACK_USAGE("__bpf_tramp_enter", 8),
STACK_USAGE("__bpf_tramp_exit", 16),
STACK_USAGE("arch_prepare_bpf_trampoline", 0),
STACK_USAGE("bpf_image_ksym_del", 8),
STACK_USAGE("init_trampolines", 0),
STACK_USAGE("push_insn", 24),
STACK_USAGE("copy_verifier_state", 72),
STACK_USAGE("check_cfg", 80),
STACK_USAGE("range_within", 0),
STACK_USAGE("check_ids", 0),
STACK_USAGE("pop_stack", 40),
STACK_USAGE("regsafe", 40),
STACK_USAGE("push_stack", 48),
STACK_USAGE("states_equal", 88),
STACK_USAGE("__mark_reg_known", 16),
STACK_USAGE("check_pseudo_btf_id", 96),
STACK_USAGE("check_map_prog_compatibility", 32),
STACK_USAGE("mark_reg_known_zero", 24),
STACK_USAGE("resolve_pseudo_ldimm64", 112),
STACK_USAGE("bpf_patch_insn_data", 88),
STACK_USAGE("verifier_remove_insns", 88),
STACK_USAGE("__update_reg_bounds", 8),
STACK_USAGE("do_check_common", 216),
STACK_USAGE("do_check_subprogs", 32),
STACK_USAGE("check_attach_modify_return", 8),
STACK_USAGE("__reg_deduce_bounds", 0),
STACK_USAGE("bpf_check_attach_target", 96),
STACK_USAGE("__reg_bound_offset", 40),
STACK_USAGE("check_attach_btf_id", 104),
STACK_USAGE("bpf_get_btf_vmlinux", 0),
STACK_USAGE("bpf_check", 456),
STACK_USAGE("__reg_combine_32_into_64", 48),
STACK_USAGE("__reg_combine_64_into_32", 40),
STACK_USAGE("mark_reg_unknown", 16),
STACK_USAGE("__mark_reg_not_init", 0),
STACK_USAGE("mark_reg_not_init", 16),
STACK_USAGE("mark_btf_ld_reg", 40),
STACK_USAGE("push_async_cb", 48),
STACK_USAGE("cmp_subprogs", 0),
STACK_USAGE("find_subprog", 24),
STACK_USAGE("add_subprog", 40),
STACK_USAGE("kfunc_desc_cmp_by_id_off", 0),
STACK_USAGE("kfunc_btf_cmp_by_off", 0),
STACK_USAGE("bpf_free_kfunc_btf_tab", 8),
STACK_USAGE("find_kfunc_desc_btf", 80),
STACK_USAGE("kfunc_desc_cmp_by_imm", 0),
STACK_USAGE("bpf_prog_has_kfunc_call", 0),
STACK_USAGE("bpf_jit_find_kfunc_model", 40),
STACK_USAGE("mark_reg_read", 104),
STACK_USAGE("check_reg_arg", 24),
STACK_USAGE("disasm_kfunc_name", 16),
STACK_USAGE("mark_all_scalars_precise", 0),
STACK_USAGE("__mark_chain_precision", 168),
STACK_USAGE("bpf_verifier_vlog", 32),
STACK_USAGE("mark_reg_stack_read", 32),
STACK_USAGE("check_stack_read", 152),
STACK_USAGE("bpf_verifier_log_write", 88),
STACK_USAGE("check_stack_write", 104),
STACK_USAGE("__check_mem_access", 8),
STACK_USAGE("check_mem_region_access", 72),
STACK_USAGE("verbose", 88),
STACK_USAGE("check_map_access", 72),
STACK_USAGE("check_packet_access", 56),
STACK_USAGE("bpf_log", 88),
STACK_USAGE("check_ctx_access", 80),
STACK_USAGE("check_sock_access", 152),
STACK_USAGE("verbose_linfo", 120),
STACK_USAGE("check_ptr_alignment", 120),
STACK_USAGE("__check_ptr_off_reg", 152),
STACK_USAGE("check_ptr_off_reg", 0),
STACK_USAGE("check_tp_buffer_access", 104),
STACK_USAGE("verbose_invalid_scalar", 88),
STACK_USAGE("check_buffer_access", 104),
STACK_USAGE("zext_32_to_64", 8),
STACK_USAGE("coerce_reg_to_size", 16),
STACK_USAGE("bpf_map_direct_read", 40),
STACK_USAGE("check_ptr_to_btf_access", 136),
STACK_USAGE("check_ptr_to_map_access", 72),
STACK_USAGE("check_stack_access_within_bounds", 104),
STACK_USAGE("check_mem_access", 120),
STACK_USAGE("check_stack_range_initialized", 168),
STACK_USAGE("check_helper_mem_access", 152),
STACK_USAGE("check_mem_size_reg", 40),
STACK_USAGE("is_acquire_function", 0),
STACK_USAGE("check_mem_reg", 136),
STACK_USAGE("check_kfunc_mem_size_reg", 144),
STACK_USAGE("copy_from_bpfptr_offset", 0),
STACK_USAGE("process_spin_lock", 0),
STACK_USAGE("process_timer_func", 0),
STACK_USAGE("check_func_arg_reg_off", 0),
STACK_USAGE("reg_type_str", 72),
STACK_USAGE("may_update_sockmap", 0),
STACK_USAGE("check_map_func_compatibility", 32),
STACK_USAGE("clear_all_pkt_pointers", 40),
STACK_USAGE("release_reference", 40),
STACK_USAGE("clear_caller_saved_regs", 16),
STACK_USAGE("copy_to_bpfptr_offset", 0),
STACK_USAGE("__check_func_call", 96),
STACK_USAGE("map_set_for_each_callback_args", 24),
STACK_USAGE("set_callee_state", 0),
STACK_USAGE("check_func_call", 56),
STACK_USAGE("set_map_elem_callback_state", 8),
STACK_USAGE("set_loop_callback_state", 8),
STACK_USAGE("set_timer_callback_state", 24),
STACK_USAGE("set_find_vma_callback_state", 24),
STACK_USAGE("prepare_func_exit", 88),
STACK_USAGE("do_refine_retval_range", 40),
STACK_USAGE("record_func_key", 40),
STACK_USAGE("check_reference_leak", 24),
STACK_USAGE("check_bpf_snprintf_call", 40),
STACK_USAGE("check_get_func_ip", 24),
STACK_USAGE("check_helper_call", 296),
STACK_USAGE("print_verifier_state", 184),
STACK_USAGE("check_kfunc_call", 88),
STACK_USAGE("check_reg_sane_offset", 104),
STACK_USAGE("sanitize_speculative_path", 40),
STACK_USAGE("sanitize_ptr_alu", 160),
STACK_USAGE("sanitize_err", 0),
STACK_USAGE("sanitize_check_bounds", 104),
STACK_USAGE("adjust_ptr_min_max_vals", 296),
STACK_USAGE("scalar32_min_max_lsh", 24),
STACK_USAGE("scalar_min_max_lsh", 16),
STACK_USAGE("scalar32_min_max_rsh", 32),
STACK_USAGE("print_insn_state", 24),
STACK_USAGE("scalar_min_max_rsh", 40),
STACK_USAGE("scalar32_min_max_arsh", 16),
STACK_USAGE("scalar_min_max_arsh", 8),
STACK_USAGE("adjust_reg_min_max_vals", 392),
STACK_USAGE("find_good_pkt_pointers", 24),
STACK_USAGE("is_branch_taken", 24),
STACK_USAGE("is_pkt_ptr_branch_taken", 0),
STACK_USAGE("reg_set_min_max", 96),
STACK_USAGE("__reg_combine_min_max", 56),
STACK_USAGE("reg_combine_min_max", 0),
STACK_USAGE("mark_ptr_or_null_regs", 16),
STACK_USAGE("try_match_pkt_pointers", 24),
STACK_USAGE("acquire_reference_state", 56),
STACK_USAGE("find_equal_scalars", 8),
STACK_USAGE("check_cond_jmp_op", 128),
STACK_USAGE("check_ld_imm", 48),
STACK_USAGE("check_ld_abs", 40),
STACK_USAGE("check_return_code", 136),
STACK_USAGE("__ia32_sys_capget", 0),
STACK_USAGE("__se_sys_capget", 104),
STACK_USAGE("__x64_sys_capget", 0),
STACK_USAGE("__ia32_sys_capset", 0),
STACK_USAGE("__se_sys_capset", 104),
STACK_USAGE("__x64_sys_capset", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("has_ns_capability", 24),
STACK_USAGE("has_capability", 0),
STACK_USAGE("file_caps_disable", 0),
STACK_USAGE("has_ns_capability_noaudit", 24),
STACK_USAGE("has_capability_noaudit", 0),
STACK_USAGE("ns_capable", 8),
STACK_USAGE("ns_capable_noaudit", 8),
STACK_USAGE("ns_capable_setid", 8),
STACK_USAGE("capable", 8),
STACK_USAGE("file_ns_capable", 0),
STACK_USAGE("privileged_wrt_inode_uidgid", 24),
STACK_USAGE("capable_wrt_inode_uidgid", 32),
STACK_USAGE("ptracer_capable", 16),
STACK_USAGE("cap_validate_magic", 56),
STACK_USAGE("check_cgroupfs_options", 48),
STACK_USAGE("cgroup1_reconfigure", 64),
STACK_USAGE("cgroup1_get_tree", 56),
STACK_USAGE("cgroup1_wq_init", 0),
STACK_USAGE("cgroup_no_v1", 64),
STACK_USAGE("cgroup1_pidlist_destroy_all", 24),
STACK_USAGE("cgroup_pidlist_destroy_work_fn", 24),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("cmppid", 0),
STACK_USAGE("percpu_ref_tryget_live", 8),
STACK_USAGE("cgroup_pidlist_start", 200),
STACK_USAGE("cgroup_put", 16),
STACK_USAGE("cgroup_pidlist_stop", 8),
STACK_USAGE("cgroup1_ssid_disabled", 0),
STACK_USAGE("cgroup_pidlist_next", 0),
STACK_USAGE("cgroup_pidlist_show", 0),
STACK_USAGE("__cgroup1_procs_write", 80),
STACK_USAGE("cgroup1_procs_write", 0),
STACK_USAGE("cgroup1_tasks_write", 0),
STACK_USAGE("cgroup_release_agent_write", 40),
STACK_USAGE("cgroup_attach_task_all", 48),
STACK_USAGE("cgroup_release_agent_show", 16),
STACK_USAGE("cgroup_sane_behavior_show", 0),
STACK_USAGE("cgroup_read_notify_on_release", 0),
STACK_USAGE("cgroup_write_notify_on_release", 0),
STACK_USAGE("cgroup_clone_children_read", 0),
STACK_USAGE("cgroup_clone_children_write", 0),
STACK_USAGE("proc_cgroupstats_show", 32),
STACK_USAGE("cgroupstats_build", 176),
STACK_USAGE("cgroup1_check_for_release", 8),
STACK_USAGE("cgroup1_release_agent", 104),
STACK_USAGE("cgroup1_rename", 40),
STACK_USAGE("cgroup1_show_options", 40),
STACK_USAGE("cgroup1_parse_param", 56),
STACK_USAGE("cgroup_transfer_tasks", 272),
STACK_USAGE("trace_cgroup_rename", 0),
STACK_USAGE("__traceiter_cgroup_freeze", 24),
STACK_USAGE("__traceiter_cgroup_unfreeze", 24),
STACK_USAGE("__bpf_trace_cgroup_root", 0),
STACK_USAGE("perf_trace_cgroup_root", 88),
STACK_USAGE("trace_event_raw_event_cgroup_root", 88),
STACK_USAGE("trace_raw_output_cgroup_root", 24),
STACK_USAGE("find_css_set", 168),
STACK_USAGE("__bpf_trace_cgroup_migrate", 0),
STACK_USAGE("perf_trace_cgroup_migrate", 120),
STACK_USAGE("trace_event_raw_event_cgroup_migrate", 128),
STACK_USAGE("trace_raw_output_cgroup_migrate", 24),
STACK_USAGE("cgroup_root_from_kf", 0),
STACK_USAGE("cgroup_free_root", 0),
STACK_USAGE("cset_cgroup_from_root", 16),
STACK_USAGE("task_cgroup_from_root", 24),
STACK_USAGE("__traceiter_cgroup_attach_task", 40),
STACK_USAGE("cgroup_kn_unlock", 16),
STACK_USAGE("__traceiter_cgroup_transfer_tasks", 40),
STACK_USAGE("cgroup_kn_lock_live", 24),
STACK_USAGE("__bpf_trace_cgroup_event", 0),
STACK_USAGE("perf_trace_cgroup_event", 88),
STACK_USAGE("trace_event_raw_event_cgroup_event", 104),
STACK_USAGE("trace_raw_output_cgroup_event", 24),
STACK_USAGE("css_populate_dir", 48),
STACK_USAGE("rebind_subsystems", 120),
STACK_USAGE("cgroup_show_path", 40),
STACK_USAGE("cgroup2_parse_param", 32),
STACK_USAGE("cgroup_show_options", 8),
STACK_USAGE("cgroup_reconfigure", 0),
STACK_USAGE("__traceiter_cgroup_notify_populated", 32),
STACK_USAGE("init_cgroup_housekeeping", 8),
STACK_USAGE("init_cgroup_root", 16),
STACK_USAGE("cgroup_setup_root", 88),
STACK_USAGE("put_css_set", 16),
STACK_USAGE("__traceiter_cgroup_notify_frozen", 32),
STACK_USAGE("cgroup_do_get_tree", 40),
STACK_USAGE("cgroup_fs_context_free", 16),
STACK_USAGE("cgroup_get_tree", 16),
STACK_USAGE("cgroup_init_fs_context", 16),
STACK_USAGE("cgroup_kill_sb", 24),
STACK_USAGE("percpu_ref_get", 8),
STACK_USAGE("cpuset_init_fs_context", 24),
STACK_USAGE("cgroup_path_ns_locked", 24),
STACK_USAGE("cgroup_path_ns", 32),
STACK_USAGE("task_cgroup_path", 40),
STACK_USAGE("cgroup_migrate_add_task", 32),
STACK_USAGE("cgroup_taskset_first", 0),
STACK_USAGE("cgroup_taskset_next", 0),
STACK_USAGE("cgroup_migrate_execute", 112),
STACK_USAGE("cgroup_migrate_vet_dst", 0),
STACK_USAGE("cgroup_ssid_enabled", 0),
STACK_USAGE("cgroup_migrate_finish", 48),
STACK_USAGE("cgroup_migrate_add_src", 32),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("cgroup_migrate_prepare_dst", 56),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("cgroup_migrate", 40),
STACK_USAGE("cgroup_attach_task", 168),
STACK_USAGE("cgroup_procs_write_start", 40),
STACK_USAGE("cgroup_procs_write_finish", 8),
STACK_USAGE("cgroup_print_ss_mask", 72),
STACK_USAGE("cgroup_controllers_show", 0),
STACK_USAGE("cgroup_subtree_control_show", 0),
STACK_USAGE("cgroup_lock_and_drain_offline", 96),
STACK_USAGE("cgroup_save_control", 16),
STACK_USAGE("cgroup_propagate_control", 72),
STACK_USAGE("cgroup_apply_control_enable", 64),
STACK_USAGE("cgroup_on_dfl", 0),
STACK_USAGE("cgroup_idr_alloc", 32),
STACK_USAGE("cgroup_apply_control", 160),
STACK_USAGE("cgroup_finalize_control", 72),
STACK_USAGE("cgroup_subtree_control_write", 112),
STACK_USAGE("__traceiter_cgroup_setup_root", 16),
STACK_USAGE("trace_cgroup_setup_root", 0),
STACK_USAGE("cgroup_type_show", 0),
STACK_USAGE("cgroup_type_write", 56),
STACK_USAGE("cgroup_max_descendants_show", 0),
STACK_USAGE("cgroup_max_descendants_write", 40),
STACK_USAGE("percpu_ref_put", 8),
STACK_USAGE("local_lock_release", 8),
STACK_USAGE("cgroup_max_depth_show", 0),
STACK_USAGE("cgroup_max_depth_write", 40),
STACK_USAGE("cgroup_is_threaded", 0),
STACK_USAGE("cgroup_events_show", 16),
STACK_USAGE("cgroup_stat_show", 16),
STACK_USAGE("cpu_stat_show", 32),
STACK_USAGE("css_tryget_online", 16),
STACK_USAGE("cgroup_psi_enabled", 0),
STACK_USAGE("cgroup_freeze_show", 0),
STACK_USAGE("cgroup_freeze_write", 40),
STACK_USAGE("cgroup_kill_write", 176),
STACK_USAGE("cgroup_file_open", 24),
STACK_USAGE("cgroup_file_release", 8),
STACK_USAGE("cgroup_file_write", 48),
STACK_USAGE("cgroup_file_poll", 0),
STACK_USAGE("cgroup_seqfile_start", 0),
STACK_USAGE("cgroup_seqfile_next", 0),
STACK_USAGE("cgroup_seqfile_stop", 0),
STACK_USAGE("cgroup_seqfile_show", 8),
STACK_USAGE("cgroup_is_thread_root", 0),
STACK_USAGE("cgroup_file_notify_timer", 16),
STACK_USAGE("cgroup_addrm_files", 296),
STACK_USAGE("cgroup_apply_cftypes", 64),
STACK_USAGE("__traceiter_cgroup_destroy_root", 16),
STACK_USAGE("cgroup_init_cftypes", 32),
STACK_USAGE("cgroup_rm_cftypes_locked", 16),
STACK_USAGE("cgroup_rm_cftypes", 8),
STACK_USAGE("cgroup_add_cftypes", 24),
STACK_USAGE("cgroup_add_dfl_cftypes", 0),
STACK_USAGE("cgroup_tryget", 16),
STACK_USAGE("cgroup_add_legacy_cftypes", 0),
STACK_USAGE("cgroup_file_notify", 16),
STACK_USAGE("css_next_child", 16),
STACK_USAGE("cgroup_control", 0),
STACK_USAGE("css_next_descendant_pre", 16),
STACK_USAGE("css_rightmost_descendant", 24),
STACK_USAGE("css_next_descendant_post", 16),
STACK_USAGE("css_has_online_children", 24),
STACK_USAGE("css_task_iter_advance_css_set", 16),
STACK_USAGE("css_task_iter_advance", 16),
STACK_USAGE("css_task_iter_start", 24),
STACK_USAGE("css_task_iter_next", 8),
STACK_USAGE("css_task_iter_end", 24),
STACK_USAGE("cgroup_procs_release", 0),
STACK_USAGE("cgroup_procs_next", 0),
STACK_USAGE("__traceiter_cgroup_remount", 16),
STACK_USAGE("__cgroup_procs_start", 40),
STACK_USAGE("cgroup_procs_start", 0),
STACK_USAGE("cgroup_procs_show", 8),
STACK_USAGE("cgroup_attach_permissions", 48),
STACK_USAGE("__cgroup_procs_write", 72),
STACK_USAGE("cgroup_procs_write", 8),
STACK_USAGE("cgroup_threads_start", 0),
STACK_USAGE("cgroup_threads_write", 8),
STACK_USAGE("css_free_rwork_fn", 40),
STACK_USAGE("css_release_work_fn", 32),
STACK_USAGE("css_release", 16),
STACK_USAGE("init_and_link_css", 40),
STACK_USAGE("cgroup_mkdir", 160),
STACK_USAGE("task_dfl_cgroup", 16),
STACK_USAGE("__bpf_trace_cgroup", 0),
STACK_USAGE("perf_trace_cgroup", 88),
STACK_USAGE("trace_event_raw_event_cgroup", 96),
STACK_USAGE("trace_raw_output_cgroup", 24),
STACK_USAGE("css_killed_work_fn", 24),
STACK_USAGE("css_killed_ref_fn", 16),
STACK_USAGE("cgroup_e_css", 24),
STACK_USAGE("kill_css", 32),
STACK_USAGE("cgroup_destroy_locked", 40),
STACK_USAGE("cgroup_rmdir", 32),
STACK_USAGE("cgroup_init_subsys", 32),
STACK_USAGE("cgroup_init_early", 32),
STACK_USAGE("cgroup_init", 48),
STACK_USAGE("cgroup_get_e_css", 24),
STACK_USAGE("cgroup_wq_init", 0),
STACK_USAGE("cgroup_path_from_kernfs_id", 24),
STACK_USAGE("cgroup_get_from_id", 24),
STACK_USAGE("proc_cgroup_show", 72),
STACK_USAGE("cgroup_fork", 0),
STACK_USAGE("cgroup_get_live", 0),
STACK_USAGE("cgroup_css_set_put_fork", 32),
STACK_USAGE("__cgroup_task_count", 8),
STACK_USAGE("cgroup_can_fork", 104),
STACK_USAGE("cgroup_cancel_fork", 16),
STACK_USAGE("cgroup_post_fork", 88),
STACK_USAGE("cgroup_exit", 56),
STACK_USAGE("cgroup_task_count", 16),
STACK_USAGE("cgroup_release", 56),
STACK_USAGE("cgroup_free", 16),
STACK_USAGE("cgroup_disable", 48),
STACK_USAGE("enable_debug_cgroup", 0),
STACK_USAGE("enable_cgroup_debug", 0),
STACK_USAGE("css_tryget_online_from_dir", 32),
STACK_USAGE("of_css", 0),
STACK_USAGE("css_from_id", 16),
STACK_USAGE("cgroup_get_from_path", 16),
STACK_USAGE("cgroup_get_from_fd", 16),
STACK_USAGE("cgroup_parse_float", 48),
STACK_USAGE("cgroup_sk_alloc", 24),
STACK_USAGE("cgroup_sk_clone", 8),
STACK_USAGE("cgroup_sk_free", 8),
STACK_USAGE("delegate_show", 72),
STACK_USAGE("features_show", 0),
STACK_USAGE("cgroup_sysfs_init", 0),
STACK_USAGE("cgroup_threadgroup_change_end", 0),
STACK_USAGE("__traceiter_cgroup_mkdir", 24),
STACK_USAGE("trace_cgroup_mkdir", 0),
STACK_USAGE("cgroup_update_populated", 32),
STACK_USAGE("__traceiter_cgroup_rmdir", 24),
STACK_USAGE("css_set_move_task", 64),
STACK_USAGE("__traceiter_cgroup_release", 24),
STACK_USAGE("put_css_set_locked", 48),
STACK_USAGE("__traceiter_cgroup_rename", 24),
STACK_USAGE("rebuild_sched_domains_locked", 240),
STACK_USAGE("rebuild_sched_domains", 0),
STACK_USAGE("update_parent_subparts_cpumask", 80),
STACK_USAGE("update_cpumasks_hier", 192),
STACK_USAGE("update_sibling_cpumasks", 32),
STACK_USAGE("cpuset_migrate_mm_workfn", 8),
STACK_USAGE("cpuset_migrate_mm", 32),
STACK_USAGE("cpuset_post_attach", 0),
STACK_USAGE("cpuset_change_task_nodemask", 56),
STACK_USAGE("update_tasks_nodemask", 160),
STACK_USAGE("current_cpuset_is_being_rebound", 16),
STACK_USAGE("update_flag", 160),
STACK_USAGE("update_prstate", 200),
STACK_USAGE("cpuset_can_attach", 64),
STACK_USAGE("cpuset_cancel_attach", 16),
STACK_USAGE("cpuset_attach", 64),
STACK_USAGE("cpuset_write_u64", 32),
STACK_USAGE("cpuset_write_s64", 32),
STACK_USAGE("cpuset_write_resmask", 128),
STACK_USAGE("cpuset_common_seq_show", 32),
STACK_USAGE("cpuset_read_u64", 24),
STACK_USAGE("cpuset_read_s64", 0),
STACK_USAGE("sched_partition_show", 8),
STACK_USAGE("sched_partition_write", 32),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("cpuset_css_alloc", 8),
STACK_USAGE("cpuset_css_online", 16),
STACK_USAGE("cpuset_css_offline", 8),
STACK_USAGE("cpuset_css_free", 0),
STACK_USAGE("cpuset_bind", 0),
STACK_USAGE("cpuset_fork", 24),
STACK_USAGE("cpuset_init", 0),
STACK_USAGE("cpuset_force_rebuild", 0),
STACK_USAGE("css_get", 8),
STACK_USAGE("cpuset_hotplug_workfn", 240),
STACK_USAGE("cpuset_update_active_cpus", 0),
STACK_USAGE("cpuset_wait_for_hotplug", 0),
STACK_USAGE("cpuset_init_smp", 0),
STACK_USAGE("cpuset_cpus_allowed", 24),
STACK_USAGE("cpuset_cpus_allowed_fallback", 24),
STACK_USAGE("cpuset_init_current_mems_allowed", 0),
STACK_USAGE("cpuset_mems_allowed", 24),
STACK_USAGE("cpuset_nodemask_valid_mems_allowed", 0),
STACK_USAGE("__cpuset_node_allowed", 32),
STACK_USAGE("cpuset_read_lock", 0),
STACK_USAGE("cpuset_mem_spread_node", 8),
STACK_USAGE("cpuset_slab_spread_node", 8),
STACK_USAGE("cpuset_read_unlock", 0),
STACK_USAGE("cpuset_mems_allowed_intersects", 0),
STACK_USAGE("cpuset_print_current_mems_allowed", 24),
STACK_USAGE("css_tryget_online", 16),
STACK_USAGE("__cpuset_memory_pressure_bump", 24),
STACK_USAGE("proc_cpuset_show", 40),
STACK_USAGE("cpuset_task_status_allowed", 24),
STACK_USAGE("css_put", 16),
STACK_USAGE("guarantee_online_cpus", 24),
STACK_USAGE("validate_change", 40),
STACK_USAGE("update_domain_attr_tree", 24),
STACK_USAGE("cgroup_enter_frozen", 16),
STACK_USAGE("cgroup_leave_frozen", 24),
STACK_USAGE("trace_cgroup_notify_frozen", 0),
STACK_USAGE("cgroup_freezer_migrate_task", 40),
STACK_USAGE("cgroup_freeze", 168),
STACK_USAGE("cgroup_update_frozen", 32),
STACK_USAGE("freezer_css_online", 16),
STACK_USAGE("freezer_css_offline", 8),
STACK_USAGE("freezer_css_free", 0),
STACK_USAGE("freezer_attach", 40),
STACK_USAGE("freezer_fork", 24),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("freezer_read", 152),
STACK_USAGE("freezer_apply_state", 136),
STACK_USAGE("css_tryget_online", 16),
STACK_USAGE("css_put", 16),
STACK_USAGE("freezer_write", 48),
STACK_USAGE("freezer_self_freezing_read", 0),
STACK_USAGE("freezer_parent_freezing_read", 0),
STACK_USAGE("cgroup_freezing", 16),
STACK_USAGE("freezer_css_alloc", 0),
STACK_USAGE("cgroupns_get", 16),
STACK_USAGE("cgroupns_put", 0),
STACK_USAGE("cgroupns_owner", 0),
STACK_USAGE("cgroup_namespaces_init", 0),
STACK_USAGE("free_cgroup_ns", 24),
STACK_USAGE("copy_cgroup_ns", 48),
STACK_USAGE("cgroupns_install", 24),
STACK_USAGE("cgroup_rstat_flush_locked", 80),
STACK_USAGE("cgroup_rstat_flush", 8),
STACK_USAGE("cgroup_rstat_flush_irqsafe", 16),
STACK_USAGE("cgroup_rstat_flush_hold", 8),
STACK_USAGE("cgroup_rstat_flush_release", 0),
STACK_USAGE("cgroup_rstat_init", 24),
STACK_USAGE("cgroup_rstat_updated", 24),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("cgroup_rstat_exit", 24),
STACK_USAGE("cgroup_rstat_boot", 16),
STACK_USAGE("cgroup_base_stat_cputime_account_end", 24),
STACK_USAGE("__cgroup_account_cputime", 24),
STACK_USAGE("__cgroup_account_cputime_field", 32),
STACK_USAGE("cgroup_base_stat_cputime_show", 64),
STACK_USAGE("__ia32_compat_sys_sched_setaffinity", 40),
STACK_USAGE("__ia32_compat_sys_sched_getaffinity", 56),
STACK_USAGE("get_compat_sigevent", 0),
STACK_USAGE("compat_get_bitmap", 0),
STACK_USAGE("compat_put_bitmap", 0),
STACK_USAGE("get_compat_sigset", 0),
STACK_USAGE("__ia32_compat_sys_sigprocmask", 56),
STACK_USAGE("put_compat_rusage", 80),
STACK_USAGE("ikconfig_read_current", 0),
STACK_USAGE("ikconfig_init", 8),
STACK_USAGE("ikconfig_cleanup", 0),
STACK_USAGE("takedown_cpu", 32),
STACK_USAGE("cpuhp_lock_release", 0),
STACK_USAGE("cpuhp_complete_idle_dead", 0),
STACK_USAGE("cpuhp_report_idle_dead", 8),
STACK_USAGE("__bpf_trace_cpuhp_enter", 0),
STACK_USAGE("__traceiter_cpuhp_enter", 40),
STACK_USAGE("perf_trace_cpuhp_enter", 80),
STACK_USAGE("trace_cpuhp_enter", 0),
STACK_USAGE("trace_event_raw_event_cpuhp_enter", 96),
STACK_USAGE("trace_raw_output_cpuhp_enter", 24),
STACK_USAGE("_cpu_down", 72),
STACK_USAGE("cpu_device_down", 16),
STACK_USAGE("remove_cpu", 8),
STACK_USAGE("smp_shutdown_nonboot_cpus", 24),
STACK_USAGE("notify_cpu_starting", 32),
STACK_USAGE("cpuhp_online_idle", 8),
STACK_USAGE("_cpu_up", 72),
STACK_USAGE("cpu_up", 32),
STACK_USAGE("cpu_device_up", 0),
STACK_USAGE("add_cpu", 8),
STACK_USAGE("bringup_hibernate_cpu", 16),
STACK_USAGE("bringup_nonboot_cpus", 16),
STACK_USAGE("freeze_secondary_cpus", 24),
STACK_USAGE("arch_thaw_secondary_cpus_begin", 0),
STACK_USAGE("arch_thaw_secondary_cpus_end", 0),
STACK_USAGE("thaw_secondary_cpus", 16),
STACK_USAGE("alloc_frozen_cpus", 0),
STACK_USAGE("cpu_hotplug_pm_callback", 8),
STACK_USAGE("cpu_hotplug_pm_sync_init", 0),
STACK_USAGE("cpuhp_invoke_callback", 112),
STACK_USAGE("cpuhp_issue_call", 56),
STACK_USAGE("__cpuhp_state_add_instance_cpuslocked", 48),
STACK_USAGE("__cpuhp_state_add_instance", 24),
STACK_USAGE("__cpuhp_setup_state_cpuslocked", 64),
STACK_USAGE("__cpuhp_setup_state", 48),
STACK_USAGE("__cpuhp_state_remove_instance", 32),
STACK_USAGE("__cpuhp_remove_state_cpuslocked", 40),
STACK_USAGE("__cpuhp_remove_state", 16),
STACK_USAGE("cpuhp_smt_disable", 24),
STACK_USAGE("cpuhp_smt_enable", 16),
STACK_USAGE("trace_suspend_resume", 0),
STACK_USAGE("state_show", 0),
STACK_USAGE("target_store", 56),
STACK_USAGE("target_show", 0),
STACK_USAGE("fail_store", 48),
STACK_USAGE("fail_show", 0),
STACK_USAGE("states_show", 32),
STACK_USAGE("control_show", 0),
STACK_USAGE("control_store", 24),
STACK_USAGE("active_show", 0),
STACK_USAGE("cpuhp_sysfs_init", 16),
STACK_USAGE("init_cpu_present", 0),
STACK_USAGE("init_cpu_possible", 0),
STACK_USAGE("init_cpu_online", 0),
STACK_USAGE("set_cpu_online", 0),
STACK_USAGE("boot_cpu_init", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("boot_cpu_hotplug_init", 0),
STACK_USAGE("mitigations_parse_cmdline", 8),
STACK_USAGE("cpu_mitigations_off", 0),
STACK_USAGE("cpu_mitigations_auto_nosmt", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("cpu_maps_update_begin", 0),
STACK_USAGE("cpu_maps_update_done", 0),
STACK_USAGE("cpus_read_lock", 0),
STACK_USAGE("cpus_read_trylock", 8),
STACK_USAGE("cpus_read_unlock", 0),
STACK_USAGE("cpus_write_lock", 0),
STACK_USAGE("cpus_write_unlock", 0),
STACK_USAGE("lockdep_assert_cpus_held", 0),
STACK_USAGE("lockdep_is_cpus_held", 0),
STACK_USAGE("lockdep_acquire_cpus_lock", 0),
STACK_USAGE("lockdep_release_cpus_lock", 0),
STACK_USAGE("cpu_hotplug_disable", 0),
STACK_USAGE("__bpf_trace_cpuhp_multi_enter", 0),
STACK_USAGE("__traceiter_cpuhp_multi_enter", 48),
STACK_USAGE("perf_trace_cpuhp_multi_enter", 80),
STACK_USAGE("trace_cpuhp_multi_enter", 0),
STACK_USAGE("trace_event_raw_event_cpuhp_multi_enter", 96),
STACK_USAGE("trace_raw_output_cpuhp_multi_enter", 24),
STACK_USAGE("cpu_hotplug_enable", 8),
STACK_USAGE("arch_smt_update", 0),
STACK_USAGE("cpu_smt_disable", 8),
STACK_USAGE("cpu_smt_check_topology", 0),
STACK_USAGE("smt_cmdline_disable", 8),
STACK_USAGE("cpu_smt_possible", 0),
STACK_USAGE("cpuhp_kick_ap", 32),
STACK_USAGE("bringup_cpu", 32),
STACK_USAGE("finish_cpu", 0),
STACK_USAGE("__bpf_trace_cpuhp_exit", 0),
STACK_USAGE("__traceiter_cpuhp_exit", 40),
STACK_USAGE("perf_trace_cpuhp_exit", 72),
STACK_USAGE("trace_cpuhp_exit", 0),
STACK_USAGE("trace_event_raw_event_cpuhp_exit", 96),
STACK_USAGE("trace_raw_output_cpuhp_exit", 24),
STACK_USAGE("cpuhp_create", 8),
STACK_USAGE("cpuhp_should_run", 0),
STACK_USAGE("cpuhp_thread_fun", 56),
STACK_USAGE("cpuhp_kick_ap_work", 40),
STACK_USAGE("cpuhp_threads_init", 0),
STACK_USAGE("clear_tasks_mm_cpumask", 32),
STACK_USAGE("cpuhp_lock_acquire", 0),
STACK_USAGE("take_cpu_down", 24),
STACK_USAGE("parse_crashkernel_simple", 48),
STACK_USAGE("parse_crashkernel_suffix", 48),
STACK_USAGE("get_last_crashkernel", 48),
STACK_USAGE("__parse_crashkernel", 40),
STACK_USAGE("parse_crashkernel", 0),
STACK_USAGE("parse_crashkernel_high", 0),
STACK_USAGE("parse_crashkernel_low", 0),
STACK_USAGE("parse_crashkernel_dummy", 0),
STACK_USAGE("append_elf_note", 48),
STACK_USAGE("final_note", 0),
STACK_USAGE("crash_update_vmcoreinfo_safecopy", 8),
STACK_USAGE("crash_save_vmcoreinfo", 16),
STACK_USAGE("vmcoreinfo_append_str", 184),
STACK_USAGE("arch_crash_save_vmcoreinfo", 0),
STACK_USAGE("paddr_vmcoreinfo_note", 0),
STACK_USAGE("crash_save_vmcoreinfo_init", 24),
STACK_USAGE("parse_crashkernel_mem", 88),
STACK_USAGE("setup_elfcorehdr", 32),
STACK_USAGE("__put_cred", 0),
STACK_USAGE("exit_creds", 8),
STACK_USAGE("get_task_cred", 16),
STACK_USAGE("cred_alloc_blank", 8),
STACK_USAGE("prepare_creds", 24),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("prepare_exec_creds", 8),
STACK_USAGE("copy_creds", 32),
STACK_USAGE("commit_creds", 24),
STACK_USAGE("abort_creds", 0),
STACK_USAGE("override_creds", 0),
STACK_USAGE("revert_creds", 0),
STACK_USAGE("cred_fscmp", 0),
STACK_USAGE("set_cred_ucounts", 16),
STACK_USAGE("cred_init", 0),
STACK_USAGE("prepare_kernel_cred", 16),
STACK_USAGE("set_security_override", 0),
STACK_USAGE("set_security_override_from_ctx", 32),
STACK_USAGE("set_create_files_as", 0),
STACK_USAGE("creds_are_invalid", 0),
STACK_USAGE("dump_invalid_creds", 32),
STACK_USAGE("__invalid_creds", 24),
STACK_USAGE("__validate_process_creds", 24),
STACK_USAGE("validate_creds_for_do_exit", 0),
STACK_USAGE("put_cred_rcu", 16),
STACK_USAGE("__delayacct_blkio_end", 16),
STACK_USAGE("delayacct_add_tsk", 16),
STACK_USAGE("__delayacct_blkio_ticks", 24),
STACK_USAGE("__delayacct_freepages_start", 0),
STACK_USAGE("__delayacct_freepages_end", 16),
STACK_USAGE("__delayacct_thrashing_start", 0),
STACK_USAGE("__delayacct_thrashing_end", 16),
STACK_USAGE("__delayacct_swapin_start", 0),
STACK_USAGE("__delayacct_swapin_end", 16),
STACK_USAGE("__delayacct_compact_start", 0),
STACK_USAGE("__delayacct_compact_end", 16),
STACK_USAGE("delayacct_setup_enable", 0),
STACK_USAGE("delayacct_init", 0),
STACK_USAGE("sysctl_delayacct", 128),
STACK_USAGE("__delayacct_tsk_init", 8),
STACK_USAGE("__delayacct_blkio_start", 0),
STACK_USAGE("proc_dma_show", 8),
STACK_USAGE("proc_dma_init", 0),
STACK_USAGE("request_dma", 0),
STACK_USAGE("free_dma", 0),
STACK_USAGE("dma_contiguous_reserve", 0),
STACK_USAGE("dma_contiguous_early_fixup", 0),
STACK_USAGE("dma_contiguous_reserve_area", 24),
STACK_USAGE("dma_alloc_from_contiguous", 0),
STACK_USAGE("dma_release_from_contiguous", 0),
STACK_USAGE("dma_alloc_contiguous", 16),
STACK_USAGE("dma_free_contiguous", 24),
STACK_USAGE("early_cma", 32),
STACK_USAGE("__dma_direct_alloc_pages", 72),
STACK_USAGE("dma_direct_alloc", 40),
STACK_USAGE("dma_direct_free", 32),
STACK_USAGE("dma_direct_alloc_pages", 32),
STACK_USAGE("dma_direct_free_pages", 0),
STACK_USAGE("dma_direct_get_required_mask", 8),
STACK_USAGE("dma_direct_sync_sg_for_device", 40),
STACK_USAGE("dma_direct_sync_sg_for_cpu", 40),
STACK_USAGE("dma_direct_unmap_sg", 72),
STACK_USAGE("dma_direct_map_sg", 88),
STACK_USAGE("dma_direct_map_resource", 16),
STACK_USAGE("dma_direct_get_sgtable", 32),
STACK_USAGE("dma_direct_can_mmap", 0),
STACK_USAGE("dma_direct_mmap", 32),
STACK_USAGE("dma_direct_supported", 0),
STACK_USAGE("dma_direct_max_mapping_size", 16),
STACK_USAGE("dma_direct_need_sync", 0),
STACK_USAGE("dma_direct_set_offset", 40),
STACK_USAGE("dma_dummy_map_page", 0),
STACK_USAGE("dma_dummy_map_sg", 0),
STACK_USAGE("dma_dummy_supported", 0),
STACK_USAGE("dma_dummy_mmap", 0),
STACK_USAGE("dma_map_page_attrs", 40),
STACK_USAGE("dma_unmap_page_attrs", 40),
STACK_USAGE("dma_map_sg_attrs", 0),
STACK_USAGE("dma_map_sgtable", 8),
STACK_USAGE("dma_unmap_sg_attrs", 0),
STACK_USAGE("dma_map_resource", 0),
STACK_USAGE("dma_unmap_resource", 0),
STACK_USAGE("dmam_release", 16),
STACK_USAGE("dma_sync_single_for_cpu", 0),
STACK_USAGE("dma_sync_single_for_device", 0),
STACK_USAGE("dma_sync_sg_for_cpu", 0),
STACK_USAGE("dma_sync_sg_for_device", 0),
STACK_USAGE("dma_get_sgtable_attrs", 0),
STACK_USAGE("dmam_match", 0),
STACK_USAGE("dma_pgprot", 0),
STACK_USAGE("dma_can_mmap", 0),
STACK_USAGE("dma_mmap_attrs", 0),
STACK_USAGE("dma_get_required_mask", 0),
STACK_USAGE("dma_alloc_attrs", 0),
STACK_USAGE("dma_free_attrs", 16),
STACK_USAGE("dma_alloc_pages", 0),
STACK_USAGE("dma_free_pages", 0),
STACK_USAGE("dma_mmap_pages", 0),
STACK_USAGE("dmam_free_coherent", 56),
STACK_USAGE("dma_alloc_noncontiguous", 40),
STACK_USAGE("dma_free_noncontiguous", 8),
STACK_USAGE("dma_vmap_noncontiguous", 0),
STACK_USAGE("dma_vunmap_noncontiguous", 0),
STACK_USAGE("dma_mmap_noncontiguous", 0),
STACK_USAGE("dma_supported", 0),
STACK_USAGE("dma_set_mask", 24),
STACK_USAGE("dma_set_coherent_mask", 16),
STACK_USAGE("dma_max_mapping_size", 0),
STACK_USAGE("dma_need_sync", 0),
STACK_USAGE("dma_get_merge_boundary", 0),
STACK_USAGE("dmam_alloc_attrs", 48),
STACK_USAGE("dma_common_get_sgtable", 24),
STACK_USAGE("dma_common_mmap", 56),
STACK_USAGE("dma_common_alloc_pages", 72),
STACK_USAGE("dma_common_free_pages", 24),
STACK_USAGE("dma_common_pages_remap", 16),
STACK_USAGE("dma_common_contiguous_remap", 32),
STACK_USAGE("dma_common_free_remap", 8),
STACK_USAGE("dma_common_find_pages", 0),
STACK_USAGE("swiotlb_set_max_segment", 0),
STACK_USAGE("__bpf_trace_swiotlb_bounced", 0),
STACK_USAGE("__traceiter_swiotlb_bounced", 40),
STACK_USAGE("perf_trace_swiotlb_bounced", 104),
STACK_USAGE("trace_event_raw_event_swiotlb_bounced", 104),
STACK_USAGE("trace_raw_output_swiotlb_bounced", 56),
STACK_USAGE("swiotlb_size_or_default", 0),
STACK_USAGE("swiotlb_adjust_size", 0),
STACK_USAGE("swiotlb_print_info", 0),
STACK_USAGE("swiotlb_update_mem_attributes", 40),
STACK_USAGE("swiotlb_init_io_tlb_mem", 16),
STACK_USAGE("swiotlb_init_with_tbl", 32),
STACK_USAGE("swiotlb_init", 24),
STACK_USAGE("swiotlb_late_init_with_default_size", 64),
STACK_USAGE("swiotlb_late_init_with_tbl", 32),
STACK_USAGE("swiotlb_exit", 40),
STACK_USAGE("swiotlb_bounce", 56),
STACK_USAGE("swiotlb_tbl_map_single", 160),
STACK_USAGE("swiotlb_tbl_unmap_single", 48),
STACK_USAGE("swiotlb_sync_single_for_device", 0),
STACK_USAGE("swiotlb_sync_single_for_cpu", 0),
STACK_USAGE("swiotlb_map", 56),
STACK_USAGE("swiotlb_max_mapping_size", 0),
STACK_USAGE("is_swiotlb_active", 0),
STACK_USAGE("swiotlb_create_default_debugfs", 0),
STACK_USAGE("setup_io_tlb_npages", 32),
STACK_USAGE("swiotlb_max_segment", 0),
STACK_USAGE("syscall_enter_from_user_mode", 48),
STACK_USAGE("syscall_enter_from_user_mode_prepare", 0),
STACK_USAGE("exit_to_user_mode", 8),
STACK_USAGE("arch_do_signal_or_restart", 0),
STACK_USAGE("exit_to_user_mode_loop", 24),
STACK_USAGE("__bpf_trace_sys_enter", 0),
STACK_USAGE("__traceiter_sys_enter", 24),
STACK_USAGE("perf_trace_sys_enter", 56),
STACK_USAGE("trace_event_raw_event_sys_enter", 72),
STACK_USAGE("trace_raw_output_sys_enter", 24),
STACK_USAGE("exit_to_user_mode_prepare", 24),
STACK_USAGE("syscall_exit_to_user_mode_work", 32),
STACK_USAGE("syscall_exit_to_user_mode", 32),
STACK_USAGE("irqentry_enter_from_user_mode", 0),
STACK_USAGE("irqentry_exit_to_user_mode", 8),
STACK_USAGE("irqentry_enter", 8),
STACK_USAGE("enter_from_user_mode", 0),
STACK_USAGE("raw_irqentry_exit_cond_resched", 0),
STACK_USAGE("irqentry_exit", 8),
STACK_USAGE("trace_init_flags_sys_enter", 0),
STACK_USAGE("irqentry_nmi_enter", 16),
STACK_USAGE("__bpf_trace_sys_exit", 0),
STACK_USAGE("__traceiter_sys_exit", 24),
STACK_USAGE("perf_trace_sys_exit", 56),
STACK_USAGE("trace_event_raw_event_sys_exit", 72),
STACK_USAGE("trace_raw_output_sys_exit", 24),
STACK_USAGE("irqentry_nmi_exit", 8),
STACK_USAGE("trace_init_flags_sys_exit", 0),
STACK_USAGE("syscall_enter_from_user_mode_work", 48),
STACK_USAGE("xfer_to_guest_mode_handle_work", 24),
STACK_USAGE("trigger_sigsys", 56),
STACK_USAGE("syscall_user_dispatch", 16),
STACK_USAGE("set_syscall_user_dispatch", 0),
STACK_USAGE("get_callchain_buffers", 48),
STACK_USAGE("put_callchain_buffers", 0),
STACK_USAGE("get_callchain_entry", 16),
STACK_USAGE("put_callchain_entry", 8),
STACK_USAGE("get_perf_callchain", 88),
STACK_USAGE("perf_event_max_stack_handler", 104),
STACK_USAGE("perf_callchain_kernel", 0),
STACK_USAGE("perf_callchain_user", 0),
STACK_USAGE("release_callchain_buffers_rcu", 16),
STACK_USAGE("perf_event_set_bpf_prog", 24),
STACK_USAGE("perf_event_free_bpf_prog", 0),
STACK_USAGE("perf_bp_event", 312),
STACK_USAGE("perf_addr_filters_splice", 64),
STACK_USAGE("perf_event_addr_filters_apply", 128),
STACK_USAGE("perf_swevent_hrtimer", 312),
STACK_USAGE("cpu_clock_event_start", 8),
STACK_USAGE("cpu_clock_event_stop", 16),
STACK_USAGE("cpu_clock_event_add", 8),
STACK_USAGE("cpu_clock_event_del", 16),
STACK_USAGE("cpu_clock_event_read", 8),
STACK_USAGE("perf_mux_hrtimer_handler", 64),
STACK_USAGE("cpu_clock_event_init", 16),
STACK_USAGE("task_clock_event_start", 0),
STACK_USAGE("task_clock_event_stop", 16),
STACK_USAGE("task_clock_event_add", 8),
STACK_USAGE("task_clock_event_del", 16),
STACK_USAGE("task_clock_event_read", 8),
STACK_USAGE("task_clock_event_init", 16),
STACK_USAGE("perf_pmu_nop_void", 0),
STACK_USAGE("perf_pmu_nop_txn", 0),
STACK_USAGE("perf_pmu_nop_int", 0),
STACK_USAGE("perf_event_nop_int", 0),
STACK_USAGE("perf_pmu_start_txn", 16),
STACK_USAGE("perf_pmu_commit_txn", 16),
STACK_USAGE("perf_pmu_cancel_txn", 16),
STACK_USAGE("perf_event_idx_default", 0),
STACK_USAGE("nr_addr_filters_show", 0),
STACK_USAGE("type_show", 0),
STACK_USAGE("perf_event_mux_interval_ms_show", 0),
STACK_USAGE("perf_event_mux_interval_ms_store", 80),
STACK_USAGE("pmu_dev_release", 0),
STACK_USAGE("pmu_dev_alloc", 24),
STACK_USAGE("perf_pmu_register", 64),
STACK_USAGE("perf_mux_hrtimer_restart", 40),
STACK_USAGE("perf_pmu_unregister", 8),
STACK_USAGE("perf_try_init_event", 32),
STACK_USAGE("perf_pmu_disable", 16),
STACK_USAGE("account_event", 24),
STACK_USAGE("perf_pmu_enable", 16),
STACK_USAGE("perf_event_alloc", 104),
STACK_USAGE("perf_copy_attr", 40),
STACK_USAGE("perf_event_set_output", 32),
STACK_USAGE("free_ctx", 8),
STACK_USAGE("__ia32_sys_perf_event_open", 0),
STACK_USAGE("__se_sys_perf_event_open", 256),
STACK_USAGE("__x64_sys_perf_event_open", 0),
STACK_USAGE("put_ctx", 8),
STACK_USAGE("perf_event_create_kernel_counter", 32),
STACK_USAGE("perf_pmu_migrate_context", 112),
STACK_USAGE("perf_event_exit_event", 24),
STACK_USAGE("perf_event_exit_task", 136),
STACK_USAGE("perf_event_free_task", 160),
STACK_USAGE("perf_event_ctx_lock_nested", 32),
STACK_USAGE("perf_event_delayed_put", 0),
STACK_USAGE("perf_event_get", 8),
STACK_USAGE("perf_get_event", 0),
STACK_USAGE("perf_event_attrs", 0),
STACK_USAGE("inherit_event", 48),
STACK_USAGE("inherit_task_group", 80),
STACK_USAGE("perf_event_init_task", 96),
STACK_USAGE("perf_event_init_all_cpus", 24),
STACK_USAGE("unclone_ctx", 16),
STACK_USAGE("__perf_event_exit_context", 40),
STACK_USAGE("perf_event_init_cpu", 48),
STACK_USAGE("perf_event_exit_cpu", 56),
STACK_USAGE("perf_reboot", 8),
STACK_USAGE("perf_event_init", 0),
STACK_USAGE("perf_event_sysfs_show", 0),
STACK_USAGE("perf_event_sysfs_init", 16),
STACK_USAGE("perf_cgroup_css_alloc", 16),
STACK_USAGE("perf_cgroup_css_free", 8),
STACK_USAGE("perf_cgroup_css_online", 88),
STACK_USAGE("__perf_cgroup_move", 8),
STACK_USAGE("perf_cgroup_attach", 80),
STACK_USAGE("perf_allow_kernel", 8),
STACK_USAGE("perf_lock_task_context", 64),
STACK_USAGE("update_context_time", 8),
STACK_USAGE("ktime_get_real_ns", 0),
STACK_USAGE("ktime_get_boottime_ns", 0),
STACK_USAGE("add_event_to_groups", 0),
STACK_USAGE("ktime_get_clocktai_ns", 0),
STACK_USAGE("list_del_event", 32),
STACK_USAGE("perf_group_detach", 64),
STACK_USAGE("event_function", 56),
STACK_USAGE("event_sched_out", 40),
STACK_USAGE("group_sched_out", 40),
STACK_USAGE("__perf_remove_from_context", 440),
STACK_USAGE("perf_remove_from_context", 40),
STACK_USAGE("__perf_event_disable", 40),
STACK_USAGE("_perf_event_disable", 24),
STACK_USAGE("perf_event_disable_local", 48),
STACK_USAGE("perf_event_disable", 32),
STACK_USAGE("perf_event_disable_inatomic", 8),
STACK_USAGE("event_sched_in", 440),
STACK_USAGE("event_function_call", 128),
STACK_USAGE("add_event_to_ctx", 16),
STACK_USAGE("ctx_resched", 48),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("perf_pmu_resched", 40),
STACK_USAGE("__perf_install_in_context", 56),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("perf_install_in_context", 88),
STACK_USAGE("__perf_event_enable", 48),
STACK_USAGE("_perf_event_enable", 16),
STACK_USAGE("perf_event_enable", 24),
STACK_USAGE("__perf_event_stop", 32),
STACK_USAGE("perf_event_addr_filters_sync", 16),
STACK_USAGE("_perf_event_refresh", 16),
STACK_USAGE("perf_event_refresh", 24),
STACK_USAGE("perf_event_modify_breakpoint", 32),
STACK_USAGE("ctx_sched_out", 40),
STACK_USAGE("perf_sched_cb_dec", 8),
STACK_USAGE("perf_sched_cb_inc", 16),
STACK_USAGE("__perf_pmu_sched_task", 40),
STACK_USAGE("__perf_event_task_sched_out", 128),
STACK_USAGE("visit_groups_merge", 120),
STACK_USAGE("ctx_pinned_sched_in", 32),
STACK_USAGE("ctx_flexible_sched_in", 32),
STACK_USAGE("ctx_sched_in", 32),
STACK_USAGE("perf_event_context_sched_in", 40),
STACK_USAGE("__perf_event_task_sched_in", 64),
STACK_USAGE("perf_adjust_period", 64),
STACK_USAGE("rotate_ctx", 32),
STACK_USAGE("perf_event_task_tick", 72),
STACK_USAGE("__perf_event_read", 48),
STACK_USAGE("perf_event_read_local", 72),
STACK_USAGE("perf_event_read", 72),
STACK_USAGE("perf_proc_update_handler", 0),
STACK_USAGE("alloc_perf_context", 32),
STACK_USAGE("find_get_context", 80),
STACK_USAGE("free_event_rcu", 8),
STACK_USAGE("perf_cpu_time_max_percent_handler", 16),
STACK_USAGE("perf_sched_delayed", 0),
STACK_USAGE("get_uid", 8),
STACK_USAGE("_free_event", 16),
STACK_USAGE("perf_remove_from_owner", 32),
STACK_USAGE("perf_event_release_kernel", 80),
STACK_USAGE("perf_duration_warn", 0),
STACK_USAGE("perf_release", 0),
STACK_USAGE("__perf_event_read_value", 48),
STACK_USAGE("perf_sample_event_took", 24),
STACK_USAGE("perf_event_read_value", 32),
STACK_USAGE("__perf_read_group_add", 48),
STACK_USAGE("perf_read", 136),
STACK_USAGE("perf_poll", 32),
STACK_USAGE("_perf_event_reset", 8),
STACK_USAGE("perf_event_pause", 40),
STACK_USAGE("__perf_event_period", 32),
STACK_USAGE("perf_event_period", 48),
STACK_USAGE("perf_ioctl", 264),
STACK_USAGE("perf_compat_ioctl", 0),
STACK_USAGE("perf_event_task_enable", 72),
STACK_USAGE("perf_event_task_disable", 72),
STACK_USAGE("perf_event_init_userpage", 8),
STACK_USAGE("arch_perf_update_userpage", 0),
STACK_USAGE("perf_event_update_userpage", 40),
STACK_USAGE("perf_event_print_debug", 0),
STACK_USAGE("perf_mmap_fault", 24),
STACK_USAGE("ring_buffer_attach", 96),
STACK_USAGE("ring_buffer_get", 16),
STACK_USAGE("ring_buffer_put", 0),
STACK_USAGE("perf_mmap_open", 0),
STACK_USAGE("perf_mmap_close", 112),
STACK_USAGE("perf_mmap", 88),
STACK_USAGE("perf_fasync", 40),
STACK_USAGE("rb_free_rcu", 0),
STACK_USAGE("perf_event_wakeup", 24),
STACK_USAGE("perf_event_update_time", 0),
STACK_USAGE("perf_pending_event", 32),
STACK_USAGE("perf_register_guest_info_callbacks", 8),
STACK_USAGE("perf_unregister_guest_info_callbacks", 0),
STACK_USAGE("perf_event_set_state", 0),
STACK_USAGE("__perf_event_header__init_id", 40),
STACK_USAGE("perf_event_header__init_id", 0),
STACK_USAGE("perf_event__output_id_sample", 24),
STACK_USAGE("perf_output_read", 136),
STACK_USAGE("perf_output_sample", 136),
STACK_USAGE("perf_detach_cgroup", 24),
STACK_USAGE("remote_function", 24),
STACK_USAGE("perf_get_page_size", 72),
STACK_USAGE("perf_callchain", 0),
STACK_USAGE("perf_prepare_sample", 72),
STACK_USAGE("perf_event_output_forward", 96),
STACK_USAGE("perf_event_output_backward", 96),
STACK_USAGE("perf_event_output", 104),
STACK_USAGE("perf_iterate_ctx", 56),
STACK_USAGE("perf_iterate_sb", 56),
STACK_USAGE("update_cgrp_time_from_cpuctx", 32),
STACK_USAGE("perf_event_exec", 160),
STACK_USAGE("__perf_event_output_stop", 40),
STACK_USAGE("__perf_pmu_output_stop", 40),
STACK_USAGE("perf_event_task_output", 376),
STACK_USAGE("perf_event_fork", 64),
STACK_USAGE("perf_event_comm_output", 376),
STACK_USAGE("perf_event_comm", 88),
STACK_USAGE("perf_event_namespaces_output", 376),
STACK_USAGE("perf_cgroup_set_timestamp", 24),
STACK_USAGE("perf_event_namespaces", 176),
STACK_USAGE("perf_event_cgroup_output", 376),
STACK_USAGE("perf_event_mmap_output", 440),
STACK_USAGE("local_clock", 0),
STACK_USAGE("perf_cgroup_switch", 88),
STACK_USAGE("perf_event_mmap", 264),
STACK_USAGE("perf_event_aux_event", 440),
STACK_USAGE("perf_log_lost_samples", 440),
STACK_USAGE("perf_event_switch_output", 376),
STACK_USAGE("perf_log_throttle", 440),
STACK_USAGE("perf_event_ksymbol_output", 376),
STACK_USAGE("perf_event_ksymbol", 232),
STACK_USAGE("perf_event_bpf_output", 376),
STACK_USAGE("perf_event_bpf_event", 248),
STACK_USAGE("perf_event_text_poke_output", 440),
STACK_USAGE("perf_event_text_poke", 56),
STACK_USAGE("perf_event_itrace_started", 0),
STACK_USAGE("perf_report_aux_output_id", 440),
STACK_USAGE("__perf_event_account_interrupt", 24),
STACK_USAGE("perf_event_account_interrupt", 0),
STACK_USAGE("__perf_event_overflow", 40),
STACK_USAGE("perf_event_overflow", 0),
STACK_USAGE("perf_swevent_set_period", 0),
STACK_USAGE("perf_swevent_event", 32),
STACK_USAGE("perf_cgroup_from_task", 24),
STACK_USAGE("perf_swevent_get_recursion_context", 0),
STACK_USAGE("perf_swevent_put_recursion_context", 8),
STACK_USAGE("___perf_sw_event", 312),
STACK_USAGE("__perf_sw_event", 40),
STACK_USAGE("perf_swevent_read", 0),
STACK_USAGE("perf_swevent_add", 32),
STACK_USAGE("perf_swevent_del", 0),
STACK_USAGE("perf_swevent_start", 0),
STACK_USAGE("perf_swevent_stop", 0),
STACK_USAGE("swevent_hlist_put_cpu", 24),
STACK_USAGE("sw_perf_event_destroy", 8),
STACK_USAGE("perf_swevent_init", 48),
STACK_USAGE("perf_trace_run_bpf_submit", 48),
STACK_USAGE("perf_tp_event", 376),
STACK_USAGE("tp_perf_event_destroy", 0),
STACK_USAGE("perf_tp_event_init", 8),
STACK_USAGE("retprobe_show", 0),
STACK_USAGE("perf_kprobe_event_init", 8),
STACK_USAGE("ref_ctr_offset_show", 0),
STACK_USAGE("perf_uprobe_event_init", 8),
STACK_USAGE("bpf_overflow_handler", 88),
STACK_USAGE("toggle_bp_slot", 72),
STACK_USAGE("arch_reserve_bp_slot", 0),
STACK_USAGE("arch_release_bp_slot", 0),
STACK_USAGE("arch_unregister_hw_breakpoint", 0),
STACK_USAGE("__reserve_bp_slot", 88),
STACK_USAGE("reserve_bp_slot", 8),
STACK_USAGE("release_bp_slot", 8),
STACK_USAGE("dbg_reserve_bp_slot", 8),
STACK_USAGE("dbg_release_bp_slot", 16),
STACK_USAGE("register_perf_hw_breakpoint", 48),
STACK_USAGE("register_user_hw_breakpoint", 0),
STACK_USAGE("modify_user_hw_breakpoint_check", 200),
STACK_USAGE("modify_user_hw_breakpoint", 40),
STACK_USAGE("unregister_hw_breakpoint", 0),
STACK_USAGE("register_wide_hw_breakpoint", 48),
STACK_USAGE("unregister_wide_hw_breakpoint", 24),
STACK_USAGE("bp_perf_event_destroy", 8),
STACK_USAGE("hw_breakpoint_event_init", 8),
STACK_USAGE("hw_breakpoint_add", 8),
STACK_USAGE("hw_breakpoint_del", 0),
STACK_USAGE("hw_breakpoint_start", 0),
STACK_USAGE("hw_breakpoint_stop", 0),
STACK_USAGE("init_hw_breakpoint", 16),
STACK_USAGE("hw_breakpoint_weight", 0),
STACK_USAGE("perf_output_begin_forward", 80),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("perf_output_begin_backward", 88),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("perf_output_begin", 96),
STACK_USAGE("perf_output_copy", 32),
STACK_USAGE("perf_output_skip", 0),
STACK_USAGE("perf_output_end", 0),
STACK_USAGE("perf_aux_output_flag", 0),
STACK_USAGE("perf_aux_output_begin", 32),
STACK_USAGE("perf_aux_output_end", 24),
STACK_USAGE("perf_output_put_handle", 0),
STACK_USAGE("perf_aux_output_skip", 24),
STACK_USAGE("perf_get_aux", 0),
STACK_USAGE("perf_output_copy_aux", 72),
STACK_USAGE("__rb_free_aux", 16),
STACK_USAGE("rb_alloc_aux", 96),
STACK_USAGE("rcu_read_unlock", 0),
STACK_USAGE("rb_free_aux", 0),
STACK_USAGE("rb_alloc", 72),
STACK_USAGE("rb_free", 24),
STACK_USAGE("perf_mmap_to_page", 8),
STACK_USAGE("register_for_each_vma", 88),
STACK_USAGE("__uprobe_unregister", 24),
STACK_USAGE("uprobe_unregister", 32),
STACK_USAGE("__uprobe_register", 56),
STACK_USAGE("uprobe_register", 0),
STACK_USAGE("uprobe_register_refctr", 0),
STACK_USAGE("uprobe_apply", 40),
STACK_USAGE("put_page", 0),
STACK_USAGE("uprobe_mmap", 96),
STACK_USAGE("uprobe_munmap", 48),
STACK_USAGE("__create_xol_area", 72),
STACK_USAGE("uprobe_clear_state", 48),
STACK_USAGE("uprobe_start_dup_mmap", 0),
STACK_USAGE("uprobe_end_dup_mmap", 0),
STACK_USAGE("uprobe_dup_mmap", 0),
STACK_USAGE("arch_uprobe_copy_ixol", 40),
STACK_USAGE("uprobe_get_swbp_addr", 0),
STACK_USAGE("uprobe_get_trap_addr", 0),
STACK_USAGE("uprobe_free_utask", 32),
STACK_USAGE("dup_xol_work", 8),
STACK_USAGE("uprobe_copy_process", 56),
STACK_USAGE("uprobe_deny_signal", 24),
STACK_USAGE("arch_uprobe_ignore", 0),
STACK_USAGE("arch_uretprobe_is_alive", 0),
STACK_USAGE("is_swbp_insn", 0),
STACK_USAGE("uprobe_notify_resume", 176),
STACK_USAGE("uprobe_pre_sstep_notifier", 0),
STACK_USAGE("uprobe_post_sstep_notifier", 0),
STACK_USAGE("is_trap_insn", 0),
STACK_USAGE("uprobes_init", 8),
STACK_USAGE("__update_ref_ctr", 64),
STACK_USAGE("update_ref_ctr", 56),
STACK_USAGE("mmu_notifier_invalidate_range_start", 8),
STACK_USAGE("uprobe_write_opcode", 320),
STACK_USAGE("set_swbp", 0),
STACK_USAGE("set_orig_insn", 0),
STACK_USAGE("put_uprobe", 40),
STACK_USAGE("install_breakpoint", 120),
STACK_USAGE("execdomains_proc_show", 0),
STACK_USAGE("proc_execdomains_init", 0),
STACK_USAGE("__ia32_sys_personality", 0),
STACK_USAGE("__x64_sys_personality", 0),
STACK_USAGE("get_task_struct", 0),
STACK_USAGE("put_task_struct", 0),
STACK_USAGE("wait_consider_task", 120),
STACK_USAGE("child_wait_callback", 0),
STACK_USAGE("__wake_up_parent", 0),
STACK_USAGE("do_wait", 56),
STACK_USAGE("kernel_waitid", 144),
STACK_USAGE("__ia32_sys_waitid", 0),
STACK_USAGE("__se_sys_waitid", 184),
STACK_USAGE("__x64_sys_waitid", 0),
STACK_USAGE("kernel_wait4", 136),
STACK_USAGE("kernel_wait", 112),
STACK_USAGE("delayed_put_task_struct", 16),
STACK_USAGE("__ia32_sys_wait4", 168),
STACK_USAGE("__x64_sys_wait4", 168),
STACK_USAGE("__ia32_sys_waitpid", 0),
STACK_USAGE("__x64_sys_waitpid", 0),
STACK_USAGE("__ia32_compat_sys_wait4", 168),
STACK_USAGE("__ia32_compat_sys_waitid", 184),
STACK_USAGE("thread_group_exited", 8),
STACK_USAGE("put_task_struct_rcu_user", 0),
STACK_USAGE("abort", 0),
STACK_USAGE("release_task", 88),
STACK_USAGE("rcuwait_wake_up", 8),
STACK_USAGE("refcount_inc", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("is_current_pgrp_orphaned", 8),
STACK_USAGE("kill_orphaned_pgrp", 8),
STACK_USAGE("trace_sched_process_exit", 0),
STACK_USAGE("coredump_task_exit", 40),
STACK_USAGE("mm_update_next_owner", 48),
STACK_USAGE("exit_mm", 48),
STACK_USAGE("rcu_read_unlock", 0),
STACK_USAGE("do_exit", 72),
STACK_USAGE("make_task_dead", 16),
STACK_USAGE("__ia32_sys_exit", 0),
STACK_USAGE("__x64_sys_exit", 0),
STACK_USAGE("do_group_exit", 40),
STACK_USAGE("__ia32_sys_exit_group", 0),
STACK_USAGE("__x64_sys_exit_group", 0),
STACK_USAGE("func_ptr_is_kernel_text", 16),
STACK_USAGE("sort_main_extable", 0),
STACK_USAGE("search_kernel_exception_table", 0),
STACK_USAGE("search_exception_tables", 8),
STACK_USAGE("core_kernel_text", 16),
STACK_USAGE("__kernel_text_address", 8),
STACK_USAGE("kernel_text_address", 24),
STACK_USAGE("fei_retval_set", 24),
STACK_USAGE("fei_retval_get", 16),
STACK_USAGE("fei_retval_ops_open", 0),
STACK_USAGE("fei_debugfs_add_attr", 8),
STACK_USAGE("fei_kprobe_handler", 16),
STACK_USAGE("fei_post_handler", 0),
STACK_USAGE("fei_seq_start", 8),
STACK_USAGE("fei_seq_stop", 0),
STACK_USAGE("fei_seq_next", 0),
STACK_USAGE("fei_seq_show", 0),
STACK_USAGE("fei_open", 0),
STACK_USAGE("fei_attr_remove", 16),
STACK_USAGE("fei_write", 56),
STACK_USAGE("fei_debugfs_init", 16),
STACK_USAGE("fei_attr_new", 24),
STACK_USAGE("coredump_filter_setup", 0),
STACK_USAGE("mm_init", 24),
STACK_USAGE("mm_alloc", 8),
STACK_USAGE("__mmput", 8),
STACK_USAGE("mmput", 8),
STACK_USAGE("mmput_async_fn", 0),
STACK_USAGE("mmput_async", 16),
STACK_USAGE("set_mm_exe_file", 16),
STACK_USAGE("replace_mm_exe_file", 48),
STACK_USAGE("get_mm_exe_file", 16),
STACK_USAGE("get_task_exe_file", 24),
STACK_USAGE("get_task_mm", 24),
STACK_USAGE("mm_access", 32),
STACK_USAGE("mm_release", 32),
STACK_USAGE("lockdep_tasklist_lock_is_held", 0),
STACK_USAGE("exit_mm_release", 16),
STACK_USAGE("exec_mm_release", 16),
STACK_USAGE("dup_mm", 120),
STACK_USAGE("nr_processes", 16),
STACK_USAGE("copy_mm", 16),
STACK_USAGE("copy_fs", 16),
STACK_USAGE("copy_files", 32),
STACK_USAGE("copy_sighand", 32),
STACK_USAGE("arch_release_task_struct", 0),
STACK_USAGE("__cleanup_sighand", 8),
STACK_USAGE("copy_signal", 32),
STACK_USAGE("__ia32_sys_set_tid_address", 0),
STACK_USAGE("__x64_sys_set_tid_address", 0),
STACK_USAGE("ptrace_event_pid", 32),
STACK_USAGE("pidfd_pid", 0),
STACK_USAGE("pidfd_release", 0),
STACK_USAGE("pidfd_show_fdinfo", 40),
STACK_USAGE("pidfd_poll", 8),
STACK_USAGE("__delayed_free_task", 0),
STACK_USAGE("copy_oom_score_adj", 8),
STACK_USAGE("copy_process", 120),
STACK_USAGE("ptrace_init_task", 8),
STACK_USAGE("thread_stack_free_rcu", 0),
STACK_USAGE("free_vm_stack_cache", 8),
STACK_USAGE("memcg_charge_kernel_stack", 24),
STACK_USAGE("fork_idle", 128),
STACK_USAGE("copy_init_mm", 0),
STACK_USAGE("create_io_thread", 112),
STACK_USAGE("kernel_clone", 152),
STACK_USAGE("refcount_inc", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("kernel_thread", 112),
STACK_USAGE("__do_sys_fork", 112),
STACK_USAGE("__do_sys_vfork", 112),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("__ia32_sys_clone", 112),
STACK_USAGE("__x64_sys_clone", 112),
STACK_USAGE("copy_clone_args_from_user", 136),
STACK_USAGE("put_cred", 8),
STACK_USAGE("__ia32_sys_clone3", 0),
STACK_USAGE("__se_sys_clone3", 264),
STACK_USAGE("__x64_sys_clone3", 0),
STACK_USAGE("walk_process_tree", 48),
STACK_USAGE("sighand_ctor", 8),
STACK_USAGE("proc_caches_init", 0),
STACK_USAGE("unshare_fd", 24),
STACK_USAGE("ksys_unshare", 88),
STACK_USAGE("__ia32_sys_unshare", 0),
STACK_USAGE("__x64_sys_unshare", 0),
STACK_USAGE("unshare_files", 48),
STACK_USAGE("sysctl_max_threads", 96),
STACK_USAGE("__bpf_trace_task_rename", 0),
STACK_USAGE("__traceiter_task_rename", 24),
STACK_USAGE("perf_trace_task_rename", 72),
STACK_USAGE("trace_event_raw_event_task_rename", 80),
STACK_USAGE("trace_raw_output_task_rename", 24),
STACK_USAGE("tty_kref_get", 8),
STACK_USAGE("vm_area_alloc", 16),
STACK_USAGE("vm_area_dup", 16),
STACK_USAGE("vm_area_free", 0),
STACK_USAGE("account_kernel_stack", 40),
STACK_USAGE("exit_task_stack_account", 8),
STACK_USAGE("put_task_stack", 8),
STACK_USAGE("free_task", 8),
STACK_USAGE("rcu_read_unlock", 0),
STACK_USAGE("__mmdrop", 8),
STACK_USAGE("mmdrop_async_fn", 0),
STACK_USAGE("free_signal_struct", 24),
STACK_USAGE("__put_task_struct", 32),
STACK_USAGE("get_pid", 0),
STACK_USAGE("arch_task_cache_init", 0),
STACK_USAGE("fork_init", 48),
STACK_USAGE("arch_dup_task_struct", 0),
STACK_USAGE("set_task_stack_end_magic", 0),
STACK_USAGE("dup_task_struct", 40),
STACK_USAGE("__bpf_trace_task_newtask", 0),
STACK_USAGE("__traceiter_task_newtask", 24),
STACK_USAGE("perf_trace_task_newtask", 64),
STACK_USAGE("trace_event_raw_event_task_newtask", 80),
STACK_USAGE("trace_raw_output_task_newtask", 24),
STACK_USAGE("trace_task_newtask", 0),
STACK_USAGE("freeze_task", 32),
STACK_USAGE("__thaw_task", 16),
STACK_USAGE("set_freezable", 8),
STACK_USAGE("freezing_slow_path", 16),
STACK_USAGE("__refrigerator", 32),
STACK_USAGE("futex_exit_recursive", 8),
STACK_USAGE("futex_exec_release", 24),
STACK_USAGE("futex_exit_release", 24),
STACK_USAGE("futex_init", 56),
STACK_USAGE("futex_hash", 0),
STACK_USAGE("put_page", 0),
STACK_USAGE("futex_setup_timer", 24),
STACK_USAGE("get_futex_key", 80),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("fault_in_user_writeable", 32),
STACK_USAGE("futex_top_waiter", 0),
STACK_USAGE("futex_cmpxchg_value_locked", 0),
STACK_USAGE("futex_get_value_locked", 0),
STACK_USAGE("wait_for_owner_exiting", 16),
STACK_USAGE("__futex_unqueue", 16),
STACK_USAGE("futex_q_lock", 8),
STACK_USAGE("futex_q_unlock", 8),
STACK_USAGE("__futex_queue", 16),
STACK_USAGE("futex_unqueue", 24),
STACK_USAGE("futex_unqueue_pi", 16),
STACK_USAGE("handle_futex_death", 56),
STACK_USAGE("exit_robust_list", 88),
STACK_USAGE("compat_exit_robust_list", 80),
STACK_USAGE("lock_page", 8),
STACK_USAGE("exit_pi_state_list", 96),
STACK_USAGE("futex_unlock_pi", 136),
STACK_USAGE("put_task_struct", 0),
STACK_USAGE("refill_pi_state_cache", 16),
STACK_USAGE("pi_state_update_owner", 24),
STACK_USAGE("futex_lock_pi_atomic", 96),
STACK_USAGE("get_pi_state", 8),
STACK_USAGE("put_pi_state", 32),
STACK_USAGE("fixup_pi_state_owner", 128),
STACK_USAGE("fixup_pi_owner", 0),
STACK_USAGE("futex_lock_pi", 368),
STACK_USAGE("futex_requeue_pi_complete", 0),
STACK_USAGE("requeue_pi_wake_futex", 16),
STACK_USAGE("futex_requeue", 224),
STACK_USAGE("requeue_futex", 40),
STACK_USAGE("futex_wait_requeue_pi", 392),
STACK_USAGE("__ia32_sys_futex", 0),
STACK_USAGE("__se_sys_futex", 104),
STACK_USAGE("__x64_sys_futex", 0),
STACK_USAGE("__ia32_sys_futex_waitv", 0),
STACK_USAGE("__se_sys_futex_waitv", 184),
STACK_USAGE("__x64_sys_futex_waitv", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("__ia32_sys_set_robust_list", 0),
STACK_USAGE("__x64_sys_set_robust_list", 0),
STACK_USAGE("__ia32_compat_sys_set_robust_list", 0),
STACK_USAGE("__ia32_compat_sys_get_robust_list", 40),
STACK_USAGE("__ia32_sys_futex_time32", 0),
STACK_USAGE("__se_sys_futex_time32", 104),
STACK_USAGE("__x64_sys_futex_time32", 0),
STACK_USAGE("__ia32_sys_get_robust_list", 0),
STACK_USAGE("__se_sys_get_robust_list", 40),
STACK_USAGE("__x64_sys_get_robust_list", 0),
STACK_USAGE("do_futex", 8),
STACK_USAGE("futex_wake_mark", 24),
STACK_USAGE("futex_wake", 104),
STACK_USAGE("futex_wake_op", 264),
STACK_USAGE("futex_wait_queue", 32),
STACK_USAGE("futex_wait_multiple_setup", 128),
STACK_USAGE("futex_wait_multiple", 96),
STACK_USAGE("futex_wait_setup", 64),
STACK_USAGE("futex_wait", 264),
STACK_USAGE("futex_wait_restart", 16),
STACK_USAGE("set_groups", 16),
STACK_USAGE("set_current_groups", 16),
STACK_USAGE("__ia32_sys_getgroups", 56),
STACK_USAGE("__x64_sys_getgroups", 56),
STACK_USAGE("groups_alloc", 8),
STACK_USAGE("may_setgroups", 8),
STACK_USAGE("__ia32_sys_setgroups", 0),
STACK_USAGE("__se_sys_setgroups", 48),
STACK_USAGE("__x64_sys_setgroups", 0),
STACK_USAGE("in_group_p", 0),
STACK_USAGE("in_egroup_p", 0),
STACK_USAGE("groups_free", 0),
STACK_USAGE("gid_cmp", 0),
STACK_USAGE("groups_sort", 0),
STACK_USAGE("groups_search", 0),
STACK_USAGE("memunmap", 8),
STACK_USAGE("devm_memremap_release", 8),
STACK_USAGE("devm_memremap_match", 0),
STACK_USAGE("devm_memremap", 48),
STACK_USAGE("devm_memunmap", 0),
STACK_USAGE("memremap", 56),
STACK_USAGE("ncpus_cmp_func", 0),
STACK_USAGE("__irq_build_affinity_masks", 192),
STACK_USAGE("default_calc_sets", 0),
STACK_USAGE("irq_create_affinity_masks", 152),
STACK_USAGE("irq_calc_affinity_vectors", 24),
STACK_USAGE("probe_irq_mask", 48),
STACK_USAGE("probe_irq_off", 40),
STACK_USAGE("probe_irq_on", 32),
STACK_USAGE("__irq_set_handler", 48),
STACK_USAGE("irq_set_chained_handler_and_data", 40),
STACK_USAGE("irq_set_chip_and_handler_name", 48),
STACK_USAGE("irq_modify_status", 32),
STACK_USAGE("irq_set_msi_desc_off", 40),
STACK_USAGE("irq_chip_set_parent_state", 0),
STACK_USAGE("irq_set_msi_desc", 32),
STACK_USAGE("irq_chip_get_parent_state", 0),
STACK_USAGE("irq_chip_enable_parent", 0),
STACK_USAGE("irq_chip_disable_parent", 0),
STACK_USAGE("irq_chip_ack_parent", 0),
STACK_USAGE("irq_chip_mask_parent", 0),
STACK_USAGE("irq_chip_mask_ack_parent", 0),
STACK_USAGE("irq_chip_unmask_parent", 0),
STACK_USAGE("irq_chip_eoi_parent", 0),
STACK_USAGE("irq_chip_set_affinity_parent", 0),
STACK_USAGE("irq_set_chip_data", 32),
STACK_USAGE("irq_chip_set_type_parent", 0),
STACK_USAGE("irq_chip_retrigger_hierarchy", 0),
STACK_USAGE("irq_chip_set_vcpu_affinity_parent", 0),
STACK_USAGE("irq_chip_set_wake_parent", 0),
STACK_USAGE("irq_chip_request_resources_parent", 0),
STACK_USAGE("irq_chip_release_resources_parent", 0),
STACK_USAGE("irq_chip_compose_msi_msg", 0),
STACK_USAGE("irq_get_irq_data", 0),
STACK_USAGE("irq_chip_pm_get", 16),
STACK_USAGE("irq_chip_pm_put", 0),
STACK_USAGE("bad_chained_irq", 0),
STACK_USAGE("__irq_startup", 8),
STACK_USAGE("irq_startup", 40),
STACK_USAGE("irq_activate", 0),
STACK_USAGE("irq_activate_and_startup", 16),
STACK_USAGE("irq_shutdown", 8),
STACK_USAGE("irq_shutdown_and_deactivate", 16),
STACK_USAGE("irq_enable", 8),
STACK_USAGE("irq_disable", 8),
STACK_USAGE("irq_percpu_enable", 16),
STACK_USAGE("irq_percpu_disable", 16),
STACK_USAGE("mask_irq", 8),
STACK_USAGE("irq_set_chip", 32),
STACK_USAGE("unmask_irq", 8),
STACK_USAGE("unmask_threaded_irq", 8),
STACK_USAGE("handle_nested_irq", 32),
STACK_USAGE("handle_simple_irq", 16),
STACK_USAGE("trace_irq_handler_entry", 0),
STACK_USAGE("handle_untracked_irq", 16),
STACK_USAGE("handle_level_irq", 24),
STACK_USAGE("irq_set_irq_type", 32),
STACK_USAGE("handle_fasteoi_irq", 32),
STACK_USAGE("handle_fasteoi_nmi", 32),
STACK_USAGE("handle_edge_irq", 32),
STACK_USAGE("trace_irq_handler_exit", 0),
STACK_USAGE("irq_set_handler_data", 32),
STACK_USAGE("handle_percpu_irq", 16),
STACK_USAGE("handle_percpu_devid_irq", 32),
STACK_USAGE("handle_percpu_devid_fasteoi_nmi", 32),
STACK_USAGE("__irq_do_set_handler", 40),
STACK_USAGE("irq_migrate_all_off_this_cpu", 64),
STACK_USAGE("irq_affinity_online_cpu", 48),
STACK_USAGE("devm_free_irq", 40),
STACK_USAGE("devm_irq_desc_release", 0),
STACK_USAGE("__devm_irq_alloc_descs", 56),
STACK_USAGE("devm_irq_release", 0),
STACK_USAGE("devm_irq_match", 0),
STACK_USAGE("devm_request_threaded_irq", 56),
STACK_USAGE("devm_request_any_context_irq", 56),
STACK_USAGE("ack_bad", 24),
STACK_USAGE("noop", 0),
STACK_USAGE("noop_ret", 0),
STACK_USAGE("__handle_irq_event_percpu", 64),
STACK_USAGE("handle_irq_event_percpu", 16),
STACK_USAGE("handle_irq_event", 24),
STACK_USAGE("handle_bad_irq", 16),
STACK_USAGE("no_action", 0),
STACK_USAGE("__irq_wake_thread", 0),
STACK_USAGE("per_cpu_count_show", 32),
STACK_USAGE("chip_name_show", 24),
STACK_USAGE("hwirq_show", 24),
STACK_USAGE("type_show", 24),
STACK_USAGE("wakeup_show", 24),
STACK_USAGE("name_show", 24),
STACK_USAGE("actions_show", 32),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("irq_affinity_setup", 0),
STACK_USAGE("irq_sysfs_init", 8),
STACK_USAGE("irq_to_desc", 0),
STACK_USAGE("irq_lock_sparse", 0),
STACK_USAGE("irq_unlock_sparse", 0),
STACK_USAGE("alloc_desc", 64),
STACK_USAGE("irq_kobj_release", 8),
STACK_USAGE("delayed_free_desc", 0),
STACK_USAGE("early_irq_init", 32),
STACK_USAGE("handle_irq_desc", 0),
STACK_USAGE("generic_handle_irq", 0),
STACK_USAGE("generic_handle_irq_safe", 32),
STACK_USAGE("generic_handle_domain_irq", 0),
STACK_USAGE("generic_handle_domain_nmi", 0),
STACK_USAGE("irq_free_descs", 48),
STACK_USAGE("__irq_alloc_descs", 72),
STACK_USAGE("irq_get_next_irq", 0),
STACK_USAGE("__irq_get_desc_lock", 32),
STACK_USAGE("__irq_put_desc_unlock", 16),
STACK_USAGE("irq_set_percpu_devid_partition", 32),
STACK_USAGE("irq_set_percpu_devid", 24),
STACK_USAGE("irq_get_percpu_devid_partition", 8),
STACK_USAGE("kstat_incr_irq_this_cpu", 8),
STACK_USAGE("kstat_irqs_cpu", 8),
STACK_USAGE("kstat_irqs_usr", 24),
STACK_USAGE("__irq_set_lockdep_class", 24),
STACK_USAGE("irq_domain_translate_onecell", 0),
STACK_USAGE("irq_domain_translate_twocell", 0),
STACK_USAGE("irq_domain_alloc_descs", 32),
STACK_USAGE("irq_domain_reset_irq_data", 0),
STACK_USAGE("irq_domain_create_hierarchy", 16),
STACK_USAGE("irq_domain_free_fwnode", 8),
STACK_USAGE("irq_domain_disconnect_hierarchy", 8),
STACK_USAGE("irq_domain_get_irq_data", 8),
STACK_USAGE("irq_domain_set_hwirq_and_chip", 32),
STACK_USAGE("irq_domain_set_info", 64),
STACK_USAGE("irq_domain_free_irqs_common", 40),
STACK_USAGE("irq_domain_free_irqs_top", 40),
STACK_USAGE("__irq_domain_add", 56),
STACK_USAGE("irq_domain_alloc_irqs_hierarchy", 0),
STACK_USAGE("__irq_domain_alloc_irqs", 64),
STACK_USAGE("irq_domain_push_irq", 48),
STACK_USAGE("irq_domain_pop_irq", 48),
STACK_USAGE("irq_domain_free_irqs", 64),
STACK_USAGE("irq_domain_alloc_irqs_parent", 0),
STACK_USAGE("irq_domain_free_irqs_parent", 40),
STACK_USAGE("__irq_domain_activate_irq", 24),
STACK_USAGE("irq_domain_activate_irq", 8),
STACK_USAGE("irq_domain_deactivate_irq", 16),
STACK_USAGE("irq_domain_hierarchical_is_msi_remap", 0),
STACK_USAGE("irq_domain_remove", 8),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("irq_domain_update_bus_token", 24),
STACK_USAGE("irq_domain_create_simple", 40),
STACK_USAGE("irq_domain_add_legacy", 40),
STACK_USAGE("irq_domain_create_legacy", 40),
STACK_USAGE("irq_find_matching_fwspec", 40),
STACK_USAGE("irq_domain_check_msi_remap", 8),
STACK_USAGE("irqchip_fwnode_get_name", 0),
STACK_USAGE("irq_set_default_host", 0),
STACK_USAGE("irq_get_default_host", 0),
STACK_USAGE("irq_domain_associate", 40),
STACK_USAGE("irq_domain_associate_many", 32),
STACK_USAGE("irq_create_mapping_affinity", 64),
STACK_USAGE("__irq_domain_alloc_fwnode", 40),
STACK_USAGE("of_phandle_args_to_fwspec", 0),
STACK_USAGE("irq_create_fwspec_mapping", 64),
STACK_USAGE("irq_create_of_mapping", 88),
STACK_USAGE("irq_dispose_mapping", 32),
STACK_USAGE("__irq_resolve_mapping", 24),
STACK_USAGE("irq_domain_xlate_onecell", 0),
STACK_USAGE("irq_domain_xlate_twocell", 88),
STACK_USAGE("irq_domain_xlate_onetwocell", 0),
STACK_USAGE("irq_default_primary_handler", 0),
STACK_USAGE("irq_nested_primary_handler", 0),
STACK_USAGE("irq_forced_secondary_handler", 0),
STACK_USAGE("irq_wait_for_interrupt", 16),
STACK_USAGE("irq_finalize_oneshot", 32),
STACK_USAGE("irq_forced_thread_fn", 40),
STACK_USAGE("irq_thread_fn", 24),
STACK_USAGE("irq_thread_dtor", 24),
STACK_USAGE("wake_up_and_wait_for_irq_thread_ready", 72),
STACK_USAGE("synchronize_irq", 72),
STACK_USAGE("irq_thread", 120),
STACK_USAGE("irq_wake_thread", 32),
STACK_USAGE("__setup_irq", 88),
STACK_USAGE("irq_can_set_affinity", 0),
STACK_USAGE("irq_can_set_affinity_usr", 0),
STACK_USAGE("irq_set_thread_affinity", 0),
STACK_USAGE("local_bh_disable", 0),
STACK_USAGE("free_irq", 64),
STACK_USAGE("__cleanup_nmi", 24),
STACK_USAGE("free_nmi", 32),
STACK_USAGE("request_threaded_irq", 56),
STACK_USAGE("irq_do_set_affinity", 56),
STACK_USAGE("request_any_context_irq", 40),
STACK_USAGE("request_nmi", 56),
STACK_USAGE("enable_percpu_irq", 48),
STACK_USAGE("enable_percpu_nmi", 0),
STACK_USAGE("irq_percpu_is_enabled", 40),
STACK_USAGE("disable_percpu_irq", 32),
STACK_USAGE("disable_percpu_nmi", 32),
STACK_USAGE("__free_percpu_irq", 48),
STACK_USAGE("remove_percpu_irq", 16),
STACK_USAGE("free_percpu_irq", 24),
STACK_USAGE("free_percpu_nmi", 16),
STACK_USAGE("setup_percpu_irq", 40),
STACK_USAGE("__request_percpu_irq", 56),
STACK_USAGE("request_percpu_nmi", 48),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("prepare_percpu_nmi", 40),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("teardown_percpu_nmi", 24),
STACK_USAGE("__irq_get_irqchip_state", 0),
STACK_USAGE("irq_get_irqchip_state", 40),
STACK_USAGE("irq_set_irqchip_state", 40),
STACK_USAGE("irq_has_action", 8),
STACK_USAGE("irq_check_status_bit", 16),
STACK_USAGE("setup_forced_irqthreads", 0),
STACK_USAGE("local_bh_enable", 0),
STACK_USAGE("irq_set_affinity_locked", 40),
STACK_USAGE("irq_update_affinity_desc", 0),
STACK_USAGE("__synchronize_hardirq", 64),
STACK_USAGE("irq_set_affinity", 32),
STACK_USAGE("irq_force_affinity", 32),
STACK_USAGE("__irq_apply_affinity_hint", 56),
STACK_USAGE("irq_affinity_notify", 72),
STACK_USAGE("irq_set_affinity_notifier", 40),
STACK_USAGE("irq_setup_affinity", 24),
STACK_USAGE("irq_set_vcpu_affinity", 40),
STACK_USAGE("__disable_irq", 0),
STACK_USAGE("disable_irq_nosync", 24),
STACK_USAGE("disable_irq", 32),
STACK_USAGE("disable_hardirq", 40),
STACK_USAGE("disable_nmi_nosync", 24),
STACK_USAGE("__enable_irq", 0),
STACK_USAGE("enable_irq", 32),
STACK_USAGE("enable_nmi", 0),
STACK_USAGE("irq_set_irq_wake", 48),
STACK_USAGE("can_request_irq", 32),
STACK_USAGE("__irq_set_trigger", 40),
STACK_USAGE("synchronize_hardirq", 24),
STACK_USAGE("irq_set_parent", 32),
STACK_USAGE("__traceiter_irq_matrix_online", 16),
STACK_USAGE("__traceiter_irq_matrix_offline", 16),
STACK_USAGE("__traceiter_irq_matrix_reserve", 16),
STACK_USAGE("__traceiter_irq_matrix_remove_reserved", 16),
STACK_USAGE("__bpf_trace_irq_matrix_global", 0),
STACK_USAGE("perf_trace_irq_matrix_global", 56),
STACK_USAGE("trace_event_raw_event_irq_matrix_global", 72),
STACK_USAGE("trace_raw_output_irq_matrix_global", 24),
STACK_USAGE("__traceiter_irq_matrix_assign_system", 24),
STACK_USAGE("__traceiter_irq_matrix_alloc_reserved", 40),
STACK_USAGE("__traceiter_irq_matrix_reserve_managed", 40),
STACK_USAGE("__traceiter_irq_matrix_remove_managed", 40),
STACK_USAGE("__traceiter_irq_matrix_alloc_managed", 40),
STACK_USAGE("__traceiter_irq_matrix_assign", 40),
STACK_USAGE("__traceiter_irq_matrix_alloc", 40),
STACK_USAGE("irq_matrix_assign_system", 32),
STACK_USAGE("__traceiter_irq_matrix_free", 40),
STACK_USAGE("irq_matrix_reserve_managed", 88),
STACK_USAGE("irq_matrix_remove_managed", 48),
STACK_USAGE("irq_matrix_alloc_managed", 72),
STACK_USAGE("irq_matrix_assign", 24),
STACK_USAGE("irq_matrix_reserve", 8),
STACK_USAGE("irq_matrix_remove_reserved", 0),
STACK_USAGE("irq_matrix_alloc", 80),
STACK_USAGE("__bpf_trace_irq_matrix_global_update", 0),
STACK_USAGE("perf_trace_irq_matrix_global_update", 64),
STACK_USAGE("trace_event_raw_event_irq_matrix_global_update", 80),
STACK_USAGE("trace_raw_output_irq_matrix_global_update", 24),
STACK_USAGE("irq_matrix_free", 0),
STACK_USAGE("irq_matrix_available", 24),
STACK_USAGE("irq_matrix_reserved", 0),
STACK_USAGE("irq_matrix_allocated", 8),
STACK_USAGE("irq_alloc_matrix", 32),
STACK_USAGE("__bpf_trace_irq_matrix_cpu", 0),
STACK_USAGE("perf_trace_irq_matrix_cpu", 72),
STACK_USAGE("trace_event_raw_event_irq_matrix_cpu", 96),
STACK_USAGE("trace_raw_output_irq_matrix_cpu", 40),
STACK_USAGE("irq_matrix_online", 16),
STACK_USAGE("irq_matrix_offline", 16),
STACK_USAGE("irq_fixup_move_pending", 16),
STACK_USAGE("irq_move_masked_irq", 24),
STACK_USAGE("__irq_move_irq", 16),
STACK_USAGE("msi_domain_free_irqs_descs_locked", 32),
STACK_USAGE("msi_domain_free_irqs", 32),
STACK_USAGE("msi_add_simple_msi_descs", 56),
STACK_USAGE("msi_get_domain_info", 0),
STACK_USAGE("msi_free_msi_descs_range", 56),
STACK_USAGE("__get_cached_msi_msg", 0),
STACK_USAGE("get_cached_msi_msg", 8),
STACK_USAGE("msi_device_data_release", 8),
STACK_USAGE("msi_setup_device_data", 32),
STACK_USAGE("msi_lock_descs", 0),
STACK_USAGE("msi_unlock_descs", 0),
STACK_USAGE("msi_first_desc", 24),
STACK_USAGE("msi_next_desc", 24),
STACK_USAGE("msi_get_virq", 32),
STACK_USAGE("msi_mode_show", 0),
STACK_USAGE("msi_domain_set_affinity", 56),
STACK_USAGE("msi_domain_activate", 56),
STACK_USAGE("msi_domain_deactivate", 40),
STACK_USAGE("msi_domain_alloc", 88),
STACK_USAGE("msi_domain_free", 48),
STACK_USAGE("msi_domain_ops_get_hwirq", 0),
STACK_USAGE("msi_domain_ops_prepare", 0),
STACK_USAGE("msi_domain_ops_set_desc", 0),
STACK_USAGE("msi_domain_ops_init", 16),
STACK_USAGE("msi_domain_ops_check", 0),
STACK_USAGE("msi_create_irq_domain", 8),
STACK_USAGE("msi_domain_prepare_irqs", 40),
STACK_USAGE("msi_domain_populate_irqs", 80),
STACK_USAGE("msi_add_msi_desc", 40),
STACK_USAGE("__msi_domain_alloc_irqs", 176),
STACK_USAGE("msi_domain_alloc_irqs_descs_locked", 40),
STACK_USAGE("msi_domain_alloc_irqs", 24),
STACK_USAGE("__msi_domain_free_irqs", 56),
STACK_USAGE("suspend_device_irqs", 48),
STACK_USAGE("irq_pm_check_wakeup", 16),
STACK_USAGE("resume_irqs", 40),
STACK_USAGE("rearm_wake_irq", 24),
STACK_USAGE("irq_pm_syscore_resume", 0),
STACK_USAGE("irq_pm_init_ops", 0),
STACK_USAGE("resume_device_irqs", 0),
STACK_USAGE("irq_pm_install_action", 0),
STACK_USAGE("irq_pm_remove_action", 0),
STACK_USAGE("irq_affinity_proc_show", 8),
STACK_USAGE("irq_affinity_list_proc_show", 8),
STACK_USAGE("irq_affinity_proc_write", 56),
STACK_USAGE("irq_affinity_list_proc_write", 56),
STACK_USAGE("irq_affinity_proc_open", 0),
STACK_USAGE("irq_affinity_list_proc_open", 0),
STACK_USAGE("irq_effective_aff_proc_show", 8),
STACK_USAGE("irq_effective_aff_list_proc_show", 8),
STACK_USAGE("default_affinity_show", 0),
STACK_USAGE("default_affinity_write", 40),
STACK_USAGE("default_affinity_open", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("irq_node_proc_show", 8),
STACK_USAGE("irq_spurious_proc_show", 24),
STACK_USAGE("register_handler_proc", 184),
STACK_USAGE("register_irq_proc", 48),
STACK_USAGE("unregister_irq_proc", 40),
STACK_USAGE("unregister_handler_proc", 0),
STACK_USAGE("init_irq_proc", 8),
STACK_USAGE("arch_show_interrupts", 0),
STACK_USAGE("show_interrupts", 48),
STACK_USAGE("irq_affinity_hint_proc_show", 56),
STACK_USAGE("check_irq_resend", 8),
STACK_USAGE("resend_irqs", 24),
STACK_USAGE("misrouted_irq", 32),
STACK_USAGE("poll_spurious_irqs", 32),
STACK_USAGE("__report_bad_irq", 24),
STACK_USAGE("note_interrupt", 24),
STACK_USAGE("irq_wait_for_poll", 24),
STACK_USAGE("noirqdebug_setup", 0),
STACK_USAGE("irqfixup_setup", 0),
STACK_USAGE("irqpoll_setup", 0),
STACK_USAGE("try_one_irq", 32),
STACK_USAGE("irq_work_queue", 24),
STACK_USAGE("irq_work_queue_on", 24),
STACK_USAGE("irq_work_needs_cpu", 8),
STACK_USAGE("irq_work_single", 32),
STACK_USAGE("irq_work_run_list", 56),
STACK_USAGE("irq_work_run", 0),
STACK_USAGE("irq_work_tick", 0),
STACK_USAGE("irq_work_sync", 24),
STACK_USAGE("irq_work_init_threads", 0),
STACK_USAGE("arch_irq_work_raise", 0),
STACK_USAGE("static_key_count", 0),
STACK_USAGE("static_key_slow_inc_cpuslocked", 8),
STACK_USAGE("static_key_slow_inc", 8),
STACK_USAGE("static_key_enable_cpuslocked", 8),
STACK_USAGE("static_key_enable", 8),
STACK_USAGE("static_key_disable_cpuslocked", 16),
STACK_USAGE("static_key_disable", 8),
STACK_USAGE("__static_key_slow_dec_cpuslocked", 8),
STACK_USAGE("jump_label_update_timeout", 8),
STACK_USAGE("jump_label_lock", 0),
STACK_USAGE("static_key_slow_dec", 8),
STACK_USAGE("static_key_slow_dec_cpuslocked", 8),
STACK_USAGE("__static_key_slow_dec_deferred", 24),
STACK_USAGE("__static_key_deferred_flush", 8),
STACK_USAGE("jump_label_rate_limit", 16),
STACK_USAGE("jump_label_unlock", 0),
STACK_USAGE("arch_jump_label_transform_static", 0),
STACK_USAGE("jump_label_cmp", 0),
STACK_USAGE("__jump_label_update", 40),
STACK_USAGE("jump_label_init", 48),
STACK_USAGE("jump_label_apply_nops", 24),
STACK_USAGE("jump_label_swap", 0),
STACK_USAGE("jump_label_del_module", 40),
STACK_USAGE("jump_label_module_notify", 56),
STACK_USAGE("jump_label_init_module", 0),
STACK_USAGE("jump_label_text_reserved", 64),
STACK_USAGE("jump_label_update", 24),
STACK_USAGE("kallsyms_lookup_name", 200),
STACK_USAGE("get_symbol_pos", 8),
STACK_USAGE("kallsyms_lookup_size_offset", 168),
STACK_USAGE("kallsyms_lookup_buildid", 48),
STACK_USAGE("kallsyms_lookup", 0),
STACK_USAGE("lookup_symbol_name", 16),
STACK_USAGE("lookup_symbol_attrs", 40),
STACK_USAGE("__sprint_symbol", 72),
STACK_USAGE("sprint_symbol", 0),
STACK_USAGE("sprint_symbol_build_id", 0),
STACK_USAGE("sprint_symbol_no_offset", 0),
STACK_USAGE("sprint_backtrace", 0),
STACK_USAGE("sprint_backtrace_build_id", 0),
STACK_USAGE("arch_get_kallsym", 0),
STACK_USAGE("update_iter", 24),
STACK_USAGE("s_next", 8),
STACK_USAGE("s_start", 8),
STACK_USAGE("s_stop", 0),
STACK_USAGE("s_show", 0),
STACK_USAGE("kallsyms_show_value", 0),
STACK_USAGE("kallsyms_open", 16),
STACK_USAGE("kallsyms_init", 0),
STACK_USAGE("__ia32_sys_kcmp", 0),
STACK_USAGE("__se_sys_kcmp", 112),
STACK_USAGE("__x64_sys_kcmp", 0),
STACK_USAGE("kcmp_cookies_init", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("get_file_raw_ptr", 16),
STACK_USAGE("__ia32_sys_kexec_load", 0),
STACK_USAGE("__se_sys_kexec_load", 40),
STACK_USAGE("__x64_sys_kexec_load", 0),
STACK_USAGE("__ia32_compat_sys_kexec_load", 88),
STACK_USAGE("do_kexec_load", 56),
STACK_USAGE("crash_free_reserved_phys_range", 24),
STACK_USAGE("crash_shrink_memory", 24),
STACK_USAGE("crash_save_cpu", 360),
STACK_USAGE("crash_notes_memory_init", 0),
STACK_USAGE("kernel_kexec", 8),
STACK_USAGE("arch_kexec_protect_crashkres", 0),
STACK_USAGE("arch_kexec_unprotect_crashkres", 0),
STACK_USAGE("sanity_check_segment_list", 16),
STACK_USAGE("do_kimage_alloc_init", 0),
STACK_USAGE("kimage_is_destination_range", 0),
STACK_USAGE("kimage_free_page_list", 56),
STACK_USAGE("kimage_alloc_control_pages", 80),
STACK_USAGE("kimage_crash_copy_vmcoreinfo", 24),
STACK_USAGE("machine_kexec_post_load", 0),
STACK_USAGE("kimage_terminate", 0),
STACK_USAGE("kimage_free", 72),
STACK_USAGE("kimage_alloc_page", 72),
STACK_USAGE("crash_setup_regs", 0),
STACK_USAGE("kexec_should_crash", 0),
STACK_USAGE("kimage_load_segment", 80),
STACK_USAGE("kexec_crash_loaded", 0),
STACK_USAGE("__crash_kexec", 192),
STACK_USAGE("crash_kexec", 192),
STACK_USAGE("crash_get_memory_size", 8),
STACK_USAGE("__request_module", 232),
STACK_USAGE("free_modprobe_argv", 8),
STACK_USAGE("arm_kprobe_ftrace", 32),
STACK_USAGE("disarm_kprobe_ftrace", 32),
STACK_USAGE("alloc_insn_page", 0),
STACK_USAGE("arm_kprobe", 16),
STACK_USAGE("disarm_kprobe", 24),
STACK_USAGE("aggr_pre_handler", 40),
STACK_USAGE("aggr_post_handler", 40),
STACK_USAGE("kprobes_inc_nmissed_count", 0),
STACK_USAGE("kprobe_busy_begin", 0),
STACK_USAGE("free_insn_page", 0),
STACK_USAGE("kprobe_busy_end", 0),
STACK_USAGE("arch_within_kprobe_blacklist", 0),
STACK_USAGE("__get_insn_slot", 32),
STACK_USAGE("within_kprobe_blacklist", 168),
STACK_USAGE("arch_adjust_kprobe_addr", 0),
STACK_USAGE("register_kprobe", 80),
STACK_USAGE("__disable_kprobe", 16),
STACK_USAGE("__unregister_kprobe_top", 8),
STACK_USAGE("register_kprobes", 32),
STACK_USAGE("unregister_kprobe", 16),
STACK_USAGE("unregister_kprobes", 48),
STACK_USAGE("kprobe_exceptions_notify", 0),
STACK_USAGE("pre_handler_kretprobe", 24),
STACK_USAGE("kretprobe_rethook_handler", 24),
STACK_USAGE("kprobe_on_func_entry", 48),
STACK_USAGE("register_kretprobe", 56),
STACK_USAGE("register_kretprobes", 32),
STACK_USAGE("unregister_kretprobe", 16),
STACK_USAGE("unregister_kretprobes", 48),
STACK_USAGE("collect_garbage_slots", 40),
STACK_USAGE("kill_kprobe", 8),
STACK_USAGE("disable_kprobe", 16),
STACK_USAGE("enable_kprobe", 24),
STACK_USAGE("dump_kprobe", 0),
STACK_USAGE("kprobe_add_ksym_blacklist", 40),
STACK_USAGE("kprobe_add_area_blacklist", 72),
STACK_USAGE("arch_kprobe_get_kallsym", 0),
STACK_USAGE("kprobe_get_kallsym", 48),
STACK_USAGE("arch_populate_kprobe_blacklist", 0),
STACK_USAGE("populate_kprobe_blacklist", 16),
STACK_USAGE("__free_insn_slot", 40),
STACK_USAGE("kprobes_module_callback", 72),
STACK_USAGE("kprobe_free_init_mem", 32),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("init_kprobes", 24),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("init_optprobes", 0),
STACK_USAGE("report_probe", 64),
STACK_USAGE("kprobe_seq_start", 0),
STACK_USAGE("kprobe_seq_next", 0),
STACK_USAGE("kprobe_seq_stop", 0),
STACK_USAGE("show_kprobe_addr", 200),
STACK_USAGE("kprobes_open", 16),
STACK_USAGE("kprobe_blacklist_seq_start", 8),
STACK_USAGE("kprobe_blacklist_seq_next", 0),
STACK_USAGE("kprobe_blacklist_seq_show", 16),
STACK_USAGE("kprobe_blacklist_seq_stop", 0),
STACK_USAGE("kprobe_blacklist_open", 16),
STACK_USAGE("read_enabled_file_bool", 16),
STACK_USAGE("__is_insn_slot_addr", 24),
STACK_USAGE("write_enabled_file_bool", 64),
STACK_USAGE("debugfs_kprobe_init", 8),
STACK_USAGE("kprobe_cache_get_kallsym", 48),
STACK_USAGE("alloc_optinsn_page", 0),
STACK_USAGE("free_optinsn_page", 0),
STACK_USAGE("get_kprobe", 0),
STACK_USAGE("opt_pre_handler", 32),
STACK_USAGE("kprobe_optimizer", 40),
STACK_USAGE("wait_for_kprobe_optimizer", 16),
STACK_USAGE("optimize_kprobe", 8),
STACK_USAGE("kprobe_lookup_name", 0),
STACK_USAGE("force_unoptimize_kprobe", 8),
STACK_USAGE("unoptimize_kprobe", 16),
STACK_USAGE("try_to_optimize_kprobe", 16),
STACK_USAGE("optimize_all_kprobes", 16),
STACK_USAGE("proc_kprobes_optimization_handler", 40),
STACK_USAGE("kexec_crash_size_show", 8),
STACK_USAGE("kexec_crash_size_store", 24),
STACK_USAGE("vmcoreinfo_show", 24),
STACK_USAGE("fscaps_show", 0),
STACK_USAGE("rcu_expedited_show", 0),
STACK_USAGE("rcu_expedited_store", 8),
STACK_USAGE("rcu_normal_show", 0),
STACK_USAGE("rcu_normal_store", 8),
STACK_USAGE("notes_read", 8),
STACK_USAGE("ksysfs_init", 16),
STACK_USAGE("uevent_seqnum_show", 0),
STACK_USAGE("profiling_show", 0),
STACK_USAGE("profiling_store", 8),
STACK_USAGE("kexec_loaded_show", 0),
STACK_USAGE("kexec_crash_loaded_show", 8),
STACK_USAGE("kthread_delayed_work_timer_fn", 40),
STACK_USAGE("__kthread_queue_delayed_work", 24),
STACK_USAGE("kthread_queue_delayed_work", 40),
STACK_USAGE("set_kthread_struct", 24),
STACK_USAGE("kthread_flush_work_fn", 0),
STACK_USAGE("kthread_flush_work", 160),
STACK_USAGE("kthread_mod_delayed_work", 48),
STACK_USAGE("__kthread_cancel_work_sync", 32),
STACK_USAGE("free_kthread_struct", 8),
STACK_USAGE("kthread_cancel_work_sync", 0),
STACK_USAGE("kthread_cancel_delayed_work_sync", 0),
STACK_USAGE("kthread_flush_worker", 176),
STACK_USAGE("kthread_destroy_worker", 16),
STACK_USAGE("kthread_use_mm", 48),
STACK_USAGE("kthread_unuse_mm", 40),
STACK_USAGE("kthread_associate_blkcg", 32),
STACK_USAGE("kthread_blkcg", 0),
STACK_USAGE("kthread_should_stop", 0),
STACK_USAGE("__kthread_should_park", 0),
STACK_USAGE("kthread_should_park", 0),
STACK_USAGE("kthread_freezable_should_stop", 16),
STACK_USAGE("kthread_func", 0),
STACK_USAGE("kthread_data", 0),
STACK_USAGE("kthread_probe_data", 16),
STACK_USAGE("__kthread_parkme", 32),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("kthread_parkme", 0),
STACK_USAGE("kthread_exit", 8),
STACK_USAGE("kthread_complete_and_exit", 8),
STACK_USAGE("kthread", 48),
STACK_USAGE("tsk_fork_get_node", 0),
STACK_USAGE("__kthread_create_on_node", 216),
STACK_USAGE("kthread_create_on_node", 88),
STACK_USAGE("kthread_bind_mask", 32),
STACK_USAGE("kthread_bind", 32),
STACK_USAGE("kthread_create_on_cpu", 40),
STACK_USAGE("kthread_set_per_cpu", 0),
STACK_USAGE("kthread_is_per_cpu", 0),
STACK_USAGE("kthread_unpark", 40),
STACK_USAGE("kthread_park", 24),
STACK_USAGE("kthread_stop", 24),
STACK_USAGE("kthreadd", 56),
STACK_USAGE("to_kthread", 0),
STACK_USAGE("__kthread_init_worker", 48),
STACK_USAGE("kthread_worker_fn", 48),
STACK_USAGE("__kthread_create_worker", 64),
STACK_USAGE("kthread_create_worker", 88),
STACK_USAGE("kthread_create_worker_on_cpu", 88),
STACK_USAGE("kthread_insert_work", 24),
STACK_USAGE("get_kthread_comm", 0),
STACK_USAGE("kthread_queue_work", 32),
STACK_USAGE("init_data_structures_once", 0),
STACK_USAGE("lockdep_unlock", 16),
STACK_USAGE("lockdep_register_key", 32),
STACK_USAGE("is_dynamic_key", 16),
STACK_USAGE("register_lock_class", 80),
STACK_USAGE("graph_lock", 24),
STACK_USAGE("add_lock_to_list", 48),
STACK_USAGE("__bpf_trace_lock_acquire", 0),
STACK_USAGE("__traceiter_lock_acquire", 48),
STACK_USAGE("perf_trace_lock_acquire", 88),
STACK_USAGE("trace_event_raw_event_lock_acquire", 104),
STACK_USAGE("trace_raw_output_lock_acquire", 24),
STACK_USAGE("__bfs", 56),
STACK_USAGE("print_circular_bug_entry", 32),
STACK_USAGE("print_circular_bug_header", 48),
STACK_USAGE("hlock_class", 0),
STACK_USAGE("hlock_conflict", 16),
STACK_USAGE("print_circular_bug", 48),
STACK_USAGE("print_bfs_bug", 16),
STACK_USAGE("noop_count", 0),
STACK_USAGE("lockdep_count_forward_deps", 96),
STACK_USAGE("lockdep_count_backward_deps", 96),
STACK_USAGE("check_path", 8),
STACK_USAGE("check_noncircular", 104),
STACK_USAGE("find_usage_forwards", 32),
STACK_USAGE("find_usage_backwards", 32),
STACK_USAGE("print_lock_class_header", 56),
STACK_USAGE("print_shortest_lock_dependencies", 24),
STACK_USAGE("print_shortest_lock_dependencies_backwards", 32),
STACK_USAGE("print_irq_lock_scenario", 24),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("add_chain_block", 0),
STACK_USAGE("lock_chain_get_class", 0),
STACK_USAGE("lockdep_next_lockchain", 0),
STACK_USAGE("lock_chain_count", 0),
STACK_USAGE("print_usage_bug", 48),
STACK_USAGE("print_irq_inversion_bug", 72),
STACK_USAGE("__bpf_trace_lock", 0),
STACK_USAGE("perf_trace_lock", 80),
STACK_USAGE("trace_event_raw_event_lock", 88),
STACK_USAGE("trace_raw_output_lock", 24),
STACK_USAGE("print_irqtrace_events", 8),
STACK_USAGE("HARDIRQ_verbose", 0),
STACK_USAGE("SOFTIRQ_verbose", 0),
STACK_USAGE("mark_lock_irq", 120),
STACK_USAGE("lockdep_init_task", 0),
STACK_USAGE("lockdep_hardirqs_on_prepare", 48),
STACK_USAGE("lockdep_hardirqs_on", 32),
STACK_USAGE("lockdep_hardirqs_off", 32),
STACK_USAGE("lockdep_softirqs_on", 40),
STACK_USAGE("lockdep_set_selftest_task", 0),
STACK_USAGE("lockdep_softirqs_off", 16),
STACK_USAGE("mark_lock", 48),
STACK_USAGE("lockdep_init_map_type", 40),
STACK_USAGE("__lock_acquire", 304),
STACK_USAGE("queued_spin_lock_slowpath", 0),
STACK_USAGE("print_unlock_imbalance_bug", 184),
STACK_USAGE("match_held_lock", 16),
STACK_USAGE("reacquire_held_locks", 64),
STACK_USAGE("save_trace", 72),
STACK_USAGE("lock_set_class", 104),
STACK_USAGE("lock_downgrade", 80),
STACK_USAGE("verify_lock_unused", 8),
STACK_USAGE("read_lock_is_recursive", 0),
STACK_USAGE("lock_acquire", 112),
STACK_USAGE("lock_release", 88),
STACK_USAGE("lock_is_held_type", 64),
STACK_USAGE("lockdep_stack_trace_count", 0),
STACK_USAGE("lock_pin_lock", 64),
STACK_USAGE("lock_repin_lock", 64),
STACK_USAGE("lock_unpin_lock", 64),
STACK_USAGE("lockdep_stack_hash_count", 0),
STACK_USAGE("__traceiter_lock_release", 24),
STACK_USAGE("lockdep_reset", 24),
STACK_USAGE("zap_class", 56),
STACK_USAGE("__free_zapped_classes", 8),
STACK_USAGE("free_zapped_rcu", 32),
STACK_USAGE("lockdep_free_key_range", 72),
STACK_USAGE("__lockdep_reset_lock", 16),
STACK_USAGE("lockdep_reset_lock", 48),
STACK_USAGE("lockdep_unregister_key", 72),
STACK_USAGE("__get_key_name", 0),
STACK_USAGE("lockdep_init", 0),
STACK_USAGE("debug_check_no_locks_freed", 64),
STACK_USAGE("print_held_locks_bug", 16),
STACK_USAGE("debug_check_no_locks_held", 0),
STACK_USAGE("debug_show_all_locks", 24),
STACK_USAGE("debug_show_held_locks", 0),
STACK_USAGE("lockdep_sys_exit", 8),
STACK_USAGE("lockdep_rcu_suspicious", 48),
STACK_USAGE("get_usage_chars", 0),
STACK_USAGE("__print_lock_name", 152),
STACK_USAGE("print_lock", 40),
STACK_USAGE("lockdep_print_held_locks", 24),
STACK_USAGE("print_kernel_ident", 8),
STACK_USAGE("static_obj", 16),
STACK_USAGE("count_matching_names", 40),
STACK_USAGE("look_up_lock_class", 24),
STACK_USAGE("assign_lock_key", 24),
STACK_USAGE("lc_start", 0),
STACK_USAGE("lc_next", 8),
STACK_USAGE("lc_stop", 0),
STACK_USAGE("lc_show", 32),
STACK_USAGE("lockdep_stats_show", 144),
STACK_USAGE("l_next", 0),
STACK_USAGE("l_start", 0),
STACK_USAGE("l_stop", 0),
STACK_USAGE("print_name", 168),
STACK_USAGE("lockdep_proc_init", 0),
STACK_USAGE("l_show", 48),
STACK_USAGE("mutex_destroy", 8),
STACK_USAGE("debug_mutex_lock_common", 0),
STACK_USAGE("debug_mutex_wake_waiter", 16),
STACK_USAGE("debug_mutex_free_waiter", 8),
STACK_USAGE("debug_mutex_add_waiter", 16),
STACK_USAGE("debug_mutex_remove_waiter", 16),
STACK_USAGE("debug_mutex_unlock", 8),
STACK_USAGE("debug_mutex_init", 24),
STACK_USAGE("mutex_trylock", 40),
STACK_USAGE("atomic_dec_and_mutex_lock", 24),
STACK_USAGE("mutex_spin_on_owner", 0),
STACK_USAGE("__ww_mutex_check_waiters", 56),
STACK_USAGE("mutex_optimistic_spin", 48),
STACK_USAGE("__mutex_init", 24),
STACK_USAGE("mutex_unlock", 0),
STACK_USAGE("ww_mutex_unlock", 8),
STACK_USAGE("__mutex_lock_common", 144),
STACK_USAGE("ww_mutex_trylock", 48),
STACK_USAGE("mutex_lock_nested", 0),
STACK_USAGE("_mutex_lock_nest_lock", 0),
STACK_USAGE("mutex_lock_killable_nested", 0),
STACK_USAGE("mutex_lock_interruptible_nested", 0),
STACK_USAGE("mutex_lock_io_nested", 24),
STACK_USAGE("ww_mutex_lock", 24),
STACK_USAGE("ww_mutex_lock_interruptible", 24),
STACK_USAGE("mutex_is_locked", 0),
STACK_USAGE("__mutex_unlock_slowpath", 56),
STACK_USAGE("osq_unlock", 8),
STACK_USAGE("osq_wait_next", 24),
STACK_USAGE("osq_lock", 24),
STACK_USAGE("percpu_rwsem_wake_function", 32),
STACK_USAGE("__percpu_init_rwsem", 32),
STACK_USAGE("percpu_rwsem_wait", 88),
STACK_USAGE("__percpu_down_read", 24),
STACK_USAGE("percpu_down_write", 48),
STACK_USAGE("percpu_up_write", 8),
STACK_USAGE("percpu_free_rwsem", 8),
STACK_USAGE("__percpu_rwsem_trylock", 16),
STACK_USAGE("queued_read_lock_slowpath", 16),
STACK_USAGE("queued_spin_lock_slowpath", 0),
STACK_USAGE("queued_write_lock_slowpath", 16),
STACK_USAGE("__pv_init_lock_hash", 0),
STACK_USAGE("__pv_queued_spin_lock_slowpath", 64),
STACK_USAGE("native_queued_spin_lock_slowpath", 24),
STACK_USAGE("__pv_queued_spin_unlock_slowpath", 0),
STACK_USAGE("parse_nopvspin", 0),
STACK_USAGE("pv_hybrid_queued_unfair_trylock", 0),
STACK_USAGE("rt_mutex_lock_killable", 136),
STACK_USAGE("task_blocks_on_rt_mutex", 64),
STACK_USAGE("rt_mutex_trylock", 32),
STACK_USAGE("mark_wakeup_next_waiter", 56),
STACK_USAGE("rt_mutex_unlock", 56),
STACK_USAGE("remove_waiter", 56),
STACK_USAGE("rt_mutex_slowlock_block", 48),
STACK_USAGE("rt_mutex_futex_trylock", 24),
STACK_USAGE("rt_mutex_handle_deadlock", 8),
STACK_USAGE("__rt_mutex_futex_trylock", 8),
STACK_USAGE("__rt_mutex_slowlock", 40),
STACK_USAGE("__rt_mutex_futex_unlock", 24),
STACK_USAGE("rt_mutex_futex_unlock", 64),
STACK_USAGE("__rt_mutex_init", 24),
STACK_USAGE("rt_mutex_init_proxy_locked", 16),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rt_mutex_proxy_unlock", 8),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("__rt_mutex_start_proxy_lock", 24),
STACK_USAGE("rt_mutex_start_proxy_lock", 40),
STACK_USAGE("rt_mutex_wait_proxy_lock", 24),
STACK_USAGE("rt_mutex_base_init", 8),
STACK_USAGE("rt_mutex_cleanup_proxy_lock", 32),
STACK_USAGE("rt_mutex_adjust_pi", 24),
STACK_USAGE("rt_mutex_postunlock", 0),
STACK_USAGE("rt_mutex_debug_task_free", 8),
STACK_USAGE("rt_mutex_lock_nested", 136),
STACK_USAGE("_rt_mutex_lock_nest_lock", 136),
STACK_USAGE("rt_mutex_adjust_prio_chain", 96),
STACK_USAGE("rt_mutex_lock_interruptible", 136),
STACK_USAGE("try_to_take_rt_mutex", 32),
STACK_USAGE("rwsem_down_write_slowpath", 136),
STACK_USAGE("rwsem_wake", 48),
STACK_USAGE("__down_read_common", 24),
STACK_USAGE("__up_read", 24),
STACK_USAGE("down_read", 8),
STACK_USAGE("down_read_interruptible", 32),
STACK_USAGE("down_read_killable", 32),
STACK_USAGE("down_read_trylock", 16),
STACK_USAGE("down_write", 8),
STACK_USAGE("down_write_killable", 32),
STACK_USAGE("down_write_trylock", 16),
STACK_USAGE("up_read", 8),
STACK_USAGE("up_write", 48),
STACK_USAGE("downgrade_write", 48),
STACK_USAGE("down_read_nested", 16),
STACK_USAGE("down_read_killable_nested", 40),
STACK_USAGE("_down_write_nest_lock", 16),
STACK_USAGE("down_read_non_owner", 8),
STACK_USAGE("down_write_nested", 16),
STACK_USAGE("down_write_killable_nested", 40),
STACK_USAGE("up_read_non_owner", 16),
STACK_USAGE("__init_rwsem", 24),
STACK_USAGE("rwsem_mark_wake", 64),
STACK_USAGE("rwsem_spin_on_owner", 0),
STACK_USAGE("rwsem_down_read_slowpath", 120),
STACK_USAGE("down_killable", 24),
STACK_USAGE("down_trylock", 16),
STACK_USAGE("down_timeout", 32),
STACK_USAGE("up", 16),
STACK_USAGE("__down_common", 72),
STACK_USAGE("__down", 0),
STACK_USAGE("__down_interruptible", 0),
STACK_USAGE("__down_killable", 0),
STACK_USAGE("__down_timeout", 0),
STACK_USAGE("__up", 0),
STACK_USAGE("down", 16),
STACK_USAGE("down_interruptible", 24),
STACK_USAGE("_raw_spin_trylock", 16),
STACK_USAGE("_raw_spin_trylock_bh", 24),
STACK_USAGE("_raw_spin_lock", 8),
STACK_USAGE("_raw_spin_lock_irqsave", 32),
STACK_USAGE("_raw_spin_lock_irq", 24),
STACK_USAGE("_raw_spin_lock_bh", 16),
STACK_USAGE("_raw_spin_unlock", 8),
STACK_USAGE("_raw_spin_unlock_irqrestore", 16),
STACK_USAGE("_raw_spin_unlock_irq", 8),
STACK_USAGE("_raw_spin_unlock_bh", 16),
STACK_USAGE("_raw_read_trylock", 16),
STACK_USAGE("_raw_read_lock", 8),
STACK_USAGE("_raw_read_lock_irqsave", 32),
STACK_USAGE("_raw_read_lock_irq", 24),
STACK_USAGE("_raw_read_lock_bh", 16),
STACK_USAGE("_raw_read_unlock", 8),
STACK_USAGE("_raw_read_unlock_irqrestore", 16),
STACK_USAGE("_raw_read_unlock_irq", 8),
STACK_USAGE("_raw_read_unlock_bh", 16),
STACK_USAGE("_raw_write_trylock", 16),
STACK_USAGE("_raw_write_lock", 8),
STACK_USAGE("_raw_write_lock_nested", 16),
STACK_USAGE("_raw_write_lock_irqsave", 32),
STACK_USAGE("_raw_write_lock_irq", 24),
STACK_USAGE("_raw_write_lock_bh", 16),
STACK_USAGE("_raw_write_unlock", 8),
STACK_USAGE("_raw_write_unlock_irqrestore", 16),
STACK_USAGE("_raw_write_unlock_irq", 8),
STACK_USAGE("_raw_write_unlock_bh", 16),
STACK_USAGE("_raw_spin_lock_nested", 16),
STACK_USAGE("_raw_spin_lock_irqsave_nested", 40),
STACK_USAGE("_raw_spin_lock_nest_lock", 16),
STACK_USAGE("in_lock_functions", 0),
STACK_USAGE("do_raw_spin_lock", 16),
STACK_USAGE("do_raw_spin_trylock", 0),
STACK_USAGE("do_raw_spin_unlock", 24),
STACK_USAGE("rwlock_bug", 16),
STACK_USAGE("do_raw_read_lock", 8),
STACK_USAGE("do_raw_read_trylock", 0),
STACK_USAGE("__raw_spin_lock_init", 32),
STACK_USAGE("do_raw_read_unlock", 8),
STACK_USAGE("do_raw_write_lock", 16),
STACK_USAGE("do_raw_write_trylock", 0),
STACK_USAGE("do_raw_write_unlock", 16),
STACK_USAGE("__rwlock_init", 24),
STACK_USAGE("queued_spin_lock_slowpath", 0),
STACK_USAGE("spin_bug", 24),
STACK_USAGE("__symbol_put", 56),
STACK_USAGE("symbol_put_addr", 8),
STACK_USAGE("show_refcnt", 0),
STACK_USAGE("__module_get", 8),
STACK_USAGE("try_module_get", 16),
STACK_USAGE("__bpf_trace_module_request", 0),
STACK_USAGE("__traceiter_module_request", 32),
STACK_USAGE("perf_trace_module_request", 96),
STACK_USAGE("trace_event_raw_event_module_request", 96),
STACK_USAGE("trace_raw_output_module_request", 24),
STACK_USAGE("module_put", 8),
STACK_USAGE("show_initstate", 0),
STACK_USAGE("store_uevent", 8),
STACK_USAGE("show_coresize", 0),
STACK_USAGE("show_initsize", 0),
STACK_USAGE("show_taint", 0),
STACK_USAGE("resolve_symbol", 136),
STACK_USAGE("module_sect_read", 72),
STACK_USAGE("add_sect_attrs", 56),
STACK_USAGE("module_notes_read", 8),
STACK_USAGE("add_notes_attrs", 40),
STACK_USAGE("__mod_tree_insert", 16),
STACK_USAGE("mod_sysfs_setup", 168),
STACK_USAGE("mod_tree_remove", 8),
STACK_USAGE("module_enable_ro", 16),
STACK_USAGE("module_memfree", 0),
STACK_USAGE("module_arch_cleanup", 0),
STACK_USAGE("module_arch_freeing_init", 0),
STACK_USAGE("free_module", 152),
STACK_USAGE("__symbol_get", 56),
STACK_USAGE("simplify_symbols", 232),
STACK_USAGE("apply_relocations", 32),
STACK_USAGE("arch_mod_section_prepend", 0),
STACK_USAGE("setup_modinfo", 64),
STACK_USAGE("free_modinfo", 8),
STACK_USAGE("set_module_sig_enforced", 0),
STACK_USAGE("module_alloc", 0),
STACK_USAGE("module_init_section", 0),
STACK_USAGE("module_exit_section", 0),
STACK_USAGE("is_module_sig_enforced", 0),
STACK_USAGE("register_module_notifier", 0),
STACK_USAGE("unregister_module_notifier", 0),
STACK_USAGE("__bpf_trace_module_load", 0),
STACK_USAGE("__traceiter_module_load", 16),
STACK_USAGE("perf_trace_module_load", 88),
STACK_USAGE("trace_event_raw_event_module_load", 88),
STACK_USAGE("trace_module_load", 0),
STACK_USAGE("trace_raw_output_module_load", 32),
STACK_USAGE("find_module_sections", 64),
STACK_USAGE("__module_put_and_kthread_exit", 8),
STACK_USAGE("check_module_license_and_versions", 24),
STACK_USAGE("module_frob_arch_sections", 0),
STACK_USAGE("module_finalize", 0),
STACK_USAGE("post_relocation", 72),
STACK_USAGE("finished_loading", 48),
STACK_USAGE("do_free_init", 16),
STACK_USAGE("do_init_module", 24),
STACK_USAGE("complete_formation", 128),
STACK_USAGE("prepare_coming_module", 8),
STACK_USAGE("unknown_module_param_cb", 24),
STACK_USAGE("load_module", 184),
STACK_USAGE("__ia32_sys_init_module", 0),
STACK_USAGE("__se_sys_init_module", 200),
STACK_USAGE("__x64_sys_init_module", 0),
STACK_USAGE("__ia32_sys_finit_module", 0),
STACK_USAGE("__se_sys_finit_module", 176),
STACK_USAGE("__x64_sys_finit_module", 0),
STACK_USAGE("find_kallsyms_symbol", 104),
STACK_USAGE("dereference_module_function_descriptor", 0),
STACK_USAGE("module_address_lookup", 48),
STACK_USAGE("lookup_module_symbol_name", 24),
STACK_USAGE("lookup_module_symbol_attrs", 48),
STACK_USAGE("module_get_kallsym", 72),
STACK_USAGE("find_kallsyms_symbol_value", 48),
STACK_USAGE("module_kallsyms_lookup_name", 32),
STACK_USAGE("m_start", 8),
STACK_USAGE("m_next", 0),
STACK_USAGE("m_stop", 0),
STACK_USAGE("m_show", 72),
STACK_USAGE("modules_open", 16),
STACK_USAGE("proc_modules_init", 0),
STACK_USAGE("search_module_extables", 8),
STACK_USAGE("is_module_address", 8),
STACK_USAGE("__module_address", 8),
STACK_USAGE("is_module_text_address", 16),
STACK_USAGE("__module_text_address", 8),
STACK_USAGE("print_modules", 72),
STACK_USAGE("cmp_name", 0),
STACK_USAGE("__bpf_trace_module_free", 0),
STACK_USAGE("__traceiter_module_free", 16),
STACK_USAGE("perf_trace_module_free", 80),
STACK_USAGE("trace_event_raw_event_module_free", 80),
STACK_USAGE("trace_raw_output_module_free", 24),
STACK_USAGE("find_symbol", 120),
STACK_USAGE("find_module_all", 56),
STACK_USAGE("find_module", 8),
STACK_USAGE("percpu_modalloc", 24),
STACK_USAGE("__is_module_percpu_address", 48),
STACK_USAGE("is_module_percpu_address", 0),
STACK_USAGE("__bpf_trace_module_refcnt", 0),
STACK_USAGE("perf_trace_module_refcnt", 96),
STACK_USAGE("trace_event_raw_event_module_refcnt", 96),
STACK_USAGE("trace_raw_output_module_refcnt", 24),
STACK_USAGE("free_modinfo_version", 8),
STACK_USAGE("modinfo_version_exists", 0),
STACK_USAGE("setup_modinfo_version", 8),
STACK_USAGE("show_modinfo_version", 0),
STACK_USAGE("free_modinfo_srcversion", 8),
STACK_USAGE("modinfo_srcversion_exists", 0),
STACK_USAGE("setup_modinfo_srcversion", 8),
STACK_USAGE("show_modinfo_srcversion", 0),
STACK_USAGE("module_unload_free", 48),
STACK_USAGE("module_refcount", 0),
STACK_USAGE("__ia32_sys_delete_module", 0),
STACK_USAGE("__se_sys_delete_module", 104),
STACK_USAGE("__x64_sys_delete_module", 0),
STACK_USAGE("__traceiter_module_get", 24),
STACK_USAGE("trace_module_get", 0),
STACK_USAGE("__traceiter_module_put", 24),
STACK_USAGE("mod_check_sig", 8),
STACK_USAGE("mod_verify_sig", 48),
STACK_USAGE("atomic_notifier_chain_register", 32),
STACK_USAGE("atomic_notifier_chain_unregister", 24),
STACK_USAGE("atomic_notifier_call_chain", 40),
STACK_USAGE("blocking_notifier_chain_register", 24),
STACK_USAGE("notifier_chain_register", 0),
STACK_USAGE("blocking_notifier_chain_unregister", 24),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("blocking_notifier_call_chain_robust", 56),
STACK_USAGE("blocking_notifier_call_chain", 48),
STACK_USAGE("raw_notifier_chain_register", 0),
STACK_USAGE("raw_notifier_chain_unregister", 0),
STACK_USAGE("raw_notifier_call_chain_robust", 56),
STACK_USAGE("raw_notifier_call_chain", 32),
STACK_USAGE("srcu_notifier_chain_register", 24),
STACK_USAGE("srcu_notifier_chain_unregister", 24),
STACK_USAGE("srcu_notifier_call_chain", 64),
STACK_USAGE("srcu_init_notifier_head", 8),
STACK_USAGE("notify_die", 48),
STACK_USAGE("register_die_notifier", 24),
STACK_USAGE("unregister_die_notifier", 16),
STACK_USAGE("notifier_call_chain", 40),
STACK_USAGE("copy_namespaces", 40),
STACK_USAGE("free_nsproxy", 8),
STACK_USAGE("unshare_nsproxy_namespaces", 32),
STACK_USAGE("switch_task_namespaces", 32),
STACK_USAGE("exit_task_namespaces", 24),
STACK_USAGE("put_net", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("get_time_ns", 8),
STACK_USAGE("__ia32_sys_setns", 0),
STACK_USAGE("__se_sys_setns", 104),
STACK_USAGE("__x64_sys_setns", 0),
STACK_USAGE("nsproxy_cache_init", 0),
STACK_USAGE("create_new_namespaces", 48),
STACK_USAGE("put_cgroup_ns", 0),
STACK_USAGE("crash_smp_send_stop", 0),
STACK_USAGE("nmi_panic", 0),
STACK_USAGE("panic_print_sys_info", 0),
STACK_USAGE("panic", 120),
STACK_USAGE("print_tainted", 0),
STACK_USAGE("test_taint", 0),
STACK_USAGE("get_taint", 0),
STACK_USAGE("add_taint", 8),
STACK_USAGE("do_oops_enter_exit", 24),
STACK_USAGE("oops_may_print", 0),
STACK_USAGE("oops_enter", 0),
STACK_USAGE("oops_exit", 0),
STACK_USAGE("__warn", 48),
STACK_USAGE("__warn_printk", 104),
STACK_USAGE("clear_warn_once_set", 0),
STACK_USAGE("clear_warn_once_fops_open", 0),
STACK_USAGE("register_warn_debugfs", 0),
STACK_USAGE("__stack_chk_fail", 0),
STACK_USAGE("oops_setup", 0),
STACK_USAGE("panic_on_taint_setup", 32),
STACK_USAGE("no_blink", 0),
STACK_USAGE("panic_smp_self_stop", 0),
STACK_USAGE("nmi_panic_self_stop", 0),
STACK_USAGE("parse_args", 152),
STACK_USAGE("param_get_byte", 0),
STACK_USAGE("param_set_byte", 0),
STACK_USAGE("param_get_short", 0),
STACK_USAGE("param_set_short", 0),
STACK_USAGE("param_get_ushort", 0),
STACK_USAGE("param_set_ushort", 0),
STACK_USAGE("param_get_int", 0),
STACK_USAGE("param_set_int", 0),
STACK_USAGE("param_get_uint", 0),
STACK_USAGE("param_set_uint", 0),
STACK_USAGE("param_get_long", 0),
STACK_USAGE("param_set_long", 0),
STACK_USAGE("param_get_ulong", 0),
STACK_USAGE("param_set_ulong", 0),
STACK_USAGE("param_get_ullong", 0),
STACK_USAGE("param_set_ullong", 0),
STACK_USAGE("param_get_hexint", 0),
STACK_USAGE("param_set_hexint", 0),
STACK_USAGE("param_set_uint_minmax", 40),
STACK_USAGE("param_set_charp", 24),
STACK_USAGE("param_get_charp", 0),
STACK_USAGE("param_free_charp", 8),
STACK_USAGE("param_set_bool", 0),
STACK_USAGE("param_get_bool", 0),
STACK_USAGE("param_set_bool_enable_only", 40),
STACK_USAGE("param_set_invbool", 24),
STACK_USAGE("param_get_invbool", 0),
STACK_USAGE("param_set_bint", 24),
STACK_USAGE("param_array_set", 128),
STACK_USAGE("param_array_get", 96),
STACK_USAGE("param_array_free", 16),
STACK_USAGE("param_set_copystring", 24),
STACK_USAGE("param_get_string", 0),
STACK_USAGE("param_attr_show", 32),
STACK_USAGE("param_attr_store", 48),
STACK_USAGE("kernel_param_lock", 0),
STACK_USAGE("kernel_param_unlock", 0),
STACK_USAGE("add_sysfs_param", 32),
STACK_USAGE("module_param_sysfs_setup", 48),
STACK_USAGE("module_param_sysfs_remove", 8),
STACK_USAGE("destroy_params", 24),
STACK_USAGE("locate_module_kobject", 24),
STACK_USAGE("kernel_add_sysfs_param", 24),
STACK_USAGE("param_sysfs_builtin", 120),
STACK_USAGE("parameqn", 0),
STACK_USAGE("__modver_version_show", 0),
STACK_USAGE("version_sysfs_builtin", 24),
STACK_USAGE("module_attr_show", 0),
STACK_USAGE("module_attr_store", 0),
STACK_USAGE("uevent_filter", 0),
STACK_USAGE("module_kobj_release", 0),
STACK_USAGE("param_sysfs_init", 8),
STACK_USAGE("parameq", 16),
STACK_USAGE("put_pid", 8),
STACK_USAGE("delayed_put_pid", 8),
STACK_USAGE("free_pid", 48),
STACK_USAGE("alloc_pid", 80),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("disable_pid_allocation", 8),
STACK_USAGE("find_pid_ns", 0),
STACK_USAGE("find_vpid", 0),
STACK_USAGE("attach_pid", 0),
STACK_USAGE("local_lock_release", 8),
STACK_USAGE("detach_pid", 0),
STACK_USAGE("change_pid", 24),
STACK_USAGE("exchange_tids", 0),
STACK_USAGE("transfer_pid", 0),
STACK_USAGE("pid_task", 16),
STACK_USAGE("find_task_by_pid_ns", 16),
STACK_USAGE("find_task_by_vpid", 0),
STACK_USAGE("find_get_task_by_vpid", 8),
STACK_USAGE("get_task_pid", 16),
STACK_USAGE("get_pid_task", 32),
STACK_USAGE("find_get_pid", 8),
STACK_USAGE("pid_nr_ns", 0),
STACK_USAGE("pid_vnr", 0),
STACK_USAGE("__task_pid_nr_ns", 24),
STACK_USAGE("task_active_pid_ns", 0),
STACK_USAGE("find_ge_pid", 16),
STACK_USAGE("pidfd_get_pid", 32),
STACK_USAGE("pidfd_get_task", 40),
STACK_USAGE("pidfd_create", 24),
STACK_USAGE("__ia32_sys_pidfd_open", 0),
STACK_USAGE("__se_sys_pidfd_open", 24),
STACK_USAGE("__x64_sys_pidfd_open", 0),
STACK_USAGE("pid_idr_init", 16),
STACK_USAGE("__ia32_sys_pidfd_getfd", 0),
STACK_USAGE("__se_sys_pidfd_getfd", 40),
STACK_USAGE("__x64_sys_pidfd_getfd", 0),
STACK_USAGE("delayed_free_pidns", 8),
STACK_USAGE("copy_pid_ns", 80),
STACK_USAGE("put_pid_ns", 24),
STACK_USAGE("zap_pid_ns_processes", 48),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("reboot_pid_ns", 8),
STACK_USAGE("pidns_get", 8),
STACK_USAGE("pidns_for_children_get", 24),
STACK_USAGE("pidns_put", 24),
STACK_USAGE("pidns_install", 48),
STACK_USAGE("pidns_get_parent", 8),
STACK_USAGE("pidns_owner", 0),
STACK_USAGE("pid_namespaces_init", 0),
STACK_USAGE("pm_prepare_console", 0),
STACK_USAGE("pm_restore_console", 8),
STACK_USAGE("pm_vt_switch_required", 16),
STACK_USAGE("pm_vt_switch_unregister", 8),
STACK_USAGE("disk_show", 40),
STACK_USAGE("disk_store", 32),
STACK_USAGE("system_entering_hibernation", 0),
STACK_USAGE("resume_show", 0),
STACK_USAGE("resume_store", 24),
STACK_USAGE("resume_offset_show", 0),
STACK_USAGE("resume_offset_store", 24),
STACK_USAGE("image_size_show", 0),
STACK_USAGE("image_size_store", 24),
STACK_USAGE("reserved_size_show", 0),
STACK_USAGE("reserved_size_store", 24),
STACK_USAGE("pm_disk_init", 0),
STACK_USAGE("resume_setup", 0),
STACK_USAGE("hibernation_test", 8),
STACK_USAGE("resume_offset_setup", 16),
STACK_USAGE("hibernate_setup", 8),
STACK_USAGE("noresume_setup", 0),
STACK_USAGE("resumewait_setup", 0),
STACK_USAGE("resumedelay_setup", 8),
STACK_USAGE("nohibernate_setup", 0),
STACK_USAGE("trace_suspend_resume", 0),
STACK_USAGE("swsusp_show_speed", 0),
STACK_USAGE("arch_resume_nosmt", 0),
STACK_USAGE("create_image", 40),
STACK_USAGE("hibernation_snapshot", 24),
STACK_USAGE("hibernate_resume_nonboot_cpu_disable", 0),
STACK_USAGE("hibernation_restore", 32),
STACK_USAGE("hibernation_platform_enter", 24),
STACK_USAGE("power_down", 0),
STACK_USAGE("load_image_and_restore", 24),
STACK_USAGE("hibernate", 16),
STACK_USAGE("hibernate_acquire", 0),
STACK_USAGE("hibernate_release", 0),
STACK_USAGE("hibernate_quiet_exec", 24),
STACK_USAGE("hibernation_available", 0),
STACK_USAGE("software_resume", 8),
STACK_USAGE("hibernation_set_ops", 8),
STACK_USAGE("pm_async_show", 0),
STACK_USAGE("pm_async_store", 24),
STACK_USAGE("mem_sleep_show", 16),
STACK_USAGE("mem_sleep_store", 40),
STACK_USAGE("sync_on_suspend_show", 0),
STACK_USAGE("sync_on_suspend_store", 24),
STACK_USAGE("pm_test_show", 40),
STACK_USAGE("lock_system_sleep", 0),
STACK_USAGE("pm_test_store", 48),
STACK_USAGE("success_show", 0),
STACK_USAGE("fail_show", 0),
STACK_USAGE("unlock_system_sleep", 0),
STACK_USAGE("failed_freeze_show", 0),
STACK_USAGE("failed_prepare_show", 0),
STACK_USAGE("failed_suspend_show", 0),
STACK_USAGE("failed_suspend_late_show", 0),
STACK_USAGE("failed_suspend_noirq_show", 0),
STACK_USAGE("failed_resume_show", 0),
STACK_USAGE("failed_resume_early_show", 0),
STACK_USAGE("failed_resume_noirq_show", 0),
STACK_USAGE("last_failed_dev_show", 0),
STACK_USAGE("last_failed_errno_show", 0),
STACK_USAGE("last_failed_step_show", 0),
STACK_USAGE("suspend_stats_show", 80),
STACK_USAGE("suspend_stats_open", 0),
STACK_USAGE("pm_debugfs_init", 0),
STACK_USAGE("pm_print_times_show", 0),
STACK_USAGE("pm_print_times_store", 24),
STACK_USAGE("pm_wakeup_irq_show", 8),
STACK_USAGE("pm_debug_messages_show", 0),
STACK_USAGE("pm_debug_messages_store", 24),
STACK_USAGE("pm_debug_messages_setup", 0),
STACK_USAGE("ksys_sync_helper", 8),
STACK_USAGE("__pm_pr_dbg", 104),
STACK_USAGE("state_show", 16),
STACK_USAGE("state_store", 40),
STACK_USAGE("wakeup_count_show", 24),
STACK_USAGE("wakeup_count_store", 32),
STACK_USAGE("register_pm_notifier", 0),
STACK_USAGE("unregister_pm_notifier", 0),
STACK_USAGE("pm_trace_show", 0),
STACK_USAGE("pm_trace_store", 24),
STACK_USAGE("pm_notifier_call_chain_robust", 8),
STACK_USAGE("pm_trace_dev_match_show", 0),
STACK_USAGE("pm_freeze_timeout_show", 0),
STACK_USAGE("pm_freeze_timeout_store", 24),
STACK_USAGE("pm_notifier_call_chain", 0),
STACK_USAGE("pm_init", 8),
STACK_USAGE("do_poweroff", 0),
STACK_USAGE("handle_poweroff", 0),
STACK_USAGE("pm_sysrq_init", 0),
STACK_USAGE("freeze_processes", 8),
STACK_USAGE("freeze_kernel_threads", 8),
STACK_USAGE("thaw_processes", 32),
STACK_USAGE("trace_suspend_resume", 0),
STACK_USAGE("thaw_kernel_threads", 24),
STACK_USAGE("try_to_freeze_tasks", 80),
STACK_USAGE("pm_qos_update_flags", 40),
STACK_USAGE("cpu_latency_qos_limit", 0),
STACK_USAGE("cpu_latency_qos_request_active", 0),
STACK_USAGE("cpu_latency_qos_add_request", 16),
STACK_USAGE("cpu_latency_qos_update_request", 16),
STACK_USAGE("cpu_latency_qos_remove_request", 8),
STACK_USAGE("cpu_latency_qos_open", 16),
STACK_USAGE("cpu_latency_qos_release", 8),
STACK_USAGE("cpu_latency_qos_read", 56),
STACK_USAGE("cpu_latency_qos_write", 32),
STACK_USAGE("cpu_latency_qos_init", 8),
STACK_USAGE("freq_constraints_init", 8),
STACK_USAGE("freq_qos_read_value", 0),
STACK_USAGE("freq_qos_apply", 0),
STACK_USAGE("freq_qos_add_request", 16),
STACK_USAGE("pm_qos_read_value", 0),
STACK_USAGE("freq_qos_update_request", 0),
STACK_USAGE("freq_qos_remove_request", 16),
STACK_USAGE("freq_qos_add_notifier", 0),
STACK_USAGE("freq_qos_remove_notifier", 0),
STACK_USAGE("pm_qos_update_target", 48),
STACK_USAGE("swsusp_set_page_free", 24),
STACK_USAGE("swsusp_unset_page_free", 24),
STACK_USAGE("swsusp_page_is_forbidden", 24),
STACK_USAGE("mark_nosave_pages", 72),
STACK_USAGE("create_basic_memory_bitmaps", 40),
STACK_USAGE("free_basic_memory_bitmaps", 40),
STACK_USAGE("clear_or_poison_free_pages", 8),
STACK_USAGE("snapshot_additional_pages", 0),
STACK_USAGE("hibernate_reserved_size_init", 0),
STACK_USAGE("saveable_page", 56),
STACK_USAGE("hibernate_image_size_init", 0),
STACK_USAGE("swsusp_free", 24),
STACK_USAGE("hibernate_preallocate_memory", 96),
STACK_USAGE("get_image_page", 72),
STACK_USAGE("swsusp_save", 72),
STACK_USAGE("snapshot_get_image_size", 0),
STACK_USAGE("snapshot_read_next", 40),
STACK_USAGE("get_safe_page", 8),
STACK_USAGE("alloc_image_page", 32),
STACK_USAGE("free_image_page", 40),
STACK_USAGE("get_buffer", 40),
STACK_USAGE("snapshot_write_next", 96),
STACK_USAGE("snapshot_write_finalize", 8),
STACK_USAGE("snapshot_image_loaded", 0),
STACK_USAGE("enable_restore_image_protection", 0),
STACK_USAGE("memory_bm_create", 168),
STACK_USAGE("memory_bm_find_bit", 16),
STACK_USAGE("memory_bm_next_pfn", 16),
STACK_USAGE("register_nosave_region", 16),
STACK_USAGE("s2idle_wake", 8),
STACK_USAGE("pm_states_init", 0),
STACK_USAGE("mem_sleep_default_setup", 16),
STACK_USAGE("suspend_set_ops", 8),
STACK_USAGE("trace_suspend_resume", 0),
STACK_USAGE("suspend_valid_only_mem", 0),
STACK_USAGE("suspend_test", 16),
STACK_USAGE("arch_suspend_disable_irqs", 16),
STACK_USAGE("arch_suspend_enable_irqs", 0),
STACK_USAGE("suspend_devices_and_enter", 80),
STACK_USAGE("pm_suspend", 24),
STACK_USAGE("pm_suspend_default_s2idle", 0),
STACK_USAGE("s2idle_set_ops", 8),
STACK_USAGE("load_image", 208),
STACK_USAGE("lzo_decompress_threadfn", 104),
STACK_USAGE("load_image_lzo", 424),
STACK_USAGE("swsusp_read", 136),
STACK_USAGE("swsusp_check", 24),
STACK_USAGE("swsusp_close", 0),
STACK_USAGE("swsusp_unmark", 40),
STACK_USAGE("swsusp_header_init", 0),
STACK_USAGE("alloc_swapdev_block", 32),
STACK_USAGE("free_all_swap_pages", 32),
STACK_USAGE("swsusp_swap_in_use", 0),
STACK_USAGE("hib_end_io", 24),
STACK_USAGE("hib_submit_io", 32),
STACK_USAGE("hib_wait_io", 72),
STACK_USAGE("write_page", 32),
STACK_USAGE("swap_write_page", 32),
STACK_USAGE("crc32_threadfn", 96),
STACK_USAGE("lzo_compress_threadfn", 112),
STACK_USAGE("swsusp_write", 424),
STACK_USAGE("snapshot_release", 8),
STACK_USAGE("snapshot_read", 64),
STACK_USAGE("snapshot_write", 72),
STACK_USAGE("snapshot_set_swap_area", 40),
STACK_USAGE("snapshot_ioctl", 40),
STACK_USAGE("snapshot_compat_ioctl", 0),
STACK_USAGE("is_hibernate_resume_dev", 8),
STACK_USAGE("snapshot_device_init", 0),
STACK_USAGE("snapshot_open", 24),
STACK_USAGE("pi_stop", 0),
STACK_USAGE("dfs_index_open", 16),
STACK_USAGE("pi_module_notify", 0),
STACK_USAGE("pi_init", 0),
STACK_USAGE("pi_next", 0),
STACK_USAGE("pi_start", 0),
STACK_USAGE("pi_show", 48),
STACK_USAGE("log_buf_add_cpu", 16),
STACK_USAGE("add_to_rb", 80),
STACK_USAGE("setup_log_buf", 192),
STACK_USAGE("__bpf_trace_console", 0),
STACK_USAGE("__traceiter_console", 24),
STACK_USAGE("perf_trace_console", 88),
STACK_USAGE("trace_event_raw_event_console", 96),
STACK_USAGE("trace_raw_output_console", 24),
STACK_USAGE("ignore_loglevel_setup", 0),
STACK_USAGE("info_print_prefix", 56),
STACK_USAGE("find_first_fitting_seq", 232),
STACK_USAGE("syslog_print", 280),
STACK_USAGE("control_devkmsg", 8),
STACK_USAGE("syslog_print_all", 296),
STACK_USAGE("do_syslog", 200),
STACK_USAGE("__ia32_sys_syslog", 0),
STACK_USAGE("__x64_sys_syslog", 0),
STACK_USAGE("console_lock_spinning_enable", 0),
STACK_USAGE("console_lock_spinning_disable_and_check", 8),
STACK_USAGE("devkmsg_sysctl_set_loglvl", 72),
STACK_USAGE("console_trylock_spinning", 32),
STACK_USAGE("printk_parse_prefix", 0),
STACK_USAGE("vprintk_store", 216),
STACK_USAGE("vprintk_emit", 56),
STACK_USAGE("vprintk_default", 0),
STACK_USAGE("_printk", 88),
STACK_USAGE("early_printk", 616),
STACK_USAGE("__down_trylock_console_sem", 40),
STACK_USAGE("__add_preferred_console", 48),
STACK_USAGE("console_msg_format_setup", 8),
STACK_USAGE("console_setup", 56),
STACK_USAGE("add_preferred_console", 0),
STACK_USAGE("console_suspend_disable", 0),
STACK_USAGE("console_verbose", 0),
STACK_USAGE("suspend_console", 8),
STACK_USAGE("resume_console", 0),
STACK_USAGE("console_cpu_notify", 8),
STACK_USAGE("console_lock", 0),
STACK_USAGE("__up_console_sem", 16),
STACK_USAGE("console_trylock", 16),
STACK_USAGE("is_console_locked", 0),
STACK_USAGE("console_unlock", 264),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("console_conditional_schedule", 0),
STACK_USAGE("console_unblank", 8),
STACK_USAGE("console_flush_on_panic", 16),
STACK_USAGE("console_device", 24),
STACK_USAGE("console_stop", 8),
STACK_USAGE("console_start", 8),
STACK_USAGE("keep_bootcon_setup", 0),
STACK_USAGE("try_enable_preferred_console", 32),
STACK_USAGE("register_console", 24),
STACK_USAGE("unregister_console", 8),
STACK_USAGE("console_init", 32),
STACK_USAGE("printk_late_init", 24),
STACK_USAGE("wake_up_klogd_work_func", 16),
STACK_USAGE("wake_up_klogd", 0),
STACK_USAGE("defer_console_output", 0),
STACK_USAGE("printk_trigger_flush", 0),
STACK_USAGE("vprintk_deferred", 8),
STACK_USAGE("_printk_deferred", 88),
STACK_USAGE("__printk_ratelimit", 0),
STACK_USAGE("printk_timed_ratelimit", 16),
STACK_USAGE("kmsg_dump_register", 16),
STACK_USAGE("kmsg_dump_unregister", 8),
STACK_USAGE("kmsg_dump_reason_str", 0),
STACK_USAGE("kmsg_dump", 24),
STACK_USAGE("kmsg_dump_get_line", 264),
STACK_USAGE("kmsg_dump_get_buffer", 296),
STACK_USAGE("kmsg_dump_rewind", 8),
STACK_USAGE("__printk_wait_on_cpu_lock", 0),
STACK_USAGE("__printk_cpu_trylock", 0),
STACK_USAGE("__printk_cpu_unlock", 0),
STACK_USAGE("printk_percpu_data_ready", 0),
STACK_USAGE("log_buf_addr_get", 0),
STACK_USAGE("log_buf_len_get", 0),
STACK_USAGE("msg_add_dict_text", 72),
STACK_USAGE("msg_print_ext_body", 64),
STACK_USAGE("devkmsg_emit", 88),
STACK_USAGE("devkmsg_write", 48),
STACK_USAGE("devkmsg_read", 136),
STACK_USAGE("devkmsg_llseek", 8),
STACK_USAGE("devkmsg_poll", 112),
STACK_USAGE("devkmsg_open", 16),
STACK_USAGE("devkmsg_release", 8),
STACK_USAGE("log_buf_vmcoreinfo_setup", 0),
STACK_USAGE("log_buf_len_update", 8),
STACK_USAGE("log_buf_len_setup", 16),
STACK_USAGE("data_alloc", 48),
STACK_USAGE("get_data", 0),
STACK_USAGE("prb_reserve_in_last", 128),
STACK_USAGE("prb_reserve", 88),
STACK_USAGE("prb_commit", 24),
STACK_USAGE("prb_final_commit", 16),
STACK_USAGE("_prb_read_valid", 176),
STACK_USAGE("prb_read_valid", 16),
STACK_USAGE("prb_read_valid_info", 40),
STACK_USAGE("prb_first_valid_seq", 24),
STACK_USAGE("prb_next_seq", 32),
STACK_USAGE("prb_init", 56),
STACK_USAGE("prb_record_text_space", 0),
STACK_USAGE("data_push_tail", 56),
STACK_USAGE("__printk_safe_enter", 0),
STACK_USAGE("__printk_safe_exit", 0),
STACK_USAGE("vprintk", 8),
STACK_USAGE("proc_dointvec_minmax_sysadmin", 40),
STACK_USAGE("printk_sysctl_init", 0),
STACK_USAGE("profile_init", 16),
STACK_USAGE("__profile_flip_buffers", 0),
STACK_USAGE("profile_dead_cpu", 16),
STACK_USAGE("profile_prepare_cpu", 32),
STACK_USAGE("profile_online_cpu", 0),
STACK_USAGE("profile_hits", 56),
STACK_USAGE("profile_tick", 16),
STACK_USAGE("prof_cpu_mask_proc_show", 0),
STACK_USAGE("prof_cpu_mask_proc_open", 0),
STACK_USAGE("prof_cpu_mask_proc_write", 40),
STACK_USAGE("create_prof_cpu_mask", 0),
STACK_USAGE("read_profile", 80),
STACK_USAGE("write_profile", 40),
STACK_USAGE("create_proc_profile", 16),
STACK_USAGE("profile_setup", 32),
STACK_USAGE("ptrace_request", 160),
STACK_USAGE("__ptrace_unlink", 16),
STACK_USAGE("__ia32_sys_ptrace", 0),
STACK_USAGE("__se_sys_ptrace", 32),
STACK_USAGE("__x64_sys_ptrace", 0),
STACK_USAGE("generic_ptrace_peekdata", 56),
STACK_USAGE("generic_ptrace_pokedata", 48),
STACK_USAGE("compat_ptrace_request", 112),
STACK_USAGE("__ia32_compat_sys_ptrace", 32),
STACK_USAGE("ptrace_check_attach", 24),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("__ptrace_may_access", 48),
STACK_USAGE("ptrace_may_access", 24),
STACK_USAGE("ptrace_attach", 48),
STACK_USAGE("ptrace_access_vm", 56),
STACK_USAGE("ptrace_traceme", 24),
STACK_USAGE("__ptrace_detach", 32),
STACK_USAGE("exit_ptrace", 48),
STACK_USAGE("ptrace_readdata", 216),
STACK_USAGE("ptrace_writedata", 216),
STACK_USAGE("__ptrace_link", 16),
STACK_USAGE("ptrace_setsiginfo", 32),
STACK_USAGE("ptrace_link", 16),
STACK_USAGE("ptrace_resume", 16),
STACK_USAGE("ptrace_regset", 40),
STACK_USAGE("cmp_range", 0),
STACK_USAGE("clean_sort_range", 8),
STACK_USAGE("add_range", 0),
STACK_USAGE("sort_range", 0),
STACK_USAGE("add_range_with_merge", 56),
STACK_USAGE("subtract_range", 56),
STACK_USAGE("rcu_cblist_init", 0),
STACK_USAGE("rcu_segcblist_add_len", 0),
STACK_USAGE("rcu_segcblist_inc_len", 0),
STACK_USAGE("rcu_segcblist_init", 0),
STACK_USAGE("rcu_segcblist_disable", 0),
STACK_USAGE("rcu_segcblist_offload", 0),
STACK_USAGE("rcu_segcblist_ready_cbs", 0),
STACK_USAGE("rcu_segcblist_pend_cbs", 0),
STACK_USAGE("rcu_cblist_enqueue", 0),
STACK_USAGE("rcu_segcblist_first_cb", 0),
STACK_USAGE("rcu_segcblist_first_pend_cb", 0),
STACK_USAGE("rcu_segcblist_nextgp", 0),
STACK_USAGE("rcu_segcblist_enqueue", 0),
STACK_USAGE("rcu_segcblist_entrain", 0),
STACK_USAGE("rcu_segcblist_extract_done_cbs", 0),
STACK_USAGE("rcu_segcblist_extract_pend_cbs", 0),
STACK_USAGE("rcu_segcblist_insert_count", 0),
STACK_USAGE("rcu_cblist_flush_enqueue", 0),
STACK_USAGE("rcu_segcblist_insert_done_cbs", 0),
STACK_USAGE("rcu_segcblist_insert_pend_cbs", 0),
STACK_USAGE("rcu_segcblist_advance", 0),
STACK_USAGE("rcu_segcblist_accelerate", 0),
STACK_USAGE("rcu_segcblist_merge", 72),
STACK_USAGE("rcu_cblist_dequeue", 0),
STACK_USAGE("rcu_segcblist_n_segment_cbs", 0),
STACK_USAGE("synchronize_srcu", 32),
STACK_USAGE("get_state_synchronize_srcu", 0),
STACK_USAGE("start_poll_synchronize_srcu", 0),
STACK_USAGE("poll_state_synchronize_srcu", 0),
STACK_USAGE("srcu_barrier_cb", 0),
STACK_USAGE("srcu_barrier", 48),
STACK_USAGE("srcu_batches_completed", 0),
STACK_USAGE("srcu_invoke_callbacks", 88),
STACK_USAGE("srcu_reschedule", 24),
STACK_USAGE("process_srcu", 128),
STACK_USAGE("srcutorture_get_gp_data", 0),
STACK_USAGE("srcu_torture_stats_print", 64),
STACK_USAGE("srcu_bootup_announce", 0),
STACK_USAGE("srcu_init", 8),
STACK_USAGE("srcu_module_notify", 32),
STACK_USAGE("init_srcu_module_notifier", 8),
STACK_USAGE("init_srcu_struct_fields", 80),
STACK_USAGE("__init_srcu_struct", 24),
STACK_USAGE("local_bh_disable", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("local_bh_enable", 0),
STACK_USAGE("cleanup_srcu_struct", 48),
STACK_USAGE("__srcu_read_lock", 0),
STACK_USAGE("__srcu_read_unlock", 0),
STACK_USAGE("srcu_gp_start", 24),
STACK_USAGE("srcu_delay_timer", 0),
STACK_USAGE("srcu_funnel_exp_start", 24),
STACK_USAGE("try_check_zero", 56),
STACK_USAGE("srcu_gp_start_if_needed", 80),
STACK_USAGE("call_srcu", 0),
STACK_USAGE("__synchronize_srcu", 144),
STACK_USAGE("synchronize_srcu_expedited", 8),
STACK_USAGE("rcu_sync_enter", 72),
STACK_USAGE("rcu_sync_exit", 16),
STACK_USAGE("rcu_sync_dtor", 24),
STACK_USAGE("rcu_sync_init", 0),
STACK_USAGE("rcu_sync_enter_start", 0),
STACK_USAGE("rcu_sync_func", 24),
STACK_USAGE("check_cpu_stall_init", 0),
STACK_USAGE("rcu_irq_enter", 0),
STACK_USAGE("rcu_irq_enter_irqson", 16),
STACK_USAGE("rcu_needs_cpu", 8),
STACK_USAGE("rcu_disable_urgency_upon_qs", 8),
STACK_USAGE("rcu_is_watching", 0),
STACK_USAGE("rcu_request_urgent_qs_task", 8),
STACK_USAGE("rcu_lockdep_current_cpu_online", 0),
STACK_USAGE("dyntick_save_progress_counter", 16),
STACK_USAGE("rcu_implicit_dynticks_qs", 24),
STACK_USAGE("rcu_cpu_stall_reset", 0),
STACK_USAGE("trace_rcu_this_gp", 0),
STACK_USAGE("rcu_start_this_gp", 48),
STACK_USAGE("rcu_accelerate_cbs", 40),
STACK_USAGE("rcu_accelerate_cbs_unlocked", 16),
STACK_USAGE("rcu_advance_cbs", 24),
STACK_USAGE("sync_rcu_exp_done_unlocked", 24),
STACK_USAGE("rcu_stall_kick_kthreads", 8),
STACK_USAGE("__note_gp_changes", 24),
STACK_USAGE("note_gp_changes", 40),
STACK_USAGE("rcu_rdp_is_offloaded", 24),
STACK_USAGE("rcu_gp_set_torture_wait", 0),
STACK_USAGE("rcu_gp_init", 64),
STACK_USAGE("__rcu_report_exp_rnp", 32),
STACK_USAGE("rcu_iw_handler", 16),
STACK_USAGE("local_bh_disable", 0),
STACK_USAGE("trace_rcu_exp_grace_period", 0),
STACK_USAGE("rcu_gp_fqs_loop", 120),
STACK_USAGE("rcu_get_gp_kthreads_prio", 0),
STACK_USAGE("rcu_gp_cleanup", 80),
STACK_USAGE("rcu_gp_kthread", 48),
STACK_USAGE("rcu_report_qs_rsp", 8),
STACK_USAGE("rcu_report_qs_rnp", 40),
STACK_USAGE("trace_rcu_exp_funnel_lock", 0),
STACK_USAGE("rcu_report_exp_cpu_mult", 56),
STACK_USAGE("rcutree_dying_cpu", 0),
STACK_USAGE("rcu_cleanup_dead_rnp", 16),
STACK_USAGE("check_slow_task", 16),
STACK_USAGE("rcutree_dead_cpu", 0),
STACK_USAGE("rcu_softirq_qs", 32),
STACK_USAGE("rcu_sched_clock_irq", 88),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_force_quiescent_state", 32),
STACK_USAGE("rcu_dynticks_inc", 8),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("strict_work_handler", 8),
STACK_USAGE("rcu_core", 96),
STACK_USAGE("trace_rcu_utilization", 0),
STACK_USAGE("rcu_core_si", 0),
STACK_USAGE("rcu_dynticks_eqs_enter", 0),
STACK_USAGE("invoke_rcu_core", 40),
STACK_USAGE("rcu_cpu_kthread_park", 0),
STACK_USAGE("rcu_cpu_kthread_should_run", 0),
STACK_USAGE("rcu_qs", 24),
STACK_USAGE("rcu_cpu_kthread", 56),
STACK_USAGE("rcu_spawn_core_kthreads", 0),
STACK_USAGE("rcu_jiffies_till_stall_check", 0),
STACK_USAGE("rcu_dynticks_eqs_exit", 0),
STACK_USAGE("call_rcu", 64),
STACK_USAGE("rcu_note_context_switch", 104),
STACK_USAGE("local_bh_enable", 0),
STACK_USAGE("kfree_rcu_work", 120),
STACK_USAGE("rcu_dump_cpu_stacks", 24),
STACK_USAGE("kfree_rcu_monitor", 24),
STACK_USAGE("sync_rcu_exp_select_node_cpus", 96),
STACK_USAGE("trace_rcu_unlock_preempted_task", 0),
STACK_USAGE("schedule_page_work_fn", 0),
STACK_USAGE("fill_page_cache_func", 48),
STACK_USAGE("kvfree_call_rcu", 80),
STACK_USAGE("kfree_rcu_shrink_count", 16),
STACK_USAGE("rcu_is_idle_cpu", 0),
STACK_USAGE("kfree_rcu_shrink_scan", 64),
STACK_USAGE("kfree_rcu_scheduler_running", 32),
STACK_USAGE("trace_rcu_quiescent_state_report", 8),
STACK_USAGE("synchronize_rcu", 136),
STACK_USAGE("get_state_synchronize_rcu", 0),
STACK_USAGE("start_poll_synchronize_rcu", 48),
STACK_USAGE("rcu_dynticks_zero_in_eqs", 0),
STACK_USAGE("poll_state_synchronize_rcu", 0),
STACK_USAGE("cond_synchronize_rcu", 0),
STACK_USAGE("rcu_barrier_trace", 0),
STACK_USAGE("rcu_barrier_callback", 0),
STACK_USAGE("__rcu_read_lock", 0),
STACK_USAGE("rcu_barrier_entrain", 24),
STACK_USAGE("rcu_barrier_handler", 16),
STACK_USAGE("print_cpu_stall_info", 48),
STACK_USAGE("rcu_barrier", 40),
STACK_USAGE("trace_rcu_fqs", 0),
STACK_USAGE("rcu_momentary_dyntick_idle", 32),
STACK_USAGE("rcu_boot_init_percpu_data", 24),
STACK_USAGE("__rcu_read_unlock", 8),
STACK_USAGE("rcutree_prepare_cpu", 24),
STACK_USAGE("rcutree_online_cpu", 16),
STACK_USAGE("rcutree_offline_cpu", 16),
STACK_USAGE("rcu_cpu_starting", 56),
STACK_USAGE("rcu_is_cpu_rrupt_from_idle", 0),
STACK_USAGE("rcu_report_dead", 48),
STACK_USAGE("rcutree_migrate_callbacks", 64),
STACK_USAGE("trace_rcu_stall_warning", 0),
STACK_USAGE("rcu_pm_notify", 0),
STACK_USAGE("rcu_spawn_gp_kthread", 24),
STACK_USAGE("rcu_bootup_announce_oddness", 0),
STACK_USAGE("rcu_scheduler_starting", 0),
STACK_USAGE("rcu_init_one", 112),
STACK_USAGE("sanitize_kthread_prio", 0),
STACK_USAGE("rcu_init_geometry", 40),
STACK_USAGE("rcu_preempt_deferred_qs_irqrestore", 56),
STACK_USAGE("rcu_check_gp_kthread_starvation", 16),
STACK_USAGE("rcu_dump_rcu_node_tree", 16),
STACK_USAGE("kfree_rcu_batch_init", 48),
STACK_USAGE("rcu_init", 8),
STACK_USAGE("trace_rcu_dyntick", 0),
STACK_USAGE("queued_spin_lock_slowpath", 0),
STACK_USAGE("param_set_first_fqs_jiffies", 32),
STACK_USAGE("print_other_cpu_stall", 168),
STACK_USAGE("param_set_next_fqs_jiffies", 32),
STACK_USAGE("trace_rcu_segcb_stats", 0),
STACK_USAGE("rcu_get_gp_seq", 0),
STACK_USAGE("rcu_exp_batches_completed", 0),
STACK_USAGE("rcu_preempt_deferred_qs", 32),
STACK_USAGE("rcutorture_get_gp_data", 0),
STACK_USAGE("trace_rcu_batch_start", 0),
STACK_USAGE("rcu_preempt_deferred_qs_handler", 0),
STACK_USAGE("rcu_exp_sel_wait_wake", 104),
STACK_USAGE("rcu_gp_might_be_stalled", 0),
STACK_USAGE("rcu_eqs_enter", 8),
STACK_USAGE("rcu_read_unlock_special", 40),
STACK_USAGE("wait_rcu_exp_gp", 0),
STACK_USAGE("rcu_exp_handler", 32),
STACK_USAGE("trace_rcu_invoke_kvfree_callback", 0),
STACK_USAGE("rcu_idle_enter", 0),
STACK_USAGE("trace_rcu_grace_period", 0),
STACK_USAGE("trace_rcu_batch_end", 0),
STACK_USAGE("exit_rcu", 8),
STACK_USAGE("rcu_nmi_exit", 8),
STACK_USAGE("dump_blkd_tasks", 24),
STACK_USAGE("rcu_check_boost_fail", 64),
STACK_USAGE("rcu_sysrq_start", 0),
STACK_USAGE("rcu_irq_exit", 0),
STACK_USAGE("show_rcu_gp_kthreads", 24),
STACK_USAGE("synchronize_rcu_expedited", 216),
STACK_USAGE("rcu_irq_exit_check_preempt", 0),
STACK_USAGE("rcu_irq_exit_irqson", 16),
STACK_USAGE("rcu_eqs_exit", 8),
STACK_USAGE("rcu_sysrq_end", 0),
STACK_USAGE("rcu_check_gp_start_stall", 24),
STACK_USAGE("rcu_idle_exit", 16),
STACK_USAGE("rcu_panic", 0),
STACK_USAGE("rcu_fwd_progress_check", 40),
STACK_USAGE("sysrq_show_rcu", 0),
STACK_USAGE("rcu_cpu_kthread_setup", 0),
STACK_USAGE("rcu_nmi_enter", 16),
STACK_USAGE("rcu_sysrq_init", 0),
STACK_USAGE("synchronize_rcu_tasks_rude", 136),
STACK_USAGE("rcu_barrier_tasks_rude", 0),
STACK_USAGE("rcu_spawn_tasks_rude_kthread", 0),
STACK_USAGE("show_rcu_tasks_rude_gp_kthread", 8),
STACK_USAGE("__bpf_trace_rcu_future_grace_period", 0),
STACK_USAGE("__traceiter_rcu_future_grace_period", 48),
STACK_USAGE("perf_trace_rcu_future_grace_period", 80),
STACK_USAGE("trace_event_raw_event_rcu_future_grace_period", 104),
STACK_USAGE("trace_raw_output_rcu_future_grace_period", 24),
STACK_USAGE("rcu_read_unlock_iw", 0),
STACK_USAGE("rcu_read_unlock_trace_special", 0),
STACK_USAGE("trc_read_check_handler", 8),
STACK_USAGE("rcu_read_lock_sched_held", 24),
STACK_USAGE("trc_inspect_reader", 16),
STACK_USAGE("trc_wait_for_one_reader", 32),
STACK_USAGE("rcu_tasks_trace_pregp_step", 8),
STACK_USAGE("rcu_tasks_trace_pertask", 0),
STACK_USAGE("rcu_tasks_trace_postscan", 16),
STACK_USAGE("trc_check_slow_task", 16),
STACK_USAGE("show_stalled_task_trace", 48),
STACK_USAGE("rcu_gp_is_normal", 0),
STACK_USAGE("check_all_holdout_tasks_trace", 48),
STACK_USAGE("rcu_tasks_trace_empty_fn", 0),
STACK_USAGE("rcu_tasks_trace_postgp", 120),
STACK_USAGE("__bpf_trace_rcu_grace_period_init", 0),
STACK_USAGE("__traceiter_rcu_grace_period_init", 48),
STACK_USAGE("perf_trace_rcu_grace_period_init", 80),
STACK_USAGE("trace_event_raw_event_rcu_grace_period_init", 104),
STACK_USAGE("trace_raw_output_rcu_grace_period_init", 24),
STACK_USAGE("call_rcu_tasks_trace", 0),
STACK_USAGE("synchronize_rcu_tasks_trace", 136),
STACK_USAGE("rcu_gp_is_expedited", 0),
STACK_USAGE("rcu_barrier_tasks_trace", 0),
STACK_USAGE("rcu_spawn_tasks_trace_kthread", 0),
STACK_USAGE("show_rcu_tasks_trace_gp_kthread", 120),
STACK_USAGE("show_rcu_tasks_gp_kthreads", 32),
STACK_USAGE("test_rcu_tasks_callback", 8),
STACK_USAGE("rcu_tasks_verify_self_tests", 0),
STACK_USAGE("rcu_expedite_gp", 0),
STACK_USAGE("rcu_init_tasks_generic", 136),
STACK_USAGE("rcu_unexpedite_gp", 0),
STACK_USAGE("local_bh_disable", 0),
STACK_USAGE("__bpf_trace_rcu_exp_grace_period", 0),
STACK_USAGE("__traceiter_rcu_exp_grace_period", 32),
STACK_USAGE("perf_trace_rcu_exp_grace_period", 72),
STACK_USAGE("trace_event_raw_event_rcu_exp_grace_period", 88),
STACK_USAGE("trace_raw_output_rcu_exp_grace_period", 24),
STACK_USAGE("rcu_end_inkernel_boot", 0),
STACK_USAGE("rcu_inkernel_boot_has_ended", 0),
STACK_USAGE("cblist_init_generic", 64),
STACK_USAGE("rcu_test_sync_prims", 0),
STACK_USAGE("__bpf_trace_rcu_exp_funnel_lock", 0),
STACK_USAGE("__traceiter_rcu_exp_funnel_lock", 48),
STACK_USAGE("perf_trace_rcu_exp_funnel_lock", 80),
STACK_USAGE("trace_event_raw_event_rcu_exp_funnel_lock", 104),
STACK_USAGE("trace_raw_output_rcu_exp_funnel_lock", 24),
STACK_USAGE("rcu_set_runtime_mode", 0),
STACK_USAGE("call_rcu_tasks_iw_wakeup", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("call_rcu_tasks_generic", 72),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("debug_lockdep_rcu_enabled", 0),
STACK_USAGE("__bpf_trace_rcu_utilization", 0),
STACK_USAGE("__traceiter_rcu_utilization", 16),
STACK_USAGE("perf_trace_rcu_utilization", 56),
STACK_USAGE("trace_event_raw_event_rcu_utilization", 72),
STACK_USAGE("trace_raw_output_rcu_utilization", 24),
STACK_USAGE("rcu_read_lock_held", 8),
STACK_USAGE("__bpf_trace_rcu_preempt_task", 0),
STACK_USAGE("__traceiter_rcu_preempt_task", 32),
STACK_USAGE("perf_trace_rcu_preempt_task", 72),
STACK_USAGE("trace_event_raw_event_rcu_preempt_task", 88),
STACK_USAGE("trace_raw_output_rcu_preempt_task", 24),
STACK_USAGE("local_bh_enable", 0),
STACK_USAGE("rcu_barrier_tasks_generic_cb", 0),
STACK_USAGE("rcu_read_lock_bh_held", 24),
STACK_USAGE("__bpf_trace_rcu_unlock_preempted_task", 0),
STACK_USAGE("__traceiter_rcu_unlock_preempted_task", 32),
STACK_USAGE("perf_trace_rcu_unlock_preempted_task", 72),
STACK_USAGE("trace_event_raw_event_rcu_unlock_preempted_task", 88),
STACK_USAGE("trace_raw_output_rcu_unlock_preempted_task", 24),
STACK_USAGE("rcu_read_lock_any_held", 24),
STACK_USAGE("rcu_barrier_tasks_generic", 56),
STACK_USAGE("wakeme_after_rcu", 0),
STACK_USAGE("__bpf_trace_rcu_quiescent_state_report", 0),
STACK_USAGE("__traceiter_rcu_quiescent_state_report", 48),
STACK_USAGE("perf_trace_rcu_quiescent_state_report", 80),
STACK_USAGE("trace_event_raw_event_rcu_quiescent_state_report", 104),
STACK_USAGE("trace_raw_output_rcu_quiescent_state_report", 24),
STACK_USAGE("__wait_rcu_gp", 56),
STACK_USAGE("rcu_tasks_need_gpcb", 104),
STACK_USAGE("finish_rcuwait", 0),
STACK_USAGE("__bpf_trace_rcu_fqs", 0),
STACK_USAGE("__traceiter_rcu_fqs", 40),
STACK_USAGE("perf_trace_rcu_fqs", 80),
STACK_USAGE("trace_event_raw_event_rcu_fqs", 96),
STACK_USAGE("trace_raw_output_rcu_fqs", 24),
STACK_USAGE("rcu_tasks_invoke_cbs", 80),
STACK_USAGE("__bpf_trace_rcu_stall_warning", 0),
STACK_USAGE("__traceiter_rcu_stall_warning", 24),
STACK_USAGE("perf_trace_rcu_stall_warning", 64),
STACK_USAGE("trace_event_raw_event_rcu_stall_warning", 80),
STACK_USAGE("trace_raw_output_rcu_stall_warning", 24),
STACK_USAGE("do_trace_rcu_torture_read", 16),
STACK_USAGE("__bpf_trace_rcu_dyntick", 0),
STACK_USAGE("__traceiter_rcu_dyntick", 40),
STACK_USAGE("perf_trace_rcu_dyntick", 72),
STACK_USAGE("trace_event_raw_event_rcu_dyntick", 96),
STACK_USAGE("trace_raw_output_rcu_dyntick", 24),
STACK_USAGE("rcu_tasks_invoke_cbs_wq", 0),
STACK_USAGE("rcu_tasks_kthread", 64),
STACK_USAGE("__bpf_trace_rcu_callback", 0),
STACK_USAGE("__traceiter_rcu_callback", 32),
STACK_USAGE("perf_trace_rcu_callback", 72),
STACK_USAGE("trace_event_raw_event_rcu_callback", 88),
STACK_USAGE("trace_raw_output_rcu_callback", 24),
STACK_USAGE("test_callback", 0),
STACK_USAGE("rcu_spawn_tasks_kthread_generic", 8),
STACK_USAGE("__bpf_trace_rcu_segcb_stats", 0),
STACK_USAGE("__traceiter_rcu_segcb_stats", 24),
STACK_USAGE("perf_trace_rcu_segcb_stats", 64),
STACK_USAGE("trace_event_raw_event_rcu_segcb_stats", 80),
STACK_USAGE("trace_raw_output_rcu_segcb_stats", 24),
STACK_USAGE("rcu_tasks_bootup_oddness", 0),
STACK_USAGE("rcu_early_boot_tests", 0),
STACK_USAGE("rcu_verify_early_boot_tests", 8),
STACK_USAGE("__bpf_trace_rcu_kvfree_callback", 0),
STACK_USAGE("__traceiter_rcu_kvfree_callback", 40),
STACK_USAGE("perf_trace_rcu_kvfree_callback", 80),
STACK_USAGE("trace_event_raw_event_rcu_kvfree_callback", 96),
STACK_USAGE("trace_raw_output_rcu_kvfree_callback", 24),
STACK_USAGE("rcu_tasks_wait_gp", 80),
STACK_USAGE("rcupdate_announce_bootup_oddness", 0),
STACK_USAGE("__bpf_trace_rcu_batch_start", 0),
STACK_USAGE("__traceiter_rcu_batch_start", 32),
STACK_USAGE("perf_trace_rcu_batch_start", 72),
STACK_USAGE("trace_event_raw_event_rcu_batch_start", 88),
STACK_USAGE("trace_raw_output_rcu_batch_start", 24),
STACK_USAGE("__bpf_trace_rcu_invoke_callback", 0),
STACK_USAGE("__traceiter_rcu_invoke_callback", 24),
STACK_USAGE("perf_trace_rcu_invoke_callback", 64),
STACK_USAGE("trace_event_raw_event_rcu_invoke_callback", 80),
STACK_USAGE("trace_raw_output_rcu_invoke_callback", 24),
STACK_USAGE("__bpf_trace_rcu_invoke_kvfree_callback", 0),
STACK_USAGE("__traceiter_rcu_invoke_kvfree_callback", 32),
STACK_USAGE("perf_trace_rcu_invoke_kvfree_callback", 72),
STACK_USAGE("trace_event_raw_event_rcu_invoke_kvfree_callback", 88),
STACK_USAGE("trace_raw_output_rcu_invoke_kvfree_callback", 24),
STACK_USAGE("__bpf_trace_rcu_invoke_kfree_bulk_callback", 0),
STACK_USAGE("__traceiter_rcu_invoke_kfree_bulk_callback", 32),
STACK_USAGE("perf_trace_rcu_invoke_kfree_bulk_callback", 72),
STACK_USAGE("trace_event_raw_event_rcu_invoke_kfree_bulk_callback", 88),
STACK_USAGE("trace_raw_output_rcu_invoke_kfree_bulk_callback", 24),
STACK_USAGE("__bpf_trace_rcu_grace_period", 0),
STACK_USAGE("__traceiter_rcu_grace_period", 32),
STACK_USAGE("perf_trace_rcu_grace_period", 72),
STACK_USAGE("trace_event_raw_event_rcu_grace_period", 88),
STACK_USAGE("trace_raw_output_rcu_grace_period", 24),
STACK_USAGE("rcu_tasks_pregp_step", 0),
STACK_USAGE("__bpf_trace_rcu_batch_end", 0),
STACK_USAGE("__traceiter_rcu_batch_end", 56),
STACK_USAGE("perf_trace_rcu_batch_end", 80),
STACK_USAGE("trace_event_raw_event_rcu_batch_end", 104),
STACK_USAGE("trace_raw_output_rcu_batch_end", 24),
STACK_USAGE("rcu_tasks_pertask", 16),
STACK_USAGE("rcu_tasks_postscan", 0),
STACK_USAGE("__bpf_trace_rcu_torture_read", 0),
STACK_USAGE("__traceiter_rcu_torture_read", 48),
STACK_USAGE("perf_trace_rcu_torture_read", 96),
STACK_USAGE("trace_event_raw_event_rcu_torture_read", 104),
STACK_USAGE("trace_raw_output_rcu_torture_read", 24),
STACK_USAGE("check_all_holdout_tasks", 48),
STACK_USAGE("rcu_tasks_postgp", 0),
STACK_USAGE("__bpf_trace_rcu_barrier", 0),
STACK_USAGE("__traceiter_rcu_barrier", 48),
STACK_USAGE("perf_trace_rcu_barrier", 80),
STACK_USAGE("trace_event_raw_event_rcu_barrier", 104),
STACK_USAGE("trace_raw_output_rcu_barrier", 24),
STACK_USAGE("call_rcu_tasks", 0),
STACK_USAGE("synchronize_rcu_tasks", 136),
STACK_USAGE("rcu_barrier_tasks", 0),
STACK_USAGE("rcu_spawn_tasks_kthread", 0),
STACK_USAGE("show_rcu_tasks_classic_gp_kthread", 8),
STACK_USAGE("exit_tasks_rcu_start", 0),
STACK_USAGE("exit_tasks_rcu_finish", 8),
STACK_USAGE("rcu_tasks_be_rude", 0),
STACK_USAGE("rcu_tasks_rude_wait_gp", 8),
STACK_USAGE("call_rcu_tasks_rude", 0),
STACK_USAGE("unregister_reboot_notifier", 0),
STACK_USAGE("devm_unregister_reboot_notifier", 0),
STACK_USAGE("devm_register_reboot_notifier", 32),
STACK_USAGE("register_restart_handler", 0),
STACK_USAGE("unregister_restart_handler", 0),
STACK_USAGE("do_kernel_restart", 0),
STACK_USAGE("migrate_to_reboot_cpu", 8),
STACK_USAGE("kernel_restart", 16),
STACK_USAGE("kernel_halt", 8),
STACK_USAGE("kernel_power_off", 8),
STACK_USAGE("__ia32_sys_reboot", 0),
STACK_USAGE("__se_sys_reboot", 312),
STACK_USAGE("__x64_sys_reboot", 0),
STACK_USAGE("deferred_cad", 0),
STACK_USAGE("ctrl_alt_del", 0),
STACK_USAGE("poweroff_work_func", 24),
STACK_USAGE("orderly_poweroff", 0),
STACK_USAGE("reboot_work_func", 16),
STACK_USAGE("orderly_reboot", 0),
STACK_USAGE("hw_failure_emergency_poweroff_func", 0),
STACK_USAGE("hw_protection_shutdown", 8),
STACK_USAGE("reboot_setup", 24),
STACK_USAGE("emergency_restart", 0),
STACK_USAGE("mode_show", 0),
STACK_USAGE("mode_store", 16),
STACK_USAGE("kernel_restart_prepare", 0),
STACK_USAGE("force_show", 0),
STACK_USAGE("force_store", 32),
STACK_USAGE("type_show", 0),
STACK_USAGE("type_store", 16),
STACK_USAGE("cpu_show", 0),
STACK_USAGE("cpu_store", 32),
STACK_USAGE("reboot_ksysfs_init", 16),
STACK_USAGE("register_reboot_notifier", 0),
STACK_USAGE("regset_get", 40),
STACK_USAGE("regset_get_alloc", 48),
STACK_USAGE("copy_regset_to_user", 48),
STACK_USAGE("relay_file_read", 80),
STACK_USAGE("relay_pipe_buf_release", 0),
STACK_USAGE("relay_page_release", 0),
STACK_USAGE("relay_file_splice_read", 552),
STACK_USAGE("relay_destroy_buf", 24),
STACK_USAGE("relay_buf_full", 0),
STACK_USAGE("wakeup_readers", 0),
STACK_USAGE("relay_reset", 24),
STACK_USAGE("relay_buf_fault", 8),
STACK_USAGE("relay_open_buf", 48),
STACK_USAGE("relay_prepare_cpu", 40),
STACK_USAGE("relay_open", 56),
STACK_USAGE("__relay_set_buf_dentry", 0),
STACK_USAGE("relay_late_setup_files", 104),
STACK_USAGE("relay_switch_subbuf", 32),
STACK_USAGE("relay_subbufs_consumed", 0),
STACK_USAGE("relay_close", 24),
STACK_USAGE("relay_flush", 24),
STACK_USAGE("relay_file_open", 24),
STACK_USAGE("relay_file_mmap", 0),
STACK_USAGE("relay_file_poll", 8),
STACK_USAGE("relay_file_release", 0),
STACK_USAGE("relay_file_read_consume", 0),
STACK_USAGE("r_stop", 0),
STACK_USAGE("reserve_region_with_split", 32),
STACK_USAGE("resource_alignment", 0),
STACK_USAGE("r_show", 32),
STACK_USAGE("iomem_get_mapping", 0),
STACK_USAGE("__request_region_locked", 96),
STACK_USAGE("__request_region", 48),
STACK_USAGE("__release_region", 32),
STACK_USAGE("ioresources_init", 0),
STACK_USAGE("devm_resource_release", 8),
STACK_USAGE("devm_request_resource", 40),
STACK_USAGE("devm_resource_match", 0),
STACK_USAGE("devm_release_resource", 0),
STACK_USAGE("free_resource", 0),
STACK_USAGE("devm_region_release", 0),
STACK_USAGE("devm_region_match", 0),
STACK_USAGE("__devm_request_region", 56),
STACK_USAGE("__devm_release_region", 40),
STACK_USAGE("reserve_setup", 72),
STACK_USAGE("iomem_map_sanity_check", 24),
STACK_USAGE("iomem_is_exclusive", 16),
STACK_USAGE("__request_resource", 0),
STACK_USAGE("resource_list_create_entry", 8),
STACK_USAGE("resource_list_free", 32),
STACK_USAGE("strict_iomem", 8),
STACK_USAGE("iomem_fs_init_fs_context", 0),
STACK_USAGE("iomem_init_inode", 8),
STACK_USAGE("__release_child_resources", 16),
STACK_USAGE("release_child_resources", 8),
STACK_USAGE("request_resource_conflict", 24),
STACK_USAGE("request_resource", 24),
STACK_USAGE("release_resource", 16),
STACK_USAGE("__walk_iomem_res_desc", 128),
STACK_USAGE("walk_iomem_res_desc", 0),
STACK_USAGE("walk_system_ram_res", 0),
STACK_USAGE("walk_mem_res", 0),
STACK_USAGE("walk_system_ram_range", 48),
STACK_USAGE("page_is_ram", 24),
STACK_USAGE("region_intersects", 32),
STACK_USAGE("arch_remove_reservations", 0),
STACK_USAGE("simple_align_resource", 0),
STACK_USAGE("__find_resource", 200),
STACK_USAGE("allocate_resource", 144),
STACK_USAGE("lookup_resource", 16),
STACK_USAGE("__insert_resource", 0),
STACK_USAGE("r_next", 0),
STACK_USAGE("insert_resource_conflict", 16),
STACK_USAGE("insert_resource", 16),
STACK_USAGE("insert_resource_expand_to_fit", 16),
STACK_USAGE("remove_resource", 16),
STACK_USAGE("r_start", 16),
STACK_USAGE("adjust_resource", 24),
STACK_USAGE("__reserve_region_with_split", 56),
STACK_USAGE("__bpf_trace_rseq_update", 0),
STACK_USAGE("__traceiter_rseq_update", 16),
STACK_USAGE("perf_trace_rseq_update", 48),
STACK_USAGE("trace_event_raw_event_rseq_update", 64),
STACK_USAGE("trace_raw_output_rseq_update", 24),
STACK_USAGE("__rseq_handle_notify_resume", 120),
STACK_USAGE("__bpf_trace_rseq_ip_fixup", 0),
STACK_USAGE("__traceiter_rseq_ip_fixup", 40),
STACK_USAGE("perf_trace_rseq_ip_fixup", 80),
STACK_USAGE("trace_event_raw_event_rseq_ip_fixup", 96),
STACK_USAGE("trace_raw_output_rseq_ip_fixup", 24),
STACK_USAGE("__ia32_sys_rseq", 0),
STACK_USAGE("__se_sys_rseq", 24),
STACK_USAGE("__x64_sys_rseq", 0),
STACK_USAGE("start_dl_timer", 40),
STACK_USAGE("enqueue_top_rt_rq", 24),
STACK_USAGE("dl_task_timer", 56),
STACK_USAGE("dl_bw_capacity", 24),
STACK_USAGE("cpudl_find", 48),
STACK_USAGE("init_dl_task_timer", 8),
STACK_USAGE("account_user_time", 8),
STACK_USAGE("update_curr_dl", 48),
STACK_USAGE("inactive_task_timer", 104),
STACK_USAGE("account_guest_time", 32),
STACK_USAGE("init_dl_inactive_task_timer", 8),
STACK_USAGE("dequeue_rt_stack", 56),
STACK_USAGE("enqueue_task_rt", 48),
STACK_USAGE("dequeue_task_rt", 56),
STACK_USAGE("yield_task_rt", 0),
STACK_USAGE("select_task_rq_rt", 24),
STACK_USAGE("enqueue_task_dl", 48),
STACK_USAGE("balance_rt", 24),
STACK_USAGE("account_system_index_time", 8),
STACK_USAGE("check_preempt_curr_rt", 16),
STACK_USAGE("set_next_task_rt", 32),
STACK_USAGE("sched_rt_period_timer", 80),
STACK_USAGE("__dequeue_task_dl", 40),
STACK_USAGE("dequeue_task_dl", 40),
STACK_USAGE("cpudl_clear", 32),
STACK_USAGE("pick_task_rt", 16),
STACK_USAGE("yield_task_dl", 8),
STACK_USAGE("pick_next_task_rt", 24),
STACK_USAGE("put_prev_task_rt", 32),
STACK_USAGE("select_task_rq_dl", 24),
STACK_USAGE("sched_idle_set_state", 8),
STACK_USAGE("find_lowest_rq", 48),
STACK_USAGE("migrate_task_rq_dl", 24),
STACK_USAGE("account_system_time", 32),
STACK_USAGE("balance_dl", 24),
STACK_USAGE("check_preempt_curr_dl", 0),
STACK_USAGE("find_lock_lowest_rq", 48),
STACK_USAGE("set_next_task_dl", 40),
STACK_USAGE("pick_task_dl", 0),
STACK_USAGE("pick_next_task_dl", 8),
STACK_USAGE("put_prev_task_dl", 32),
STACK_USAGE("push_rt_task", 64),
STACK_USAGE("task_tick_dl", 8),
STACK_USAGE("task_fork_dl", 0),
STACK_USAGE("pick_earliest_pushable_dl_task", 16),
STACK_USAGE("account_steal_time", 8),
STACK_USAGE("find_later_rq", 48),
STACK_USAGE("push_rt_tasks", 8),
STACK_USAGE("cpudl_set", 48),
STACK_USAGE("find_lock_later_rq", 48),
STACK_USAGE("account_idle_time", 16),
STACK_USAGE("tell_cpu_to_push", 40),
STACK_USAGE("get_push_task", 16),
STACK_USAGE("push_dl_task", 48),
STACK_USAGE("rto_push_irq_work_func", 32),
STACK_USAGE("pull_rt_task", 0),
STACK_USAGE("push_dl_tasks", 8),
STACK_USAGE("pull_dl_task", 64),
STACK_USAGE("task_woken_rt", 8),
STACK_USAGE("rq_online_rt", 16),
STACK_USAGE("rq_offline_rt", 56),
STACK_USAGE("task_woken_dl", 8),
STACK_USAGE("switched_from_rt", 16),
STACK_USAGE("cpudl_set_freecpu", 0),
STACK_USAGE("set_cpus_allowed_dl", 72),
STACK_USAGE("init_sched_rt_class", 8),
STACK_USAGE("switched_to_rt", 24),
STACK_USAGE("rq_online_dl", 0),
STACK_USAGE("cpu_idle_poll_ctrl", 0),
STACK_USAGE("rq_offline_dl", 8),
STACK_USAGE("prio_changed_rt", 24),
STACK_USAGE("init_sched_dl_class", 8),
STACK_USAGE("dl_add_task_root_domain", 80),
STACK_USAGE("dl_clear_root_domain", 16),
STACK_USAGE("cpudl_clear_freecpu", 0),
STACK_USAGE("switched_from_dl", 32),
STACK_USAGE("double_lock_balance", 16),
STACK_USAGE("double_unlock_balance", 8),
STACK_USAGE("task_tick_rt", 16),
STACK_USAGE("do_idle", 64),
STACK_USAGE("unregister_rt_sched_group", 0),
STACK_USAGE("switched_to_dl", 24),
STACK_USAGE("add_running_bw", 24),
STACK_USAGE("get_rr_interval_rt", 0),
STACK_USAGE("free_rt_sched_group", 0),
STACK_USAGE("prio_changed_dl", 24),
STACK_USAGE("alloc_rt_sched_group", 0),
STACK_USAGE("cpudl_init", 24),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("sub_running_bw", 24),
STACK_USAGE("sched_dl_global_validate", 64),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("sched_dl_do_global", 48),
STACK_USAGE("sched_dl_overflow", 72),
STACK_USAGE("__setparam_dl", 8),
STACK_USAGE("__getparam_dl", 0),
STACK_USAGE("__checkparam_dl", 0),
STACK_USAGE("cpudl_cleanup", 0),
STACK_USAGE("sched_rt_handler", 56),
STACK_USAGE("thread_group_cputime", 64),
STACK_USAGE("__dl_clear_params", 0),
STACK_USAGE("__update_load_avg_blocked_se", 0),
STACK_USAGE("sched_rr_handler", 40),
STACK_USAGE("dl_param_changed", 0),
STACK_USAGE("dl_cpuset_cpumask_can_shrink", 24),
STACK_USAGE("dl_cpu_busy", 64),
STACK_USAGE("__update_load_avg_se", 40),
STACK_USAGE("__update_load_avg_cfs_rq", 56),
STACK_USAGE("cpu_in_idle", 0),
STACK_USAGE("update_rt_rq_load_avg", 24),
STACK_USAGE("idle_inject_timer_fn", 0),
STACK_USAGE("task_non_contending", 72),
STACK_USAGE("play_idle_precise", 104),
STACK_USAGE("trace_cpu_idle", 0),
STACK_USAGE("update_dl_rq_load_avg", 24),
STACK_USAGE("cpu_startup_entry", 8),
STACK_USAGE("select_task_rq_idle", 0),
STACK_USAGE("init_rt_bandwidth", 8),
STACK_USAGE("task_contending", 32),
STACK_USAGE("balance_idle", 0),
STACK_USAGE("check_preempt_curr_idle", 0),
STACK_USAGE("put_prev_task_idle", 0),
STACK_USAGE("set_next_task_idle", 8),
STACK_USAGE("pick_task_idle", 0),
STACK_USAGE("pick_next_task_idle", 16),
STACK_USAGE("init_dl_bandwidth", 24),
STACK_USAGE("dequeue_task_idle", 24),
STACK_USAGE("init_dl_bw", 8),
STACK_USAGE("account_process_tick", 32),
STACK_USAGE("init_dl_rq", 8),
STACK_USAGE("rt_task_fits_capacity", 0),
STACK_USAGE("task_tick_idle", 0),
STACK_USAGE("switched_to_idle", 0),
STACK_USAGE("prio_changed_idle", 0),
STACK_USAGE("update_curr_idle", 0),
STACK_USAGE("account_idle_ticks", 16),
STACK_USAGE("trace_sched_stat_runtime", 0),
STACK_USAGE("cpu_idle_poll", 8),
STACK_USAGE("cputime_adjust", 56),
STACK_USAGE("task_cputime_adjusted", 72),
STACK_USAGE("thread_group_cputime_adjusted", 80),
STACK_USAGE("dl_task_offline_migration", 56),
STACK_USAGE("sched_rt_bandwidth_account", 8),
STACK_USAGE("trace_pelt_se_tp", 0),
STACK_USAGE("arch_cpu_idle_prepare", 0),
STACK_USAGE("arch_cpu_idle_enter", 0),
STACK_USAGE("arch_cpu_idle_exit", 0),
STACK_USAGE("arch_cpu_idle_dead", 0),
STACK_USAGE("arch_cpu_idle", 0),
STACK_USAGE("cgroup_account_cputime", 24),
STACK_USAGE("replenish_dl_entity", 24),
STACK_USAGE("init_rt_rq", 0),
STACK_USAGE("default_idle_call", 0),
STACK_USAGE("update_dl_revised_wakeup", 48),
STACK_USAGE("cpudl_heapify", 8),
STACK_USAGE("task_group_account_field", 32),
STACK_USAGE("update_curr_rt", 32),
STACK_USAGE("prepare_to_swait_event", 24),
STACK_USAGE("switched_to_stop", 0),
STACK_USAGE("sched_clock_stable", 0),
STACK_USAGE("prio_changed_stop", 0),
STACK_USAGE("housekeeping_setup", 120),
STACK_USAGE("out_of_line_wait_on_bit_lock", 120),
STACK_USAGE("update_curr_stop", 0),
STACK_USAGE("show_schedstat", 64),
STACK_USAGE("cpupri_find", 40),
STACK_USAGE("__wake_up_bit", 112),
STACK_USAGE("__finish_swait", 0),
STACK_USAGE("bit_waitqueue", 0),
STACK_USAGE("finish_swait", 24),
STACK_USAGE("asym_cpu_capacity_scan", 40),
STACK_USAGE("wait_for_completion", 16),
STACK_USAGE("setup_relax_domain_level", 0),
STACK_USAGE("select_task_rq_stop", 0),
STACK_USAGE("cpupri_find_fitness", 72),
STACK_USAGE("wake_up_bit", 112),
STACK_USAGE("__sched_clock_work", 8),
STACK_USAGE("__var_waitqueue", 0),
STACK_USAGE("__wake_up", 96),
STACK_USAGE("wait_for_completion_timeout", 24),
STACK_USAGE("calc_load_n", 0),
STACK_USAGE("var_wake_function", 16),
STACK_USAGE("__wake_up_locked", 40),
STACK_USAGE("ipi_mb", 0),
STACK_USAGE("set_sched_topology", 0),
STACK_USAGE("sd_numa_mask", 0),
STACK_USAGE("find_numa_distance", 24),
STACK_USAGE("__wake_up_locked_key", 40),
STACK_USAGE("ipi_sync_core", 0),
STACK_USAGE("wait_for_completion_io", 16),
STACK_USAGE("init_numa_topology_type", 96),
STACK_USAGE("cpuusage_user_read", 24),
STACK_USAGE("init_wait_var_entry", 0),
STACK_USAGE("__wake_up_locked_key_bookmark", 0),
STACK_USAGE("sched_init_numa", 224),
STACK_USAGE("add_wait_queue", 16),
STACK_USAGE("cpuusage_sys_read", 24),
STACK_USAGE("housekeeping_nohz_full_setup", 0),
STACK_USAGE("cpuusage_read", 24),
STACK_USAGE("ipi_rseq", 0),
STACK_USAGE("schedstat_start", 8),
STACK_USAGE("clear_sched_clock_stable", 0),
STACK_USAGE("wait_for_completion_io_timeout", 24),
STACK_USAGE("cpuusage_write", 32),
STACK_USAGE("housekeeping_isolcpus_setup", 48),
STACK_USAGE("wake_up_var", 112),
STACK_USAGE("sched_update_numa", 72),
STACK_USAGE("__sched_clock_gtod_offset", 8),
STACK_USAGE("bit_wait", 8),
STACK_USAGE("sched_domains_numa_masks_set", 32),
STACK_USAGE("__wake_up_sync_key", 96),
STACK_USAGE("ipi_sync_rq_state", 0),
STACK_USAGE("balance_stop", 0),
STACK_USAGE("sched_domains_numa_masks_clear", 0),
STACK_USAGE("sched_numa_find_closest", 40),
STACK_USAGE("wait_for_completion_interruptible", 16),
STACK_USAGE("sched_clock_init", 16),
STACK_USAGE("bit_wait_io", 8),
STACK_USAGE("schedstat_next", 8),
STACK_USAGE("__cpuacct_percpu_seq_show", 32),
STACK_USAGE("cpupri_set", 0),
STACK_USAGE("__update_stats_wait_end", 24),
STACK_USAGE("schedstat_stop", 0),
STACK_USAGE("membarrier_exec_mmap", 0),
STACK_USAGE("bit_wait_timeout", 8),
STACK_USAGE("swake_up_locked", 8),
STACK_USAGE("wake_bit_function", 16),
STACK_USAGE("build_sched_domains", 136),
STACK_USAGE("__wake_up_locked_sync_key", 40),
STACK_USAGE("cpuacct_percpu_user_seq_show", 0),
STACK_USAGE("sched_clock_init_late", 24),
STACK_USAGE("wait_for_completion_interruptible_timeout", 24),
STACK_USAGE("proc_schedstat_init", 0),
STACK_USAGE("cpuacct_percpu_sys_seq_show", 0),
STACK_USAGE("bit_wait_io_timeout", 8),
STACK_USAGE("membarrier_update_current_mm", 8),
STACK_USAGE("__wake_up_sync", 88),
STACK_USAGE("cpuacct_percpu_seq_show", 0),
STACK_USAGE("cpu_smt_mask", 0),
STACK_USAGE("arch_update_cpu_topology", 0),
STACK_USAGE("alloc_sched_domains", 0),
STACK_USAGE("cpuacct_all_seq_show", 24),
STACK_USAGE("__wake_up_pollfree", 80),
STACK_USAGE("free_sched_domains", 0),
STACK_USAGE("wait_for_completion_killable", 16),
STACK_USAGE("sched_init_domains", 16),
STACK_USAGE("calc_load_nohz_start", 0),
STACK_USAGE("wait_bit_init", 8),
STACK_USAGE("partition_sched_domains_locked", 88),
STACK_USAGE("cpu_cpu_mask", 0),
STACK_USAGE("calc_load_nohz_remote", 0),
STACK_USAGE("cpuacct_stats_show", 120),
STACK_USAGE("prepare_to_wait", 24),
STACK_USAGE("partition_sched_domains", 24),
STACK_USAGE("calc_load_nohz_stop", 0),
STACK_USAGE("wait_for_completion_killable_timeout", 24),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("check_preempt_curr_stop", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("prepare_to_wait_exclusive", 32),
STACK_USAGE("cpupri_init", 16),
STACK_USAGE("try_wait_for_completion", 24),
STACK_USAGE("add_wait_queue_exclusive", 16),
STACK_USAGE("complete", 32),
STACK_USAGE("init_wait_entry", 0),
STACK_USAGE("cpufreq_add_update_util_hook", 0),
STACK_USAGE("prepare_to_wait_event", 24),
STACK_USAGE("cpupri_cleanup", 0),
STACK_USAGE("membarrier_private_expedited", 72),
STACK_USAGE("sugov_update_single_common", 32),
STACK_USAGE("completion_done", 16),
STACK_USAGE("set_next_task_stop", 16),
STACK_USAGE("sugov_update_single_freq", 40),
STACK_USAGE("cpuacct_charge", 32),
STACK_USAGE("housekeeping_enabled", 0),
STACK_USAGE("do_wait_intr", 8),
STACK_USAGE("calc_global_load", 24),
STACK_USAGE("cpuacct_account_field", 40),
STACK_USAGE("do_wait_intr_irq", 8),
STACK_USAGE("sched_clock_cpu", 32),
STACK_USAGE("pick_task_stop", 0),
STACK_USAGE("sugov_update_single_perf", 24),
STACK_USAGE("calc_global_load_tick", 0),
STACK_USAGE("finish_wait", 24),
STACK_USAGE("sched_clock_tick", 16),
STACK_USAGE("add_wait_queue_priority", 16),
STACK_USAGE("cpu_smt_flags", 0),
STACK_USAGE("housekeeping_any_cpu", 8),
STACK_USAGE("sched_clock_tick_stable", 24),
STACK_USAGE("autoremove_wake_function", 8),
STACK_USAGE("__wait_on_bit", 48),
STACK_USAGE("swake_up_all_locked", 16),
STACK_USAGE("sched_clock_idle_sleep_event", 0),
STACK_USAGE("sync_runqueues_membarrier_state", 56),
STACK_USAGE("sched_clock_idle_wakeup_event", 16),
STACK_USAGE("sugov_update_shared", 72),
STACK_USAGE("wait_woken", 24),
STACK_USAGE("pick_next_task_stop", 16),
STACK_USAGE("free_rootdomain", 16),
STACK_USAGE("sugov_work", 32),
STACK_USAGE("rq_attach_root", 56),
STACK_USAGE("cpu_cluster_flags", 0),
STACK_USAGE("woken_wake_function", 0),
STACK_USAGE("running_clock", 0),
STACK_USAGE("__update_stats_enqueue_sleeper", 40),
STACK_USAGE("swake_up_one", 24),
STACK_USAGE("sugov_irq_work", 0),
STACK_USAGE("sched_get_rd", 0),
STACK_USAGE("sched_put_rd", 0),
STACK_USAGE("rate_limit_us_show", 0),
STACK_USAGE("remove_wait_queue", 16),
STACK_USAGE("init_rootdomain", 24),
STACK_USAGE("rate_limit_us_store", 32),
STACK_USAGE("cpu_core_flags", 0),
STACK_USAGE("sugov_tunables_free", 0),
STACK_USAGE("cpufreq_remove_update_util_hook", 0),
STACK_USAGE("cpuacct_css_alloc", 24),
STACK_USAGE("enqueue_task_stop", 16),
STACK_USAGE("init_defrootdomain", 0),
STACK_USAGE("housekeeping_cpumask", 0),
STACK_USAGE("__ia32_sys_membarrier", 0),
STACK_USAGE("__se_sys_membarrier", 56),
STACK_USAGE("__x64_sys_membarrier", 0),
STACK_USAGE("complete_all", 32),
STACK_USAGE("out_of_line_wait_on_bit", 120),
STACK_USAGE("destroy_sched_domain", 32),
STACK_USAGE("cpu_numa_flags", 0),
STACK_USAGE("destroy_sched_domains_rcu", 8),
STACK_USAGE("dequeue_task_stop", 0),
STACK_USAGE("swake_up_all", 48),
STACK_USAGE("sugov_kthread_stop", 8),
STACK_USAGE("sched_clock", 0),
STACK_USAGE("sugov_init", 104),
STACK_USAGE("housekeeping_affine", 0),
STACK_USAGE("yield_task_stop", 0),
STACK_USAGE("cpu_attach_domain", 80),
STACK_USAGE("out_of_line_wait_on_bit_timeout", 120),
STACK_USAGE("cpufreq_this_cpu_can_update", 8),
STACK_USAGE("__init_swait_queue_head", 24),
STACK_USAGE("__update_stats_wait_start", 24),
STACK_USAGE("do_wait_for_common", 96),
STACK_USAGE("get_avenrun", 0),
STACK_USAGE("put_prev_task_stop", 24),
STACK_USAGE("rcu_read_unlock", 0),
STACK_USAGE("sugov_exit", 24),
STACK_USAGE("housekeeping_test_cpu", 0),
STACK_USAGE("sugov_start", 24),
STACK_USAGE("group_balance_cpu", 0),
STACK_USAGE("calc_load_fold_active", 0),
STACK_USAGE("sugov_stop", 16),
STACK_USAGE("sugov_limits", 24),
STACK_USAGE("__wake_up_common", 64),
STACK_USAGE("__wait_on_bit_lock", 56),
STACK_USAGE("housekeeping_init", 24),
STACK_USAGE("schedutil_gov_init", 0),
STACK_USAGE("__prepare_to_swait", 0),
STACK_USAGE("cpuacct_css_free", 8),
STACK_USAGE("__init_waitqueue_head", 24),
STACK_USAGE("prepare_to_swait_exclusive", 24),
STACK_USAGE("task_tick_stop", 0),
STACK_USAGE("sched_change_group", 24),
STACK_USAGE("sched_move_task", 56),
STACK_USAGE("wake_q_add_safe", 0),
STACK_USAGE("cpu_cgroup_css_alloc", 0),
STACK_USAGE("cpu_cgroup_css_online", 16),
STACK_USAGE("cpu_cgroup_css_released", 8),
STACK_USAGE("cpu_cgroup_css_free", 8),
STACK_USAGE("wake_up_q", 24),
STACK_USAGE("cpu_cgroup_fork", 40),
STACK_USAGE("cpu_cgroup_can_attach", 56),
STACK_USAGE("cpu_cgroup_attach", 32),
STACK_USAGE("cpu_shares_write_u64", 0),
STACK_USAGE("cpu_shares_read_u64", 0),
STACK_USAGE("tg_set_cfs_bandwidth", 96),
STACK_USAGE("resched_curr", 16),
STACK_USAGE("cpu_cfs_quota_read_s64", 0),
STACK_USAGE("cpu_cfs_quota_write_s64", 0),
STACK_USAGE("cpu_cfs_period_read_u64", 0),
STACK_USAGE("cpu_cfs_period_write_u64", 0),
STACK_USAGE("cpu_cfs_burst_read_u64", 0),
STACK_USAGE("cpu_cfs_burst_write_u64", 0),
STACK_USAGE("resched_cpu", 40),
STACK_USAGE("cpu_cfs_stat_show", 40),
STACK_USAGE("cpu_idle_read_s64", 0),
STACK_USAGE("cpu_idle_write_s64", 0),
STACK_USAGE("cpu_extra_stat_show", 0),
STACK_USAGE("cpu_weight_read_u64", 0),
STACK_USAGE("cpu_weight_write_u64", 0),
STACK_USAGE("get_nohz_timer_target", 48),
STACK_USAGE("cpu_weight_nice_read_s64", 0),
STACK_USAGE("cpu_weight_nice_write_s64", 0),
STACK_USAGE("cpu_max_show", 24),
STACK_USAGE("cpu_max_write", 88),
STACK_USAGE("dump_cpu_task", 8),
STACK_USAGE("call_trace_sched_update_nr_running", 0),
STACK_USAGE("wake_up_nohz_cpu", 16),
STACK_USAGE("nohz_csd_func", 0),
STACK_USAGE("__bpf_trace_sched_kthread_work_execute_end", 0),
STACK_USAGE("__traceiter_sched_kthread_work_execute_end", 24),
STACK_USAGE("perf_trace_sched_kthread_work_execute_end", 64),
STACK_USAGE("trace_event_raw_event_sched_kthread_work_execute_end", 80),
STACK_USAGE("trace_raw_output_sched_kthread_work_execute_end", 24),
STACK_USAGE("walk_tg_tree_from", 48),
STACK_USAGE("tg_nop", 0),
STACK_USAGE("raw_spin_rq_lock", 8),
STACK_USAGE("_raw_spin_rq_lock_irqsave", 32),
STACK_USAGE("raw_spin_rq_unlock_irqrestore", 8),
STACK_USAGE("__bpf_trace_sched_wakeup_template", 0),
STACK_USAGE("perf_trace_sched_wakeup_template", 64),
STACK_USAGE("trace_event_raw_event_sched_wakeup_template", 72),
STACK_USAGE("trace_raw_output_sched_wakeup_template", 24),
STACK_USAGE("task_rq_unlock", 24),
STACK_USAGE("__bpf_trace_sched_kthread_stop", 0),
STACK_USAGE("__traceiter_sched_kthread_stop", 16),
STACK_USAGE("perf_trace_sched_kthread_stop", 56),
STACK_USAGE("trace_event_raw_event_sched_kthread_stop", 72),
STACK_USAGE("trace_raw_output_sched_kthread_stop", 24),
STACK_USAGE("__traceiter_sched_waking", 16),
STACK_USAGE("trace_sched_waking", 0),
STACK_USAGE("__traceiter_sched_wakeup", 16),
STACK_USAGE("trace_sched_wakeup", 0),
STACK_USAGE("__traceiter_sched_wakeup_new", 16),
STACK_USAGE("sched_task_on_rq", 0),
STACK_USAGE("get_wchan", 16),
STACK_USAGE("activate_task", 24),
STACK_USAGE("deactivate_task", 24),
STACK_USAGE("task_curr", 0),
STACK_USAGE("check_preempt_curr", 8),
STACK_USAGE("migrate_disable", 8),
STACK_USAGE("__bpf_trace_sched_switch", 0),
STACK_USAGE("__traceiter_sched_switch", 40),
STACK_USAGE("perf_trace_sched_switch", 80),
STACK_USAGE("trace_event_raw_event_sched_switch", 104),
STACK_USAGE("trace_raw_output_sched_switch", 48),
STACK_USAGE("migrate_enable", 48),
STACK_USAGE("move_queued_task", 48),
STACK_USAGE("__migrate_task", 40),
STACK_USAGE("migration_cpu_stop", 80),
STACK_USAGE("push_cpu_stop", 40),
STACK_USAGE("set_cpus_allowed_common", 8),
STACK_USAGE("__do_set_cpus_allowed", 48),
STACK_USAGE("do_set_cpus_allowed", 0),
STACK_USAGE("dup_user_cpus_ptr", 24),
STACK_USAGE("release_user_cpus_ptr", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("__bpf_trace_sched_migrate_task", 0),
STACK_USAGE("__traceiter_sched_migrate_task", 24),
STACK_USAGE("perf_trace_sched_migrate_task", 64),
STACK_USAGE("trace_event_raw_event_sched_migrate_task", 80),
STACK_USAGE("trace_raw_output_sched_migrate_task", 24),
STACK_USAGE("__set_cpus_allowed_ptr_locked", 312),
STACK_USAGE("set_cpus_allowed_ptr", 48),
STACK_USAGE("__bpf_trace_sched_process_template", 0),
STACK_USAGE("perf_trace_sched_process_template", 56),
STACK_USAGE("trace_event_raw_event_sched_process_template", 72),
STACK_USAGE("trace_raw_output_sched_process_template", 24),
STACK_USAGE("force_compatible_cpus_allowed_ptr", 72),
STACK_USAGE("relax_compatible_cpus_allowed_ptr", 24),
STACK_USAGE("set_task_cpu", 32),
STACK_USAGE("__migrate_swap_task", 64),
STACK_USAGE("migrate_swap_stop", 40),
STACK_USAGE("migrate_swap", 56),
STACK_USAGE("__traceiter_sched_process_free", 16),
STACK_USAGE("wait_task_inactive", 88),
STACK_USAGE("__traceiter_sched_process_exit", 16),
STACK_USAGE("kick_process", 16),
STACK_USAGE("__traceiter_sched_wait_task", 16),
STACK_USAGE("select_fallback_rq", 48),
STACK_USAGE("__bpf_trace_sched_process_wait", 0),
STACK_USAGE("__traceiter_sched_process_wait", 16),
STACK_USAGE("perf_trace_sched_process_wait", 56),
STACK_USAGE("trace_event_raw_event_sched_process_wait", 72),
STACK_USAGE("trace_raw_output_sched_process_wait", 24),
STACK_USAGE("select_task_rq", 24),
STACK_USAGE("sched_set_stop_task", 88),
STACK_USAGE("ttwu_do_wakeup", 32),
STACK_USAGE("ttwu_do_activate", 40),
STACK_USAGE("sched_ttwu_pending", 88),
STACK_USAGE("__bpf_trace_sched_process_fork", 0),
STACK_USAGE("__traceiter_sched_process_fork", 24),
STACK_USAGE("perf_trace_sched_process_fork", 64),
STACK_USAGE("trace_event_raw_event_sched_process_fork", 80),
STACK_USAGE("trace_raw_output_sched_process_fork", 24),
STACK_USAGE("send_call_function_single_ipi", 0),
STACK_USAGE("wake_up_if_idle", 48),
STACK_USAGE("cpus_share_cache", 0),
STACK_USAGE("ttwu_queue_wakelist", 24),
STACK_USAGE("__bpf_trace_sched_kthread_stop_ret", 0),
STACK_USAGE("__traceiter_sched_kthread_stop_ret", 16),
STACK_USAGE("perf_trace_sched_kthread_stop_ret", 56),
STACK_USAGE("trace_event_raw_event_sched_kthread_stop_ret", 72),
STACK_USAGE("trace_raw_output_sched_kthread_stop_ret", 24),
STACK_USAGE("__bpf_trace_sched_process_exec", 0),
STACK_USAGE("__traceiter_sched_process_exec", 32),
STACK_USAGE("perf_trace_sched_process_exec", 88),
STACK_USAGE("trace_event_raw_event_sched_process_exec", 104),
STACK_USAGE("trace_raw_output_sched_process_exec", 24),
STACK_USAGE("try_to_wake_up", 80),
STACK_USAGE("task_call_func", 64),
STACK_USAGE("wake_up_process", 0),
STACK_USAGE("wake_up_state", 0),
STACK_USAGE("set_numabalancing_state", 0),
STACK_USAGE("sysctl_numa_balancing", 128),
STACK_USAGE("__bpf_trace_sched_stat_template", 0),
STACK_USAGE("perf_trace_sched_stat_template", 72),
STACK_USAGE("trace_event_raw_event_sched_stat_template", 80),
STACK_USAGE("trace_raw_output_sched_stat_template", 24),
STACK_USAGE("force_schedstat_enabled", 0),
STACK_USAGE("setup_schedstats", 8),
STACK_USAGE("sysctl_schedstats", 128),
STACK_USAGE("sched_fork", 24),
STACK_USAGE("sched_cgroup_fork", 48),
STACK_USAGE("sched_post_fork", 0),
STACK_USAGE("to_ratio", 0),
STACK_USAGE("wake_up_new_task", 72),
STACK_USAGE("preempt_notifier_inc", 0),
STACK_USAGE("preempt_notifier_dec", 0),
STACK_USAGE("preempt_notifier_register", 8),
STACK_USAGE("__traceiter_sched_stat_wait", 24),
STACK_USAGE("preempt_notifier_unregister", 0),
STACK_USAGE("__traceiter_sched_stat_sleep", 24),
STACK_USAGE("do_balance_callbacks", 24),
STACK_USAGE("__balance_callbacks", 24),
STACK_USAGE("__traceiter_sched_stat_iowait", 24),
STACK_USAGE("prepare_lock_switch", 24),
STACK_USAGE("finish_lock_switch", 32),
STACK_USAGE("__traceiter_sched_stat_blocked", 24),
STACK_USAGE("finish_task_switch", 48),
STACK_USAGE("__bpf_trace_sched_stat_runtime", 0),
STACK_USAGE("perf_trace_sched_stat_runtime", 72),
STACK_USAGE("trace_event_raw_event_sched_stat_runtime", 88),
STACK_USAGE("trace_raw_output_sched_stat_runtime", 24),
STACK_USAGE("schedule_tail", 16),
STACK_USAGE("nr_running", 16),
STACK_USAGE("single_task_running", 0),
STACK_USAGE("nr_context_switches", 16),
STACK_USAGE("nr_iowait_cpu", 0),
STACK_USAGE("nr_iowait", 16),
STACK_USAGE("sched_exec", 64),
STACK_USAGE("__traceiter_sched_stat_runtime", 32),
STACK_USAGE("task_sched_runtime", 48),
STACK_USAGE("__bpf_trace_sched_pi_setprio", 0),
STACK_USAGE("__traceiter_sched_pi_setprio", 24),
STACK_USAGE("perf_trace_sched_pi_setprio", 64),
STACK_USAGE("trace_event_raw_event_sched_pi_setprio", 80),
STACK_USAGE("trace_raw_output_sched_pi_setprio", 24),
STACK_USAGE("scheduler_tick", 48),
STACK_USAGE("raw_spin_rq_lock_nested", 16),
STACK_USAGE("preempt_latency_start", 8),
STACK_USAGE("preempt_count_add", 8),
STACK_USAGE("preempt_count_sub", 0),
STACK_USAGE("__schedule_bug", 32),
STACK_USAGE("raw_spin_rq_trylock", 8),
STACK_USAGE("__bpf_trace_sched_move_numa", 0),
STACK_USAGE("__traceiter_sched_move_numa", 32),
STACK_USAGE("perf_trace_sched_move_numa", 72),
STACK_USAGE("trace_event_raw_event_sched_move_numa", 88),
STACK_USAGE("trace_raw_output_sched_move_numa", 24),
STACK_USAGE("raw_spin_rq_unlock", 0),
STACK_USAGE("double_rq_lock", 16),
STACK_USAGE("__bpf_trace_sched_numa_pair_template", 0),
STACK_USAGE("perf_trace_sched_numa_pair_template", 80),
STACK_USAGE("trace_event_raw_event_sched_numa_pair_template", 96),
STACK_USAGE("trace_raw_output_sched_numa_pair_template", 40),
STACK_USAGE("__task_rq_lock", 32),
STACK_USAGE("__schedule", 96),
STACK_USAGE("do_task_dead", 16),
STACK_USAGE("schedule", 8),
STACK_USAGE("schedule_idle", 8),
STACK_USAGE("task_rq_lock", 40),
STACK_USAGE("__bpf_trace_sched_kthread_work_queue_work", 0),
STACK_USAGE("__traceiter_sched_kthread_work_queue_work", 24),
STACK_USAGE("perf_trace_sched_kthread_work_queue_work", 64),
STACK_USAGE("trace_event_raw_event_sched_kthread_work_queue_work", 80),
STACK_USAGE("trace_raw_output_sched_kthread_work_queue_work", 24),
STACK_USAGE("schedule_preempt_disabled", 0),
STACK_USAGE("__traceiter_sched_stick_numa", 40),
STACK_USAGE("preempt_schedule_common", 8),
STACK_USAGE("preempt_schedule", 16),
STACK_USAGE("__traceiter_sched_swap_numa", 40),
STACK_USAGE("preempt_schedule_notrace", 16),
STACK_USAGE("preempt_schedule_irq", 16),
STACK_USAGE("default_wake_function", 0),
STACK_USAGE("__bpf_trace_sched_wake_idle_without_ipi", 0),
STACK_USAGE("__traceiter_sched_wake_idle_without_ipi", 16),
STACK_USAGE("perf_trace_sched_wake_idle_without_ipi", 56),
STACK_USAGE("trace_event_raw_event_sched_wake_idle_without_ipi", 72),
STACK_USAGE("trace_raw_output_sched_wake_idle_without_ipi", 24),
STACK_USAGE("trace_sched_wake_idle_without_ipi", 0),
STACK_USAGE("rt_mutex_setprio", 96),
STACK_USAGE("set_user_nice", 64),
STACK_USAGE("can_nice", 0),
STACK_USAGE("__bpf_trace_pelt_cfs_tp", 0),
STACK_USAGE("__traceiter_pelt_cfs_tp", 16),
STACK_USAGE("__ia32_sys_nice", 16),
STACK_USAGE("__x64_sys_nice", 16),
STACK_USAGE("__bpf_trace_pelt_rt_tp", 0),
STACK_USAGE("__traceiter_pelt_rt_tp", 16),
STACK_USAGE("task_prio", 0),
STACK_USAGE("idle_cpu", 0),
STACK_USAGE("available_idle_cpu", 0),
STACK_USAGE("__bpf_trace_pelt_dl_tp", 0),
STACK_USAGE("__traceiter_pelt_dl_tp", 16),
STACK_USAGE("idle_task", 0),
STACK_USAGE("effective_cpu_util", 0),
STACK_USAGE("__bpf_trace_pelt_thermal_tp", 0),
STACK_USAGE("__traceiter_pelt_thermal_tp", 16),
STACK_USAGE("__bpf_trace_pelt_irq_tp", 0),
STACK_USAGE("__traceiter_pelt_irq_tp", 16),
STACK_USAGE("__bpf_trace_pelt_se_tp", 0),
STACK_USAGE("__traceiter_pelt_se_tp", 16),
STACK_USAGE("sched_cpu_util", 0),
STACK_USAGE("__bpf_trace_sched_cpu_capacity_tp", 0),
STACK_USAGE("__traceiter_sched_cpu_capacity_tp", 16),
STACK_USAGE("check_same_owner", 24),
STACK_USAGE("rcu_read_unlock", 0),
STACK_USAGE("__sched_setscheduler", 104),
STACK_USAGE("__bpf_trace_sched_overutilized_tp", 0),
STACK_USAGE("__traceiter_sched_overutilized_tp", 24),
STACK_USAGE("__bpf_trace_sched_util_est_cfs_tp", 0),
STACK_USAGE("__traceiter_sched_util_est_cfs_tp", 16),
STACK_USAGE("__bpf_trace_sched_util_est_se_tp", 0),
STACK_USAGE("__traceiter_sched_util_est_se_tp", 16),
STACK_USAGE("__bpf_trace_sched_update_nr_running_tp", 0),
STACK_USAGE("__traceiter_sched_update_nr_running_tp", 24),
STACK_USAGE("update_rq_clock", 8),
STACK_USAGE("sched_setscheduler", 64),
STACK_USAGE("sched_setattr", 0),
STACK_USAGE("sched_setattr_nocheck", 0),
STACK_USAGE("sched_setscheduler_nocheck", 64),
STACK_USAGE("sched_set_fifo", 64),
STACK_USAGE("sched_set_fifo_low", 64),
STACK_USAGE("sched_set_normal", 64),
STACK_USAGE("do_sched_setscheduler", 104),
STACK_USAGE("__ia32_sys_sched_setscheduler", 0),
STACK_USAGE("__x64_sys_sched_setscheduler", 0),
STACK_USAGE("__ia32_sys_sched_setparam", 0),
STACK_USAGE("__x64_sys_sched_setparam", 0),
STACK_USAGE("__ia32_sys_sched_setattr", 0),
STACK_USAGE("__se_sys_sched_setattr", 104),
STACK_USAGE("__x64_sys_sched_setattr", 0),
STACK_USAGE("__ia32_sys_sched_getscheduler", 0),
STACK_USAGE("__se_sys_sched_getscheduler", 16),
STACK_USAGE("__x64_sys_sched_getscheduler", 0),
STACK_USAGE("__ia32_sys_sched_getparam", 0),
STACK_USAGE("__se_sys_sched_getparam", 40),
STACK_USAGE("__x64_sys_sched_getparam", 0),
STACK_USAGE("hrtick", 32),
STACK_USAGE("__ia32_sys_sched_getattr", 0),
STACK_USAGE("__se_sys_sched_getattr", 96),
STACK_USAGE("__x64_sys_sched_getattr", 0),
STACK_USAGE("dl_task_check_affinity", 24),
STACK_USAGE("__sched_setaffinity", 104),
STACK_USAGE("sched_setaffinity", 32),
STACK_USAGE("__ia32_sys_sched_setaffinity", 40),
STACK_USAGE("__x64_sys_sched_setaffinity", 40),
STACK_USAGE("sched_getaffinity", 32),
STACK_USAGE("__ia32_sys_sched_getaffinity", 56),
STACK_USAGE("__x64_sys_sched_getaffinity", 56),
STACK_USAGE("__hrtick_start", 24),
STACK_USAGE("do_sched_yield", 40),
STACK_USAGE("__do_sys_sched_yield", 0),
STACK_USAGE("__cond_resched", 8),
STACK_USAGE("__cond_resched_lock", 16),
STACK_USAGE("__cond_resched_rwlock_read", 16),
STACK_USAGE("hrtick_start", 16),
STACK_USAGE("__cond_resched_rwlock_write", 16),
STACK_USAGE("sched_dynamic_mode", 8),
STACK_USAGE("sched_dynamic_update", 8),
STACK_USAGE("setup_preempt_mode", 8),
STACK_USAGE("yield", 0),
STACK_USAGE("yield_to", 72),
STACK_USAGE("io_schedule_prepare", 8),
STACK_USAGE("io_schedule_finish", 0),
STACK_USAGE("io_schedule_timeout", 24),
STACK_USAGE("io_schedule", 16),
STACK_USAGE("__ia32_sys_sched_get_priority_max", 0),
STACK_USAGE("__x64_sys_sched_get_priority_max", 0),
STACK_USAGE("__ia32_sys_sched_get_priority_min", 0),
STACK_USAGE("__x64_sys_sched_get_priority_min", 0),
STACK_USAGE("sched_rr_get_interval", 56),
STACK_USAGE("__ia32_sys_sched_rr_get_interval", 32),
STACK_USAGE("__x64_sys_sched_rr_get_interval", 32),
STACK_USAGE("__ia32_sys_sched_rr_get_interval_time32", 32),
STACK_USAGE("__x64_sys_sched_rr_get_interval_time32", 32),
STACK_USAGE("sched_show_task", 32),
STACK_USAGE("show_state_filter", 40),
STACK_USAGE("init_idle", 64),
STACK_USAGE("cpuset_cpumask_can_shrink", 16),
STACK_USAGE("task_can_attach", 24),
STACK_USAGE("migrate_task_to", 40),
STACK_USAGE("sched_setnuma", 64),
STACK_USAGE("idle_task_exit", 16),
STACK_USAGE("__balance_push_cpu_stop", 64),
STACK_USAGE("balance_push", 24),
STACK_USAGE("balance_push_set", 48),
STACK_USAGE("balance_hotplug_wait", 24),
STACK_USAGE("set_rq_online", 24),
STACK_USAGE("set_rq_offline", 24),
STACK_USAGE("sched_cpu_activate", 72),
STACK_USAGE("sched_cpu_deactivate", 80),
STACK_USAGE("sched_cpu_starting", 0),
STACK_USAGE("sched_cpu_wait_empty", 0),
STACK_USAGE("sched_cpu_dying", 72),
STACK_USAGE("sched_init_smp", 48),
STACK_USAGE("__bpf_trace_sched_kthread_work_execute_start", 0),
STACK_USAGE("__traceiter_sched_kthread_work_execute_start", 16),
STACK_USAGE("perf_trace_sched_kthread_work_execute_start", 56),
STACK_USAGE("trace_event_raw_event_sched_kthread_work_execute_start", 72),
STACK_USAGE("trace_raw_output_sched_kthread_work_execute_start", 24),
STACK_USAGE("migration_init", 0),
STACK_USAGE("in_sched_functions", 8),
STACK_USAGE("sched_init", 72),
STACK_USAGE("__might_sleep", 16),
STACK_USAGE("print_preempt_disable_ip", 8),
STACK_USAGE("__might_resched", 56),
STACK_USAGE("__cant_sleep", 24),
STACK_USAGE("__cant_migrate", 24),
STACK_USAGE("normalize_rt_tasks", 96),
STACK_USAGE("wake_q_add", 0),
STACK_USAGE("sched_free_group_rcu", 8),
STACK_USAGE("sched_create_group", 24),
STACK_USAGE("sched_online_group", 16),
STACK_USAGE("sched_unregister_group_rcu", 16),
STACK_USAGE("sched_destroy_group", 0),
STACK_USAGE("sched_release_group", 8),
STACK_USAGE("active_load_balance_cpu_stop", 176),
STACK_USAGE("update_max_interval", 0),
STACK_USAGE("rebalance_domains", 96),
STACK_USAGE("set_cpu_sd_state_busy", 8),
STACK_USAGE("nohz_balance_exit_idle", 8),
STACK_USAGE("nohz_balance_enter_idle", 32),
STACK_USAGE("_nohz_idle_balance", 88),
STACK_USAGE("nohz_run_idle_balance", 0),
STACK_USAGE("newidle_balance", 96),
STACK_USAGE("run_rebalance_domains", 16),
STACK_USAGE("trigger_load_balance", 48),
STACK_USAGE("rq_online_fair", 48),
STACK_USAGE("rq_offline_fair", 32),
STACK_USAGE("task_tick_fair", 56),
STACK_USAGE("task_fork_fair", 64),
STACK_USAGE("prio_changed_fair", 0),
STACK_USAGE("propagate_entity_cfs_rq", 16),
STACK_USAGE("detach_entity_cfs_rq", 40),
STACK_USAGE("task_scan_start", 56),
STACK_USAGE("attach_task_cfs_rq", 24),
STACK_USAGE("switched_from_fair", 0),
STACK_USAGE("switched_to_fair", 16),
STACK_USAGE("set_next_task_fair", 40),
STACK_USAGE("init_cfs_rq", 0),
STACK_USAGE("task_change_group_fair", 40),
STACK_USAGE("free_fair_sched_group", 24),
STACK_USAGE("alloc_fair_sched_group", 48),
STACK_USAGE("online_fair_sched_group", 88),
STACK_USAGE("unregister_fair_sched_group", 64),
STACK_USAGE("task_scan_max", 104),
STACK_USAGE("init_tg_cfs_entry", 0),
STACK_USAGE("__sched_group_set_shares", 80),
STACK_USAGE("sched_group_set_shares", 24),
STACK_USAGE("sched_group_set_idle", 104),
STACK_USAGE("get_rr_interval_fair", 0),
STACK_USAGE("init_sched_fair_class", 0),
STACK_USAGE("sched_trace_cfs_rq_avg", 0),
STACK_USAGE("sched_trace_cfs_rq_path", 16),
STACK_USAGE("sched_trace_cfs_rq_cpu", 0),
STACK_USAGE("sched_trace_rq_avg_rt", 0),
STACK_USAGE("sched_trace_rq_avg_dl", 0),
STACK_USAGE("sched_trace_rq_avg_irq", 0),
STACK_USAGE("sched_trace_rq_cpu", 0),
STACK_USAGE("sched_trace_rq_cpu_capacity", 0),
STACK_USAGE("sched_trace_rd_span", 0),
STACK_USAGE("sched_trace_rq_nr_running", 0),
STACK_USAGE("task_numa_group_id", 8),
STACK_USAGE("setup_sched_thermal_decay_shift", 24),
STACK_USAGE("score_nearby_nodes", 96),
STACK_USAGE("task_weight", 16),
STACK_USAGE("group_weight", 56),
STACK_USAGE("should_numa_migrate_memory", 56),
STACK_USAGE("arch_asym_cpu_priority", 0),
STACK_USAGE("update_numa_stats", 80),
STACK_USAGE("task_numa_assign", 40),
STACK_USAGE("task_numa_find_cpu", 88),
STACK_USAGE("update_sysctl", 4),
STACK_USAGE("sched_init_granularity", 0),
STACK_USAGE("put_numa_group", 0),
STACK_USAGE("double_lock_irq", 8),
STACK_USAGE("task_numa_free", 40),
STACK_USAGE("task_numa_fault", 464),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("task_numa_work", 72),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("__calc_delta", 8),
STACK_USAGE("init_numa_balancing", 48),
STACK_USAGE("reweight_entity", 24),
STACK_USAGE("reweight_task", 16),
STACK_USAGE("set_task_rq_fair", 16),
STACK_USAGE("attach_entity_load_avg", 40),
STACK_USAGE("update_load_avg", 72),
STACK_USAGE("update_misfit_status", 8),
STACK_USAGE("enqueue_entity", 48),
STACK_USAGE("dequeue_entity", 56),
STACK_USAGE("set_next_entity", 24),
STACK_USAGE("pick_next_entity", 40),
STACK_USAGE("put_prev_entity", 24),
STACK_USAGE("cfs_bandwidth_usage_inc", 0),
STACK_USAGE("cfs_bandwidth_usage_dec", 0),
STACK_USAGE("__refill_cfs_bandwidth_runtime", 0),
STACK_USAGE("__assign_cfs_rq_runtime", 40),
STACK_USAGE("tg_unthrottle_up", 16),
STACK_USAGE("tg_throttle_down", 16),
STACK_USAGE("throttle_cfs_rq", 56),
STACK_USAGE("unthrottle_cfs_rq", 48),
STACK_USAGE("distribute_cfs_runtime", 96),
STACK_USAGE("sched_cfs_slack_timer", 40),
STACK_USAGE("sched_cfs_period_timer", 64),
STACK_USAGE("init_cfs_bandwidth", 8),
STACK_USAGE("start_cfs_bandwidth", 24),
STACK_USAGE("enqueue_task_fair", 64),
STACK_USAGE("dequeue_task_fair", 88),
STACK_USAGE("find_idlest_cpu", 336),
STACK_USAGE("__update_idle_core", 32),
STACK_USAGE("__pick_first_entity", 0),
STACK_USAGE("trace_sched_stick_numa", 0),
STACK_USAGE("select_task_rq_fair", 144),
STACK_USAGE("trace_pelt_cfs_tp", 0),
STACK_USAGE("migrate_task_rq_fair", 32),
STACK_USAGE("task_dead_fair", 24),
STACK_USAGE("balance_fair", 0),
STACK_USAGE("check_preempt_wakeup", 48),
STACK_USAGE("sched_slice", 64),
STACK_USAGE("rcu_read_unlock", 0),
STACK_USAGE("trace_sched_overutilized_tp", 0),
STACK_USAGE("pick_task_fair", 40),
STACK_USAGE("pick_next_task_fair", 56),
STACK_USAGE("trace_sched_util_est_cfs_tp", 0),
STACK_USAGE("__pick_next_task_fair", 32),
STACK_USAGE("put_prev_task_fair", 8),
STACK_USAGE("yield_task_fair", 24),
STACK_USAGE("yield_to_task_fair", 0),
STACK_USAGE("init_entity_runnable_average", 0),
STACK_USAGE("can_migrate_task", 48),
STACK_USAGE("post_init_entity_util_avg", 24),
STACK_USAGE("update_blocked_averages", 152),
STACK_USAGE("update_group_capacity", 48),
STACK_USAGE("update_curr", 40),
STACK_USAGE("update_curr_fair", 0),
STACK_USAGE("need_active_balance", 32),
STACK_USAGE("load_balance", 552),
STACK_USAGE("__send_signal", 64),
STACK_USAGE("send_signal", 56),
STACK_USAGE("setup_print_fatal_signals", 16),
STACK_USAGE("__group_send_sig_info", 0),
STACK_USAGE("do_send_sig_info", 48),
STACK_USAGE("force_sig_info_to_task", 56),
STACK_USAGE("force_sig_info", 0),
STACK_USAGE("zap_other_threads", 32),
STACK_USAGE("__lock_task_sighand", 24),
STACK_USAGE("lockdep_assert_task_sighand_held", 8),
STACK_USAGE("group_send_sig_info", 56),
STACK_USAGE("__kill_pgrp_info", 32),
STACK_USAGE("kill_pid_info", 40),
STACK_USAGE("kill_proc_info", 24),
STACK_USAGE("kill_pid_usb_asyncio", 104),
STACK_USAGE("send_sig_info", 48),
STACK_USAGE("send_sig", 56),
STACK_USAGE("force_sig", 56),
STACK_USAGE("force_fatal_sig", 56),
STACK_USAGE("force_exit_sig", 56),
STACK_USAGE("force_sigsegv", 56),
STACK_USAGE("force_sig_fault_to_task", 56),
STACK_USAGE("force_sig_fault", 56),
STACK_USAGE("send_sig_fault", 88),
STACK_USAGE("force_sig_mceerr", 56),
STACK_USAGE("send_sig_mceerr", 80),
STACK_USAGE("recalc_sigpending_and_wake", 8),
STACK_USAGE("force_sig_bnderr", 56),
STACK_USAGE("force_sig_pkuerr", 56),
STACK_USAGE("force_sig_perf", 56),
STACK_USAGE("recalc_sigpending", 8),
STACK_USAGE("force_sig_seccomp", 56),
STACK_USAGE("force_sig_ptrace_errno_trap", 56),
STACK_USAGE("force_sig_fault_trapno", 56),
STACK_USAGE("send_sig_fault_trapno", 88),
STACK_USAGE("kill_pgrp", 40),
STACK_USAGE("kill_pid", 0),
STACK_USAGE("calculate_sigpending", 8),
STACK_USAGE("sigqueue_alloc", 0),
STACK_USAGE("sigqueue_free", 24),
STACK_USAGE("send_sigqueue", 56),
STACK_USAGE("do_notify_parent", 96),
STACK_USAGE("next_signal", 0),
STACK_USAGE("do_notify_parent_cldstop", 104),
STACK_USAGE("ptrace_stop", 72),
STACK_USAGE("ptrace_notify", 80),
STACK_USAGE("do_signal_stop", 32),
STACK_USAGE("do_jobctl_trap", 72),
STACK_USAGE("do_freezer_trap", 8),
STACK_USAGE("print_dropped_signal", 8),
STACK_USAGE("ptrace_signal", 56),
STACK_USAGE("get_signal", 112),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("task_set_jobctl_pending", 0),
STACK_USAGE("signal_setup_done", 72),
STACK_USAGE("exit_signals", 24),
STACK_USAGE("__do_sys_restart_syscall", 0),
STACK_USAGE("do_no_restart_syscall", 0),
STACK_USAGE("__set_task_blocked", 32),
STACK_USAGE("set_current_blocked", 16),
STACK_USAGE("__set_current_blocked", 16),
STACK_USAGE("sigprocmask", 32),
STACK_USAGE("set_user_sigmask", 24),
STACK_USAGE("set_compat_user_sigmask", 24),
STACK_USAGE("task_clear_jobctl_trapping", 0),
STACK_USAGE("__ia32_sys_rt_sigprocmask", 0),
STACK_USAGE("__se_sys_rt_sigprocmask", 56),
STACK_USAGE("__x64_sys_rt_sigprocmask", 0),
STACK_USAGE("__ia32_compat_sys_rt_sigprocmask", 64),
STACK_USAGE("__ia32_sys_rt_sigpending", 48),
STACK_USAGE("__x64_sys_rt_sigpending", 48),
STACK_USAGE("__ia32_compat_sys_rt_sigpending", 48),
STACK_USAGE("siginfo_layout", 0),
STACK_USAGE("copy_siginfo_to_user", 8),
STACK_USAGE("__copy_siginfo_from_user", 136),
STACK_USAGE("task_clear_jobctl_pending", 0),
STACK_USAGE("copy_siginfo_from_user", 120),
STACK_USAGE("copy_siginfo_to_external32", 0),
STACK_USAGE("__copy_siginfo_to_user32", 152),
STACK_USAGE("post_copy_siginfo_from_user32", 0),
STACK_USAGE("copy_siginfo_from_user32", 144),
STACK_USAGE("do_sigtimedwait", 88),
STACK_USAGE("__ia32_sys_rt_sigtimedwait", 0),
STACK_USAGE("__se_sys_rt_sigtimedwait", 112),
STACK_USAGE("__x64_sys_rt_sigtimedwait", 0),
STACK_USAGE("task_participate_group_stop", 16),
STACK_USAGE("__ia32_sys_rt_sigtimedwait_time32", 0),
STACK_USAGE("__se_sys_rt_sigtimedwait_time32", 112),
STACK_USAGE("__x64_sys_rt_sigtimedwait_time32", 0),
STACK_USAGE("__ia32_compat_sys_rt_sigtimedwait_time64", 240),
STACK_USAGE("__ia32_compat_sys_rt_sigtimedwait_time32", 240),
STACK_USAGE("__ia32_sys_kill", 0),
STACK_USAGE("__se_sys_kill", 104),
STACK_USAGE("__x64_sys_kill", 0),
STACK_USAGE("__ia32_sys_pidfd_send_signal", 0),
STACK_USAGE("__se_sys_pidfd_send_signal", 240),
STACK_USAGE("__x64_sys_pidfd_send_signal", 0),
STACK_USAGE("do_send_specific", 56),
STACK_USAGE("task_join_group_stop", 0),
STACK_USAGE("__ia32_sys_tgkill", 88),
STACK_USAGE("__x64_sys_tgkill", 88),
STACK_USAGE("__ia32_sys_tkill", 80),
STACK_USAGE("__x64_sys_tkill", 80),
STACK_USAGE("__ia32_sys_rt_sigqueueinfo", 72),
STACK_USAGE("__x64_sys_rt_sigqueueinfo", 72),
STACK_USAGE("__ia32_compat_sys_rt_sigqueueinfo", 200),
STACK_USAGE("__ia32_sys_rt_tgsigqueueinfo", 80),
STACK_USAGE("__x64_sys_rt_tgsigqueueinfo", 80),
STACK_USAGE("__ia32_compat_sys_rt_tgsigqueueinfo", 208),
STACK_USAGE("kernel_sigaction", 56),
STACK_USAGE("sigaction_compat_abi", 0),
STACK_USAGE("do_sigaction", 64),
STACK_USAGE("__sigqueue_alloc", 56),
STACK_USAGE("do_sigaltstack", 48),
STACK_USAGE("__ia32_sys_sigaltstack", 72),
STACK_USAGE("__x64_sys_sigaltstack", 72),
STACK_USAGE("restore_altstack", 40),
STACK_USAGE("__save_altstack", 8),
STACK_USAGE("do_compat_sigaltstack", 80),
STACK_USAGE("__ia32_compat_sys_sigaltstack", 0),
STACK_USAGE("compat_restore_altstack", 80),
STACK_USAGE("__compat_save_altstack", 8),
STACK_USAGE("__ia32_sys_sigpending", 40),
STACK_USAGE("__x64_sys_sigpending", 40),
STACK_USAGE("__ia32_compat_sys_sigpending", 24),
STACK_USAGE("__ia32_sys_sigprocmask", 0),
STACK_USAGE("__se_sys_sigprocmask", 56),
STACK_USAGE("__x64_sys_sigprocmask", 0),
STACK_USAGE("__ia32_sys_rt_sigaction", 96),
STACK_USAGE("__x64_sys_rt_sigaction", 96),
STACK_USAGE("__ia32_compat_sys_rt_sigaction", 120),
STACK_USAGE("__ia32_compat_sys_sigaction", 88),
STACK_USAGE("__do_sys_sgetmask", 0),
STACK_USAGE("__ia32_sys_ssetmask", 32),
STACK_USAGE("__x64_sys_ssetmask", 32),
STACK_USAGE("__ia32_sys_signal", 72),
STACK_USAGE("__x64_sys_signal", 72),
STACK_USAGE("__do_sys_pause", 8),
STACK_USAGE("sigsuspend", 16),
STACK_USAGE("flush_sigqueue", 16),
STACK_USAGE("__ia32_sys_rt_sigsuspend", 16),
STACK_USAGE("__x64_sys_rt_sigsuspend", 16),
STACK_USAGE("__ia32_compat_sys_rt_sigsuspend", 16),
STACK_USAGE("__ia32_sys_sigsuspend", 16),
STACK_USAGE("__x64_sys_sigsuspend", 16),
STACK_USAGE("arch_vma_name", 0),
STACK_USAGE("signals_init", 0),
STACK_USAGE("flush_signals", 32),
STACK_USAGE("__bpf_trace_signal_generate", 0),
STACK_USAGE("__traceiter_signal_generate", 48),
STACK_USAGE("perf_trace_signal_generate", 80),
STACK_USAGE("trace_event_raw_event_signal_generate", 104),
STACK_USAGE("trace_raw_output_signal_generate", 24),
STACK_USAGE("trace_signal_generate", 0),
STACK_USAGE("flush_itimer_signals", 64),
STACK_USAGE("ignore_signals", 0),
STACK_USAGE("flush_signal_handlers", 0),
STACK_USAGE("unhandled_signal", 0),
STACK_USAGE("__dequeue_signal", 24),
STACK_USAGE("dequeue_signal", 56),
STACK_USAGE("rcu_read_unlock", 0),
STACK_USAGE("cgroup_threadgroup_change_end", 0),
STACK_USAGE("signal_wake_up_state", 8),
STACK_USAGE("check_kill_permission", 48),
STACK_USAGE("ptrace_trap_notify", 8),
STACK_USAGE("prepare_signal", 80),
STACK_USAGE("__bpf_trace_signal_deliver", 0),
STACK_USAGE("__traceiter_signal_deliver", 32),
STACK_USAGE("perf_trace_signal_deliver", 72),
STACK_USAGE("trace_event_raw_event_signal_deliver", 88),
STACK_USAGE("trace_raw_output_signal_deliver", 24),
STACK_USAGE("trace_signal_deliver", 0),
STACK_USAGE("complete_signal", 56),
STACK_USAGE("smp_call_function", 24),
STACK_USAGE("smpcfd_prepare_cpu", 8),
STACK_USAGE("arch_disable_smp_support", 0),
STACK_USAGE("nosmp", 0),
STACK_USAGE("nrcpus", 24),
STACK_USAGE("maxcpus", 16),
STACK_USAGE("setup_nr_cpu_ids", 0),
STACK_USAGE("smp_init", 0),
STACK_USAGE("on_each_cpu_cond_mask", 40),
STACK_USAGE("do_nothing", 0),
STACK_USAGE("kick_all_cpus_sync", 0),
STACK_USAGE("wake_up_all_idle_cpus", 8),
STACK_USAGE("smp_call_on_cpu_callback", 8),
STACK_USAGE("smp_call_on_cpu", 240),
STACK_USAGE("smpcfd_dead_cpu", 0),
STACK_USAGE("smpcfd_dying_cpu", 0),
STACK_USAGE("call_function_init", 8),
STACK_USAGE("__smp_call_single_queue", 8),
STACK_USAGE("generic_exec_single", 40),
STACK_USAGE("generic_smp_call_function_single_interrupt", 0),
STACK_USAGE("flush_smp_call_function_queue", 48),
STACK_USAGE("flush_smp_call_function_from_idle", 24),
STACK_USAGE("smp_call_function_single", 88),
STACK_USAGE("smp_call_function_single_async", 24),
STACK_USAGE("smp_call_function_any", 48),
STACK_USAGE("smp_call_function_many_cond", 136),
STACK_USAGE("smp_call_function_many", 0),
STACK_USAGE("smpboot_thread_fn", 32),
STACK_USAGE("__smpboot_create_thread", 48),
STACK_USAGE("smpboot_create_threads", 32),
STACK_USAGE("smpboot_unpark_threads", 24),
STACK_USAGE("smpboot_park_threads", 32),
STACK_USAGE("smpboot_destroy_threads", 32),
STACK_USAGE("smpboot_register_percpu_thread", 32),
STACK_USAGE("idle_thread_get", 0),
STACK_USAGE("smpboot_unregister_percpu_thread", 8),
STACK_USAGE("cpu_report_state", 0),
STACK_USAGE("cpu_check_up_prepare", 0),
STACK_USAGE("idle_thread_set_boot_cpu", 8),
STACK_USAGE("cpu_set_state_online", 0),
STACK_USAGE("cpu_wait_death", 32),
STACK_USAGE("cpu_report_death", 0),
STACK_USAGE("idle_threads_init", 24),
STACK_USAGE("__bpf_trace_softirq", 0),
STACK_USAGE("perf_trace_softirq", 56),
STACK_USAGE("trace_event_raw_event_softirq", 72),
STACK_USAGE("trace_raw_output_softirq", 24),
STACK_USAGE("__traceiter_softirq_entry", 16),
STACK_USAGE("__traceiter_softirq_exit", 16),
STACK_USAGE("__traceiter_softirq_raise", 16),
STACK_USAGE("__local_bh_disable_ip", 32),
STACK_USAGE("_local_bh_enable", 0),
STACK_USAGE("__local_bh_enable_ip", 32),
STACK_USAGE("do_softirq", 32),
STACK_USAGE("__do_softirq", 112),
STACK_USAGE("__bpf_trace_irq_handler_entry", 0),
STACK_USAGE("__traceiter_irq_handler_entry", 24),
STACK_USAGE("perf_trace_irq_handler_entry", 80),
STACK_USAGE("trace_event_raw_event_irq_handler_entry", 96),
STACK_USAGE("trace_raw_output_irq_handler_entry", 24),
STACK_USAGE("irq_enter_rcu", 0),
STACK_USAGE("irq_enter", 0),
STACK_USAGE("__irq_exit_rcu", 32),
STACK_USAGE("irq_exit_rcu", 0),
STACK_USAGE("irq_exit", 0),
STACK_USAGE("raise_softirq_irqoff", 0),
STACK_USAGE("raise_softirq", 32),
STACK_USAGE("__raise_softirq_irqoff", 8),
STACK_USAGE("open_softirq", 0),
STACK_USAGE("__tasklet_schedule_common", 48),
STACK_USAGE("__tasklet_schedule", 0),
STACK_USAGE("__tasklet_hi_schedule", 0),
STACK_USAGE("tasklet_action_common", 64),
STACK_USAGE("tasklet_action", 0),
STACK_USAGE("tasklet_hi_action", 0),
STACK_USAGE("tasklet_setup", 0),
STACK_USAGE("tasklet_init", 0),
STACK_USAGE("__bpf_trace_irq_handler_exit", 0),
STACK_USAGE("__traceiter_irq_handler_exit", 32),
STACK_USAGE("perf_trace_irq_handler_exit", 64),
STACK_USAGE("trace_event_raw_event_irq_handler_exit", 80),
STACK_USAGE("trace_raw_output_irq_handler_exit", 24),
STACK_USAGE("tasklet_unlock_spin_wait", 0),
STACK_USAGE("tasklet_kill", 112),
STACK_USAGE("tasklet_unlock", 0),
STACK_USAGE("tasklet_unlock_wait", 96),
STACK_USAGE("softirq_init", 8),
STACK_USAGE("ksoftirqd_should_run", 0),
STACK_USAGE("run_ksoftirqd", 16),
STACK_USAGE("takeover_tasklets", 32),
STACK_USAGE("spawn_ksoftirqd", 0),
STACK_USAGE("early_irq_init", 0),
STACK_USAGE("arch_probe_nr_irqs", 0),
STACK_USAGE("arch_early_irq_init", 0),
STACK_USAGE("arch_dynirq_lower_bound", 0),
STACK_USAGE("stack_trace_save", 32),
STACK_USAGE("stack_trace_save_tsk", 48),
STACK_USAGE("stack_trace_save_regs", 32),
STACK_USAGE("stack_trace_save_tsk_reliable", 56),
STACK_USAGE("stack_trace_save_user", 32),
STACK_USAGE("stack_trace_print", 32),
STACK_USAGE("filter_irq_stacks", 0),
STACK_USAGE("stack_trace_snprint", 56),
STACK_USAGE("stack_trace_consume_entry", 0),
STACK_USAGE("stack_trace_consume_entry_nosched", 16),
STACK_USAGE("__static_call_return0", 0),
STACK_USAGE("__static_call_update", 72),
STACK_USAGE("__static_call_init", 88),
STACK_USAGE("static_call_module_notify", 64),
STACK_USAGE("static_call_text_reserved", 40),
STACK_USAGE("static_call_init", 8),
STACK_USAGE("static_call_site_cmp", 0),
STACK_USAGE("static_call_site_swap", 0),
STACK_USAGE("stop_one_cpu", 160),
STACK_USAGE("stop_machine_yield", 0),
STACK_USAGE("multi_cpu_stop", 72),
STACK_USAGE("stop_two_cpus", 336),
STACK_USAGE("stop_one_cpu_nowait", 0),
STACK_USAGE("queue_stop_cpus_work", 48),
STACK_USAGE("cpu_stop_should_run", 16),
STACK_USAGE("cpu_stopper_thread", 56),
STACK_USAGE("stop_machine_park", 0),
STACK_USAGE("print_stop_info", 0),
STACK_USAGE("cpu_stop_create", 0),
STACK_USAGE("cpu_stop_park", 0),
STACK_USAGE("stop_machine_unpark", 0),
STACK_USAGE("cpu_stop_init", 16),
STACK_USAGE("stop_machine_cpuslocked", 168),
STACK_USAGE("stop_machine", 24),
STACK_USAGE("stop_machine_from_inactive_cpu", 160),
STACK_USAGE("cpu_stop_queue_work", 64),
STACK_USAGE("__ia32_compat_sys_times", 80),
STACK_USAGE("__ia32_sys_setpgid", 0),
STACK_USAGE("__se_sys_setpgid", 40),
STACK_USAGE("__x64_sys_setpgid", 0),
STACK_USAGE("do_getpgid", 16),
STACK_USAGE("__ia32_sys_getpgid", 0),
STACK_USAGE("__x64_sys_getpgid", 0),
STACK_USAGE("__do_sys_getpgrp", 0),
STACK_USAGE("__ia32_sys_getsid", 0),
STACK_USAGE("__se_sys_getsid", 16),
STACK_USAGE("__x64_sys_getsid", 0),
STACK_USAGE("ksys_setsid", 40),
STACK_USAGE("__do_sys_setsid", 0),
STACK_USAGE("__ia32_sys_newuname", 0),
STACK_USAGE("__se_sys_newuname", 536),
STACK_USAGE("__x64_sys_newuname", 0),
STACK_USAGE("__ia32_sys_uname", 0),
STACK_USAGE("__se_sys_uname", 472),
STACK_USAGE("__x64_sys_uname", 0),
STACK_USAGE("__ia32_sys_olduname", 0),
STACK_USAGE("__se_sys_olduname", 168),
STACK_USAGE("__x64_sys_olduname", 0),
STACK_USAGE("__ia32_sys_sethostname", 0),
STACK_USAGE("__se_sys_sethostname", 120),
STACK_USAGE("__x64_sys_sethostname", 0),
STACK_USAGE("__ia32_sys_gethostname", 0),
STACK_USAGE("__se_sys_gethostname", 120),
STACK_USAGE("__x64_sys_gethostname", 0),
STACK_USAGE("__ia32_sys_setdomainname", 0),
STACK_USAGE("__se_sys_setdomainname", 120),
STACK_USAGE("__x64_sys_setdomainname", 0),
STACK_USAGE("do_prlimit", 56),
STACK_USAGE("__ia32_sys_getrlimit", 64),
STACK_USAGE("__x64_sys_getrlimit", 64),
STACK_USAGE("__ia32_compat_sys_setrlimit", 40),
STACK_USAGE("__ia32_compat_sys_getrlimit", 64),
STACK_USAGE("__ia32_sys_old_getrlimit", 64),
STACK_USAGE("__x64_sys_old_getrlimit", 64),
STACK_USAGE("__ia32_compat_sys_old_getrlimit", 56),
STACK_USAGE("__ia32_sys_prlimit64", 0),
STACK_USAGE("__se_sys_prlimit64", 136),
STACK_USAGE("__x64_sys_prlimit64", 0),
STACK_USAGE("__ia32_sys_setrlimit", 32),
STACK_USAGE("__x64_sys_setrlimit", 32),
STACK_USAGE("getrusage", 104),
STACK_USAGE("set_one_prio", 40),
STACK_USAGE("__ia32_sys_getrusage", 168),
STACK_USAGE("__x64_sys_getrusage", 168),
STACK_USAGE("__ia32_compat_sys_getrusage", 168),
STACK_USAGE("__ia32_sys_umask", 0),
STACK_USAGE("__x64_sys_umask", 0),
STACK_USAGE("__ia32_sys_setpriority", 0),
STACK_USAGE("__se_sys_setpriority", 64),
STACK_USAGE("__x64_sys_setpriority", 0),
STACK_USAGE("propagate_has_child_subreaper", 0),
STACK_USAGE("arch_prctl_spec_ctrl_get", 0),
STACK_USAGE("arch_prctl_spec_ctrl_set", 0),
STACK_USAGE("__ia32_sys_prctl", 0),
STACK_USAGE("__se_sys_prctl", 504),
STACK_USAGE("__x64_sys_prctl", 0),
STACK_USAGE("__ia32_sys_getcpu", 32),
STACK_USAGE("__x64_sys_getcpu", 32),
STACK_USAGE("do_sysinfo", 40),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("__ia32_sys_sysinfo", 136),
STACK_USAGE("__x64_sys_sysinfo", 136),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("__ia32_compat_sys_sysinfo", 208),
STACK_USAGE("__ia32_sys_getpriority", 0),
STACK_USAGE("__se_sys_getpriority", 64),
STACK_USAGE("__x64_sys_getpriority", 0),
STACK_USAGE("__sys_setregid", 48),
STACK_USAGE("__ia32_sys_setregid", 0),
STACK_USAGE("__x64_sys_setregid", 0),
STACK_USAGE("__sys_setgid", 40),
STACK_USAGE("__ia32_sys_setgid", 0),
STACK_USAGE("__x64_sys_setgid", 0),
STACK_USAGE("__sys_setreuid", 56),
STACK_USAGE("__ia32_sys_setreuid", 0),
STACK_USAGE("__x64_sys_setreuid", 0),
STACK_USAGE("__sys_setuid", 40),
STACK_USAGE("__ia32_sys_setuid", 0),
STACK_USAGE("__x64_sys_setuid", 0),
STACK_USAGE("__sys_setresuid", 72),
STACK_USAGE("__ia32_sys_setresuid", 0),
STACK_USAGE("__x64_sys_setresuid", 0),
STACK_USAGE("__ia32_sys_getresuid", 0),
STACK_USAGE("__se_sys_getresuid", 56),
STACK_USAGE("__x64_sys_getresuid", 0),
STACK_USAGE("__sys_setresgid", 64),
STACK_USAGE("__ia32_sys_setresgid", 0),
STACK_USAGE("__x64_sys_setresgid", 0),
STACK_USAGE("__ia32_sys_getresgid", 0),
STACK_USAGE("__se_sys_getresgid", 56),
STACK_USAGE("__x64_sys_getresgid", 0),
STACK_USAGE("__sys_setfsuid", 32),
STACK_USAGE("__ia32_sys_setfsuid", 0),
STACK_USAGE("__x64_sys_setfsuid", 0),
STACK_USAGE("__sys_setfsgid", 32),
STACK_USAGE("__ia32_sys_setfsgid", 0),
STACK_USAGE("__x64_sys_setfsgid", 0),
STACK_USAGE("__do_sys_getpid", 0),
STACK_USAGE("__do_sys_gettid", 0),
STACK_USAGE("__do_sys_getppid", 8),
STACK_USAGE("__do_sys_getuid", 0),
STACK_USAGE("__do_sys_geteuid", 0),
STACK_USAGE("__do_sys_getgid", 0),
STACK_USAGE("__do_sys_getegid", 0),
STACK_USAGE("__ia32_sys_times", 0),
STACK_USAGE("__se_sys_times", 80),
STACK_USAGE("__x64_sys_times", 0),
STACK_USAGE("__ia32_sys_quotactl", 0),
STACK_USAGE("__x64_sys_quotactl", 0),
STACK_USAGE("__ia32_sys_quotactl_fd", 0),
STACK_USAGE("__x64_sys_quotactl_fd", 0),
STACK_USAGE("__ia32_sys_signalfd4", 0),
STACK_USAGE("__x64_sys_signalfd4", 0),
STACK_USAGE("__ia32_compat_sys_signalfd4", 0),
STACK_USAGE("__ia32_sys_timerfd_create", 0),
STACK_USAGE("__x64_sys_timerfd_create", 0),
STACK_USAGE("__ia32_sys_timerfd_settime", 0),
STACK_USAGE("__x64_sys_timerfd_settime", 0),
STACK_USAGE("__ia32_sys_timerfd_settime32", 0),
STACK_USAGE("__x64_sys_timerfd_settime32", 0),
STACK_USAGE("__ia32_sys_timerfd_gettime", 0),
STACK_USAGE("__x64_sys_timerfd_gettime", 0),
STACK_USAGE("__ia32_sys_timerfd_gettime32", 0),
STACK_USAGE("__x64_sys_timerfd_gettime32", 0),
STACK_USAGE("__ia32_sys_acct", 0),
STACK_USAGE("__x64_sys_acct", 0),
STACK_USAGE("__ia32_sys_capget", 0),
STACK_USAGE("__x64_sys_capget", 0),
STACK_USAGE("__ia32_sys_capset", 0),
STACK_USAGE("__x64_sys_capset", 0),
STACK_USAGE("__ia32_sys_clone3", 0),
STACK_USAGE("__x64_sys_clone3", 0),
STACK_USAGE("__ia32_sys_futex", 0),
STACK_USAGE("__x64_sys_futex", 0),
STACK_USAGE("__ia32_sys_futex_time32", 0),
STACK_USAGE("__x64_sys_futex_time32", 0),
STACK_USAGE("__ia32_sys_set_robust_list", 0),
STACK_USAGE("__x64_sys_set_robust_list", 0),
STACK_USAGE("__ia32_compat_sys_set_robust_list", 0),
STACK_USAGE("__ia32_sys_get_robust_list", 0),
STACK_USAGE("__x64_sys_get_robust_list", 0),
STACK_USAGE("__ia32_compat_sys_get_robust_list", 0),
STACK_USAGE("__ia32_sys_futex_waitv", 0),
STACK_USAGE("__x64_sys_futex_waitv", 0),
STACK_USAGE("__ia32_sys_kexec_load", 0),
STACK_USAGE("__x64_sys_kexec_load", 0),
STACK_USAGE("__ia32_compat_sys_kexec_load", 0),
STACK_USAGE("__ia32_sys_init_module", 0),
STACK_USAGE("__x64_sys_init_module", 0),
STACK_USAGE("__ia32_sys_delete_module", 0),
STACK_USAGE("__x64_sys_delete_module", 0),
STACK_USAGE("__ia32_sys_syslog", 0),
STACK_USAGE("__x64_sys_syslog", 0),
STACK_USAGE("__ia32_sys_setregid", 0),
STACK_USAGE("__x64_sys_setregid", 0),
STACK_USAGE("__ia32_sys_setgid", 0),
STACK_USAGE("__x64_sys_setgid", 0),
STACK_USAGE("__ia32_sys_setreuid", 0),
STACK_USAGE("__x64_sys_setreuid", 0),
STACK_USAGE("__ia32_sys_setuid", 0),
STACK_USAGE("__x64_sys_setuid", 0),
STACK_USAGE("__ia32_sys_setresuid", 0),
STACK_USAGE("__x64_sys_setresuid", 0),
STACK_USAGE("__ia32_sys_getresuid", 0),
STACK_USAGE("__x64_sys_getresuid", 0),
STACK_USAGE("__ia32_sys_setresgid", 0),
STACK_USAGE("__x64_sys_setresgid", 0),
STACK_USAGE("__ia32_sys_getresgid", 0),
STACK_USAGE("__x64_sys_getresgid", 0),
STACK_USAGE("__ia32_sys_setfsuid", 0),
STACK_USAGE("__x64_sys_setfsuid", 0),
STACK_USAGE("__ia32_sys_setfsgid", 0),
STACK_USAGE("__x64_sys_setfsgid", 0),
STACK_USAGE("__ia32_sys_setgroups", 0),
STACK_USAGE("__x64_sys_setgroups", 0),
STACK_USAGE("__ia32_sys_getgroups", 0),
STACK_USAGE("__x64_sys_getgroups", 0),
STACK_USAGE("__ia32_sys_mq_open", 0),
STACK_USAGE("__x64_sys_mq_open", 0),
STACK_USAGE("__ia32_compat_sys_mq_open", 0),
STACK_USAGE("__ia32_sys_mq_unlink", 0),
STACK_USAGE("__x64_sys_mq_unlink", 0),
STACK_USAGE("__ia32_sys_mq_timedsend", 0),
STACK_USAGE("__x64_sys_mq_timedsend", 0),
STACK_USAGE("__ia32_sys_mq_timedsend_time32", 0),
STACK_USAGE("__x64_sys_mq_timedsend_time32", 0),
STACK_USAGE("__ia32_sys_mq_timedreceive", 0),
STACK_USAGE("__x64_sys_mq_timedreceive", 0),
STACK_USAGE("__ia32_sys_mq_timedreceive_time32", 0),
STACK_USAGE("__x64_sys_mq_timedreceive_time32", 0),
STACK_USAGE("__ia32_sys_mq_notify", 0),
STACK_USAGE("__x64_sys_mq_notify", 0),
STACK_USAGE("__ia32_compat_sys_mq_notify", 0),
STACK_USAGE("__ia32_sys_mq_getsetattr", 0),
STACK_USAGE("__x64_sys_mq_getsetattr", 0),
STACK_USAGE("__ia32_compat_sys_mq_getsetattr", 0),
STACK_USAGE("__ia32_sys_msgget", 0),
STACK_USAGE("__x64_sys_msgget", 0),
STACK_USAGE("__ia32_sys_old_msgctl", 0),
STACK_USAGE("__x64_sys_old_msgctl", 0),
STACK_USAGE("sys_ni_syscall", 0),
STACK_USAGE("__ia32_sys_msgctl", 0),
STACK_USAGE("__x64_sys_msgctl", 0),
STACK_USAGE("__ia32_compat_sys_msgctl", 0),
STACK_USAGE("__ia32_compat_sys_old_msgctl", 0),
STACK_USAGE("__ia32_sys_msgrcv", 0),
STACK_USAGE("__x64_sys_msgrcv", 0),
STACK_USAGE("__ia32_compat_sys_msgrcv", 0),
STACK_USAGE("__ia32_sys_msgsnd", 0),
STACK_USAGE("__x64_sys_msgsnd", 0),
STACK_USAGE("__ia32_compat_sys_msgsnd", 0),
STACK_USAGE("__ia32_sys_semget", 0),
STACK_USAGE("__x64_sys_semget", 0),
STACK_USAGE("__ia32_sys_old_semctl", 0),
STACK_USAGE("__x64_sys_old_semctl", 0),
STACK_USAGE("__ia32_sys_semctl", 0),
STACK_USAGE("__x64_sys_semctl", 0),
STACK_USAGE("__ia32_compat_sys_semctl", 0),
STACK_USAGE("__ia32_compat_sys_old_semctl", 0),
STACK_USAGE("__ia32_sys_semtimedop", 0),
STACK_USAGE("__x64_sys_semtimedop", 0),
STACK_USAGE("__ia32_sys_semtimedop_time32", 0),
STACK_USAGE("__x64_sys_semtimedop_time32", 0),
STACK_USAGE("__ia32_sys_semop", 0),
STACK_USAGE("__x64_sys_semop", 0),
STACK_USAGE("__ia32_sys_shmget", 0),
STACK_USAGE("__x64_sys_shmget", 0),
STACK_USAGE("__ia32_sys_old_shmctl", 0),
STACK_USAGE("__x64_sys_old_shmctl", 0),
STACK_USAGE("__ia32_sys_shmctl", 0),
STACK_USAGE("__x64_sys_shmctl", 0),
STACK_USAGE("__ia32_compat_sys_shmctl", 0),
STACK_USAGE("__ia32_compat_sys_old_shmctl", 0),
STACK_USAGE("__ia32_sys_shmat", 0),
STACK_USAGE("__x64_sys_shmat", 0),
STACK_USAGE("__ia32_compat_sys_shmat", 0),
STACK_USAGE("__ia32_sys_shmdt", 0),
STACK_USAGE("__x64_sys_shmdt", 0),
STACK_USAGE("__ia32_sys_socket", 0),
STACK_USAGE("__x64_sys_socket", 0),
STACK_USAGE("__ia32_sys_socketpair", 0),
STACK_USAGE("__x64_sys_socketpair", 0),
STACK_USAGE("__ia32_sys_bind", 0),
STACK_USAGE("__x64_sys_bind", 0),
STACK_USAGE("__ia32_sys_listen", 0),
STACK_USAGE("__x64_sys_listen", 0),
STACK_USAGE("__ia32_sys_accept", 0),
STACK_USAGE("__x64_sys_accept", 0),
STACK_USAGE("__ia32_sys_connect", 0),
STACK_USAGE("__x64_sys_connect", 0),
STACK_USAGE("__ia32_sys_getsockname", 0),
STACK_USAGE("__x64_sys_getsockname", 0),
STACK_USAGE("__ia32_sys_getpeername", 0),
STACK_USAGE("__x64_sys_getpeername", 0),
STACK_USAGE("__ia32_sys_setsockopt", 0),
STACK_USAGE("__x64_sys_setsockopt", 0),
STACK_USAGE("__ia32_compat_sys_setsockopt", 0),
STACK_USAGE("__ia32_sys_getsockopt", 0),
STACK_USAGE("__x64_sys_getsockopt", 0),
STACK_USAGE("__ia32_compat_sys_getsockopt", 0),
STACK_USAGE("__ia32_sys_sendto", 0),
STACK_USAGE("__x64_sys_sendto", 0),
STACK_USAGE("__ia32_sys_shutdown", 0),
STACK_USAGE("__x64_sys_shutdown", 0),
STACK_USAGE("__ia32_sys_recvfrom", 0),
STACK_USAGE("__x64_sys_recvfrom", 0),
STACK_USAGE("__ia32_compat_sys_recvfrom", 0),
STACK_USAGE("__ia32_sys_sendmsg", 0),
STACK_USAGE("__x64_sys_sendmsg", 0),
STACK_USAGE("__ia32_compat_sys_sendmsg", 0),
STACK_USAGE("__ia32_sys_recvmsg", 0),
STACK_USAGE("__x64_sys_recvmsg", 0),
STACK_USAGE("__ia32_compat_sys_recvmsg", 0),
STACK_USAGE("__ia32_sys_mremap", 0),
STACK_USAGE("__x64_sys_mremap", 0),
STACK_USAGE("__ia32_sys_add_key", 0),
STACK_USAGE("__x64_sys_add_key", 0),
STACK_USAGE("__ia32_sys_request_key", 0),
STACK_USAGE("__x64_sys_request_key", 0),
STACK_USAGE("__ia32_sys_keyctl", 0),
STACK_USAGE("__x64_sys_keyctl", 0),
STACK_USAGE("__ia32_compat_sys_keyctl", 0),
STACK_USAGE("__ia32_sys_landlock_create_ruleset", 0),
STACK_USAGE("__x64_sys_landlock_create_ruleset", 0),
STACK_USAGE("__ia32_sys_landlock_add_rule", 0),
STACK_USAGE("__x64_sys_landlock_add_rule", 0),
STACK_USAGE("__ia32_sys_landlock_restrict_self", 0),
STACK_USAGE("__x64_sys_landlock_restrict_self", 0),
STACK_USAGE("__ia32_sys_fadvise64_64", 0),
STACK_USAGE("__x64_sys_fadvise64_64", 0),
STACK_USAGE("__ia32_sys_swapon", 0),
STACK_USAGE("__x64_sys_swapon", 0),
STACK_USAGE("__ia32_sys_swapoff", 0),
STACK_USAGE("__x64_sys_swapoff", 0),
STACK_USAGE("__ia32_sys_mprotect", 0),
STACK_USAGE("__x64_sys_mprotect", 0),
STACK_USAGE("__ia32_sys_msync", 0),
STACK_USAGE("__x64_sys_msync", 0),
STACK_USAGE("__ia32_sys_mlock", 0),
STACK_USAGE("__x64_sys_mlock", 0),
STACK_USAGE("__ia32_sys_munlock", 0),
STACK_USAGE("__x64_sys_munlock", 0),
STACK_USAGE("__ia32_sys_mlockall", 0),
STACK_USAGE("__x64_sys_mlockall", 0),
STACK_USAGE("__ia32_sys_munlockall", 0),
STACK_USAGE("__x64_sys_munlockall", 0),
STACK_USAGE("__ia32_sys_mincore", 0),
STACK_USAGE("__x64_sys_mincore", 0),
STACK_USAGE("__ia32_sys_madvise", 0),
STACK_USAGE("__x64_sys_madvise", 0),
STACK_USAGE("__ia32_sys_process_madvise", 0),
STACK_USAGE("__x64_sys_process_madvise", 0),
STACK_USAGE("__ia32_sys_process_mrelease", 0),
STACK_USAGE("__x64_sys_process_mrelease", 0),
STACK_USAGE("__ia32_sys_remap_file_pages", 0),
STACK_USAGE("__x64_sys_remap_file_pages", 0),
STACK_USAGE("__ia32_sys_mbind", 0),
STACK_USAGE("__x64_sys_mbind", 0),
STACK_USAGE("__ia32_sys_get_mempolicy", 0),
STACK_USAGE("__x64_sys_get_mempolicy", 0),
STACK_USAGE("__ia32_sys_set_mempolicy", 0),
STACK_USAGE("__x64_sys_set_mempolicy", 0),
STACK_USAGE("__ia32_sys_migrate_pages", 0),
STACK_USAGE("__x64_sys_migrate_pages", 0),
STACK_USAGE("__ia32_sys_move_pages", 0),
STACK_USAGE("__x64_sys_move_pages", 0),
STACK_USAGE("__ia32_sys_set_mempolicy_home_node", 0),
STACK_USAGE("__x64_sys_set_mempolicy_home_node", 0),
STACK_USAGE("__ia32_sys_perf_event_open", 0),
STACK_USAGE("__x64_sys_perf_event_open", 0),
STACK_USAGE("__ia32_sys_accept4", 0),
STACK_USAGE("__x64_sys_accept4", 0),
STACK_USAGE("__ia32_sys_recvmmsg", 0),
STACK_USAGE("__x64_sys_recvmmsg", 0),
STACK_USAGE("__ia32_sys_recvmmsg_time32", 0),
STACK_USAGE("__x64_sys_recvmmsg_time32", 0),
STACK_USAGE("__ia32_compat_sys_recvmmsg_time32", 0),
STACK_USAGE("__ia32_compat_sys_recvmmsg_time64", 0),
STACK_USAGE("__ia32_sys_fanotify_init", 0),
STACK_USAGE("__x64_sys_fanotify_init", 0),
STACK_USAGE("__ia32_sys_fanotify_mark", 0),
STACK_USAGE("__x64_sys_fanotify_mark", 0),
STACK_USAGE("__ia32_sys_name_to_handle_at", 0),
STACK_USAGE("__x64_sys_name_to_handle_at", 0),
STACK_USAGE("__ia32_sys_open_by_handle_at", 0),
STACK_USAGE("__x64_sys_open_by_handle_at", 0),
STACK_USAGE("__ia32_compat_sys_open_by_handle_at", 0),
STACK_USAGE("__ia32_sys_sendmmsg", 0),
STACK_USAGE("__x64_sys_sendmmsg", 0),
STACK_USAGE("__ia32_compat_sys_sendmmsg", 0),
STACK_USAGE("__ia32_sys_process_vm_readv", 0),
STACK_USAGE("__x64_sys_process_vm_readv", 0),
STACK_USAGE("__ia32_compat_sys_process_vm_readv", 0),
STACK_USAGE("__ia32_sys_process_vm_writev", 0),
STACK_USAGE("__x64_sys_process_vm_writev", 0),
STACK_USAGE("__ia32_compat_sys_process_vm_writev", 0),
STACK_USAGE("__ia32_sys_kcmp", 0),
STACK_USAGE("__x64_sys_kcmp", 0),
STACK_USAGE("__ia32_sys_finit_module", 0),
STACK_USAGE("__x64_sys_finit_module", 0),
STACK_USAGE("__ia32_sys_seccomp", 0),
STACK_USAGE("__x64_sys_seccomp", 0),
STACK_USAGE("__ia32_sys_memfd_create", 0),
STACK_USAGE("__x64_sys_memfd_create", 0),
STACK_USAGE("__ia32_sys_bpf", 0),
STACK_USAGE("__x64_sys_bpf", 0),
STACK_USAGE("__ia32_sys_execveat", 0),
STACK_USAGE("__x64_sys_execveat", 0),
STACK_USAGE("__ia32_sys_userfaultfd", 0),
STACK_USAGE("__x64_sys_userfaultfd", 0),
STACK_USAGE("__ia32_sys_membarrier", 0),
STACK_USAGE("__x64_sys_membarrier", 0),
STACK_USAGE("__ia32_sys_mlock2", 0),
STACK_USAGE("__x64_sys_mlock2", 0),
STACK_USAGE("__ia32_sys_copy_file_range", 0),
STACK_USAGE("__x64_sys_copy_file_range", 0),
STACK_USAGE("__ia32_sys_pkey_mprotect", 0),
STACK_USAGE("__x64_sys_pkey_mprotect", 0),
STACK_USAGE("__ia32_sys_pkey_alloc", 0),
STACK_USAGE("__x64_sys_pkey_alloc", 0),
STACK_USAGE("__ia32_sys_pkey_free", 0),
STACK_USAGE("__x64_sys_pkey_free", 0),
STACK_USAGE("__ia32_sys_memfd_secret", 0),
STACK_USAGE("__x64_sys_memfd_secret", 0),
STACK_USAGE("__ia32_sys_pciconfig_read", 0),
STACK_USAGE("__x64_sys_pciconfig_read", 0),
STACK_USAGE("__ia32_sys_pciconfig_write", 0),
STACK_USAGE("__x64_sys_pciconfig_write", 0),
STACK_USAGE("__ia32_sys_pciconfig_iobase", 0),
STACK_USAGE("__x64_sys_pciconfig_iobase", 0),
STACK_USAGE("__ia32_sys_socketcall", 0),
STACK_USAGE("__x64_sys_socketcall", 0),
STACK_USAGE("__ia32_compat_sys_socketcall", 0),
STACK_USAGE("__ia32_compat_sys_fanotify_mark", 0),
STACK_USAGE("__ia32_sys_vm86old", 0),
STACK_USAGE("__x64_sys_vm86old", 0),
STACK_USAGE("__ia32_sys_modify_ldt", 0),
STACK_USAGE("__x64_sys_modify_ldt", 0),
STACK_USAGE("__ia32_sys_vm86", 0),
STACK_USAGE("__x64_sys_vm86", 0),
STACK_USAGE("__ia32_sys_kexec_file_load", 0),
STACK_USAGE("__x64_sys_kexec_file_load", 0),
STACK_USAGE("__ia32_sys_s390_pci_mmio_read", 0),
STACK_USAGE("__x64_sys_s390_pci_mmio_read", 0),
STACK_USAGE("__ia32_sys_s390_pci_mmio_write", 0),
STACK_USAGE("__x64_sys_s390_pci_mmio_write", 0),
STACK_USAGE("__ia32_sys_s390_ipc", 0),
STACK_USAGE("__x64_sys_s390_ipc", 0),
STACK_USAGE("__ia32_compat_sys_s390_ipc", 0),
STACK_USAGE("__ia32_sys_rtas", 0),
STACK_USAGE("__x64_sys_rtas", 0),
STACK_USAGE("__ia32_sys_spu_run", 0),
STACK_USAGE("__x64_sys_spu_run", 0),
STACK_USAGE("__ia32_sys_spu_create", 0),
STACK_USAGE("__x64_sys_spu_create", 0),
STACK_USAGE("__ia32_sys_subpage_prot", 0),
STACK_USAGE("__x64_sys_subpage_prot", 0),
STACK_USAGE("__ia32_sys_io_setup", 0),
STACK_USAGE("__x64_sys_io_setup", 0),
STACK_USAGE("__ia32_sys_epoll_create", 0),
STACK_USAGE("__x64_sys_epoll_create", 0),
STACK_USAGE("__ia32_sys_inotify_init", 0),
STACK_USAGE("__x64_sys_inotify_init", 0),
STACK_USAGE("__ia32_sys_eventfd", 0),
STACK_USAGE("__x64_sys_eventfd", 0),
STACK_USAGE("__ia32_sys_signalfd", 0),
STACK_USAGE("__x64_sys_signalfd", 0),
STACK_USAGE("__ia32_compat_sys_signalfd", 0),
STACK_USAGE("__ia32_compat_sys_io_setup", 0),
STACK_USAGE("__ia32_sys_fadvise64", 0),
STACK_USAGE("__x64_sys_fadvise64", 0),
STACK_USAGE("__ia32_sys_epoll_wait", 0),
STACK_USAGE("__x64_sys_epoll_wait", 0),
STACK_USAGE("__ia32_sys_recv", 0),
STACK_USAGE("__x64_sys_recv", 0),
STACK_USAGE("__ia32_compat_sys_recv", 0),
STACK_USAGE("__ia32_sys_send", 0),
STACK_USAGE("__x64_sys_send", 0),
STACK_USAGE("__ia32_sys_uselib", 0),
STACK_USAGE("__x64_sys_uselib", 0),
STACK_USAGE("__ia32_sys_io_destroy", 0),
STACK_USAGE("__x64_sys_io_destroy", 0),
STACK_USAGE("__ia32_sys_time32", 0),
STACK_USAGE("__x64_sys_time32", 0),
STACK_USAGE("__ia32_sys_stime32", 0),
STACK_USAGE("__x64_sys_stime32", 0),
STACK_USAGE("__ia32_sys_utime32", 0),
STACK_USAGE("__x64_sys_utime32", 0),
STACK_USAGE("__ia32_sys_adjtimex_time32", 0),
STACK_USAGE("__x64_sys_adjtimex_time32", 0),
STACK_USAGE("__ia32_sys_sched_rr_get_interval_time32", 0),
STACK_USAGE("__x64_sys_sched_rr_get_interval_time32", 0),
STACK_USAGE("__ia32_sys_nanosleep_time32", 0),
STACK_USAGE("__x64_sys_nanosleep_time32", 0),
STACK_USAGE("__ia32_sys_rt_sigtimedwait_time32", 0),
STACK_USAGE("__x64_sys_rt_sigtimedwait_time32", 0),
STACK_USAGE("__ia32_compat_sys_rt_sigtimedwait_time32", 0),
STACK_USAGE("__ia32_sys_timer_settime32", 0),
STACK_USAGE("__x64_sys_timer_settime32", 0),
STACK_USAGE("__ia32_sys_timer_gettime32", 0),
STACK_USAGE("__x64_sys_timer_gettime32", 0),
STACK_USAGE("__ia32_sys_io_submit", 0),
STACK_USAGE("__x64_sys_io_submit", 0),
STACK_USAGE("__ia32_sys_clock_settime32", 0),
STACK_USAGE("__x64_sys_clock_settime32", 0),
STACK_USAGE("__ia32_sys_clock_gettime32", 0),
STACK_USAGE("__x64_sys_clock_gettime32", 0),
STACK_USAGE("__ia32_sys_clock_getres_time32", 0),
STACK_USAGE("__x64_sys_clock_getres_time32", 0),
STACK_USAGE("__ia32_sys_clock_nanosleep_time32", 0),
STACK_USAGE("__x64_sys_clock_nanosleep_time32", 0),
STACK_USAGE("__ia32_sys_utimes_time32", 0),
STACK_USAGE("__x64_sys_utimes_time32", 0),
STACK_USAGE("__ia32_sys_futimesat_time32", 0),
STACK_USAGE("__x64_sys_futimesat_time32", 0),
STACK_USAGE("__ia32_sys_pselect6_time32", 0),
STACK_USAGE("__x64_sys_pselect6_time32", 0),
STACK_USAGE("__ia32_compat_sys_pselect6_time32", 0),
STACK_USAGE("__ia32_sys_ppoll_time32", 0),
STACK_USAGE("__x64_sys_ppoll_time32", 0),
STACK_USAGE("__ia32_compat_sys_ppoll_time32", 0),
STACK_USAGE("__ia32_compat_sys_io_submit", 0),
STACK_USAGE("__ia32_sys_utimensat_time32", 0),
STACK_USAGE("__x64_sys_utimensat_time32", 0),
STACK_USAGE("__ia32_sys_clock_adjtime32", 0),
STACK_USAGE("__x64_sys_clock_adjtime32", 0),
STACK_USAGE("__ia32_sys_sgetmask", 0),
STACK_USAGE("__x64_sys_sgetmask", 0),
STACK_USAGE("__ia32_sys_ssetmask", 0),
STACK_USAGE("__x64_sys_ssetmask", 0),
STACK_USAGE("__ia32_sys_io_cancel", 0),
STACK_USAGE("__x64_sys_io_cancel", 0),
STACK_USAGE("__ia32_sys_sysfs", 0),
STACK_USAGE("__x64_sys_sysfs", 0),
STACK_USAGE("__ia32_sys_ipc", 0),
STACK_USAGE("__x64_sys_ipc", 0),
STACK_USAGE("__ia32_compat_sys_ipc", 0),
STACK_USAGE("__ia32_sys_chown16", 0),
STACK_USAGE("__x64_sys_chown16", 0),
STACK_USAGE("__ia32_sys_io_getevents_time32", 0),
STACK_USAGE("__x64_sys_io_getevents_time32", 0),
STACK_USAGE("__ia32_sys_fchown16", 0),
STACK_USAGE("__x64_sys_fchown16", 0),
STACK_USAGE("__ia32_sys_getegid16", 0),
STACK_USAGE("__x64_sys_getegid16", 0),
STACK_USAGE("__ia32_sys_geteuid16", 0),
STACK_USAGE("__x64_sys_geteuid16", 0),
STACK_USAGE("__ia32_sys_getgid16", 0),
STACK_USAGE("__x64_sys_getgid16", 0),
STACK_USAGE("__ia32_sys_getgroups16", 0),
STACK_USAGE("__x64_sys_getgroups16", 0),
STACK_USAGE("__ia32_sys_getresgid16", 0),
STACK_USAGE("__x64_sys_getresgid16", 0),
STACK_USAGE("__ia32_sys_getresuid16", 0),
STACK_USAGE("__x64_sys_getresuid16", 0),
STACK_USAGE("__ia32_sys_getuid16", 0),
STACK_USAGE("__x64_sys_getuid16", 0),
STACK_USAGE("__ia32_sys_lchown16", 0),
STACK_USAGE("__x64_sys_lchown16", 0),
STACK_USAGE("__ia32_sys_setfsgid16", 0),
STACK_USAGE("__x64_sys_setfsgid16", 0),
STACK_USAGE("__ia32_sys_io_getevents", 0),
STACK_USAGE("__x64_sys_io_getevents", 0),
STACK_USAGE("__ia32_sys_setfsuid16", 0),
STACK_USAGE("__x64_sys_setfsuid16", 0),
STACK_USAGE("__ia32_sys_setgid16", 0),
STACK_USAGE("__x64_sys_setgid16", 0),
STACK_USAGE("__ia32_sys_setgroups16", 0),
STACK_USAGE("__x64_sys_setgroups16", 0),
STACK_USAGE("__ia32_sys_setregid16", 0),
STACK_USAGE("__x64_sys_setregid16", 0),
STACK_USAGE("__ia32_sys_setresgid16", 0),
STACK_USAGE("__x64_sys_setresgid16", 0),
STACK_USAGE("__ia32_sys_setresuid16", 0),
STACK_USAGE("__x64_sys_setresuid16", 0),
STACK_USAGE("__ia32_sys_setreuid16", 0),
STACK_USAGE("__x64_sys_setreuid16", 0),
STACK_USAGE("__ia32_sys_setuid16", 0),
STACK_USAGE("__x64_sys_setuid16", 0),
STACK_USAGE("__ia32_sys_io_pgetevents_time32", 0),
STACK_USAGE("__x64_sys_io_pgetevents_time32", 0),
STACK_USAGE("__ia32_sys_rseq", 0),
STACK_USAGE("__x64_sys_rseq", 0),
STACK_USAGE("__ia32_sys_io_pgetevents", 0),
STACK_USAGE("__x64_sys_io_pgetevents", 0),
STACK_USAGE("__ia32_compat_sys_io_pgetevents_time32", 0),
STACK_USAGE("__ia32_compat_sys_io_pgetevents", 0),
STACK_USAGE("__ia32_sys_io_uring_setup", 0),
STACK_USAGE("__x64_sys_io_uring_setup", 0),
STACK_USAGE("__ia32_sys_io_uring_enter", 0),
STACK_USAGE("__x64_sys_io_uring_enter", 0),
STACK_USAGE("__ia32_sys_io_uring_register", 0),
STACK_USAGE("__x64_sys_io_uring_register", 0),
STACK_USAGE("__ia32_sys_lookup_dcookie", 0),
STACK_USAGE("__x64_sys_lookup_dcookie", 0),
STACK_USAGE("__ia32_compat_sys_lookup_dcookie", 0),
STACK_USAGE("__ia32_sys_eventfd2", 0),
STACK_USAGE("__x64_sys_eventfd2", 0),
STACK_USAGE("__ia32_sys_epoll_create1", 0),
STACK_USAGE("__x64_sys_epoll_create1", 0),
STACK_USAGE("__ia32_sys_epoll_ctl", 0),
STACK_USAGE("__x64_sys_epoll_ctl", 0),
STACK_USAGE("__ia32_sys_epoll_pwait", 0),
STACK_USAGE("__x64_sys_epoll_pwait", 0),
STACK_USAGE("__ia32_compat_sys_epoll_pwait", 0),
STACK_USAGE("__ia32_sys_epoll_pwait2", 0),
STACK_USAGE("__x64_sys_epoll_pwait2", 0),
STACK_USAGE("__ia32_compat_sys_epoll_pwait2", 0),
STACK_USAGE("__ia32_sys_inotify_init1", 0),
STACK_USAGE("__x64_sys_inotify_init1", 0),
STACK_USAGE("__ia32_sys_inotify_add_watch", 0),
STACK_USAGE("__x64_sys_inotify_add_watch", 0),
STACK_USAGE("__ia32_sys_inotify_rm_watch", 0),
STACK_USAGE("__x64_sys_inotify_rm_watch", 0),
STACK_USAGE("__ia32_sys_ioprio_set", 0),
STACK_USAGE("__x64_sys_ioprio_set", 0),
STACK_USAGE("__ia32_sys_ioprio_get", 0),
STACK_USAGE("__x64_sys_ioprio_get", 0),
STACK_USAGE("__ia32_sys_flock", 0),
STACK_USAGE("__x64_sys_flock", 0),
STACK_USAGE("proc_douintvec_minmax", 24),
STACK_USAGE("proc_dou8vec_minmax", 120),
STACK_USAGE("sysrq_sysctl_handler", 56),
STACK_USAGE("do_proc_doulongvec_minmax", 200),
STACK_USAGE("proc_doulongvec_minmax", 0),
STACK_USAGE("proc_doulongvec_ms_jiffies_minmax", 0),
STACK_USAGE("do_proc_dointvec_jiffies_conv", 0),
STACK_USAGE("do_proc_dointvec_userhz_jiffies_conv", 16),
STACK_USAGE("do_proc_dointvec_ms_jiffies_conv", 16),
STACK_USAGE("proc_dointvec_jiffies", 0),
STACK_USAGE("proc_dointvec_userhz_jiffies", 0),
STACK_USAGE("proc_dointvec_ms_jiffies", 0),
STACK_USAGE("proc_do_cad_pid", 56),
STACK_USAGE("proc_do_large_bitmap", 216),
STACK_USAGE("bpf_stats_handler", 144),
STACK_USAGE("proc_do_static_key", 144),
STACK_USAGE("unpriv_ebpf_notify", 0),
STACK_USAGE("bpf_unpriv_handler", 144),
STACK_USAGE("sysctl_init_bases", 0),
STACK_USAGE("proc_dostring", 56),
STACK_USAGE("proc_get_long", 136),
STACK_USAGE("do_proc_dobool_conv", 0),
STACK_USAGE("do_proc_dointvec_conv", 0),
STACK_USAGE("do_proc_douintvec_conv", 0),
STACK_USAGE("__do_proc_dointvec", 168),
STACK_USAGE("do_proc_douintvec", 136),
STACK_USAGE("proc_dobool", 0),
STACK_USAGE("proc_dointvec", 0),
STACK_USAGE("proc_dointvec_minmax_warn_RT_change", 24),
STACK_USAGE("proc_douintvec", 0),
STACK_USAGE("proc_taint", 120),
STACK_USAGE("do_proc_dointvec_minmax_conv", 4),
STACK_USAGE("proc_dointvec_minmax", 24),
STACK_USAGE("do_proc_douintvec_minmax_conv", 4),
STACK_USAGE("task_work_cancel", 32),
STACK_USAGE("task_work_run", 48),
STACK_USAGE("task_work_add", 16),
STACK_USAGE("task_work_cancel_match", 48),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("add_del_listener", 48),
STACK_USAGE("mk_reply", 48),
STACK_USAGE("cgroupstats_user_cmd", 56),
STACK_USAGE("taskstats_user_cmd", 88),
STACK_USAGE("taskstats_exit", 56),
STACK_USAGE("prepare_reply", 32),
STACK_USAGE("taskstats_init_early", 16),
STACK_USAGE("taskstats_init", 8),
STACK_USAGE("alarmtimer_fired", 48),
STACK_USAGE("alarm_expires_remaining", 8),
STACK_USAGE("__bpf_trace_alarmtimer_suspend", 0),
STACK_USAGE("__traceiter_alarmtimer_suspend", 24),
STACK_USAGE("perf_trace_alarmtimer_suspend", 64),
STACK_USAGE("trace_event_raw_event_alarmtimer_suspend", 80),
STACK_USAGE("trace_raw_output_alarmtimer_suspend", 24),
STACK_USAGE("alarmtimer_suspend", 112),
STACK_USAGE("alarmtimer_resume", 8),
STACK_USAGE("alarm_init", 24),
STACK_USAGE("alarm_start", 40),
STACK_USAGE("alarm_start_relative", 16),
STACK_USAGE("alarm_restart", 32),
STACK_USAGE("alarm_try_to_cancel", 40),
STACK_USAGE("alarm_cancel", 8),
STACK_USAGE("alarm_forward", 16),
STACK_USAGE("__bpf_trace_alarm_class", 0),
STACK_USAGE("perf_trace_alarm_class", 64),
STACK_USAGE("trace_event_raw_event_alarm_class", 80),
STACK_USAGE("trace_raw_output_alarm_class", 32),
STACK_USAGE("alarm_forward_now", 24),
STACK_USAGE("alarm_handle_timer", 48),
STACK_USAGE("alarm_timer_rearm", 24),
STACK_USAGE("alarm_timer_forward", 16),
STACK_USAGE("alarm_timer_remaining", 0),
STACK_USAGE("alarm_timer_try_to_cancel", 0),
STACK_USAGE("alarm_timer_wait_running", 0),
STACK_USAGE("alarm_timer_arm", 24),
STACK_USAGE("alarm_clock_getres", 16),
STACK_USAGE("alarm_clock_get_timespec", 24),
STACK_USAGE("alarm_clock_get_ktime", 16),
STACK_USAGE("alarm_timer_create", 32),
STACK_USAGE("alarmtimer_get_rtcdev", 8),
STACK_USAGE("alarmtimer_nsleep_wakeup", 0),
STACK_USAGE("__traceiter_alarmtimer_fired", 24),
STACK_USAGE("alarmtimer_do_nsleep", 64),
STACK_USAGE("ktime_get_real", 0),
STACK_USAGE("alarm_timer_nsleep_restart", 144),
STACK_USAGE("__traceiter_alarmtimer_start", 24),
STACK_USAGE("alarm_timer_nsleep", 184),
STACK_USAGE("alarmtimer_rtc_add_device", 128),
STACK_USAGE("__traceiter_alarmtimer_cancel", 24),
STACK_USAGE("get_boottime_timespec", 32),
STACK_USAGE("alarmtimer_init", 8),
STACK_USAGE("ktime_get_boottime", 0),
STACK_USAGE("clockevents_switch_state", 16),
STACK_USAGE("clockevents_shutdown", 8),
STACK_USAGE("clockevents_tick_resume", 0),
STACK_USAGE("clockevents_program_min_delta", 48),
STACK_USAGE("clockevents_program_event", 24),
STACK_USAGE("__clockevents_unbind", 48),
STACK_USAGE("clockevents_unbind_device", 40),
STACK_USAGE("clockevents_register_device", 16),
STACK_USAGE("clockevents_config", 24),
STACK_USAGE("clockevents_config_and_register", 8),
STACK_USAGE("__clockevents_update_freq", 8),
STACK_USAGE("clockevents_update_freq", 48),
STACK_USAGE("clockevents_handle_noop", 0),
STACK_USAGE("clockevents_exchange_device", 16),
STACK_USAGE("clockevents_suspend", 16),
STACK_USAGE("clockevents_resume", 16),
STACK_USAGE("tick_offline_cpu", 8),
STACK_USAGE("tick_cleanup_dead_cpu", 56),
STACK_USAGE("current_device_show", 16),
STACK_USAGE("unbind_device_store", 104),
STACK_USAGE("tick_broadcast_init_sysfs", 0),
STACK_USAGE("tick_init_sysfs", 16),
STACK_USAGE("clockevents_init_sysfs", 0),
STACK_USAGE("clockevent_delta2ns", 0),
STACK_USAGE("__clockevents_switch_state", 16),
STACK_USAGE("clocksource_done_booting", 0),
STACK_USAGE("__clocksource_update_freq_scale", 16),
STACK_USAGE("__clocksource_register_scale", 24),
STACK_USAGE("clocksource_change_rating", 16),
STACK_USAGE("clocksource_unbind", 32),
STACK_USAGE("clocksource_unregister", 16),
STACK_USAGE("current_clocksource_show", 8),
STACK_USAGE("sysfs_get_uname", 24),
STACK_USAGE("current_clocksource_store", 24),
STACK_USAGE("unbind_clocksource_store", 88),
STACK_USAGE("available_clocksource_show", 40),
STACK_USAGE("init_clocksource_sysfs", 0),
STACK_USAGE("boot_override_clocksource", 8),
STACK_USAGE("boot_override_clock", 8),
STACK_USAGE("clocksource_watchdog_work", 0),
STACK_USAGE("__clocksource_unstable", 0),
STACK_USAGE("clocksource_mark_unstable", 16),
STACK_USAGE("clocksource_verify_one_cpu", 0),
STACK_USAGE("clocksource_verify_percpu", 48),
STACK_USAGE("clocksource_watchdog", 104),
STACK_USAGE("clocks_calc_mult_shift", 8),
STACK_USAGE("clocksource_select_watchdog", 24),
STACK_USAGE("__clocksource_watchdog_kthread", 24),
STACK_USAGE("clocksource_watchdog_kthread", 0),
STACK_USAGE("clocksource_start_suspend_timing", 0),
STACK_USAGE("clocksource_stop_suspend_timing", 16),
STACK_USAGE("clocksource_suspend", 16),
STACK_USAGE("clocksource_resume", 16),
STACK_USAGE("clocksource_touch_watchdog", 0),
STACK_USAGE("clocks_calc_max_nsecs", 0),
STACK_USAGE("__clocksource_select", 56),
STACK_USAGE("hrtimers_resume_local", 0),
STACK_USAGE("hrtimer_forward", 0),
STACK_USAGE("ktime_get_clocktai", 0),
STACK_USAGE("enqueue_hrtimer", 16),
STACK_USAGE("hrtimer_update_softirq_timer", 64),
STACK_USAGE("hrtimer_start_range_ns", 72),
STACK_USAGE("hrtimer_try_to_cancel", 56),
STACK_USAGE("hrtimer_cancel", 8),
STACK_USAGE("__hrtimer_get_remaining", 32),
STACK_USAGE("hrtimer_get_next_event", 32),
STACK_USAGE("hrtimer_next_event_without", 64),
STACK_USAGE("hrtimer_init", 32),
STACK_USAGE("hrtimer_active", 0),
STACK_USAGE("__hrtimer_run_queues", 112),
STACK_USAGE("hrtimer_run_softirq", 24),
STACK_USAGE("hrtimer_interrupt", 72),
STACK_USAGE("hrtimer_run_queues", 24),
STACK_USAGE("local_bh_disable", 0),
STACK_USAGE("hrtimer_wakeup", 0),
STACK_USAGE("hrtimer_sleeper_start_expires", 0),
STACK_USAGE("hrtimer_init_sleeper", 32),
STACK_USAGE("nanosleep_copyout", 0),
STACK_USAGE("do_nanosleep", 48),
STACK_USAGE("hrtimer_nanosleep_restart", 120),
STACK_USAGE("hrtimer_nanosleep", 120),
STACK_USAGE("__ia32_sys_nanosleep", 0),
STACK_USAGE("__se_sys_nanosleep", 136),
STACK_USAGE("__x64_sys_nanosleep", 0),
STACK_USAGE("__ia32_sys_nanosleep_time32", 0),
STACK_USAGE("__se_sys_nanosleep_time32", 136),
STACK_USAGE("__x64_sys_nanosleep_time32", 0),
STACK_USAGE("hrtimers_prepare_cpu", 24),
STACK_USAGE("hrtimers_dead_cpu", 80),
STACK_USAGE("hrtimers_init", 0),
STACK_USAGE("schedule_hrtimeout_range_clock", 112),
STACK_USAGE("schedule_hrtimeout_range", 0),
STACK_USAGE("schedule_hrtimeout", 0),
STACK_USAGE("local_bh_enable", 0),
STACK_USAGE("ktime_add_safe", 0),
STACK_USAGE("debug_init", 0),
STACK_USAGE("debug_deactivate", 0),
STACK_USAGE("__hrtimer_get_next_event", 72),
STACK_USAGE("hrtimer_update_next_event", 72),
STACK_USAGE("setup_hrtimer_hres", 0),
STACK_USAGE("retrigger_next_event", 16),
STACK_USAGE("ktime_get_real", 0),
STACK_USAGE("hrtimer_reprogram", 16),
STACK_USAGE("ktime_get_boottime", 0),
STACK_USAGE("clock_was_set", 88),
STACK_USAGE("clock_was_set_work", 0),
STACK_USAGE("clock_was_set_delayed", 0),
STACK_USAGE("__ia32_sys_getitimer", 80),
STACK_USAGE("__x64_sys_getitimer", 80),
STACK_USAGE("__ia32_compat_sys_getitimer", 64),
STACK_USAGE("it_real_fn", 8),
STACK_USAGE("set_cpu_itimer", 96),
STACK_USAGE("do_setitimer", 56),
STACK_USAGE("clear_itimer", 48),
STACK_USAGE("trace_itimer_state", 0),
STACK_USAGE("__ia32_sys_alarm", 72),
STACK_USAGE("__x64_sys_alarm", 72),
STACK_USAGE("__ia32_sys_setitimer", 0),
STACK_USAGE("__se_sys_setitimer", 120),
STACK_USAGE("__x64_sys_setitimer", 0),
STACK_USAGE("__ia32_compat_sys_setitimer", 104),
STACK_USAGE("do_getitimer", 104),
STACK_USAGE("jiffies_read", 0),
STACK_USAGE("init_jiffies_clocksource", 0),
STACK_USAGE("clocksource_default_clock", 0),
STACK_USAGE("register_refined_jiffies", 8),
STACK_USAGE("copy_time_ns", 40),
STACK_USAGE("free_time_ns", 8),
STACK_USAGE("do_timens_ktime_to_host", 0),
STACK_USAGE("timens_get", 16),
STACK_USAGE("timens_for_children_get", 16),
STACK_USAGE("timens_put", 0),
STACK_USAGE("timens_commit", 16),
STACK_USAGE("timens_install", 48),
STACK_USAGE("timens_on_fork", 24),
STACK_USAGE("timens_owner", 0),
STACK_USAGE("proc_timens_show_offsets", 24),
STACK_USAGE("proc_timens_set_offset", 104),
STACK_USAGE("ntp_tick_adj_setup", 0),
STACK_USAGE("ntp_init", 0),
STACK_USAGE("ntp_clear", 0),
STACK_USAGE("ntp_tick_length", 0),
STACK_USAGE("ntp_get_next_leap", 0),
STACK_USAGE("second_overflow", 0),
STACK_USAGE("sync_timer_callback", 0),
STACK_USAGE("update_persistent_clock64", 0),
STACK_USAGE("sync_hw_clock", 88),
STACK_USAGE("ntp_notify_cmos_timer", 0),
STACK_USAGE("__do_adjtimex", 48),
STACK_USAGE("posix_clock_open", 40),
STACK_USAGE("posix_clock_release", 24),
STACK_USAGE("posix_clock_register", 24),
STACK_USAGE("posix_clock_unregister", 16),
STACK_USAGE("pc_clock_adjtime", 40),
STACK_USAGE("pc_clock_gettime", 40),
STACK_USAGE("pc_clock_getres", 40),
STACK_USAGE("pc_clock_settime", 40),
STACK_USAGE("posix_clock_read", 48),
STACK_USAGE("posix_clock_poll", 40),
STACK_USAGE("posix_clock_ioctl", 40),
STACK_USAGE("posix_clock_compat_ioctl", 40),
STACK_USAGE("posix_cpu_timer_rearm", 56),
STACK_USAGE("posix_cpu_timers_work", 136),
STACK_USAGE("clear_posix_cputimers_work", 0),
STACK_USAGE("posix_cputimers_init_work", 0),
STACK_USAGE("run_posix_cpu_timers", 0),
STACK_USAGE("set_process_cpu_timer", 24),
STACK_USAGE("do_cpu_nanosleep", 392),
STACK_USAGE("posix_cpu_nsleep", 48),
STACK_USAGE("posix_cpu_nsleep_restart", 32),
STACK_USAGE("process_cpu_clock_getres", 8),
STACK_USAGE("process_cpu_clock_get", 0),
STACK_USAGE("process_cpu_timer_create", 0),
STACK_USAGE("process_cpu_nsleep", 16),
STACK_USAGE("thread_cpu_clock_getres", 8),
STACK_USAGE("thread_cpu_clock_get", 0),
STACK_USAGE("posix_cpu_clock_getres", 16),
STACK_USAGE("thread_cpu_timer_create", 0),
STACK_USAGE("posix_cpu_clock_set", 0),
STACK_USAGE("posix_cputimers_group_init", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("thread_group_sample_cputime", 0),
STACK_USAGE("cpu_clock_sample_group", 104),
STACK_USAGE("posix_cpu_clock_get", 120),
STACK_USAGE("posix_cpu_timer_create", 24),
STACK_USAGE("update_rlimit_cpu", 48),
STACK_USAGE("posix_cpu_timer_del", 48),
STACK_USAGE("posix_cpu_timers_exit", 24),
STACK_USAGE("posix_cpu_timers_exit_group", 24),
STACK_USAGE("cpu_timer_fire", 8),
STACK_USAGE("posix_cpu_timer_set", 120),
STACK_USAGE("rcu_read_unlock", 0),
STACK_USAGE("posix_cpu_timer_get", 120),
STACK_USAGE("collect_posix_cputimers", 48),
STACK_USAGE("check_cpu_itimer", 32),
STACK_USAGE("validate_clock_permissions", 16),
STACK_USAGE("__ia32_sys_timer_delete", 0),
STACK_USAGE("__se_sys_timer_delete", 40),
STACK_USAGE("__x64_sys_timer_delete", 0),
STACK_USAGE("exit_itimers", 40),
STACK_USAGE("__ia32_sys_clock_settime", 40),
STACK_USAGE("__x64_sys_clock_settime", 40),
STACK_USAGE("__ia32_sys_clock_gettime", 32),
STACK_USAGE("__x64_sys_clock_gettime", 32),
STACK_USAGE("do_clock_adjtime", 0),
STACK_USAGE("__ia32_sys_clock_adjtime", 248),
STACK_USAGE("__x64_sys_clock_adjtime", 248),
STACK_USAGE("__ia32_sys_clock_getres", 32),
STACK_USAGE("__x64_sys_clock_getres", 32),
STACK_USAGE("__ia32_sys_clock_settime32", 40),
STACK_USAGE("__x64_sys_clock_settime32", 40),
STACK_USAGE("__ia32_sys_clock_gettime32", 32),
STACK_USAGE("__x64_sys_clock_gettime32", 32),
STACK_USAGE("__ia32_sys_clock_adjtime32", 240),
STACK_USAGE("__x64_sys_clock_adjtime32", 240),
STACK_USAGE("__ia32_sys_clock_getres_time32", 40),
STACK_USAGE("__x64_sys_clock_getres_time32", 40),
STACK_USAGE("common_nsleep", 0),
STACK_USAGE("common_nsleep_timens", 16),
STACK_USAGE("__ia32_sys_clock_nanosleep", 56),
STACK_USAGE("__x64_sys_clock_nanosleep", 56),
STACK_USAGE("__ia32_sys_clock_nanosleep_time32", 56),
STACK_USAGE("__x64_sys_clock_nanosleep_time32", 56),
STACK_USAGE("posix_get_realtime_timespec", 0),
STACK_USAGE("posix_get_realtime_ktime", 0),
STACK_USAGE("posix_clock_realtime_set", 0),
STACK_USAGE("posix_clock_realtime_adj", 0),
STACK_USAGE("posix_get_monotonic_timespec", 32),
STACK_USAGE("posix_get_monotonic_ktime", 0),
STACK_USAGE("posix_get_monotonic_raw", 32),
STACK_USAGE("posix_get_realtime_coarse", 0),
STACK_USAGE("posix_get_monotonic_coarse", 32),
STACK_USAGE("posix_get_coarse_res", 8),
STACK_USAGE("posix_get_boottime_timespec", 32),
STACK_USAGE("posix_get_boottime_ktime", 0),
STACK_USAGE("posix_get_tai_timespec", 8),
STACK_USAGE("posix_get_tai_ktime", 0),
STACK_USAGE("posix_get_hrtimer_res", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("init_posix_timers", 0),
STACK_USAGE("common_hrtimer_rearm", 16),
STACK_USAGE("posixtimer_rearm", 32),
STACK_USAGE("posix_timer_event", 0),
STACK_USAGE("posix_timer_fn", 32),
STACK_USAGE("k_itimer_rcu_free", 0),
STACK_USAGE("common_timer_create", 0),
STACK_USAGE("do_timer_create", 104),
STACK_USAGE("__ia32_sys_timer_create", 88),
STACK_USAGE("__x64_sys_timer_create", 88),
STACK_USAGE("__ia32_compat_sys_timer_create", 88),
STACK_USAGE("__lock_timer", 32),
STACK_USAGE("common_hrtimer_remaining", 0),
STACK_USAGE("common_hrtimer_forward", 0),
STACK_USAGE("common_timer_get", 40),
STACK_USAGE("__ia32_sys_timer_gettime", 0),
STACK_USAGE("__se_sys_timer_gettime", 72),
STACK_USAGE("__x64_sys_timer_gettime", 0),
STACK_USAGE("__ia32_sys_timer_gettime32", 0),
STACK_USAGE("__se_sys_timer_gettime32", 72),
STACK_USAGE("__x64_sys_timer_gettime32", 0),
STACK_USAGE("__ia32_sys_timer_getoverrun", 24),
STACK_USAGE("__x64_sys_timer_getoverrun", 24),
STACK_USAGE("common_hrtimer_arm", 40),
STACK_USAGE("common_hrtimer_try_to_cancel", 0),
STACK_USAGE("common_timer_wait_running", 0),
STACK_USAGE("timer_wait_running", 32),
STACK_USAGE("common_timer_set", 32),
STACK_USAGE("do_timer_settime", 64),
STACK_USAGE("__ia32_sys_timer_settime", 104),
STACK_USAGE("__x64_sys_timer_settime", 104),
STACK_USAGE("__ia32_sys_timer_settime32", 104),
STACK_USAGE("__x64_sys_timer_settime32", 104),
STACK_USAGE("common_timer_del", 8),
STACK_USAGE("tick_setup_hrtimer_broadcast", 0),
STACK_USAGE("bc_shutdown", 0),
STACK_USAGE("bc_set_next", 16),
STACK_USAGE("bc_handler", 0),
STACK_USAGE("tick_broadcast_setup_oneshot", 32),
STACK_USAGE("tick_broadcast_switch_to_oneshot", 8),
STACK_USAGE("tick_oneshot_wakeup_handler", 0),
STACK_USAGE("hotplug_cpu__broadcast_tick_pull", 16),
STACK_USAGE("tick_broadcast_oneshot_active", 0),
STACK_USAGE("tick_broadcast_oneshot_available", 0),
STACK_USAGE("tick_broadcast_init", 0),
STACK_USAGE("tick_set_oneshot_wakeup_device", 24),
STACK_USAGE("tick_install_broadcast_device", 16),
STACK_USAGE("tick_is_broadcast_device", 0),
STACK_USAGE("tick_broadcast_update_freq", 16),
STACK_USAGE("err_broadcast", 0),
STACK_USAGE("tick_device_uses_broadcast", 32),
STACK_USAGE("tick_receive_broadcast", 0),
STACK_USAGE("tick_handle_periodic_broadcast", 24),
STACK_USAGE("tick_broadcast_control", 48),
STACK_USAGE("tick_set_periodic_handler", 0),
STACK_USAGE("tick_broadcast_offline", 16),
STACK_USAGE("tick_suspend_broadcast", 8),
STACK_USAGE("tick_get_broadcast_device", 0),
STACK_USAGE("tick_resume_check_broadcast", 0),
STACK_USAGE("tick_resume_broadcast", 16),
STACK_USAGE("tick_get_broadcast_oneshot_mask", 0),
STACK_USAGE("tick_get_broadcast_mask", 0),
STACK_USAGE("tick_check_broadcast_expired", 0),
STACK_USAGE("tick_check_oneshot_broadcast_this_cpu", 0),
STACK_USAGE("tick_handle_oneshot_broadcast", 40),
STACK_USAGE("tick_get_wakeup_device", 0),
STACK_USAGE("__tick_broadcast_oneshot_control", 48),
STACK_USAGE("tick_handle_periodic", 24),
STACK_USAGE("tick_setup_periodic", 32),
STACK_USAGE("tick_setup_device", 48),
STACK_USAGE("trace_suspend_resume", 0),
STACK_USAGE("tick_install_replacement", 32),
STACK_USAGE("tick_check_replacement", 32),
STACK_USAGE("tick_check_new_device", 40),
STACK_USAGE("tick_broadcast_oneshot_control", 8),
STACK_USAGE("tick_handover_do_timer", 8),
STACK_USAGE("tick_shutdown", 16),
STACK_USAGE("tick_suspend_local", 0),
STACK_USAGE("tick_resume_local", 16),
STACK_USAGE("tick_suspend", 0),
STACK_USAGE("tick_resume", 16),
STACK_USAGE("tick_freeze", 8),
STACK_USAGE("tick_unfreeze", 16),
STACK_USAGE("tick_init", 0),
STACK_USAGE("tick_get_device", 0),
STACK_USAGE("tick_is_oneshot_available", 0),
STACK_USAGE("tick_periodic", 8),
STACK_USAGE("tick_oneshot_mode_active", 32),
STACK_USAGE("tick_init_highres", 0),
STACK_USAGE("tick_program_event", 32),
STACK_USAGE("tick_resume_oneshot", 8),
STACK_USAGE("tick_setup_oneshot", 16),
STACK_USAGE("tick_switch_to_oneshot", 16),
STACK_USAGE("tick_nohz_idle_stop_tick", 64),
STACK_USAGE("tick_nohz_idle_retain_tick", 0),
STACK_USAGE("tick_nohz_idle_enter", 24),
STACK_USAGE("tick_nohz_irq_exit", 8),
STACK_USAGE("tick_nohz_idle_got_tick", 0),
STACK_USAGE("tick_nohz_get_next_hrtimer", 0),
STACK_USAGE("tick_nohz_get_sleep_length", 40),
STACK_USAGE("tick_nohz_get_idle_calls_cpu", 0),
STACK_USAGE("tick_nohz_get_idle_calls", 0),
STACK_USAGE("tick_nohz_idle_restart_tick", 16),
STACK_USAGE("tick_nohz_idle_exit", 48),
STACK_USAGE("tick_nohz_handler", 32),
STACK_USAGE("tick_irq_enter", 40),
STACK_USAGE("tick_sched_timer", 24),
STACK_USAGE("skew_tick", 16),
STACK_USAGE("tick_setup_sched_timer", 32),
STACK_USAGE("tick_cancel_sched_timer", 8),
STACK_USAGE("tick_clock_notify", 0),
STACK_USAGE("tick_oneshot_notify", 0),
STACK_USAGE("tick_check_oneshot_change", 24),
STACK_USAGE("tick_init_jiffy_update", 16),
STACK_USAGE("tick_get_tick_sched", 0),
STACK_USAGE("tick_do_update_jiffies64", 16),
STACK_USAGE("setup_tick_nohz", 0),
STACK_USAGE("tick_nohz_tick_stopped", 0),
STACK_USAGE("tick_nohz_tick_stopped_cpu", 0),
STACK_USAGE("get_cpu_idle_time_us", 48),
STACK_USAGE("get_cpu_iowait_time_us", 48),
STACK_USAGE("tick_nohz_next_event", 56),
STACK_USAGE("tick_nohz_restart_sched_tick", 16),
STACK_USAGE("__ia32_sys_time32", 16),
STACK_USAGE("__x64_sys_time32", 16),
STACK_USAGE("__ia32_sys_stime32", 32),
STACK_USAGE("__x64_sys_stime32", 32),
STACK_USAGE("__ia32_sys_gettimeofday", 0),
STACK_USAGE("__se_sys_gettimeofday", 48),
STACK_USAGE("__x64_sys_gettimeofday", 0),
STACK_USAGE("do_sys_settimeofday64", 16),
STACK_USAGE("__ia32_sys_settimeofday", 0),
STACK_USAGE("__se_sys_settimeofday", 72),
STACK_USAGE("__x64_sys_settimeofday", 0),
STACK_USAGE("__ia32_compat_sys_gettimeofday", 48),
STACK_USAGE("__ia32_compat_sys_settimeofday", 72),
STACK_USAGE("__ia32_sys_adjtimex", 240),
STACK_USAGE("__x64_sys_adjtimex", 240),
STACK_USAGE("get_old_timex32", 152),
STACK_USAGE("put_old_timex32", 136),
STACK_USAGE("__ia32_sys_adjtimex_time32", 0),
STACK_USAGE("__se_sys_adjtimex_time32", 360),
STACK_USAGE("__x64_sys_adjtimex_time32", 0),
STACK_USAGE("jiffies_to_msecs", 0),
STACK_USAGE("jiffies_to_usecs", 0),
STACK_USAGE("mktime64", 8),
STACK_USAGE("ns_to_kernel_old_timeval", 0),
STACK_USAGE("set_normalized_timespec64", 16),
STACK_USAGE("ns_to_timespec64", 0),
STACK_USAGE("__msecs_to_jiffies", 0),
STACK_USAGE("__usecs_to_jiffies", 0),
STACK_USAGE("timespec64_to_jiffies", 0),
STACK_USAGE("jiffies_to_timespec64", 0),
STACK_USAGE("jiffies_to_clock_t", 0),
STACK_USAGE("__ia32_sys_time", 16),
STACK_USAGE("__x64_sys_time", 16),
STACK_USAGE("clock_t_to_jiffies", 0),
STACK_USAGE("jiffies_64_to_clock_t", 0),
STACK_USAGE("nsec_to_clock_t", 0),
STACK_USAGE("jiffies64_to_nsecs", 0),
STACK_USAGE("jiffies64_to_msecs", 0),
STACK_USAGE("nsecs_to_jiffies64", 0),
STACK_USAGE("nsecs_to_jiffies", 0),
STACK_USAGE("timespec64_add_safe", 16),
STACK_USAGE("get_timespec64", 32),
STACK_USAGE("put_timespec64", 24),
STACK_USAGE("__ia32_sys_stime", 32),
STACK_USAGE("__x64_sys_stime", 32),
STACK_USAGE("get_old_timespec32", 24),
STACK_USAGE("put_old_timespec32", 16),
STACK_USAGE("get_itimerspec64", 48),
STACK_USAGE("put_itimerspec64", 40),
STACK_USAGE("get_old_itimerspec32", 32),
STACK_USAGE("put_old_itimerspec32", 32),
STACK_USAGE("time64_to_tm", 8),
STACK_USAGE("timecounter_read", 8),
STACK_USAGE("timecounter_cyc2time", 0),
STACK_USAGE("timecounter_init", 24),
STACK_USAGE("ktime_get_real_seconds", 0),
STACK_USAGE("__ktime_get_real_seconds", 0),
STACK_USAGE("ktime_get_snapshot", 80),
STACK_USAGE("get_device_system_crosststamp", 200),
STACK_USAGE("do_settimeofday64", 88),
STACK_USAGE("timekeeping_inject_offset", 72),
STACK_USAGE("timekeeping_warp_clock", 24),
STACK_USAGE("change_clocksource", 40),
STACK_USAGE("timekeeping_notify", 8),
STACK_USAGE("ktime_get_raw_ts64", 32),
STACK_USAGE("tk_set_wall_to_mono", 64),
STACK_USAGE("timekeeping_valid_for_hres", 24),
STACK_USAGE("timekeeping_max_deferment", 24),
STACK_USAGE("read_persistent_clock64", 0),
STACK_USAGE("read_persistent_wall_and_boot_offset", 8),
STACK_USAGE("timekeeping_init", 96),
STACK_USAGE("timekeeping_resume", 120),
STACK_USAGE("timekeeping_suspend", 56),
STACK_USAGE("timekeeping_init_ops", 0),
STACK_USAGE("timekeeping_advance", 120),
STACK_USAGE("update_wall_time", 0),
STACK_USAGE("getboottime64", 8),
STACK_USAGE("ktime_get_coarse_real_ts64", 32),
STACK_USAGE("ktime_get_coarse_ts64", 32),
STACK_USAGE("do_timer", 0),
STACK_USAGE("ktime_get_update_offsets_now", 64),
STACK_USAGE("do_adjtimex", 184),
STACK_USAGE("tk_setup_internals", 16),
STACK_USAGE("ktime_get_mono_fast_ns", 24),
STACK_USAGE("ktime_get_raw_fast_ns", 24),
STACK_USAGE("ktime_get_boot_fast_ns", 24),
STACK_USAGE("ktime_get_real_fast_ns", 24),
STACK_USAGE("ktime_get_fast_timestamps", 48),
STACK_USAGE("pvclock_gtod_register_notifier", 16),
STACK_USAGE("pvclock_gtod_unregister_notifier", 16),
STACK_USAGE("timekeeping_update", 24),
STACK_USAGE("dummy_clock_read", 0),
STACK_USAGE("ktime_get_real_ts64", 32),
STACK_USAGE("ktime_get", 40),
STACK_USAGE("ktime_get_resolution_ns", 24),
STACK_USAGE("ktime_get_with_offset", 56),
STACK_USAGE("ktime_get_coarse_with_offset", 32),
STACK_USAGE("ktime_mono_to_any", 40),
STACK_USAGE("ktime_get_raw", 40),
STACK_USAGE("ktime_get_ts64", 32),
STACK_USAGE("ktime_get_seconds", 0),
STACK_USAGE("tk_debug_sleep_time_show", 32),
STACK_USAGE("tk_debug_sleep_time_open", 0),
STACK_USAGE("tk_debug_sleep_time_init", 0),
STACK_USAGE("tk_debug_account_sleep_time", 4),
STACK_USAGE("mod_timer_pending", 0),
STACK_USAGE("mod_timer", 0),
STACK_USAGE("timer_reduce", 0),
STACK_USAGE("add_timer", 0),
STACK_USAGE("add_timer_on", 72),
STACK_USAGE("del_timer", 40),
STACK_USAGE("try_to_del_timer_sync", 40),
STACK_USAGE("__traceiter_timer_expire_exit", 16),
STACK_USAGE("__bpf_trace_timer_class", 0),
STACK_USAGE("perf_trace_timer_class", 56),
STACK_USAGE("trace_event_raw_event_timer_class", 72),
STACK_USAGE("trace_raw_output_timer_class", 24),
STACK_USAGE("del_timer_sync", 40),
STACK_USAGE("__traceiter_timer_cancel", 16),
STACK_USAGE("call_timer_fn", 80),
STACK_USAGE("__next_timer_interrupt", 72),
STACK_USAGE("get_next_timer_interrupt", 32),
STACK_USAGE("__bpf_trace_hrtimer_init", 0),
STACK_USAGE("__traceiter_hrtimer_init", 32),
STACK_USAGE("perf_trace_hrtimer_init", 72),
STACK_USAGE("trace_event_raw_event_hrtimer_init", 88),
STACK_USAGE("trace_raw_output_hrtimer_init", 48),
STACK_USAGE("timer_clear_idle", 0),
STACK_USAGE("__run_timers", 152),
STACK_USAGE("run_timer_softirq", 0),
STACK_USAGE("update_process_times", 16),
STACK_USAGE("process_timeout", 0),
STACK_USAGE("schedule_timeout", 120),
STACK_USAGE("schedule_timeout_interruptible", 0),
STACK_USAGE("schedule_timeout_killable", 0),
STACK_USAGE("schedule_timeout_uninterruptible", 0),
STACK_USAGE("schedule_timeout_idle", 0),
STACK_USAGE("timers_prepare_cpu", 0),
STACK_USAGE("__bpf_trace_hrtimer_start", 0),
STACK_USAGE("__traceiter_hrtimer_start", 24),
STACK_USAGE("perf_trace_hrtimer_start", 64),
STACK_USAGE("trace_event_raw_event_hrtimer_start", 80),
STACK_USAGE("trace_raw_output_hrtimer_start", 56),
STACK_USAGE("timers_dead_cpu", 80),
STACK_USAGE("init_timer_cpu", 24),
STACK_USAGE("init_timer_cpus", 8),
STACK_USAGE("init_timers", 0),
STACK_USAGE("msleep", 0),
STACK_USAGE("msleep_interruptible", 8),
STACK_USAGE("usleep_range_state", 40),
STACK_USAGE("__bpf_trace_hrtimer_expire_entry", 0),
STACK_USAGE("__traceiter_hrtimer_expire_entry", 24),
STACK_USAGE("perf_trace_hrtimer_expire_entry", 64),
STACK_USAGE("trace_event_raw_event_hrtimer_expire_entry", 80),
STACK_USAGE("trace_raw_output_hrtimer_expire_entry", 24),
STACK_USAGE("timer_update_keys", 0),
STACK_USAGE("timers_update_nohz", 0),
STACK_USAGE("timer_migration_handler", 40),
STACK_USAGE("__bpf_trace_hrtimer_class", 0),
STACK_USAGE("perf_trace_hrtimer_class", 56),
STACK_USAGE("trace_event_raw_event_hrtimer_class", 72),
STACK_USAGE("trace_raw_output_hrtimer_class", 24),
STACK_USAGE("__traceiter_hrtimer_expire_exit", 16),
STACK_USAGE("__traceiter_hrtimer_cancel", 16),
STACK_USAGE("__bpf_trace_itimer_state", 0),
STACK_USAGE("__traceiter_itimer_state", 32),
STACK_USAGE("perf_trace_itimer_state", 72),
STACK_USAGE("trace_event_raw_event_itimer_state", 88),
STACK_USAGE("trace_raw_output_itimer_state", 24),
STACK_USAGE("__round_jiffies", 0),
STACK_USAGE("__traceiter_timer_init", 16),
STACK_USAGE("__bpf_trace_itimer_expire", 0),
STACK_USAGE("__traceiter_itimer_expire", 32),
STACK_USAGE("perf_trace_itimer_expire", 72),
STACK_USAGE("trace_event_raw_event_itimer_expire", 88),
STACK_USAGE("trace_raw_output_itimer_expire", 24),
STACK_USAGE("__round_jiffies_relative", 0),
STACK_USAGE("round_jiffies", 0),
STACK_USAGE("__bpf_trace_tick_stop", 0),
STACK_USAGE("__traceiter_tick_stop", 24),
STACK_USAGE("perf_trace_tick_stop", 64),
STACK_USAGE("trace_event_raw_event_tick_stop", 80),
STACK_USAGE("trace_raw_output_tick_stop", 32),
STACK_USAGE("round_jiffies_relative", 0),
STACK_USAGE("__round_jiffies_up", 0),
STACK_USAGE("__round_jiffies_up_relative", 0),
STACK_USAGE("round_jiffies_up", 0),
STACK_USAGE("round_jiffies_up_relative", 0),
STACK_USAGE("calc_wheel_index", 0),
STACK_USAGE("__bpf_trace_timer_start", 0),
STACK_USAGE("__traceiter_timer_start", 32),
STACK_USAGE("perf_trace_timer_start", 72),
STACK_USAGE("trace_event_raw_event_timer_start", 88),
STACK_USAGE("trace_raw_output_timer_start", 64),
STACK_USAGE("enqueue_timer", 24),
STACK_USAGE("init_timer_key", 40),
STACK_USAGE("detach_timer", 16),
STACK_USAGE("__bpf_trace_timer_expire_entry", 0),
STACK_USAGE("__traceiter_timer_expire_entry", 24),
STACK_USAGE("perf_trace_timer_expire_entry", 64),
STACK_USAGE("trace_event_raw_event_timer_expire_entry", 80),
STACK_USAGE("trace_raw_output_timer_expire_entry", 24),
STACK_USAGE("__mod_timer", 104),
STACK_USAGE("print_cpu", 128),
STACK_USAGE("print_tickdevice", 32),
STACK_USAGE("sysrq_timer_list_show", 16),
STACK_USAGE("timer_list_show", 16),
STACK_USAGE("SEQ_printf", 88),
STACK_USAGE("timer_list_start", 24),
STACK_USAGE("timer_list_next", 8),
STACK_USAGE("timer_list_stop", 0),
STACK_USAGE("init_timer_list_procfs", 8),
STACK_USAGE("update_vsyscall_tz", 0),
STACK_USAGE("vdso_update_begin", 0),
STACK_USAGE("vdso_update_end", 0),
STACK_USAGE("update_vsyscall", 16),
STACK_USAGE("blk_add_trace_bio_remap", 88),
STACK_USAGE("blk_add_trace_rq_remap", 64),
STACK_USAGE("blk_add_driver_data", 48),
STACK_USAGE("trace_note_tsk", 40),
STACK_USAGE("blk_log_action_classic", 24),
STACK_USAGE("blk_log_action", 328),
STACK_USAGE("blk_log_dump_pdu", 56),
STACK_USAGE("blk_log_generic", 56),
STACK_USAGE("blk_log_with_error", 16),
STACK_USAGE("blk_log_remap", 0),
STACK_USAGE("blk_log_plug", 56),
STACK_USAGE("blk_log_unplug", 72),
STACK_USAGE("blk_log_split", 72),
STACK_USAGE("blk_tracer_print_header", 0),
STACK_USAGE("blk_tracer_start", 0),
STACK_USAGE("blk_tracer_init", 0),
STACK_USAGE("blk_tracer_stop", 0),
STACK_USAGE("blk_tracer_reset", 0),
STACK_USAGE("print_one_line", 32),
STACK_USAGE("__trace_note_message", 136),
STACK_USAGE("blk_trace_event_print", 0),
STACK_USAGE("blk_trace_event_print_binary", 72),
STACK_USAGE("blk_tracer_print_line", 0),
STACK_USAGE("blk_tracer_set_flag", 0),
STACK_USAGE("init_blk_tracer", 0),
STACK_USAGE("sysfs_blk_trace_attr_show", 48),
STACK_USAGE("sysfs_blk_trace_attr_store", 104),
STACK_USAGE("blk_trace_init_sysfs", 0),
STACK_USAGE("blk_trace_remove_sysfs", 0),
STACK_USAGE("blk_fill_rwbs", 0),
STACK_USAGE("__blk_add_trace", 136),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("blk_trace_free", 16),
STACK_USAGE("get_probe_ref", 0),
STACK_USAGE("put_probe_ref", 0),
STACK_USAGE("__blk_trace_remove", 24),
STACK_USAGE("blk_trace_remove", 16),
STACK_USAGE("blk_dropped_read", 72),
STACK_USAGE("blk_msg_write", 24),
STACK_USAGE("blk_subbuf_start_callback", 8),
STACK_USAGE("blk_remove_buf_file_callback", 0),
STACK_USAGE("blk_create_buf_file_callback", 0),
STACK_USAGE("do_blk_trace_setup", 48),
STACK_USAGE("blk_trace_setup", 136),
STACK_USAGE("__blk_trace_startstop", 64),
STACK_USAGE("trace_note", 128),
STACK_USAGE("blk_trace_startstop", 24),
STACK_USAGE("rcu_read_unlock", 0),
STACK_USAGE("blk_trace_ioctl", 248),
STACK_USAGE("blk_trace_shutdown", 16),
STACK_USAGE("blk_trace_request_get_cgid", 0),
STACK_USAGE("blk_add_trace_rq", 56),
STACK_USAGE("blk_add_trace_rq_insert", 0),
STACK_USAGE("blk_add_trace_rq_issue", 0),
STACK_USAGE("blk_add_trace_rq_merge", 0),
STACK_USAGE("blk_add_trace_rq_requeue", 0),
STACK_USAGE("blk_add_trace_rq_complete", 0),
STACK_USAGE("blk_add_trace_bio", 40),
STACK_USAGE("blk_add_trace_bio_bounce", 0),
STACK_USAGE("blk_add_trace_bio_complete", 16),
STACK_USAGE("blk_add_trace_bio_backmerge", 0),
STACK_USAGE("blk_add_trace_bio_frontmerge", 0),
STACK_USAGE("blk_add_trace_bio_queue", 0),
STACK_USAGE("blk_add_trace_getrq", 0),
STACK_USAGE("blk_add_trace_plug", 8),
STACK_USAGE("blk_add_trace_unplug", 40),
STACK_USAGE("blk_add_trace_split", 72),
STACK_USAGE("trace_call_bpf", 96),
STACK_USAGE("bpf_get_func_ip_tracing", 0),
STACK_USAGE("bpf_get_func_ip_kprobe", 0),
STACK_USAGE("bpf_get_func_ip_kprobe_multi", 0),
STACK_USAGE("bpf_get_attach_cookie_kprobe_multi", 24),
STACK_USAGE("bpf_get_attach_cookie_trace", 0),
STACK_USAGE("bpf_get_attach_cookie_pe", 0),
STACK_USAGE("bpf_get_branch_snapshot", 8),
STACK_USAGE("get_func_arg", 0),
STACK_USAGE("get_func_ret", 0),
STACK_USAGE("get_func_arg_cnt", 0),
STACK_USAGE("bpf_tracing_func_proto", 0),
STACK_USAGE("__bpf_trace_bpf_trace_printk", 0),
STACK_USAGE("__traceiter_bpf_trace_printk", 16),
STACK_USAGE("perf_trace_bpf_trace_printk", 80),
STACK_USAGE("trace_bpf_trace_printk", 0),
STACK_USAGE("trace_event_raw_event_bpf_trace_printk", 88),
STACK_USAGE("trace_raw_output_bpf_trace_printk", 24),
STACK_USAGE("kprobe_prog_func_proto", 0),
STACK_USAGE("kprobe_prog_is_valid_access", 0),
STACK_USAGE("bpf_perf_event_output_tp", 88),
STACK_USAGE("bpf_get_stackid_tp", 0),
STACK_USAGE("bpf_get_stack_tp", 0),
STACK_USAGE("tp_prog_func_proto", 0),
STACK_USAGE("bpf_override_return", 0),
STACK_USAGE("tp_prog_is_valid_access", 0),
STACK_USAGE("bpf_perf_prog_read_value", 24),
STACK_USAGE("bpf_read_branch_records", 8),
STACK_USAGE("pe_prog_func_proto", 0),
STACK_USAGE("bpf_perf_event_output_raw_tp", 96),
STACK_USAGE("bpf_get_stackid_raw_tp", 24),
STACK_USAGE("bpf_get_stack_raw_tp", 32),
STACK_USAGE("raw_tp_prog_func_proto", 0),
STACK_USAGE("tracing_prog_func_proto", 16),
STACK_USAGE("bpf_probe_read_user", 24),
STACK_USAGE("raw_tp_prog_is_valid_access", 0),
STACK_USAGE("tracing_prog_is_valid_access", 0),
STACK_USAGE("bpf_prog_test_run_tracing", 0),
STACK_USAGE("raw_tp_writable_prog_is_valid_access", 0),
STACK_USAGE("pe_prog_is_valid_access", 0),
STACK_USAGE("pe_prog_convert_ctx_access", 0),
STACK_USAGE("perf_event_attach_bpf_prog", 56),
STACK_USAGE("perf_event_detach_bpf_prog", 32),
STACK_USAGE("perf_event_query_prog_array", 72),
STACK_USAGE("bpf_get_raw_tracepoint", 48),
STACK_USAGE("bpf_put_raw_tracepoint", 8),
STACK_USAGE("bpf_trace_run1", 40),
STACK_USAGE("bpf_trace_run2", 56),
STACK_USAGE("bpf_probe_read_user_str", 24),
STACK_USAGE("bpf_trace_run3", 72),
STACK_USAGE("bpf_trace_run4", 72),
STACK_USAGE("bpf_trace_run5", 88),
STACK_USAGE("bpf_trace_run6", 88),
STACK_USAGE("bpf_trace_run7", 104),
STACK_USAGE("bpf_trace_run8", 104),
STACK_USAGE("bpf_trace_run9", 120),
STACK_USAGE("bpf_trace_run10", 120),
STACK_USAGE("bpf_trace_run11", 136),
STACK_USAGE("bpf_trace_run12", 136),
STACK_USAGE("bpf_probe_register", 0),
STACK_USAGE("bpf_probe_unregister", 0),
STACK_USAGE("bpf_get_perf_event_info", 40),
STACK_USAGE("send_signal_irq_work_init", 8),
STACK_USAGE("bpf_event_notify", 24),
STACK_USAGE("bpf_event_init", 0),
STACK_USAGE("bpf_kprobe_multi_link_release", 0),
STACK_USAGE("bpf_kprobe_multi_link_dealloc", 8),
STACK_USAGE("bpf_kprobe_multi_cookie_swap", 0),
STACK_USAGE("__bpf_kprobe_multi_cookie_cmp", 0),
STACK_USAGE("bpf_kprobe_multi_cookie_cmp", 0),
STACK_USAGE("bpf_probe_read_kernel", 24),
STACK_USAGE("kprobe_multi_link_handler", 64),
STACK_USAGE("kprobe_multi_resolve_syms", 72),
STACK_USAGE("bpf_kprobe_multi_link_attach", 88),
STACK_USAGE("bpf_probe_read_kernel_str", 24),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("bpf_probe_read_compat", 24),
STACK_USAGE("bpf_probe_read_compat_str", 24),
STACK_USAGE("bpf_probe_write_user", 24),
STACK_USAGE("bpf_get_probe_write_proto", 8),
STACK_USAGE("bpf_trace_printk", 88),
STACK_USAGE("bpf_get_trace_printk_proto", 0),
STACK_USAGE("bpf_trace_vprintk", 32),
STACK_USAGE("bpf_get_trace_vprintk_proto", 0),
STACK_USAGE("bpf_seq_printf", 32),
STACK_USAGE("bpf_seq_write", 0),
STACK_USAGE("bpf_seq_printf_btf", 48),
STACK_USAGE("bpf_perf_event_read", 32),
STACK_USAGE("bpf_perf_event_read_value", 40),
STACK_USAGE("bpf_perf_event_output", 88),
STACK_USAGE("bpf_event_output", 128),
STACK_USAGE("bpf_get_current_task", 0),
STACK_USAGE("bpf_get_current_task_btf", 0),
STACK_USAGE("bpf_task_pt_regs", 0),
STACK_USAGE("bpf_current_task_under_cgroup", 24),
STACK_USAGE("do_bpf_send_signal", 0),
STACK_USAGE("bpf_send_signal_common", 48),
STACK_USAGE("bpf_send_signal", 0),
STACK_USAGE("bpf_send_signal_thread", 0),
STACK_USAGE("bpf_d_path", 16),
STACK_USAGE("bpf_d_path_allowed", 0),
STACK_USAGE("bpf_snprintf_btf", 56),
STACK_USAGE("__bpf_trace_error_report_template", 0),
STACK_USAGE("perf_trace_error_report_template", 64),
STACK_USAGE("trace_event_raw_event_error_report_template", 80),
STACK_USAGE("trace_raw_output_error_report_template", 24),
STACK_USAGE("__traceiter_error_report_end", 24),
STACK_USAGE("function_graph_enter", 56),
STACK_USAGE("ftrace_suspend_notifier_call", 0),
STACK_USAGE("ftrace_return_to_handler", 56),
STACK_USAGE("ftrace_graph_get_ret_stack", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("ftrace_graph_ret_addr", 0),
STACK_USAGE("ftrace_graph_sleep_time_control", 0),
STACK_USAGE("ftrace_graph_entry_stub", 0),
STACK_USAGE("ftrace_graph_probe_sched_switch", 16),
STACK_USAGE("ftrace_graph_stop", 0),
STACK_USAGE("ftrace_graph_entry_test", 8),
STACK_USAGE("update_function_graph_func", 0),
STACK_USAGE("ftrace_graph_init_idle_task", 16),
STACK_USAGE("ftrace_graph_init_task", 8),
STACK_USAGE("ftrace_graph_exit_task", 0),
STACK_USAGE("register_ftrace_graph", 56),
STACK_USAGE("unregister_ftrace_graph", 0),
STACK_USAGE("fprobe_init_rethook", 24),
STACK_USAGE("register_fprobe", 32),
STACK_USAGE("fprobe_handler", 40),
STACK_USAGE("register_fprobe_ips", 24),
STACK_USAGE("register_fprobe_syms", 72),
STACK_USAGE("unregister_fprobe", 16),
STACK_USAGE("fprobe_kprobe_handler", 24),
STACK_USAGE("fprobe_exit_handler", 0),
STACK_USAGE("ftrace_ops_trampoline", 0),
STACK_USAGE("is_ftrace_trampoline", 0),
STACK_USAGE("ftrace_lookup_ip", 0),
STACK_USAGE("free_ftrace_hash", 48),
STACK_USAGE("__free_ftrace_hash_rcu", 0),
STACK_USAGE("ftrace_free_filter", 16),
STACK_USAGE("alloc_ftrace_hash", 16),
STACK_USAGE("alloc_and_copy_ftrace_hash", 56),
STACK_USAGE("dup_hash", 32),
STACK_USAGE("ftrace_pid_func", 0),
STACK_USAGE("ftrace_ops_test", 16),
STACK_USAGE("ftrace_cmp_recs", 0),
STACK_USAGE("ftrace_location_range", 56),
STACK_USAGE("ftrace_sync_ipi", 0),
STACK_USAGE("ftrace_location", 72),
STACK_USAGE("ftrace_text_reserved", 56),
STACK_USAGE("__ftrace_hash_rec_update", 104),
STACK_USAGE("update_ftrace_function", 8),
STACK_USAGE("__ftrace_hash_update_ipmodify", 48),
STACK_USAGE("print_ip_ins", 32),
STACK_USAGE("ftrace_bug", 24),
STACK_USAGE("ftrace_check_record", 8),
STACK_USAGE("ftrace_update_record", 0),
STACK_USAGE("ftrace_test_record", 0),
STACK_USAGE("ftrace_find_tramp_ops_any", 8),
STACK_USAGE("ftrace_find_tramp_ops_next", 8),
STACK_USAGE("ftrace_find_rec_direct", 0),
STACK_USAGE("ftrace_add_rec_direct", 24),
STACK_USAGE("call_direct_funcs", 0),
STACK_USAGE("ftrace_get_addr_new", 8),
STACK_USAGE("ftrace_get_addr_curr", 8),
STACK_USAGE("__ftrace_replace_code", 32),
STACK_USAGE("ftrace_replace_code", 48),
STACK_USAGE("ftrace_rec_iter_start", 0),
STACK_USAGE("ftrace_rec_iter_next", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("ftrace_rec_iter_record", 0),
STACK_USAGE("ftrace_arch_code_modify_prepare", 0),
STACK_USAGE("ftrace_arch_code_modify_post_process", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("ftrace_modify_all_code", 24),
STACK_USAGE("__ftrace_modify_code", 0),
STACK_USAGE("ftrace_run_stop_machine", 16),
STACK_USAGE("arch_ftrace_update_code", 16),
STACK_USAGE("ftrace_run_modify_code", 16),
STACK_USAGE("arch_ftrace_trampoline_free", 0),
STACK_USAGE("ftrace_trampoline_free", 8),
STACK_USAGE("ftrace_startup", 24),
STACK_USAGE("ftrace_shutdown", 40),
STACK_USAGE("__register_ftrace_function", 8),
STACK_USAGE("__unregister_ftrace_function", 8),
STACK_USAGE("t_mod_start", 48),
STACK_USAGE("t_func_next", 40),
STACK_USAGE("t_next", 24),
STACK_USAGE("t_start", 56),
STACK_USAGE("t_stop", 0),
STACK_USAGE("arch_ftrace_trampoline_func", 0),
STACK_USAGE("t_show", 40),
STACK_USAGE("ftrace_avail_open", 8),
STACK_USAGE("ftrace_enabled_open", 0),
STACK_USAGE("ftrace_regex_open", 80),
STACK_USAGE("ftrace_filter_open", 0),
STACK_USAGE("ftrace_notrace_open", 0),
STACK_USAGE("arch_ftrace_match_adjust", 0),
STACK_USAGE("ftrace_match", 16),
STACK_USAGE("enter_record", 16),
STACK_USAGE("match_records", 424),
STACK_USAGE("ftrace_hash_move_and_update_ops", 72),
STACK_USAGE("process_mod_list", 104),
STACK_USAGE("ftrace_mod_callback", 168),
STACK_USAGE("ftrace_mod_cmd_init", 0),
STACK_USAGE("function_trace_probe_call", 0),
STACK_USAGE("allocate_ftrace_func_mapper", 8),
STACK_USAGE("ftrace_func_mapper_find_ip", 0),
STACK_USAGE("ftrace_func_mapper_add_ip", 24),
STACK_USAGE("ftrace_func_mapper_remove_ip", 8),
STACK_USAGE("free_ftrace_func_mapper", 40),
STACK_USAGE("release_probe", 8),
STACK_USAGE("register_ftrace_function_probe", 128),
STACK_USAGE("unregister_ftrace_function_probe_func", 600),
STACK_USAGE("clear_ftrace_function_probes", 24),
STACK_USAGE("register_ftrace_command", 24),
STACK_USAGE("unregister_ftrace_command", 32),
STACK_USAGE("ftrace_process_regex", 72),
STACK_USAGE("ftrace_filter_write", 24),
STACK_USAGE("ftrace_notrace_write", 24),
STACK_USAGE("ftrace_set_hash", 72),
STACK_USAGE("ftrace_find_direct_func", 0),
STACK_USAGE("register_ftrace_direct", 72),
STACK_USAGE("find_direct_entry", 64),
STACK_USAGE("unregister_ftrace_direct", 56),
STACK_USAGE("ftrace_modify_direct_caller", 48),
STACK_USAGE("modify_ftrace_direct", 72),
STACK_USAGE("remove_direct_functions_hash", 56),
STACK_USAGE("register_ftrace_direct_multi", 88),
STACK_USAGE("unregister_ftrace_direct_multi", 32),
STACK_USAGE("modify_ftrace_direct_multi", 32),
STACK_USAGE("ftrace_set_filter_ip", 48),
STACK_USAGE("ftrace_set_filter_ips", 48),
STACK_USAGE("ftrace_ops_set_global_filter", 8),
STACK_USAGE("ftrace_set_filter", 40),
STACK_USAGE("ftrace_set_notrace", 40),
STACK_USAGE("ftrace_set_global_filter", 0),
STACK_USAGE("ftrace_set_global_notrace", 0),
STACK_USAGE("set_ftrace_notrace", 0),
STACK_USAGE("set_ftrace_filter", 0),
STACK_USAGE("set_graph_function", 0),
STACK_USAGE("set_graph_notrace_function", 0),
STACK_USAGE("set_graph_max_depth_function", 0),
STACK_USAGE("set_ftrace_early_graph", 48),
STACK_USAGE("ftrace_set_early_filter", 48),
STACK_USAGE("set_ftrace_early_filters", 0),
STACK_USAGE("ftrace_regex_release", 24),
STACK_USAGE("g_next", 0),
STACK_USAGE("g_start", 40),
STACK_USAGE("g_stop", 0),
STACK_USAGE("g_show", 0),
STACK_USAGE("__ftrace_graph_open", 32),
STACK_USAGE("ftrace_graph_open", 24),
STACK_USAGE("ftrace_graph_notrace_open", 24),
STACK_USAGE("ftrace_graph_release", 32),
STACK_USAGE("ftrace_graph_set_hash", 376),
STACK_USAGE("ftrace_graph_write", 24),
STACK_USAGE("ftrace_create_filter_files", 16),
STACK_USAGE("ftrace_destroy_filter_files", 16),
STACK_USAGE("ftrace_init_dyn_tracefs", 8),
STACK_USAGE("ftrace_cmp_ips", 0),
STACK_USAGE("ftrace_process_locs", 80),
STACK_USAGE("ftrace_free_mod_map", 48),
STACK_USAGE("ftrace_release_mod", 40),
STACK_USAGE("ftrace_module_enable", 64),
STACK_USAGE("ftrace_module_init", 0),
STACK_USAGE("ftrace_mod_address_lookup", 56),
STACK_USAGE("ftrace_mod_get_kallsym", 56),
STACK_USAGE("ftrace_free_mem", 424),
STACK_USAGE("ftrace_free_init_mem", 0),
STACK_USAGE("ftrace_dyn_arch_init", 0),
STACK_USAGE("ftrace_init", 24),
STACK_USAGE("arch_ftrace_update_trampoline", 0),
STACK_USAGE("ftrace_update_trampoline", 16),
STACK_USAGE("ftrace_init_trace_array", 0),
STACK_USAGE("ftrace_init_global_array_ops", 0),
STACK_USAGE("ftrace_init_array_ops", 16),
STACK_USAGE("ftrace_reset_array_ops", 0),
STACK_USAGE("arch_ftrace_ops_list_func", 64),
STACK_USAGE("ftrace_ops_assist_func", 48),
STACK_USAGE("ftrace_ops_get_func", 0),
STACK_USAGE("ftrace_filter_pid_sched_switch_probe", 32),
STACK_USAGE("ftrace_pid_follow_sched_process_fork", 32),
STACK_USAGE("ftrace_pid_follow_sched_process_exit", 24),
STACK_USAGE("ftrace_pid_follow_fork", 8),
STACK_USAGE("clear_ftrace_pids", 40),
STACK_USAGE("ftrace_clear_pids", 8),
STACK_USAGE("fpid_start", 16),
STACK_USAGE("fpid_next", 24),
STACK_USAGE("fpid_stop", 0),
STACK_USAGE("fpid_show", 0),
STACK_USAGE("fnpid_start", 16),
STACK_USAGE("fnpid_next", 24),
STACK_USAGE("pid_open", 40),
STACK_USAGE("ftrace_pid_open", 0),
STACK_USAGE("ftrace_no_pid_open", 0),
STACK_USAGE("ignore_task_cpu", 24),
STACK_USAGE("pid_write", 80),
STACK_USAGE("ftrace_pid_write", 0),
STACK_USAGE("ftrace_no_pid_write", 0),
STACK_USAGE("ftrace_pid_release", 16),
STACK_USAGE("ftrace_init_tracefs", 16),
STACK_USAGE("ftrace_init_tracefs_toplevel", 0),
STACK_USAGE("ftrace_kill", 0),
STACK_USAGE("ftrace_is_dead", 0),
STACK_USAGE("register_ftrace_function", 16),
STACK_USAGE("unregister_ftrace_function", 8),
STACK_USAGE("ftrace_enable_sysctl", 40),
STACK_USAGE("trace_pid_list_is_set", 32),
STACK_USAGE("trace_pid_list_set", 48),
STACK_USAGE("trace_pid_list_clear", 48),
STACK_USAGE("trace_pid_list_next", 56),
STACK_USAGE("trace_pid_list_first", 0),
STACK_USAGE("pid_list_refill_irq", 88),
STACK_USAGE("trace_pid_list_alloc", 8),
STACK_USAGE("trace_pid_list_free", 32),
STACK_USAGE("__traceiter_cpu_frequency", 24),
STACK_USAGE("__bpf_trace_cpu_frequency_limits", 0),
STACK_USAGE("__traceiter_cpu_frequency_limits", 16),
STACK_USAGE("perf_trace_cpu_frequency_limits", 56),
STACK_USAGE("trace_event_raw_event_cpu_frequency_limits", 72),
STACK_USAGE("trace_raw_output_cpu_frequency_limits", 24),
STACK_USAGE("__bpf_trace_cpu", 0),
STACK_USAGE("perf_trace_cpu", 64),
STACK_USAGE("trace_event_raw_event_cpu", 80),
STACK_USAGE("trace_raw_output_cpu", 24),
STACK_USAGE("__bpf_trace_device_pm_callback_start", 0),
STACK_USAGE("__traceiter_device_pm_callback_start", 32),
STACK_USAGE("perf_trace_device_pm_callback_start", 104),
STACK_USAGE("trace_event_get_offsets_device_pm_callback_start", 56),
STACK_USAGE("trace_event_raw_event_device_pm_callback_start", 112),
STACK_USAGE("trace_raw_output_device_pm_callback_start", 56),
STACK_USAGE("__bpf_trace_device_pm_callback_end", 0),
STACK_USAGE("__traceiter_device_pm_callback_end", 24),
STACK_USAGE("perf_trace_device_pm_callback_end", 88),
STACK_USAGE("trace_event_raw_event_device_pm_callback_end", 112),
STACK_USAGE("trace_raw_output_device_pm_callback_end", 24),
STACK_USAGE("__bpf_trace_suspend_resume", 0),
STACK_USAGE("__traceiter_suspend_resume", 32),
STACK_USAGE("perf_trace_suspend_resume", 72),
STACK_USAGE("trace_event_raw_event_suspend_resume", 88),
STACK_USAGE("trace_raw_output_suspend_resume", 24),
STACK_USAGE("__bpf_trace_wakeup_source", 0),
STACK_USAGE("perf_trace_wakeup_source", 80),
STACK_USAGE("trace_event_raw_event_wakeup_source", 96),
STACK_USAGE("trace_raw_output_wakeup_source", 24),
STACK_USAGE("__traceiter_wakeup_source_activate", 24),
STACK_USAGE("__traceiter_wakeup_source_deactivate", 24),
STACK_USAGE("__bpf_trace_clock", 0),
STACK_USAGE("perf_trace_clock", 88),
STACK_USAGE("trace_event_raw_event_clock", 104),
STACK_USAGE("trace_raw_output_clock", 24),
STACK_USAGE("__traceiter_clock_enable", 32),
STACK_USAGE("__traceiter_clock_disable", 32),
STACK_USAGE("__traceiter_clock_set_rate", 32),
STACK_USAGE("__bpf_trace_power_domain", 0),
STACK_USAGE("perf_trace_power_domain", 88),
STACK_USAGE("trace_event_raw_event_power_domain", 104),
STACK_USAGE("trace_raw_output_power_domain", 24),
STACK_USAGE("__traceiter_power_domain_target", 32),
STACK_USAGE("__bpf_trace_cpu_latency_qos_request", 0),
STACK_USAGE("perf_trace_cpu_latency_qos_request", 56),
STACK_USAGE("trace_event_raw_event_cpu_latency_qos_request", 72),
STACK_USAGE("trace_raw_output_cpu_latency_qos_request", 24),
STACK_USAGE("__traceiter_cpu_idle", 24),
STACK_USAGE("__traceiter_pm_qos_add_request", 16),
STACK_USAGE("__traceiter_pm_qos_update_request", 16),
STACK_USAGE("__traceiter_pm_qos_remove_request", 16),
STACK_USAGE("__bpf_trace_pm_qos_update", 0),
STACK_USAGE("perf_trace_pm_qos_update", 72),
STACK_USAGE("trace_event_raw_event_pm_qos_update", 88),
STACK_USAGE("trace_raw_output_pm_qos_update", 24),
STACK_USAGE("__traceiter_pm_qos_update_target", 32),
STACK_USAGE("__traceiter_pm_qos_update_flags", 32),
STACK_USAGE("trace_raw_output_pm_qos_update_flags", 16),
STACK_USAGE("__bpf_trace_powernv_throttle", 0),
STACK_USAGE("__traceiter_powernv_throttle", 32),
STACK_USAGE("perf_trace_powernv_throttle", 96),
STACK_USAGE("trace_event_raw_event_powernv_throttle", 104),
STACK_USAGE("trace_raw_output_powernv_throttle", 24),
STACK_USAGE("__bpf_trace_dev_pm_qos_request", 0),
STACK_USAGE("perf_trace_dev_pm_qos_request", 96),
STACK_USAGE("trace_event_raw_event_dev_pm_qos_request", 104),
STACK_USAGE("trace_raw_output_dev_pm_qos_request", 32),
STACK_USAGE("__traceiter_dev_pm_qos_add_request", 32),
STACK_USAGE("__traceiter_dev_pm_qos_update_request", 32),
STACK_USAGE("__traceiter_dev_pm_qos_remove_request", 32),
STACK_USAGE("__bpf_trace_pstate_sample", 0),
STACK_USAGE("__traceiter_pstate_sample", 48),
STACK_USAGE("perf_trace_pstate_sample", 80),
STACK_USAGE("trace_event_raw_event_pstate_sample", 104),
STACK_USAGE("trace_raw_output_pstate_sample", 24),
STACK_USAGE("rethook_add_node", 0),
STACK_USAGE("free_rethook_node_rcu", 8),
STACK_USAGE("rethook_recycle", 0),
STACK_USAGE("rethook_try_get", 16),
STACK_USAGE("rethook_hook", 8),
STACK_USAGE("__rethook_find_ret_addr", 0),
STACK_USAGE("rethook_flush_task", 16),
STACK_USAGE("rethook_find_ret_addr", 0),
STACK_USAGE("arch_rethook_fixup_return", 0),
STACK_USAGE("rethook_trampoline_handler", 48),
STACK_USAGE("__freelist_add", 0),
STACK_USAGE("rethook_free_rcu", 24),
STACK_USAGE("rethook_free", 0),
STACK_USAGE("rethook_alloc", 16),
STACK_USAGE("ring_buffer_poll_wait", 24),
STACK_USAGE("ring_buffer_time_stamp", 0),
STACK_USAGE("ring_buffer_normalize_time_stamp", 0),
STACK_USAGE("rb_set_head_page", 0),
STACK_USAGE("rb_check_pages", 16),
STACK_USAGE("__rb_allocate_pages", 48),
STACK_USAGE("rb_allocate_cpu_buffer", 56),
STACK_USAGE("rb_free_cpu_buffer", 32),
STACK_USAGE("__ring_buffer_alloc", 48),
STACK_USAGE("ring_buffer_free", 24),
STACK_USAGE("ring_buffer_set_clock", 0),
STACK_USAGE("ring_buffer_set_time_stamp_abs", 0),
STACK_USAGE("ring_buffer_time_stamp_abs", 0),
STACK_USAGE("rb_event_length", 0),
STACK_USAGE("rb_update_pages", 48),
STACK_USAGE("update_pages_handler", 8),
STACK_USAGE("ring_buffer_resize", 64),
STACK_USAGE("ring_buffer_change_overwrite", 24),
STACK_USAGE("ring_buffer_event_length", 16),
STACK_USAGE("rb_move_tail", 24),
STACK_USAGE("rb_check_timestamp", 40),
STACK_USAGE("rb_add_timestamp", 40),
STACK_USAGE("ring_buffer_event_data", 0),
STACK_USAGE("rb_commit", 0),
STACK_USAGE("ring_buffer_nest_start", 0),
STACK_USAGE("ring_buffer_nest_end", 0),
STACK_USAGE("ring_buffer_unlock_commit", 24),
STACK_USAGE("ring_buffer_lock_reserve", 168),
STACK_USAGE("ring_buffer_print_page_header", 16),
STACK_USAGE("ring_buffer_discard_commit", 56),
STACK_USAGE("ring_buffer_print_entry_header", 8),
STACK_USAGE("ring_buffer_write", 192),
STACK_USAGE("ring_buffer_record_disable", 0),
STACK_USAGE("ring_buffer_record_enable", 0),
STACK_USAGE("ring_buffer_record_off", 0),
STACK_USAGE("ring_buffer_record_on", 0),
STACK_USAGE("ring_buffer_record_is_on", 0),
STACK_USAGE("ring_buffer_record_is_set_on", 0),
STACK_USAGE("ring_buffer_record_disable_cpu", 0),
STACK_USAGE("ring_buffer_record_enable_cpu", 0),
STACK_USAGE("ring_buffer_oldest_event_ts", 24),
STACK_USAGE("ring_buffer_bytes_cpu", 0),
STACK_USAGE("ring_buffer_entries_cpu", 0),
STACK_USAGE("ring_buffer_overrun_cpu", 0),
STACK_USAGE("ring_buffer_commit_overrun_cpu", 0),
STACK_USAGE("ring_buffer_dropped_events_cpu", 0),
STACK_USAGE("ring_buffer_read_events_cpu", 0),
STACK_USAGE("ring_buffer_entries", 32),
STACK_USAGE("ring_buffer_overruns", 32),
STACK_USAGE("ring_buffer_iter_reset", 16),
STACK_USAGE("ring_buffer_iter_empty", 0),
STACK_USAGE("rb_get_reader_page", 64),
STACK_USAGE("rb_advance_reader", 16),
STACK_USAGE("rb_advance_iter", 64),
STACK_USAGE("rb_buffer_peek", 24),
STACK_USAGE("ring_buffer_peek", 72),
STACK_USAGE("ring_buffer_iter_dropped", 0),
STACK_USAGE("ring_buffer_iter_peek", 104),
STACK_USAGE("ring_buffer_consume", 96),
STACK_USAGE("ring_buffer_read_prepare", 32),
STACK_USAGE("ring_buffer_read_prepare_sync", 0),
STACK_USAGE("queued_spin_lock_slowpath", 0),
STACK_USAGE("ring_buffer_read_start", 40),
STACK_USAGE("ring_buffer_read_finish", 32),
STACK_USAGE("ring_buffer_iter_advance", 24),
STACK_USAGE("ring_buffer_size", 0),
STACK_USAGE("reset_disabled_cpu_buffer", 32),
STACK_USAGE("ring_buffer_reset_cpu", 16),
STACK_USAGE("ring_buffer_reset_online_cpus", 40),
STACK_USAGE("ring_buffer_reset", 40),
STACK_USAGE("ring_buffer_empty", 96),
STACK_USAGE("ring_buffer_empty_cpu", 64),
STACK_USAGE("ring_buffer_alloc_read_page", 56),
STACK_USAGE("ring_buffer_free_read_page", 48),
STACK_USAGE("ring_buffer_read_page", 128),
STACK_USAGE("trace_rb_cpu_prepare", 56),
STACK_USAGE("ring_buffer_event_time_stamp", 16),
STACK_USAGE("ring_buffer_nr_pages", 0),
STACK_USAGE("ring_buffer_nr_dirty_pages", 0),
STACK_USAGE("rb_wake_up_waiters", 8),
STACK_USAGE("ring_buffer_wait", 160),
STACK_USAGE("__bpf_trace_rpm_internal", 0),
STACK_USAGE("perf_trace_rpm_internal", 80),
STACK_USAGE("trace_event_raw_event_rpm_internal", 88),
STACK_USAGE("trace_raw_output_rpm_internal", 24),
STACK_USAGE("__traceiter_rpm_suspend", 24),
STACK_USAGE("__traceiter_rpm_resume", 24),
STACK_USAGE("__traceiter_rpm_idle", 24),
STACK_USAGE("__traceiter_rpm_usage", 24),
STACK_USAGE("__bpf_trace_rpm_return_int", 0),
STACK_USAGE("__traceiter_rpm_return_int", 32),
STACK_USAGE("perf_trace_rpm_return_int", 88),
STACK_USAGE("trace_event_raw_event_rpm_return_int", 96),
STACK_USAGE("trace_raw_output_rpm_return_int", 24),
STACK_USAGE("tracer_alloc_buffers", 24),
STACK_USAGE("__trace_puts", 96),
STACK_USAGE("ftrace_boot_snapshot", 0),
STACK_USAGE("early_trace_init", 8),
STACK_USAGE("trace_init", 0),
STACK_USAGE("tracing_set_default_clock", 0),
STACK_USAGE("late_trace_init", 0),
STACK_USAGE("__trace_bputs", 80),
STACK_USAGE("__trace_event_discard_commit", 0),
STACK_USAGE("tracing_snapshot", 0),
STACK_USAGE("tracing_snapshot_cond", 0),
STACK_USAGE("tracing_alloc_snapshot", 0),
STACK_USAGE("tracing_snapshot_alloc", 0),
STACK_USAGE("tracing_cond_snapshot_data", 0),
STACK_USAGE("tracing_snapshot_cond_enable", 0),
STACK_USAGE("tracing_snapshot_cond_disable", 0),
STACK_USAGE("tracer_tracing_off", 8),
STACK_USAGE("tracing_off", 0),
STACK_USAGE("disable_trace_on_warning", 0),
STACK_USAGE("tracer_tracing_is_on", 0),
STACK_USAGE("tracing_is_on", 0),
STACK_USAGE("set_buf_size", 16),
STACK_USAGE("set_tracing_thresh", 24),
STACK_USAGE("nsecs_to_usecs", 0),
STACK_USAGE("trace_clock_in_ns", 0),
STACK_USAGE("trace_parser_get_init", 16),
STACK_USAGE("trace_parser_put", 8),
STACK_USAGE("trace_get_user", 56),
STACK_USAGE("set_cmdline_ftrace", 0),
STACK_USAGE("set_ftrace_dump_on_oops", 16),
STACK_USAGE("register_tracer", 32),
STACK_USAGE("tracing_reset_online_cpus", 40),
STACK_USAGE("stop_trace_on_warning", 8),
STACK_USAGE("tracing_reset_all_online_cpus", 16),
STACK_USAGE("boot_alloc_snapshot", 0),
STACK_USAGE("is_tracing_stopped", 0),
STACK_USAGE("tracing_start", 8),
STACK_USAGE("tracing_stop", 8),
STACK_USAGE("boot_snapshot", 0),
STACK_USAGE("trace_save_cmdline", 0),
STACK_USAGE("trace_find_cmdline", 24),
STACK_USAGE("set_trace_boot_options", 0),
STACK_USAGE("trace_find_tgid", 0),
STACK_USAGE("tracing_record_taskinfo", 24),
STACK_USAGE("tracing_record_taskinfo_sched_switch", 40),
STACK_USAGE("set_trace_boot_clock", 0),
STACK_USAGE("tracing_record_cmdline", 8),
STACK_USAGE("tracing_record_tgid", 8),
STACK_USAGE("trace_handle_return", 0),
STACK_USAGE("tracing_gen_ctx_irq_test", 0),
STACK_USAGE("trace_buffer_lock_reserve", 24),
STACK_USAGE("set_tracepoint_printk", 16),
STACK_USAGE("trace_buffered_event_enable", 16),
STACK_USAGE("enable_trace_buffered_event", 0),
STACK_USAGE("disable_trace_buffered_event", 0),
STACK_USAGE("trace_buffered_event_disable", 8),
STACK_USAGE("trace_event_buffer_lock_reserve", 48),
STACK_USAGE("set_tracepoint_printk_stop", 0),
STACK_USAGE("ns2usecs", 0),
STACK_USAGE("tracepoint_printk_sysctl", 48),
STACK_USAGE("trace_event_buffer_commit", 64),
STACK_USAGE("trace_buffer_unlock_commit_regs", 40),
STACK_USAGE("trace_buffer_unlock_commit_nostack", 16),
STACK_USAGE("trace_function", 40),
STACK_USAGE("__ftrace_trace_stack", 56),
STACK_USAGE("__trace_stack", 24),
STACK_USAGE("trace_dump_stack", 16),
STACK_USAGE("trace_last_func_repeats", 32),
STACK_USAGE("trace_printk_init_buffers", 8),
STACK_USAGE("trace_printk_start_comm", 0),
STACK_USAGE("trace_vbprintk", 104),
STACK_USAGE("__trace_array_vprintk", 96),
STACK_USAGE("trace_array_vprintk", 0),
STACK_USAGE("trace_array_printk", 88),
STACK_USAGE("trace_array_init_printk", 16),
STACK_USAGE("trace_array_printk_buf", 88),
STACK_USAGE("trace_vprintk", 0),
STACK_USAGE("peek_next_entry", 32),
STACK_USAGE("__find_next_entry", 120),
STACK_USAGE("trace_iter_expand_format", 8),
STACK_USAGE("show_buffer", 0),
STACK_USAGE("test_can_verify_check", 120),
STACK_USAGE("test_can_verify", 0),
STACK_USAGE("trace_check_vprintf", 112),
STACK_USAGE("trace_event_format", 40),
STACK_USAGE("trace_find_next_entry", 40),
STACK_USAGE("register_ftrace_export", 8),
STACK_USAGE("trace_find_next_entry_inc", 8),
STACK_USAGE("s_next", 56),
STACK_USAGE("tracing_iter_reset", 56),
STACK_USAGE("s_start", 56),
STACK_USAGE("s_stop", 0),
STACK_USAGE("unregister_ftrace_export", 16),
STACK_USAGE("trace_total_entries_cpu", 24),
STACK_USAGE("trace_total_entries", 32),
STACK_USAGE("print_event_info", 56),
STACK_USAGE("print_trace_header", 88),
STACK_USAGE("print_trace_fmt", 48),
STACK_USAGE("print_raw_fmt", 32),
STACK_USAGE("print_hex_fmt", 40),
STACK_USAGE("trace_empty", 24),
STACK_USAGE("print_trace_line", 24),
STACK_USAGE("trace_latency_header", 24),
STACK_USAGE("trace_array_get", 8),
STACK_USAGE("trace_default_header", 24),
STACK_USAGE("s_show", 16),
STACK_USAGE("tracing_open_generic", 16),
STACK_USAGE("tracing_is_disabled", 0),
STACK_USAGE("tracing_open_generic_tr", 32),
STACK_USAGE("tracing_mark_open", 32),
STACK_USAGE("tracing_release", 48),
STACK_USAGE("trace_array_put", 8),
STACK_USAGE("tracing_release_generic_tr", 8),
STACK_USAGE("tracing_single_release_tr", 24),
STACK_USAGE("tracing_open", 56),
STACK_USAGE("t_next", 0),
STACK_USAGE("tracing_check_open_get_tr", 16),
STACK_USAGE("queued_spin_lock_slowpath", 0),
STACK_USAGE("t_start", 24),
STACK_USAGE("t_stop", 0),
STACK_USAGE("t_show", 16),
STACK_USAGE("show_traces_open", 24),
STACK_USAGE("show_traces_release", 24),
STACK_USAGE("tracing_write_stub", 0),
STACK_USAGE("tracing_lseek", 0),
STACK_USAGE("tracing_cpumask_read", 48),
STACK_USAGE("tracing_set_cpumask", 48),
STACK_USAGE("call_filter_check_discard", 24),
STACK_USAGE("tracing_cpumask_write", 56),
STACK_USAGE("tracing_trace_options_show", 48),
STACK_USAGE("trace_keep_overwrite", 0),
STACK_USAGE("set_tracer_flag", 24),
STACK_USAGE("trace_set_options", 88),
STACK_USAGE("trace_find_filtered_pid", 0),
STACK_USAGE("apply_trace_boot_options", 24),
STACK_USAGE("tracing_trace_options_write", 104),
STACK_USAGE("tracing_trace_options_open", 32),
STACK_USAGE("trace_ignore_this_task", 16),
STACK_USAGE("tracing_readme_read", 0),
STACK_USAGE("saved_tgids_next", 0),
STACK_USAGE("saved_tgids_start", 0),
STACK_USAGE("saved_tgids_stop", 0),
STACK_USAGE("saved_tgids_show", 0),
STACK_USAGE("tracing_saved_tgids_open", 8),
STACK_USAGE("saved_cmdlines_next", 0),
STACK_USAGE("saved_cmdlines_start", 24),
STACK_USAGE("trace_filter_add_remove_task", 16),
STACK_USAGE("saved_cmdlines_stop", 0),
STACK_USAGE("saved_cmdlines_show", 56),
STACK_USAGE("tracing_saved_cmdlines_open", 8),
STACK_USAGE("tracing_saved_cmdlines_size_read", 104),
STACK_USAGE("free_saved_cmdlines_buffer", 8),
STACK_USAGE("tracing_saved_cmdlines_size_write", 72),
STACK_USAGE("tracing_set_trace_read", 168),
STACK_USAGE("tracer_init", 16),
STACK_USAGE("trace_pid_next", 16),
STACK_USAGE("tracing_resize_ring_buffer", 32),
STACK_USAGE("tracing_update_buffers", 24),
STACK_USAGE("add_tracer_options", 80),
STACK_USAGE("tracing_set_tracer", 40),
STACK_USAGE("trace_pid_start", 48),
STACK_USAGE("tracing_set_trace_write", 152),
STACK_USAGE("tracing_thresh_read", 120),
STACK_USAGE("tracing_thresh_write", 40),
STACK_USAGE("tracing_open_pipe", 40),
STACK_USAGE("tracing_release_pipe", 16),
STACK_USAGE("tracing_poll_pipe", 0),
STACK_USAGE("tracing_wait_pipe", 32),
STACK_USAGE("trace_pid_show", 0),
STACK_USAGE("tracing_read_pipe", 96),
STACK_USAGE("tracing_spd_release_pipe", 0),
STACK_USAGE("trace_pid_write", 120),
STACK_USAGE("tracing_splice_read_pipe", 552),
STACK_USAGE("tracing_entries_read", 136),
STACK_USAGE("tracing_entries_write", 48),
STACK_USAGE("tracing_total_entries_read", 152),
STACK_USAGE("tracing_free_buffer_write", 0),
STACK_USAGE("tracing_free_buffer_release", 8),
STACK_USAGE("tracing_mark_write", 96),
STACK_USAGE("tracing_mark_raw_write", 96),
STACK_USAGE("tracing_clock_show", 40),
STACK_USAGE("tracing_set_clock", 32),
STACK_USAGE("tracing_clock_write", 104),
STACK_USAGE("tracing_clock_open", 32),
STACK_USAGE("tracing_time_stamp_mode_show", 16),
STACK_USAGE("tracing_time_stamp_mode_open", 32),
STACK_USAGE("tracing_event_time_stamp", 0),
STACK_USAGE("tracing_set_filter_buffering", 24),
STACK_USAGE("trace_min_max_write", 48),
STACK_USAGE("trace_min_max_read", 72),
STACK_USAGE("ftrace_now", 24),
STACK_USAGE("err_pos", 8),
STACK_USAGE("tracing_log_err", 56),
STACK_USAGE("tracing_err_log_seq_start", 16),
STACK_USAGE("tracing_err_log_seq_next", 0),
STACK_USAGE("tracing_err_log_seq_stop", 0),
STACK_USAGE("tracing_err_log_seq_show", 24),
STACK_USAGE("tracing_is_enabled", 0),
STACK_USAGE("tracing_err_log_open", 48),
STACK_USAGE("tracing_err_log_write", 0),
STACK_USAGE("tracing_err_log_release", 24),
STACK_USAGE("tracing_buffers_open", 40),
STACK_USAGE("tracing_buffers_poll", 0),
STACK_USAGE("tracing_buffers_read", 72),
STACK_USAGE("tracing_buffers_release", 8),
STACK_USAGE("buffer_pipe_buf_release", 16),
STACK_USAGE("buffer_pipe_buf_get", 8),
STACK_USAGE("buffer_spd_release", 24),
STACK_USAGE("tracing_buffers_splice_read", 520),
STACK_USAGE("tracing_stats_read", 56),
STACK_USAGE("tracing_read_dyn_info", 32),
STACK_USAGE("trace_options_read", 0),
STACK_USAGE("trace_options_write", 64),
STACK_USAGE("trace_options_core_read", 0),
STACK_USAGE("trace_options_core_write", 48),
STACK_USAGE("trace_create_file", 16),
STACK_USAGE("rb_simple_read", 120),
STACK_USAGE("rb_simple_write", 56),
STACK_USAGE("buffer_percent_read", 120),
STACK_USAGE("buffer_percent_write", 40),
STACK_USAGE("allocate_trace_buffers", 32),
STACK_USAGE("init_trace_flags_index", 0),
STACK_USAGE("trace_array_find", 24),
STACK_USAGE("trace_array_find_get", 24),
STACK_USAGE("trace_array_create_dir", 24),
STACK_USAGE("trace_array_create", 16),
STACK_USAGE("instance_mkdir", 40),
STACK_USAGE("trace_array_get_by_name", 24),
STACK_USAGE("__remove_instance", 32),
STACK_USAGE("trace_array_destroy", 8),
STACK_USAGE("instance_rmdir", 32),
STACK_USAGE("create_trace_instances", 24),
STACK_USAGE("init_tracer_tracefs", 104),
STACK_USAGE("trace_automount", 24),
STACK_USAGE("tracer_tracing_on", 8),
STACK_USAGE("tracing_init_dentry", 8),
STACK_USAGE("eval_map_work_func", 0),
STACK_USAGE("trace_eval_init", 0),
STACK_USAGE("trace_eval_sync", 0),
STACK_USAGE("trace_module_notify", 8),
STACK_USAGE("tracer_init_tracefs", 16),
STACK_USAGE("trace_panic_handler", 0),
STACK_USAGE("trace_die_handler", 0),
STACK_USAGE("tracing_on", 0),
STACK_USAGE("trace_printk_seq", 16),
STACK_USAGE("trace_init_global_iter", 8),
STACK_USAGE("ftrace_dump", 48),
STACK_USAGE("trace_parse_run_command", 64),
STACK_USAGE("dummy_set_flag", 0),
STACK_USAGE("trace_boot_add_kprobe_event", 392),
STACK_USAGE("xbc_node_get_subkey", 0),
STACK_USAGE("trace_boot_set_instance_options", 344),
STACK_USAGE("trace_boot_init_one_event", 312),
STACK_USAGE("trace_boot_init_events", 48),
STACK_USAGE("trace_boot_set_ftrace_filter", 56),
STACK_USAGE("trace_boot_enable_tracer", 24),
STACK_USAGE("trace_boot_init_one_instance", 16),
STACK_USAGE("trace_boot_init_instances", 24),
STACK_USAGE("trace_boot_init", 8),
STACK_USAGE("trace_boot_enable_events", 312),
STACK_USAGE("trace_clock_counter", 0),
STACK_USAGE("trace_clock_local", 0),
STACK_USAGE("trace_clock", 0),
STACK_USAGE("trace_clock_jiffies", 0),
STACK_USAGE("trace_clock_global", 32),
STACK_USAGE("create_dyn_event", 32),
STACK_USAGE("dyn_event_seq_start", 8),
STACK_USAGE("dyn_event_seq_next", 0),
STACK_USAGE("dyn_event_seq_stop", 0),
STACK_USAGE("dyn_event_seq_show", 0),
STACK_USAGE("dyn_events_release_all", 32),
STACK_USAGE("dyn_event_open", 32),
STACK_USAGE("trace_event_dyn_try_get_ref", 16),
STACK_USAGE("dyn_event_write", 0),
STACK_USAGE("init_dynamic_event", 0),
STACK_USAGE("dynevent_arg_add", 16),
STACK_USAGE("dynevent_arg_pair_add", 16),
STACK_USAGE("dynevent_str_add", 8),
STACK_USAGE("dynevent_cmd_init", 0),
STACK_USAGE("trace_event_dyn_put_ref", 0),
STACK_USAGE("dynevent_arg_init", 0),
STACK_USAGE("dynevent_arg_pair_init", 0),
STACK_USAGE("dynevent_create", 0),
STACK_USAGE("trace_event_dyn_busy", 0),
STACK_USAGE("dyn_event_register", 16),
STACK_USAGE("dyn_event_release", 80),
STACK_USAGE("eprobe_dyn_event_release", 32),
STACK_USAGE("eprobe_dyn_event_is_busy", 0),
STACK_USAGE("eprobe_dyn_event_match", 48),
STACK_USAGE("alloc_event_probe", 48),
STACK_USAGE("is_good_name", 0),
STACK_USAGE("eprobe_event_define_fields", 0),
STACK_USAGE("print_eprobe_event", 88),
STACK_USAGE("process_fetch_insn", 104),
STACK_USAGE("trace_event_probe_cleanup", 8),
STACK_USAGE("eprobe_trigger_init", 0),
STACK_USAGE("eprobe_trigger_free", 0),
STACK_USAGE("eprobe_trigger_print", 0),
STACK_USAGE("eprobe_trigger_func", 200),
STACK_USAGE("eprobe_trigger_cmd_parse", 0),
STACK_USAGE("eprobe_trigger_reg_func", 0),
STACK_USAGE("eprobe_trigger_unreg_func", 0),
STACK_USAGE("eprobe_trigger_get_ops", 0),
STACK_USAGE("eprobe_dyn_event_create", 0),
STACK_USAGE("eprobe_dyn_event_show", 32),
STACK_USAGE("disable_eprobe", 24),
STACK_USAGE("eprobe_register", 64),
STACK_USAGE("dyn_event_add", 16),
STACK_USAGE("find_and_get_event", 48),
STACK_USAGE("__trace_eprobe_create", 264),
STACK_USAGE("trace_events_eprobe_init_early", 8),
STACK_USAGE("perf_trace_event_unreg", 8),
STACK_USAGE("perf_trace_event_init", 32),
STACK_USAGE("perf_trace_init", 40),
STACK_USAGE("perf_trace_destroy", 8),
STACK_USAGE("perf_kprobe_init", 40),
STACK_USAGE("perf_kprobe_destroy", 8),
STACK_USAGE("perf_uprobe_init", 32),
STACK_USAGE("perf_uprobe_destroy", 8),
STACK_USAGE("perf_trace_add", 24),
STACK_USAGE("perf_trace_del", 8),
STACK_USAGE("perf_trace_buf_alloc", 32),
STACK_USAGE("perf_trace_buf_update", 32),
STACK_USAGE("perf_ftrace_function_call", 240),
STACK_USAGE("perf_ftrace_event_register", 16),
STACK_USAGE("__ftrace_set_clr_event_nolock", 72),
STACK_USAGE("ftrace_set_clr_event", 56),
STACK_USAGE("trace_set_clr_event", 32),
STACK_USAGE("trace_array_set_clr_event", 32),
STACK_USAGE("ftrace_event_write", 72),
STACK_USAGE("t_next", 0),
STACK_USAGE("t_start", 40),
STACK_USAGE("s_next", 0),
STACK_USAGE("s_start", 40),
STACK_USAGE("t_show", 24),
STACK_USAGE("t_stop", 0),
STACK_USAGE("p_next", 24),
STACK_USAGE("np_next", 24),
STACK_USAGE("__start", 24),
STACK_USAGE("p_start", 0),
STACK_USAGE("np_start", 0),
STACK_USAGE("p_stop", 0),
STACK_USAGE("event_enable_read", 48),
STACK_USAGE("event_enable_write", 48),
STACK_USAGE("system_enable_read", 72),
STACK_USAGE("trace_define_field", 56),
STACK_USAGE("system_enable_write", 80),
STACK_USAGE("f_next", 16),
STACK_USAGE("f_show", 32),
STACK_USAGE("f_start", 40),
STACK_USAGE("f_stop", 0),
STACK_USAGE("trace_format_open", 8),
STACK_USAGE("event_id_read", 88),
STACK_USAGE("event_filter_read", 48),
STACK_USAGE("event_filter_write", 40),
STACK_USAGE("subsystem_open", 48),
STACK_USAGE("system_tr_open", 32),
STACK_USAGE("subsystem_release", 8),
STACK_USAGE("subsystem_filter_read", 40),
STACK_USAGE("subsystem_filter_write", 40),
STACK_USAGE("show_header", 40),
STACK_USAGE("ignore_task_cpu", 16),
STACK_USAGE("event_pid_write", 72),
STACK_USAGE("ftrace_event_pid_write", 0),
STACK_USAGE("ftrace_event_npid_write", 0),
STACK_USAGE("trace_event_get_offsets", 0),
STACK_USAGE("ftrace_event_release", 16),
STACK_USAGE("ftrace_event_avail_open", 16),
STACK_USAGE("ftrace_event_set_open", 40),
STACK_USAGE("ftrace_event_set_pid_open", 32),
STACK_USAGE("ftrace_event_set_npid_open", 32),
STACK_USAGE("event_define_fields", 72),
STACK_USAGE("event_create_dir", 72),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("trace_event_eval_update", 152),
STACK_USAGE("trace_create_new_event", 56),
STACK_USAGE("trace_add_event_call", 32),
STACK_USAGE("__trace_remove_event_call", 40),
STACK_USAGE("trace_remove_event_call", 16),
STACK_USAGE("trace_module_notify", 48),
STACK_USAGE("__find_event_file", 40),
STACK_USAGE("find_event_file", 48),
STACK_USAGE("trace_get_event_file", 64),
STACK_USAGE("trace_put_event_file", 8),
STACK_USAGE("event_enable_probe", 0),
STACK_USAGE("event_enable_count_probe", 0),
STACK_USAGE("event_enable_print", 24),
STACK_USAGE("event_enable_init", 24),
STACK_USAGE("free_probe_data", 8),
STACK_USAGE("event_enable_free", 8),
STACK_USAGE("event_enable_func", 96),
STACK_USAGE("register_event_cmds", 0),
STACK_USAGE("__trace_early_add_event_dirs", 24),
STACK_USAGE("__trace_early_add_events", 24),
STACK_USAGE("setup_trace_event", 0),
STACK_USAGE("create_event_toplevel_files", 24),
STACK_USAGE("event_trace_add_tracer", 32),
STACK_USAGE("early_event_add_tracer", 16),
STACK_USAGE("event_trace_del_tracer", 24),
STACK_USAGE("event_trace_memsetup", 0),
STACK_USAGE("early_enable_events", 48),
STACK_USAGE("event_trace_enable", 40),
STACK_USAGE("event_trace_enable_again", 0),
STACK_USAGE("event_trace_init_fields", 8),
STACK_USAGE("event_trace_init", 8),
STACK_USAGE("trace_event_init", 0),
STACK_USAGE("trace_event_put_ref", 0),
STACK_USAGE("trace_event_raw_init", 104),
STACK_USAGE("trace_event_ignore_this_pid", 8),
STACK_USAGE("trace_event_buffer_reserve", 56),
STACK_USAGE("trace_event_reg", 0),
STACK_USAGE("trace_event_enable_cmd_record", 40),
STACK_USAGE("trace_event_enable_tgid_record", 40),
STACK_USAGE("__ftrace_event_enable_disable", 56),
STACK_USAGE("trace_event_enable_disable", 0),
STACK_USAGE("event_filter_pid_sched_process_exit", 16),
STACK_USAGE("event_filter_pid_sched_process_fork", 32),
STACK_USAGE("trace_event_follow_fork", 8),
STACK_USAGE("event_filter_pid_sched_switch_probe_pre", 40),
STACK_USAGE("event_filter_pid_sched_switch_probe_post", 32),
STACK_USAGE("event_filter_pid_sched_wakeup_probe_pre", 32),
STACK_USAGE("event_filter_pid_sched_wakeup_probe_post", 24),
STACK_USAGE("__ftrace_clear_event_pids", 40),
STACK_USAGE("__put_system", 16),
STACK_USAGE("put_system", 8),
STACK_USAGE("remove_event_file_dir", 24),
STACK_USAGE("trace_find_event_field", 24),
STACK_USAGE("append_filter_err", 56),
STACK_USAGE("print_event_filter", 0),
STACK_USAGE("print_subsystem_event_filter", 16),
STACK_USAGE("free_event_filter", 24),
STACK_USAGE("filter_assign_type", 8),
STACK_USAGE("select_comparison_fn", 0),
STACK_USAGE("process_preds", 280),
STACK_USAGE("create_filter_start", 48),
STACK_USAGE("create_event_filter", 72),
STACK_USAGE("apply_event_filter", 80),
STACK_USAGE("apply_subsystem_event_filter", 112),
STACK_USAGE("ftrace_profile_free_filter", 24),
STACK_USAGE("ftrace_profile_set_filter", 120),
STACK_USAGE("filter_pred_BAND_s64", 0),
STACK_USAGE("filter_pred_GE_s64", 0),
STACK_USAGE("filter_pred_GT_s64", 0),
STACK_USAGE("filter_pred_LE_s64", 0),
STACK_USAGE("filter_pred_LT_s64", 0),
STACK_USAGE("filter_pred_BAND_u64", 0),
STACK_USAGE("filter_pred_GE_u64", 0),
STACK_USAGE("filter_pred_GT_u64", 0),
STACK_USAGE("filter_pred_LE_u64", 0),
STACK_USAGE("filter_pred_LT_u64", 0),
STACK_USAGE("filter_pred_BAND_s32", 0),
STACK_USAGE("filter_pred_GE_s32", 0),
STACK_USAGE("filter_pred_GT_s32", 0),
STACK_USAGE("filter_pred_LE_s32", 0),
STACK_USAGE("filter_pred_LT_s32", 0),
STACK_USAGE("filter_pred_BAND_u32", 0),
STACK_USAGE("filter_pred_GE_u32", 0),
STACK_USAGE("filter_pred_GT_u32", 0),
STACK_USAGE("filter_pred_LE_u32", 0),
STACK_USAGE("filter_pred_LT_u32", 0),
STACK_USAGE("filter_pred_BAND_s16", 0),
STACK_USAGE("filter_pred_GE_s16", 0),
STACK_USAGE("filter_pred_GT_s16", 0),
STACK_USAGE("filter_pred_LE_s16", 0),
STACK_USAGE("filter_pred_LT_s16", 0),
STACK_USAGE("filter_pred_BAND_u16", 0),
STACK_USAGE("filter_pred_GE_u16", 0),
STACK_USAGE("filter_pred_GT_u16", 0),
STACK_USAGE("filter_pred_LE_u16", 0),
STACK_USAGE("filter_pred_LT_u16", 0),
STACK_USAGE("filter_pred_BAND_s8", 0),
STACK_USAGE("filter_pred_GE_s8", 0),
STACK_USAGE("filter_pred_GT_s8", 0),
STACK_USAGE("filter_pred_LE_s8", 0),
STACK_USAGE("filter_pred_LT_s8", 0),
STACK_USAGE("filter_pred_BAND_u8", 0),
STACK_USAGE("filter_pred_GE_u8", 0),
STACK_USAGE("filter_pred_GT_u8", 0),
STACK_USAGE("filter_pred_LE_u8", 0),
STACK_USAGE("filter_pred_LT_u8", 0),
STACK_USAGE("filter_pred_64", 0),
STACK_USAGE("filter_pred_32", 0),
STACK_USAGE("filter_pred_16", 0),
STACK_USAGE("filter_pred_8", 0),
STACK_USAGE("filter_pred_string", 8),
STACK_USAGE("filter_pred_pchar", 32),
STACK_USAGE("filter_pred_pchar_user", 32),
STACK_USAGE("filter_pred_strloc", 8),
STACK_USAGE("filter_pred_strrelloc", 8),
STACK_USAGE("filter_pred_cpu", 0),
STACK_USAGE("filter_pred_comm", 8),
STACK_USAGE("filter_pred_none", 0),
STACK_USAGE("regex_match_full", 0),
STACK_USAGE("regex_match_front", 0),
STACK_USAGE("regex_match_middle", 0),
STACK_USAGE("regex_match_end", 0),
STACK_USAGE("regex_match_glob", 0),
STACK_USAGE("filter_parse_regex", 56),
STACK_USAGE("filter_match_preds", 40),
STACK_USAGE("set_trigger_filter", 48),
STACK_USAGE("event_triggers_post_call", 24),
STACK_USAGE("find_named_trigger", 32),
STACK_USAGE("is_named_trigger", 0),
STACK_USAGE("save_named_trigger", 8),
STACK_USAGE("del_named_trigger", 8),
STACK_USAGE("pause_named_trigger", 24),
STACK_USAGE("unpause_named_trigger", 24),
STACK_USAGE("set_named_trigger_data", 0),
STACK_USAGE("get_named_trigger_data", 0),
STACK_USAGE("traceon_trigger", 8),
STACK_USAGE("trigger_next", 0),
STACK_USAGE("traceon_count_trigger", 16),
STACK_USAGE("traceoff_trigger", 8),
STACK_USAGE("traceoff_count_trigger", 16),
STACK_USAGE("traceon_trigger_print", 24),
STACK_USAGE("traceoff_trigger_print", 24),
STACK_USAGE("onoff_get_trigger_ops", 8),
STACK_USAGE("trigger_start", 16),
STACK_USAGE("stacktrace_trigger", 24),
STACK_USAGE("stacktrace_count_trigger", 24),
STACK_USAGE("stacktrace_trigger_print", 24),
STACK_USAGE("stacktrace_get_trigger_ops", 0),
STACK_USAGE("event_enable_trigger", 0),
STACK_USAGE("event_enable_count_trigger", 0),
STACK_USAGE("trigger_stop", 0),
STACK_USAGE("event_enable_trigger_print", 16),
STACK_USAGE("event_enable_trigger_free", 16),
STACK_USAGE("trigger_show", 24),
STACK_USAGE("event_enable_trigger_parse", 96),
STACK_USAGE("event_enable_register_trigger", 40),
STACK_USAGE("event_enable_unregister_trigger", 40),
STACK_USAGE("event_enable_get_trigger_ops", 8),
STACK_USAGE("register_trigger_enable_disable_cmds", 0),
STACK_USAGE("register_trigger_traceon_traceoff_cmds", 0),
STACK_USAGE("register_trigger_cmds", 0),
STACK_USAGE("trigger_data_free", 8),
STACK_USAGE("trigger_process_regex", 56),
STACK_USAGE("event_trigger_write", 40),
STACK_USAGE("event_trigger_open", 32),
STACK_USAGE("event_trigger_release", 16),
STACK_USAGE("register_event_command", 24),
STACK_USAGE("unregister_event_command", 32),
STACK_USAGE("trace_event_try_get_ref", 0),
STACK_USAGE("trace_event_put_ref", 0),
STACK_USAGE("event_trigger_init", 0),
STACK_USAGE("event_trigger_free", 8),
STACK_USAGE("trace_event_trigger_enable_disable", 0),
STACK_USAGE("clear_event_triggers", 48),
STACK_USAGE("update_cond_flag", 8),
STACK_USAGE("register_trigger", 40),
STACK_USAGE("event_triggers_call", 64),
STACK_USAGE("unregister_trigger", 32),
STACK_USAGE("event_trigger_check_remove", 0),
STACK_USAGE("event_trigger_empty_param", 0),
STACK_USAGE("event_trigger_separate_filter", 32),
STACK_USAGE("event_trigger_alloc", 24),
STACK_USAGE("event_trigger_parse_num", 24),
STACK_USAGE("__trace_trigger_soft_disabled", 32),
STACK_USAGE("event_trigger_set_filter", 0),
STACK_USAGE("event_trigger_reset_filter", 0),
STACK_USAGE("event_trigger_register", 40),
STACK_USAGE("event_trigger_parse", 72),
STACK_USAGE("ftrace_event_is_function", 0),
STACK_USAGE("ftrace_event_register", 0),
STACK_USAGE("function_trace_init", 24),
STACK_USAGE("function_trace_reset", 8),
STACK_USAGE("function_trace_start", 0),
STACK_USAGE("function_trace_call", 64),
STACK_USAGE("function_stack_trace_call", 72),
STACK_USAGE("function_no_repeats_trace_call", 72),
STACK_USAGE("function_stack_no_repeats_trace_call", 88),
STACK_USAGE("func_set_flag", 32),
STACK_USAGE("ftrace_traceon_count", 24),
STACK_USAGE("ftrace_traceoff_count", 24),
STACK_USAGE("ftrace_traceon", 8),
STACK_USAGE("ftrace_allocate_ftrace_ops", 16),
STACK_USAGE("ftrace_traceoff", 8),
STACK_USAGE("ftrace_stacktrace", 24),
STACK_USAGE("ftrace_stacktrace_count", 40),
STACK_USAGE("ftrace_dump_probe", 0),
STACK_USAGE("ftrace_cpudump_probe", 0),
STACK_USAGE("ftrace_traceon_print", 24),
STACK_USAGE("ftrace_traceoff_print", 24),
STACK_USAGE("ftrace_stacktrace_print", 24),
STACK_USAGE("ftrace_dump_print", 24),
STACK_USAGE("ftrace_cpudump_print", 24),
STACK_USAGE("ftrace_count_init", 24),
STACK_USAGE("ftrace_count_free", 0),
STACK_USAGE("ftrace_free_ftrace_ops", 8),
STACK_USAGE("ftrace_create_function_files", 8),
STACK_USAGE("ftrace_trace_onoff_callback", 64),
STACK_USAGE("ftrace_stacktrace_callback", 56),
STACK_USAGE("ftrace_dump_callback", 40),
STACK_USAGE("ftrace_cpudump_callback", 40),
STACK_USAGE("init_func_cmd_traceon", 0),
STACK_USAGE("init_function_trace", 0),
STACK_USAGE("ftrace_destroy_function_files", 8),
STACK_USAGE("print_graph_function_flags", 104),
STACK_USAGE("print_graph_function", 0),
STACK_USAGE("print_graph_function_event", 0),
STACK_USAGE("print_graph_headers", 0),
STACK_USAGE("print_graph_headers_flags", 40),
STACK_USAGE("graph_trace_open", 40),
STACK_USAGE("graph_trace_close", 8),
STACK_USAGE("func_graph_set_flag", 0),
STACK_USAGE("trace_graph_entry", 72),
STACK_USAGE("graph_depth_write", 32),
STACK_USAGE("graph_depth_read", 56),
STACK_USAGE("init_graph_tracefs", 0),
STACK_USAGE("init_graph_trace", 0),
STACK_USAGE("trace_graph_function", 48),
STACK_USAGE("__trace_graph_return", 24),
STACK_USAGE("trace_graph_return", 72),
STACK_USAGE("set_graph_array", 0),
STACK_USAGE("trace_graph_thresh_return", 0),
STACK_USAGE("graph_trace_init", 8),
STACK_USAGE("graph_trace_reset", 0),
STACK_USAGE("graph_trace_update_thresh", 24),
STACK_USAGE("print_graph_proc", 88),
STACK_USAGE("print_graph_irq", 64),
STACK_USAGE("trace_print_graph_duration", 88),
STACK_USAGE("print_graph_duration", 16),
STACK_USAGE("print_graph_prologue", 88),
STACK_USAGE("print_graph_entry", 72),
STACK_USAGE("__trace_graph_entry", 32),
STACK_USAGE("__kprobe_event_add_fields", 120),
STACK_USAGE("kprobe_event_delete", 88),
STACK_USAGE("trace_kprobe_release", 24),
STACK_USAGE("trace_kprobe_show", 32),
STACK_USAGE("probes_seq_show", 0),
STACK_USAGE("probes_open", 8),
STACK_USAGE("probes_write", 0),
STACK_USAGE("probes_profile_seq_show", 48),
STACK_USAGE("profile_open", 8),
STACK_USAGE("process_fetch_insn", 104),
STACK_USAGE("trace_kprobe_is_busy", 0),
STACK_USAGE("kprobe_trace_func", 144),
STACK_USAGE("kretprobe_trace_func", 152),
STACK_USAGE("print_kprobe_event", 88),
STACK_USAGE("print_kretprobe_event", 88),
STACK_USAGE("kprobe_event_define_fields", 16),
STACK_USAGE("kretprobe_event_define_fields", 16),
STACK_USAGE("kprobe_perf_func", 120),
STACK_USAGE("kretprobe_perf_func", 120),
STACK_USAGE("trace_kprobe_match", 120),
STACK_USAGE("bpf_get_kprobe_info", 80),
STACK_USAGE("kprobe_register", 24),
STACK_USAGE("kprobe_dispatcher", 24),
STACK_USAGE("kretprobe_dispatcher", 32),
STACK_USAGE("create_local_trace_kprobe", 24),
STACK_USAGE("destroy_local_trace_kprobe", 32),
STACK_USAGE("enable_boot_kprobe_events", 40),
STACK_USAGE("setup_boot_kprobe_events", 16),
STACK_USAGE("init_kprobe_trace_early", 0),
STACK_USAGE("init_kprobe_trace", 0),
STACK_USAGE("trace_kprobe_on_func_entry", 0),
STACK_USAGE("trace_kprobe_error_injectable", 8),
STACK_USAGE("alloc_trace_kprobe", 64),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("set_kprobe_boot_events", 0),
STACK_USAGE("enable_trace_kprobe", 40),
STACK_USAGE("disable_trace_kprobe", 24),
STACK_USAGE("__register_trace_kprobe", 200),
STACK_USAGE("register_trace_kprobe", 80),
STACK_USAGE("trace_kprobe_module_callback", 48),
STACK_USAGE("__trace_kprobe_create", 200),
STACK_USAGE("trace_kprobe_create", 0),
STACK_USAGE("create_or_delete_trace_kprobe", 0),
STACK_USAGE("trace_kprobe_run_command", 0),
STACK_USAGE("kprobe_event_cmd_init", 0),
STACK_USAGE("__kprobe_event_gen_cmd_start", 200),
STACK_USAGE("nop_trace_init", 0),
STACK_USAGE("nop_trace_reset", 0),
STACK_USAGE("nop_set_flag", 8),
STACK_USAGE("trace_ctxwake_hex", 32),
STACK_USAGE("trace_ctx_hex", 0),
STACK_USAGE("trace_wake_hex", 0),
STACK_USAGE("trace_ctxwake_bin", 16),
STACK_USAGE("trace_print_symbols_seq", 24),
STACK_USAGE("trace_stack_print", 48),
STACK_USAGE("trace_user_stack_print", 96),
STACK_USAGE("trace_hwlat_print", 16),
STACK_USAGE("trace_hwlat_raw", 8),
STACK_USAGE("trace_osnoise_print", 16),
STACK_USAGE("trace_osnoise_raw", 16),
STACK_USAGE("trace_timerlat_print", 8),
STACK_USAGE("trace_timerlat_raw", 8),
STACK_USAGE("trace_bputs_print", 16),
STACK_USAGE("trace_bputs_raw", 16),
STACK_USAGE("trace_bprint_print", 16),
STACK_USAGE("trace_bprint_raw", 16),
STACK_USAGE("trace_print_print", 16),
STACK_USAGE("trace_print_raw", 8),
STACK_USAGE("trace_raw_data", 32),
STACK_USAGE("trace_func_repeats_raw", 8),
STACK_USAGE("trace_func_repeats_print", 40),
STACK_USAGE("init_events", 16),
STACK_USAGE("trace_print_bitmask_seq", 16),
STACK_USAGE("trace_print_hex_seq", 64),
STACK_USAGE("trace_print_array_seq", 48),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("trace_print_bputs_msg_only", 8),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("trace_print_hex_dump_seq", 56),
STACK_USAGE("trace_raw_output_prep", 8),
STACK_USAGE("trace_event_printf", 104),
STACK_USAGE("trace_output_call", 120),
STACK_USAGE("trace_seq_print_sym", 328),
STACK_USAGE("trace_print_bprintk_msg_only", 8),
STACK_USAGE("seq_print_ip_sym", 328),
STACK_USAGE("trace_print_lat_fmt", 16),
STACK_USAGE("trace_print_printk_msg_only", 8),
STACK_USAGE("trace_find_mark", 0),
STACK_USAGE("trace_print_context", 72),
STACK_USAGE("trace_print_lat_context", 88),
STACK_USAGE("trace_print_flags_seq", 80),
STACK_USAGE("ftrace_find_event", 0),
STACK_USAGE("trace_event_read_lock", 0),
STACK_USAGE("trace_event_read_unlock", 0),
STACK_USAGE("register_trace_event", 8),
STACK_USAGE("__unregister_trace_event", 0),
STACK_USAGE("unregister_trace_event", 8),
STACK_USAGE("trace_nop_print", 8),
STACK_USAGE("trace_fn_trace", 24),
STACK_USAGE("trace_fn_raw", 8),
STACK_USAGE("trace_fn_hex", 16),
STACK_USAGE("trace_fn_bin", 16),
STACK_USAGE("trace_ctx_print", 72),
STACK_USAGE("trace_wake_print", 72),
STACK_USAGE("trace_ctx_raw", 8),
STACK_USAGE("trace_wake_raw", 8),
STACK_USAGE("trace_hardirqs_off_caller", 16),
STACK_USAGE("__bpf_trace_preemptirq_template", 0),
STACK_USAGE("perf_trace_preemptirq_template", 64),
STACK_USAGE("trace_event_raw_event_preemptirq_template", 80),
STACK_USAGE("trace_raw_output_preemptirq_template", 24),
STACK_USAGE("trace_hardirqs_on_prepare", 0),
STACK_USAGE("__traceiter_irq_disable", 24),
STACK_USAGE("trace_irq_disable_rcuidle", 24),
STACK_USAGE("__traceiter_irq_enable", 24),
STACK_USAGE("trace_hardirqs_on", 8),
STACK_USAGE("trace_irq_enable_rcuidle", 24),
STACK_USAGE("trace_hardirqs_off_finish", 0),
STACK_USAGE("trace_hardirqs_off", 8),
STACK_USAGE("trace_hardirqs_on_caller", 8),
STACK_USAGE("trace_printk_control", 0),
STACK_USAGE("__trace_bprintk", 88),
STACK_USAGE("__ftrace_vbprintk", 0),
STACK_USAGE("__trace_printk", 88),
STACK_USAGE("__ftrace_vprintk", 0),
STACK_USAGE("trace_is_tracepoint_string", 0),
STACK_USAGE("t_start", 8),
STACK_USAGE("t_next", 0),
STACK_USAGE("t_show", 24),
STACK_USAGE("t_stop", 0),
STACK_USAGE("ftrace_formats_open", 8),
STACK_USAGE("init_trace_printk_function_export", 0),
STACK_USAGE("init_trace_printk", 0),
STACK_USAGE("module_trace_bprintk_format_notify", 48),
STACK_USAGE("trace_probe_unlink", 16),
STACK_USAGE("trace_probe_cleanup", 24),
STACK_USAGE("find_fetch_type", 24),
STACK_USAGE("trace_probe_init", 32),
STACK_USAGE("trace_probe_register_event_call", 40),
STACK_USAGE("trace_probe_add_file", 16),
STACK_USAGE("trace_probe_get_file_link", 0),
STACK_USAGE("trace_probe_remove_file", 16),
STACK_USAGE("trace_probe_compare_arg_type", 40),
STACK_USAGE("trace_probe_match_command_args", 120),
STACK_USAGE("trace_probe_create", 40),
STACK_USAGE("trace_probe_log_init", 0),
STACK_USAGE("trace_probe_log_clear", 0),
STACK_USAGE("trace_probe_log_set_index", 0),
STACK_USAGE("__trace_probe_log_err", 88),
STACK_USAGE("traceprobe_split_symbol_offset", 16),
STACK_USAGE("traceprobe_parse_event_name", 56),
STACK_USAGE("parse_probe_arg", 88),
STACK_USAGE("print_type_u8", 8),
STACK_USAGE("print_type_u16", 8),
STACK_USAGE("print_type_u32", 8),
STACK_USAGE("print_type_u64", 8),
STACK_USAGE("print_type_s8", 8),
STACK_USAGE("print_type_s16", 8),
STACK_USAGE("print_type_s32", 8),
STACK_USAGE("print_type_s64", 8),
STACK_USAGE("print_type_x8", 8),
STACK_USAGE("print_type_x16", 8),
STACK_USAGE("print_type_x32", 8),
STACK_USAGE("__parse_bitfield_probe_arg", 64),
STACK_USAGE("print_type_x64", 8),
STACK_USAGE("print_type_symbol", 8),
STACK_USAGE("print_type_string", 8),
STACK_USAGE("traceprobe_parse_probe_arg", 96),
STACK_USAGE("traceprobe_free_probe_arg", 16),
STACK_USAGE("traceprobe_update_arg", 64),
STACK_USAGE("__set_print_fmt", 96),
STACK_USAGE("traceprobe_set_print_fmt", 48),
STACK_USAGE("traceprobe_define_arg_fields", 40),
STACK_USAGE("trace_probe_append", 24),
STACK_USAGE("tracing_start_cmdline_record", 0),
STACK_USAGE("tracing_stop_cmdline_record", 0),
STACK_USAGE("tracing_start_tgid_record", 0),
STACK_USAGE("tracing_stop_tgid_record", 0),
STACK_USAGE("probe_sched_switch", 0),
STACK_USAGE("probe_sched_wakeup", 0),
STACK_USAGE("tracing_start_sched_switch", 8),
STACK_USAGE("trace_seq_bitmask", 16),
STACK_USAGE("trace_seq_vprintf", 16),
STACK_USAGE("trace_seq_bprintf", 16),
STACK_USAGE("trace_seq_puts", 16),
STACK_USAGE("trace_seq_putc", 0),
STACK_USAGE("trace_seq_putmem", 0),
STACK_USAGE("trace_seq_putmem_hex", 24),
STACK_USAGE("trace_seq_path", 24),
STACK_USAGE("trace_seq_to_user", 0),
STACK_USAGE("trace_seq_hex_dump", 24),
STACK_USAGE("trace_print_seq", 8),
STACK_USAGE("trace_seq_printf", 104),
STACK_USAGE("dummy_cmp", 0),
STACK_USAGE("stat_seq_start", 16),
STACK_USAGE("stat_seq_next", 0),
STACK_USAGE("stat_seq_stop", 0),
STACK_USAGE("stat_seq_show", 0),
STACK_USAGE("tracing_stat_open", 80),
STACK_USAGE("tracing_stat_release", 56),
STACK_USAGE("register_stat_tracer", 24),
STACK_USAGE("unregister_stat_tracer", 8),
STACK_USAGE("destroy_session", 24),
STACK_USAGE("get_syscall_name", 0),
STACK_USAGE("print_syscall_enter", 48),
STACK_USAGE("event_trigger_unlock_commit", 48),
STACK_USAGE("print_syscall_exit", 8),
STACK_USAGE("__set_enter_print_fmt", 48),
STACK_USAGE("set_syscall_print_fmt", 32),
STACK_USAGE("syscall_get_enter_fields", 0),
STACK_USAGE("syscall_enter_define_fields", 32),
STACK_USAGE("ftrace_syscall_enter", 136),
STACK_USAGE("ftrace_syscall_exit", 56),
STACK_USAGE("init_syscall_trace", 16),
STACK_USAGE("arch_syscall_addr", 0),
STACK_USAGE("init_ftrace_syscalls", 8),
STACK_USAGE("perf_syscall_enter", 216),
STACK_USAGE("perf_syscall_exit", 96),
STACK_USAGE("syscall_enter_register", 32),
STACK_USAGE("syscall_exit_register", 32),
STACK_USAGE("find_syscall_meta", 344),
STACK_USAGE("print_uprobe_event", 88),
STACK_USAGE("probe_event_enable", 48),
STACK_USAGE("probe_event_disable", 16),
STACK_USAGE("uprobe_event_define_fields", 16),
STACK_USAGE("uprobe_perf_close", 40),
STACK_USAGE("uprobe_perf_filter", 32),
STACK_USAGE("__uprobe_perf_func", 104),
STACK_USAGE("bpf_get_uprobe_info", 72),
STACK_USAGE("trace_uprobe_register", 56),
STACK_USAGE("uprobe_dispatcher", 136),
STACK_USAGE("uretprobe_dispatcher", 136),
STACK_USAGE("create_local_trace_uprobe", 72),
STACK_USAGE("destroy_local_trace_uprobe", 16),
STACK_USAGE("init_uprobe_trace", 8),
STACK_USAGE("process_fetch_insn", 104),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("trace_uprobe_is_busy", 0),
STACK_USAGE("trace_uprobe_match", 136),
STACK_USAGE("alloc_trace_uprobe", 32),
STACK_USAGE("free_trace_uprobe", 8),
STACK_USAGE("register_trace_uprobe", 80),
STACK_USAGE("__trace_uprobe_create", 184),
STACK_USAGE("trace_uprobe_create", 0),
STACK_USAGE("create_or_delete_trace_uprobe", 0),
STACK_USAGE("trace_uprobe_release", 24),
STACK_USAGE("trace_uprobe_show", 32),
STACK_USAGE("probes_seq_show", 0),
STACK_USAGE("probes_open", 8),
STACK_USAGE("probes_write", 0),
STACK_USAGE("probes_profile_seq_show", 0),
STACK_USAGE("profile_open", 8),
STACK_USAGE("uprobe_buffer_disable", 8),
STACK_USAGE("__uprobe_trace_func", 112),
STACK_USAGE("tp_stub_func", 0),
STACK_USAGE("srcu_free_old_probes", 0),
STACK_USAGE("rcu_free_old_probes", 0),
STACK_USAGE("release_early_probes", 0),
STACK_USAGE("tracepoint_add_func", 56),
STACK_USAGE("tracepoint_probe_register_prio_may_exist", 64),
STACK_USAGE("tracepoint_probe_register_prio", 64),
STACK_USAGE("tracepoint_probe_register", 56),
STACK_USAGE("tracepoint_probe_unregister", 48),
STACK_USAGE("trace_module_has_bad_taint", 0),
STACK_USAGE("register_tracepoint_module_notifier", 32),
STACK_USAGE("unregister_tracepoint_module_notifier", 32),
STACK_USAGE("tracepoint_module_notify", 24),
STACK_USAGE("init_tracepoints", 8),
STACK_USAGE("for_each_kernel_tracepoint", 40),
STACK_USAGE("syscall_regfunc", 0),
STACK_USAGE("syscall_unregfunc", 0),
STACK_USAGE("acct_update_integrals", 32),
STACK_USAGE("acct_account_cputime", 0),
STACK_USAGE("acct_clear_integrals", 0),
STACK_USAGE("bacct_add_tsk", 48),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("xacct_add_tsk", 16),
STACK_USAGE("retire_userns_sysctls", 16),
STACK_USAGE("get_ucounts", 0),
STACK_USAGE("alloc_ucounts", 40),
STACK_USAGE("put_ucounts", 24),
STACK_USAGE("inc_ucount", 8),
STACK_USAGE("dec_ucount", 0),
STACK_USAGE("inc_rlimit_ucounts", 0),
STACK_USAGE("dec_rlimit_ucounts", 0),
STACK_USAGE("dec_rlimit_put_ucounts", 16),
STACK_USAGE("set_lookup", 0),
STACK_USAGE("inc_rlimit_get_ucounts", 40),
STACK_USAGE("is_ucounts_overlimit", 0),
STACK_USAGE("set_is_seen", 0),
STACK_USAGE("user_namespace_sysctl_init", 16),
STACK_USAGE("set_permissions", 8),
STACK_USAGE("setup_userns_sysctls", 32),
STACK_USAGE("__ia32_sys_setfsuid16", 0),
STACK_USAGE("__x64_sys_setfsuid16", 0),
STACK_USAGE("__ia32_sys_setfsgid16", 0),
STACK_USAGE("__x64_sys_setfsgid16", 0),
STACK_USAGE("__ia32_sys_getgroups16", 0),
STACK_USAGE("__se_sys_getgroups16", 48),
STACK_USAGE("__x64_sys_getgroups16", 0),
STACK_USAGE("__ia32_sys_setgroups16", 0),
STACK_USAGE("__se_sys_setgroups16", 32),
STACK_USAGE("__x64_sys_setgroups16", 0),
STACK_USAGE("__do_sys_getuid16", 8),
STACK_USAGE("__do_sys_geteuid16", 8),
STACK_USAGE("__do_sys_getgid16", 8),
STACK_USAGE("__do_sys_getegid16", 8),
STACK_USAGE("__ia32_sys_chown16", 0),
STACK_USAGE("__x64_sys_chown16", 0),
STACK_USAGE("__ia32_sys_lchown16", 0),
STACK_USAGE("__x64_sys_lchown16", 0),
STACK_USAGE("__ia32_sys_fchown16", 0),
STACK_USAGE("__x64_sys_fchown16", 0),
STACK_USAGE("__ia32_sys_setregid16", 0),
STACK_USAGE("__x64_sys_setregid16", 0),
STACK_USAGE("__ia32_sys_setgid16", 0),
STACK_USAGE("__x64_sys_setgid16", 0),
STACK_USAGE("__ia32_sys_setreuid16", 0),
STACK_USAGE("__x64_sys_setreuid16", 0),
STACK_USAGE("__ia32_sys_setuid16", 0),
STACK_USAGE("__x64_sys_setuid16", 0),
STACK_USAGE("__ia32_sys_setresuid16", 0),
STACK_USAGE("__x64_sys_setresuid16", 0),
STACK_USAGE("__ia32_sys_getresuid16", 0),
STACK_USAGE("__se_sys_getresuid16", 56),
STACK_USAGE("__x64_sys_getresuid16", 0),
STACK_USAGE("__ia32_sys_setresgid16", 0),
STACK_USAGE("__x64_sys_setresgid16", 0),
STACK_USAGE("__ia32_sys_getresgid16", 0),
STACK_USAGE("__se_sys_getresgid16", 56),
STACK_USAGE("__x64_sys_getresgid16", 0),
STACK_USAGE("call_usermodehelper_exec_work", 8),
STACK_USAGE("usermodehelper_read_trylock", 72),
STACK_USAGE("usermodehelper_read_lock_wait", 64),
STACK_USAGE("usermodehelper_read_unlock", 0),
STACK_USAGE("__usermodehelper_set_disable_depth", 8),
STACK_USAGE("__usermodehelper_disable", 72),
STACK_USAGE("call_usermodehelper_setup", 48),
STACK_USAGE("call_usermodehelper_exec", 120),
STACK_USAGE("call_usermodehelper", 40),
STACK_USAGE("proc_cap_handler", 152),
STACK_USAGE("call_usermodehelper_exec_async", 24),
STACK_USAGE("user_return_notifier_register", 16),
STACK_USAGE("user_return_notifier_unregister", 0),
STACK_USAGE("fire_user_return_notifiers", 8),
STACK_USAGE("find_user", 32),
STACK_USAGE("free_uid", 24),
STACK_USAGE("alloc_uid", 48),
STACK_USAGE("uid_cache_init", 0),
STACK_USAGE("proc_uid_map_write", 0),
STACK_USAGE("proc_gid_map_write", 0),
STACK_USAGE("proc_projid_map_write", 0),
STACK_USAGE("new_idmap_permitted", 64),
STACK_USAGE("proc_setgroups_show", 0),
STACK_USAGE("proc_setgroups_write", 56),
STACK_USAGE("userns_may_setgroups", 16),
STACK_USAGE("in_userns", 0),
STACK_USAGE("current_in_userns", 0),
STACK_USAGE("userns_get", 8),
STACK_USAGE("userns_put", 0),
STACK_USAGE("userns_install", 32),
STACK_USAGE("ns_get_owner", 16),
STACK_USAGE("userns_owner", 0),
STACK_USAGE("user_namespaces_init", 0),
STACK_USAGE("unshare_userns", 24),
STACK_USAGE("free_user_ns", 24),
STACK_USAGE("__put_user_ns", 0),
STACK_USAGE("cmp_map_id", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("make_kuid", 32),
STACK_USAGE("from_kuid", 32),
STACK_USAGE("set_cred_user_ns", 16),
STACK_USAGE("from_kuid_munged", 32),
STACK_USAGE("make_kgid", 32),
STACK_USAGE("from_kgid", 32),
STACK_USAGE("from_kgid_munged", 32),
STACK_USAGE("make_kprojid", 32),
STACK_USAGE("from_kprojid", 32),
STACK_USAGE("from_kprojid_munged", 32),
STACK_USAGE("uid_m_show", 48),
STACK_USAGE("gid_m_show", 48),
STACK_USAGE("projid_m_show", 48),
STACK_USAGE("uid_m_start", 0),
STACK_USAGE("gid_m_start", 0),
STACK_USAGE("projid_m_start", 0),
STACK_USAGE("m_next", 0),
STACK_USAGE("m_stop", 0),
STACK_USAGE("cmp_extents_forward", 0),
STACK_USAGE("create_user_ns", 80),
STACK_USAGE("cmp_extents_reverse", 0),
STACK_USAGE("sort_idmaps", 16),
STACK_USAGE("map_write", 240),
STACK_USAGE("umd_cleanup", 8),
STACK_USAGE("umd_cleanup_helper", 8),
STACK_USAGE("fork_usermode_driver", 40),
STACK_USAGE("umd_load_blob", 80),
STACK_USAGE("umd_unload_blob", 8),
STACK_USAGE("umd_setup", 72),
STACK_USAGE("free_uts_ns", 8),
STACK_USAGE("utsns_get", 16),
STACK_USAGE("utsns_put", 0),
STACK_USAGE("utsns_install", 32),
STACK_USAGE("utsns_owner", 0),
STACK_USAGE("uts_ns_init", 0),
STACK_USAGE("copy_utsname", 48),
STACK_USAGE("uts_proc_notify", 0),
STACK_USAGE("utsname_sysctl_init", 0),
STACK_USAGE("proc_do_uts_string", 216),
STACK_USAGE("watchdog_nmi_disable", 0),
STACK_USAGE("watchdog_nmi_probe", 0),
STACK_USAGE("watchdog_nmi_stop", 0),
STACK_USAGE("watchdog_nmi_start", 0),
STACK_USAGE("nowatchdog_setup", 0),
STACK_USAGE("nosoftlockup_setup", 0),
STACK_USAGE("watchdog_thresh_setup", 16),
STACK_USAGE("update_report_ts", 0),
STACK_USAGE("touch_softlockup_watchdog_sched", 0),
STACK_USAGE("touch_softlockup_watchdog", 0),
STACK_USAGE("touch_all_softlockup_watchdogs", 0),
STACK_USAGE("touch_softlockup_watchdog_sync", 0),
STACK_USAGE("is_hardlockup", 16),
STACK_USAGE("softlockup_fn", 0),
STACK_USAGE("watchdog_timer_fn", 48),
STACK_USAGE("watchdog_enable", 24),
STACK_USAGE("watchdog_disable", 16),
STACK_USAGE("softlockup_stop_fn", 0),
STACK_USAGE("softlockup_start_fn", 0),
STACK_USAGE("lockup_detector_online_cpu", 0),
STACK_USAGE("lockup_detector_offline_cpu", 0),
STACK_USAGE("lockup_detector_reconfigure", 8),
STACK_USAGE("lockup_detector_setup", 0),
STACK_USAGE("lockup_detector_cleanup", 0),
STACK_USAGE("lockup_detector_soft_poweroff", 0),
STACK_USAGE("proc_watchdog_common", 56),
STACK_USAGE("proc_watchdog", 0),
STACK_USAGE("proc_nmi_watchdog", 0),
STACK_USAGE("proc_soft_watchdog", 0),
STACK_USAGE("hardlockup_detector_disable", 0),
STACK_USAGE("proc_watchdog_thresh", 48),
STACK_USAGE("proc_watchdog_cpumask", 40),
STACK_USAGE("hardlockup_panic_setup", 8),
STACK_USAGE("lockup_detector_init", 0),
STACK_USAGE("watchdog_nmi_enable", 0),
STACK_USAGE("watchdog_overflow_callback", 16),
STACK_USAGE("hardlockup_detector_perf_enable", 8),
STACK_USAGE("hardlockup_detector_perf_disable", 8),
STACK_USAGE("hardlockup_detector_perf_cleanup", 24),
STACK_USAGE("hardlockup_detector_perf_stop", 16),
STACK_USAGE("hardlockup_detector_perf_restart", 16),
STACK_USAGE("hardlockup_detector_perf_init", 8),
STACK_USAGE("arch_touch_nmi_watchdog", 0),
STACK_USAGE("watchdog_update_hrtimer_threshold", 0),
STACK_USAGE("__bpf_trace_workqueue_execute_end", 0),
STACK_USAGE("__traceiter_workqueue_execute_end", 24),
STACK_USAGE("perf_trace_workqueue_execute_end", 64),
STACK_USAGE("trace_event_raw_event_workqueue_execute_end", 80),
STACK_USAGE("trace_raw_output_workqueue_execute_end", 24),
STACK_USAGE("put_pwq_unlocked", 48),
STACK_USAGE("pwq_dec_nr_in_flight", 48),
STACK_USAGE("try_to_grab_pending", 64),
STACK_USAGE("insert_work", 16),
STACK_USAGE("is_chained_work", 8),
STACK_USAGE("__queue_work", 64),
STACK_USAGE("queue_work_on", 56),
STACK_USAGE("queue_work_node", 56),
STACK_USAGE("delayed_work_timer_fn", 0),
STACK_USAGE("__queue_delayed_work", 0),
STACK_USAGE("queue_delayed_work_on", 64),
STACK_USAGE("mod_delayed_work_on", 64),
STACK_USAGE("rcu_work_rcufn", 24),
STACK_USAGE("queue_rcu_work", 8),
STACK_USAGE("worker_enter_idle", 8),
STACK_USAGE("create_worker", 72),
STACK_USAGE("destroy_worker", 16),
STACK_USAGE("idle_worker_timeout", 24),
STACK_USAGE("pool_mayday_timeout", 56),
STACK_USAGE("process_one_work", 104),
STACK_USAGE("worker_thread", 64),
STACK_USAGE("__bpf_trace_workqueue_queue_work", 0),
STACK_USAGE("__traceiter_workqueue_queue_work", 32),
STACK_USAGE("perf_trace_workqueue_queue_work", 88),
STACK_USAGE("trace_event_raw_event_workqueue_queue_work", 104),
STACK_USAGE("trace_raw_output_workqueue_queue_work", 24),
STACK_USAGE("rescuer_thread", 112),
STACK_USAGE("check_flush_dependency", 24),
STACK_USAGE("wq_barrier_func", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("flush_workqueue_prep_pwqs", 56),
STACK_USAGE("flush_workqueue", 184),
STACK_USAGE("drain_workqueue", 56),
STACK_USAGE("start_flush_work", 48),
STACK_USAGE("__flush_work", 200),
STACK_USAGE("flush_work", 0),
STACK_USAGE("cwt_wakefn", 0),
STACK_USAGE("__cancel_work_timer", 232),
STACK_USAGE("cancel_work_sync", 0),
STACK_USAGE("flush_delayed_work", 24),
STACK_USAGE("flush_rcu_work", 8),
STACK_USAGE("cancel_delayed_work", 40),
STACK_USAGE("cancel_delayed_work_sync", 0),
STACK_USAGE("schedule_on_each_cpu", 72),
STACK_USAGE("execute_in_process_context", 40),
STACK_USAGE("free_workqueue_attrs", 0),
STACK_USAGE("alloc_workqueue_attrs", 0),
STACK_USAGE("init_worker_pool", 16),
STACK_USAGE("rcu_free_wq", 8),
STACK_USAGE("rcu_free_pool", 8),
STACK_USAGE("put_unbound_pool", 112),
STACK_USAGE("rcu_free_pwq", 0),
STACK_USAGE("pwq_unbound_release_workfn", 40),
STACK_USAGE("pwq_adjust_max_active", 72),
STACK_USAGE("alloc_unbound_pwq", 72),
STACK_USAGE("wq_calc_node_cpumask", 40),
STACK_USAGE("numa_pwq_tbl_install", 40),
STACK_USAGE("apply_wqattrs_cleanup", 40),
STACK_USAGE("apply_wqattrs_prepare", 96),
STACK_USAGE("apply_wqattrs_commit", 48),
STACK_USAGE("apply_workqueue_attrs", 16),
STACK_USAGE("wq_update_unbound_numa", 48),
STACK_USAGE("init_rescuer", 32),
STACK_USAGE("alloc_workqueue", 168),
STACK_USAGE("destroy_workqueue", 56),
STACK_USAGE("workqueue_set_max_active", 32),
STACK_USAGE("current_work", 0),
STACK_USAGE("current_is_workqueue_rescuer", 0),
STACK_USAGE("workqueue_congested", 16),
STACK_USAGE("work_busy", 24),
STACK_USAGE("set_worker_desc", 104),
STACK_USAGE("print_worker_info", 120),
STACK_USAGE("show_pwq", 56),
STACK_USAGE("show_one_workqueue", 32),
STACK_USAGE("show_all_workqueues", 56),
STACK_USAGE("wq_worker_comm", 40),
STACK_USAGE("workqueue_prepare_cpu", 24),
STACK_USAGE("workqueue_online_cpu", 64),
STACK_USAGE("workqueue_offline_cpu", 48),
STACK_USAGE("work_for_cpu_fn", 8),
STACK_USAGE("work_on_cpu", 136),
STACK_USAGE("work_on_cpu_safe", 24),
STACK_USAGE("freeze_workqueues_begin", 40),
STACK_USAGE("freeze_workqueues_busy", 16),
STACK_USAGE("thaw_workqueues", 40),
STACK_USAGE("workqueue_set_unbound_cpumask", 104),
STACK_USAGE("per_cpu_show", 0),
STACK_USAGE("max_active_show", 0),
STACK_USAGE("max_active_store", 32),
STACK_USAGE("wq_pool_ids_show", 72),
STACK_USAGE("wq_nice_show", 24),
STACK_USAGE("wq_nice_store", 40),
STACK_USAGE("wq_cpumask_show", 24),
STACK_USAGE("wq_cpumask_store", 40),
STACK_USAGE("wq_numa_show", 24),
STACK_USAGE("wq_numa_store", 56),
STACK_USAGE("schedule_work", 40),
STACK_USAGE("wq_unbound_cpumask_show", 8),
STACK_USAGE("wq_unbound_cpumask_store", 40),
STACK_USAGE("wq_sysfs_init", 0),
STACK_USAGE("wq_device_release", 0),
STACK_USAGE("workqueue_sysfs_register", 40),
STACK_USAGE("unbound_pwq_by_node", 16),
STACK_USAGE("wq_numa_init", 24),
STACK_USAGE("workqueue_init_early", 48),
STACK_USAGE("__bpf_trace_workqueue_activate_work", 0),
STACK_USAGE("__traceiter_workqueue_activate_work", 16),
STACK_USAGE("perf_trace_workqueue_activate_work", 56),
STACK_USAGE("trace_event_raw_event_workqueue_activate_work", 72),
STACK_USAGE("trace_raw_output_workqueue_activate_work", 24),
STACK_USAGE("trace_workqueue_activate_work", 0),
STACK_USAGE("workqueue_init", 40),
STACK_USAGE("get_work_pool", 8),
STACK_USAGE("__bpf_trace_workqueue_execute_start", 0),
STACK_USAGE("__traceiter_workqueue_execute_start", 16),
STACK_USAGE("perf_trace_workqueue_execute_start", 56),
STACK_USAGE("trace_event_raw_event_workqueue_execute_start", 72),
STACK_USAGE("trace_raw_output_workqueue_execute_start", 24),
STACK_USAGE("wq_worker_running", 8),
STACK_USAGE("wq_worker_sleeping", 16),
STACK_USAGE("wq_worker_last_func", 0),
STACK_USAGE("worker_set_flags", 0),
STACK_USAGE("worker_clr_flags", 0),
STACK_USAGE("argv_free", 8),
STACK_USAGE("argv_split", 32),
STACK_USAGE("asn1_ber_decoder", 232),
STACK_USAGE("assoc_array_insert_set_object", 0),
STACK_USAGE("assoc_array_delete_collapse_iterator", 0),
STACK_USAGE("assoc_array_delete", 136),
STACK_USAGE("assoc_array_clear", 16),
STACK_USAGE("assoc_array_rcu_cleanup", 8),
STACK_USAGE("assoc_array_iterate", 48),
STACK_USAGE("assoc_array_apply_edit", 0),
STACK_USAGE("assoc_array_cancel_edit", 8),
STACK_USAGE("assoc_array_gc", 96),
STACK_USAGE("assoc_array_walk", 56),
STACK_USAGE("assoc_array_subtree_iterate", 56),
STACK_USAGE("assoc_array_find", 104),
STACK_USAGE("assoc_array_destroy_subtree", 40),
STACK_USAGE("assoc_array_destroy", 8),
STACK_USAGE("assoc_array_insert", 168),
STACK_USAGE("_bin2bcd", 0),
STACK_USAGE("_bcd2bin", 0),
STACK_USAGE("bitmap_remap", 72),
STACK_USAGE("__bitmap_shift_right", 56),
STACK_USAGE("bitmap_bitremap", 40),
STACK_USAGE("bitmap_onto", 48),
STACK_USAGE("bitmap_fold", 40),
STACK_USAGE("bitmap_find_free_region", 32),
STACK_USAGE("bitmap_release_region", 0),
STACK_USAGE("bitmap_allocate_region", 0),
STACK_USAGE("bitmap_alloc", 0),
STACK_USAGE("bitmap_zalloc", 0),
STACK_USAGE("bitmap_alloc_node", 0),
STACK_USAGE("bitmap_zalloc_node", 0),
STACK_USAGE("bitmap_free", 0),
STACK_USAGE("devm_bitmap_free", 0),
STACK_USAGE("devm_bitmap_alloc", 16),
STACK_USAGE("devm_bitmap_zalloc", 16),
STACK_USAGE("bitmap_from_arr32", 0),
STACK_USAGE("__bitmap_shift_left", 24),
STACK_USAGE("bitmap_to_arr32", 0),
STACK_USAGE("bitmap_cut", 56),
STACK_USAGE("__bitmap_and", 0),
STACK_USAGE("__bitmap_or", 0),
STACK_USAGE("__bitmap_xor", 0),
STACK_USAGE("__bitmap_andnot", 0),
STACK_USAGE("__bitmap_replace", 0),
STACK_USAGE("__bitmap_intersects", 0),
STACK_USAGE("__bitmap_subset", 0),
STACK_USAGE("__bitmap_weight", 0),
STACK_USAGE("__bitmap_set", 0),
STACK_USAGE("__bitmap_clear", 0),
STACK_USAGE("bitmap_find_next_zero_area_off", 64),
STACK_USAGE("bitmap_parse_user", 24),
STACK_USAGE("bitmap_print_to_pagebuf", 0),
STACK_USAGE("__bitmap_equal", 0),
STACK_USAGE("bitmap_print_bitmask_to_buf", 40),
STACK_USAGE("bitmap_print_list_to_buf", 40),
STACK_USAGE("__bitmap_or_equal", 0),
STACK_USAGE("bitmap_parselist", 120),
STACK_USAGE("bitmap_parselist_user", 24),
STACK_USAGE("__bitmap_complement", 0),
STACK_USAGE("bitmap_parse", 80),
STACK_USAGE("bitmap_ord_to_pos", 32),
STACK_USAGE("xbc_root_node", 0),
STACK_USAGE("xbc_node_index", 0),
STACK_USAGE("xbc_node_get_parent", 0),
STACK_USAGE("xbc_node_get_child", 0),
STACK_USAGE("xbc_node_get_next", 0),
STACK_USAGE("xbc_node_get_data", 0),
STACK_USAGE("xbc_node_match_prefix", 32),
STACK_USAGE("xbc_node_find_subkey", 40),
STACK_USAGE("xbc_node_find_value", 8),
STACK_USAGE("xbc_node_compose_key_after", 88),
STACK_USAGE("xbc_node_find_next_leaf", 0),
STACK_USAGE("xbc_node_find_next_key_value", 8),
STACK_USAGE("xbc_add_node", 0),
STACK_USAGE("__xbc_add_sibling", 16),
STACK_USAGE("xbc_valid_keyword", 0),
STACK_USAGE("skip_comment", 8),
STACK_USAGE("__xbc_close_brace", 0),
STACK_USAGE("__xbc_parse_value", 56),
STACK_USAGE("xbc_parse_array", 40),
STACK_USAGE("find_match_node", 32),
STACK_USAGE("__xbc_add_key", 16),
STACK_USAGE("__xbc_parse_keys", 16),
STACK_USAGE("xbc_parse_kv", 56),
STACK_USAGE("xbc_parse_key", 24),
STACK_USAGE("xbc_open_brace", 16),
STACK_USAGE("xbc_close_brace", 8),
STACK_USAGE("xbc_verify_tree", 40),
STACK_USAGE("xbc_get_info", 0),
STACK_USAGE("xbc_parse_tree", 32),
STACK_USAGE("xbc_exit", 8),
STACK_USAGE("xbc_init", 48),
STACK_USAGE("bsearch", 48),
STACK_USAGE("__alloc_bucket_spinlocks", 64),
STACK_USAGE("free_bucket_spinlocks", 0),
STACK_USAGE("module_bug_cleanup", 0),
STACK_USAGE("bug_get_file_line", 0),
STACK_USAGE("find_bug", 16),
STACK_USAGE("report_bug", 56),
STACK_USAGE("generic_bug_clear_once", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("module_bug_finalize", 40),
STACK_USAGE("build_id_parse", 112),
STACK_USAGE("build_id_parse_buf", 56),
STACK_USAGE("init_vmlinux_build_id", 0),
STACK_USAGE("bust_spinlocks", 0),
STACK_USAGE("check_signature", 0),
STACK_USAGE("__ctzsi2", 8),
STACK_USAGE("__clzsi2", 4),
STACK_USAGE("__clzdi2", 8),
STACK_USAGE("__ctzdi2", 8),
STACK_USAGE("get_options", 72),
STACK_USAGE("memparse", 24),
STACK_USAGE("parse_option_str", 32),
STACK_USAGE("next_arg", 8),
STACK_USAGE("get_option", 32),
STACK_USAGE("cpu_rmap_add", 0),
STACK_USAGE("cpu_rmap_update", 88),
STACK_USAGE("free_irq_cpu_rmap", 16),
STACK_USAGE("irq_cpu_rmap_notify", 0),
STACK_USAGE("alloc_cpu_rmap", 24),
STACK_USAGE("irq_cpu_rmap_release", 8),
STACK_USAGE("irq_cpu_rmap_add", 24),
STACK_USAGE("cpu_rmap_put", 8),
STACK_USAGE("cpumask_next", 0),
STACK_USAGE("cpumask_local_spread", 24),
STACK_USAGE("cpumask_any_and_distribute", 24),
STACK_USAGE("cpumask_any_distribute", 16),
STACK_USAGE("cpumask_next_and", 0),
STACK_USAGE("cpumask_any_but", 16),
STACK_USAGE("cpumask_next_wrap", 32),
STACK_USAGE("crc_ccitt_false", 0),
STACK_USAGE("crc_ccitt", 0),
STACK_USAGE("crc_t10dif_mod_fini", 0),
STACK_USAGE("crc_t10dif_transform_show", 16),
STACK_USAGE("crc_t10dif_notify", 8),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("crc_t10dif_rehash", 8),
STACK_USAGE("crc_t10dif_update", 56),
STACK_USAGE("crc_t10dif", 0),
STACK_USAGE("crc_t10dif_mod_init", 0),
STACK_USAGE("crc16", 0),
STACK_USAGE("crc32_le", 32),
STACK_USAGE("__crc32c_le", 32),
STACK_USAGE("crc32_le_shift", 0),
STACK_USAGE("__crc32c_le_shift", 0),
STACK_USAGE("crc32_be", 32),
STACK_USAGE("aes_expandkey", 56),
STACK_USAGE("aes_encrypt", 64),
STACK_USAGE("aes_decrypt", 56),
STACK_USAGE("blake2s_compress_generic", 256),
STACK_USAGE("blake2s_update", 40),
STACK_USAGE("blake2s_final", 24),
STACK_USAGE("blake2s_mod_init", 0),
STACK_USAGE("blake2s_mod_exit", 0),
STACK_USAGE("hchacha_block_generic", 88),
STACK_USAGE("chacha_permute", 88),
STACK_USAGE("chacha_block_generic", 104),
STACK_USAGE("sha256_update", 392),
STACK_USAGE("sha224_update", 0),
STACK_USAGE("sha256_final", 32),
STACK_USAGE("sha224_final", 32),
STACK_USAGE("sha256", 136),
STACK_USAGE("debug_locks_off", 0),
STACK_USAGE("_atomic_dec_and_lock", 16),
STACK_USAGE("_atomic_dec_and_lock_irqsave", 24),
STACK_USAGE("decompress_method", 0),
STACK_USAGE("get_bits", 48),
STACK_USAGE("get_next_block", 488),
STACK_USAGE("read_bunzip", 32),
STACK_USAGE("nofill", 0),
STACK_USAGE("start_bunzip", 48),
STACK_USAGE("bunzip2", 80),
STACK_USAGE("gunzip", 0),
STACK_USAGE("nofill", 0),
STACK_USAGE("__gunzip", 80),
STACK_USAGE("unlz4", 104),
STACK_USAGE("rc_do_normalize", 8),
STACK_USAGE("rc_is_bit_0", 16),
STACK_USAGE("rc_get_bit", 24),
STACK_USAGE("rc_direct_bit", 8),
STACK_USAGE("rc_bit_tree_decode", 40),
STACK_USAGE("peek_old_byte", 0),
STACK_USAGE("write_byte", 8),
STACK_USAGE("copy_bytes", 24),
STACK_USAGE("process_bit0", 80),
STACK_USAGE("process_bit1", 80),
STACK_USAGE("unlzma", 272),
STACK_USAGE("nofill", 0),
STACK_USAGE("parse_header", 0),
STACK_USAGE("unlzo", 136),
STACK_USAGE("unxz", 128),
STACK_USAGE("decompress_single", 80),
STACK_USAGE("__unzstd", 184),
STACK_USAGE("unzstd", 0),
STACK_USAGE("handle_zstd_error", 24),
STACK_USAGE("devm_ioremap_np", 0),
STACK_USAGE("devm_iounmap", 8),
STACK_USAGE("__devm_ioremap_resource", 48),
STACK_USAGE("devm_ioremap_release", 0),
STACK_USAGE("devm_ioremap_resource", 0),
STACK_USAGE("devm_ioremap_resource_wc", 0),
STACK_USAGE("devm_ioremap_match", 0),
STACK_USAGE("devm_of_iomap", 0),
STACK_USAGE("devm_ioport_map_release", 0),
STACK_USAGE("devm_ioport_map_match", 0),
STACK_USAGE("devm_ioport_map", 32),
STACK_USAGE("devm_ioport_unmap", 16),
STACK_USAGE("pcim_iomap_release", 16),
STACK_USAGE("pcim_iomap_table", 8),
STACK_USAGE("pcim_iomap", 48),
STACK_USAGE("pcim_iounmap", 16),
STACK_USAGE("pcim_iomap_regions", 56),
STACK_USAGE("pcim_iomap_regions_request_all", 40),
STACK_USAGE("pcim_iounmap_regions", 32),
STACK_USAGE("devm_arch_phys_ac_add_release", 0),
STACK_USAGE("devm_arch_phys_wc_add", 32),
STACK_USAGE("devm_arch_io_free_memtype_wc_release", 0),
STACK_USAGE("devm_arch_io_reserve_memtype_wc", 40),
STACK_USAGE("devm_ioremap", 32),
STACK_USAGE("devm_ioremap_uc", 32),
STACK_USAGE("devm_ioremap_wc", 32),
STACK_USAGE("dump_stack", 0),
STACK_USAGE("dump_stack_set_arch_desc", 88),
STACK_USAGE("dump_stack_print_info", 56),
STACK_USAGE("show_regs_print_info", 0),
STACK_USAGE("dump_stack_lvl", 32),
STACK_USAGE("dql_reset", 0),
STACK_USAGE("dql_init", 0),
STACK_USAGE("dql_completed", 16),
STACK_USAGE("find_cpio_data", 168),
STACK_USAGE("errname", 0),
STACK_USAGE("ei_module_callback", 24),
STACK_USAGE("ei_seq_start", 8),
STACK_USAGE("ei_seq_stop", 0),
STACK_USAGE("ei_seq_next", 0),
STACK_USAGE("ei_seq_show", 0),
STACK_USAGE("ei_open", 0),
STACK_USAGE("ei_debugfs_init", 8),
STACK_USAGE("init_error_injection", 0),
STACK_USAGE("within_error_injection_list", 16),
STACK_USAGE("get_injectable_error_type", 0),
STACK_USAGE("populate_error_injection_list", 72),
STACK_USAGE("errseq_sample", 0),
STACK_USAGE("errseq_check", 0),
STACK_USAGE("errseq_check_and_advance", 0),
STACK_USAGE("errseq_set", 8),
STACK_USAGE("search_extable", 16),
STACK_USAGE("swap_ex", 0),
STACK_USAGE("cmp_ex_sort", 0),
STACK_USAGE("sort_extable", 0),
STACK_USAGE("trim_init_extable", 0),
STACK_USAGE("cmp_ex_search", 0),
STACK_USAGE("should_fail", 16),
STACK_USAGE("debugfs_ul_set", 0),
STACK_USAGE("debugfs_ul_get", 0),
STACK_USAGE("fops_ul_open", 0),
STACK_USAGE("setup_fault_attr", 40),
STACK_USAGE("fault_create_debugfs_attr", 16),
STACK_USAGE("_find_first_zero_bit", 0),
STACK_USAGE("_find_last_bit", 8),
STACK_USAGE("find_next_clump8", 8),
STACK_USAGE("_find_next_bit", 16),
STACK_USAGE("_find_first_bit", 8),
STACK_USAGE("_find_first_and_bit", 8),
STACK_USAGE("fprop_local_destroy_single", 0),
STACK_USAGE("__fprop_inc_single", 32),
STACK_USAGE("fprop_fraction_single", 80),
STACK_USAGE("fprop_local_init_percpu", 16),
STACK_USAGE("fprop_local_destroy_percpu", 0),
STACK_USAGE("fprop_reflect_period_percpu", 48),
STACK_USAGE("__fprop_add_percpu", 32),
STACK_USAGE("fprop_fraction_percpu", 64),
STACK_USAGE("__fprop_add_percpu_max", 64),
STACK_USAGE("fprop_global_init", 16),
STACK_USAGE("fprop_global_destroy", 0),
STACK_USAGE("fprop_new_period", 64),
STACK_USAGE("fprop_local_init_single", 0),
STACK_USAGE("get_default_font", 24),
STACK_USAGE("find_font", 16),
STACK_USAGE("gen_pool_create", 16),
STACK_USAGE("gen_pool_add_owner", 48),
STACK_USAGE("gen_pool_virt_to_phys", 24),
STACK_USAGE("gen_pool_destroy", 56),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("gen_pool_alloc_algo_owner", 104),
STACK_USAGE("gen_pool_dma_alloc", 32),
STACK_USAGE("gen_pool_dma_alloc_algo", 32),
STACK_USAGE("gen_pool_dma_alloc_align", 48),
STACK_USAGE("gen_pool_dma_zalloc", 40),
STACK_USAGE("gen_pool_dma_zalloc_algo", 40),
STACK_USAGE("gen_pool_dma_zalloc_align", 56),
STACK_USAGE("gen_pool_free_owner", 48),
STACK_USAGE("gen_pool_for_each_chunk", 40),
STACK_USAGE("gen_pool_has_addr", 24),
STACK_USAGE("gen_pool_avail", 16),
STACK_USAGE("gen_pool_size", 16),
STACK_USAGE("gen_pool_set_algo", 24),
STACK_USAGE("gen_pool_first_fit", 0),
STACK_USAGE("gen_pool_first_fit_align", 0),
STACK_USAGE("gen_pool_fixed_alloc", 16),
STACK_USAGE("rcu_read_unlock", 0),
STACK_USAGE("gen_pool_first_fit_order_align", 8),
STACK_USAGE("gen_pool_best_fit", 56),
STACK_USAGE("devm_gen_pool_release", 0),
STACK_USAGE("devm_gen_pool_match", 0),
STACK_USAGE("gen_pool_get", 0),
STACK_USAGE("devm_gen_pool_create", 48),
STACK_USAGE("__genradix_ptr_alloc", 64),
STACK_USAGE("__genradix_iter_peek", 24),
STACK_USAGE("genradix_free_recurse", 24),
STACK_USAGE("__genradix_prealloc", 32),
STACK_USAGE("__genradix_free", 0),
STACK_USAGE("__genradix_ptr", 8),
STACK_USAGE("glob_match", 24),
STACK_USAGE("hex_dump_to_buffer", 96),
STACK_USAGE("print_hex_dump", 248),
STACK_USAGE("hex_to_bin", 0),
STACK_USAGE("hex2bin", 8),
STACK_USAGE("bin2hex", 0),
STACK_USAGE("idr_alloc_cyclic", 104),
STACK_USAGE("idr_remove", 0),
STACK_USAGE("idr_find", 0),
STACK_USAGE("idr_for_each", 88),
STACK_USAGE("idr_get_next_ul", 80),
STACK_USAGE("idr_get_next", 88),
STACK_USAGE("idr_replace", 64),
STACK_USAGE("idr_alloc_u32", 80),
STACK_USAGE("ida_alloc_range", 184),
STACK_USAGE("ida_free", 96),
STACK_USAGE("ida_destroy", 96),
STACK_USAGE("idr_alloc", 72),
STACK_USAGE("interval_tree_augment_rotate", 0),
STACK_USAGE("interval_tree_insert", 0),
STACK_USAGE("interval_tree_iter_first", 0),
STACK_USAGE("interval_tree_iter_next", 0),
STACK_USAGE("interval_tree_remove", 16),
STACK_USAGE("ioread64_lo_hi", 8),
STACK_USAGE("ioread64_hi_lo", 8),
STACK_USAGE("ioread64be_lo_hi", 0),
STACK_USAGE("ioread64be_hi_lo", 0),
STACK_USAGE("iowrite8", 0),
STACK_USAGE("iowrite16", 0),
STACK_USAGE("iowrite16be", 0),
STACK_USAGE("iowrite32", 0),
STACK_USAGE("iowrite32be", 0),
STACK_USAGE("iowrite64_lo_hi", 0),
STACK_USAGE("iowrite64_hi_lo", 0),
STACK_USAGE("iowrite64be_lo_hi", 0),
STACK_USAGE("iowrite64be_hi_lo", 0),
STACK_USAGE("ioread8_rep", 0),
STACK_USAGE("ioread16_rep", 0),
STACK_USAGE("ioread32_rep", 0),
STACK_USAGE("iowrite8_rep", 0),
STACK_USAGE("iowrite16_rep", 0),
STACK_USAGE("iowrite32_rep", 0),
STACK_USAGE("ioport_map", 0),
STACK_USAGE("ioport_unmap", 0),
STACK_USAGE("pci_iounmap", 0),
STACK_USAGE("ioread8", 8),
STACK_USAGE("ioread16", 8),
STACK_USAGE("ioread16be", 8),
STACK_USAGE("ioread32", 0),
STACK_USAGE("ioread32be", 0),
STACK_USAGE("__iowrite32_copy", 0),
STACK_USAGE("__ioread32_copy", 0),
STACK_USAGE("__iowrite64_copy", 0),
STACK_USAGE("iommu_area_alloc", 80),
STACK_USAGE("pipe_advance", 40),
STACK_USAGE("iov_iter_bvec_advance", 40),
STACK_USAGE("iov_iter_advance", 0),
STACK_USAGE("iov_iter_revert", 0),
STACK_USAGE("iov_iter_single_seg_count", 0),
STACK_USAGE("get_page", 0),
STACK_USAGE("iov_iter_kvec", 0),
STACK_USAGE("iov_iter_bvec", 0),
STACK_USAGE("iov_iter_pipe", 0),
STACK_USAGE("iov_iter_xarray", 0),
STACK_USAGE("iov_iter_discard", 0),
STACK_USAGE("iov_iter_alignment_bvec", 0),
STACK_USAGE("iov_iter_alignment", 0),
STACK_USAGE("iov_iter_gap_alignment", 0),
STACK_USAGE("pipe_get_pages", 64),
STACK_USAGE("iter_xarray_populate_pages", 112),
STACK_USAGE("iter_xarray_get_pages", 24),
STACK_USAGE("iov_iter_get_pages", 48),
STACK_USAGE("pipe_get_pages_alloc", 80),
STACK_USAGE("iter_xarray_get_pages_alloc", 48),
STACK_USAGE("copyin", 0),
STACK_USAGE("iov_iter_get_pages_alloc", 64),
STACK_USAGE("xas_next_entry", 24),
STACK_USAGE("folio_size", 0),
STACK_USAGE("csum_and_copy_from_iter", 168),
STACK_USAGE("csum_and_copy_to_iter", 176),
STACK_USAGE("hash_and_copy_to_iter", 72),
STACK_USAGE("bvec_npages", 0),
STACK_USAGE("iov_iter_npages", 24),
STACK_USAGE("dup_iter", 8),
STACK_USAGE("iovec_from_user", 40),
STACK_USAGE("__import_iovec", 48),
STACK_USAGE("import_iovec", 0),
STACK_USAGE("import_single_range", 0),
STACK_USAGE("iov_iter_restore", 0),
STACK_USAGE("__kunmap_atomic", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("sanity", 24),
STACK_USAGE("fault_in_iov_iter_readable", 32),
STACK_USAGE("fault_in_iov_iter_writeable", 32),
STACK_USAGE("iov_iter_init", 0),
STACK_USAGE("push_pipe", 56),
STACK_USAGE("copy_pipe_to_iter", 88),
STACK_USAGE("csum_and_copy_to_pipe_iter", 112),
STACK_USAGE("_copy_to_iter", 136),
STACK_USAGE("copy_mc_pipe_to_iter", 96),
STACK_USAGE("rcu_read_unlock", 0),
STACK_USAGE("_copy_mc_to_iter", 144),
STACK_USAGE("_copy_from_iter", 136),
STACK_USAGE("_copy_from_iter_nocache", 136),
STACK_USAGE("_copy_from_iter_flushcache", 136),
STACK_USAGE("copy_page_to_iter", 96),
STACK_USAGE("copy_page_from_iter", 64),
STACK_USAGE("pipe_zero", 80),
STACK_USAGE("iov_iter_zero", 136),
STACK_USAGE("copy_page_from_iter_atomic", 144),
STACK_USAGE("pipe_truncate", 40),
STACK_USAGE("irq_poll_disable", 8),
STACK_USAGE("irq_poll_enable", 0),
STACK_USAGE("irq_poll_init", 0),
STACK_USAGE("irq_poll_cpu_dead", 32),
STACK_USAGE("irq_poll_setup", 0),
STACK_USAGE("irq_poll_sched", 32),
STACK_USAGE("irq_poll_complete", 32),
STACK_USAGE("irq_poll_softirq", 64),
STACK_USAGE("current_is_single_threaded", 24),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("kvasprintf", 88),
STACK_USAGE("kvasprintf_const", 88),
STACK_USAGE("kasprintf", 152),
STACK_USAGE("__kfifo_in", 40),
STACK_USAGE("__kfifo_out_peek", 40),
STACK_USAGE("__kfifo_out", 40),
STACK_USAGE("kfifo_copy_from_user", 48),
STACK_USAGE("__kfifo_from_user", 16),
STACK_USAGE("kfifo_copy_to_user", 48),
STACK_USAGE("__kfifo_alloc", 24),
STACK_USAGE("__kfifo_to_user", 16),
STACK_USAGE("setup_sgl_buf", 56),
STACK_USAGE("__kfifo_dma_in_prepare", 48),
STACK_USAGE("__kfifo_dma_out_prepare", 48),
STACK_USAGE("__kfifo_max_r", 0),
STACK_USAGE("__kfifo_len_r", 0),
STACK_USAGE("__kfifo_in_r", 48),
STACK_USAGE("__kfifo_out_peek_r", 40),
STACK_USAGE("__kfifo_out_r", 56),
STACK_USAGE("__kfifo_skip_r", 0),
STACK_USAGE("__kfifo_from_user_r", 32),
STACK_USAGE("__kfifo_to_user_r", 32),
STACK_USAGE("__kfifo_dma_in_prepare_r", 48),
STACK_USAGE("__kfifo_free", 8),
STACK_USAGE("__kfifo_dma_in_finish_r", 8),
STACK_USAGE("__kfifo_dma_out_prepare_r", 48),
STACK_USAGE("__kfifo_dma_out_finish_r", 0),
STACK_USAGE("__kfifo_init", 8),
STACK_USAGE("klist_add_head", 24),
STACK_USAGE("klist_add_tail", 24),
STACK_USAGE("klist_add_behind", 32),
STACK_USAGE("klist_add_before", 32),
STACK_USAGE("klist_dec_and_del", 40),
STACK_USAGE("klist_del", 32),
STACK_USAGE("klist_remove", 88),
STACK_USAGE("klist_node_attached", 0),
STACK_USAGE("klist_iter_init_node", 24),
STACK_USAGE("klist_iter_init", 0),
STACK_USAGE("klist_iter_exit", 40),
STACK_USAGE("klist_prev", 48),
STACK_USAGE("klist_next", 48),
STACK_USAGE("klist_init", 24),
STACK_USAGE("kobj_ns_type_registered", 8),
STACK_USAGE("kobj_child_ns_ops", 0),
STACK_USAGE("kobj_ns_ops", 0),
STACK_USAGE("kobj_ns_current_may_mount", 16),
STACK_USAGE("kobj_ns_grab_current", 8),
STACK_USAGE("kobj_ns_netlink", 16),
STACK_USAGE("kobj_ns_initial", 8),
STACK_USAGE("kobj_ns_drop", 16),
STACK_USAGE("kobject_get_path", 40),
STACK_USAGE("kobj_kset_leave", 8),
STACK_USAGE("kobject_add_internal", 32),
STACK_USAGE("kobject_set_name_vargs", 32),
STACK_USAGE("kobject_namespace", 8),
STACK_USAGE("kobject_set_name", 88),
STACK_USAGE("kobject_init", 16),
STACK_USAGE("kobject_add", 120),
STACK_USAGE("kobject_init_and_add", 120),
STACK_USAGE("kobject_rename", 88),
STACK_USAGE("kobject_get_ownership", 0),
STACK_USAGE("kobject_move", 88),
STACK_USAGE("__kobject_del", 16),
STACK_USAGE("kobject_del", 8),
STACK_USAGE("kobject_get", 8),
STACK_USAGE("kobject_get_unless_zero", 16),
STACK_USAGE("kobject_put", 32),
STACK_USAGE("dynamic_kobj_release", 0),
STACK_USAGE("kobject_create_and_add", 24),
STACK_USAGE("kset_init", 0),
STACK_USAGE("kobj_attr_show", 0),
STACK_USAGE("kobj_attr_store", 0),
STACK_USAGE("kset_register", 16),
STACK_USAGE("kset_unregister", 16),
STACK_USAGE("kset_find_obj", 40),
STACK_USAGE("kset_release", 0),
STACK_USAGE("kset_get_ownership", 0),
STACK_USAGE("kset_create_and_add", 40),
STACK_USAGE("kobj_ns_type_register", 24),
STACK_USAGE("kobject_synth_uevent", 88),
STACK_USAGE("alloc_uevent_skb", 40),
STACK_USAGE("kobject_uevent_net_broadcast", 72),
STACK_USAGE("zap_modalias_env", 56),
STACK_USAGE("kobject_uevent_env", 72),
STACK_USAGE("kobject_uevent", 0),
STACK_USAGE("add_uevent_var", 104),
STACK_USAGE("uevent_net_rcv_skb", 88),
STACK_USAGE("uevent_net_rcv", 0),
STACK_USAGE("uevent_net_init", 80),
STACK_USAGE("uevent_net_exit", 8),
STACK_USAGE("kobject_uevent_init", 0),
STACK_USAGE("kstrtoull", 40),
STACK_USAGE("kstrtoll", 40),
STACK_USAGE("_kstrtoul", 24),
STACK_USAGE("_kstrtol", 24),
STACK_USAGE("kstrtouint", 24),
STACK_USAGE("kstrtoint", 24),
STACK_USAGE("_parse_integer_fixup_radix", 0),
STACK_USAGE("kstrtou16", 24),
STACK_USAGE("kstrtos16", 24),
STACK_USAGE("kstrtou8", 24),
STACK_USAGE("kstrtos8", 24),
STACK_USAGE("kstrtobool", 0),
STACK_USAGE("kstrtobool_from_user", 32),
STACK_USAGE("kstrtoull_from_user", 120),
STACK_USAGE("kstrtoll_from_user", 120),
STACK_USAGE("kstrtoul_from_user", 120),
STACK_USAGE("kstrtol_from_user", 120),
STACK_USAGE("kstrtouint_from_user", 88),
STACK_USAGE("kstrtoint_from_user", 88),
STACK_USAGE("kstrtou16_from_user", 72),
STACK_USAGE("kstrtos16_from_user", 72),
STACK_USAGE("kstrtou8_from_user", 48),
STACK_USAGE("kstrtos8_from_user", 48),
STACK_USAGE("_parse_integer_limit", 16),
STACK_USAGE("_parse_integer", 0),
STACK_USAGE("crc32c", 384),
STACK_USAGE("libcrc32c_mod_init", 8),
STACK_USAGE("libcrc32c_mod_fini", 0),
STACK_USAGE("crc32c_impl", 0),
STACK_USAGE("list_sort", 96),
STACK_USAGE("llist_add_batch", 0),
STACK_USAGE("llist_del_first", 0),
STACK_USAGE("llist_reverse_order", 0),
STACK_USAGE("lockref_get_or_lock", 8),
STACK_USAGE("lockref_put_return", 0),
STACK_USAGE("lockref_put_or_lock", 8),
STACK_USAGE("lockref_mark_dead", 0),
STACK_USAGE("lockref_get_not_dead", 16),
STACK_USAGE("lockref_get", 8),
STACK_USAGE("lockref_get_not_zero", 16),
STACK_USAGE("lockref_put_not_zero", 16),
STACK_USAGE("logic_pio_unregister_range", 8),
STACK_USAGE("find_io_range_by_fwnode", 16),
STACK_USAGE("logic_pio_to_hwaddr", 16),
STACK_USAGE("logic_pio_trans_hwaddr", 32),
STACK_USAGE("logic_pio_trans_cpuaddr", 24),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("logic_pio_register_range", 40),
STACK_USAGE("LZ4_decompress_safe", 112),
STACK_USAGE("LZ4_decompress_safe_partial", 128),
STACK_USAGE("LZ4_decompress_fast", 40),
STACK_USAGE("LZ4_decompress_safe_withPrefix64k", 120),
STACK_USAGE("LZ4_decompress_safe_withSmallPrefix", 112),
STACK_USAGE("LZ4_decompress_safe_forceExtDict", 176),
STACK_USAGE("LZ4_decompress_fast_extDict", 136),
STACK_USAGE("LZ4_setStreamDecode", 0),
STACK_USAGE("LZ4_decompress_safe_continue", 192),
STACK_USAGE("LZ4_decompress_fast_continue", 152),
STACK_USAGE("LZ4_decompress_safe_usingDict", 0),
STACK_USAGE("LZ4_decompress_fast_usingDict", 0),
STACK_USAGE("lzo1x_1_do_compress", 136),
STACK_USAGE("lzogeneric1x_1_compress", 136),
STACK_USAGE("lzo1x_1_compress", 0),
STACK_USAGE("lzorle1x_1_compress", 0),
STACK_USAGE("lzo1x_decompress_safe", 72),
STACK_USAGE("iter_div_u64_rem", 16),
STACK_USAGE("gcd", 32),
STACK_USAGE("int_pow", 0),
STACK_USAGE("int_sqrt", 8),
STACK_USAGE("lcm_not_zero", 16),
STACK_USAGE("lcm", 16),
STACK_USAGE("rational_best_approximation", 40),
STACK_USAGE("reciprocal_value", 4),
STACK_USAGE("reciprocal_value_adv", 40),
STACK_USAGE("__memcat_p", 40),
STACK_USAGE("memweight", 24),
STACK_USAGE("mpi_ec_add_points", 48),
STACK_USAGE("mpi_ec_mul_point", 296),
STACK_USAGE("ec_addm", 16),
STACK_USAGE("ec_subm", 16),
STACK_USAGE("ec_mulm", 16),
STACK_USAGE("mpi_ec_curve_point", 48),
STACK_USAGE("ec_mul2", 16),
STACK_USAGE("ec_pow2", 16),
STACK_USAGE("ec_pow3", 24),
STACK_USAGE("ec_addm_25519", 88),
STACK_USAGE("ec_subm_25519", 88),
STACK_USAGE("ec_mulm_25519", 168),
STACK_USAGE("ec_mul2_25519", 0),
STACK_USAGE("ec_pow2_25519", 0),
STACK_USAGE("ec_addm_448", 104),
STACK_USAGE("ec_subm_448", 104),
STACK_USAGE("ec_mulm_448", 312),
STACK_USAGE("mpi_point_new", 8),
STACK_USAGE("ec_mul2_448", 0),
STACK_USAGE("ec_pow2_448", 0),
STACK_USAGE("mpi_point_release", 8),
STACK_USAGE("mpi_ec_init", 56),
STACK_USAGE("mpi_point_init", 8),
STACK_USAGE("mpi_ec_deinit", 16),
STACK_USAGE("mpi_ec_get_affine", 48),
STACK_USAGE("mpi_point_free_parts", 8),
STACK_USAGE("mpi_ec_dup_point", 40),
STACK_USAGE("mpihelp_add_n", 16),
STACK_USAGE("mpihelp_lshift", 24),
STACK_USAGE("mpihelp_mul_1", 24),
STACK_USAGE("mpihelp_addmul_1", 24),
STACK_USAGE("mpihelp_submul_1", 24),
STACK_USAGE("mpihelp_rshift", 32),
STACK_USAGE("mpihelp_sub_n", 8),
STACK_USAGE("mpi_sub", 24),
STACK_USAGE("mpi_addm", 16),
STACK_USAGE("mpi_subm", 32),
STACK_USAGE("mpi_add_ui", 40),
STACK_USAGE("mpi_add", 56),
STACK_USAGE("mpi_clear_highbit", 0),
STACK_USAGE("mpi_clear_bit", 0),
STACK_USAGE("mpi_rshift_limbs", 0),
STACK_USAGE("mpi_rshift", 48),
STACK_USAGE("mpi_lshift_limbs", 24),
STACK_USAGE("mpi_lshift", 48),
STACK_USAGE("mpi_normalize", 0),
STACK_USAGE("mpi_get_nbits", 8),
STACK_USAGE("mpi_test_bit", 0),
STACK_USAGE("mpi_set_bit", 32),
STACK_USAGE("mpi_set_highbit", 40),
STACK_USAGE("mpi_cmp_ui", 16),
STACK_USAGE("do_mpi_cmp", 32),
STACK_USAGE("mpi_cmp", 0),
STACK_USAGE("mpi_cmpabs", 24),
STACK_USAGE("mpi_fdiv_r", 40),
STACK_USAGE("mpi_fdiv_q", 32),
STACK_USAGE("mpi_fdiv_qr", 48),
STACK_USAGE("mpi_tdiv_r", 0),
STACK_USAGE("mpi_tdiv_qr", 200),
STACK_USAGE("mpi_invm", 128),
STACK_USAGE("mpi_mul_barrett", 16),
STACK_USAGE("mpi_mod", 0),
STACK_USAGE("mpi_barrett_init", 32),
STACK_USAGE("mpi_barrett_free", 8),
STACK_USAGE("mpi_mod_barrett", 80),
STACK_USAGE("mpi_mul", 80),
STACK_USAGE("mpi_mulm", 16),
STACK_USAGE("mpi_powm", 280),
STACK_USAGE("mpihelp_sub", 32),
STACK_USAGE("mpi_sub_ui", 24),
STACK_USAGE("mpi_fromstr", 48),
STACK_USAGE("mpi_scanval", 16),
STACK_USAGE("mpi_read_buffer", 80),
STACK_USAGE("mpi_get_buffer", 80),
STACK_USAGE("mpi_write_to_sgl", 144),
STACK_USAGE("mpi_read_raw_data", 48),
STACK_USAGE("mpi_read_raw_from_sgl", 136),
STACK_USAGE("mpi_print", 104),
STACK_USAGE("mpi_read_from_buffer", 24),
STACK_USAGE("mpihelp_cmp", 0),
STACK_USAGE("mpihelp_divrem", 176),
STACK_USAGE("mpihelp_mod_1", 48),
STACK_USAGE("mpihelp_divmod_1", 80),
STACK_USAGE("mpih_sqr_n_basecase", 48),
STACK_USAGE("mpih_sqr_n", 112),
STACK_USAGE("mpihelp_mul_n", 40),
STACK_USAGE("mpihelp_mul_karatsuba_case", 104),
STACK_USAGE("mpihelp_release_karatsuba_ctx", 16),
STACK_USAGE("mpihelp_mul", 112),
STACK_USAGE("mul_n_basecase", 48),
STACK_USAGE("mul_n", 112),
STACK_USAGE("mpi_alloc_limb_space", 0),
STACK_USAGE("mpi_free_limb_space", 0),
STACK_USAGE("mpi_assign_limb_space", 24),
STACK_USAGE("mpi_resize", 40),
STACK_USAGE("mpi_clear", 0),
STACK_USAGE("mpi_free", 8),
STACK_USAGE("mpi_copy", 24),
STACK_USAGE("mpi_alloc_like", 24),
STACK_USAGE("mpi_snatch", 32),
STACK_USAGE("mpi_set", 48),
STACK_USAGE("mpi_set_ui", 32),
STACK_USAGE("mpi_alloc_set_ui", 16),
STACK_USAGE("mpi_init", 16),
STACK_USAGE("mpi_swap_cond", 0),
STACK_USAGE("mpi_const", 8),
STACK_USAGE("mpi_alloc", 16),
STACK_USAGE("mac_pton", 24),
STACK_USAGE("__nla_put_64bit", 40),
STACK_USAGE("__nla_put_nohdr", 32),
STACK_USAGE("nla_put", 40),
STACK_USAGE("nla_put_64bit", 40),
STACK_USAGE("nla_put_nohdr", 32),
STACK_USAGE("nla_append", 16),
STACK_USAGE("nla_get_range_unsigned", 0),
STACK_USAGE("nla_get_range_signed", 0),
STACK_USAGE("__nla_validate_parse", 152),
STACK_USAGE("__nla_validate", 0),
STACK_USAGE("nla_policy_len", 0),
STACK_USAGE("__nla_parse", 0),
STACK_USAGE("nla_find", 0),
STACK_USAGE("nla_strscpy", 32),
STACK_USAGE("nla_strdup", 24),
STACK_USAGE("nla_memcpy", 40),
STACK_USAGE("nla_memcmp", 0),
STACK_USAGE("nla_strcmp", 16),
STACK_USAGE("__nla_reserve", 32),
STACK_USAGE("__nla_reserve_64bit", 32),
STACK_USAGE("__nla_reserve_nohdr", 8),
STACK_USAGE("nla_reserve", 32),
STACK_USAGE("nla_reserve_64bit", 32),
STACK_USAGE("nla_reserve_nohdr", 16),
STACK_USAGE("__nla_put", 40),
STACK_USAGE("nmi_trigger_cpumask_backtrace", 32),
STACK_USAGE("nmi_cpu_backtrace", 48),
STACK_USAGE("node_random", 16),
STACK_USAGE("__next_node_in", 16),
STACK_USAGE("parse_OID", 8),
STACK_USAGE("sprint_oid", 48),
STACK_USAGE("sprint_OID", 0),
STACK_USAGE("look_up_OID", 40),
STACK_USAGE("once_deferred", 8),
STACK_USAGE("__do_once_start", 16),
STACK_USAGE("__do_once_done", 24),
STACK_USAGE("match_token", 88),
STACK_USAGE("match_int", 40),
STACK_USAGE("match_uint", 24),
STACK_USAGE("match_u64", 40),
STACK_USAGE("match_octal", 40),
STACK_USAGE("match_hex", 40),
STACK_USAGE("match_wildcard", 0),
STACK_USAGE("match_strlcpy", 24),
STACK_USAGE("match_strdup", 0),
STACK_USAGE("pci_iomap", 0),
STACK_USAGE("pci_iomap_wc", 0),
STACK_USAGE("pci_iomap_range", 0),
STACK_USAGE("pci_iomap_wc_range", 0),
STACK_USAGE("percpu_ref_exit", 16),
STACK_USAGE("percpu_ref_switch_to_atomic_rcu", 48),
STACK_USAGE("percpu_ref_noop_confirm_switch", 0),
STACK_USAGE("percpu_ref_get", 8),
STACK_USAGE("__percpu_ref_switch_mode", 80),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("percpu_ref_switch_to_atomic", 24),
STACK_USAGE("percpu_ref_switch_to_atomic_sync", 64),
STACK_USAGE("percpu_ref_put", 8),
STACK_USAGE("percpu_ref_switch_to_percpu", 16),
STACK_USAGE("percpu_ref_kill_and_confirm", 24),
STACK_USAGE("percpu_ref_is_zero", 8),
STACK_USAGE("percpu_ref_reinit", 16),
STACK_USAGE("percpu_ref_resurrect", 16),
STACK_USAGE("percpu_ref_init", 40),
STACK_USAGE("percpu_counter_sync", 24),
STACK_USAGE("__percpu_counter_sum", 40),
STACK_USAGE("__percpu_counter_init", 40),
STACK_USAGE("percpu_counter_destroy", 8),
STACK_USAGE("compute_batch_value", 0),
STACK_USAGE("percpu_counter_cpu_dead", 32),
STACK_USAGE("__percpu_counter_compare", 48),
STACK_USAGE("percpu_counter_startup", 0),
STACK_USAGE("percpu_counter_set", 24),
STACK_USAGE("percpu_counter_add_batch", 40),
STACK_USAGE("plist_del", 0),
STACK_USAGE("plist_requeue", 0),
STACK_USAGE("plist_add", 0),
STACK_USAGE("radix_tree_tag_clear", 0),
STACK_USAGE("radix_tree_iter_tag_clear", 0),
STACK_USAGE("radix_tree_tag_get", 0),
STACK_USAGE("radix_tree_iter_resume", 0),
STACK_USAGE("radix_tree_next_chunk", 24),
STACK_USAGE("radix_tree_gang_lookup", 80),
STACK_USAGE("radix_tree_gang_lookup_tag", 104),
STACK_USAGE("radix_tree_gang_lookup_tag_slot", 112),
STACK_USAGE("__radix_tree_delete", 0),
STACK_USAGE("radix_tree_iter_delete", 8),
STACK_USAGE("radix_tree_delete_item", 16),
STACK_USAGE("radix_tree_delete", 0),
STACK_USAGE("radix_tree_tagged", 0),
STACK_USAGE("idr_preload", 0),
STACK_USAGE("idr_get_free", 96),
STACK_USAGE("idr_destroy", 40),
STACK_USAGE("radix_tree_node_ctor", 8),
STACK_USAGE("radix_tree_cpu_dead", 8),
STACK_USAGE("radix_tree_init", 0),
STACK_USAGE("radix_tree_node_alloc", 40),
STACK_USAGE("local_lock_acquire", 8),
STACK_USAGE("radix_tree_node_rcu_free", 16),
STACK_USAGE("__radix_tree_preload", 48),
STACK_USAGE("local_lock_release", 8),
STACK_USAGE("radix_tree_preload", 0),
STACK_USAGE("radix_tree_maybe_preload", 0),
STACK_USAGE("radix_tree_extend", 48),
STACK_USAGE("delete_node", 24),
STACK_USAGE("radix_tree_insert", 56),
STACK_USAGE("__radix_tree_lookup", 0),
STACK_USAGE("radix_tree_lookup_slot", 0),
STACK_USAGE("radix_tree_lookup", 0),
STACK_USAGE("__radix_tree_replace", 0),
STACK_USAGE("radix_tree_replace_slot", 0),
STACK_USAGE("radix_tree_iter_replace", 0),
STACK_USAGE("radix_tree_tag_set", 0),
STACK_USAGE("prandom_seed_full_state", 88),
STACK_USAGE("prandom_u32", 16),
STACK_USAGE("prandom_bytes", 24),
STACK_USAGE("prandom_seed", 32),
STACK_USAGE("prandom_init_early", 32),
STACK_USAGE("prandom_reseed", 40),
STACK_USAGE("prandom_u32_state", 0),
STACK_USAGE("prandom_timer_start", 0),
STACK_USAGE("prandom_init_late", 0),
STACK_USAGE("prandom_bytes_state", 0),
STACK_USAGE("___ratelimit", 48),
STACK_USAGE("__rb_erase_color", 40),
STACK_USAGE("rb_insert_color", 0),
STACK_USAGE("rb_erase", 0),
STACK_USAGE("__rb_insert_augmented", 32),
STACK_USAGE("rb_first", 0),
STACK_USAGE("rb_last", 0),
STACK_USAGE("rb_next", 0),
STACK_USAGE("rb_prev", 0),
STACK_USAGE("rb_replace_node", 0),
STACK_USAGE("rb_replace_node_rcu", 0),
STACK_USAGE("rb_next_postorder", 0),
STACK_USAGE("rb_first_postorder", 0),
STACK_USAGE("refcount_dec_and_mutex_lock", 16),
STACK_USAGE("refcount_warn_saturate", 0),
STACK_USAGE("refcount_dec_and_lock", 16),
STACK_USAGE("refcount_dec_and_lock_irqsave", 24),
STACK_USAGE("refcount_dec_if_one", 0),
STACK_USAGE("refcount_dec_not_one", 8),
STACK_USAGE("rhashtable_init", 56),
STACK_USAGE("rhltable_init", 8),
STACK_USAGE("rhashtable_free_and_destroy", 88),
STACK_USAGE("rhashtable_destroy", 0),
STACK_USAGE("__rht_bucket_nested", 40),
STACK_USAGE("bucket_table_free_rcu", 40),
STACK_USAGE("rht_bucket_nested", 0),
STACK_USAGE("rht_bucket_nested_insert", 16),
STACK_USAGE("nested_table_alloc", 24),
STACK_USAGE("bucket_table_alloc", 48),
STACK_USAGE("local_bh_disable", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("local_bh_enable", 0),
STACK_USAGE("rht_lock", 16),
STACK_USAGE("rht_lock_nested", 16),
STACK_USAGE("rht_unlock", 8),
STACK_USAGE("rhashtable_rehash_alloc", 48),
STACK_USAGE("rht_assign_unlock", 16),
STACK_USAGE("rht_deferred_worker", 144),
STACK_USAGE("lockdep_rht_mutex_is_held", 0),
STACK_USAGE("lockdep_rht_bucket_is_held", 0),
STACK_USAGE("rhashtable_insert_slow", 136),
STACK_USAGE("rhashtable_walk_enter", 24),
STACK_USAGE("rhashtable_walk_exit", 16),
STACK_USAGE("jhash", 0),
STACK_USAGE("rhashtable_walk_start_check", 40),
STACK_USAGE("nested_table_free", 24),
STACK_USAGE("__rhashtable_walk_find_next", 64),
STACK_USAGE("rhashtable_walk_next", 40),
STACK_USAGE("rhashtable_walk_peek", 0),
STACK_USAGE("rhashtable_walk_stop", 24),
STACK_USAGE("rhashtable_jhash2", 0),
STACK_USAGE("sbitmap_resize", 0),
STACK_USAGE("sbitmap_get", 96),
STACK_USAGE("sbitmap_get_shallow", 104),
STACK_USAGE("sbitmap_any_bit_set", 0),
STACK_USAGE("sbitmap_weight", 40),
STACK_USAGE("sbitmap_show", 40),
STACK_USAGE("sbitmap_bitmap_show", 64),
STACK_USAGE("sbitmap_queue_init_node", 32),
STACK_USAGE("sbitmap_queue_recalculate_wake_batch", 0),
STACK_USAGE("sbitmap_queue_resize", 0),
STACK_USAGE("__sbitmap_queue_get", 0),
STACK_USAGE("__sbitmap_queue_get_batch", 80),
STACK_USAGE("sbitmap_queue_get_shallow", 0),
STACK_USAGE("sbitmap_queue_min_shallow_depth", 0),
STACK_USAGE("sbitmap_queue_wake_up", 0),
STACK_USAGE("sbitmap_queue_clear_batch", 40),
STACK_USAGE("sbitmap_queue_clear", 24),
STACK_USAGE("sbitmap_queue_wake_all", 16),
STACK_USAGE("sbitmap_queue_show", 32),
STACK_USAGE("sbitmap_add_wait_queue", 0),
STACK_USAGE("sbitmap_del_wait_queue", 0),
STACK_USAGE("sbitmap_prepare_to_wait", 0),
STACK_USAGE("sbitmap_finish_wait", 16),
STACK_USAGE("sbitmap_init_node", 40),
STACK_USAGE("sg_copy_to_buffer", 0),
STACK_USAGE("sg_last", 0),
STACK_USAGE("sg_pcopy_from_buffer", 0),
STACK_USAGE("sg_pcopy_to_buffer", 0),
STACK_USAGE("sg_zero_buffer", 120),
STACK_USAGE("sg_init_table", 16),
STACK_USAGE("sg_init_one", 0),
STACK_USAGE("__sg_free_table", 72),
STACK_USAGE("sg_next", 0),
STACK_USAGE("sg_free_append_table", 24),
STACK_USAGE("sg_free_table", 24),
STACK_USAGE("__sg_alloc_table", 72),
STACK_USAGE("sg_alloc_table", 56),
STACK_USAGE("sg_alloc_append_table_from_pages", 104),
STACK_USAGE("sg_nents", 0),
STACK_USAGE("sg_alloc_table_from_pages_segment", 56),
STACK_USAGE("sgl_alloc_order", 72),
STACK_USAGE("sgl_alloc", 0),
STACK_USAGE("sgl_free_n_order", 40),
STACK_USAGE("sg_nents_for_len", 0),
STACK_USAGE("sgl_free_order", 32),
STACK_USAGE("sgl_free", 24),
STACK_USAGE("__sg_page_iter_start", 0),
STACK_USAGE("__sg_page_iter_next", 0),
STACK_USAGE("__sg_page_iter_dma_next", 0),
STACK_USAGE("sg_miter_start", 0),
STACK_USAGE("sg_miter_get_next_page", 0),
STACK_USAGE("sg_miter_skip", 16),
STACK_USAGE("sg_miter_next", 24),
STACK_USAGE("sg_miter_stop", 8),
STACK_USAGE("sg_copy_buffer", 144),
STACK_USAGE("sg_copy_from_buffer", 0),
STACK_USAGE("seq_buf_bprintf", 16),
STACK_USAGE("seq_buf_puts", 24),
STACK_USAGE("seq_buf_putc", 0),
STACK_USAGE("seq_buf_putmem", 16),
STACK_USAGE("seq_buf_putmem_hex", 104),
STACK_USAGE("seq_buf_path", 32),
STACK_USAGE("seq_buf_to_user", 16),
STACK_USAGE("seq_buf_hex_dump", 248),
STACK_USAGE("seq_buf_print_seq", 0),
STACK_USAGE("seq_buf_vprintf", 8),
STACK_USAGE("seq_buf_printf", 104),
STACK_USAGE("sg_alloc_table_chained", 32),
STACK_USAGE("sg_pool_init", 32),
STACK_USAGE("sg_pool_exit", 16),
STACK_USAGE("sg_pool_free", 4),
STACK_USAGE("sg_pool_alloc", 4),
STACK_USAGE("sg_free_table_chained", 0),
STACK_USAGE("sha1_init", 0),
STACK_USAGE("sha1_transform", 48),
STACK_USAGE("show_mem", 24),
STACK_USAGE("siphash_1u64", 0),
STACK_USAGE("siphash_2u64", 0),
STACK_USAGE("siphash_3u64", 0),
STACK_USAGE("siphash_4u64", 0),
STACK_USAGE("siphash_1u32", 0),
STACK_USAGE("siphash_3u32", 0),
STACK_USAGE("__hsiphash_unaligned", 16),
STACK_USAGE("hsiphash_1u32", 0),
STACK_USAGE("hsiphash_2u32", 0),
STACK_USAGE("hsiphash_3u32", 0),
STACK_USAGE("hsiphash_4u32", 0),
STACK_USAGE("__siphash_unaligned", 16),
STACK_USAGE("check_preemption_disabled", 48),
STACK_USAGE("debug_smp_processor_id", 0),
STACK_USAGE("__this_cpu_preempt_check", 0),
STACK_USAGE("sort_r", 168),
STACK_USAGE("sort", 24),
STACK_USAGE("strncpy", 0),
STACK_USAGE("strlcpy", 24),
STACK_USAGE("strscpy", 8),
STACK_USAGE("stpcpy", 0),
STACK_USAGE("strcat", 0),
STACK_USAGE("strncat", 0),
STACK_USAGE("strlcat", 24),
STACK_USAGE("strcmp", 0),
STACK_USAGE("strncmp", 0),
STACK_USAGE("strchr", 0),
STACK_USAGE("strncasecmp", 0),
STACK_USAGE("strchrnul", 0),
STACK_USAGE("strnchrnul", 0),
STACK_USAGE("strrchr", 0),
STACK_USAGE("strnchr", 0),
STACK_USAGE("strlen", 0),
STACK_USAGE("strnlen", 0),
STACK_USAGE("strspn", 0),
STACK_USAGE("strcspn", 0),
STACK_USAGE("strpbrk", 0),
STACK_USAGE("strsep", 0),
STACK_USAGE("strcasecmp", 0),
STACK_USAGE("memcmp", 0),
STACK_USAGE("bcmp", 0),
STACK_USAGE("memscan", 0),
STACK_USAGE("strstr", 8),
STACK_USAGE("strcpy", 0),
STACK_USAGE("strnstr", 8),
STACK_USAGE("memchr", 0),
STACK_USAGE("memchr_inv", 0),
STACK_USAGE("string_unescape", 56),
STACK_USAGE("string_get_size", 64),
STACK_USAGE("string_escape_mem", 96),
STACK_USAGE("kstrdup_quotable", 104),
STACK_USAGE("kstrdup_quotable_cmdline", 24),
STACK_USAGE("kstrdup_quotable_file", 24),
STACK_USAGE("kasprintf_strarray", 48),
STACK_USAGE("kfree_strarray", 24),
STACK_USAGE("devm_kfree_strarray", 24),
STACK_USAGE("devm_kasprintf_strarray", 48),
STACK_USAGE("strscpy_pad", 24),
STACK_USAGE("skip_spaces", 0),
STACK_USAGE("strim", 8),
STACK_USAGE("sysfs_streq", 0),
STACK_USAGE("match_string", 40),
STACK_USAGE("__sysfs_match_string", 16),
STACK_USAGE("strreplace", 0),
STACK_USAGE("memcpy_and_pad", 32),
STACK_USAGE("strncpy_from_user", 32),
STACK_USAGE("strnlen_user", 16),
STACK_USAGE("task_current_syscall", 40),
STACK_USAGE("collect_syscall", 32),
STACK_USAGE("timerqueue_add", 8),
STACK_USAGE("timerqueue_del", 16),
STACK_USAGE("timerqueue_iterate_next", 0),
STACK_USAGE("ucs2_strlen", 0),
STACK_USAGE("ucs2_strsize", 0),
STACK_USAGE("ucs2_strncmp", 0),
STACK_USAGE("ucs2_utf8size", 0),
STACK_USAGE("ucs2_strnlen", 0),
STACK_USAGE("ucs2_as_utf8", 0),
STACK_USAGE("_copy_from_user", 32),
STACK_USAGE("_copy_to_user", 24),
STACK_USAGE("check_zeroed_user", 0),
STACK_USAGE("guid_parse", 48),
STACK_USAGE("uuid_parse", 48),
STACK_USAGE("generate_random_uuid", 8),
STACK_USAGE("generate_random_guid", 8),
STACK_USAGE("guid_gen", 8),
STACK_USAGE("uuid_gen", 8),
STACK_USAGE("uuid_is_valid", 0),
STACK_USAGE("symbol_string", 328),
STACK_USAGE("resource_string", 152),
STACK_USAGE("simple_strtoul", 0),
STACK_USAGE("hex_string", 8),
STACK_USAGE("bitmap_string", 40),
STACK_USAGE("simple_strtol", 0),
STACK_USAGE("bitmap_list_string", 80),
STACK_USAGE("mac_address_string", 72),
STACK_USAGE("ip4_string", 80),
STACK_USAGE("ip6_compressed_string", 48),
STACK_USAGE("ip6_string", 0),
STACK_USAGE("ip6_addr_string", 88),
STACK_USAGE("ip4_addr_string", 56),
STACK_USAGE("ip6_addr_string_sa", 168),
STACK_USAGE("simple_strtoll", 0),
STACK_USAGE("ip4_addr_string_sa", 104),
STACK_USAGE("ip_addr_string", 0),
STACK_USAGE("skip_atoi", 0),
STACK_USAGE("escaped_string", 16),
STACK_USAGE("uuid_string", 72),
STACK_USAGE("netdev_bits", 0),
STACK_USAGE("fourcc_string", 88),
STACK_USAGE("address_val", 0),
STACK_USAGE("date_str", 32),
STACK_USAGE("time_str", 24),
STACK_USAGE("rtc_str", 40),
STACK_USAGE("time64_str", 120),
STACK_USAGE("time_and_date", 0),
STACK_USAGE("clock", 32),
STACK_USAGE("flags_string", 48),
STACK_USAGE("fwnode_full_name_string", 48),
STACK_USAGE("device_node_string", 0),
STACK_USAGE("put_dec_trunc8", 0),
STACK_USAGE("fwnode_string", 32),
STACK_USAGE("no_hash_pointers_enable", 0),
STACK_USAGE("pointer", 56),
STACK_USAGE("format_decode", 40),
STACK_USAGE("put_dec_full8", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("vsnprintf", 96),
STACK_USAGE("put_dec", 24),
STACK_USAGE("vscnprintf", 8),
STACK_USAGE("snprintf", 88),
STACK_USAGE("scnprintf", 104),
STACK_USAGE("vsprintf", 0),
STACK_USAGE("sprintf", 88),
STACK_USAGE("vbin_printf", 96),
STACK_USAGE("bstr_printf", 88),
STACK_USAGE("bprintf", 88),
STACK_USAGE("vsscanf", 152),
STACK_USAGE("sscanf", 88),
STACK_USAGE("num_to_str", 72),
STACK_USAGE("number", 112),
STACK_USAGE("special_hex_number", 0),
STACK_USAGE("widen_string", 24),
STACK_USAGE("simple_strntoull", 56),
STACK_USAGE("string_nocheck", 0),
STACK_USAGE("err_ptr", 40),
STACK_USAGE("string", 0),
STACK_USAGE("pointer_string", 0),
STACK_USAGE("debug_boot_weak_hash_enable", 0),
STACK_USAGE("enable_ptr_key_workfn", 0),
STACK_USAGE("fill_random_ptr_key", 0),
STACK_USAGE("initialize_ptr_random", 0),
STACK_USAGE("ptr_to_hashval", 8),
STACK_USAGE("default_pointer", 24),
STACK_USAGE("restricted_pointer", 40),
STACK_USAGE("dentry_name", 104),
STACK_USAGE("simple_strtoull", 0),
STACK_USAGE("file_dentry_name", 0),
STACK_USAGE("bdev_name", 56),
STACK_USAGE("minmax_running_max", 0),
STACK_USAGE("minmax_running_min", 0),
STACK_USAGE("xas_split_alloc", 48),
STACK_USAGE("xas_split", 80),
STACK_USAGE("xas_pause", 32),
STACK_USAGE("__xas_prev", 24),
STACK_USAGE("__xas_next", 24),
STACK_USAGE("xa_parent", 8),
STACK_USAGE("xas_find", 32),
STACK_USAGE("xas_find_marked", 64),
STACK_USAGE("xas_find_conflict", 24),
STACK_USAGE("xa_load", 96),
STACK_USAGE("__xa_erase", 72),
STACK_USAGE("xa_erase", 80),
STACK_USAGE("__xa_store", 104),
STACK_USAGE("xa_store", 32),
STACK_USAGE("__xa_cmpxchg", 120),
STACK_USAGE("__xa_insert", 104),
STACK_USAGE("xa_store_range", 136),
STACK_USAGE("xa_get_order", 80),
STACK_USAGE("xas_start", 24),
STACK_USAGE("__xa_alloc", 112),
STACK_USAGE("__xa_alloc_cyclic", 64),
STACK_USAGE("__xa_set_mark", 112),
STACK_USAGE("__xa_clear_mark", 88),
STACK_USAGE("xa_get_mark", 88),
STACK_USAGE("xa_set_mark", 24),
STACK_USAGE("xa_clear_mark", 96),
STACK_USAGE("xa_find", 104),
STACK_USAGE("xas_descend", 32),
STACK_USAGE("xa_find_after", 104),
STACK_USAGE("xa_extract", 136),
STACK_USAGE("xa_delete_node", 80),
STACK_USAGE("xa_destroy", 104),
STACK_USAGE("xas_load", 16),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("xas_nomem", 16),
STACK_USAGE("__xas_nomem", 16),
STACK_USAGE("xas_free_nodes", 40),
STACK_USAGE("xas_create", 88),
STACK_USAGE("xas_create_range", 56),
STACK_USAGE("xas_store", 96),
STACK_USAGE("xas_get_mark", 0),
STACK_USAGE("xas_set_mark", 40),
STACK_USAGE("xas_clear_mark", 40),
STACK_USAGE("xas_init_marks", 16),
STACK_USAGE("xxh32", 16),
STACK_USAGE("xxh64", 48),
STACK_USAGE("xxh32_reset", 0),
STACK_USAGE("xxh64_reset", 0),
STACK_USAGE("xxh32_update", 32),
STACK_USAGE("xxh32_digest", 0),
STACK_USAGE("xxh64_update", 48),
STACK_USAGE("xxh64_digest", 32),
STACK_USAGE("xxh32_copy_state", 0),
STACK_USAGE("xxh64_copy_state", 0),
STACK_USAGE("bcj_apply", 64),
STACK_USAGE("xz_dec_bcj_run", 64),
STACK_USAGE("xz_dec_bcj_create", 8),
STACK_USAGE("xz_dec_bcj_reset", 0),
STACK_USAGE("xz_dec_lzma2_create", 24),
STACK_USAGE("xz_dec_lzma2_reset", 8),
STACK_USAGE("xz_dec_lzma2_end", 8),
STACK_USAGE("lzma_len", 8),
STACK_USAGE("lzma_main", 80),
STACK_USAGE("xz_dec_lzma2_run", 64),
STACK_USAGE("fill_temp", 24),
STACK_USAGE("index_update", 8),
STACK_USAGE("dec_index", 32),
STACK_USAGE("crc32_validate", 0),
STACK_USAGE("dec_stream_footer", 16),
STACK_USAGE("xz_dec_run", 112),
STACK_USAGE("xz_dec_init", 32),
STACK_USAGE("xz_dec_reset", 0),
STACK_USAGE("xz_dec_end", 8),
STACK_USAGE("inflate_fast", 216),
STACK_USAGE("zlib_inflate_workspacesize", 0),
STACK_USAGE("zlib_inflate", 160),
STACK_USAGE("zlib_inflateReset", 0),
STACK_USAGE("zlib_inflateInit2", 0),
STACK_USAGE("zlib_inflateEnd", 0),
STACK_USAGE("zlib_inflateIncomp", 56),
STACK_USAGE("zlib_adler32", 8),
STACK_USAGE("zlib_inflate_table", 216),
STACK_USAGE("zlib_inflate_blob", 40),
STACK_USAGE("FSE_readNCount_body_bmi2", 80),
STACK_USAGE("FSE_readNCount_bmi2", 80),
STACK_USAGE("FSE_readNCount", 0),
STACK_USAGE("HUF_readStats", 888),
STACK_USAGE("FSE_versionNumber", 0),
STACK_USAGE("FSE_isError", 0),
STACK_USAGE("FSE_getErrorName", 0),
STACK_USAGE("HUF_readStats_body_bmi2", 40),
STACK_USAGE("HUF_readStats_wksp", 40),
STACK_USAGE("HUF_isError", 0),
STACK_USAGE("HUF_getErrorName", 0),
STACK_USAGE("ERR_getErrorString", 0),
STACK_USAGE("FSE_buildDTable_wksp", 0),
STACK_USAGE("FSE_buildDTable_rle", 0),
STACK_USAGE("FSE_buildDTable_raw", 0),
STACK_USAGE("FSE_decompress_usingDTable", 72),
STACK_USAGE("FSE_decompress_wksp", 0),
STACK_USAGE("FSE_decompress_wksp_body_bmi2", 104),
STACK_USAGE("FSE_decompress_wksp_bmi2", 88),
STACK_USAGE("FSE_createDTable", 0),
STACK_USAGE("FSE_freeDTable", 0),
STACK_USAGE("FSE_buildDTable_internal", 80),
STACK_USAGE("ZSTD_versionNumber", 0),
STACK_USAGE("ZSTD_versionString", 0),
STACK_USAGE("ZSTD_isError", 0),
STACK_USAGE("ZSTD_getErrorName", 0),
STACK_USAGE("ZSTD_getErrorCode", 0),
STACK_USAGE("ZSTD_getErrorString", 0),
STACK_USAGE("ZSTD_customMalloc", 0),
STACK_USAGE("ZSTD_customCalloc", 16),
STACK_USAGE("ZSTD_customFree", 0),
STACK_USAGE("HUF_decompress4X_usingDTable", 0),
STACK_USAGE("HUF_selectDecoder", 0),
STACK_USAGE("HUF_decompress4X_hufOnly_wksp", 40),
STACK_USAGE("HUF_decompress1X_DCtx_wksp", 40),
STACK_USAGE("HUF_decompress1X_usingDTable_bmi2", 0),
STACK_USAGE("HUF_decompress1X1_DCtx_wksp_bmi2", 48),
STACK_USAGE("HUF_decompress4X_usingDTable_bmi2", 0),
STACK_USAGE("HUF_decompress4X_hufOnly_wksp_bmi2", 48),
STACK_USAGE("HUF_readDTableX1_wksp", 0),
STACK_USAGE("HUF_readDTableX1_wksp_bmi2", 112),
STACK_USAGE("BIT_initDStream", 0),
STACK_USAGE("HUF_decompress1X1_usingDTable_internal", 56),
STACK_USAGE("HUF_decompress1X1_usingDTable_internal_bmi2", 56),
STACK_USAGE("HUF_decompress4X1_usingDTable_internal", 288),
STACK_USAGE("HUF_decompress4X1_usingDTable_internal_bmi2", 328),
STACK_USAGE("HUF_decompress1X1_usingDTable", 0),
STACK_USAGE("HUF_decompress1X1_DCtx_wksp", 40),
STACK_USAGE("HUF_decompress4X1_usingDTable", 0),
STACK_USAGE("HUF_decompress4X1_DCtx_wksp", 40),
STACK_USAGE("HUF_readDTableX2_wksp", 192),
STACK_USAGE("HUF_decompress1X2_usingDTable_internal", 56),
STACK_USAGE("HUF_decompress1X2_usingDTable_internal_bmi2", 48),
STACK_USAGE("HUF_decompress4X2_usingDTable_internal", 320),
STACK_USAGE("HUF_decompress4X2_usingDTable_internal_bmi2", 352),
STACK_USAGE("HUF_decompress1X2_usingDTable", 0),
STACK_USAGE("HUF_decompress1X2_DCtx_wksp", 40),
STACK_USAGE("HUF_decompress4X2_usingDTable", 0),
STACK_USAGE("HUF_decompress4X2_DCtx_wksp", 40),
STACK_USAGE("HUF_decompress1X_usingDTable", 0),
STACK_USAGE("ZSTD_createDDict_advanced", 80),
STACK_USAGE("ZSTD_createDDict", 32),
STACK_USAGE("ZSTD_createDDict_byReference", 32),
STACK_USAGE("ZSTD_initStaticDDict", 32),
STACK_USAGE("ZSTD_freeDDict", 40),
STACK_USAGE("ZSTD_estimateDDictSize", 0),
STACK_USAGE("ZSTD_sizeof_DDict", 0),
STACK_USAGE("ZSTD_getDictID_fromDDict", 0),
STACK_USAGE("ZSTD_DDict_dictContent", 0),
STACK_USAGE("ZSTD_DDict_dictSize", 0),
STACK_USAGE("ZSTD_copyDDictParameters", 0),
STACK_USAGE("ZSTD_nextInputType", 0),
STACK_USAGE("ZSTD_decompressContinue", 72),
STACK_USAGE("ZSTD_loadDEntropy", 200),
STACK_USAGE("ZSTD_decompressBegin", 0),
STACK_USAGE("ZSTD_decompressBegin_usingDict", 24),
STACK_USAGE("ZSTD_decompressBegin_usingDDict", 24),
STACK_USAGE("ZSTD_getDictID_fromDict", 0),
STACK_USAGE("ZSTD_getDictID_fromFrame", 56),
STACK_USAGE("ZSTD_decompress_usingDDict", 0),
STACK_USAGE("ZSTD_createDStream", 8),
STACK_USAGE("ZSTD_initStaticDStream", 8),
STACK_USAGE("ZSTD_createDStream_advanced", 40),
STACK_USAGE("ZSTD_freeDStream", 0),
STACK_USAGE("ZSTD_DStreamInSize", 0),
STACK_USAGE("ZSTD_DStreamOutSize", 0),
STACK_USAGE("ZSTD_DCtx_loadDictionary_advanced", 40),
STACK_USAGE("ZSTD_DCtx_loadDictionary_byReference", 24),
STACK_USAGE("ZSTD_DCtx_loadDictionary", 24),
STACK_USAGE("ZSTD_DCtx_refPrefix_advanced", 32),
STACK_USAGE("ZSTD_DCtx_refPrefix", 24),
STACK_USAGE("ZSTD_initDStream_usingDict", 24),
STACK_USAGE("ZSTD_initDStream", 8),
STACK_USAGE("ZSTD_initDStream_usingDDict", 8),
STACK_USAGE("ZSTD_resetDStream", 0),
STACK_USAGE("ZSTD_DCtx_refDDict", 136),
STACK_USAGE("ZSTD_DCtx_setMaxWindowSize", 0),
STACK_USAGE("ZSTD_DCtx_setFormat", 0),
STACK_USAGE("ZSTD_dParam_getBounds", 0),
STACK_USAGE("ZSTD_DCtx_getParameter", 0),
STACK_USAGE("ZSTD_DCtx_setParameter", 0),
STACK_USAGE("ZSTD_DCtx_reset", 8),
STACK_USAGE("ZSTD_sizeof_DStream", 8),
STACK_USAGE("ZSTD_decodingBufferSize_min", 0),
STACK_USAGE("ZSTD_estimateDStreamSize", 0),
STACK_USAGE("ZSTD_estimateDStreamSize_fromFrame", 48),
STACK_USAGE("ZSTD_decompressStream", 240),
STACK_USAGE("ZSTD_decompressStream_simpleArgs", 72),
STACK_USAGE("ZSTD_sizeof_DCtx", 8),
STACK_USAGE("ZSTD_estimateDCtxSize", 0),
STACK_USAGE("ZSTD_initStaticDCtx", 8),
STACK_USAGE("ZSTD_createDCtx_advanced", 8),
STACK_USAGE("ZSTD_createDCtx", 8),
STACK_USAGE("ZSTD_freeDCtx", 72),
STACK_USAGE("ZSTD_copyDCtx", 0),
STACK_USAGE("ZSTD_isFrame", 0),
STACK_USAGE("ZSTD_frameHeaderSize", 0),
STACK_USAGE("ZSTD_getFrameHeader_advanced", 0),
STACK_USAGE("ZSTD_getFrameHeader", 0),
STACK_USAGE("ZSTD_getFrameContentSize", 56),
STACK_USAGE("ZSTD_findDecompressedSize", 96),
STACK_USAGE("ZSTD_getDecompressedSize", 56),
STACK_USAGE("ZSTD_decodeFrameHeader", 64),
STACK_USAGE("ZSTD_findFrameSizeInfo", 112),
STACK_USAGE("ZSTD_findFrameCompressedSize", 0),
STACK_USAGE("ZSTD_decompressBound", 24),
STACK_USAGE("ZSTD_insertBlock", 24),
STACK_USAGE("ZSTD_decompressMultiFrame", 240),
STACK_USAGE("ZSTD_decompress_usingDict", 0),
STACK_USAGE("ZSTD_getDDict", 8),
STACK_USAGE("ZSTD_decompressDCtx", 40),
STACK_USAGE("ZSTD_decompress", 56),
STACK_USAGE("ZSTD_nextSrcSizeToDecompress", 0),
STACK_USAGE("ZSTD_decompressSequences_bmi2", 368),
STACK_USAGE("ZSTD_decompressSequencesLong_bmi2", 504),
STACK_USAGE("ZSTD_decompressSequences", 336),
STACK_USAGE("ZSTD_decompressBlock_internal", 568),
STACK_USAGE("ZSTD_checkContinuity", 0),
STACK_USAGE("ZSTD_decompressBlock", 16),
STACK_USAGE("BIT_reloadDStream", 0),
STACK_USAGE("ZSTD_buildFSETable_body_bmi2", 72),
STACK_USAGE("ZSTD_buildFSETable", 72),
STACK_USAGE("ZSTD_buildSeqTable", 200),
STACK_USAGE("ZSTD_getcBlockSize", 0),
STACK_USAGE("ZSTD_decodeSeqHeaders", 72),
STACK_USAGE("ZSTD_execSequenceEnd", 64),
STACK_USAGE("ZSTD_decodeLiteralsBlock", 48),
STACK_USAGE("zstd_is_error", 0),
STACK_USAGE("zstd_get_error_code", 0),
STACK_USAGE("zstd_get_error_name", 0),
STACK_USAGE("zstd_dctx_workspace_bound", 0),
STACK_USAGE("zstd_init_dctx", 0),
STACK_USAGE("zstd_decompress_dctx", 0),
STACK_USAGE("zstd_dstream_workspace_bound", 0),
STACK_USAGE("zstd_init_dstream", 0),
STACK_USAGE("zstd_reset_dstream", 0),
STACK_USAGE("zstd_decompress_stream", 0),
STACK_USAGE("zstd_find_frame_compressed_size", 0),
STACK_USAGE("zstd_get_frame_header", 0),
STACK_USAGE("bdi_dev_name", 0),
STACK_USAGE("bdi_debug_stats_open", 0),
STACK_USAGE("read_ahead_kb_store", 32),
STACK_USAGE("read_ahead_kb_show", 0),
STACK_USAGE("min_ratio_store", 32),
STACK_USAGE("min_ratio_show", 0),
STACK_USAGE("max_ratio_store", 32),
STACK_USAGE("max_ratio_show", 0),
STACK_USAGE("stable_pages_required_show", 8),
STACK_USAGE("bdi_class_init", 8),
STACK_USAGE("wb_tryget", 8),
STACK_USAGE("default_bdi_init", 0),
STACK_USAGE("wb_wakeup_delayed", 24),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("wb_update_bandwidth_workfn", 0),
STACK_USAGE("wb_init", 40),
STACK_USAGE("css_get", 8),
STACK_USAGE("percpu_ref_put_many", 8),
STACK_USAGE("wb_shutdown", 24),
STACK_USAGE("cgwb_release_workfn", 32),
STACK_USAGE("cgwb_release", 0),
STACK_USAGE("cgwb_kill", 8),
STACK_USAGE("bdi_debug_stats_show", 88),
STACK_USAGE("wb_get_lookup", 16),
STACK_USAGE("wb_get_create", 120),
STACK_USAGE("cleanup_offline_cgwbs_workfn", 56),
STACK_USAGE("wb_memcg_offline", 24),
STACK_USAGE("wb_blkcg_offline", 16),
STACK_USAGE("cgwb_init", 8),
STACK_USAGE("bdi_init", 8),
STACK_USAGE("bdi_alloc", 8),
STACK_USAGE("bdi_get_by_id", 16),
STACK_USAGE("bdi_register_va", 16),
STACK_USAGE("bdi_register", 88),
STACK_USAGE("bdi_set_owner", 0),
STACK_USAGE("bdi_unregister", 72),
STACK_USAGE("bdi_put", 8),
STACK_USAGE("inode_to_bdi", 0),
STACK_USAGE("balloon_page_alloc", 0),
STACK_USAGE("balloon_page_enqueue", 32),
STACK_USAGE("balloon_page_enqueue_one", 24),
STACK_USAGE("balloon_page_dequeue", 40),
STACK_USAGE("balloon_page_isolate", 24),
STACK_USAGE("balloon_page_putback", 32),
STACK_USAGE("balloon_page_migrate", 0),
STACK_USAGE("balloon_page_list_enqueue", 64),
STACK_USAGE("balloon_page_list_dequeue", 72),
STACK_USAGE("__traceiter_cma_alloc_busy_retry", 48),
STACK_USAGE("__bpf_trace_cma_alloc_class", 0),
STACK_USAGE("perf_trace_cma_alloc_class", 112),
STACK_USAGE("trace_event_raw_event_cma_alloc_class", 128),
STACK_USAGE("trace_raw_output_cma_alloc_class", 24),
STACK_USAGE("cma_init_reserved_areas", 8),
STACK_USAGE("cma_reserve_pages_on_error", 0),
STACK_USAGE("cma_init_reserved_mem", 56),
STACK_USAGE("cma_declare_contiguous_nid", 104),
STACK_USAGE("cma_get_base", 0),
STACK_USAGE("cma_alloc", 160),
STACK_USAGE("__bpf_trace_cma_release", 0),
STACK_USAGE("__traceiter_cma_release", 40),
STACK_USAGE("perf_trace_cma_release", 112),
STACK_USAGE("trace_event_raw_event_cma_release", 112),
STACK_USAGE("trace_raw_output_cma_release", 24),
STACK_USAGE("cma_get_size", 0),
STACK_USAGE("cma_get_name", 0),
STACK_USAGE("cma_pages_valid", 0),
STACK_USAGE("cma_release", 64),
STACK_USAGE("cma_for_each_area", 24),
STACK_USAGE("__bpf_trace_cma_alloc_start", 0),
STACK_USAGE("__traceiter_cma_alloc_start", 32),
STACK_USAGE("perf_trace_cma_alloc_start", 96),
STACK_USAGE("trace_event_raw_event_cma_alloc_start", 104),
STACK_USAGE("trace_raw_output_cma_alloc_start", 24),
STACK_USAGE("__traceiter_cma_alloc_finish", 48),
STACK_USAGE("cma_activate_area", 40),
STACK_USAGE("PageMovable", 0),
STACK_USAGE("__bpf_trace_mm_compaction_end", 0),
STACK_USAGE("__traceiter_mm_compaction_end", 48),
STACK_USAGE("perf_trace_mm_compaction_end", 80),
STACK_USAGE("trace_event_raw_event_mm_compaction_end", 104),
STACK_USAGE("trace_raw_output_mm_compaction_end", 64),
STACK_USAGE("isolate_migratepages_range", 48),
STACK_USAGE("__SetPageMovable", 0),
STACK_USAGE("__ClearPageMovable", 0),
STACK_USAGE("__bpf_trace_mm_compaction_isolate_template", 0),
STACK_USAGE("perf_trace_mm_compaction_isolate_template", 80),
STACK_USAGE("trace_event_raw_event_mm_compaction_isolate_template", 96),
STACK_USAGE("trace_raw_output_mm_compaction_isolate_template", 24),
STACK_USAGE("__bpf_trace_mm_compaction_try_to_compact_pages", 0),
STACK_USAGE("__traceiter_mm_compaction_try_to_compact_pages", 32),
STACK_USAGE("perf_trace_mm_compaction_try_to_compact_pages", 72),
STACK_USAGE("trace_event_raw_event_mm_compaction_try_to_compact_pages", 88),
STACK_USAGE("trace_raw_output_mm_compaction_try_to_compact_pages", 32),
STACK_USAGE("defer_compaction", 0),
STACK_USAGE("compaction_alloc", 184),
STACK_USAGE("compaction_free", 0),
STACK_USAGE("compaction_deferred", 8),
STACK_USAGE("__bpf_trace_mm_compaction_suitable_template", 0),
STACK_USAGE("perf_trace_mm_compaction_suitable_template", 72),
STACK_USAGE("trace_event_raw_event_mm_compaction_suitable_template", 88),
STACK_USAGE("trace_raw_output_mm_compaction_suitable_template", 56),
STACK_USAGE("compaction_defer_reset", 0),
STACK_USAGE("__traceiter_mm_compaction_finished", 32),
STACK_USAGE("__traceiter_mm_compaction_suitable", 32),
STACK_USAGE("compaction_suitable", 40),
STACK_USAGE("compaction_zonelist_suitable", 104),
STACK_USAGE("__bpf_trace_mm_compaction_defer_template", 0),
STACK_USAGE("perf_trace_mm_compaction_defer_template", 64),
STACK_USAGE("trace_event_raw_event_mm_compaction_defer_template", 80),
STACK_USAGE("trace_raw_output_mm_compaction_defer_template", 32),
STACK_USAGE("compact_zone", 232),
STACK_USAGE("__reset_isolation_pfn", 48),
STACK_USAGE("try_to_compact_pages", 232),
STACK_USAGE("__traceiter_mm_compaction_deferred", 24),
STACK_USAGE("__traceiter_mm_compaction_defer_compaction", 24),
STACK_USAGE("compact_node", 144),
STACK_USAGE("compaction_proactiveness_sysctl_handler", 32),
STACK_USAGE("__traceiter_mm_compaction_defer_reset", 24),
STACK_USAGE("sysctl_compaction_handler", 32),
STACK_USAGE("compact_store", 16),
STACK_USAGE("compaction_register_node", 0),
STACK_USAGE("compaction_unregister_node", 0),
STACK_USAGE("__bpf_trace_mm_compaction_kcompactd_sleep", 0),
STACK_USAGE("__traceiter_mm_compaction_kcompactd_sleep", 16),
STACK_USAGE("perf_trace_mm_compaction_kcompactd_sleep", 56),
STACK_USAGE("trace_event_raw_event_mm_compaction_kcompactd_sleep", 72),
STACK_USAGE("trace_raw_output_mm_compaction_kcompactd_sleep", 24),
STACK_USAGE("wakeup_kcompactd", 48),
STACK_USAGE("kcompactd", 232),
STACK_USAGE("__bpf_trace_kcompactd_wake_template", 0),
STACK_USAGE("perf_trace_kcompactd_wake_template", 72),
STACK_USAGE("trace_event_raw_event_kcompactd_wake_template", 88),
STACK_USAGE("trace_raw_output_kcompactd_wake_template", 40),
STACK_USAGE("kcompactd_run", 24),
STACK_USAGE("kcompactd_stop", 8),
STACK_USAGE("kcompactd_cpu_online", 48),
STACK_USAGE("kcompactd_init", 40),
STACK_USAGE("__traceiter_mm_compaction_wakeup_kcompactd", 32),
STACK_USAGE("__reset_isolation_suitable", 56),
STACK_USAGE("__traceiter_mm_compaction_kcompactd_wake", 32),
STACK_USAGE("reset_isolation_suitable", 8),
STACK_USAGE("__traceiter_mm_compaction_isolate_migratepages", 40),
STACK_USAGE("isolate_freepages_block", 120),
STACK_USAGE("__traceiter_mm_compaction_isolate_freepages", 40),
STACK_USAGE("__bpf_trace_mm_compaction_migratepages", 0),
STACK_USAGE("__traceiter_mm_compaction_migratepages", 24),
STACK_USAGE("perf_trace_mm_compaction_migratepages", 64),
STACK_USAGE("trace_event_raw_event_mm_compaction_migratepages", 80),
STACK_USAGE("trace_raw_output_mm_compaction_migratepages", 24),
STACK_USAGE("isolate_freepages_range", 96),
STACK_USAGE("isolate_migratepages_block", 192),
STACK_USAGE("trylock_page", 0),
STACK_USAGE("__bpf_trace_mm_compaction_begin", 0),
STACK_USAGE("__traceiter_mm_compaction_begin", 40),
STACK_USAGE("perf_trace_mm_compaction_begin", 72),
STACK_USAGE("trace_event_raw_event_mm_compaction_begin", 96),
STACK_USAGE("trace_raw_output_mm_compaction_begin", 24),
STACK_USAGE("compound_nr", 0),
STACK_USAGE("dump_page", 64),
STACK_USAGE("dma_pool_create", 48),
STACK_USAGE("dma_pool_destroy", 48),
STACK_USAGE("dma_pool_alloc", 48),
STACK_USAGE("dma_pool_free", 64),
STACK_USAGE("dmam_pool_release", 0),
STACK_USAGE("dmam_pool_match", 0),
STACK_USAGE("dmam_pool_create", 48),
STACK_USAGE("dmam_pool_destroy", 0),
STACK_USAGE("pools_show", 64),
STACK_USAGE("__early_ioremap", 80),
STACK_USAGE("early_iounmap", 32),
STACK_USAGE("early_ioremap", 0),
STACK_USAGE("early_memremap", 16),
STACK_USAGE("early_memremap_ro", 16),
STACK_USAGE("early_memremap_prot", 0),
STACK_USAGE("copy_from_early_mem", 56),
STACK_USAGE("early_ioremap_debug_setup", 0),
STACK_USAGE("early_memunmap", 0),
STACK_USAGE("early_memremap_pgprot_adjust", 0),
STACK_USAGE("early_ioremap_reset", 0),
STACK_USAGE("early_ioremap_setup", 0),
STACK_USAGE("check_early_ioremap_leak", 8),
STACK_USAGE("vfs_fadvise", 0),
STACK_USAGE("ksys_fadvise64_64", 40),
STACK_USAGE("__ia32_sys_fadvise64_64", 40),
STACK_USAGE("__x64_sys_fadvise64_64", 40),
STACK_USAGE("__ia32_sys_fadvise64", 40),
STACK_USAGE("__x64_sys_fadvise64", 40),
STACK_USAGE("generic_fadvise", 112),
STACK_USAGE("filemap_invalidate_lock_two", 16),
STACK_USAGE("filemap_invalidate_unlock_two", 16),
STACK_USAGE("pagecache_init", 8),
STACK_USAGE("count_memcg_event_mm", 24),
STACK_USAGE("wake_page_function", 24),
STACK_USAGE("folio_wake_bit", 112),
STACK_USAGE("folio_wait_bit_common", 144),
STACK_USAGE("migration_entry_wait_on_locked", 120),
STACK_USAGE("folio_wait_bit", 0),
STACK_USAGE("folio_wait_bit_killable", 0),
STACK_USAGE("filemap_unaccount_folio", 24),
STACK_USAGE("folio_put_wait_locked", 0),
STACK_USAGE("folio_add_wait_queue", 32),
STACK_USAGE("xas_reload", 24),
STACK_USAGE("folio_unlock", 0),
STACK_USAGE("folio_end_private_2", 8),
STACK_USAGE("folio_wait_private_2", 8),
STACK_USAGE("folio_wait_private_2_killable", 8),
STACK_USAGE("folio_end_writeback", 8),
STACK_USAGE("xas_next_entry", 32),
STACK_USAGE("page_endio", 24),
STACK_USAGE("__folio_lock", 0),
STACK_USAGE("__folio_lock_killable", 0),
STACK_USAGE("__bpf_trace_mm_filemap_op_page_cache", 0),
STACK_USAGE("perf_trace_mm_filemap_op_page_cache", 56),
STACK_USAGE("trace_event_raw_event_mm_filemap_op_page_cache", 72),
STACK_USAGE("trace_raw_output_mm_filemap_op_page_cache", 24),
STACK_USAGE("__folio_lock_or_retry", 24),
STACK_USAGE("page_cache_next_miss", 88),
STACK_USAGE("page_cache_prev_miss", 88),
STACK_USAGE("__filemap_get_folio", 128),
STACK_USAGE("find_get_entries", 104),
STACK_USAGE("find_lock_entries", 120),
STACK_USAGE("__filemap_remove_folio", 104),
STACK_USAGE("find_get_pages_range", 136),
STACK_USAGE("find_get_pages_contig", 112),
STACK_USAGE("filemap_free_folio", 16),
STACK_USAGE("find_get_pages_range_tag", 128),
STACK_USAGE("filemap_get_read_batch", 96),
STACK_USAGE("filemap_read_folio", 16),
STACK_USAGE("filemap_remove_folio", 24),
STACK_USAGE("inode_to_wb", 8),
STACK_USAGE("filemap_read", 336),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("generic_file_read_iter", 48),
STACK_USAGE("mapping_seek_hole_data", 176),
STACK_USAGE("do_sync_mmap_readahead", 96),
STACK_USAGE("filemap_fault", 128),
STACK_USAGE("delete_from_page_cache_batch", 120),
STACK_USAGE("next_uptodate_page", 40),
STACK_USAGE("filemap_map_pages", 152),
STACK_USAGE("filemap_page_mkwrite", 48),
STACK_USAGE("generic_file_mmap", 8),
STACK_USAGE("filemap_check_errors", 0),
STACK_USAGE("generic_file_readonly_mmap", 8),
STACK_USAGE("do_read_cache_folio", 72),
STACK_USAGE("read_cache_folio", 0),
STACK_USAGE("read_cache_page", 16),
STACK_USAGE("read_cache_page_gfp", 16),
STACK_USAGE("pagecache_write_begin", 0),
STACK_USAGE("pagecache_write_end", 0),
STACK_USAGE("dio_warn_stale_pagecache", 152),
STACK_USAGE("generic_file_direct_write", 232),
STACK_USAGE("generic_perform_write", 128),
STACK_USAGE("filemap_fdatawrite_wbc", 24),
STACK_USAGE("__generic_file_write_iter", 56),
STACK_USAGE("generic_file_write_iter", 32),
STACK_USAGE("filemap_release_folio", 0),
STACK_USAGE("__filemap_fdatawrite_range", 104),
STACK_USAGE("filemap_fdatawrite", 104),
STACK_USAGE("filemap_fdatawrite_range", 104),
STACK_USAGE("filemap_flush", 104),
STACK_USAGE("filemap_range_has_page", 88),
STACK_USAGE("__traceiter_mm_filemap_delete_from_page_cache", 16),
STACK_USAGE("trace_mm_filemap_delete_from_page_cache", 0),
STACK_USAGE("__filemap_fdatawait_range", 192),
STACK_USAGE("maybe_unlock_mmap_for_io", 16),
STACK_USAGE("filemap_fdatawait_range", 8),
STACK_USAGE("__traceiter_mm_filemap_add_to_page_cache", 16),
STACK_USAGE("filemap_fdatawait_range_keep_errors", 8),
STACK_USAGE("file_fdatawait_range", 8),
STACK_USAGE("__bpf_trace_filemap_set_wb_err", 0),
STACK_USAGE("__traceiter_filemap_set_wb_err", 24),
STACK_USAGE("perf_trace_filemap_set_wb_err", 64),
STACK_USAGE("trace_event_raw_event_filemap_set_wb_err", 80),
STACK_USAGE("trace_raw_output_filemap_set_wb_err", 24),
STACK_USAGE("filemap_fdatawait_keep_errors", 16),
STACK_USAGE("filemap_range_has_writeback", 88),
STACK_USAGE("filemap_write_and_wait_range", 136),
STACK_USAGE("__filemap_set_wb_err", 8),
STACK_USAGE("file_check_and_advance_wb_err", 48),
STACK_USAGE("file_write_and_wait_range", 144),
STACK_USAGE("replace_page_cache_page", 96),
STACK_USAGE("page_mapcount", 0),
STACK_USAGE("__filemap_add_folio", 136),
STACK_USAGE("__bpf_trace_file_check_and_advance_wb_err", 0),
STACK_USAGE("__traceiter_file_check_and_advance_wb_err", 24),
STACK_USAGE("perf_trace_file_check_and_advance_wb_err", 64),
STACK_USAGE("trace_event_raw_event_file_check_and_advance_wb_err", 80),
STACK_USAGE("trace_raw_output_file_check_and_advance_wb_err", 24),
STACK_USAGE("add_to_page_cache_locked", 0),
STACK_USAGE("filemap_add_folio", 40),
STACK_USAGE("filemap_alloc_folio", 56),
STACK_USAGE("redirty_page_for_writepage", 0),
STACK_USAGE("lru_cache_add", 0),
STACK_USAGE("add_to_page_cache_lru", 0),
STACK_USAGE("pagecache_get_page", 24),
STACK_USAGE("page_mapping", 0),
STACK_USAGE("grab_cache_page_write_begin", 0),
STACK_USAGE("delete_from_page_cache", 0),
STACK_USAGE("try_to_release_page", 0),
STACK_USAGE("isolate_lru_page", 0),
STACK_USAGE("putback_lru_page", 0),
STACK_USAGE("unlock_page", 0),
STACK_USAGE("end_page_writeback", 0),
STACK_USAGE("wait_on_page_writeback", 0),
STACK_USAGE("wait_for_stable_page", 0),
STACK_USAGE("page_mapped", 0),
STACK_USAGE("mark_page_accessed", 0),
STACK_USAGE("migrate_page_move_mapping", 0),
STACK_USAGE("migrate_page_states", 0),
STACK_USAGE("migrate_page_copy", 0),
STACK_USAGE("set_page_writeback", 0),
STACK_USAGE("set_page_dirty", 0),
STACK_USAGE("__set_page_dirty_nobuffers", 8),
STACK_USAGE("clear_page_dirty_for_io", 0),
STACK_USAGE("__get_user_pages", 136),
STACK_USAGE("fixup_user_fault", 48),
STACK_USAGE("pmd_trans_unstable", 0),
STACK_USAGE("populate_vma_page_range", 40),
STACK_USAGE("faultin_vma_page_range", 48),
STACK_USAGE("__mm_populate", 88),
STACK_USAGE("fault_in_writeable", 0),
STACK_USAGE("fault_in_safe_writeable", 72),
STACK_USAGE("try_grab_page", 8),
STACK_USAGE("fault_in_readable", 1),
STACK_USAGE("get_dump_page", 104),
STACK_USAGE("__gup_longterm_locked", 152),
STACK_USAGE("__get_user_pages_remote", 96),
STACK_USAGE("get_user_pages_remote", 0),
STACK_USAGE("get_user_pages", 0),
STACK_USAGE("unpin_user_page", 8),
STACK_USAGE("get_user_pages_unlocked", 88),
STACK_USAGE("put_dev_pagemap", 16),
STACK_USAGE("undo_dev_pagemap", 32),
STACK_USAGE("pmd_lock", 8),
STACK_USAGE("unpin_user_pages_dirty_lock", 48),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("internal_get_user_pages_fast", 336),
STACK_USAGE("get_user_pages_fast_only", 0),
STACK_USAGE("get_user_pages_fast", 0),
STACK_USAGE("pin_user_pages_fast", 0),
STACK_USAGE("pin_user_pages_fast_only", 0),
STACK_USAGE("pin_user_pages_remote", 0),
STACK_USAGE("pin_user_pages", 0),
STACK_USAGE("pin_user_pages_unlocked", 0),
STACK_USAGE("unpin_user_page_range_dirty_lock", 48),
STACK_USAGE("unpin_user_pages", 48),
STACK_USAGE("try_get_folio", 24),
STACK_USAGE("follow_page_pte", 128),
STACK_USAGE("follow_page_mask", 96),
STACK_USAGE("follow_page", 48),
STACK_USAGE("check_vma_flags", 24),
STACK_USAGE("try_grab_folio", 16),
STACK_USAGE("copy_huge_pmd", 88),
STACK_USAGE("follow_devmap_pud", 32),
STACK_USAGE("copy_huge_pud", 56),
STACK_USAGE("__bpf_trace_hugepage_set_pmd", 0),
STACK_USAGE("__traceiter_hugepage_set_pmd", 24),
STACK_USAGE("perf_trace_hugepage_set_pmd", 64),
STACK_USAGE("trace_event_raw_event_hugepage_set_pmd", 80),
STACK_USAGE("trace_raw_output_hugepage_set_pmd", 24),
STACK_USAGE("put_page", 0),
STACK_USAGE("huge_pud_set_accessed", 32),
STACK_USAGE("huge_pmd_set_accessed", 32),
STACK_USAGE("do_huge_pmd_wp_page", 48),
STACK_USAGE("mm_get_huge_zero_page", 16),
STACK_USAGE("follow_trans_huge_pmd", 48),
STACK_USAGE("do_huge_pmd_numa_page", 128),
STACK_USAGE("mm_put_huge_zero_page", 0),
STACK_USAGE("madvise_free_huge_pmd", 96),
STACK_USAGE("shrink_huge_zero_page_count", 0),
STACK_USAGE("zap_huge_pmd", 72),
STACK_USAGE("shrink_huge_zero_page_scan", 0),
STACK_USAGE("move_huge_pmd", 72),
STACK_USAGE("change_huge_pmd", 80),
STACK_USAGE("enabled_show", 0),
STACK_USAGE("__pmd_trans_huge_lock", 16),
STACK_USAGE("__pud_trans_huge_lock", 16),
STACK_USAGE("zap_huge_pud", 40),
STACK_USAGE("__split_huge_pud", 96),
STACK_USAGE("enabled_store", 16),
STACK_USAGE("__split_huge_pmd", 192),
STACK_USAGE("split_huge_pmd_address", 0),
STACK_USAGE("vma_adjust_trans_huge", 24),
STACK_USAGE("single_hugepage_flag_show", 0),
STACK_USAGE("remap_page", 24),
STACK_USAGE("single_hugepage_flag_store", 32),
STACK_USAGE("can_split_folio", 16),
STACK_USAGE("split_huge_page_to_list", 216),
STACK_USAGE("pfn_swap_entry_to_page", 0),
STACK_USAGE("defrag_show", 0),
STACK_USAGE("free_transhuge_page", 16),
STACK_USAGE("deferred_split_huge_page", 32),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("deferred_split_count", 0),
STACK_USAGE("deferred_split_scan", 80),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("defrag_store", 16),
STACK_USAGE("split_huge_pages_pid", 48),
STACK_USAGE("split_huge_pages_write", 616),
STACK_USAGE("__bpf_trace_hugepage_update", 0),
STACK_USAGE("__traceiter_hugepage_update", 40),
STACK_USAGE("perf_trace_hugepage_update", 80),
STACK_USAGE("trace_event_raw_event_hugepage_update", 96),
STACK_USAGE("trace_raw_output_hugepage_update", 24),
STACK_USAGE("split_huge_pages_debugfs", 0),
STACK_USAGE("set_pmd_migration_entry", 48),
STACK_USAGE("remove_migration_pmd", 32),
STACK_USAGE("use_zero_page_show", 0),
STACK_USAGE("use_zero_page_store", 24),
STACK_USAGE("hpage_pmd_size_show", 0),
STACK_USAGE("hugepage_init_sysfs", 24),
STACK_USAGE("hugepage_exit_sysfs", 8),
STACK_USAGE("hugepage_init", 32),
STACK_USAGE("mmu_notifier_invalidate_range_start", 8),
STACK_USAGE("setup_transparent_hugepage", 8),
STACK_USAGE("maybe_pmd_mkwrite", 0),
STACK_USAGE("__bpf_trace_migration_pmd", 0),
STACK_USAGE("perf_trace_migration_pmd", 64),
STACK_USAGE("trace_event_raw_event_migration_pmd", 80),
STACK_USAGE("trace_raw_output_migration_pmd", 24),
STACK_USAGE("prep_transhuge_page", 0),
STACK_USAGE("thp_get_unmapped_area", 48),
STACK_USAGE("compound_order", 0),
STACK_USAGE("vma_thp_gfp_mask", 0),
STACK_USAGE("__traceiter_set_migration_pmd", 24),
STACK_USAGE("set_huge_zero_page", 32),
STACK_USAGE("do_huge_pmd_anonymous_page", 72),
STACK_USAGE("__traceiter_remove_migration_pmd", 24),
STACK_USAGE("transparent_hugepage_active", 8),
STACK_USAGE("vmf_insert_pfn_pmd_prot", 80),
STACK_USAGE("vmf_insert_pfn_pud_prot", 80),
STACK_USAGE("thp_order", 0),
STACK_USAGE("thp_nr_pages", 0),
STACK_USAGE("follow_devmap_pmd", 48),
STACK_USAGE("pte_free", 24),
STACK_USAGE("reset_vma_resv_huge_pages", 0),
STACK_USAGE("clear_vma_resv_huge_pages", 48),
STACK_USAGE("huge_pte_lock", 8),
STACK_USAGE("dequeue_huge_page_nodemask", 120),
STACK_USAGE("put_page", 0),
STACK_USAGE("hstate_next_node_to_alloc", 24),
STACK_USAGE("hugepage_new_subpool", 32),
STACK_USAGE("__destroy_compound_gigantic_page", 8),
STACK_USAGE("remove_hugetlb_page", 32),
STACK_USAGE("add_hugetlb_page", 40),
STACK_USAGE("hugepage_put_subpool", 8),
STACK_USAGE("pfn_valid", 0),
STACK_USAGE("__update_and_free_page", 32),
STACK_USAGE("free_hpage_workfn", 24),
STACK_USAGE("size_to_hstate", 0),
STACK_USAGE("free_huge_page", 56),
STACK_USAGE("__prep_new_huge_page", 8),
STACK_USAGE("__prep_compound_gigantic_page", 72),
STACK_USAGE("PageHuge", 0),
STACK_USAGE("PageHeadHuge", 0),
STACK_USAGE("hugetlb_page_mapping_lock_write", 8),
STACK_USAGE("hugetlb_basepage_index", 16),
STACK_USAGE("alloc_fresh_huge_page", 112),
STACK_USAGE("alloc_pool_huge_page", 48),
STACK_USAGE("remove_pool_huge_page", 40),
STACK_USAGE("dissolve_free_huge_page", 40),
STACK_USAGE("dissolve_free_huge_pages", 24),
STACK_USAGE("hugepage_subpool_put_pages", 16),
STACK_USAGE("alloc_surplus_huge_page", 56),
STACK_USAGE("alloc_huge_page_nodemask", 40),
STACK_USAGE("alloc_huge_page_vma", 40),
STACK_USAGE("__vma_reservation_common", 56),
STACK_USAGE("vma_needs_reservation", 24),
STACK_USAGE("vma_end_reservation", 16),
STACK_USAGE("restore_reserve_on_error", 64),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("isolate_or_dissolve_huge_page", 64),
STACK_USAGE("alloc_huge_page", 120),
STACK_USAGE("__alloc_bootmem_huge_page", 16),
STACK_USAGE("gather_bootmem_prealloc", 48),
STACK_USAGE("hugetlb_hstate_alloc_pages_onenode", 88),
STACK_USAGE("hugetlb_hstate_alloc_pages", 88),
STACK_USAGE("hugetlb_init_hstates", 32),
STACK_USAGE("report_hugepages", 72),
STACK_USAGE("css_get", 8),
STACK_USAGE("adjust_pool_surplus", 48),
STACK_USAGE("__nr_hugepages_store_common", 96),
STACK_USAGE("nr_hugepages_show", 0),
STACK_USAGE("nr_hugepages_store", 32),
STACK_USAGE("nr_hugepages_mempolicy_show", 0),
STACK_USAGE("nr_hugepages_mempolicy_store", 32),
STACK_USAGE("nr_overcommit_hugepages_show", 0),
STACK_USAGE("nr_overcommit_hugepages_store", 32),
STACK_USAGE("free_hugepages_show", 0),
STACK_USAGE("resv_hugepages_show", 0),
STACK_USAGE("surplus_hugepages_show", 0),
STACK_USAGE("demote_store", 144),
STACK_USAGE("hugetlb_resv_map_add", 48),
STACK_USAGE("demote_size_show", 0),
STACK_USAGE("demote_size_store", 32),
STACK_USAGE("hugetlb_sysfs_add_hstate", 40),
STACK_USAGE("hugetlb_sysfs_init", 8),
STACK_USAGE("hugetlb_unregister_node", 32),
STACK_USAGE("hugetlb_register_node", 32),
STACK_USAGE("hugetlb_register_all_nodes", 32),
STACK_USAGE("hugetlb_init", 88),
STACK_USAGE("css_put", 16),
STACK_USAGE("arch_hugetlb_valid_size", 0),
STACK_USAGE("hugetlb_add_hstate", 48),
STACK_USAGE("hugetlb_node_alloc_supported", 0),
STACK_USAGE("hugepages_setup", 80),
STACK_USAGE("hugepagesz_setup", 32),
STACK_USAGE("default_hugepagesz_setup", 32),
STACK_USAGE("hugetlb_sysctl_handler", 112),
STACK_USAGE("hugetlb_mempolicy_sysctl_handler", 112),
STACK_USAGE("hugetlb_overcommit_handler", 96),
STACK_USAGE("hugetlb_report_meminfo", 32),
STACK_USAGE("hugetlb_report_node_meminfo", 0),
STACK_USAGE("hugetlb_show_meminfo", 56),
STACK_USAGE("hugetlb_report_usage", 0),
STACK_USAGE("hugetlb_total_pages", 0),
STACK_USAGE("hugetlb_acct_memory", 104),
STACK_USAGE("mmu_notifier_invalidate_range_start", 8),
STACK_USAGE("hugetlb_vm_op_open", 8),
STACK_USAGE("allocate_file_region_entries", 80),
STACK_USAGE("hugetlb_vm_op_close", 72),
STACK_USAGE("hugetlb_vm_op_split", 0),
STACK_USAGE("hugetlb_vm_op_pagesize", 0),
STACK_USAGE("hugetlb_vm_op_fault", 0),
STACK_USAGE("is_hugetlb_entry_migration", 0),
STACK_USAGE("hugetlb_install_page", 40),
STACK_USAGE("copy_hugetlb_page_range", 240),
STACK_USAGE("move_hugetlb_page_tables", 192),
STACK_USAGE("__unmap_hugepage_range", 176),
STACK_USAGE("__unmap_hugepage_range_final", 8),
STACK_USAGE("unmap_hugepage_range", 176),
STACK_USAGE("hugetlb_cow", 320),
STACK_USAGE("region_add", 88),
STACK_USAGE("hugetlbfs_pagecache_page", 0),
STACK_USAGE("hugetlbfs_pagecache_present", 8),
STACK_USAGE("huge_add_to_page_cache", 32),
STACK_USAGE("hugetlb_handle_userfault", 152),
STACK_USAGE("hugetlb_fault_mutex_hash", 0),
STACK_USAGE("hugetlb_fault", 256),
STACK_USAGE("hugetlb_mcopy_atomic_pte", 128),
STACK_USAGE("follow_hugetlb_page", 160),
STACK_USAGE("region_chg", 72),
STACK_USAGE("hugetlb_change_protection", 176),
STACK_USAGE("hugetlb_reserve_pages", 104),
STACK_USAGE("hugetlb_unreserve_pages", 48),
STACK_USAGE("want_pmd_share", 0),
STACK_USAGE("adjust_range_if_pmd_sharing_possible", 0),
STACK_USAGE("huge_pmd_share", 72),
STACK_USAGE("region_del", 72),
STACK_USAGE("huge_pmd_unshare", 56),
STACK_USAGE("huge_pte_alloc", 48),
STACK_USAGE("huge_pte_offset", 0),
STACK_USAGE("follow_huge_addr", 0),
STACK_USAGE("follow_huge_pd", 0),
STACK_USAGE("follow_huge_pmd", 72),
STACK_USAGE("follow_huge_pud", 0),
STACK_USAGE("follow_huge_pgd", 0),
STACK_USAGE("isolate_huge_page", 24),
STACK_USAGE("get_hwpoison_huge_page", 24),
STACK_USAGE("get_huge_page_for_hwpoison", 16),
STACK_USAGE("putback_active_hugepage", 8),
STACK_USAGE("move_hugetlb_state", 40),
STACK_USAGE("hugetlb_unshare_all_pmds", 152),
STACK_USAGE("cmdline_parse_hugetlb_cma", 80),
STACK_USAGE("hugetlb_cma_reserve", 152),
STACK_USAGE("hugetlb_cma_check", 0),
STACK_USAGE("hugetlb_fix_reserve_counts", 24),
STACK_USAGE("linear_hugepage_index", 0),
STACK_USAGE("vma_kernel_pagesize", 0),
STACK_USAGE("vma_mmu_pagesize", 0),
STACK_USAGE("resv_map_alloc", 16),
STACK_USAGE("resv_map_release", 40),
STACK_USAGE("hugetlb_cgroup_css_alloc", 80),
STACK_USAGE("hugetlb_cgroup_css_free", 40),
STACK_USAGE("hugetlb_cgroup_css_offline", 88),
STACK_USAGE("__hugetlb_cgroup_charge_cgroup", 72),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("hugetlb_cgroup_charge_cgroup", 0),
STACK_USAGE("hugetlb_cgroup_charge_cgroup_rsvd", 0),
STACK_USAGE("hugetlb_cgroup_commit_charge", 0),
STACK_USAGE("hugetlb_cgroup_commit_charge_rsvd", 0),
STACK_USAGE("__hugetlb_cgroup_uncharge_page", 40),
STACK_USAGE("hugetlb_cgroup_uncharge_page", 0),
STACK_USAGE("hugetlb_cgroup_uncharge_page_rsvd", 0),
STACK_USAGE("css_put", 16),
STACK_USAGE("hugetlb_cgroup_uncharge_cgroup", 0),
STACK_USAGE("hugetlb_cgroup_uncharge_cgroup_rsvd", 8),
STACK_USAGE("hugetlb_cgroup_uncharge_counter", 8),
STACK_USAGE("hugetlb_cgroup_uncharge_file_region", 16),
STACK_USAGE("hugetlb_cgroup_read_numa_stat", 96),
STACK_USAGE("hugetlb_cgroup_read_u64", 0),
STACK_USAGE("hugetlb_cgroup_read_u64_max", 16),
STACK_USAGE("hugetlb_cgroup_write", 64),
STACK_USAGE("hugetlb_cgroup_write_legacy", 0),
STACK_USAGE("hugetlb_cgroup_write_dfl", 0),
STACK_USAGE("hugetlb_cgroup_reset", 16),
STACK_USAGE("hugetlb_events_show", 16),
STACK_USAGE("hugetlb_events_local_show", 16),
STACK_USAGE("__hugetlb_cgroup_file_dfl_init", 104),
STACK_USAGE("__hugetlb_cgroup_file_legacy_init", 104),
STACK_USAGE("hugetlb_cgroup_file_init", 16),
STACK_USAGE("hugetlb_cgroup_migrate", 24),
STACK_USAGE("early_hugetlb_free_vmemmap_param", 16),
STACK_USAGE("alloc_huge_page_vmemmap", 8),
STACK_USAGE("free_huge_page_vmemmap", 8),
STACK_USAGE("hugetlb_vmemmap_init", 0),
STACK_USAGE("hwpoison_inject", 32),
STACK_USAGE("hwpoison_unpoison", 8),
STACK_USAGE("hwpoison_fops_open", 0),
STACK_USAGE("unpoison_fops_open", 0),
STACK_USAGE("pfn_inject_exit", 0),
STACK_USAGE("pfn_inject_init", 0),
STACK_USAGE("setup_initial_init_mm", 0),
STACK_USAGE("vma_interval_tree_augment_rotate", 0),
STACK_USAGE("vma_interval_tree_insert", 0),
STACK_USAGE("vma_interval_tree_iter_first", 0),
STACK_USAGE("vma_interval_tree_iter_next", 0),
STACK_USAGE("vma_interval_tree_remove", 32),
STACK_USAGE("vma_interval_tree_insert_after", 0),
STACK_USAGE("__anon_vma_interval_tree_augment_rotate", 0),
STACK_USAGE("anon_vma_interval_tree_insert", 0),
STACK_USAGE("anon_vma_interval_tree_remove", 32),
STACK_USAGE("anon_vma_interval_tree_iter_first", 0),
STACK_USAGE("anon_vma_interval_tree_iter_next", 0),
STACK_USAGE("mmap_write_unlock", 8),
STACK_USAGE("__bpf_trace_mm_collapse_huge_page_isolate", 0),
STACK_USAGE("__traceiter_mm_collapse_huge_page_isolate", 48),
STACK_USAGE("perf_trace_mm_collapse_huge_page_isolate", 80),
STACK_USAGE("trace_event_raw_event_mm_collapse_huge_page_isolate", 104),
STACK_USAGE("trace_mm_collapse_huge_page_isolate", 0),
STACK_USAGE("trace_raw_output_mm_collapse_huge_page_isolate", 56),
STACK_USAGE("scan_sleep_millisecs_show", 0),
STACK_USAGE("scan_sleep_millisecs_store", 24),
STACK_USAGE("collect_mm_slot", 16),
STACK_USAGE("collapse_and_free_pmd", 64),
STACK_USAGE("__bpf_trace_mm_collapse_huge_page_swapin", 0),
STACK_USAGE("__traceiter_mm_collapse_huge_page_swapin", 40),
STACK_USAGE("perf_trace_mm_collapse_huge_page_swapin", 72),
STACK_USAGE("trace_event_raw_event_mm_collapse_huge_page_swapin", 96),
STACK_USAGE("trace_mm_collapse_huge_page_swapin", 0),
STACK_USAGE("trace_raw_output_mm_collapse_huge_page_swapin", 24),
STACK_USAGE("collapse_pte_mapped_thp", 88),
STACK_USAGE("alloc_sleep_millisecs_show", 0),
STACK_USAGE("alloc_sleep_millisecs_store", 24),
STACK_USAGE("xas_next_entry", 32),
STACK_USAGE("pages_to_scan_show", 0),
STACK_USAGE("pages_to_scan_store", 24),
STACK_USAGE("mm_counter_file", 0),
STACK_USAGE("pages_collapsed_show", 0),
STACK_USAGE("khugepaged_scan_mm_slot", 456),
STACK_USAGE("full_scans_show", 0),
STACK_USAGE("khugepaged_defrag_show", 0),
STACK_USAGE("khugepaged", 104),
STACK_USAGE("set_recommended_min_free_kbytes", 16),
STACK_USAGE("khugepaged_defrag_store", 0),
STACK_USAGE("start_stop_khugepaged", 8),
STACK_USAGE("khugepaged_min_free_kbytes_update", 0),
STACK_USAGE("pmd_lock", 8),
STACK_USAGE("khugepaged_max_ptes_none_show", 0),
STACK_USAGE("khugepaged_max_ptes_none_store", 24),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("khugepaged_max_ptes_swap_show", 0),
STACK_USAGE("khugepaged_max_ptes_swap_store", 24),
STACK_USAGE("khugepaged_max_ptes_shared_show", 0),
STACK_USAGE("khugepaged_max_ptes_shared_store", 24),
STACK_USAGE("hugepage_madvise", 0),
STACK_USAGE("khugepaged_init", 8),
STACK_USAGE("khugepaged_destroy", 0),
STACK_USAGE("hugepage_vma_check", 0),
STACK_USAGE("mmu_notifier_invalidate_range_start", 8),
STACK_USAGE("__khugepaged_enter", 40),
STACK_USAGE("mmu_notifier_invalidate_range_end", 8),
STACK_USAGE("khugepaged_enter_vma_merge", 16),
STACK_USAGE("__bpf_trace_mm_khugepaged_scan_pmd", 0),
STACK_USAGE("__traceiter_mm_khugepaged_scan_pmd", 48),
STACK_USAGE("perf_trace_mm_khugepaged_scan_pmd", 80),
STACK_USAGE("trace_event_raw_event_mm_khugepaged_scan_pmd", 104),
STACK_USAGE("trace_raw_output_mm_khugepaged_scan_pmd", 72),
STACK_USAGE("__khugepaged_exit", 16),
STACK_USAGE("release_pte_page", 8),
STACK_USAGE("is_refcount_suitable", 8),
STACK_USAGE("__collapse_huge_page_isolate", 120),
STACK_USAGE("__collapse_huge_page_copy", 80),
STACK_USAGE("__bpf_trace_mm_collapse_huge_page", 0),
STACK_USAGE("__traceiter_mm_collapse_huge_page", 32),
STACK_USAGE("perf_trace_mm_collapse_huge_page", 72),
STACK_USAGE("trace_event_raw_event_mm_collapse_huge_page", 88),
STACK_USAGE("trace_raw_output_mm_collapse_huge_page", 40),
STACK_USAGE("mmap_write_trylock", 16),
STACK_USAGE("replace_page", 144),
STACK_USAGE("try_to_merge_one_page", 192),
STACK_USAGE("try_to_merge_with_ksm_page", 64),
STACK_USAGE("__stable_node_chain", 104),
STACK_USAGE("ksm_scan_thread", 184),
STACK_USAGE("ksm_madvise", 32),
STACK_USAGE("__ksm_enter", 40),
STACK_USAGE("__ksm_exit", 16),
STACK_USAGE("ksm_might_need_to_copy", 40),
STACK_USAGE("rmap_walk_ksm", 88),
STACK_USAGE("folio_migrate_ksm", 0),
STACK_USAGE("sleep_millisecs_show", 0),
STACK_USAGE("sleep_millisecs_store", 24),
STACK_USAGE("pages_to_scan_show", 0),
STACK_USAGE("pages_to_scan_store", 24),
STACK_USAGE("run_show", 0),
STACK_USAGE("run_store", 96),
STACK_USAGE("merge_across_nodes_show", 0),
STACK_USAGE("merge_across_nodes_store", 32),
STACK_USAGE("use_zero_pages_show", 0),
STACK_USAGE("use_zero_pages_store", 24),
STACK_USAGE("max_page_sharing_show", 0),
STACK_USAGE("max_page_sharing_store", 32),
STACK_USAGE("pages_shared_show", 0),
STACK_USAGE("pages_sharing_show", 0),
STACK_USAGE("pages_unshared_show", 0),
STACK_USAGE("pages_volatile_show", 0),
STACK_USAGE("ksm_slab_init", 8),
STACK_USAGE("stable_node_dups_show", 0),
STACK_USAGE("stable_node_chains_show", 0),
STACK_USAGE("stable_node_chains_prune_millisecs_show", 0),
STACK_USAGE("stable_node_chains_prune_millisecs_store", 24),
STACK_USAGE("full_scans_show", 0),
STACK_USAGE("ksm_init", 24),
STACK_USAGE("ksm_slab_free", 0),
STACK_USAGE("mmu_notifier_invalidate_range_start", 8),
STACK_USAGE("break_ksm", 32),
STACK_USAGE("break_cow", 24),
STACK_USAGE("remove_node_from_stable_tree", 24),
STACK_USAGE("get_ksm_page", 48),
STACK_USAGE("remove_rmap_item_from_tree", 24),
STACK_USAGE("remove_stable_node", 24),
STACK_USAGE("remove_all_stable_nodes", 40),
STACK_USAGE("list_lru_add", 72),
STACK_USAGE("list_lru_del", 64),
STACK_USAGE("list_lru_isolate", 0),
STACK_USAGE("list_lru_isolate_move", 0),
STACK_USAGE("list_lru_count_one", 24),
STACK_USAGE("list_lru_count_node", 0),
STACK_USAGE("__list_lru_walk_one", 120),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("list_lru_walk_one", 56),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("list_lru_walk_one_irq", 56),
STACK_USAGE("list_lru_walk_node", 96),
STACK_USAGE("memcg_reparent_list_lrus", 112),
STACK_USAGE("memcg_list_lru_alloc", 152),
STACK_USAGE("__list_lru_init", 64),
STACK_USAGE("list_lru_destroy", 96),
STACK_USAGE("copy_from_user_nofault", 8),
STACK_USAGE("copy_to_user_nofault", 8),
STACK_USAGE("strncpy_from_user_nofault", 24),
STACK_USAGE("strnlen_user_nofault", 8),
STACK_USAGE("__copy_overflow", 0),
STACK_USAGE("copy_from_kernel_nofault", 24),
STACK_USAGE("copy_to_kernel_nofault", 0),
STACK_USAGE("strncpy_from_kernel_nofault", 24),
STACK_USAGE("copy_from_kernel_nofault_allowed", 0),
STACK_USAGE("mmap_write_unlock", 8),
STACK_USAGE("mmap_read_lock", 8),
STACK_USAGE("get_page", 0),
STACK_USAGE("put_page", 0),
STACK_USAGE("do_madvise", 344),
STACK_USAGE("__ia32_sys_madvise", 0),
STACK_USAGE("__x64_sys_madvise", 0),
STACK_USAGE("__ia32_sys_process_madvise", 0),
STACK_USAGE("__se_sys_process_madvise", 248),
STACK_USAGE("__x64_sys_process_madvise", 0),
STACK_USAGE("mmap_read_unlock", 8),
STACK_USAGE("swapin_walk_pmd_entry", 72),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("madvise_cold_or_pageout_pte_range", 144),
STACK_USAGE("mmu_notifier_invalidate_range_start", 8),
STACK_USAGE("madvise_free_pte_range", 104),
STACK_USAGE("lock_page", 8),
STACK_USAGE("__next_mem_range", 96),
STACK_USAGE("__next_mem_range_rev", 80),
STACK_USAGE("__next_mem_pfn_range", 32),
STACK_USAGE("memblock_set_node", 32),
STACK_USAGE("memblock_alloc_range_nid", 80),
STACK_USAGE("memblock_phys_alloc_range", 56),
STACK_USAGE("memblock_phys_alloc_try_nid", 0),
STACK_USAGE("memblock_alloc_internal", 48),
STACK_USAGE("memblock_alloc_exact_nid_raw", 64),
STACK_USAGE("memblock_alloc_try_nid_raw", 64),
STACK_USAGE("memblock_alloc_try_nid", 64),
STACK_USAGE("memblock_free_late", 48),
STACK_USAGE("memblock_phys_mem_size", 0),
STACK_USAGE("memblock_reserved_size", 0),
STACK_USAGE("memblock_start_of_DRAM", 0),
STACK_USAGE("memblock_end_of_DRAM", 0),
STACK_USAGE("memblock_enforce_memory_limit", 8),
STACK_USAGE("memblock_cap_memory_range", 48),
STACK_USAGE("memblock_mem_limit_remove_map", 0),
STACK_USAGE("memblock_is_reserved", 0),
STACK_USAGE("memblock_is_memory", 0),
STACK_USAGE("memblock_is_map_memory", 0),
STACK_USAGE("memblock_search_pfn_nid", 0),
STACK_USAGE("memblock_is_region_memory", 0),
STACK_USAGE("memblock_overlaps_region", 0),
STACK_USAGE("memblock_is_region_reserved", 0),
STACK_USAGE("memblock_trim_memory", 32),
STACK_USAGE("memblock_set_current_limit", 0),
STACK_USAGE("memblock_get_current_limit", 0),
STACK_USAGE("memblock_dump", 120),
STACK_USAGE("__memblock_dump_all", 0),
STACK_USAGE("memblock_dump_all", 0),
STACK_USAGE("memblock_allow_resize", 0),
STACK_USAGE("early_memblock", 0),
STACK_USAGE("__free_pages_memory", 32),
STACK_USAGE("memmap_init_reserved_pages", 56),
STACK_USAGE("free_low_memory_core_early", 80),
STACK_USAGE("reset_node_managed_pages", 0),
STACK_USAGE("reset_all_zones_managed_pages", 0),
STACK_USAGE("memblock_free_all", 0),
STACK_USAGE("__memblock_find_range_bottom_up", 88),
STACK_USAGE("__memblock_find_range_top_down", 88),
STACK_USAGE("memblock_find_in_range_node", 0),
STACK_USAGE("memblock_find_in_range", 48),
STACK_USAGE("memblock_remove_region", 8),
STACK_USAGE("memblock_discard", 0),
STACK_USAGE("memblock_double_array", 96),
STACK_USAGE("memblock_merge_regions", 24),
STACK_USAGE("memblock_insert_region", 48),
STACK_USAGE("memblock_add_range", 72),
STACK_USAGE("memblock_add_node", 56),
STACK_USAGE("memblock_add", 40),
STACK_USAGE("memblock_isolate_range", 64),
STACK_USAGE("memblock_remove_range", 48),
STACK_USAGE("memblock_remove", 40),
STACK_USAGE("memblock_free", 0),
STACK_USAGE("memblock_phys_free", 40),
STACK_USAGE("memblock_reserve", 40),
STACK_USAGE("memblock_setclr_flag", 40),
STACK_USAGE("memblock_mark_hotplug", 0),
STACK_USAGE("memblock_clear_hotplug", 0),
STACK_USAGE("memblock_mark_mirror", 0),
STACK_USAGE("memblock_mark_nomap", 0),
STACK_USAGE("memblock_clear_nomap", 0),
STACK_USAGE("mem_cgroup_iter", 48),
STACK_USAGE("mem_cgroup_iter_break", 0),
STACK_USAGE("mem_cgroup_scan_tasks", 160),
STACK_USAGE("folio_lruvec_lock", 8),
STACK_USAGE("folio_lruvec_lock_irq", 8),
STACK_USAGE("folio_lruvec_lock_irqsave", 16),
STACK_USAGE("mem_cgroup_update_lru_size", 24),
STACK_USAGE("memory_stat_format", 88),
STACK_USAGE("mem_cgroup_print_oom_context", 16),
STACK_USAGE("mem_cgroup_print_oom_meminfo", 8),
STACK_USAGE("mem_cgroup_get_max", 0),
STACK_USAGE("mem_cgroup_size", 0),
STACK_USAGE("mem_cgroup_out_of_memory", 96),
STACK_USAGE("mem_cgroup_oom_trylock", 24),
STACK_USAGE("memcg_oom_wake_function", 0),
STACK_USAGE("mem_cgroup_oom_synchronize", 104),
STACK_USAGE("mem_cgroup_get_oom_group", 24),
STACK_USAGE("percpu_ref_get_many", 16),
STACK_USAGE("mem_cgroup_print_oom_group", 8),
STACK_USAGE("folio_memcg_lock", 56),
STACK_USAGE("lock_page_memcg", 0),
STACK_USAGE("__folio_memcg_unlock", 0),
STACK_USAGE("folio_memcg_unlock", 0),
STACK_USAGE("unlock_page_memcg", 0),
STACK_USAGE("drain_local_stock", 56),
STACK_USAGE("__refill_stock", 32),
STACK_USAGE("refill_stock", 48),
STACK_USAGE("drain_all_stock", 48),
STACK_USAGE("memcg_hotplug_cpu_dead", 16),
STACK_USAGE("reclaim_high", 32),
STACK_USAGE("high_work_func", 0),
STACK_USAGE("swap_find_max_overage", 40),
STACK_USAGE("memcg_to_vmpressure", 0),
STACK_USAGE("mem_cgroup_handle_over_high", 56),
STACK_USAGE("vmpressure_to_memcg", 0),
STACK_USAGE("try_charge_memcg", 192),
STACK_USAGE("mem_cgroup_kmem_disabled", 0),
STACK_USAGE("percpu_ref_tryget", 8),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("obj_cgroup_release", 24),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("mod_objcg_mlstate", 48),
STACK_USAGE("local_lock_acquire", 8),
STACK_USAGE("memcg_alloc_slab_cgroups", 16),
STACK_USAGE("mem_cgroup_from_obj", 0),
STACK_USAGE("get_obj_cgroup_from_current", 16),
STACK_USAGE("memcg_account_kmem", 32),
STACK_USAGE("__memcg_kmem_charge_page", 48),
STACK_USAGE("__memcg_kmem_uncharge_page", 32),
STACK_USAGE("mod_objcg_state", 88),
STACK_USAGE("drain_obj_stock", 40),
STACK_USAGE("refill_obj_stock", 64),
STACK_USAGE("obj_cgroup_charge", 72),
STACK_USAGE("obj_cgroup_uncharge", 0),
STACK_USAGE("split_page_memcg", 16),
STACK_USAGE("mem_cgroup_resize_max", 64),
STACK_USAGE("mem_cgroup_soft_limit_reclaim", 152),
STACK_USAGE("mem_cgroup_force_empty_write", 24),
STACK_USAGE("percpu_ref_put", 8),
STACK_USAGE("local_lock_release", 8),
STACK_USAGE("mem_cgroup_hierarchy_read", 0),
STACK_USAGE("mem_cgroup_hierarchy_write", 8),
STACK_USAGE("mem_cgroup_read_u64", 8),
STACK_USAGE("memcg_offline_kmem", 24),
STACK_USAGE("memcg_update_tcp_max", 16),
STACK_USAGE("mem_cgroup_write", 48),
STACK_USAGE("mem_cgroup_css_from_page", 0),
STACK_USAGE("mem_cgroup_reset", 16),
STACK_USAGE("mem_cgroup_move_charge_read", 0),
STACK_USAGE("mem_cgroup_move_charge_write", 0),
STACK_USAGE("mem_cgroup_node_nr_lru_pages", 72),
STACK_USAGE("memcg_numa_stat_show", 104),
STACK_USAGE("memcg_stat_show", 64),
STACK_USAGE("page_cgroup_ino", 8),
STACK_USAGE("mem_cgroup_swappiness_read", 0),
STACK_USAGE("mem_cgroup_swappiness_write", 0),
STACK_USAGE("__mem_cgroup_threshold", 48),
STACK_USAGE("mem_cgroup_threshold", 8),
STACK_USAGE("compare_thresholds", 0),
STACK_USAGE("__mem_cgroup_usage_register_event", 80),
STACK_USAGE("mem_cgroup_usage_register_event", 0),
STACK_USAGE("memsw_cgroup_usage_register_event", 0),
STACK_USAGE("__mem_cgroup_usage_unregister_event", 48),
STACK_USAGE("mem_cgroup_usage_unregister_event", 0),
STACK_USAGE("memsw_cgroup_usage_unregister_event", 0),
STACK_USAGE("mem_cgroup_oom_register_event", 24),
STACK_USAGE("mem_cgroup_oom_unregister_event", 40),
STACK_USAGE("mem_cgroup_oom_control_read", 16),
STACK_USAGE("mem_cgroup_oom_control_write", 8),
STACK_USAGE("mem_cgroup_wb_domain", 0),
STACK_USAGE("mem_cgroup_wb_stats", 40),
STACK_USAGE("mem_cgroup_track_foreign_dirty_slowpath", 32),
STACK_USAGE("mem_cgroup_flush_foreign", 48),
STACK_USAGE("memcg_event_remove", 24),
STACK_USAGE("memcg_event_wake", 16),
STACK_USAGE("memcg_event_ptable_queue_proc", 0),
STACK_USAGE("memcg_write_event_control", 112),
STACK_USAGE("mem_cgroup_slab_show", 0),
STACK_USAGE("mem_cgroup_update_tree", 88),
STACK_USAGE("mem_cgroup_from_id", 8),
STACK_USAGE("__mem_cgroup_free", 48),
STACK_USAGE("mem_cgroup_css_alloc", 64),
STACK_USAGE("mem_cgroup_css_online", 16),
STACK_USAGE("mem_cgroup_css_offline", 32),
STACK_USAGE("mem_cgroup_css_released", 32),
STACK_USAGE("mem_cgroup_css_free", 72),
STACK_USAGE("get_mem_cgroup_from_objcg", 16),
STACK_USAGE("mem_cgroup_css_reset", 24),
STACK_USAGE("mem_cgroup_css_rstat_flush", 40),
STACK_USAGE("mem_cgroup_do_precharge", 16),
STACK_USAGE("mem_cgroup_move_account", 104),
STACK_USAGE("get_mctgt_type", 48),
STACK_USAGE("get_mctgt_type_thp", 0),
STACK_USAGE("mem_cgroup_count_precharge_pte_range", 56),
STACK_USAGE("__mem_cgroup_clear_mc", 32),
STACK_USAGE("mem_cgroup_can_attach", 72),
STACK_USAGE("mem_cgroup_cancel_attach", 8),
STACK_USAGE("mem_cgroup_move_charge_pte_range", 104),
STACK_USAGE("mem_cgroup_move_task", 16),
STACK_USAGE("memory_current_read", 0),
STACK_USAGE("memory_min_show", 8),
STACK_USAGE("memory_min_write", 40),
STACK_USAGE("memory_low_show", 8),
STACK_USAGE("memory_low_write", 40),
STACK_USAGE("memory_high_show", 8),
STACK_USAGE("memory_high_write", 56),
STACK_USAGE("memory_max_show", 8),
STACK_USAGE("memory_max_write", 64),
STACK_USAGE("memory_events_show", 16),
STACK_USAGE("memory_events_local_show", 16),
STACK_USAGE("memory_stat_show", 16),
STACK_USAGE("memory_numa_stat_show", 64),
STACK_USAGE("memory_oom_group_show", 8),
STACK_USAGE("memory_oom_group_write", 40),
STACK_USAGE("__mem_cgroup_flush_stats", 24),
STACK_USAGE("mem_cgroup_flush_stats", 0),
STACK_USAGE("mem_cgroup_flush_stats_delayed", 0),
STACK_USAGE("mem_cgroup_calculate_protection", 0),
STACK_USAGE("charge_memcg", 40),
STACK_USAGE("flush_memcg_stats_dwork", 0),
STACK_USAGE("__mem_cgroup_charge", 24),
STACK_USAGE("mem_cgroup_swapin_charge_page", 40),
STACK_USAGE("mem_cgroup_swapin_uncharge_swap", 0),
STACK_USAGE("uncharge_batch", 32),
STACK_USAGE("__mod_memcg_state", 24),
STACK_USAGE("uncharge_folio", 32),
STACK_USAGE("__mem_cgroup_uncharge", 56),
STACK_USAGE("__mem_cgroup_uncharge_list", 72),
STACK_USAGE("mem_cgroup_migrate", 48),
STACK_USAGE("mem_cgroup_sk_alloc", 16),
STACK_USAGE("mem_cgroup_sk_free", 0),
STACK_USAGE("mem_cgroup_charge_skmem", 48),
STACK_USAGE("mem_cgroup_uncharge_skmem", 40),
STACK_USAGE("__mod_memcg_lruvec_state", 40),
STACK_USAGE("cgroup_memory", 32),
STACK_USAGE("mem_cgroup_init", 48),
STACK_USAGE("mem_cgroup_swapout", 64),
STACK_USAGE("__mem_cgroup_try_charge_swap", 64),
STACK_USAGE("__mem_cgroup_uncharge_swap", 40),
STACK_USAGE("mem_cgroup_get_nr_swap_pages", 0),
STACK_USAGE("mem_cgroup_swap_full", 0),
STACK_USAGE("setup_swap_account", 8),
STACK_USAGE("swap_current_read", 0),
STACK_USAGE("swap_high_show", 8),
STACK_USAGE("swap_high_write", 40),
STACK_USAGE("swap_max_show", 8),
STACK_USAGE("swap_max_write", 40),
STACK_USAGE("swap_events_show", 16),
STACK_USAGE("mem_cgroup_swap_init", 0),
STACK_USAGE("__mod_lruvec_state", 24),
STACK_USAGE("__mod_lruvec_page_state", 32),
STACK_USAGE("__mod_lruvec_kmem_state", 32),
STACK_USAGE("__count_memcg_events", 24),
STACK_USAGE("mem_cgroup_event_ratelimit", 48),
STACK_USAGE("memcg_check_events", 32),
STACK_USAGE("mem_cgroup_from_task", 16),
STACK_USAGE("get_mem_cgroup_from_mm", 16),
STACK_USAGE("memfd_fcntl", 160),
STACK_USAGE("__ia32_sys_memfd_create", 0),
STACK_USAGE("__se_sys_memfd_create", 40),
STACK_USAGE("__x64_sys_memfd_create", 0),
STACK_USAGE("me_swapcache_clean", 32),
STACK_USAGE("me_huge_page", 32),
STACK_USAGE("action_result", 24),
STACK_USAGE("SetPageHWPoisonTakenOff", 0),
STACK_USAGE("ClearPageHWPoisonTakenOff", 0),
STACK_USAGE("put_page", 0),
STACK_USAGE("get_hwpoison_page", 56),
STACK_USAGE("hwpoison_user_mappings", 128),
STACK_USAGE("try_to_split_thp_page", 24),
STACK_USAGE("__get_huge_page_for_hwpoison", 16),
STACK_USAGE("memory_failure", 104),
STACK_USAGE("hwpoison_filter", 8),
STACK_USAGE("memory_failure_queue", 40),
STACK_USAGE("memory_failure_work_func", 40),
STACK_USAGE("memory_failure_queue_kick", 8),
STACK_USAGE("memory_failure_init", 40),
STACK_USAGE("clear_page_hwpoison", 8),
STACK_USAGE("unpoison_taken_off_page", 16),
STACK_USAGE("unpoison_memory", 40),
STACK_USAGE("soft_offline_page", 120),
STACK_USAGE("shake_page", 8),
STACK_USAGE("page_mkclean", 0),
STACK_USAGE("add_to_kill", 40),
STACK_USAGE("hwpoison_pte_range", 64),
STACK_USAGE("hwpoison_hugetlb_range", 8),
STACK_USAGE("kill_accessing_process", 112),
STACK_USAGE("delete_from_lru_cache", 16),
STACK_USAGE("truncate_error_page", 24),
STACK_USAGE("page_mapcount", 0),
STACK_USAGE("me_kernel", 0),
STACK_USAGE("page_handle_poison", 24),
STACK_USAGE("me_unknown", 8),
STACK_USAGE("me_pagecache_clean", 32),
STACK_USAGE("me_pagecache_dirty", 24),
STACK_USAGE("page_count", 0),
STACK_USAGE("me_swapcache_dirty", 32),
STACK_USAGE("count_memcg_event_mm", 32),
STACK_USAGE("put_page", 0),
STACK_USAGE("copy_page_range", 424),
STACK_USAGE("disable_randmaps", 0),
STACK_USAGE("pfn_valid", 0),
STACK_USAGE("unmap_page_range", 248),
STACK_USAGE("unmap_single_vma", 40),
STACK_USAGE("unmap_vmas", 88),
STACK_USAGE("init_zero_pfn", 0),
STACK_USAGE("zap_page_range", 208),
STACK_USAGE("zap_page_range_single", 216),
STACK_USAGE("zap_vma_ptes", 0),
STACK_USAGE("mm_trace_rss_stat", 0),
STACK_USAGE("walk_to_pmd", 32),
STACK_USAGE("__get_locked_pte", 32),
STACK_USAGE("insert_page_into_pte_locked", 48),
STACK_USAGE("sync_mm_rss", 16),
STACK_USAGE("vm_insert_pages", 136),
STACK_USAGE("add_mm_counter_fast", 0),
STACK_USAGE("vm_insert_page", 56),
STACK_USAGE("vm_map_pages", 48),
STACK_USAGE("kmap_atomic", 8),
STACK_USAGE("vm_map_pages_zero", 40),
STACK_USAGE("insert_pfn", 88),
STACK_USAGE("vmf_insert_pfn_prot", 48),
STACK_USAGE("vmf_insert_pfn", 0),
STACK_USAGE("__vm_insert_mixed", 56),
STACK_USAGE("__kunmap_atomic", 0),
STACK_USAGE("vmf_insert_mixed_prot", 0),
STACK_USAGE("vmf_insert_mixed", 0),
STACK_USAGE("vmf_insert_mixed_mkwrite", 0),
STACK_USAGE("remap_pfn_range_notrack", 224),
STACK_USAGE("remap_pfn_range", 64),
STACK_USAGE("vm_iomap_memory", 64),
STACK_USAGE("_compound_head", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("__apply_to_page_range", 176),
STACK_USAGE("apply_to_page_range", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("apply_to_existing_page_range", 0),
STACK_USAGE("fault_dirty_shared_page", 48),
STACK_USAGE("wp_page_reuse", 16),
STACK_USAGE("wp_page_copy", 152),
STACK_USAGE("finish_mkwrite_fault", 32),
STACK_USAGE("wp_page_shared", 32),
STACK_USAGE("do_wp_page", 24),
STACK_USAGE("unmap_mapping_range_tree", 40),
STACK_USAGE("unmap_mapping_folio", 56),
STACK_USAGE("free_pgd_range", 200),
STACK_USAGE("unmap_mapping_pages", 56),
STACK_USAGE("unmap_mapping_range", 72),
STACK_USAGE("do_swap_page", 88),
STACK_USAGE("__do_fault", 32),
STACK_USAGE("do_set_pmd", 56),
STACK_USAGE("free_pgtables", 56),
STACK_USAGE("do_set_pte", 48),
STACK_USAGE("finish_fault", 48),
STACK_USAGE("fault_around_bytes_get", 0),
STACK_USAGE("fault_around_bytes_set", 8),
STACK_USAGE("fault_around_bytes_fops_open", 0),
STACK_USAGE("fault_around_debugfs", 0),
STACK_USAGE("pmd_install", 40),
STACK_USAGE("numa_migrate_prep", 0),
STACK_USAGE("mmu_notifier_invalidate_range_start", 8),
STACK_USAGE("__pte_alloc", 56),
STACK_USAGE("__pte_alloc_kernel", 32),
STACK_USAGE("mmu_notifier_invalidate_range_end", 8),
STACK_USAGE("handle_mm_fault", 248),
STACK_USAGE("__p4d_alloc", 32),
STACK_USAGE("__pud_alloc", 48),
STACK_USAGE("__pmd_alloc", 56),
STACK_USAGE("follow_invalidate_pte", 88),
STACK_USAGE("add_mm_rss_vec", 16),
STACK_USAGE("follow_pte", 0),
STACK_USAGE("follow_pfn", 32),
STACK_USAGE("follow_phys", 56),
STACK_USAGE("generic_access_phys", 96),
STACK_USAGE("print_bad_pte", 64),
STACK_USAGE("__access_remote_vm", 104),
STACK_USAGE("access_remote_vm", 0),
STACK_USAGE("put_swap_device", 8),
STACK_USAGE("access_process_vm", 40),
STACK_USAGE("print_vma_addr", 48),
STACK_USAGE("__might_fault", 8),
STACK_USAGE("clear_gigantic_page", 32),
STACK_USAGE("clear_huge_page", 48),
STACK_USAGE("copy_user_gigantic_page", 48),
STACK_USAGE("copy_user_huge_page", 56),
STACK_USAGE("copy_huge_page_from_user", 72),
STACK_USAGE("ptlock_cache_init", 0),
STACK_USAGE("ptlock_alloc", 8),
STACK_USAGE("ptlock_free", 0),
STACK_USAGE("vm_normal_page", 8),
STACK_USAGE("vm_normal_page_pmd", 8),
STACK_USAGE("trylock_page", 0),
STACK_USAGE("lock_page", 8),
STACK_USAGE("page_count", 0),
STACK_USAGE("migrate_page_add", 24),
STACK_USAGE("do_migrate_pages", 224),
STACK_USAGE("new_page", 40),
STACK_USAGE("get_nodes", 64),
STACK_USAGE("numa_map_to_online_node", 56),
STACK_USAGE("__ia32_sys_set_mempolicy_home_node", 0),
STACK_USAGE("__se_sys_set_mempolicy_home_node", 80),
STACK_USAGE("__x64_sys_set_mempolicy_home_node", 0),
STACK_USAGE("__ia32_sys_mbind", 0),
STACK_USAGE("__se_sys_mbind", 160),
STACK_USAGE("__x64_sys_mbind", 0),
STACK_USAGE("__ia32_sys_set_mempolicy", 32),
STACK_USAGE("__x64_sys_set_mempolicy", 32),
STACK_USAGE("get_task_policy", 0),
STACK_USAGE("__ia32_sys_migrate_pages", 0),
STACK_USAGE("__se_sys_migrate_pages", 72),
STACK_USAGE("__x64_sys_migrate_pages", 0),
STACK_USAGE("__ia32_sys_get_mempolicy", 0),
STACK_USAGE("__se_sys_get_mempolicy", 96),
STACK_USAGE("__x64_sys_get_mempolicy", 0),
STACK_USAGE("vma_migratable", 0),
STACK_USAGE("__get_vma_policy", 0),
STACK_USAGE("vma_policy_mof", 8),
STACK_USAGE("policy_nodemask", 8),
STACK_USAGE("mempolicy_slab_node", 24),
STACK_USAGE("interleave_nid", 24),
STACK_USAGE("mpol_new_nodemask", 0),
STACK_USAGE("huge_node", 48),
STACK_USAGE("init_nodemask_of_mempolicy", 24),
STACK_USAGE("mpol_new_preferred", 8),
STACK_USAGE("mempolicy_in_oom_domain", 24),
STACK_USAGE("alloc_page_interleave", 16),
STACK_USAGE("alloc_pages_vma", 88),
STACK_USAGE("vma_alloc_folio", 16),
STACK_USAGE("alloc_pages", 48),
STACK_USAGE("folio_alloc", 16),
STACK_USAGE("alloc_pages_bulk_array_mempolicy", 80),
STACK_USAGE("vma_dup_policy", 16),
STACK_USAGE("__mpol_dup", 48),
STACK_USAGE("__mpol_equal", 0),
STACK_USAGE("mpol_shared_policy_lookup", 32),
STACK_USAGE("mpol_misplaced", 72),
STACK_USAGE("mpol_put_task_policy", 24),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("mpol_shared_policy_init", 280),
STACK_USAGE("mpol_set_shared_policy", 72),
STACK_USAGE("mpol_free_shared_policy", 32),
STACK_USAGE("check_numabalancing_enable", 0),
STACK_USAGE("setup_numabalancing", 8),
STACK_USAGE("numa_policy_init", 56),
STACK_USAGE("numa_default_policy", 24),
STACK_USAGE("mpol_parse_str", 80),
STACK_USAGE("__mpol_put", 0),
STACK_USAGE("mpol_to_str", 64),
STACK_USAGE("mpol_rebind_default", 0),
STACK_USAGE("mpol_rebind_nodemask", 48),
STACK_USAGE("mpol_rebind_preferred", 0),
STACK_USAGE("mpol_rebind_task", 0),
STACK_USAGE("mpol_rebind_mm", 32),
STACK_USAGE("queue_pages_pte_range", 96),
STACK_USAGE("queue_pages_hugetlb", 48),
STACK_USAGE("change_prot_numa", 0),
STACK_USAGE("queue_pages_test_walk", 8),
STACK_USAGE("mbind_range", 72),
STACK_USAGE("mpol_cond_put", 0),
STACK_USAGE("do_set_mempolicy", 80),
STACK_USAGE("remove_element", 8),
STACK_USAGE("mempool_exit", 32),
STACK_USAGE("mempool_destroy", 32),
STACK_USAGE("mempool_init_node", 48),
STACK_USAGE("mempool_init", 0),
STACK_USAGE("mempool_create", 40),
STACK_USAGE("mempool_create_node", 56),
STACK_USAGE("mempool_resize", 48),
STACK_USAGE("mempool_alloc", 104),
STACK_USAGE("mempool_free", 16),
STACK_USAGE("mempool_alloc_slab", 0),
STACK_USAGE("mempool_free_slab", 0),
STACK_USAGE("mempool_kmalloc", 0),
STACK_USAGE("mempool_kfree", 0),
STACK_USAGE("mempool_alloc_pages", 0),
STACK_USAGE("mempool_free_pages", 0),
STACK_USAGE("put_page", 0),
STACK_USAGE("migrate_pages", 288),
STACK_USAGE("putback_movable_pages", 48),
STACK_USAGE("alloc_migration_target", 32),
STACK_USAGE("move_pages_and_store_status", 96),
STACK_USAGE("remove_migration_pte", 144),
STACK_USAGE("__ia32_sys_move_pages", 0),
STACK_USAGE("__se_sys_move_pages", 328),
STACK_USAGE("__x64_sys_move_pages", 0),
STACK_USAGE("alloc_misplaced_dst_page", 0),
STACK_USAGE("migrate_misplaced_page", 96),
STACK_USAGE("next_demotion_node", 16),
STACK_USAGE("__set_migration_target_nodes", 112),
STACK_USAGE("set_migration_target_nodes", 0),
STACK_USAGE("migrate_on_reclaim_init", 0),
STACK_USAGE("numa_demotion_enabled_show", 0),
STACK_USAGE("numa_demotion_enabled_store", 24),
STACK_USAGE("numa_init_sysfs", 16),
STACK_USAGE("remove_migration_ptes", 48),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("__migration_entry_wait", 16),
STACK_USAGE("migration_entry_wait", 24),
STACK_USAGE("migration_entry_wait_huge", 16),
STACK_USAGE("pmd_migration_entry_wait", 16),
STACK_USAGE("folio_migrate_mapping", 168),
STACK_USAGE("migrate_huge_page_move_mapping", 112),
STACK_USAGE("folio_migrate_flags", 16),
STACK_USAGE("folio_migrate_copy", 16),
STACK_USAGE("migrate_page", 32),
STACK_USAGE("isolate_movable_page", 24),
STACK_USAGE("__buffer_migrate_page", 56),
STACK_USAGE("buffer_migrate_page", 0),
STACK_USAGE("buffer_migrate_page_norefs", 0),
STACK_USAGE("move_to_new_page", 184),
STACK_USAGE("lock_page", 8),
STACK_USAGE("__ia32_sys_mincore", 0),
STACK_USAGE("__se_sys_mincore", 64),
STACK_USAGE("__x64_sys_mincore", 0),
STACK_USAGE("mincore_hugetlb", 32),
STACK_USAGE("mincore_page", 8),
STACK_USAGE("mincore_unmapped_range", 56),
STACK_USAGE("mincore_pte_range", 80),
STACK_USAGE("page_evictable", 8),
STACK_USAGE("mlock_pagevec", 96),
STACK_USAGE("mlock_page_drain_local", 8),
STACK_USAGE("mlock_page_drain_remote", 0),
STACK_USAGE("need_mlock_page_drain", 0),
STACK_USAGE("mlock_folio", 24),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("mlock_new_page", 24),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("local_lock_acquire", 8),
STACK_USAGE("munlock_page", 8),
STACK_USAGE("mlock_pte_range", 56),
STACK_USAGE("local_lock_release", 8),
STACK_USAGE("mlock_fixup", 64),
STACK_USAGE("can_do_mlock", 0),
STACK_USAGE("apply_vma_lock_flags", 64),
STACK_USAGE("do_mlock", 64),
STACK_USAGE("__ia32_sys_mlock", 0),
STACK_USAGE("__x64_sys_mlock", 0),
STACK_USAGE("__ia32_sys_mlock2", 0),
STACK_USAGE("__x64_sys_mlock2", 0),
STACK_USAGE("__ia32_sys_munlock", 0),
STACK_USAGE("__se_sys_munlock", 40),
STACK_USAGE("__x64_sys_munlock", 0),
STACK_USAGE("apply_mlockall_flags", 40),
STACK_USAGE("__ia32_sys_mlockall", 0),
STACK_USAGE("__se_sys_mlockall", 40),
STACK_USAGE("__x64_sys_mlockall", 0),
STACK_USAGE("__do_sys_munlockall", 40),
STACK_USAGE("user_shm_lock", 32),
STACK_USAGE("user_shm_unlock", 16),
STACK_USAGE("set_mminit_loglevel", 16),
STACK_USAGE("mm_compute_batch", 8),
STACK_USAGE("mm_compute_batch_init", 8),
STACK_USAGE("mm_sysfs_init", 0),
STACK_USAGE("mminit_verify_zonelist", 64),
STACK_USAGE("mminit_verify_pageflags_layout", 0),
STACK_USAGE("can_vma_merge_before", 0),
STACK_USAGE("mmap_write_downgrade", 8),
STACK_USAGE("__bpf_trace_vm_unmapped_area", 0),
STACK_USAGE("__traceiter_vm_unmapped_area", 24),
STACK_USAGE("perf_trace_vm_unmapped_area", 64),
STACK_USAGE("trace_event_raw_event_vm_unmapped_area", 80),
STACK_USAGE("trace_raw_output_vm_unmapped_area", 24),
STACK_USAGE("vma_merge", 64),
STACK_USAGE("vm_get_page_prot", 0),
STACK_USAGE("find_mergeable_anon_vma", 16),
STACK_USAGE("vma_set_page_prot", 48),
STACK_USAGE("mlock_future_check", 0),
STACK_USAGE("file_mmap_ok", 0),
STACK_USAGE("do_mmap", 104),
STACK_USAGE("ksys_mmap_pgoff", 56),
STACK_USAGE("__ia32_sys_mmap_pgoff", 0),
STACK_USAGE("__x64_sys_mmap_pgoff", 0),
STACK_USAGE("unlink_file_vma", 24),
STACK_USAGE("vma_wants_writenotify", 0),
STACK_USAGE("mmap_region", 120),
STACK_USAGE("__ia32_sys_brk", 0),
STACK_USAGE("__se_sys_brk", 88),
STACK_USAGE("__x64_sys_brk", 0),
STACK_USAGE("vm_unmapped_area", 48),
STACK_USAGE("get_unmapped_area", 32),
STACK_USAGE("find_vma", 24),
STACK_USAGE("find_vma_prev", 32),
STACK_USAGE("expand_downwards", 64),
STACK_USAGE("cmdline_parse_stack_guard_gap", 24),
STACK_USAGE("expand_stack", 0),
STACK_USAGE("find_extend_vma", 24),
STACK_USAGE("unmap_region", 184),
STACK_USAGE("__split_vma", 40),
STACK_USAGE("split_vma", 0),
STACK_USAGE("__do_munmap", 80),
STACK_USAGE("do_munmap", 0),
STACK_USAGE("__vm_munmap", 80),
STACK_USAGE("vm_munmap", 0),
STACK_USAGE("__ia32_sys_munmap", 0),
STACK_USAGE("__x64_sys_munmap", 0),
STACK_USAGE("__ia32_sys_remap_file_pages", 0),
STACK_USAGE("__se_sys_remap_file_pages", 88),
STACK_USAGE("__x64_sys_remap_file_pages", 0),
STACK_USAGE("do_brk_flags", 104),
STACK_USAGE("vm_brk_flags", 80),
STACK_USAGE("vm_brk", 0),
STACK_USAGE("exit_mmap", 176),
STACK_USAGE("insert_vm_struct", 40),
STACK_USAGE("copy_vma", 88),
STACK_USAGE("may_expand_vm", 0),
STACK_USAGE("vm_stat_account", 0),
STACK_USAGE("special_mapping_close", 0),
STACK_USAGE("special_mapping_name", 0),
STACK_USAGE("special_mapping_mremap", 0),
STACK_USAGE("special_mapping_split", 0),
STACK_USAGE("special_mapping_fault", 0),
STACK_USAGE("__install_special_mapping", 56),
STACK_USAGE("vma_is_special_mapping", 0),
STACK_USAGE("_install_special_mapping", 0),
STACK_USAGE("install_special_mapping", 0),
STACK_USAGE("mm_take_all_locks", 56),
STACK_USAGE("mm_drop_all_locks", 24),
STACK_USAGE("mmap_init", 0),
STACK_USAGE("init_user_reserve", 0),
STACK_USAGE("init_admin_reserve", 0),
STACK_USAGE("init_reserve_notifier", 0),
STACK_USAGE("vma_gap_callbacks_rotate", 0),
STACK_USAGE("__vma_link_rb", 8),
STACK_USAGE("vma_link", 48),
STACK_USAGE("__vma_adjust", 208),
STACK_USAGE("trace_mmap_lock_unreg", 0),
STACK_USAGE("__bpf_trace_mmap_lock", 0),
STACK_USAGE("perf_trace_mmap_lock", 96),
STACK_USAGE("trace_event_raw_event_mmap_lock", 104),
STACK_USAGE("trace_raw_output_mmap_lock", 24),
STACK_USAGE("get_mm_memcg_path", 24),
STACK_USAGE("__mmap_lock_do_trace_start_locking", 24),
STACK_USAGE("__mmap_lock_do_trace_acquire_returned", 32),
STACK_USAGE("__mmap_lock_do_trace_released", 24),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("local_lock_acquire", 8),
STACK_USAGE("local_lock_release", 8),
STACK_USAGE("__traceiter_mmap_lock_start_locking", 32),
STACK_USAGE("__traceiter_mmap_lock_released", 32),
STACK_USAGE("__bpf_trace_mmap_lock_acquire_returned", 0),
STACK_USAGE("__traceiter_mmap_lock_acquire_returned", 40),
STACK_USAGE("perf_trace_mmap_lock_acquire_returned", 104),
STACK_USAGE("trace_event_raw_event_mmap_lock_acquire_returned", 112),
STACK_USAGE("trace_raw_output_mmap_lock_acquire_returned", 24),
STACK_USAGE("free_memcg_path_bufs", 24),
STACK_USAGE("trace_mmap_lock_reg", 16),
STACK_USAGE("tlb_remove_table_smp_sync", 0),
STACK_USAGE("tlb_remove_table_rcu", 16),
STACK_USAGE("tlb_remove_table", 16),
STACK_USAGE("tlb_flush_mmu", 24),
STACK_USAGE("tlb_gather_mmu", 0),
STACK_USAGE("tlb_gather_mmu_fullmm", 0),
STACK_USAGE("tlb_finish_mmu", 24),
STACK_USAGE("tlb_flush_mmu_tlbonly", 8),
STACK_USAGE("__tlb_remove_page_size", 16),
STACK_USAGE("mmu_interval_notifier_insert_locked", 48),
STACK_USAGE("mmu_interval_notifier_remove", 104),
STACK_USAGE("mmu_notifier_synchronize", 0),
STACK_USAGE("mmu_notifier_range_update_to_read_only", 0),
STACK_USAGE("mn_itree_inv_end", 48),
STACK_USAGE("mmu_interval_read_begin", 80),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("__mmu_notifier_release", 96),
STACK_USAGE("__mmu_notifier_clear_flush_young", 48),
STACK_USAGE("__mmu_notifier_clear_young", 48),
STACK_USAGE("__mmu_notifier_test_young", 40),
STACK_USAGE("__mmu_notifier_change_pte", 40),
STACK_USAGE("__mmu_notifier_invalidate_range_start", 56),
STACK_USAGE("__mmu_notifier_invalidate_range_end", 32),
STACK_USAGE("__mmu_notifier_invalidate_range", 40),
STACK_USAGE("__mmu_notifier_register", 32),
STACK_USAGE("mmu_notifier_register", 32),
STACK_USAGE("mmu_notifier_get_locked", 32),
STACK_USAGE("__mmu_notifier_subscriptions_destroy", 8),
STACK_USAGE("mmu_notifier_unregister", 24),
STACK_USAGE("mmu_notifier_free_rcu", 8),
STACK_USAGE("mmu_notifier_put", 16),
STACK_USAGE("__mmu_interval_notifier_insert", 24),
STACK_USAGE("mmu_interval_notifier_insert", 48),
STACK_USAGE("first_online_pgdat", 8),
STACK_USAGE("next_online_pgdat", 8),
STACK_USAGE("next_zone", 8),
STACK_USAGE("__next_zones_zonelist", 0),
STACK_USAGE("lruvec_init", 8),
STACK_USAGE("page_cpupid_xchg_last", 0),
STACK_USAGE("change_protection", 312),
STACK_USAGE("prot_none_pte_entry", 0),
STACK_USAGE("prot_none_hugetlb_entry", 0),
STACK_USAGE("prot_none_test", 0),
STACK_USAGE("mprotect_fixup", 112),
STACK_USAGE("mmu_notifier_invalidate_range_start", 8),
STACK_USAGE("do_mprotect_pkey", 96),
STACK_USAGE("__ia32_sys_mprotect", 0),
STACK_USAGE("__x64_sys_mprotect", 0),
STACK_USAGE("__ia32_sys_pkey_mprotect", 0),
STACK_USAGE("__x64_sys_pkey_mprotect", 0),
STACK_USAGE("__ia32_sys_pkey_alloc", 0),
STACK_USAGE("__se_sys_pkey_alloc", 40),
STACK_USAGE("__x64_sys_pkey_alloc", 0),
STACK_USAGE("__ia32_sys_pkey_free", 0),
STACK_USAGE("__se_sys_pkey_free", 32),
STACK_USAGE("__x64_sys_pkey_free", 0),
STACK_USAGE("get_old_pud", 0),
STACK_USAGE("move_pgt_entry", 56),
STACK_USAGE("mmu_notifier_invalidate_range_start", 8),
STACK_USAGE("move_page_tables", 176),
STACK_USAGE("move_vma", 120),
STACK_USAGE("alloc_new_pud", 32),
STACK_USAGE("vma_to_resize", 56),
STACK_USAGE("__ia32_sys_mremap", 0),
STACK_USAGE("__se_sys_mremap", 168),
STACK_USAGE("__x64_sys_mremap", 0),
STACK_USAGE("__ia32_sys_msync", 0),
STACK_USAGE("__se_sys_msync", 72),
STACK_USAGE("__x64_sys_msync", 0),
STACK_USAGE("get_task_struct", 0),
STACK_USAGE("register_oom_notifier", 0),
STACK_USAGE("unregister_oom_notifier", 0),
STACK_USAGE("__bpf_trace_start_task_reaping", 0),
STACK_USAGE("__traceiter_start_task_reaping", 16),
STACK_USAGE("perf_trace_start_task_reaping", 56),
STACK_USAGE("trace_event_raw_event_start_task_reaping", 72),
STACK_USAGE("trace_raw_output_start_task_reaping", 24),
STACK_USAGE("out_of_memory", 96),
STACK_USAGE("__bpf_trace_oom_score_adj_update", 0),
STACK_USAGE("__traceiter_oom_score_adj_update", 16),
STACK_USAGE("perf_trace_oom_score_adj_update", 56),
STACK_USAGE("trace_event_raw_event_oom_score_adj_update", 72),
STACK_USAGE("trace_raw_output_oom_score_adj_update", 24),
STACK_USAGE("pagefault_out_of_memory", 0),
STACK_USAGE("__ia32_sys_process_mrelease", 0),
STACK_USAGE("__se_sys_process_mrelease", 56),
STACK_USAGE("__x64_sys_process_mrelease", 0),
STACK_USAGE("__bpf_trace_finish_task_reaping", 0),
STACK_USAGE("__traceiter_finish_task_reaping", 16),
STACK_USAGE("perf_trace_finish_task_reaping", 56),
STACK_USAGE("trace_event_raw_event_finish_task_reaping", 72),
STACK_USAGE("trace_raw_output_finish_task_reaping", 24),
STACK_USAGE("find_lock_task_mm", 32),
STACK_USAGE("__bpf_trace_skip_task_reaping", 0),
STACK_USAGE("__traceiter_skip_task_reaping", 16),
STACK_USAGE("perf_trace_skip_task_reaping", 56),
STACK_USAGE("trace_event_raw_event_skip_task_reaping", 72),
STACK_USAGE("trace_raw_output_skip_task_reaping", 24),
STACK_USAGE("trace_skip_task_reaping", 0),
STACK_USAGE("__bpf_trace_compact_retry", 0),
STACK_USAGE("__traceiter_compact_retry", 56),
STACK_USAGE("perf_trace_compact_retry", 80),
STACK_USAGE("trace_event_raw_event_compact_retry", 104),
STACK_USAGE("trace_raw_output_compact_retry", 48),
STACK_USAGE("oom_badness", 72),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("oom_evaluate_task", 32),
STACK_USAGE("__bpf_trace_reclaim_retry_zone", 0),
STACK_USAGE("__traceiter_reclaim_retry_zone", 56),
STACK_USAGE("perf_trace_reclaim_retry_zone", 88),
STACK_USAGE("trace_event_raw_event_reclaim_retry_zone", 104),
STACK_USAGE("trace_raw_output_reclaim_retry_zone", 32),
STACK_USAGE("dump_task", 32),
STACK_USAGE("dump_header", 40),
STACK_USAGE("mmu_notifier_invalidate_range_start_nonblock", 16),
STACK_USAGE("process_shares_mm", 0),
STACK_USAGE("__oom_reap_task_mm", 224),
STACK_USAGE("oom_reaper", 96),
STACK_USAGE("wake_oom_reaper", 16),
STACK_USAGE("oom_init", 8),
STACK_USAGE("mark_oom_victim", 8),
STACK_USAGE("__bpf_trace_mark_victim", 0),
STACK_USAGE("__traceiter_mark_victim", 16),
STACK_USAGE("perf_trace_mark_victim", 56),
STACK_USAGE("trace_event_raw_event_mark_victim", 72),
STACK_USAGE("trace_raw_output_mark_victim", 24),
STACK_USAGE("exit_oom_victim", 0),
STACK_USAGE("oom_killer_enable", 0),
STACK_USAGE("oom_killer_disable", 72),
STACK_USAGE("task_will_free_mem", 24),
STACK_USAGE("__oom_kill_process", 80),
STACK_USAGE("oom_cpuset_eligible", 24),
STACK_USAGE("__bpf_trace_wake_reaper", 0),
STACK_USAGE("__traceiter_wake_reaper", 16),
STACK_USAGE("perf_trace_wake_reaper", 56),
STACK_USAGE("trace_event_raw_event_wake_reaper", 72),
STACK_USAGE("trace_raw_output_wake_reaper", 24),
STACK_USAGE("oom_kill_memcg_member", 16),
STACK_USAGE("oom_kill_process", 32),
STACK_USAGE("wb_update_dirty_ratelimit", 24),
STACK_USAGE("__wb_update_bandwidth", 80),
STACK_USAGE("wb_update_bandwidth", 104),
STACK_USAGE("wb_dirty_limits", 64),
STACK_USAGE("balance_dirty_pages", 400),
STACK_USAGE("balance_dirty_pages_ratelimited", 40),
STACK_USAGE("wb_over_bg_thresh", 296),
STACK_USAGE("dirty_writeback_centisecs_handler", 24),
STACK_USAGE("laptop_mode_timer_fn", 0),
STACK_USAGE("laptop_io_completion", 0),
STACK_USAGE("laptop_sync_completion", 16),
STACK_USAGE("writeback_set_ratelimit", 104),
STACK_USAGE("page_writeback_cpu_online", 104),
STACK_USAGE("page_writeback_init", 0),
STACK_USAGE("tag_pages_for_writeback", 104),
STACK_USAGE("write_cache_pages", 240),
STACK_USAGE("__writepage", 16),
STACK_USAGE("generic_writepages", 72),
STACK_USAGE("do_writepages", 144),
STACK_USAGE("folio_write_one", 128),
STACK_USAGE("noop_dirty_folio", 0),
STACK_USAGE("folio_account_cleaned", 56),
STACK_USAGE("__folio_mark_dirty", 64),
STACK_USAGE("filemap_dirty_folio", 24),
STACK_USAGE("folio_account_redirty", 56),
STACK_USAGE("folio_redirty_for_writepage", 24),
STACK_USAGE("folio_mark_dirty", 8),
STACK_USAGE("set_page_dirty_lock", 16),
STACK_USAGE("percpu_ref_tryget", 8),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("__folio_cancel_dirty", 32),
STACK_USAGE("folio_clear_dirty_for_io", 80),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("__folio_end_writeback", 80),
STACK_USAGE("__folio_start_writeback", 128),
STACK_USAGE("folio_wait_writeback", 8),
STACK_USAGE("folio_wait_writeback_killable", 8),
STACK_USAGE("folio_wait_stable", 8),
STACK_USAGE("percpu_ref_put_many", 8),
STACK_USAGE("domain_dirty_limits", 8),
STACK_USAGE("global_dirty_limits", 120),
STACK_USAGE("node_dirty_ok", 24),
STACK_USAGE("dirty_background_ratio_handler", 8),
STACK_USAGE("dirty_background_bytes_handler", 8),
STACK_USAGE("task_get_css", 16),
STACK_USAGE("dirty_ratio_handler", 128),
STACK_USAGE("dirty_bytes_handler", 128),
STACK_USAGE("__wb_writeout_add", 32),
STACK_USAGE("wb_writeout_inc", 24),
STACK_USAGE("writeout_period", 16),
STACK_USAGE("trace_balance_dirty_pages", 32),
STACK_USAGE("wb_domain_init", 16),
STACK_USAGE("wb_domain_exit", 8),
STACK_USAGE("bdi_set_min_ratio", 24),
STACK_USAGE("bdi_set_max_ratio", 24),
STACK_USAGE("wb_calc_thresh", 40),
STACK_USAGE("wb_position_ratio", 16),
STACK_USAGE("trace_folio_wait_writeback", 0),
STACK_USAGE("__free_one_page", 88),
STACK_USAGE("check_free_page_bad", 0),
STACK_USAGE("free_pcppages_bulk", 104),
STACK_USAGE("free_one_page", 56),
STACK_USAGE("reserve_bootmem_region", 0),
STACK_USAGE("__free_pages_ok", 128),
STACK_USAGE("__free_pages_core", 0),
STACK_USAGE("__early_pfn_to_nid", 24),
STACK_USAGE("early_pfn_to_nid", 16),
STACK_USAGE("memblock_free_pages", 0),
STACK_USAGE("__pageblock_pfn_to_page", 8),
STACK_USAGE("set_zone_contiguous", 16),
STACK_USAGE("clear_zone_contiguous", 0),
STACK_USAGE("early_init_on_alloc", 0),
STACK_USAGE("early_init_on_free", 0),
STACK_USAGE("page_alloc_init_late", 24),
STACK_USAGE("init_cma_reserved_pageblock", 8),
STACK_USAGE("check_new_pages", 8),
STACK_USAGE("post_alloc_hook", 0),
STACK_USAGE("prep_new_page", 16),
STACK_USAGE("pm_restore_gfp_mask", 0),
STACK_USAGE("pm_restrict_gfp_mask", 0),
STACK_USAGE("move_freepages_block", 48),
STACK_USAGE("trace_mm_page_alloc_zone_locked", 0),
STACK_USAGE("pm_suspended_storage", 0),
STACK_USAGE("find_suitable_fallback", 0),
STACK_USAGE("reserve_highatomic_pageblock", 32),
STACK_USAGE("local_lock_acquire", 8),
STACK_USAGE("unreserve_highatomic_pageblock", 80),
STACK_USAGE("drain_zone_pages", 48),
STACK_USAGE("drain_pages_zone", 48),
STACK_USAGE("drain_local_pages", 16),
STACK_USAGE("drain_local_pages_wq", 16),
STACK_USAGE("__drain_all_pages", 40),
STACK_USAGE("drain_all_pages", 0),
STACK_USAGE("mark_free_pages", 88),
STACK_USAGE("free_unref_page_prepare", 64),
STACK_USAGE("free_unref_page_commit", 48),
STACK_USAGE("free_unref_page", 56),
STACK_USAGE("free_unref_page_list", 64),
STACK_USAGE("local_lock_release", 8),
STACK_USAGE("split_page", 0),
STACK_USAGE("__isolate_free_page", 48),
STACK_USAGE("__putback_isolated_page", 40),
STACK_USAGE("__rmqueue_pcplist", 200),
STACK_USAGE("should_fail_alloc_page", 0),
STACK_USAGE("__zone_watermark_ok", 0),
STACK_USAGE("zone_watermark_ok", 0),
STACK_USAGE("zone_watermark_ok_safe", 56),
STACK_USAGE("get_page_from_freelist", 288),
STACK_USAGE("warn_alloc", 152),
STACK_USAGE("__alloc_pages_cpuset_fallback", 32),
STACK_USAGE("__alloc_pages_direct_compact", 80),
STACK_USAGE("__fs_reclaim_acquire", 0),
STACK_USAGE("__fs_reclaim_release", 0),
STACK_USAGE("fs_reclaim_acquire", 0),
STACK_USAGE("fs_reclaim_release", 0),
STACK_USAGE("gfp_pfmemalloc_allowed", 0),
STACK_USAGE("__alloc_pages_slowpath", 288),
STACK_USAGE("get_pfnblock_flags_mask", 0),
STACK_USAGE("prepare_alloc_pages", 24),
STACK_USAGE("set_pfnblock_flags_mask", 0),
STACK_USAGE("__alloc_pages_bulk", 200),
STACK_USAGE("__alloc_pages", 96),
STACK_USAGE("__folio_alloc", 16),
STACK_USAGE("__get_free_pages", 0),
STACK_USAGE("get_zeroed_page", 8),
STACK_USAGE("set_pageblock_migratetype", 0),
STACK_USAGE("__free_pages", 16),
STACK_USAGE("free_pages", 0),
STACK_USAGE("__page_frag_cache_refill", 24),
STACK_USAGE("__page_frag_cache_drain", 0),
STACK_USAGE("page_frag_alloc_align", 40),
STACK_USAGE("page_frag_free", 8),
STACK_USAGE("make_alloc_exact", 32),
STACK_USAGE("alloc_pages_exact", 24),
STACK_USAGE("PageMemcgKmem", 0),
STACK_USAGE("alloc_pages_exact_nid", 24),
STACK_USAGE("free_pages_exact", 16),
STACK_USAGE("nr_free_buffer_pages", 16),
STACK_USAGE("si_mem_available", 24),
STACK_USAGE("si_meminfo", 8),
STACK_USAGE("si_meminfo_node", 16),
STACK_USAGE("show_free_areas", 296),
STACK_USAGE("bad_page", 16),
STACK_USAGE("numa_zonelist_order_handler", 0),
STACK_USAGE("find_next_best_node", 64),
STACK_USAGE("build_zonelists", 72),
STACK_USAGE("__build_all_zonelists", 32),
STACK_USAGE("build_all_zonelists_init", 8),
STACK_USAGE("build_all_zonelists", 16),
STACK_USAGE("overlap_memmap_init", 0),
STACK_USAGE("memmap_init_range", 72),
STACK_USAGE("init_unavailable_range", 8),
STACK_USAGE("memmap_init_zone_range", 56),
STACK_USAGE("memmap_init", 88),
STACK_USAGE("compound_order", 0),
STACK_USAGE("memmap_alloc", 0),
STACK_USAGE("free_the_page", 0),
STACK_USAGE("per_cpu_pages_init", 0),
STACK_USAGE("zone_set_pageset_high_and_batch", 48),
STACK_USAGE("setup_zone_pageset", 16),
STACK_USAGE("setup_per_cpu_pageset", 16),
STACK_USAGE("free_compound_page", 8),
STACK_USAGE("init_currently_empty_zone", 8),
STACK_USAGE("get_pfn_range_for_nid", 80),
STACK_USAGE("adjust_zone_range_for_zone_movable", 0),
STACK_USAGE("zone_spanned_pages_in_node", 32),
STACK_USAGE("__absent_pages_in_range", 80),
STACK_USAGE("absent_pages_in_range", 0),
STACK_USAGE("zone_absent_pages_in_node", 56),
STACK_USAGE("prep_compound_page", 8),
STACK_USAGE("calculate_node_totalpages", 104),
STACK_USAGE("set_pageblock_order", 0),
STACK_USAGE("pgdat_init_internals", 24),
STACK_USAGE("zone_init_internals", 8),
STACK_USAGE("free_area_init_core", 56),
STACK_USAGE("free_area_init_node", 64),
STACK_USAGE("setup_nr_node_ids", 8),
STACK_USAGE("node_map_pfn_alignment", 88),
STACK_USAGE("find_min_pfn_with_active_regions", 0),
STACK_USAGE("early_calculate_totalpages", 72),
STACK_USAGE("find_zone_movable_pfns_for_nodes", 128),
STACK_USAGE("arch_has_descending_max_zone_pfns", 0),
STACK_USAGE("free_area_init", 96),
STACK_USAGE("init_mem_debugging_and_hardening", 0),
STACK_USAGE("cmdline_parse_core", 56),
STACK_USAGE("cmdline_parse_kernelcore", 8),
STACK_USAGE("cmdline_parse_movablecore", 0),
STACK_USAGE("adjust_managed_page_count", 0),
STACK_USAGE("free_reserved_area", 80),
STACK_USAGE("mem_init_print_info", 72),
STACK_USAGE("set_dma_reserve", 0),
STACK_USAGE("page_alloc_cpu_dead", 16),
STACK_USAGE("page_alloc_cpu_online", 8),
STACK_USAGE("set_hashdist", 16),
STACK_USAGE("page_alloc_init", 0),
STACK_USAGE("calculate_totalreserve_pages", 16),
STACK_USAGE("setup_per_zone_lowmem_reserve", 0),
STACK_USAGE("setup_per_zone_wmarks", 48),
STACK_USAGE("calculate_min_free_kbytes", 16),
STACK_USAGE("init_per_zone_wmark_min", 0),
STACK_USAGE("min_free_kbytes_sysctl_handler", 16),
STACK_USAGE("watermark_scale_factor_sysctl_handler", 16),
STACK_USAGE("setup_min_unmapped_ratio", 8),
STACK_USAGE("sysctl_min_unmapped_ratio_sysctl_handler", 16),
STACK_USAGE("setup_min_slab_ratio", 8),
STACK_USAGE("sysctl_min_slab_ratio_sysctl_handler", 16),
STACK_USAGE("lowmem_reserve_ratio_sysctl_handler", 0),
STACK_USAGE("percpu_pagelist_high_fraction_sysctl_handler", 48),
STACK_USAGE("alloc_large_system_hash", 104),
STACK_USAGE("has_unmovable_pages", 64),
STACK_USAGE("alloc_contig_range", 248),
STACK_USAGE("alloc_contig_pages", 112),
STACK_USAGE("free_contig_range", 40),
STACK_USAGE("zone_pcp_update", 16),
STACK_USAGE("zone_pcp_disable", 16),
STACK_USAGE("zone_pcp_enable", 32),
STACK_USAGE("zone_pcp_reset", 24),
STACK_USAGE("is_free_buddy_page", 0),
STACK_USAGE("take_page_off_buddy", 64),
STACK_USAGE("put_page_back_buddy", 48),
STACK_USAGE("has_managed_dma", 8),
STACK_USAGE("page_counter_uncharge", 16),
STACK_USAGE("page_counter_set_max", 24),
STACK_USAGE("page_counter_set_min", 0),
STACK_USAGE("page_counter_set_low", 0),
STACK_USAGE("page_counter_memparse", 32),
STACK_USAGE("page_counter_cancel", 16),
STACK_USAGE("page_counter_charge", 0),
STACK_USAGE("page_counter_try_charge", 24),
STACK_USAGE("blk_wake_io_task", 0),
STACK_USAGE("swap_writepage", 16),
STACK_USAGE("__swap_writepage", 152),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("swap_readpage", 32),
STACK_USAGE("end_swap_bio_write", 16),
STACK_USAGE("swap_dirty_folio", 16),
STACK_USAGE("end_swap_bio_read", 24),
STACK_USAGE("generic_swapfile_activate", 144),
STACK_USAGE("page_file_offset", 0),
STACK_USAGE("__bpf_trace_test_pages_isolated", 0),
STACK_USAGE("__traceiter_test_pages_isolated", 32),
STACK_USAGE("perf_trace_test_pages_isolated", 72),
STACK_USAGE("trace_event_raw_event_test_pages_isolated", 88),
STACK_USAGE("trace_raw_output_test_pages_isolated", 24),
STACK_USAGE("start_isolate_page_range", 96),
STACK_USAGE("undo_isolate_page_range", 96),
STACK_USAGE("test_pages_isolated", 48),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("page_reporting_process", 144),
STACK_USAGE("page_reporting_register", 16),
STACK_USAGE("page_reporting_unregister", 8),
STACK_USAGE("__page_reporting_notify", 8),
STACK_USAGE("page_reporting_drain", 64),
STACK_USAGE("page_vma_mapped_walk", 72),
STACK_USAGE("page_mapped_in_vma", 104),
STACK_USAGE("check_pte", 0),
STACK_USAGE("__walk_page_range", 224),
STACK_USAGE("walk_page_range", 96),
STACK_USAGE("walk_page_range_novma", 72),
STACK_USAGE("walk_page_vma", 72),
STACK_USAGE("walk_page_mapping", 112),
STACK_USAGE("__bpf_trace_percpu_destroy_chunk", 0),
STACK_USAGE("__traceiter_percpu_destroy_chunk", 16),
STACK_USAGE("perf_trace_percpu_destroy_chunk", 56),
STACK_USAGE("trace_event_raw_event_percpu_destroy_chunk", 72),
STACK_USAGE("trace_raw_output_percpu_destroy_chunk", 24),
STACK_USAGE("__bpf_trace_percpu_alloc_percpu", 0),
STACK_USAGE("__traceiter_percpu_alloc_percpu", 48),
STACK_USAGE("perf_trace_percpu_alloc_percpu", 88),
STACK_USAGE("trace_event_raw_event_percpu_alloc_percpu", 104),
STACK_USAGE("trace_raw_output_percpu_alloc_percpu", 24),
STACK_USAGE("pcpu_find_block_fit", 72),
STACK_USAGE("pcpu_alloc_area", 120),
STACK_USAGE("pcpu_free_area", 96),
STACK_USAGE("pcpu_alloc_first_chunk", 64),
STACK_USAGE("pcpu_memcg_post_alloc_hook", 40),
STACK_USAGE("pcpu_alloc", 128),
STACK_USAGE("__alloc_percpu_gfp", 0),
STACK_USAGE("__alloc_percpu", 0),
STACK_USAGE("__alloc_reserved_percpu", 0),
STACK_USAGE("pcpu_balance_free", 72),
STACK_USAGE("pcpu_balance_workfn", 72),
STACK_USAGE("free_percpu", 80),
STACK_USAGE("__is_kernel_percpu_address", 32),
STACK_USAGE("is_kernel_percpu_address", 24),
STACK_USAGE("per_cpu_ptr_to_phys", 24),
STACK_USAGE("pcpu_alloc_alloc_info", 32),
STACK_USAGE("pcpu_free_alloc_info", 0),
STACK_USAGE("pcpu_dump_alloc_info", 136),
STACK_USAGE("pcpu_setup_first_chunk", 80),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("pcpu_populate_chunk", 88),
STACK_USAGE("percpu_alloc_setup", 8),
STACK_USAGE("pcpu_build_alloc_info", 104),
STACK_USAGE("pcpu_fc_alloc", 40),
STACK_USAGE("pcpu_embed_first_chunk", 80),
STACK_USAGE("pcpu_depopulate_chunk", 72),
STACK_USAGE("pcpu_populate_pte", 56),
STACK_USAGE("pcpu_page_first_chunk", 120),
STACK_USAGE("pcpu_get_pages", 8),
STACK_USAGE("pcpu_create_chunk", 24),
STACK_USAGE("pcpu_nr_pages", 0),
STACK_USAGE("percpu_enable_async", 0),
STACK_USAGE("pcpu_next_fit_region", 40),
STACK_USAGE("__bpf_trace_percpu_free_percpu", 0),
STACK_USAGE("__traceiter_percpu_free_percpu", 32),
STACK_USAGE("perf_trace_percpu_free_percpu", 72),
STACK_USAGE("trace_event_raw_event_percpu_free_percpu", 88),
STACK_USAGE("trace_percpu_free_percpu", 0),
STACK_USAGE("trace_raw_output_percpu_free_percpu", 24),
STACK_USAGE("pcpu_reintegrate_chunk", 16),
STACK_USAGE("pcpu_block_update", 16),
STACK_USAGE("__bpf_trace_percpu_alloc_percpu_fail", 0),
STACK_USAGE("__traceiter_percpu_alloc_percpu_fail", 40),
STACK_USAGE("perf_trace_percpu_alloc_percpu_fail", 80),
STACK_USAGE("trace_event_raw_event_percpu_alloc_percpu_fail", 96),
STACK_USAGE("trace_raw_output_percpu_alloc_percpu_fail", 24),
STACK_USAGE("pcpu_chunk_refresh_hint", 32),
STACK_USAGE("pcpu_block_refresh_hint", 32),
STACK_USAGE("obj_cgroup_put", 8),
STACK_USAGE("pcpu_block_update_hint_alloc", 88),
STACK_USAGE("__bpf_trace_percpu_create_chunk", 0),
STACK_USAGE("__traceiter_percpu_create_chunk", 16),
STACK_USAGE("perf_trace_percpu_create_chunk", 56),
STACK_USAGE("trace_event_raw_event_percpu_create_chunk", 72),
STACK_USAGE("trace_percpu_create_chunk", 0),
STACK_USAGE("trace_raw_output_percpu_create_chunk", 24),
STACK_USAGE("pmdp_huge_clear_flush", 8),
STACK_USAGE("pudp_huge_clear_flush", 8),
STACK_USAGE("pgtable_trans_huge_deposit", 0),
STACK_USAGE("pgtable_trans_huge_withdraw", 0),
STACK_USAGE("pmdp_invalidate", 16),
STACK_USAGE("pmdp_collapse_flush", 8),
STACK_USAGE("pgd_clear_bad", 16),
STACK_USAGE("p4d_clear_bad", 24),
STACK_USAGE("pud_clear_bad", 16),
STACK_USAGE("pmd_clear_bad", 16),
STACK_USAGE("ptep_clear_flush", 8),
STACK_USAGE("process_vm_rw", 616),
STACK_USAGE("__ia32_sys_process_vm_readv", 0),
STACK_USAGE("__x64_sys_process_vm_readv", 0),
STACK_USAGE("__ia32_sys_process_vm_writev", 0),
STACK_USAGE("__x64_sys_process_vm_writev", 0),
STACK_USAGE("blk_cgroup_congested", 16),
STACK_USAGE("file_ra_state_init", 8),
STACK_USAGE("read_pages", 80),
STACK_USAGE("page_cache_ra_unbounded", 96),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("do_page_cache_ra", 0),
STACK_USAGE("force_page_cache_ra", 32),
STACK_USAGE("page_cache_ra_order", 112),
STACK_USAGE("ondemand_readahead", 72),
STACK_USAGE("page_cache_sync_ra", 32),
STACK_USAGE("page_cache_async_ra", 24),
STACK_USAGE("ksys_readahead", 40),
STACK_USAGE("__ia32_sys_readahead", 40),
STACK_USAGE("__x64_sys_readahead", 40),
STACK_USAGE("readahead_expand", 80),
STACK_USAGE("invalid_mkclean_vma", 0),
STACK_USAGE("folio_mkclean", 72),
STACK_USAGE("page_move_anon_rmap", 0),
STACK_USAGE("__bpf_trace_migration_pte", 0),
STACK_USAGE("perf_trace_migration_pte", 72),
STACK_USAGE("trace_event_raw_event_migration_pte", 88),
STACK_USAGE("trace_raw_output_migration_pte", 24),
STACK_USAGE("page_add_anon_rmap", 0),
STACK_USAGE("do_page_add_anon_rmap", 40),
STACK_USAGE("page_add_new_anon_rmap", 32),
STACK_USAGE("page_add_file_rmap", 32),
STACK_USAGE("__traceiter_set_migration_pte", 32),
STACK_USAGE("__traceiter_remove_migration_pte", 32),
STACK_USAGE("page_remove_rmap", 32),
STACK_USAGE("try_to_unmap_one", 224),
STACK_USAGE("invalid_migration_vma", 0),
STACK_USAGE("page_not_mapped", 0),
STACK_USAGE("try_to_unmap", 48),
STACK_USAGE("try_to_migrate_one", 208),
STACK_USAGE("__anon_vma_prepare", 40),
STACK_USAGE("try_to_migrate", 48),
STACK_USAGE("__put_anon_vma", 16),
STACK_USAGE("rmap_walk_anon", 72),
STACK_USAGE("rmap_walk_file", 64),
STACK_USAGE("rmap_walk", 0),
STACK_USAGE("rmap_walk_locked", 0),
STACK_USAGE("hugepage_add_anon_rmap", 8),
STACK_USAGE("hugepage_add_new_anon_rmap", 8),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("anon_vma_clone", 72),
STACK_USAGE("anon_vma_fork", 32),
STACK_USAGE("__bpf_trace_tlb_flush", 0),
STACK_USAGE("__traceiter_tlb_flush", 24),
STACK_USAGE("perf_trace_tlb_flush", 64),
STACK_USAGE("trace_event_raw_event_tlb_flush", 80),
STACK_USAGE("trace_raw_output_tlb_flush", 32),
STACK_USAGE("unlink_anon_vmas", 64),
STACK_USAGE("anon_vma_ctor", 8),
STACK_USAGE("mmu_notifier_invalidate_range_start", 8),
STACK_USAGE("anon_vma_init", 0),
STACK_USAGE("vma_address", 16),
STACK_USAGE("page_get_anon_vma", 24),
STACK_USAGE("__bpf_trace_mm_migrate_pages", 0),
STACK_USAGE("__traceiter_mm_migrate_pages", 48),
STACK_USAGE("perf_trace_mm_migrate_pages", 88),
STACK_USAGE("trace_event_raw_event_mm_migrate_pages", 104),
STACK_USAGE("trace_raw_output_mm_migrate_pages", 80),
STACK_USAGE("folio_lock_anon_vma_read", 32),
STACK_USAGE("page_unlock_anon_vma_read", 0),
STACK_USAGE("try_to_unmap_flush", 8),
STACK_USAGE("try_to_unmap_flush_dirty", 8),
STACK_USAGE("flush_tlb_batched_pending", 24),
STACK_USAGE("page_address_in_vma", 16),
STACK_USAGE("mm_find_pmd", 0),
STACK_USAGE("folio_referenced_one", 128),
STACK_USAGE("invalid_folio_referenced_vma", 16),
STACK_USAGE("__bpf_trace_mm_migrate_pages_start", 0),
STACK_USAGE("__traceiter_mm_migrate_pages_start", 24),
STACK_USAGE("perf_trace_mm_migrate_pages_start", 64),
STACK_USAGE("trace_event_raw_event_mm_migrate_pages_start", 80),
STACK_USAGE("trace_raw_output_mm_migrate_pages_start", 40),
STACK_USAGE("folio_referenced", 112),
STACK_USAGE("page_mkclean_one", 176),
STACK_USAGE("secretmem_release", 0),
STACK_USAGE("secretmem_mmap", 8),
STACK_USAGE("put_page", 0),
STACK_USAGE("vma_is_secretmem", 0),
STACK_USAGE("secretmem_isolate_page", 0),
STACK_USAGE("secretmem_migratepage", 0),
STACK_USAGE("secretmem_freepage", 8),
STACK_USAGE("secretmem_setattr", 0),
STACK_USAGE("__ia32_sys_memfd_secret", 0),
STACK_USAGE("__se_sys_memfd_secret", 24),
STACK_USAGE("__x64_sys_memfd_secret", 0),
STACK_USAGE("secretmem_init_fs_context", 0),
STACK_USAGE("secretmem_init", 0),
STACK_USAGE("secretmem_active", 0),
STACK_USAGE("secretmem_fault", 56),
STACK_USAGE("shmem_truncate_range", 8),
STACK_USAGE("shmem_getattr", 40),
STACK_USAGE("shmem_setattr", 40),
STACK_USAGE("shmem_evict_inode", 120),
STACK_USAGE("put_page", 0),
STACK_USAGE("shmem_unuse", 504),
STACK_USAGE("shmem_writepage", 112),
STACK_USAGE("shmem_getpage", 0),
STACK_USAGE("shmem_alloc_and_acct_page", 280),
STACK_USAGE("xas_next_entry", 32),
STACK_USAGE("shmem_swapin_page", 456),
STACK_USAGE("shmem_getpage_gfp", 168),
STACK_USAGE("synchronous_wake_function", 8),
STACK_USAGE("shmem_fault", 104),
STACK_USAGE("shmem_get_unmapped_area", 64),
STACK_USAGE("cond_resched_rcu", 0),
STACK_USAGE("shmem_set_policy", 0),
STACK_USAGE("shmem_get_policy", 0),
STACK_USAGE("shmem_lock", 24),
STACK_USAGE("shmem_mmap", 16),
STACK_USAGE("shmem_get_inode", 72),
STACK_USAGE("shmem_mfill_atomic_pte", 312),
STACK_USAGE("shmem_write_begin", 8),
STACK_USAGE("shmem_write_end", 40),
STACK_USAGE("shmem_file_read_iter", 120),
STACK_USAGE("vma_is_shmem", 0),
STACK_USAGE("shmem_file_llseek", 48),
STACK_USAGE("shmem_fallocate", 232),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("shmem_statfs", 32),
STACK_USAGE("shmem_mknod", 40),
STACK_USAGE("shmem_tmpfile", 32),
STACK_USAGE("shmem_mkdir", 16),
STACK_USAGE("shmem_create", 0),
STACK_USAGE("shmem_link", 40),
STACK_USAGE("shmem_unlink", 40),
STACK_USAGE("shmem_rmdir", 16),
STACK_USAGE("shmem_rename2", 56),
STACK_USAGE("shmem_symlink", 72),
STACK_USAGE("shmem_put_link", 8),
STACK_USAGE("shmem_get_link", 48),
STACK_USAGE("shmem_initxattrs", 48),
STACK_USAGE("shmem_xattr_handler_get", 24),
STACK_USAGE("shmem_xattr_handler_set", 32),
STACK_USAGE("shmem_listxattr", 0),
STACK_USAGE("shmem_get_parent", 0),
STACK_USAGE("shmem_match", 0),
STACK_USAGE("shmem_fh_to_dentry", 16),
STACK_USAGE("shmem_encode_fh", 24),
STACK_USAGE("shmem_parse_one", 64),
STACK_USAGE("shmem_parse_options", 32),
STACK_USAGE("shmem_reconfigure", 48),
STACK_USAGE("shmem_show_options", 104),
STACK_USAGE("shmem_recalc_inode", 16),
STACK_USAGE("shmem_put_super", 16),
STACK_USAGE("shmem_fill_super", 32),
STACK_USAGE("shmem_get_tree", 0),
STACK_USAGE("shmem_free_fc", 8),
STACK_USAGE("shmem_charge", 40),
STACK_USAGE("shmem_alloc_inode", 0),
STACK_USAGE("shmem_free_in_core_inode", 8),
STACK_USAGE("shmem_destroy_inode", 0),
STACK_USAGE("shmem_init_inode", 0),
STACK_USAGE("shmem_error_remove_page", 0),
STACK_USAGE("shmem_init_fs_context", 8),
STACK_USAGE("shmem_init", 8),
STACK_USAGE("shmem_uncharge", 40),
STACK_USAGE("shmem_enabled_show", 40),
STACK_USAGE("shmem_enabled_store", 56),
STACK_USAGE("__shmem_file_setup", 56),
STACK_USAGE("shmem_kernel_file_setup", 0),
STACK_USAGE("shmem_file_setup", 0),
STACK_USAGE("shmem_file_setup_with_mnt", 0),
STACK_USAGE("shmem_zero_setup", 16),
STACK_USAGE("shmem_read_mapping_page_gfp", 24),
STACK_USAGE("shmem_is_huge", 0),
STACK_USAGE("maybe_unlock_mmap_for_io", 16),
STACK_USAGE("shmem_unused_huge_shrink", 128),
STACK_USAGE("khugepaged_enter", 0),
STACK_USAGE("shmem_unused_huge_scan", 0),
STACK_USAGE("shmem_unused_huge_count", 0),
STACK_USAGE("shmem_add_to_page_cache", 128),
STACK_USAGE("shmem_partial_swap_usage", 88),
STACK_USAGE("shmem_swap_usage", 0),
STACK_USAGE("shmem_unlock_mapping", 168),
STACK_USAGE("shmem_get_partial_folio", 40),
STACK_USAGE("shmem_undo_range", 392),
STACK_USAGE("__traceiter_kmalloc_node", 48),
STACK_USAGE("slab_start", 8),
STACK_USAGE("slab_next", 0),
STACK_USAGE("slab_stop", 0),
STACK_USAGE("__kmem_cache_free_bulk", 32),
STACK_USAGE("slab_show", 96),
STACK_USAGE("dump_unreclaimable_slab", 96),
STACK_USAGE("__traceiter_kmem_cache_alloc_node", 48),
STACK_USAGE("slabinfo_open", 0),
STACK_USAGE("slab_proc_init", 0),
STACK_USAGE("__bpf_trace_kfree", 0),
STACK_USAGE("__traceiter_kfree", 24),
STACK_USAGE("perf_trace_kfree", 64),
STACK_USAGE("trace_event_raw_event_kfree", 80),
STACK_USAGE("trace_raw_output_kfree", 24),
STACK_USAGE("__kmem_cache_alloc_bulk", 48),
STACK_USAGE("krealloc", 40),
STACK_USAGE("kfree_sensitive", 8),
STACK_USAGE("ksize", 0),
STACK_USAGE("__bpf_trace_kmem_alloc", 0),
STACK_USAGE("perf_trace_kmem_alloc", 80),
STACK_USAGE("trace_event_raw_event_kmem_alloc", 104),
STACK_USAGE("trace_raw_output_kmem_alloc", 56),
STACK_USAGE("should_failslab", 0),
STACK_USAGE("__bpf_trace_kmem_cache_free", 0),
STACK_USAGE("__traceiter_kmem_cache_free", 32),
STACK_USAGE("perf_trace_kmem_cache_free", 104),
STACK_USAGE("trace_event_raw_event_kmem_cache_free", 104),
STACK_USAGE("trace_raw_output_kmem_cache_free", 24),
STACK_USAGE("__bpf_trace_mm_page_free", 0),
STACK_USAGE("__traceiter_mm_page_free", 24),
STACK_USAGE("perf_trace_mm_page_free", 64),
STACK_USAGE("trace_event_raw_event_mm_page_free", 80),
STACK_USAGE("trace_raw_output_mm_page_free", 24),
STACK_USAGE("slab_unmergeable", 0),
STACK_USAGE("__bpf_trace_mm_page_free_batched", 0),
STACK_USAGE("__traceiter_mm_page_free_batched", 16),
STACK_USAGE("perf_trace_mm_page_free_batched", 56),
STACK_USAGE("trace_event_raw_event_mm_page_free_batched", 72),
STACK_USAGE("trace_raw_output_mm_page_free_batched", 24),
STACK_USAGE("find_mergeable", 16),
STACK_USAGE("__bpf_trace_mm_page_alloc", 0),
STACK_USAGE("__traceiter_mm_page_alloc", 40),
STACK_USAGE("perf_trace_mm_page_alloc", 72),
STACK_USAGE("trace_event_raw_event_mm_page_alloc", 96),
STACK_USAGE("trace_raw_output_mm_page_alloc", 56),
STACK_USAGE("__bpf_trace_mm_page", 0),
STACK_USAGE("perf_trace_mm_page", 72),
STACK_USAGE("trace_event_raw_event_mm_page", 88),
STACK_USAGE("trace_raw_output_mm_page", 24),
STACK_USAGE("__traceiter_mm_page_alloc_zone_locked", 32),
STACK_USAGE("__bpf_trace_mm_page_pcpu_drain", 0),
STACK_USAGE("__traceiter_mm_page_pcpu_drain", 32),
STACK_USAGE("perf_trace_mm_page_pcpu_drain", 72),
STACK_USAGE("trace_event_raw_event_mm_page_pcpu_drain", 88),
STACK_USAGE("trace_raw_output_mm_page_pcpu_drain", 24),
STACK_USAGE("__bpf_trace_mm_page_alloc_extfrag", 0),
STACK_USAGE("__traceiter_mm_page_alloc_extfrag", 48),
STACK_USAGE("perf_trace_mm_page_alloc_extfrag", 80),
STACK_USAGE("trace_event_raw_event_mm_page_alloc_extfrag", 104),
STACK_USAGE("trace_raw_output_mm_page_alloc_extfrag", 24),
STACK_USAGE("kmem_cache_create_usercopy", 72),
STACK_USAGE("__bpf_trace_rss_stat", 0),
STACK_USAGE("__traceiter_rss_stat", 32),
STACK_USAGE("perf_trace_rss_stat", 80),
STACK_USAGE("trace_event_raw_event_rss_stat", 96),
STACK_USAGE("trace_raw_output_rss_stat", 40),
STACK_USAGE("kmem_cache_create", 0),
STACK_USAGE("slab_caches_to_rcu_destroy_workfn", 48),
STACK_USAGE("__traceiter_kmalloc", 48),
STACK_USAGE("slab_kmem_cache_release", 8),
STACK_USAGE("kmem_cache_destroy", 16),
STACK_USAGE("kmem_cache_shrink", 0),
STACK_USAGE("slab_is_available", 0),
STACK_USAGE("kmem_valid_obj", 8),
STACK_USAGE("__traceiter_kmem_cache_alloc", 48),
STACK_USAGE("kmem_dump_obj", 320),
STACK_USAGE("setup_slab_nomerge", 0),
STACK_USAGE("__bpf_trace_kmem_alloc_node", 0),
STACK_USAGE("perf_trace_kmem_alloc_node", 80),
STACK_USAGE("trace_event_raw_event_kmem_alloc_node", 104),
STACK_USAGE("trace_raw_output_kmem_alloc_node", 56),
STACK_USAGE("create_boot_cache", 24),
STACK_USAGE("create_kmalloc_cache", 48),
STACK_USAGE("setup_slab_merge", 0),
STACK_USAGE("kmalloc_slab", 4),
STACK_USAGE("setup_kmalloc_cache_index_table", 0),
STACK_USAGE("kmem_cache_size", 0),
STACK_USAGE("new_kmalloc_cache", 32),
STACK_USAGE("create_kmalloc_caches", 40),
STACK_USAGE("kmalloc_fix_flags", 16),
STACK_USAGE("kmalloc_order", 48),
STACK_USAGE("kmalloc_order_trace", 32),
STACK_USAGE("trace_kmalloc_node", 0),
STACK_USAGE("slab_pad_check", 56),
STACK_USAGE("check_object", 56),
STACK_USAGE("check_slab", 8),
STACK_USAGE("on_freelist", 48),
STACK_USAGE("remove_full", 8),
STACK_USAGE("alloc_debug_processing", 40),
STACK_USAGE("free_debug_processing", 88),
STACK_USAGE("parse_slub_debug_flags", 48),
STACK_USAGE("setup_slub_debug", 80),
STACK_USAGE("kmem_cache_flags", 88),
STACK_USAGE("folio_size", 0),
STACK_USAGE("fixup_red_left", 0),
STACK_USAGE("new_slab", 48),
STACK_USAGE("__free_slab", 40),
STACK_USAGE("rcu_free_slab", 0),
STACK_USAGE("discard_slab", 0),
STACK_USAGE("add_partial", 24),
STACK_USAGE("remove_partial", 16),
STACK_USAGE("get_partial_node", 104),
STACK_USAGE("deactivate_slab", 120),
STACK_USAGE("__unfreeze_partials", 72),
STACK_USAGE("put_cpu_partial", 56),
STACK_USAGE("flush_cpu_slab", 64),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("flush_all_cpus_locked", 48),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("slub_cpu_dead", 48),
STACK_USAGE("slab_out_of_memory", 64),
STACK_USAGE("local_lock_acquire", 8),
STACK_USAGE("___slab_alloc", 112),
STACK_USAGE("kmem_cache_alloc", 72),
STACK_USAGE("kmem_cache_alloc_lru", 72),
STACK_USAGE("kmem_cache_alloc_trace", 80),
STACK_USAGE("kmem_cache_alloc_node", 80),
STACK_USAGE("kmem_cache_alloc_node_trace", 88),
STACK_USAGE("__slab_free", 88),
STACK_USAGE("percpu_ref_put", 8),
STACK_USAGE("local_lock_release", 8),
STACK_USAGE("kmem_cache_free", 96),
STACK_USAGE("free_large_kmalloc", 40),
STACK_USAGE("kmem_cache_free_bulk", 136),
STACK_USAGE("kmem_cache_alloc_bulk", 80),
STACK_USAGE("__kmem_cache_release", 16),
STACK_USAGE("calculate_sizes", 112),
STACK_USAGE("__kmem_cache_empty", 0),
STACK_USAGE("__kmem_cache_shutdown", 128),
STACK_USAGE("__kmem_obj_info", 16),
STACK_USAGE("setup_slub_min_order", 16),
STACK_USAGE("setup_slub_max_order", 16),
STACK_USAGE("setup_slub_min_objects", 16),
STACK_USAGE("__kmalloc", 88),
STACK_USAGE("kmalloc_large_node", 56),
STACK_USAGE("__kmalloc_node", 104),
STACK_USAGE("__ksize", 0),
STACK_USAGE("kfree", 88),
STACK_USAGE("__kmem_cache_shrink", 600),
STACK_USAGE("trace_kmalloc", 0),
STACK_USAGE("bootstrap", 24),
STACK_USAGE("__cmpxchg_double_slab", 40),
STACK_USAGE("kmem_cache_init", 16),
STACK_USAGE("kmem_cache_init_late", 0),
STACK_USAGE("__kmem_cache_alias", 24),
STACK_USAGE("__kmem_cache_create", 88),
STACK_USAGE("__kmalloc_track_caller", 88),
STACK_USAGE("__kmalloc_node_track_caller", 96),
STACK_USAGE("validate_slab", 48),
STACK_USAGE("validate_slab_cache", 72),
STACK_USAGE("process_slab", 120),
STACK_USAGE("cmpxchg_double_slab", 64),
STACK_USAGE("show_slab_objects", 80),
STACK_USAGE("slab_size_show", 0),
STACK_USAGE("align_show", 0),
STACK_USAGE("object_size_show", 0),
STACK_USAGE("objs_per_slab_show", 0),
STACK_USAGE("order_show", 0),
STACK_USAGE("min_partial_show", 0),
STACK_USAGE("min_partial_store", 32),
STACK_USAGE("cpu_partial_show", 0),
STACK_USAGE("cpu_partial_store", 32),
STACK_USAGE("ctor_show", 0),
STACK_USAGE("aliases_show", 0),
STACK_USAGE("partial_show", 0),
STACK_USAGE("cpu_slabs_show", 0),
STACK_USAGE("objects_show", 0),
STACK_USAGE("objects_partial_show", 0),
STACK_USAGE("slabs_cpu_partial_show", 40),
STACK_USAGE("reclaim_account_show", 0),
STACK_USAGE("memcg_slab_free_hook", 56),
STACK_USAGE("hwcache_align_show", 0),
STACK_USAGE("cache_dma_show", 0),
STACK_USAGE("usersize_show", 0),
STACK_USAGE("destroy_by_rcu_show", 0),
STACK_USAGE("slabs_show", 0),
STACK_USAGE("total_objects_show", 0),
STACK_USAGE("sanity_checks_show", 0),
STACK_USAGE("trace_show", 0),
STACK_USAGE("red_zone_show", 0),
STACK_USAGE("poison_show", 0),
STACK_USAGE("store_user_show", 0),
STACK_USAGE("validate_show", 0),
STACK_USAGE("validate_store", 8),
STACK_USAGE("shrink_show", 0),
STACK_USAGE("shrink_store", 8),
STACK_USAGE("remote_node_defrag_ratio_show", 0),
STACK_USAGE("remote_node_defrag_ratio_store", 32),
STACK_USAGE("slab_attr_show", 0),
STACK_USAGE("slab_attr_store", 0),
STACK_USAGE("kmem_cache_release", 0),
STACK_USAGE("sysfs_slab_add", 48),
STACK_USAGE("sysfs_slab_unlink", 0),
STACK_USAGE("sysfs_slab_release", 0),
STACK_USAGE("slab_sysfs_init", 24),
STACK_USAGE("slab_debugfs_show", 48),
STACK_USAGE("slab_debugfs_stop", 0),
STACK_USAGE("slab_debugfs_next", 0),
STACK_USAGE("slab_debugfs_start", 0),
STACK_USAGE("slab_debug_trace_open", 80),
STACK_USAGE("slab_debug_trace_release", 24),
STACK_USAGE("debugfs_slab_release", 0),
STACK_USAGE("slab_debugfs_init", 32),
STACK_USAGE("get_slabinfo", 64),
STACK_USAGE("slabinfo_show_stats", 0),
STACK_USAGE("slabinfo_write", 0),
STACK_USAGE("cache_from_obj", 24),
STACK_USAGE("slab_pre_alloc_hook", 64),
STACK_USAGE("slab_post_alloc_hook", 72),
STACK_USAGE("print_track", 8),
STACK_USAGE("print_tracking", 24),
STACK_USAGE("slab_bug", 120),
STACK_USAGE("slab_fix", 104),
STACK_USAGE("print_trailer", 40),
STACK_USAGE("object_err", 24),
STACK_USAGE("slab_err", 232),
STACK_USAGE("check_bytes_and_report", 88),
STACK_USAGE("vmemmap_remap_range", 192),
STACK_USAGE("vmemmap_remap_pte", 8),
STACK_USAGE("vmemmap_restore_pte", 64),
STACK_USAGE("vmemmap_remap_free", 112),
STACK_USAGE("vmemmap_remap_alloc", 112),
STACK_USAGE("__earlyonly_bootmem_alloc", 0),
STACK_USAGE("vmemmap_alloc_block", 24),
STACK_USAGE("vmemmap_alloc_block_buf", 16),
STACK_USAGE("altmap_alloc_block_buf", 16),
STACK_USAGE("vmemmap_verify", 24),
STACK_USAGE("vmemmap_pte_populate", 24),
STACK_USAGE("vmemmap_pmd_populate", 24),
STACK_USAGE("vmemmap_pud_populate", 24),
STACK_USAGE("vmemmap_p4d_populate", 32),
STACK_USAGE("vmemmap_pgd_populate", 24),
STACK_USAGE("vmemmap_populate_basepages", 40),
STACK_USAGE("__populate_section_memmap", 8),
STACK_USAGE("mminit_validate_memmodel_limits", 24),
STACK_USAGE("subsection_map_init", 40),
STACK_USAGE("memory_present", 64),
STACK_USAGE("memblocks_present", 64),
STACK_USAGE("mem_section_usage_size", 0),
STACK_USAGE("sparse_buffer_free", 0),
STACK_USAGE("sparse_buffer_init", 8),
STACK_USAGE("sparse_buffer_fini", 0),
STACK_USAGE("sparse_buffer_alloc", 16),
STACK_USAGE("vmemmap_populate_print_last", 0),
STACK_USAGE("sparse_init_nid", 40),
STACK_USAGE("sparse_init", 40),
STACK_USAGE("sparse_index_alloc", 8),
STACK_USAGE("__pagevec_lru_add", 80),
STACK_USAGE("folio_batch_remove_exceptionals", 0),
STACK_USAGE("__put_compound_page", 8),
STACK_USAGE("pagevec_lookup_range", 8),
STACK_USAGE("pagevec_lookup_range_tag", 8),
STACK_USAGE("swap_setup", 0),
STACK_USAGE("__put_page", 8),
STACK_USAGE("put_pages_list", 48),
STACK_USAGE("get_kernel_pages", 0),
STACK_USAGE("pagevec_lru_move_fn", 64),
STACK_USAGE("pagevec_move_tail_fn", 48),
STACK_USAGE("folio_rotate_reclaimable", 32),
STACK_USAGE("lru_note_cost", 48),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("local_lock_acquire", 8),
STACK_USAGE("__bpf_trace_mm_lru_insertion", 0),
STACK_USAGE("__traceiter_mm_lru_insertion", 16),
STACK_USAGE("perf_trace_mm_lru_insertion", 72),
STACK_USAGE("trace_event_raw_event_mm_lru_insertion", 80),
STACK_USAGE("trace_raw_output_mm_lru_insertion", 32),
STACK_USAGE("lru_note_cost_folio", 0),
STACK_USAGE("__activate_page", 56),
STACK_USAGE("local_lock_release", 8),
STACK_USAGE("folio_mark_accessed", 8),
STACK_USAGE("folio_add_lru", 8),
STACK_USAGE("lru_cache_add_inactive_or_unevictable", 0),
STACK_USAGE("lru_deactivate_file_fn", 80),
STACK_USAGE("lru_deactivate_fn", 56),
STACK_USAGE("lru_lazyfree_fn", 56),
STACK_USAGE("lru_add_drain_cpu", 48),
STACK_USAGE("__bpf_trace_mm_lru_activate", 0),
STACK_USAGE("__traceiter_mm_lru_activate", 16),
STACK_USAGE("perf_trace_mm_lru_activate", 56),
STACK_USAGE("trace_event_raw_event_mm_lru_activate", 72),
STACK_USAGE("trace_raw_output_mm_lru_activate", 24),
STACK_USAGE("deactivate_file_folio", 8),
STACK_USAGE("deactivate_page", 8),
STACK_USAGE("mark_page_lazyfree", 8),
STACK_USAGE("lru_add_drain", 8),
STACK_USAGE("lru_add_drain_cpu_zone", 16),
STACK_USAGE("lru_add_drain_per_cpu", 8),
STACK_USAGE("__lru_add_drain_all", 32),
STACK_USAGE("__page_cache_release", 64),
STACK_USAGE("lru_add_drain_all", 0),
STACK_USAGE("lru_cache_disable", 0),
STACK_USAGE("release_pages", 120),
STACK_USAGE("thp_nr_pages", 0),
STACK_USAGE("__pagevec_release", 8),
STACK_USAGE("swap_cgroup_record", 64),
STACK_USAGE("lookup_swap_cgroup_id", 0),
STACK_USAGE("swap_cgroup_swapon", 40),
STACK_USAGE("swap_cgroup_swapoff", 24),
STACK_USAGE("swap_cgroup_cmpxchg", 40),
STACK_USAGE("alloc_swap_slot_cache", 32),
STACK_USAGE("drain_slots_cache_cpu", 32),
STACK_USAGE("free_slot_cache", 8),
STACK_USAGE("enable_swap_slots_cache", 8),
STACK_USAGE("free_swap_slot", 40),
STACK_USAGE("get_swap_page", 48),
STACK_USAGE("disable_swap_slots_cache_lock", 8),
STACK_USAGE("reenable_swap_slots_cache_unlock", 0),
STACK_USAGE("add_to_swap_cache", 168),
STACK_USAGE("__delete_from_swap_cache", 128),
STACK_USAGE("add_to_swap", 24),
STACK_USAGE("delete_from_swap_cache", 24),
STACK_USAGE("clear_shadow_from_swap_cache", 120),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("free_swap_cache", 8),
STACK_USAGE("free_page_and_swap_cache", 8),
STACK_USAGE("free_pages_and_swap_cache", 32),
STACK_USAGE("lookup_swap_cache", 40),
STACK_USAGE("find_get_incore_page", 32),
STACK_USAGE("__read_swap_cache_async", 104),
STACK_USAGE("read_swap_cache_async", 32),
STACK_USAGE("put_swap_device", 8),
STACK_USAGE("swap_cluster_readahead", 136),
STACK_USAGE("init_swap_address_space", 32),
STACK_USAGE("exit_swap_address_space", 8),
STACK_USAGE("show_swap_cache_info", 0),
STACK_USAGE("swapin_readahead", 144),
STACK_USAGE("get_shadow_from_swap_cache", 0),
STACK_USAGE("vma_ra_enabled_show", 0),
STACK_USAGE("vma_ra_enabled_store", 24),
STACK_USAGE("swap_init_sysfs", 16),
STACK_USAGE("get_swap_pages", 112),
STACK_USAGE("get_swap_device", 24),
STACK_USAGE("__try_to_reclaim_swap", 24),
STACK_USAGE("__swap_entry_free", 48),
STACK_USAGE("swap_free", 0),
STACK_USAGE("put_swap_page", 88),
STACK_USAGE("split_swap_cluster", 24),
STACK_USAGE("swp_entry_cmp", 0),
STACK_USAGE("swapcache_free_entries", 64),
STACK_USAGE("page_swapcount", 32),
STACK_USAGE("__swap_count", 8),
STACK_USAGE("__swp_swapcount", 32),
STACK_USAGE("swp_swapcount", 56),
STACK_USAGE("swap_page_trans_huge_swapped", 56),
STACK_USAGE("try_to_free_swap", 16),
STACK_USAGE("free_swap_and_cache", 32),
STACK_USAGE("get_swap_page_of_type", 32),
STACK_USAGE("swap_type_of", 32),
STACK_USAGE("find_first_swap", 16),
STACK_USAGE("swapdev_block", 0),
STACK_USAGE("count_swap_pages", 32),
STACK_USAGE("add_swap_extent", 48),
STACK_USAGE("swap_page_sector", 0),
STACK_USAGE("has_usable_swap", 8),
STACK_USAGE("__ia32_sys_swapoff", 0),
STACK_USAGE("__se_sys_swapoff", 504),
STACK_USAGE("__x64_sys_swapoff", 0),
STACK_USAGE("swaps_poll", 8),
STACK_USAGE("swap_start", 8),
STACK_USAGE("swap_next", 0),
STACK_USAGE("swap_stop", 0),
STACK_USAGE("swap_show", 40),
STACK_USAGE("swaps_open", 8),
STACK_USAGE("procswaps_init", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("max_swapfiles_check", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("generic_max_swapfile_size", 0),
STACK_USAGE("max_swapfile_size", 0),
STACK_USAGE("__ia32_sys_swapon", 0),
STACK_USAGE("__se_sys_swapon", 240),
STACK_USAGE("__x64_sys_swapon", 0),
STACK_USAGE("si_swapinfo", 16),
STACK_USAGE("__swap_duplicate", 40),
STACK_USAGE("swap_shmem_alloc", 0),
STACK_USAGE("swap_duplicate", 8),
STACK_USAGE("swapcache_prepare", 0),
STACK_USAGE("swp_swap_info", 0),
STACK_USAGE("page_swap_info", 0),
STACK_USAGE("swapcache_mapping", 0),
STACK_USAGE("__page_file_index", 0),
STACK_USAGE("add_swap_count_continuation", 88),
STACK_USAGE("percpu_ref_put", 8),
STACK_USAGE("swap_count_continued", 56),
STACK_USAGE("__cgroup_throttle_swaprate", 24),
STACK_USAGE("swapfile_init", 16),
STACK_USAGE("swap_do_scheduled_discard", 80),
STACK_USAGE("swap_discard_work", 16),
STACK_USAGE("swap_users_ref_free", 0),
STACK_USAGE("free_cluster", 40),
STACK_USAGE("scan_swap_map_try_ssd_cluster", 64),
STACK_USAGE("swap_range_alloc", 40),
STACK_USAGE("add_to_avail_list", 40),
STACK_USAGE("swap_range_free", 40),
STACK_USAGE("scan_swap_map_slots", 104),
STACK_USAGE("folio_invalidate", 0),
STACK_USAGE("truncate_cleanup_folio", 8),
STACK_USAGE("truncate_inode_folio", 8),
STACK_USAGE("truncate_inode_partial_folio", 40),
STACK_USAGE("generic_error_remove_page", 8),
STACK_USAGE("mapping_evict_folio", 16),
STACK_USAGE("invalidate_inode_page", 8),
STACK_USAGE("truncate_inode_pages_range", 360),
STACK_USAGE("clear_shadow_entry", 96),
STACK_USAGE("truncate_inode_pages", 0),
STACK_USAGE("truncate_inode_pages_final", 16),
STACK_USAGE("invalidate_mapping_pagevec", 344),
STACK_USAGE("invalidate_mapping_pages", 0),
STACK_USAGE("truncate_folio_batch_exceptionals", 128),
STACK_USAGE("invalidate_inode_pages2_range", 360),
STACK_USAGE("invalidate_inode_pages2", 0),
STACK_USAGE("truncate_pagecache", 24),
STACK_USAGE("truncate_setsize", 24),
STACK_USAGE("pagecache_isize_extended", 8),
STACK_USAGE("truncate_pagecache_range", 24),
STACK_USAGE("mmap_read_lock", 8),
STACK_USAGE("mmap_read_unlock", 8),
STACK_USAGE("kmap", 8),
STACK_USAGE("mfill_atomic_install_pte", 128),
STACK_USAGE("mcopy_atomic", 168),
STACK_USAGE("mfill_zeropage", 160),
STACK_USAGE("mcopy_continue", 152),
STACK_USAGE("mwriteprotect_range", 64),
STACK_USAGE("get_cmdline", 72),
STACK_USAGE("memcmp_pages", 24),
STACK_USAGE("mem_dump_obj", 8),
STACK_USAGE("page_offline_freeze", 0),
STACK_USAGE("page_offline_thaw", 0),
STACK_USAGE("page_offline_begin", 0),
STACK_USAGE("page_offline_end", 0),
STACK_USAGE("kmemdup", 24),
STACK_USAGE("kmemdup_nul", 24),
STACK_USAGE("folio_nr_pages", 0),
STACK_USAGE("memdup_user", 24),
STACK_USAGE("vmemdup_user", 24),
STACK_USAGE("strndup_user", 32),
STACK_USAGE("memdup_user_nul", 24),
STACK_USAGE("__vma_link_list", 0),
STACK_USAGE("__vma_unlink_list", 0),
STACK_USAGE("vma_is_stack_for_current", 24),
STACK_USAGE("vma_set_file", 0),
STACK_USAGE("randomize_stack_top", 16),
STACK_USAGE("kfree_const", 0),
STACK_USAGE("__account_locked_vm", 40),
STACK_USAGE("account_locked_vm", 48),
STACK_USAGE("vm_mmap_pgoff", 120),
STACK_USAGE("kstrdup", 24),
STACK_USAGE("vm_mmap", 0),
STACK_USAGE("kvmalloc_node", 24),
STACK_USAGE("kvfree", 8),
STACK_USAGE("kvfree_sensitive", 8),
STACK_USAGE("kvrealloc", 24),
STACK_USAGE("__vmalloc_array", 0),
STACK_USAGE("vmalloc_array", 0),
STACK_USAGE("__vcalloc", 0),
STACK_USAGE("vcalloc", 0),
STACK_USAGE("page_rmapping", 0),
STACK_USAGE("folio_mapped", 8),
STACK_USAGE("folio_anon_vma", 0),
STACK_USAGE("folio_mapping", 0),
STACK_USAGE("__page_mapcount", 16),
STACK_USAGE("kstrdup_const", 24),
STACK_USAGE("folio_mapcount", 24),
STACK_USAGE("folio_copy", 24),
STACK_USAGE("overcommit_ratio_handler", 8),
STACK_USAGE("sync_overcommit_as", 0),
STACK_USAGE("overcommit_policy_handler", 80),
STACK_USAGE("overcommit_kbytes_handler", 8),
STACK_USAGE("vm_commit_limit", 8),
STACK_USAGE("vm_memory_committed", 0),
STACK_USAGE("kstrndup", 24),
STACK_USAGE("__vm_enough_memory", 32),
STACK_USAGE("vmacache_update", 0),
STACK_USAGE("vmacache_find", 0),
STACK_USAGE("insert_vmap_area", 16),
STACK_USAGE("insert_vmap_area_augment", 24),
STACK_USAGE("alloc_vmap_area", 120),
STACK_USAGE("register_vmap_purge_notifier", 0),
STACK_USAGE("unregister_vmap_purge_notifier", 0),
STACK_USAGE("__purge_vmap_area_lazy", 120),
STACK_USAGE("purge_vmap_area_lazy", 0),
STACK_USAGE("drain_vmap_area_work", 8),
STACK_USAGE("free_vmap_area_noflush", 72),
STACK_USAGE("free_unmap_vmap_area", 8),
STACK_USAGE("find_vmap_area", 16),
STACK_USAGE("purge_fragmented_blocks_allcpus", 80),
STACK_USAGE("_vm_unmap_aliases", 56),
STACK_USAGE("vm_unmap_aliases", 0),
STACK_USAGE("vm_unmap_ram", 40),
STACK_USAGE("vm_map_ram", 96),
STACK_USAGE("vm_area_add_early", 0),
STACK_USAGE("vm_area_register_early", 8),
STACK_USAGE("vmalloc_init", 24),
STACK_USAGE("__get_vm_area_node", 64),
STACK_USAGE("__get_vm_area_caller", 0),
STACK_USAGE("get_vm_area", 0),
STACK_USAGE("get_vm_area_caller", 0),
STACK_USAGE("find_vm_area", 16),
STACK_USAGE("remove_vm_area", 24),
STACK_USAGE("__vunmap", 48),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("__vfree_deferred", 8),
STACK_USAGE("vfree_atomic", 8),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("vfree", 8),
STACK_USAGE("vunmap", 8),
STACK_USAGE("vmap", 48),
STACK_USAGE("vmap_range_noflush", 240),
STACK_USAGE("__vmalloc_node_range", 176),
STACK_USAGE("ioremap_page_range", 0),
STACK_USAGE("__vmalloc_node", 0),
STACK_USAGE("__vmalloc", 0),
STACK_USAGE("vmalloc", 0),
STACK_USAGE("vmalloc_huge", 0),
STACK_USAGE("vzalloc", 0),
STACK_USAGE("vmalloc_user", 0),
STACK_USAGE("vmalloc_node", 0),
STACK_USAGE("vzalloc_node", 0),
STACK_USAGE("vmalloc_32", 0),
STACK_USAGE("vmalloc_32_user", 0),
STACK_USAGE("vread", 112),
STACK_USAGE("remap_vmalloc_range_partial", 56),
STACK_USAGE("remap_vmalloc_range", 0),
STACK_USAGE("free_vm_area", 8),
STACK_USAGE("pcpu_get_vm_areas", 176),
STACK_USAGE("pcpu_free_vm_areas", 32),
STACK_USAGE("vmalloc_dump_obj", 16),
STACK_USAGE("s_start", 8),
STACK_USAGE("s_next", 0),
STACK_USAGE("s_stop", 0),
STACK_USAGE("s_show", 64),
STACK_USAGE("proc_vmalloc_init", 0),
STACK_USAGE("vunmap_range_noflush", 144),
STACK_USAGE("vunmap_range", 16),
STACK_USAGE("set_nohugeiomap", 0),
STACK_USAGE("vmap_pages_range_noflush", 184),
STACK_USAGE("is_vmalloc_or_module_addr", 0),
STACK_USAGE("vmalloc_to_page", 0),
STACK_USAGE("set_nohugevmalloc", 0),
STACK_USAGE("vmalloc_to_pfn", 0),
STACK_USAGE("is_vmalloc_addr", 0),
STACK_USAGE("free_vmap_area_rb_augment_cb_rotate", 0),
STACK_USAGE("vmalloc_nr_pages", 0),
STACK_USAGE("free_work", 8),
STACK_USAGE("mod_memcg_page_state", 32),
STACK_USAGE("vmpressure_work_fn", 64),
STACK_USAGE("vmpressure", 48),
STACK_USAGE("vmpressure_prio", 24),
STACK_USAGE("vmpressure_register_event", 64),
STACK_USAGE("vmpressure_unregister_event", 24),
STACK_USAGE("vmpressure_init", 8),
STACK_USAGE("vmpressure_cleanup", 0),
STACK_USAGE("reclaim_throttle", 112),
STACK_USAGE("__acct_reclaim_writeback", 16),
STACK_USAGE("__bpf_trace_mm_vmscan_direct_reclaim_begin_template", 0),
STACK_USAGE("perf_trace_mm_vmscan_direct_reclaim_begin_template", 64),
STACK_USAGE("trace_event_raw_event_mm_vmscan_direct_reclaim_begin_template", 80),
STACK_USAGE("trace_raw_output_mm_vmscan_direct_reclaim_begin_template", 32),
STACK_USAGE("__remove_mapping", 48),
STACK_USAGE("page_evictable", 8),
STACK_USAGE("remove_mapping", 16),
STACK_USAGE("folio_putback_lru", 8),
STACK_USAGE("__traceiter_mm_vmscan_direct_reclaim_begin", 24),
STACK_USAGE("__traceiter_mm_vmscan_memcg_reclaim_begin", 24),
STACK_USAGE("alloc_demote_page", 32),
STACK_USAGE("shrink_page_list", 264),
STACK_USAGE("__traceiter_mm_vmscan_memcg_softlimit_reclaim_begin", 24),
STACK_USAGE("__bpf_trace_mm_vmscan_direct_reclaim_end_template", 0),
STACK_USAGE("perf_trace_mm_vmscan_direct_reclaim_end_template", 56),
STACK_USAGE("trace_event_raw_event_mm_vmscan_direct_reclaim_end_template", 72),
STACK_USAGE("trace_raw_output_mm_vmscan_direct_reclaim_end_template", 24),
STACK_USAGE("__traceiter_mm_vmscan_direct_reclaim_end", 16),
STACK_USAGE("__traceiter_mm_vmscan_memcg_reclaim_end", 16),
STACK_USAGE("__traceiter_mm_vmscan_memcg_softlimit_reclaim_end", 16),
STACK_USAGE("reclaim_clean_pages_from_list", 232),
STACK_USAGE("__bpf_trace_mm_shrink_slab_start", 0),
STACK_USAGE("__traceiter_mm_shrink_slab_start", 48),
STACK_USAGE("perf_trace_mm_shrink_slab_start", 88),
STACK_USAGE("trace_event_raw_event_mm_shrink_slab_start", 104),
STACK_USAGE("trace_raw_output_mm_shrink_slab_start", 56),
STACK_USAGE("isolate_lru_pages", 216),
STACK_USAGE("folio_isolate_lru", 40),
STACK_USAGE("move_pages_to_lru", 128),
STACK_USAGE("shrink_active_list", 176),
STACK_USAGE("__bpf_trace_mm_shrink_slab_end", 0),
STACK_USAGE("__traceiter_mm_shrink_slab_end", 48),
STACK_USAGE("perf_trace_mm_shrink_slab_end", 80),
STACK_USAGE("trace_event_raw_event_mm_shrink_slab_end", 104),
STACK_USAGE("trace_raw_output_mm_shrink_slab_end", 24),
STACK_USAGE("reclaim_pages", 240),
STACK_USAGE("free_shrinker_info", 48),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("alloc_shrinker_info", 80),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("__bpf_trace_mm_vmscan_lru_isolate", 0),
STACK_USAGE("__traceiter_mm_vmscan_lru_isolate", 48),
STACK_USAGE("perf_trace_mm_vmscan_lru_isolate", 88),
STACK_USAGE("trace_event_raw_event_mm_vmscan_lru_isolate", 104),
STACK_USAGE("trace_raw_output_mm_vmscan_lru_isolate", 80),
STACK_USAGE("shrink_lruvec", 376),
STACK_USAGE("shrink_node", 128),
STACK_USAGE("__bpf_trace_mm_vmscan_write_folio", 0),
STACK_USAGE("__traceiter_mm_vmscan_write_folio", 16),
STACK_USAGE("perf_trace_mm_vmscan_write_folio", 56),
STACK_USAGE("trace_event_raw_event_mm_vmscan_write_folio", 72),
STACK_USAGE("trace_raw_output_mm_vmscan_write_folio", 40),
STACK_USAGE("set_shrinker_bit", 24),
STACK_USAGE("do_try_to_free_pages", 88),
STACK_USAGE("__bpf_trace_mm_vmscan_lru_shrink_inactive", 0),
STACK_USAGE("__traceiter_mm_vmscan_lru_shrink_inactive", 48),
STACK_USAGE("perf_trace_mm_vmscan_lru_shrink_inactive", 80),
STACK_USAGE("trace_event_raw_event_mm_vmscan_lru_shrink_inactive", 104),
STACK_USAGE("trace_raw_output_mm_vmscan_lru_shrink_inactive", 112),
STACK_USAGE("allow_direct_reclaim", 32),
STACK_USAGE("try_to_free_pages", 224),
STACK_USAGE("mem_cgroup_shrink_node", 136),
STACK_USAGE("try_to_free_mem_cgroup_pages", 144),
STACK_USAGE("prepare_kswapd_sleep", 48),
STACK_USAGE("__bpf_trace_mm_vmscan_lru_shrink_active", 0),
STACK_USAGE("__traceiter_mm_vmscan_lru_shrink_active", 48),
STACK_USAGE("perf_trace_mm_vmscan_lru_shrink_active", 88),
STACK_USAGE("trace_event_raw_event_mm_vmscan_lru_shrink_active", 104),
STACK_USAGE("trace_raw_output_mm_vmscan_lru_shrink_active", 64),
STACK_USAGE("balance_pgdat", 264),
STACK_USAGE("reparent_shrinker_deferred", 64),
STACK_USAGE("kswapd", 96),
STACK_USAGE("__bpf_trace_mm_vmscan_node_reclaim_begin", 0),
STACK_USAGE("__traceiter_mm_vmscan_node_reclaim_begin", 32),
STACK_USAGE("perf_trace_mm_vmscan_node_reclaim_begin", 72),
STACK_USAGE("trace_event_raw_event_mm_vmscan_node_reclaim_begin", 88),
STACK_USAGE("trace_raw_output_mm_vmscan_node_reclaim_begin", 40),
STACK_USAGE("wakeup_kswapd", 56),
STACK_USAGE("shrink_all_memory", 152),
STACK_USAGE("kswapd_run", 24),
STACK_USAGE("kswapd_stop", 8),
STACK_USAGE("kswapd_init", 32),
STACK_USAGE("node_pagecache_reclaimable", 24),
STACK_USAGE("__traceiter_mm_vmscan_node_reclaim_end", 16),
STACK_USAGE("__bpf_trace_mm_vmscan_throttled", 0),
STACK_USAGE("__traceiter_mm_vmscan_throttled", 40),
STACK_USAGE("perf_trace_mm_vmscan_throttled", 72),
STACK_USAGE("trace_event_raw_event_mm_vmscan_throttled", 96),
STACK_USAGE("trace_raw_output_mm_vmscan_throttled", 48),
STACK_USAGE("node_reclaim", 160),
STACK_USAGE("check_move_unevictable_pages", 88),
STACK_USAGE("__bpf_trace_mm_vmscan_kswapd_sleep", 0),
STACK_USAGE("__traceiter_mm_vmscan_kswapd_sleep", 16),
STACK_USAGE("perf_trace_mm_vmscan_kswapd_sleep", 56),
STACK_USAGE("trace_event_raw_event_mm_vmscan_kswapd_sleep", 72),
STACK_USAGE("trace_raw_output_mm_vmscan_kswapd_sleep", 24),
STACK_USAGE("zone_reclaimable_pages", 48),
STACK_USAGE("prealloc_shrinker", 136),
STACK_USAGE("free_prealloced_shrinker", 8),
STACK_USAGE("register_shrinker_prepared", 8),
STACK_USAGE("register_shrinker", 16),
STACK_USAGE("__bpf_trace_mm_vmscan_kswapd_wake", 0),
STACK_USAGE("__traceiter_mm_vmscan_kswapd_wake", 32),
STACK_USAGE("perf_trace_mm_vmscan_kswapd_wake", 72),
STACK_USAGE("trace_event_raw_event_mm_vmscan_kswapd_wake", 88),
STACK_USAGE("trace_raw_output_mm_vmscan_kswapd_wake", 24),
STACK_USAGE("unregister_shrinker", 16),
STACK_USAGE("synchronize_shrinkers", 0),
STACK_USAGE("do_shrink_slab", 88),
STACK_USAGE("trylock_page", 0),
STACK_USAGE("__bpf_trace_mm_vmscan_wakeup_kswapd", 0),
STACK_USAGE("__traceiter_mm_vmscan_wakeup_kswapd", 40),
STACK_USAGE("perf_trace_mm_vmscan_wakeup_kswapd", 72),
STACK_USAGE("trace_event_raw_event_mm_vmscan_wakeup_kswapd", 96),
STACK_USAGE("trace_raw_output_mm_vmscan_wakeup_kswapd", 40),
STACK_USAGE("shrink_slab", 112),
STACK_USAGE("drop_slab", 64),
STACK_USAGE("sum_zone_numa_event_state", 0),
STACK_USAGE("node_page_state_pages", 0),
STACK_USAGE("node_page_state", 0),
STACK_USAGE("extfrag_for_order", 48),
STACK_USAGE("fragmentation_index", 160),
STACK_USAGE("all_vm_events", 16),
STACK_USAGE("frag_start", 8),
STACK_USAGE("frag_next", 0),
STACK_USAGE("frag_stop", 0),
STACK_USAGE("walk_zones_in_node", 56),
STACK_USAGE("frag_show_print", 16),
STACK_USAGE("vm_events_fold_cpu", 0),
STACK_USAGE("frag_show", 0),
STACK_USAGE("pagetypeinfo_showfree_print", 48),
STACK_USAGE("pagetypeinfo_showblockcount_print", 120),
STACK_USAGE("pagetypeinfo_show", 16),
STACK_USAGE("zoneinfo_show_print", 40),
STACK_USAGE("zoneinfo_show", 40),
STACK_USAGE("vmstat_start", 40),
STACK_USAGE("vmstat_next", 0),
STACK_USAGE("vmstat_show", 24),
STACK_USAGE("vmstat_stop", 8),
STACK_USAGE("refresh_vm_stats", 0),
STACK_USAGE("vmstat_refresh", 32),
STACK_USAGE("fold_vm_numa_events", 56),
STACK_USAGE("vmstat_update", 24),
STACK_USAGE("need_update", 40),
STACK_USAGE("quiet_vmstat", 0),
STACK_USAGE("calculate_pressure_threshold", 0),
STACK_USAGE("vmstat_shepherd", 16),
STACK_USAGE("start_shepherd_timer", 32),
STACK_USAGE("init_cpu_node_state", 40),
STACK_USAGE("vmstat_cpu_online", 8),
STACK_USAGE("vmstat_cpu_down_prep", 0),
STACK_USAGE("vmstat_cpu_dead", 8),
STACK_USAGE("init_mm_internals", 0),
STACK_USAGE("unusable_show_print", 72),
STACK_USAGE("unusable_show", 0),
STACK_USAGE("unusable_open", 16),
STACK_USAGE("extfrag_show_print", 120),
STACK_USAGE("extfrag_show", 0),
STACK_USAGE("extfrag_open", 16),
STACK_USAGE("calculate_normal_threshold", 8),
STACK_USAGE("extfrag_debug_init", 8),
STACK_USAGE("refresh_zone_stat_thresholds", 40),
STACK_USAGE("set_pgdat_percpu_threshold", 56),
STACK_USAGE("__mod_zone_page_state", 40),
STACK_USAGE("__mod_node_page_state", 40),
STACK_USAGE("__inc_zone_state", 32),
STACK_USAGE("__inc_node_state", 32),
STACK_USAGE("__inc_zone_page_state", 40),
STACK_USAGE("__inc_node_page_state", 32),
STACK_USAGE("__dec_zone_state", 32),
STACK_USAGE("__dec_node_state", 32),
STACK_USAGE("__dec_zone_page_state", 40),
STACK_USAGE("__dec_node_page_state", 32),
STACK_USAGE("mod_zone_page_state", 0),
STACK_USAGE("inc_zone_page_state", 0),
STACK_USAGE("dec_zone_page_state", 0),
STACK_USAGE("mod_node_page_state", 0),
STACK_USAGE("inc_node_state", 0),
STACK_USAGE("inc_node_page_state", 0),
STACK_USAGE("dec_node_page_state", 0),
STACK_USAGE("invalid_numa_statistics", 8),
STACK_USAGE("fold_diff", 0),
STACK_USAGE("sysctl_vm_numa_stat_handler", 48),
STACK_USAGE("refresh_cpu_vm_stats", 296),
STACK_USAGE("cpu_vm_stats_fold", 248),
STACK_USAGE("drain_zonestat", 0),
STACK_USAGE("sum_zone_node_page_state", 0),
STACK_USAGE("workingset_age_nonresident", 0),
STACK_USAGE("workingset_eviction", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("workingset_refault", 104),
STACK_USAGE("workingset_activation", 16),
STACK_USAGE("workingset_update_node", 8),
STACK_USAGE("count_shadow_nodes", 64),
STACK_USAGE("shadow_lru_isolate", 40),
STACK_USAGE("scan_shadow_nodes", 0),
STACK_USAGE("workingset_init", 16),
STACK_USAGE("p8022_request", 0),
STACK_USAGE("register_8022_client", 24),
STACK_USAGE("unregister_8022_client", 8),
STACK_USAGE("snap_exit", 0),
STACK_USAGE("register_snap_client", 24),
STACK_USAGE("unregister_snap_client", 8),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("snap_rcv", 48),
STACK_USAGE("snap_request", 24),
STACK_USAGE("snap_init", 0),
STACK_USAGE("stp_pdu_rcv", 40),
STACK_USAGE("stp_proto_register", 8),
STACK_USAGE("stp_proto_unregister", 8),
STACK_USAGE("vlan_check_real_dev", 32),
STACK_USAGE("register_vlan_dev", 56),
STACK_USAGE("register_vlan_device", 72),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("vlan_device_event", 80),
STACK_USAGE("net_generic", 16),
STACK_USAGE("vlan_ioctl_handler", 96),
STACK_USAGE("vlan_init_net", 8),
STACK_USAGE("vlan_exit_net", 0),
STACK_USAGE("vlan_proto_init", 8),
STACK_USAGE("vlan_cleanup_module", 0),
STACK_USAGE("unregister_vlan_dev", 32),
STACK_USAGE("vlan_dev_real_dev", 0),
STACK_USAGE("vlan_do_receive", 56),
STACK_USAGE("vlan_dev_vlan_id", 0),
STACK_USAGE("vlan_dev_vlan_proto", 0),
STACK_USAGE("vlan_info_rcu_free", 16),
STACK_USAGE("vlan_for_each", 48),
STACK_USAGE("vlan_filter_push_vids", 56),
STACK_USAGE("vlan_filter_drop_vids", 40),
STACK_USAGE("vlan_vid_add", 64),
STACK_USAGE("vlan_vid_del", 48),
STACK_USAGE("vlan_vids_add_by_dev", 40),
STACK_USAGE("vlan_vids_del_by_dev", 24),
STACK_USAGE("vlan_uses_dev", 8),
STACK_USAGE("vlan_gro_receive", 40),
STACK_USAGE("vlan_gro_complete", 16),
STACK_USAGE("vlan_offload_init", 0),
STACK_USAGE("__vlan_find_dev_deep_rcu", 40),
STACK_USAGE("vlan_dev_change_mtu", 0),
STACK_USAGE("vlan_dev_set_ingress_priority", 0),
STACK_USAGE("vlan_dev_set_egress_priority", 40),
STACK_USAGE("vlan_dev_change_flags", 0),
STACK_USAGE("vlan_dev_get_realdev_name", 0),
STACK_USAGE("vlan_dev_inherit_address", 16),
STACK_USAGE("vlan_dev_open", 24),
STACK_USAGE("vlan_dev_stop", 16),
STACK_USAGE("vlan_dev_set_mac_address", 32),
STACK_USAGE("vlan_dev_ioctl", 88),
STACK_USAGE("vlan_dev_neigh_setup", 0),
STACK_USAGE("vlan_dev_hard_header", 48),
STACK_USAGE("vlan_dev_change_rx_flags", 24),
STACK_USAGE("vlan_dev_set_rx_mode", 8),
STACK_USAGE("vlan_parse_protocol", 56),
STACK_USAGE("vlan_passthru_hard_header", 0),
STACK_USAGE("vlan_dev_init", 32),
STACK_USAGE("vlan_dev_free_egress_priority", 16),
STACK_USAGE("vlan_dev_uninit", 16),
STACK_USAGE("vlan_dev_fix_features", 0),
STACK_USAGE("vlan_ethtool_get_link_ksettings", 0),
STACK_USAGE("vlan_ethtool_get_drvinfo", 8),
STACK_USAGE("vlan_ethtool_get_ts_info", 0),
STACK_USAGE("vlan_dev_get_stats64", 72),
STACK_USAGE("vlan_dev_poll_controller", 0),
STACK_USAGE("vlan_dev_netpoll_setup", 24),
STACK_USAGE("vlan_dev_netpoll_cleanup", 0),
STACK_USAGE("vlan_dev_get_iflink", 0),
STACK_USAGE("vlan_dev_fill_forward_path", 0),
STACK_USAGE("vlan_dev_free", 8),
STACK_USAGE("vlan_setup", 8),
STACK_USAGE("vlan_dev_hard_start_xmit", 40),
STACK_USAGE("vlan_changelink", 40),
STACK_USAGE("vlan_newlink", 48),
STACK_USAGE("vlan_get_size", 0),
STACK_USAGE("vlan_fill_info", 80),
STACK_USAGE("vlan_get_link_net", 0),
STACK_USAGE("vlan_netlink_init", 0),
STACK_USAGE("vlan_netlink_fini", 0),
STACK_USAGE("vlan_validate", 32),
STACK_USAGE("vlan_proc_init", 24),
STACK_USAGE("vlan_proc_add_dev", 16),
STACK_USAGE("vlan_proc_rem_dev", 8),
STACK_USAGE("vlan_seq_start", 16),
STACK_USAGE("vlan_seq_next", 0),
STACK_USAGE("vlan_seq_stop", 0),
STACK_USAGE("vlan_seq_show", 24),
STACK_USAGE("vlandev_seq_show", 232),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("net_generic", 16),
STACK_USAGE("vlan_proc_cleanup", 16),
STACK_USAGE("__bpf_trace_9p_client_req", 0),
STACK_USAGE("__traceiter_9p_client_req", 32),
STACK_USAGE("perf_trace_9p_client_req", 72),
STACK_USAGE("trace_event_raw_event_9p_client_req", 88),
STACK_USAGE("trace_raw_output_9p_client_req", 32),
STACK_USAGE("p9_client_destroy", 64),
STACK_USAGE("p9_client_disconnect", 0),
STACK_USAGE("p9_client_begin_disconnect", 0),
STACK_USAGE("p9_client_attach", 72),
STACK_USAGE("p9_client_walk", 88),
STACK_USAGE("__bpf_trace_9p_client_res", 0),
STACK_USAGE("__traceiter_9p_client_res", 40),
STACK_USAGE("perf_trace_9p_client_res", 72),
STACK_USAGE("trace_9p_client_res", 0),
STACK_USAGE("trace_event_raw_event_9p_client_res", 96),
STACK_USAGE("trace_raw_output_9p_client_res", 32),
STACK_USAGE("p9_client_open", 80),
STACK_USAGE("p9_client_create_dotl", 72),
STACK_USAGE("p9_client_fcreate", 80),
STACK_USAGE("p9_client_symlink", 40),
STACK_USAGE("p9_client_link", 32),
STACK_USAGE("p9_client_fsync", 32),
STACK_USAGE("p9_client_clunk", 40),
STACK_USAGE("__bpf_trace_9p_protocol_dump", 0),
STACK_USAGE("__traceiter_9p_protocol_dump", 24),
STACK_USAGE("perf_trace_9p_protocol_dump", 64),
STACK_USAGE("trace_9p_protocol_dump", 0),
STACK_USAGE("trace_event_raw_event_9p_protocol_dump", 80),
STACK_USAGE("trace_raw_output_9p_protocol_dump", 32),
STACK_USAGE("p9_client_remove", 40),
STACK_USAGE("p9_client_unlinkat", 32),
STACK_USAGE("p9_client_read", 40),
STACK_USAGE("p9_client_read_once", 120),
STACK_USAGE("p9_client_write", 144),
STACK_USAGE("p9_client_stat", 64),
STACK_USAGE("p9_client_getattr_dotl", 48),
STACK_USAGE("p9_client_wstat", 40),
STACK_USAGE("p9_client_setattr", 32),
STACK_USAGE("p9_client_statfs", 56),
STACK_USAGE("p9_client_rename", 32),
STACK_USAGE("p9_client_renameat", 32),
STACK_USAGE("p9_client_xattrwalk", 48),
STACK_USAGE("p9_client_xattrcreate", 32),
STACK_USAGE("p9_client_readdir", 176),
STACK_USAGE("p9_client_mknod_dotl", 40),
STACK_USAGE("p9_client_mkdir_dotl", 40),
STACK_USAGE("p9_client_lock_dotl", 40),
STACK_USAGE("p9_client_getlock_dotl", 40),
STACK_USAGE("p9_client_readlink", 40),
STACK_USAGE("p9_client_init", 8),
STACK_USAGE("p9_client_exit", 0),
STACK_USAGE("p9_fcall_fini", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("p9_tag_lookup", 40),
STACK_USAGE("local_lock_release", 8),
STACK_USAGE("p9_req_put", 16),
STACK_USAGE("p9_client_cb", 8),
STACK_USAGE("p9_parse_header", 64),
STACK_USAGE("p9_is_proto_dotl", 0),
STACK_USAGE("p9_is_proto_dotu", 0),
STACK_USAGE("p9_client_flush", 48),
STACK_USAGE("p9_show_client_options", 16),
STACK_USAGE("p9_client_prepare_req", 80),
STACK_USAGE("p9_client_rpc", 216),
STACK_USAGE("p9_client_zc_rpc", 216),
STACK_USAGE("p9_fid_create", 24),
STACK_USAGE("p9_client_create", 168),
STACK_USAGE("p9_error_init", 16),
STACK_USAGE("p9_errstr2errno", 32),
STACK_USAGE("jhash", 0),
STACK_USAGE("v9fs_get_trans_by_name", 24),
STACK_USAGE("v9fs_get_default_trans", 24),
STACK_USAGE("v9fs_put_trans", 0),
STACK_USAGE("init_p9", 8),
STACK_USAGE("exit_p9", 0),
STACK_USAGE("v9fs_register_trans", 8),
STACK_USAGE("v9fs_unregister_trans", 8),
STACK_USAGE("trace_9p_protocol_dump", 0),
STACK_USAGE("p9stat_free", 8),
STACK_USAGE("p9pdu_vwritef", 136),
STACK_USAGE("pdu_read", 24),
STACK_USAGE("p9pdu_readf", 280),
STACK_USAGE("p9pdu_writef", 88),
STACK_USAGE("p9stat_read", 64),
STACK_USAGE("p9pdu_prepare", 0),
STACK_USAGE("p9pdu_finalize", 32),
STACK_USAGE("p9pdu_reset", 0),
STACK_USAGE("p9dirent_read", 80),
STACK_USAGE("p9_release_pages", 24),
STACK_USAGE("p9_fd_create_unix", 160),
STACK_USAGE("p9_fd_create", 64),
STACK_USAGE("p9_poll_workfn", 32),
STACK_USAGE("p9_trans_fd_init", 0),
STACK_USAGE("p9_trans_fd_exit", 0),
STACK_USAGE("p9_conn_cancel", 72),
STACK_USAGE("p9_read_work", 40),
STACK_USAGE("p9_write_work", 24),
STACK_USAGE("p9_pollwake", 8),
STACK_USAGE("p9_pollwait", 0),
STACK_USAGE("p9_conn_create", 32),
STACK_USAGE("p9_fd_request", 32),
STACK_USAGE("p9_fd_cancel", 24),
STACK_USAGE("p9_fd_cancelled", 16),
STACK_USAGE("p9_fd_show_options", 16),
STACK_USAGE("parse_opts", 120),
STACK_USAGE("p9_socket_open", 32),
STACK_USAGE("p9_fd_close", 16),
STACK_USAGE("p9_fd_create_tcp", 136),
STACK_USAGE("p9_virtio_close", 8),
STACK_USAGE("req_done", 56),
STACK_USAGE("pack_sg_list", 40),
STACK_USAGE("p9_virtio_cancel", 0),
STACK_USAGE("p9_virtio_cancelled", 0),
STACK_USAGE("pack_sg_list_p", 40),
STACK_USAGE("p9_virtio_request", 136),
STACK_USAGE("p9_get_mapped_pages", 112),
STACK_USAGE("p9_virtio_zc_request", 216),
STACK_USAGE("p9_mount_tag_show", 24),
STACK_USAGE("p9_virtio_probe", 80),
STACK_USAGE("p9_virtio_create", 40),
STACK_USAGE("p9_virtio_remove", 32),
STACK_USAGE("p9_virtio_init", 8),
STACK_USAGE("p9_virtio_cleanup", 0),
STACK_USAGE("bpf_dummy_init", 0),
STACK_USAGE("bpf_dummy_ops_is_valid_access", 0),
STACK_USAGE("bpf_dummy_ops_btf_struct_access", 48),
STACK_USAGE("bpf_dummy_init_member", 0),
STACK_USAGE("bpf_dummy_reg", 0),
STACK_USAGE("bpf_dummy_unreg", 0),
STACK_USAGE("bpf_struct_ops_test_run", 56),
STACK_USAGE("bpf_prog_test_run_skb", 112),
STACK_USAGE("__bpf_trace_bpf_test_finish", 0),
STACK_USAGE("perf_trace_bpf_test_finish", 56),
STACK_USAGE("trace_event_raw_event_bpf_test_finish", 72),
STACK_USAGE("trace_raw_output_bpf_test_finish", 24),
STACK_USAGE("xdp_convert_md_to_buff", 40),
STACK_USAGE("xdp_test_run_init_page", 72),
STACK_USAGE("bpf_prog_test_run_xdp", 168),
STACK_USAGE("verify_user_bpf_flow_keys", 16),
STACK_USAGE("bpf_prog_test_run_flow_dissector", 208),
STACK_USAGE("bpf_prog_test_run_sk_lookup", 200),
STACK_USAGE("bpf_prog_test_run_syscall", 64),
STACK_USAGE("bpf_prog_test_run_init", 0),
STACK_USAGE("local_bh_disable", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("sock_gen_cookie", 8),
STACK_USAGE("local_bh_enable", 0),
STACK_USAGE("bpf_test_timer_enter", 8),
STACK_USAGE("bpf_test_run_xdp_live", 440),
STACK_USAGE("bpf_test_run", 184),
STACK_USAGE("__traceiter_bpf_test_finish", 16),
STACK_USAGE("trace_bpf_test_finish", 0),
STACK_USAGE("bpf_test_finish", 96),
STACK_USAGE("bpf_test_timer_leave", 0),
STACK_USAGE("bpf_fentry_test1", 0),
STACK_USAGE("bpf_fentry_test2", 0),
STACK_USAGE("bpf_fentry_test3", 0),
STACK_USAGE("bpf_fentry_test4", 0),
STACK_USAGE("bpf_fentry_test5", 0),
STACK_USAGE("bpf_fentry_test6", 0),
STACK_USAGE("bpf_fentry_test7", 0),
STACK_USAGE("bpf_fentry_test8", 0),
STACK_USAGE("bpf_modify_return_test", 0),
STACK_USAGE("bpf_kfunc_call_test1", 0),
STACK_USAGE("bpf_kfunc_call_test2", 0),
STACK_USAGE("bpf_kfunc_call_test3", 0),
STACK_USAGE("bpf_kfunc_call_test_acquire", 0),
STACK_USAGE("bpf_test_timer_continue", 24),
STACK_USAGE("bpf_kfunc_call_test_release", 0),
STACK_USAGE("bpf_kfunc_call_memb_release", 0),
STACK_USAGE("bpf_kfunc_call_test_pass_ctx", 0),
STACK_USAGE("bpf_kfunc_call_test_pass1", 0),
STACK_USAGE("bpf_kfunc_call_test_pass2", 0),
STACK_USAGE("bpf_kfunc_call_test_fail1", 0),
STACK_USAGE("bpf_kfunc_call_test_fail2", 0),
STACK_USAGE("bpf_kfunc_call_test_fail3", 0),
STACK_USAGE("bpf_prog_run_pin_on_cpu", 32),
STACK_USAGE("bpf_kfunc_call_test_mem_len_pass1", 0),
STACK_USAGE("bpf_kfunc_call_test_mem_len_fail1", 0),
STACK_USAGE("bpf_kfunc_call_test_mem_len_fail2", 0),
STACK_USAGE("bpf_test_init", 40),
STACK_USAGE("rcu_read_unlock_trace", 8),
STACK_USAGE("bpf_prog_test_run_tracing", 48),
STACK_USAGE("__bpf_prog_test_run_raw_tp", 40),
STACK_USAGE("bpf_prog_test_run_raw_tp", 72),
STACK_USAGE("bpf_ctx_init", 40),
STACK_USAGE("bpf_ctx_finish", 40),
STACK_USAGE("convert___skb_to_skb", 24),
STACK_USAGE("convert_skb_to___skb", 0),
STACK_USAGE("br_boolopt_toggle", 0),
STACK_USAGE("br_boolopt_get", 0),
STACK_USAGE("br_device_event", 64),
STACK_USAGE("br_boolopt_multi_toggle", 72),
STACK_USAGE("br_boolopt_multi_get", 0),
STACK_USAGE("br_opt_toggle", 0),
STACK_USAGE("br_net_exit_batch", 64),
STACK_USAGE("br_init", 8),
STACK_USAGE("br_deinit", 0),
STACK_USAGE("br_is_local_ip", 56),
STACK_USAGE("br_do_proxy_suppress_arp", 80),
STACK_USAGE("br_is_nd_neigh_msg", 8),
STACK_USAGE("br_nd_send", 96),
STACK_USAGE("br_recalculate_neigh_suppress_enabled", 0),
STACK_USAGE("br_chk_addr_ip6", 0),
STACK_USAGE("br_do_suppress_nd", 80),
STACK_USAGE("br_arp_send", 32),
STACK_USAGE("neigh_release", 0),
STACK_USAGE("br_chk_addr_ip", 24),
STACK_USAGE("br_dev_init", 24),
STACK_USAGE("br_dev_uninit", 16),
STACK_USAGE("br_dev_open", 16),
STACK_USAGE("br_dev_set_multicast_list", 0),
STACK_USAGE("br_dev_change_rx_flags", 0),
STACK_USAGE("br_dev_stop", 16),
STACK_USAGE("br_change_mtu", 16),
STACK_USAGE("br_set_mac_address", 24),
STACK_USAGE("br_getinfo", 8),
STACK_USAGE("br_get_link_ksettings", 144),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("br_dev_xmit", 88),
STACK_USAGE("br_fix_features", 0),
STACK_USAGE("br_poll_controller", 0),
STACK_USAGE("br_netpoll_cleanup", 16),
STACK_USAGE("br_netpoll_enable", 32),
STACK_USAGE("br_netpoll_setup", 40),
STACK_USAGE("br_netpoll_disable", 0),
STACK_USAGE("br_add_slave", 0),
STACK_USAGE("br_del_slave", 0),
STACK_USAGE("br_fill_forward_path", 24),
STACK_USAGE("br_dev_setup", 40),
STACK_USAGE("br_fdb_add", 136),
STACK_USAGE("br_fdb_delete", 40),
STACK_USAGE("br_fdb_sync_static", 48),
STACK_USAGE("br_fdb_unsync_static", 24),
STACK_USAGE("br_fdb_external_learn_add", 56),
STACK_USAGE("br_fdb_external_learn_del", 40),
STACK_USAGE("br_fdb_offloaded_set", 40),
STACK_USAGE("br_fdb_clear_offload", 16),
STACK_USAGE("fdb_notify", 40),
STACK_USAGE("nla_nest_cancel", 0),
STACK_USAGE("local_bh_disable", 0),
STACK_USAGE("fdb_find_rcu", 104),
STACK_USAGE("br_fdb_find", 24),
STACK_USAGE("br_fdb_find_port", 24),
STACK_USAGE("br_fdb_find_rcu", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("fdb_add_hw_addr", 24),
STACK_USAGE("fdb_del_hw_addr", 24),
STACK_USAGE("fdb_delete", 72),
STACK_USAGE("local_bh_enable", 0),
STACK_USAGE("rht_lock", 16),
STACK_USAGE("fdb_delete_local", 8),
STACK_USAGE("rht_unlock", 8),
STACK_USAGE("br_fdb_find_delete_local", 40),
STACK_USAGE("br_fdb_init", 8),
STACK_USAGE("fdb_create", 88),
STACK_USAGE("rht_assign_unlock", 16),
STACK_USAGE("fdb_add_local", 40),
STACK_USAGE("br_fdb_changeaddr", 32),
STACK_USAGE("br_fdb_change_mac_address", 24),
STACK_USAGE("br_fdb_fini", 0),
STACK_USAGE("br_fdb_cleanup", 56),
STACK_USAGE("br_fdb_hash_init", 0),
STACK_USAGE("br_fdb_flush", 24),
STACK_USAGE("br_fdb_delete_by_port", 48),
STACK_USAGE("br_fdb_hash_fini", 0),
STACK_USAGE("br_fdb_fillbuf", 48),
STACK_USAGE("br_fdb_add_local", 40),
STACK_USAGE("br_fdb_update", 64),
STACK_USAGE("br_fdb_dump", 64),
STACK_USAGE("fdb_rcu_free", 0),
STACK_USAGE("br_fdb_get", 40),
STACK_USAGE("trace_br_fdb_update", 0),
STACK_USAGE("fdb_fill_info", 88),
STACK_USAGE("br_forward", 32),
STACK_USAGE("maybe_deliver", 48),
STACK_USAGE("br_flood", 56),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("br_multicast_flood", 72),
STACK_USAGE("NF_HOOK", 112),
STACK_USAGE("br_dev_queue_push_xmit", 56),
STACK_USAGE("br_forward_finish", 0),
STACK_USAGE("__br_forward", 32),
STACK_USAGE("br_manage_promisc", 16),
STACK_USAGE("nbp_backup_change", 24),
STACK_USAGE("nbp_update_port_count", 16),
STACK_USAGE("release_nbp", 0),
STACK_USAGE("brport_get_ownership", 0),
STACK_USAGE("destroy_nbp_rcu", 0),
STACK_USAGE("del_nbp", 48),
STACK_USAGE("br_dev_delete", 32),
STACK_USAGE("new_nbp", 152),
STACK_USAGE("br_add_bridge", 24),
STACK_USAGE("br_del_bridge", 8),
STACK_USAGE("br_mtu_auto_adjust", 16),
STACK_USAGE("br_features_recompute", 24),
STACK_USAGE("br_add_if", 72),
STACK_USAGE("br_port_carrier_check", 144),
STACK_USAGE("br_del_if", 24),
STACK_USAGE("br_port_flags_change", 32),
STACK_USAGE("br_port_flag_is_set", 16),
STACK_USAGE("br_multicast_is_router", 0),
STACK_USAGE("__br_handle_local_finish", 16),
STACK_USAGE("br_handle_local_finish", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("br_netif_receive_skb", 8),
STACK_USAGE("NF_HOOK", 96),
STACK_USAGE("br_handle_frame", 104),
STACK_USAGE("br_get_rx_handler", 0),
STACK_USAGE("br_add_frame", 0),
STACK_USAGE("br_del_frame", 0),
STACK_USAGE("br_handle_frame_finish", 96),
STACK_USAGE("br_dev_siocdevprivate", 168),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("br_ioctl_stub", 104),
STACK_USAGE("rcu_read_unlock", 0),
STACK_USAGE("br_mdb_del", 168),
STACK_USAGE("br_mdb_init", 0),
STACK_USAGE("br_mdb_uninit", 0),
STACK_USAGE("nla_parse_nested", 16),
STACK_USAGE("__mdb_fill_srcs", 64),
STACK_USAGE("__mdb_fill_info", 96),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("br_mdb_dump", 120),
STACK_USAGE("br_rports_size", 16),
STACK_USAGE("br_mdb_notify", 56),
STACK_USAGE("br_rtr_notify", 64),
STACK_USAGE("br_rports_fill_info", 96),
STACK_USAGE("is_valid_mdb_source", 40),
STACK_USAGE("br_mdb_parse", 104),
STACK_USAGE("br_mdb_add", 216),
STACK_USAGE("br_mdb_ip_get", 24),
STACK_USAGE("rhashtable_remove_fast", 80),
STACK_USAGE("br_multicast_new_group", 40),
STACK_USAGE("br_multicast_group_src_expired", 48),
STACK_USAGE("br_multicast_find_group_src", 0),
STACK_USAGE("br_multicast_new_group_src", 24),
STACK_USAGE("br_multicast_new_port_group", 64),
STACK_USAGE("br_multicast_host_join", 24),
STACK_USAGE("br_multicast_host_leave", 16),
STACK_USAGE("__br_multicast_add_group", 80),
STACK_USAGE("br_mdb_get", 56),
STACK_USAGE("br_multicast_router_expired", 32),
STACK_USAGE("br_ip4_multicast_router_expired", 0),
STACK_USAGE("br_ip6_multicast_router_expired", 0),
STACK_USAGE("br_ip4_multicast_local_router_expired", 16),
STACK_USAGE("br_ip6_multicast_local_router_expired", 16),
STACK_USAGE("br_ip4_multicast_querier_expired", 16),
STACK_USAGE("br_ip6_multicast_querier_expired", 16),
STACK_USAGE("__br_multicast_send_query", 208),
STACK_USAGE("br_multicast_read_querier", 48),
STACK_USAGE("br_multicast_update_querier", 40),
STACK_USAGE("br_multicast_send_query", 112),
STACK_USAGE("br_multicast_port_query_expired", 24),
STACK_USAGE("br_ip4_multicast_port_query_expired", 0),
STACK_USAGE("br_ip6_multicast_port_query_expired", 0),
STACK_USAGE("br_multicast_port_group_rexmit", 64),
STACK_USAGE("nla_nest_cancel", 0),
STACK_USAGE("br_multicast_port_ctx_init", 8),
STACK_USAGE("br_multicast_port_ctx_deinit", 8),
STACK_USAGE("br_multicast_add_port", 16),
STACK_USAGE("br_multicast_del_port", 48),
STACK_USAGE("local_bh_disable", 0),
STACK_USAGE("__br_multicast_enable_port_ctx", 24),
STACK_USAGE("br_multicast_enable_port", 16),
STACK_USAGE("__br_multicast_disable_port_ctx", 24),
STACK_USAGE("br_multicast_disable_port", 16),
STACK_USAGE("__grp_src_delete_marked", 32),
STACK_USAGE("__grp_src_query_marked_and_rexmit", 64),
STACK_USAGE("br_multicast_isinc_allow", 136),
STACK_USAGE("br_multicast_pg_to_port_ctx", 16),
STACK_USAGE("br_multicast_isexc", 136),
STACK_USAGE("br_multicast_toin", 152),
STACK_USAGE("in_dev_get", 8),
STACK_USAGE("br_multicast_toex", 136),
STACK_USAGE("br_multicast_block", 136),
STACK_USAGE("br_multicast_find_port", 32),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("br_multicast_select_querier", 40),
STACK_USAGE("__br_multicast_get_querier_port", 16),
STACK_USAGE("br_multicast_querier_state_size", 0),
STACK_USAGE("br_multicast_dump_querier_state", 152),
STACK_USAGE("br_multicast_mark_router", 24),
STACK_USAGE("br_multicast_star_g_handle_mode", 192),
STACK_USAGE("local_bh_enable", 0),
STACK_USAGE("rht_lock", 16),
STACK_USAGE("br_multicast_leave_group", 72),
STACK_USAGE("rht_unlock", 8),
STACK_USAGE("br_multicast_rcv", 264),
STACK_USAGE("br_ip4_multicast_query_expired", 16),
STACK_USAGE("br_multicast_star_g_host_state", 96),
STACK_USAGE("br_ip6_multicast_query_expired", 16),
STACK_USAGE("br_multicast_gc_work", 32),
STACK_USAGE("br_multicast_ctx_init", 32),
STACK_USAGE("br_multicast_ctx_deinit", 8),
STACK_USAGE("br_multicast_init", 8),
STACK_USAGE("br_multicast_join_snoopers", 40),
STACK_USAGE("rht_assign_unlock", 16),
STACK_USAGE("br_multicast_leave_snoopers", 40),
STACK_USAGE("__br_multicast_open", 8),
STACK_USAGE("br_multicast_open", 8),
STACK_USAGE("br_multicast_toggle_one_vlan", 32),
STACK_USAGE("br_multicast_toggle_vlan_snooping", 8),
STACK_USAGE("br_multicast_toggle_global_vlan", 24),
STACK_USAGE("br_multicast_stop", 8),
STACK_USAGE("br_multicast_dev_del", 56),
STACK_USAGE("br_multicast_set_router", 24),
STACK_USAGE("br_multicast_set_port_router", 40),
STACK_USAGE("br_multicast_set_vlan_router", 32),
STACK_USAGE("br_multicast_start_querier", 48),
STACK_USAGE("br_multicast_toggle", 32),
STACK_USAGE("br_multicast_enabled", 0),
STACK_USAGE("br_multicast_router", 24),
STACK_USAGE("br_multicast_set_querier", 32),
STACK_USAGE("br_multicast_sg_add_exclude_ports", 112),
STACK_USAGE("br_multicast_set_igmp_version", 24),
STACK_USAGE("br_multicast_set_mld_version", 24),
STACK_USAGE("br_multicast_set_query_intvl", 32),
STACK_USAGE("br_multicast_set_startup_query_intvl", 32),
STACK_USAGE("br_multicast_list_adjacent", 48),
STACK_USAGE("br_multicast_has_querier_anywhere", 16),
STACK_USAGE("br_multicast_has_querier_adjacent", 16),
STACK_USAGE("br_multicast_has_router_adjacent", 24),
STACK_USAGE("br_multicast_count", 48),
STACK_USAGE("br_multicast_init_stats", 8),
STACK_USAGE("br_multicast_uninit_stats", 0),
STACK_USAGE("mcast_stats_add_dir", 0),
STACK_USAGE("br_multicast_get_stats", 544),
STACK_USAGE("br_mdb_hash_init", 24),
STACK_USAGE("br_mdb_hash_fini", 8),
STACK_USAGE("br_multicast_fwd_src_remove", 96),
STACK_USAGE("br_multicast_fwd_src_handle", 80),
STACK_USAGE("br_multicast_destroy_mdb_entry", 16),
STACK_USAGE("br_multicast_group_expired", 40),
STACK_USAGE("rhashtable_lookup", 88),
STACK_USAGE("br_multicast_destroy_group_src", 16),
STACK_USAGE("br_multicast_del_group_src", 16),
STACK_USAGE("br_multicast_destroy_port_group", 16),
STACK_USAGE("br_multicast_del_pg", 48),
STACK_USAGE("br_multicast_find_del_pg", 32),
STACK_USAGE("rcu_read_unlock", 0),
STACK_USAGE("br_multicast_port_group_expired", 48),
STACK_USAGE("rhashtable_lookup_insert_fast", 112),
STACK_USAGE("br_sg_port_find", 24),
STACK_USAGE("br_multicast_destroy_eht_set_entry", 8),
STACK_USAGE("br_multicast_destroy_eht_set", 8),
STACK_USAGE("__eht_del_set_entry", 40),
STACK_USAGE("br_multicast_del_eht_set", 16),
STACK_USAGE("br_multicast_eht_clean_sets", 8),
STACK_USAGE("br_multicast_eht_set_entry_expired", 24),
STACK_USAGE("br_multicast_eht_set_expired", 24),
STACK_USAGE("br_multicast_create_eht_set_entry", 104),
STACK_USAGE("br_multicast_del_eht_set_entry", 8),
STACK_USAGE("br_multicast_eht_allow", 120),
STACK_USAGE("br_multicast_eht_block", 128),
STACK_USAGE("__eht_inc_exc", 104),
STACK_USAGE("br_multicast_eht_handle", 104),
STACK_USAGE("br_multicast_eht_set_hosts_limit", 24),
STACK_USAGE("brnf_sysctl_call_tables", 16),
STACK_USAGE("brnf_init_net", 32),
STACK_USAGE("brnf_exit_net", 16),
STACK_USAGE("br_netfilter_init", 8),
STACK_USAGE("br_netfilter_fini", 0),
STACK_USAGE("is_pppoe_ipv6", 8),
STACK_USAGE("nf_bridge_encap_header_len", 0),
STACK_USAGE("br_validate_ipv4", 16),
STACK_USAGE("nf_bridge_update_protocol", 0),
STACK_USAGE("br_nf_pre_routing_finish_bridge", 72),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("NF_HOOK", 120),
STACK_USAGE("br_nf_pre_routing_finish", 152),
STACK_USAGE("net_generic", 16),
STACK_USAGE("brnf_get_logical_dev", 24),
STACK_USAGE("setup_pre_routing", 16),
STACK_USAGE("br_nf_pre_routing", 40),
STACK_USAGE("br_nf_forward_finish", 104),
STACK_USAGE("br_nf_forward_ip", 56),
STACK_USAGE("br_nf_forward_arp", 24),
STACK_USAGE("br_nf_push_frag_xmit", 32),
STACK_USAGE("br_nf_dev_queue_xmit", 64),
STACK_USAGE("br_nf_post_routing", 56),
STACK_USAGE("ip_sabotage_in", 0),
STACK_USAGE("br_nf_dev_xmit", 16),
STACK_USAGE("brnf_device_event", 16),
STACK_USAGE("br_nf_hook_thresh", 112),
STACK_USAGE("br_nf_pre_routing_finish_ipv6", 48),
STACK_USAGE("br_nf_pre_routing_ipv6", 96),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("br_nf_check_hbh_len", 32),
STACK_USAGE("br_validate_ipv6", 32),
STACK_USAGE("br_setlink", 392),
STACK_USAGE("br_dellink", 48),
STACK_USAGE("br_validate", 0),
STACK_USAGE("br_port_slave_changelink", 32),
STACK_USAGE("br_port_fill_slave_info", 16),
STACK_USAGE("br_port_get_slave_size", 0),
STACK_USAGE("br_changelink", 64),
STACK_USAGE("br_dev_newlink", 40),
STACK_USAGE("br_get_size", 0),
STACK_USAGE("br_fill_info", 96),
STACK_USAGE("br_get_linkxstats_size", 8),
STACK_USAGE("br_fill_linkxstats", 48),
STACK_USAGE("br_netlink_init", 8),
STACK_USAGE("br_netlink_fini", 0),
STACK_USAGE("br_port_fill_attrs", 48),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("br_fill_ifinfo", 80),
STACK_USAGE("br_info_notify", 48),
STACK_USAGE("br_ifinfo_notify", 0),
STACK_USAGE("br_getlink", 48),
STACK_USAGE("br_process_vlan_info", 16),
STACK_USAGE("rcu_read_unlock", 0),
STACK_USAGE("br_afspec", 96),
STACK_USAGE("br_setport", 16),
STACK_USAGE("br_get_link_af_size_filtered", 24),
STACK_USAGE("br_fill_vlan_tunnel_info", 48),
STACK_USAGE("br_vlan_tunnel_info", 0),
STACK_USAGE("br_parse_vlan_tunnel_info", 56),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("br_process_vlan_tunnel_info", 8),
STACK_USAGE("vlan_tunid_inrange", 0),
STACK_USAGE("br_get_vlan_tunnel_info_size", 16),
STACK_USAGE("br_fill_vlan_tinfo", 64),
STACK_USAGE("fake_update_pmtu", 0),
STACK_USAGE("fake_redirect", 0),
STACK_USAGE("fake_cow_metrics", 0),
STACK_USAGE("fake_neigh_lookup", 0),
STACK_USAGE("fake_mtu", 0),
STACK_USAGE("br_netfilter_rtable_init", 0),
STACK_USAGE("br_nf_core_init", 0),
STACK_USAGE("br_nf_core_fini", 0),
STACK_USAGE("br_become_root_bridge", 24),
STACK_USAGE("br_transmit_config", 64),
STACK_USAGE("br_transmit_tcn", 0),
STACK_USAGE("br_set_state", 32),
STACK_USAGE("br_topology_change_detection", 24),
STACK_USAGE("br_config_bpdu_generation", 16),
STACK_USAGE("br_configuration_update", 40),
STACK_USAGE("br_become_designated_port", 0),
STACK_USAGE("br_make_forwarding", 16),
STACK_USAGE("br_port_state_selection", 40),
STACK_USAGE("br_received_config_bpdu", 40),
STACK_USAGE("br_received_tcn_bpdu", 8),
STACK_USAGE("br_set_hello_time", 16),
STACK_USAGE("br_set_max_age", 16),
STACK_USAGE("__set_ageing_time", 0),
STACK_USAGE("br_set_ageing_time", 16),
STACK_USAGE("br_get_ageing_time", 0),
STACK_USAGE("__br_set_topology_change", 24),
STACK_USAGE("__br_set_forward_delay", 0),
STACK_USAGE("br_set_forward_delay", 24),
STACK_USAGE("br_port_get_stp_state", 8),
STACK_USAGE("br_get_port", 0),
STACK_USAGE("br_send_tcn_bpdu", 24),
STACK_USAGE("br_stp_rcv", 96),
STACK_USAGE("pskb_may_pull", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("br_send_bpdu_finish", 0),
STACK_USAGE("br_send_bpdu", 88),
STACK_USAGE("br_send_config_bpdu", 72),
STACK_USAGE("br_stp_set_enabled", 88),
STACK_USAGE("br_stp_change_bridge_id", 48),
STACK_USAGE("br_stp_recalculate_bridge_id", 0),
STACK_USAGE("br_stp_set_bridge_priority", 32),
STACK_USAGE("br_stp_set_port_priority", 16),
STACK_USAGE("br_stp_set_path_cost", 8),
STACK_USAGE("br_init_port", 8),
STACK_USAGE("br_show_bridge_id", 8),
STACK_USAGE("br_stp_enable_bridge", 24),
STACK_USAGE("br_stp_disable_bridge", 24),
STACK_USAGE("br_stp_enable_port", 8),
STACK_USAGE("br_stp_disable_port", 32),
STACK_USAGE("br_tcn_timer_expired", 16),
STACK_USAGE("br_topology_change_timer_expired", 16),
STACK_USAGE("br_hold_timer_expired", 16),
STACK_USAGE("br_stp_timer_init", 8),
STACK_USAGE("br_stp_port_timer_init", 8),
STACK_USAGE("br_timer_value", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("br_hello_timer_expired", 16),
STACK_USAGE("br_message_age_timer_expired", 32),
STACK_USAGE("br_forward_delay_timer_expired", 24),
STACK_USAGE("brforward_read", 0),
STACK_USAGE("hello_time_store", 0),
STACK_USAGE("br_sysfs_addbr", 24),
STACK_USAGE("br_sysfs_delbr", 8),
STACK_USAGE("max_age_show", 8),
STACK_USAGE("set_max_age", 0),
STACK_USAGE("max_age_store", 0),
STACK_USAGE("ageing_time_show", 8),
STACK_USAGE("set_ageing_time", 0),
STACK_USAGE("ageing_time_store", 0),
STACK_USAGE("stp_state_show", 0),
STACK_USAGE("set_stp_state", 0),
STACK_USAGE("stp_state_store", 0),
STACK_USAGE("group_fwd_mask_show", 0),
STACK_USAGE("set_group_fwd_mask", 0),
STACK_USAGE("group_fwd_mask_store", 0),
STACK_USAGE("priority_show", 0),
STACK_USAGE("set_priority", 0),
STACK_USAGE("priority_store", 0),
STACK_USAGE("root_id_show", 0),
STACK_USAGE("bridge_id_show", 0),
STACK_USAGE("root_port_show", 0),
STACK_USAGE("root_path_cost_show", 0),
STACK_USAGE("topology_change_show", 0),
STACK_USAGE("topology_change_detected_show", 0),
STACK_USAGE("hello_timer_show", 8),
STACK_USAGE("tcn_timer_show", 8),
STACK_USAGE("topology_change_timer_show", 8),
STACK_USAGE("gc_timer_show", 8),
STACK_USAGE("group_addr_show", 0),
STACK_USAGE("group_addr_store", 40),
STACK_USAGE("store_bridge_parm", 96),
STACK_USAGE("set_flush", 0),
STACK_USAGE("flush_store", 0),
STACK_USAGE("no_linklocal_learn_show", 8),
STACK_USAGE("set_no_linklocal_learn", 0),
STACK_USAGE("no_linklocal_learn_store", 0),
STACK_USAGE("multicast_router_show", 0),
STACK_USAGE("set_multicast_router", 0),
STACK_USAGE("multicast_router_store", 0),
STACK_USAGE("multicast_snooping_show", 0),
STACK_USAGE("multicast_snooping_store", 88),
STACK_USAGE("multicast_query_use_ifaddr_show", 0),
STACK_USAGE("set_query_use_ifaddr", 0),
STACK_USAGE("multicast_query_use_ifaddr_store", 0),
STACK_USAGE("multicast_querier_show", 0),
STACK_USAGE("set_multicast_querier", 0),
STACK_USAGE("multicast_querier_store", 0),
STACK_USAGE("hash_elasticity_show", 0),
STACK_USAGE("set_elasticity", 8),
STACK_USAGE("hash_elasticity_store", 0),
STACK_USAGE("hash_max_show", 0),
STACK_USAGE("hash_max_store", 40),
STACK_USAGE("multicast_igmp_version_show", 0),
STACK_USAGE("set_multicast_igmp_version", 0),
STACK_USAGE("multicast_igmp_version_store", 0),
STACK_USAGE("multicast_last_member_count_show", 0),
STACK_USAGE("multicast_last_member_count_store", 40),
STACK_USAGE("multicast_startup_query_count_show", 0),
STACK_USAGE("multicast_startup_query_count_store", 40),
STACK_USAGE("multicast_last_member_interval_show", 8),
STACK_USAGE("set_last_member_interval", 8),
STACK_USAGE("multicast_last_member_interval_store", 0),
STACK_USAGE("multicast_membership_interval_show", 8),
STACK_USAGE("set_membership_interval", 8),
STACK_USAGE("multicast_membership_interval_store", 0),
STACK_USAGE("multicast_querier_interval_show", 8),
STACK_USAGE("set_querier_interval", 8),
STACK_USAGE("multicast_querier_interval_store", 0),
STACK_USAGE("multicast_query_interval_show", 8),
STACK_USAGE("set_query_interval", 0),
STACK_USAGE("multicast_query_interval_store", 0),
STACK_USAGE("forward_delay_show", 8),
STACK_USAGE("multicast_query_response_interval_show", 8),
STACK_USAGE("set_query_response_interval", 8),
STACK_USAGE("multicast_query_response_interval_store", 0),
STACK_USAGE("multicast_startup_query_interval_show", 8),
STACK_USAGE("set_startup_query_interval", 0),
STACK_USAGE("multicast_startup_query_interval_store", 0),
STACK_USAGE("multicast_stats_enabled_show", 0),
STACK_USAGE("set_stats_enabled", 0),
STACK_USAGE("multicast_stats_enabled_store", 0),
STACK_USAGE("set_forward_delay", 0),
STACK_USAGE("multicast_mld_version_show", 0),
STACK_USAGE("set_multicast_mld_version", 0),
STACK_USAGE("multicast_mld_version_store", 0),
STACK_USAGE("nf_call_iptables_show", 0),
STACK_USAGE("set_nf_call_iptables", 0),
STACK_USAGE("nf_call_iptables_store", 0),
STACK_USAGE("nf_call_ip6tables_show", 0),
STACK_USAGE("forward_delay_store", 0),
STACK_USAGE("set_nf_call_ip6tables", 0),
STACK_USAGE("nf_call_ip6tables_store", 0),
STACK_USAGE("nf_call_arptables_show", 0),
STACK_USAGE("set_nf_call_arptables", 0),
STACK_USAGE("nf_call_arptables_store", 0),
STACK_USAGE("hello_time_show", 8),
STACK_USAGE("set_hello_time", 0),
STACK_USAGE("show_designated_root", 0),
STACK_USAGE("show_designated_bridge", 0),
STACK_USAGE("show_designated_port", 0),
STACK_USAGE("show_designated_cost", 0),
STACK_USAGE("show_port_id", 0),
STACK_USAGE("show_port_no", 0),
STACK_USAGE("show_change_ack", 0),
STACK_USAGE("show_config_pending", 0),
STACK_USAGE("show_port_state", 0),
STACK_USAGE("show_message_age_timer", 8),
STACK_USAGE("show_forward_delay_timer", 8),
STACK_USAGE("show_hold_timer", 8),
STACK_USAGE("store_flush", 0),
STACK_USAGE("show_group_fwd_mask", 0),
STACK_USAGE("store_group_fwd_mask", 0),
STACK_USAGE("show_backup_port", 16),
STACK_USAGE("store_backup_port", 16),
STACK_USAGE("show_hairpin_mode", 0),
STACK_USAGE("store_hairpin_mode", 0),
STACK_USAGE("show_bpdu_guard", 0),
STACK_USAGE("store_bpdu_guard", 0),
STACK_USAGE("show_root_block", 0),
STACK_USAGE("store_root_block", 0),
STACK_USAGE("show_learning", 0),
STACK_USAGE("store_learning", 0),
STACK_USAGE("show_unicast_flood", 0),
STACK_USAGE("store_unicast_flood", 0),
STACK_USAGE("show_proxyarp", 0),
STACK_USAGE("store_proxyarp", 0),
STACK_USAGE("show_proxyarp_wifi", 0),
STACK_USAGE("store_proxyarp_wifi", 0),
STACK_USAGE("show_multicast_flood", 0),
STACK_USAGE("store_multicast_flood", 0),
STACK_USAGE("show_broadcast_flood", 0),
STACK_USAGE("store_broadcast_flood", 0),
STACK_USAGE("show_neigh_suppress", 0),
STACK_USAGE("store_neigh_suppress", 0),
STACK_USAGE("show_isolated", 0),
STACK_USAGE("store_isolated", 0),
STACK_USAGE("show_multicast_router", 0),
STACK_USAGE("store_multicast_router", 0),
STACK_USAGE("show_multicast_fast_leave", 0),
STACK_USAGE("store_multicast_fast_leave", 0),
STACK_USAGE("show_multicast_to_unicast", 0),
STACK_USAGE("store_multicast_to_unicast", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("brport_show", 0),
STACK_USAGE("brport_store", 64),
STACK_USAGE("br_sysfs_addif", 32),
STACK_USAGE("br_sysfs_renameif", 48),
STACK_USAGE("show_path_cost", 0),
STACK_USAGE("show_priority", 0),
STACK_USAGE("cmsghdr_from_user_compat_to_kern", 104),
STACK_USAGE("put_cmsg_compat", 120),
STACK_USAGE("scm_detach_fds_compat", 56),
STACK_USAGE("__ia32_compat_sys_sendmsg", 0),
STACK_USAGE("__ia32_compat_sys_sendmmsg", 0),
STACK_USAGE("__get_compat_msghdr", 72),
STACK_USAGE("__ia32_compat_sys_recvmsg", 0),
STACK_USAGE("__ia32_compat_sys_recv", 0),
STACK_USAGE("__ia32_compat_sys_recvfrom", 0),
STACK_USAGE("__ia32_compat_sys_recvmmsg_time64", 0),
STACK_USAGE("__ia32_compat_sys_recvmmsg_time32", 0),
STACK_USAGE("__ia32_compat_sys_socketcall", 120),
STACK_USAGE("get_compat_msghdr", 40),
STACK_USAGE("notsupp_get_next_key", 0),
STACK_USAGE("bpf_fd_sk_storage_lookup_elem", 32),
STACK_USAGE("bpf_fd_sk_storage_update_elem", 48),
STACK_USAGE("bpf_fd_sk_storage_delete_elem", 40),
STACK_USAGE("bpf_sk_storage_clone", 56),
STACK_USAGE("bpf_sk_storage_lookup", 24),
STACK_USAGE("bpf_sk_storage_get", 48),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("bpf_sk_storage_delete", 32),
STACK_USAGE("bpf_sk_storage_charge", 0),
STACK_USAGE("bpf_sk_storage_uncharge", 0),
STACK_USAGE("bpf_sk_storage_ptr", 0),
STACK_USAGE("bpf_sk_storage_tracing_allowed", 16),
STACK_USAGE("bpf_sk_storage_get_tracing", 48),
STACK_USAGE("bpf_sk_storage_delete_tracing", 32),
STACK_USAGE("bpf_sk_storage_diag_free", 16),
STACK_USAGE("bpf_sk_storage_free", 40),
STACK_USAGE("bpf_sk_storage_diag_alloc", 32),
STACK_USAGE("diag_get", 64),
STACK_USAGE("bpf_sk_storage_diag_put", 80),
STACK_USAGE("bpf_sk_storage_map_seq_find_next", 56),
STACK_USAGE("bpf_sk_storage_map_seq_start", 8),
STACK_USAGE("bpf_sk_storage_map_seq_next", 0),
STACK_USAGE("bpf_iter_bpf_sk_storage_map", 0),
STACK_USAGE("__bpf_sk_storage_map_seq_show", 96),
STACK_USAGE("bpf_sk_storage_map_seq_show", 0),
STACK_USAGE("bpf_sk_storage_map_seq_stop", 80),
STACK_USAGE("bpf_iter_init_sk_storage_map", 0),
STACK_USAGE("bpf_iter_attach_map", 24),
STACK_USAGE("bpf_sk_storage_map_free", 8),
STACK_USAGE("bpf_iter_detach_map", 0),
STACK_USAGE("bpf_sk_storage_map_iter_init", 0),
STACK_USAGE("bpf_sk_storage_map_alloc", 8),
STACK_USAGE("__skb_try_recv_from_queue", 48),
STACK_USAGE("__skb_try_recv_datagram", 112),
STACK_USAGE("__skb_recv_datagram", 72),
STACK_USAGE("skb_recv_datagram", 80),
STACK_USAGE("skb_free_datagram", 8),
STACK_USAGE("__skb_free_datagram_locked", 56),
STACK_USAGE("__sk_queue_drop_skb", 48),
STACK_USAGE("skb_kill_datagram", 32),
STACK_USAGE("__skb_datagram_iter", 112),
STACK_USAGE("skb_copy_and_hash_datagram_iter", 0),
STACK_USAGE("simple_copy_to_iter", 0),
STACK_USAGE("skb_copy_datagram_iter", 32),
STACK_USAGE("skb_copy_datagram_from_iter", 72),
STACK_USAGE("__zerocopy_sg_from_iter", 216),
STACK_USAGE("zerocopy_sg_from_iter", 16),
STACK_USAGE("skb_copy_and_csum_datagram_msg", 72),
STACK_USAGE("receiver_wake_function", 0),
STACK_USAGE("datagram_poll", 8),
STACK_USAGE("__skb_wait_for_more_packets", 104),
STACK_USAGE("init_dummy_netdev", 8),
STACK_USAGE("register_netdev", 8),
STACK_USAGE("netdev_refcnt_read", 32),
STACK_USAGE("netdev_run_todo", 120),
STACK_USAGE("netdev_stats_to_stats64", 8),
STACK_USAGE("netdev_core_stats_alloc", 8),
STACK_USAGE("dev_get_stats", 48),
STACK_USAGE("dev_fetch_sw_netstats", 48),
STACK_USAGE("dev_get_tstats64", 48),
STACK_USAGE("dev_ingress_queue_create", 16),
STACK_USAGE("netdev_set_default_ethtool_ops", 0),
STACK_USAGE("netdev_freemem", 0),
STACK_USAGE("alloc_netdev_mqs", 72),
STACK_USAGE("free_netdev", 24),
STACK_USAGE("synchronize_net", 0),
STACK_USAGE("unregister_netdevice_queue", 40),
STACK_USAGE("unregister_netdevice_many", 120),
STACK_USAGE("unregister_netdev", 32),
STACK_USAGE("__dev_change_net_namespace", 184),
STACK_USAGE("dev_alloc_name_ns", 120),
STACK_USAGE("dev_cpu_dead", 48),
STACK_USAGE("netdev_increment_features", 0),
STACK_USAGE("netdev_init", 24),
STACK_USAGE("netdev_drivername", 0),
STACK_USAGE("__netdev_printk", 56),
STACK_USAGE("netdev_printk", 104),
STACK_USAGE("dev_alloc_name", 0),
STACK_USAGE("netdev_emerg", 104),
STACK_USAGE("netdev_alert", 104),
STACK_USAGE("netdev_crit", 104),
STACK_USAGE("netdev_err", 104),
STACK_USAGE("netdev_warn", 104),
STACK_USAGE("netdev_notice", 104),
STACK_USAGE("netdev_info", 104),
STACK_USAGE("netdev_exit", 8),
STACK_USAGE("dev_get_valid_name", 40),
STACK_USAGE("default_device_exit_batch", 104),
STACK_USAGE("net_dev_init", 64),
STACK_USAGE("dev_change_name", 120),
STACK_USAGE("qdisc_run", 32),
STACK_USAGE("dev_set_alias", 32),
STACK_USAGE("dev_get_alias", 24),
STACK_USAGE("netdev_features_change", 32),
STACK_USAGE("netdev_state_change", 48),
STACK_USAGE("__netdev_notify_peers", 40),
STACK_USAGE("netdev_notify_peers", 8),
STACK_USAGE("__dev_open", 56),
STACK_USAGE("dev_open", 48),
STACK_USAGE("__dev_close_many", 56),
STACK_USAGE("trace_napi_poll", 0),
STACK_USAGE("dev_close_many", 72),
STACK_USAGE("dev_close", 24),
STACK_USAGE("dev_disable_lro", 24),
STACK_USAGE("netdev_cmd_to_name", 0),
STACK_USAGE("call_netdevice_register_net_notifiers", 72),
STACK_USAGE("register_netdevice_notifier", 80),
STACK_USAGE("unregister_netdevice_notifier", 80),
STACK_USAGE("register_netdevice_notifier_net", 32),
STACK_USAGE("unregister_netdevice_notifier_net", 72),
STACK_USAGE("register_netdevice_notifier_dev_net", 48),
STACK_USAGE("unregister_netdevice_notifier_dev_net", 72),
STACK_USAGE("local_bh_disable", 0),
STACK_USAGE("call_netdevice_notifiers_info", 24),
STACK_USAGE("call_netdevice_notifiers", 40),
STACK_USAGE("call_netdevice_notifiers_mtu", 40),
STACK_USAGE("net_inc_ingress_queue", 0),
STACK_USAGE("net_dec_ingress_queue", 0),
STACK_USAGE("net_inc_egress_queue", 0),
STACK_USAGE("net_dec_egress_queue", 0),
STACK_USAGE("netstamp_clear", 0),
STACK_USAGE("net_enable_timestamp", 0),
STACK_USAGE("net_disable_timestamp", 0),
STACK_USAGE("is_skb_forwardable", 0),
STACK_USAGE("__dev_forward_skb2", 24),
STACK_USAGE("__dev_forward_skb", 0),
STACK_USAGE("dev_forward_skb", 8),
STACK_USAGE("dev_forward_skb_nomtu", 8),
STACK_USAGE("deliver_ptype_list_skb", 72),
STACK_USAGE("dev_nit_active", 0),
STACK_USAGE("dev_queue_xmit_nit", 72),
STACK_USAGE("qdisc_run_end", 8),
STACK_USAGE("netdev_txq_to_tc", 0),
STACK_USAGE("remove_xps_queue", 32),
STACK_USAGE("clean_xps_maps", 112),
STACK_USAGE("netif_reset_xps_queues_gt", 24),
STACK_USAGE("__netif_set_xps_queue", 152),
STACK_USAGE("trace_netif_rx_entry", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("netif_set_xps_queue", 24),
STACK_USAGE("netdev_reset_tc", 32),
STACK_USAGE("netdev_set_tc_queue", 32),
STACK_USAGE("netdev_set_num_tc", 48),
STACK_USAGE("netdev_unbind_sb_channel", 24),
STACK_USAGE("netdev_bind_sb_channel_queue", 8),
STACK_USAGE("netdev_set_sb_channel", 0),
STACK_USAGE("netif_set_real_num_tx_queues", 48),
STACK_USAGE("trace_xdp_exception", 0),
STACK_USAGE("netif_set_real_num_rx_queues", 16),
STACK_USAGE("netif_set_real_num_queues", 40),
STACK_USAGE("netif_get_num_default_rss_queues", 72),
STACK_USAGE("trace_netif_rx_exit", 0),
STACK_USAGE("__netif_schedule", 32),
STACK_USAGE("netif_schedule_queue", 32),
STACK_USAGE("netif_tx_wake_queue", 32),
STACK_USAGE("__dev_kfree_skb_irq", 32),
STACK_USAGE("__dev_kfree_skb_any", 16),
STACK_USAGE("netif_device_detach", 0),
STACK_USAGE("skb_dst_force", 16),
STACK_USAGE("netif_device_attach", 24),
STACK_USAGE("skb_warn_bad_offload", 24),
STACK_USAGE("skb_checksum_help", 24),
STACK_USAGE("local_bh_enable", 0),
STACK_USAGE("netdev_name_in_use", 24),
STACK_USAGE("skb_crc32c_csum_help", 24),
STACK_USAGE("netdev_name_node_alt_create", 40),
STACK_USAGE("skb_network_protocol", 64),
STACK_USAGE("__skb_gso_segment", 24),
STACK_USAGE("refcount_dec_and_test", 8),
STACK_USAGE("do_netdev_rx_csum_fault", 8),
STACK_USAGE("netdev_rx_csum_fault", 0),
STACK_USAGE("passthru_features_check", 0),
STACK_USAGE("netif_skb_features", 32),
STACK_USAGE("skb_cow_head", 0),
STACK_USAGE("netdev_name_node_alt_destroy", 32),
STACK_USAGE("dev_hard_start_xmit", 80),
STACK_USAGE("skb_csum_hwoffload_help", 0),
STACK_USAGE("validate_xmit_skb", 56),
STACK_USAGE("validate_xmit_skb_list", 32),
STACK_USAGE("dev_qdisc_enqueue", 32),
STACK_USAGE("list_netdevice", 32),
STACK_USAGE("dev_loopback_xmit", 8),
STACK_USAGE("__get_xps_queue_idx", 32),
STACK_USAGE("skb_header_pointer", 8),
STACK_USAGE("dev_pick_tx_zero", 0),
STACK_USAGE("unlist_netdevice", 16),
STACK_USAGE("dev_pick_tx_cpu_id", 0),
STACK_USAGE("netdev_pick_tx", 64),
STACK_USAGE("netdev_core_pick_tx", 24),
STACK_USAGE("__dev_queue_xmit", 128),
STACK_USAGE("dev_queue_xmit", 0),
STACK_USAGE("dev_queue_xmit_accel", 0),
STACK_USAGE("__dev_direct_xmit", 48),
STACK_USAGE("set_rps_cpu", 64),
STACK_USAGE("get_rps_cpu", 64),
STACK_USAGE("rps_may_expire_flow", 32),
STACK_USAGE("rps_trigger_softirq", 8),
STACK_USAGE("napi_schedule_rps", 8),
STACK_USAGE("enqueue_to_backlog", 56),
STACK_USAGE("napi_schedule", 0),
STACK_USAGE("bpf_prog_run_generic_xdp", 96),
STACK_USAGE("generic_xdp_tx", 40),
STACK_USAGE("do_xdp_generic", 96),
STACK_USAGE("netif_rx_internal", 32),
STACK_USAGE("__netif_rx", 8),
STACK_USAGE("netif_rx", 16),
STACK_USAGE("net_tx_action", 40),
STACK_USAGE("netdev_reg_state", 8),
STACK_USAGE("netdev_is_rx_handler_busy", 8),
STACK_USAGE("netdev_rx_handler_register", 24),
STACK_USAGE("netdev_rx_handler_unregister", 8),
STACK_USAGE("__netif_receive_skb_core", 200),
STACK_USAGE("netif_receive_skb_core", 40),
STACK_USAGE("__netif_receive_skb_list_core", 112),
STACK_USAGE("__netif_receive_skb", 48),
STACK_USAGE("generic_xdp_install", 24),
STACK_USAGE("dev_add_pack", 16),
STACK_USAGE("netif_receive_skb_list_internal", 96),
STACK_USAGE("netif_receive_skb", 32),
STACK_USAGE("netif_receive_skb_list", 16),
STACK_USAGE("flush_backlog", 32),
STACK_USAGE("__dev_remove_pack", 16),
STACK_USAGE("process_backlog", 80),
STACK_USAGE("__napi_schedule", 32),
STACK_USAGE("napi_schedule_prep", 0),
STACK_USAGE("__napi_schedule_irqoff", 8),
STACK_USAGE("napi_complete_done", 48),
STACK_USAGE("busy_poll_stop", 40),
STACK_USAGE("napi_busy_loop", 96),
STACK_USAGE("dev_remove_pack", 16),
STACK_USAGE("napi_watchdog", 0),
STACK_USAGE("dev_set_threaded", 48),
STACK_USAGE("netif_napi_add", 32),
STACK_USAGE("napi_disable", 8),
STACK_USAGE("dev_get_iflink", 0),
STACK_USAGE("napi_enable", 8),
STACK_USAGE("__netif_napi_del", 24),
STACK_USAGE("__napi_poll", 32),
STACK_USAGE("napi_thread_wait", 32),
STACK_USAGE("napi_threaded_poll", 32),
STACK_USAGE("dev_fill_metadata_dst", 48),
STACK_USAGE("net_rx_action", 104),
STACK_USAGE("netdev_has_upper_dev", 216),
STACK_USAGE("netdev_has_upper_dev_all_rcu", 216),
STACK_USAGE("netdev_has_any_upper_dev", 8),
STACK_USAGE("netdev_master_upper_dev_get", 8),
STACK_USAGE("netdev_adjacent_get_private", 0),
STACK_USAGE("netdev_upper_get_next_dev_rcu", 16),
STACK_USAGE("dev_fill_forward_path", 72),
STACK_USAGE("__netdev_walk_all_upper_dev", 232),
STACK_USAGE("netdev_walk_all_upper_dev_rcu", 232),
STACK_USAGE("netdev_lower_get_next_private", 0),
STACK_USAGE("netdev_lower_get_next_private_rcu", 16),
STACK_USAGE("netdev_lower_get_next", 0),
STACK_USAGE("netdev_walk_all_lower_dev", 232),
STACK_USAGE("__netdev_walk_all_lower_dev", 168),
STACK_USAGE("netdev_next_lower_dev_rcu", 0),
STACK_USAGE("__netdev_update_upper_level", 0),
STACK_USAGE("__netdev_update_lower_level", 0),
STACK_USAGE("rcu_read_unlock", 0),
STACK_USAGE("netdev_walk_all_lower_dev_rcu", 232),
STACK_USAGE("__dev_get_by_name", 24),
STACK_USAGE("netdev_lower_get_first_private_rcu", 8),
STACK_USAGE("netdev_master_upper_dev_get_rcu", 8),
STACK_USAGE("__netdev_adjacent_dev_insert", 120),
STACK_USAGE("__netdev_adjacent_dev_remove", 72),
STACK_USAGE("dev_get_by_name_rcu", 24),
STACK_USAGE("__netdev_adjacent_dev_unlink_neighbour", 24),
STACK_USAGE("__netdev_upper_dev_link", 264),
STACK_USAGE("netdev_upper_dev_link", 24),
STACK_USAGE("netdev_master_upper_dev_link", 24),
STACK_USAGE("__netdev_upper_dev_unlink", 280),
STACK_USAGE("netdev_upper_dev_unlink", 24),
STACK_USAGE("dev_get_by_name", 24),
STACK_USAGE("netdev_adjacent_change_prepare", 64),
STACK_USAGE("netdev_adjacent_change_commit", 24),
STACK_USAGE("netdev_adjacent_change_abort", 24),
STACK_USAGE("netdev_bonding_info_change", 72),
STACK_USAGE("netdev_offload_xstats_enable", 64),
STACK_USAGE("netdev_offload_xstats_disable", 56),
STACK_USAGE("netdev_offload_xstats_enabled", 16),
STACK_USAGE("__dev_get_by_index", 0),
STACK_USAGE("netdev_offload_xstats_get", 160),
STACK_USAGE("netdev_offload_xstats_report_delta", 0),
STACK_USAGE("netdev_offload_xstats_report_used", 0),
STACK_USAGE("netdev_offload_xstats_push_delta", 24),
STACK_USAGE("netdev_get_xmit_slave", 0),
STACK_USAGE("netdev_sk_get_lowest_dev", 16),
STACK_USAGE("netdev_adjacent_rename_links", 120),
STACK_USAGE("netdev_lower_dev_get_private", 0),
STACK_USAGE("dev_get_by_index_rcu", 0),
STACK_USAGE("netdev_lower_state_changed", 48),
STACK_USAGE("__dev_set_promiscuity", 80),
STACK_USAGE("dev_set_promiscuity", 24),
STACK_USAGE("__dev_set_allmulti", 40),
STACK_USAGE("trace_kfree_skb", 0),
STACK_USAGE("dev_set_allmulti", 0),
STACK_USAGE("__dev_set_rx_mode", 24),
STACK_USAGE("dev_set_rx_mode", 32),
STACK_USAGE("dev_get_flags", 0),
STACK_USAGE("__dev_change_flags", 72),
STACK_USAGE("dev_get_by_index", 16),
STACK_USAGE("__dev_notify_flags", 56),
STACK_USAGE("dev_change_flags", 32),
STACK_USAGE("__dev_set_mtu", 0),
STACK_USAGE("dev_validate_mtu", 16),
STACK_USAGE("dev_set_mtu_ext", 56),
STACK_USAGE("dev_set_mtu", 72),
STACK_USAGE("dev_change_tx_queue_len", 56),
STACK_USAGE("dev_get_by_napi_id", 8),
STACK_USAGE("dev_set_group", 0),
STACK_USAGE("dev_pre_changeaddr_notify", 40),
STACK_USAGE("dev_set_mac_address", 48),
STACK_USAGE("dev_set_mac_address_user", 24),
STACK_USAGE("dev_get_mac_address", 32),
STACK_USAGE("dev_change_carrier", 0),
STACK_USAGE("dev_get_phys_port_id", 0),
STACK_USAGE("dev_get_phys_port_name", 24),
STACK_USAGE("dev_get_port_parent_id", 80),
STACK_USAGE("netdev_get_name", 24),
STACK_USAGE("netdev_port_same_parent_id", 96),
STACK_USAGE("dev_change_proto_down", 16),
STACK_USAGE("dev_change_proto_down_reason", 16),
STACK_USAGE("dev_xdp_prog_count", 0),
STACK_USAGE("dev_xdp_prog_id", 0),
STACK_USAGE("dev_xdp_install", 72),
STACK_USAGE("dev_xdp_attach", 80),
STACK_USAGE("bpf_xdp_link_release", 72),
STACK_USAGE("bpf_xdp_link_detach", 0),
STACK_USAGE("dev_getbyhwaddr_rcu", 40),
STACK_USAGE("bpf_xdp_link_dealloc", 0),
STACK_USAGE("bpf_xdp_link_show_fdinfo", 16),
STACK_USAGE("bpf_xdp_link_fill_link_info", 16),
STACK_USAGE("bpf_xdp_link_update", 80),
STACK_USAGE("bpf_xdp_link_attach", 64),
STACK_USAGE("dev_getfirstbyhwtype", 24),
STACK_USAGE("dev_change_xdp_fd", 56),
STACK_USAGE("dev_new_index", 0),
STACK_USAGE("__netdev_update_features", 128),
STACK_USAGE("__dev_get_by_flags", 24),
STACK_USAGE("netdev_update_features", 32),
STACK_USAGE("netdev_change_features", 32),
STACK_USAGE("netif_stacked_transfer_operstate", 16),
STACK_USAGE("netif_tx_stop_all_queues", 0),
STACK_USAGE("register_netdevice", 48),
STACK_USAGE("dev_valid_name", 8),
STACK_USAGE("dev_mc_unsync", 32),
STACK_USAGE("dev_mc_flush", 40),
STACK_USAGE("dev_mc_init", 0),
STACK_USAGE("local_bh_disable", 0),
STACK_USAGE("__hw_addr_del_ex", 72),
STACK_USAGE("__hw_addr_sync_multiple", 64),
STACK_USAGE("__hw_addr_sync", 64),
STACK_USAGE("__hw_addr_unsync", 48),
STACK_USAGE("__hw_addr_sync_dev", 56),
STACK_USAGE("__hw_addr_ref_sync_dev", 64),
STACK_USAGE("__hw_addr_ref_unsync_dev", 48),
STACK_USAGE("__hw_addr_unsync_dev", 48),
STACK_USAGE("__hw_addr_init", 0),
STACK_USAGE("dev_addr_check", 32),
STACK_USAGE("dev_addr_flush", 32),
STACK_USAGE("dev_addr_init", 56),
STACK_USAGE("dev_addr_mod", 56),
STACK_USAGE("dev_addr_add", 24),
STACK_USAGE("dev_addr_del", 40),
STACK_USAGE("dev_uc_add_excl", 32),
STACK_USAGE("dev_uc_add", 32),
STACK_USAGE("dev_uc_del", 56),
STACK_USAGE("__hw_addr_add_ex", 72),
STACK_USAGE("dev_uc_sync", 32),
STACK_USAGE("dev_uc_sync_multiple", 32),
STACK_USAGE("dev_uc_unsync", 32),
STACK_USAGE("dev_uc_flush", 40),
STACK_USAGE("dev_uc_init", 0),
STACK_USAGE("dev_mc_add_excl", 32),
STACK_USAGE("dev_mc_add", 32),
STACK_USAGE("dev_mc_add_global", 32),
STACK_USAGE("dev_mc_del", 56),
STACK_USAGE("dev_mc_del_global", 32),
STACK_USAGE("dev_mc_sync", 32),
STACK_USAGE("dev_mc_sync_multiple", 32),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("dev_ifsioc", 72),
STACK_USAGE("dev_ifconf", 80),
STACK_USAGE("dev_load", 16),
STACK_USAGE("dev_ioctl", 48),
STACK_USAGE("devlink_resource_unregister", 48),
STACK_USAGE("devlink_resources_unregister", 56),
STACK_USAGE("devlink_resource_size_get", 40),
STACK_USAGE("devlink_dpipe_table_resource_set", 56),
STACK_USAGE("devlink_resource_occ_get_register", 40),
STACK_USAGE("devlink_resource_occ_get_unregister", 24),
STACK_USAGE("devlink_params_register", 64),
STACK_USAGE("devlink_params_unregister", 64),
STACK_USAGE("devlink_param_register", 40),
STACK_USAGE("devlink_param_unregister", 24),
STACK_USAGE("devlink_param_driverinit_value_get", 0),
STACK_USAGE("devlink_priv", 0),
STACK_USAGE("devlink_param_driverinit_value_set", 24),
STACK_USAGE("devlink_param_value_changed", 0),
STACK_USAGE("devlink_region_create", 64),
STACK_USAGE("devlink_port_region_create", 72),
STACK_USAGE("devlink_region_destroy", 32),
STACK_USAGE("devlink_region_snapshot_id_get", 32),
STACK_USAGE("devlink_region_snapshot_id_put", 24),
STACK_USAGE("devlink_region_snapshot_create", 32),
STACK_USAGE("devlink_trap_group_notify", 32),
STACK_USAGE("devlink_trap_notify", 32),
STACK_USAGE("devlink_nl_port_function_attrs_put", 104),
STACK_USAGE("devlink_trap_unregister", 40),
STACK_USAGE("priv_to_devlink", 0),
STACK_USAGE("devlink_traps_register", 112),
STACK_USAGE("devlink_traps_unregister", 72),
STACK_USAGE("devlink_trap_report", 112),
STACK_USAGE("devlink_trap_ctx_priv", 0),
STACK_USAGE("devlink_nl_port_fill", 64),
STACK_USAGE("devlink_trap_group_unregister", 32),
STACK_USAGE("devlink_trap_groups_register", 96),
STACK_USAGE("devlink_trap_groups_unregister", 32),
STACK_USAGE("devlink_trap_policer_notify", 32),
STACK_USAGE("devlink_trap_policers_register", 88),
STACK_USAGE("__bpf_trace_devlink_health_recover_aborted", 0),
STACK_USAGE("__traceiter_devlink_health_recover_aborted", 40),
STACK_USAGE("perf_trace_devlink_health_recover_aborted", 136),
STACK_USAGE("trace_event_raw_event_devlink_health_recover_aborted", 160),
STACK_USAGE("trace_raw_output_devlink_health_recover_aborted", 24),
STACK_USAGE("devlink_trap_policers_unregister", 72),
STACK_USAGE("devlink_compat_running_version", 80),
STACK_USAGE("devlink_compat_flash_update", 96),
STACK_USAGE("devlink_compat_phys_port_name_get", 32),
STACK_USAGE("devlink_compat_switch_id_get", 16),
STACK_USAGE("devlink_pernet_pre_exit", 72),
STACK_USAGE("devlink_init", 0),
STACK_USAGE("devlink_to_dev", 0),
STACK_USAGE("devlink_port_notify", 32),
STACK_USAGE("devlink_rate_notify", 32),
STACK_USAGE("devlink_nl_cmd_rate_get_dumpit", 96),
STACK_USAGE("devlink_nl_cmd_rate_get_doit", 32),
STACK_USAGE("devlink_nl_cmd_get_doit", 32),
STACK_USAGE("devlink_nl_cmd_get_dumpit", 80),
STACK_USAGE("devlink_nl_cmd_port_get_doit", 32),
STACK_USAGE("devlink_nl_cmd_port_get_dumpit", 88),
STACK_USAGE("__bpf_trace_devlink_health_reporter_state_update", 0),
STACK_USAGE("__traceiter_devlink_health_reporter_state_update", 32),
STACK_USAGE("perf_trace_devlink_health_reporter_state_update", 128),
STACK_USAGE("trace_event_raw_event_devlink_health_reporter_state_update", 152),
STACK_USAGE("trace_raw_output_devlink_health_reporter_state_update", 24),
STACK_USAGE("nla_put_string", 24),
STACK_USAGE("devlink_nl_cmd_port_set_doit", 88),
STACK_USAGE("devlink_nl_cmd_port_split_doit", 16),
STACK_USAGE("devlink_nl_cmd_port_unsplit_doit", 0),
STACK_USAGE("devlink_nl_cmd_port_new_doit", 96),
STACK_USAGE("devlink_nl_cmd_port_del_doit", 8),
STACK_USAGE("__bpf_trace_devlink_trap_report", 0),
STACK_USAGE("__traceiter_devlink_trap_report", 32),
STACK_USAGE("perf_trace_devlink_trap_report", 112),
STACK_USAGE("trace_event_get_offsets_devlink_trap_report", 56),
STACK_USAGE("trace_event_raw_event_devlink_trap_report", 120),
STACK_USAGE("trace_raw_output_devlink_trap_report", 24),
STACK_USAGE("devlink_nl_rate_set", 72),
STACK_USAGE("__bpf_trace_devlink_hwmsg", 0),
STACK_USAGE("__traceiter_devlink_hwmsg", 48),
STACK_USAGE("perf_trace_devlink_hwmsg", 144),
STACK_USAGE("trace_event_raw_event_devlink_hwmsg", 152),
STACK_USAGE("trace_raw_output_devlink_hwmsg", 24),
STACK_USAGE("nla_nest_cancel", 0),
STACK_USAGE("devlink_rate_set_ops_supported", 8),
STACK_USAGE("devlink_nl_cmd_rate_set_doit", 32),
STACK_USAGE("devlink_nl_cmd_rate_new_doit", 56),
STACK_USAGE("devlink_nl_cmd_rate_del_doit", 24),
STACK_USAGE("devlink_nl_sb_fill", 64),
STACK_USAGE("devlink_nl_cmd_sb_get_doit", 40),
STACK_USAGE("devlink_nl_cmd_sb_get_dumpit", 88),
STACK_USAGE("devlink_nl_sb_pool_fill", 88),
STACK_USAGE("devlink_net", 0),
STACK_USAGE("devlink_nl_cmd_sb_pool_get_doit", 48),
STACK_USAGE("devlink_put", 0),
STACK_USAGE("devlink_nl_cmd_sb_pool_get_dumpit", 128),
STACK_USAGE("devlink_try_get", 16),
STACK_USAGE("devlink_nl_cmd_sb_pool_set_doit", 16),
STACK_USAGE("devlink_nl_sb_port_pool_fill", 96),
STACK_USAGE("devl_assert_locked", 0),
STACK_USAGE("devlink_nl_cmd_sb_port_pool_get_doit", 48),
STACK_USAGE("devl_lock_is_held", 0),
STACK_USAGE("devlink_nl_cmd_sb_port_pool_get_dumpit", 144),
STACK_USAGE("devl_lock", 0),
STACK_USAGE("devlink_nl_cmd_sb_port_pool_set_doit", 0),
STACK_USAGE("devlink_nl_sb_tc_pool_bind_fill", 120),
STACK_USAGE("devl_unlock", 0),
STACK_USAGE("devlink_nl_cmd_sb_tc_pool_bind_get_doit", 56),
STACK_USAGE("devlink_get_from_attrs", 64),
STACK_USAGE("devlink_nl_cmd_sb_tc_pool_bind_get_dumpit", 144),
STACK_USAGE("refcount_inc", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("devlink_nl_cmd_sb_tc_pool_bind_set_doit", 24),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("devlink_nl_cmd_sb_occ_snapshot_doit", 0),
STACK_USAGE("devlink_nl_cmd_sb_occ_max_clear_doit", 0),
STACK_USAGE("devlink_nl_cmd_eswitch_get_doit", 80),
STACK_USAGE("devlink_nl_cmd_eswitch_set_doit", 32),
STACK_USAGE("devlink_dpipe_match_put", 72),
STACK_USAGE("devlink_dpipe_matches_put", 32),
STACK_USAGE("devlink_dpipe_action_put", 72),
STACK_USAGE("devlink_dpipe_actions_put", 32),
STACK_USAGE("devlink_dpipe_table_put", 64),
STACK_USAGE("devlink_nl_cmd_dpipe_table_get", 88),
STACK_USAGE("devlink_dpipe_entry_ctx_prepare", 32),
STACK_USAGE("devlink_dpipe_entry_ctx_append", 96),
STACK_USAGE("devlink_dpipe_entry_ctx_close", 0),
STACK_USAGE("devlink_dpipe_entry_clear", 32),
STACK_USAGE("devlink_nl_cmd_dpipe_entries_get", 88),
STACK_USAGE("devlink_nl_cmd_dpipe_headers_get", 144),
STACK_USAGE("devlink_nl_cmd_dpipe_table_counters_set", 48),
STACK_USAGE("devlink_resource_find", 32),
STACK_USAGE("devlink_nl_cmd_resource_set", 48),
STACK_USAGE("devlink_resource_size_params_put", 40),
STACK_USAGE("devlink_resource_put", 64),
STACK_USAGE("devlink_nl_cmd_resource_dump", 80),
STACK_USAGE("devlink_resources_validate", 24),
STACK_USAGE("devlink_is_reload_failed", 0),
STACK_USAGE("devlink_remote_reload_actions_performed", 16),
STACK_USAGE("devlink_reload", 152),
STACK_USAGE("devlink_nl_reload_actions_performed_snd", 64),
STACK_USAGE("devlink_nl_cmd_reload", 64),
STACK_USAGE("__devlink_flash_update_notify", 64),
STACK_USAGE("devlink_flash_update_status_notify", 48),
STACK_USAGE("devlink_flash_update_timeout_notify", 48),
STACK_USAGE("devlink_nl_cmd_flash_update", 112),
STACK_USAGE("devlink_nl_param_fill", 280),
STACK_USAGE("devlink_param_notify", 40),
STACK_USAGE("devlink_nl_cmd_param_get_dumpit", 96),
STACK_USAGE("devlink_nl_cmd_param_get_doit", 48),
STACK_USAGE("__devlink_nl_cmd_param_set_doit", 144),
STACK_USAGE("devlink_nl_cmd_param_set_doit", 0),
STACK_USAGE("devlink_nl_cmd_port_param_get_dumpit", 112),
STACK_USAGE("devlink_nl_cmd_port_param_get_doit", 48),
STACK_USAGE("devlink_nl_cmd_port_param_set_doit", 0),
STACK_USAGE("devlink_nl_region_snapshots_id_put", 64),
STACK_USAGE("devlink_nl_region_fill", 64),
STACK_USAGE("devlink_nl_region_notify_build", 72),
STACK_USAGE("__bpf_trace_devlink_hwerr", 0),
STACK_USAGE("__traceiter_devlink_hwerr", 32),
STACK_USAGE("perf_trace_devlink_hwerr", 128),
STACK_USAGE("trace_event_raw_event_devlink_hwerr", 152),
STACK_USAGE("trace_raw_output_devlink_hwerr", 24),
STACK_USAGE("__devlink_snapshot_id_decrement", 24),
STACK_USAGE("__devlink_region_snapshot_create", 56),
STACK_USAGE("devlink_region_snapshot_del", 32),
STACK_USAGE("devlink_nl_cmd_region_get_doit", 48),
STACK_USAGE("devlink_nl_cmd_region_get_dumpit", 112),
STACK_USAGE("devlink_nl_cmd_region_del", 40),
STACK_USAGE("devlink_nl_cmd_region_new", 112),
STACK_USAGE("devlink_nl_region_read_snapshot_fill", 88),
STACK_USAGE("devlink_nl_cmd_region_read_dumpit", 128),
STACK_USAGE("devlink_info_driver_name_put", 16),
STACK_USAGE("devlink_info_serial_number_put", 16),
STACK_USAGE("devlink_info_board_serial_number_put", 16),
STACK_USAGE("devlink_info_version_put", 40),
STACK_USAGE("devlink_info_version_fixed_put", 0),
STACK_USAGE("devlink_info_version_stored_put", 0),
STACK_USAGE("devlink_info_version_running_put", 0),
STACK_USAGE("devlink_nl_info_fill", 64),
STACK_USAGE("devlink_nl_cmd_info_get_doit", 32),
STACK_USAGE("devlink_nl_cmd_info_get_dumpit", 80),
STACK_USAGE("devlink_fmsg_obj_nest_start", 8),
STACK_USAGE("devlink_fmsg_obj_nest_end", 8),
STACK_USAGE("devlink_fmsg_pair_nest_start", 32),
STACK_USAGE("devlink_fmsg_pair_nest_end", 8),
STACK_USAGE("devlink_fmsg_arr_pair_nest_start", 8),
STACK_USAGE("devlink_nl_pre_doit", 64),
STACK_USAGE("devlink_fmsg_arr_pair_nest_end", 16),
STACK_USAGE("devlink_fmsg_binary_pair_nest_start", 8),
STACK_USAGE("devlink_fmsg_binary_pair_nest_end", 16),
STACK_USAGE("devlink_fmsg_u32_put", 16),
STACK_USAGE("devlink_fmsg_string_put", 40),
STACK_USAGE("devlink_fmsg_binary_put", 40),
STACK_USAGE("devlink_fmsg_bool_pair_put", 24),
STACK_USAGE("devlink_fmsg_u8_pair_put", 24),
STACK_USAGE("devlink_fmsg_u32_pair_put", 24),
STACK_USAGE("devlink_fmsg_u64_pair_put", 24),
STACK_USAGE("devlink_fmsg_string_pair_put", 40),
STACK_USAGE("devlink_fmsg_binary_pair_put", 56),
STACK_USAGE("devlink_fmsg_prepare_skb", 72),
STACK_USAGE("devlink_fmsg_snd", 80),
STACK_USAGE("devlink_health_reporter_priv", 0),
STACK_USAGE("devlink_port_health_reporter_create", 64),
STACK_USAGE("devlink_nl_post_doit", 8),
STACK_USAGE("devlink_health_reporter_create", 64),
STACK_USAGE("devlink_health_reporter_put", 40),
STACK_USAGE("devlink_health_reporter_destroy", 16),
STACK_USAGE("devlink_port_health_reporter_destroy", 16),
STACK_USAGE("devlink_nl_health_reporter_fill", 64),
STACK_USAGE("devlink_recover_notify", 24),
STACK_USAGE("devlink_health_reporter_recovery_done", 0),
STACK_USAGE("devlink_health_do_dump", 48),
STACK_USAGE("devlink_health_report", 40),
STACK_USAGE("devlink_health_reporter_get_from_attrs", 40),
STACK_USAGE("devlink_health_reporter_state_update", 8),
STACK_USAGE("devlink_nl_cmd_health_reporter_get_doit", 32),
STACK_USAGE("devlink_nl_cmd_health_reporter_get_dumpit", 112),
STACK_USAGE("devlink_nl_cmd_health_reporter_set_doit", 32),
STACK_USAGE("devlink_nl_cmd_health_reporter_recover_doit", 16),
STACK_USAGE("devlink_nl_cmd_health_reporter_diagnose_doit", 48),
STACK_USAGE("devlink_nl_cmd_health_reporter_dump_get_dumpit", 72),
STACK_USAGE("devlink_nl_cmd_health_reporter_dump_clear_doit", 48),
STACK_USAGE("devlink_nl_cmd_health_reporter_test_doit", 16),
STACK_USAGE("devlink_trap_metadata_put", 32),
STACK_USAGE("devlink_reload_stats_put", 112),
STACK_USAGE("devlink_trap_stats_put", 72),
STACK_USAGE("devlink_nl_trap_fill", 64),
STACK_USAGE("devlink_nl_cmd_trap_get_doit", 48),
STACK_USAGE("devlink_nl_cmd_trap_get_dumpit", 88),
STACK_USAGE("devlink_nl_cmd_trap_set_doit", 56),
STACK_USAGE("devlink_nl_trap_group_fill", 64),
STACK_USAGE("devlink_nl_cmd_trap_group_get_doit", 48),
STACK_USAGE("devlink_nl_cmd_trap_group_get_dumpit", 96),
STACK_USAGE("__bpf_trace_devlink_health_report", 0),
STACK_USAGE("__traceiter_devlink_health_report", 32),
STACK_USAGE("perf_trace_devlink_health_report", 112),
STACK_USAGE("trace_event_get_offsets_devlink_health_report", 56),
STACK_USAGE("trace_event_raw_event_devlink_health_report", 120),
STACK_USAGE("trace_raw_output_devlink_health_report", 24),
STACK_USAGE("devlink_nl_cmd_trap_group_set_doit", 96),
STACK_USAGE("devlink_trap_policer_stats_put", 48),
STACK_USAGE("devlink_nl_trap_policer_fill", 64),
STACK_USAGE("devlink_nl_fill", 64),
STACK_USAGE("devlink_nl_cmd_trap_policer_get_doit", 32),
STACK_USAGE("devlink_nl_cmd_trap_policer_get_dumpit", 96),
STACK_USAGE("devlink_nl_cmd_trap_policer_set_doit", 72),
STACK_USAGE("devlink_notify", 24),
STACK_USAGE("devlink_nl_port_attrs_put", 40),
STACK_USAGE("devlink_set_features", 16),
STACK_USAGE("devlink_alloc_ns", 40),
STACK_USAGE("devlink_register", 32),
STACK_USAGE("devlink_unregister", 32),
STACK_USAGE("devlink_free", 8),
STACK_USAGE("devlink_port_type_warn", 0),
STACK_USAGE("devl_port_register", 32),
STACK_USAGE("devlink_port_register", 32),
STACK_USAGE("devl_port_unregister", 8),
STACK_USAGE("devlink_port_unregister", 16),
STACK_USAGE("devlink_port_type_eth_set", 88),
STACK_USAGE("devlink_port_type_ib_set", 24),
STACK_USAGE("devlink_port_type_clear", 16),
STACK_USAGE("devlink_port_attrs_set", 0),
STACK_USAGE("devlink_port_attrs_pci_pf_set", 0),
STACK_USAGE("devlink_port_attrs_pci_vf_set", 0),
STACK_USAGE("devlink_port_attrs_pci_sf_set", 0),
STACK_USAGE("devl_rate_leaf_create", 24),
STACK_USAGE("devlink_rate_leaf_create", 32),
STACK_USAGE("devl_rate_leaf_destroy", 16),
STACK_USAGE("devlink_rate_leaf_destroy", 16),
STACK_USAGE("devl_rate_nodes_destroy", 32),
STACK_USAGE("devlink_rate_nodes_destroy", 16),
STACK_USAGE("devlink_sb_register", 64),
STACK_USAGE("devlink_sb_unregister", 32),
STACK_USAGE("devlink_dpipe_headers_register", 24),
STACK_USAGE("devlink_dpipe_headers_unregister", 16),
STACK_USAGE("devlink_nl_rate_fill", 64),
STACK_USAGE("devlink_dpipe_table_counter_enabled", 24),
STACK_USAGE("devlink_dpipe_table_register", 72),
STACK_USAGE("devlink_dpipe_table_unregister", 32),
STACK_USAGE("devlink_resource_register", 72),
STACK_USAGE("dst_destroy", 16),
STACK_USAGE("dst_destroy_rcu", 0),
STACK_USAGE("dst_dev_put", 16),
STACK_USAGE("dst_release", 16),
STACK_USAGE("dst_release_immediate", 16),
STACK_USAGE("dst_cow_metrics_generic", 24),
STACK_USAGE("__dst_destroy_metrics_generic", 0),
STACK_USAGE("dst_blackhole_check", 0),
STACK_USAGE("dst_blackhole_cow_metrics", 0),
STACK_USAGE("dst_blackhole_neigh_lookup", 0),
STACK_USAGE("dst_blackhole_update_pmtu", 0),
STACK_USAGE("dst_blackhole_redirect", 0),
STACK_USAGE("dst_blackhole_mtu", 0),
STACK_USAGE("metadata_dst_alloc", 24),
STACK_USAGE("dst_discard_out", 0),
STACK_USAGE("metadata_dst_free", 8),
STACK_USAGE("metadata_dst_alloc_percpu", 48),
STACK_USAGE("metadata_dst_free_percpu", 24),
STACK_USAGE("dst_discard", 0),
STACK_USAGE("dst_init", 0),
STACK_USAGE("dst_alloc", 48),
STACK_USAGE("dst_cache_set_ip6", 56),
STACK_USAGE("dst_cache_get_ip6", 24),
STACK_USAGE("dst_cache_init", 8),
STACK_USAGE("dst_cache_destroy", 24),
STACK_USAGE("dst_cache_reset_now", 16),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("dst_cache_per_cpu_get", 16),
STACK_USAGE("dst_cache_get", 16),
STACK_USAGE("dst_cache_get_ip4", 24),
STACK_USAGE("dst_cache_set_ip4", 32),
STACK_USAGE("failover_slave_unregister", 40),
STACK_USAGE("failover_event", 24),
STACK_USAGE("failover_get_bymac", 40),
STACK_USAGE("failover_register", 32),
STACK_USAGE("failover_unregister", 16),
STACK_USAGE("failover_init", 0),
STACK_USAGE("failover_exit", 0),
STACK_USAGE("failover_slave_register", 56),
STACK_USAGE("unregister_fib_notifier", 8),
STACK_USAGE("fib_notifier_ops_register", 16),
STACK_USAGE("fib_notifier_ops_unregister", 0),
STACK_USAGE("fib_notifier_net_init", 8),
STACK_USAGE("fib_notifier_net_exit", 0),
STACK_USAGE("call_fib_notifier", 0),
STACK_USAGE("fib_notifier_init", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("call_fib_notifiers", 16),
STACK_USAGE("net_generic", 16),
STACK_USAGE("fib_seq_sum", 32),
STACK_USAGE("register_fib_notifier", 64),
STACK_USAGE("fib_nl_fill_rule", 64),
STACK_USAGE("lookup_rules_ops", 24),
STACK_USAGE("dump_rules", 56),
STACK_USAGE("fib_rule_put", 0),
STACK_USAGE("fib_nl_dumprule", 40),
STACK_USAGE("notify_rule_change", 56),
STACK_USAGE("fib_rules_event", 40),
STACK_USAGE("fib_rules_net_init", 0),
STACK_USAGE("fib_rules_net_exit", 0),
STACK_USAGE("fib_rules_init", 16),
STACK_USAGE("nla_put_string", 24),
STACK_USAGE("fib_rules_register", 24),
STACK_USAGE("fib_rules_unregister", 40),
STACK_USAGE("nla_get_kuid_range", 24),
STACK_USAGE("nla_put_uid_range", 40),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("fib_rules_lookup", 72),
STACK_USAGE("fib_rules_dump", 88),
STACK_USAGE("fib_rule_matchall", 0),
STACK_USAGE("fib_rules_seq_read", 16),
STACK_USAGE("fib_nl2rule", 72),
STACK_USAGE("fib_default_rule_add", 32),
STACK_USAGE("fib_nl_newrule", 344),
STACK_USAGE("fib_nl_delrule", 344),
STACK_USAGE("sk_skb_convert_ctx_access", 0),
STACK_USAGE("sk_msg_convert_ctx_access", 0),
STACK_USAGE("sk_detach_filter", 16),
STACK_USAGE("sk_get_filter", 40),
STACK_USAGE("bpf_run_sk_reuseport", 96),
STACK_USAGE("sk_select_reuseport", 32),
STACK_USAGE("sk_reuseport_load_bytes", 16),
STACK_USAGE("sk_reuseport_load_bytes_relative", 0),
STACK_USAGE("sk_reuseport_func_proto", 0),
STACK_USAGE("sk_reuseport_is_valid_access", 0),
STACK_USAGE("sk_reuseport_convert_ctx_access", 0),
STACK_USAGE("bpf_sk_lookup_assign", 0),
STACK_USAGE("sk_lookup_func_proto", 8),
STACK_USAGE("sk_lookup_is_valid_access", 0),
STACK_USAGE("sk_lookup_convert_ctx_access", 0),
STACK_USAGE("bpf_dispatcher_xdp_func", 0),
STACK_USAGE("bpf_prog_change_xdp", 0),
STACK_USAGE("bpf_skc_to_tcp6_sock", 0),
STACK_USAGE("bpf_skc_to_tcp_sock", 0),
STACK_USAGE("bpf_skc_to_tcp_timewait_sock", 0),
STACK_USAGE("bpf_skc_to_tcp_request_sock", 0),
STACK_USAGE("bpf_skc_to_udp6_sock", 0),
STACK_USAGE("bpf_skc_to_unix_sock", 0),
STACK_USAGE("bpf_sock_from_file", 0),
STACK_USAGE("sk_filter_release_rcu", 24),
STACK_USAGE("sk_filter_uncharge", 0),
STACK_USAGE("sk_filter_trim_cap", 136),
STACK_USAGE("sk_filter_charge", 24),
STACK_USAGE("bpf_prepare_filter", 80),
STACK_USAGE("bpf_prog_create", 40),
STACK_USAGE("bpf_prog_create_from_user", 72),
STACK_USAGE("trace_xdp_redirect", 0),
STACK_USAGE("bpf_prog_destroy", 16),
STACK_USAGE("__sk_attach_prog", 32),
STACK_USAGE("__get_filter", 48),
STACK_USAGE("trace_xdp_redirect_err", 0),
STACK_USAGE("sk_attach_filter", 24),
STACK_USAGE("sk_reuseport_attach_filter", 24),
STACK_USAGE("sk_attach_bpf", 24),
STACK_USAGE("sk_reuseport_attach_bpf", 32),
STACK_USAGE("bpf_skb_get_pay_offset", 0),
STACK_USAGE("sk_reuseport_prog_free", 16),
STACK_USAGE("bpf_skb_get_nlattr", 8),
STACK_USAGE("bpf_skb_store_bytes", 64),
STACK_USAGE("bpf_skb_load_bytes", 16),
STACK_USAGE("bpf_flow_dissector_load_bytes", 16),
STACK_USAGE("bpf_skb_load_bytes_relative", 0),
STACK_USAGE("bpf_skb_pull_data", 8),
STACK_USAGE("bpf_sk_fullsock", 0),
STACK_USAGE("bpf_skb_get_nlattr_nest", 8),
STACK_USAGE("sk_skb_pull_data", 0),
STACK_USAGE("bpf_l3_csum_replace", 64),
STACK_USAGE("local_bh_disable", 0),
STACK_USAGE("bpf_l4_csum_replace", 56),
STACK_USAGE("bpf_csum_diff", 40),
STACK_USAGE("bpf_csum_update", 4),
STACK_USAGE("bpf_csum_level", 0),
STACK_USAGE("bpf_skb_load_helper_8", 16),
STACK_USAGE("__bpf_redirect", 40),
STACK_USAGE("bpf_skb_load_helper_8_no_cache", 16),
STACK_USAGE("__ipv4_neigh_lookup_noref", 24),
STACK_USAGE("bpf_skb_load_helper_16", 16),
STACK_USAGE("bpf_clone_redirect", 40),
STACK_USAGE("skb_do_redirect", 160),
STACK_USAGE("bpf_redirect", 16),
STACK_USAGE("bpf_redirect_peer", 16),
STACK_USAGE("bpf_redirect_neigh", 32),
STACK_USAGE("bpf_msg_apply_bytes", 0),
STACK_USAGE("bpf_msg_cork_bytes", 0),
STACK_USAGE("bpf_skb_load_helper_16_no_cache", 16),
STACK_USAGE("bpf_msg_pull_data", 120),
STACK_USAGE("bpf_skb_load_helper_32", 16),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("bpf_msg_push_data", 192),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("bpf_skb_load_helper_32_no_cache", 16),
STACK_USAGE("bpf_msg_pop_data", 176),
STACK_USAGE("nexthop_num_path", 16),
STACK_USAGE("bpf_get_cgroup_classid_curr", 0),
STACK_USAGE("bpf_skb_cgroup_classid", 0),
STACK_USAGE("bpf_get_cgroup_classid", 8),
STACK_USAGE("bpf_get_route_realm", 0),
STACK_USAGE("bpf_get_hash_recalc", 8),
STACK_USAGE("bpf_set_hash_invalid", 0),
STACK_USAGE("bpf_set_hash", 0),
STACK_USAGE("bpf_skb_vlan_push", 40),
STACK_USAGE("bpf_skb_vlan_pop", 24),
STACK_USAGE("local_bh_enable", 0),
STACK_USAGE("bpf_skb_net_hdr_pop", 48),
STACK_USAGE("bpf_skb_change_proto", 32),
STACK_USAGE("bpf_skb_change_type", 0),
STACK_USAGE("sk_skb_adjust_room", 32),
STACK_USAGE("bpf_skb_adjust_room", 80),
STACK_USAGE("__bpf_skb_change_tail", 40),
STACK_USAGE("skb_postpull_rcsum", 8),
STACK_USAGE("bpf_skb_change_tail", 8),
STACK_USAGE("sk_skb_change_tail", 0),
STACK_USAGE("bpf_skb_change_head", 24),
STACK_USAGE("sk_skb_change_head", 24),
STACK_USAGE("bpf_xdp_get_buff_len", 0),
STACK_USAGE("bpf_xdp_adjust_head", 24),
STACK_USAGE("__ipv6_neigh_lookup_noref_stub", 24),
STACK_USAGE("bpf_xdp_load_bytes", 64),
STACK_USAGE("bpf_xdp_store_bytes", 64),
STACK_USAGE("bpf_xdp_frags_increase_tail", 32),
STACK_USAGE("bpf_xdp_frags_shrink_tail", 56),
STACK_USAGE("skb_tunnel_info", 8),
STACK_USAGE("bpf_xdp_adjust_tail", 24),
STACK_USAGE("bpf_xdp_adjust_meta", 0),
STACK_USAGE("xdp_do_flush", 0),
STACK_USAGE("bpf_clear_redirect_map", 24),
STACK_USAGE("xdp_master_redirect", 16),
STACK_USAGE("xdp_do_redirect", 64),
STACK_USAGE("xdp_do_redirect_frame", 64),
STACK_USAGE("xdp_do_generic_redirect", 72),
STACK_USAGE("bpf_xdp_redirect", 16),
STACK_USAGE("bpf_xdp_redirect_map", 0),
STACK_USAGE("bpf_skb_copy", 16),
STACK_USAGE("bpf_skb_event_output", 0),
STACK_USAGE("bpf_skb_get_tunnel_key", 88),
STACK_USAGE("bpf_skb_get_tunnel_opt", 32),
STACK_USAGE("bpf_skb_set_tunnel_key", 88),
STACK_USAGE("bpf_skb_set_tunnel_opt", 32),
STACK_USAGE("convert_bpf_ld_abs", 16),
STACK_USAGE("bpf_skb_under_cgroup", 0),
STACK_USAGE("bpf_skb_cgroup_id", 0),
STACK_USAGE("bpf_skb_ancestor_cgroup_id", 0),
STACK_USAGE("bpf_sk_cgroup_id", 0),
STACK_USAGE("bpf_sk_ancestor_cgroup_id", 0),
STACK_USAGE("bpf_xdp_copy", 56),
STACK_USAGE("bpf_xdp_event_output", 8),
STACK_USAGE("bpf_get_socket_cookie", 0),
STACK_USAGE("bpf_get_socket_cookie_sock_addr", 0),
STACK_USAGE("bpf_get_socket_cookie_sock", 0),
STACK_USAGE("bpf_get_socket_ptr_cookie", 8),
STACK_USAGE("bpf_get_socket_cookie_sock_ops", 0),
STACK_USAGE("bpf_get_netns_cookie_sock", 0),
STACK_USAGE("bpf_get_netns_cookie_sock_addr", 0),
STACK_USAGE("bpf_get_netns_cookie_sock_ops", 0),
STACK_USAGE("bpf_get_netns_cookie_sk_msg", 0),
STACK_USAGE("bpf_get_socket_uid", 0),
STACK_USAGE("_bpf_setsockopt", 72),
STACK_USAGE("_bpf_getsockopt", 40),
STACK_USAGE("bpf_sk_setsockopt", 40),
STACK_USAGE("neigh_output", 72),
STACK_USAGE("bpf_sk_getsockopt", 0),
STACK_USAGE("bpf_sock_addr_setsockopt", 0),
STACK_USAGE("bpf_sock_addr_getsockopt", 0),
STACK_USAGE("bpf_sock_ops_setsockopt", 0),
STACK_USAGE("bpf_sock_ops_get_syn", 0),
STACK_USAGE("bpf_sock_ops_getsockopt", 56),
STACK_USAGE("bpf_sock_ops_cb_flags_set", 0),
STACK_USAGE("bpf_convert_filter", 424),
STACK_USAGE("bpf_bind", 0),
STACK_USAGE("bpf_skb_get_xfrm_state", 0),
STACK_USAGE("bpf_ipv4_fib_lookup", 168),
STACK_USAGE("bpf_ipv6_fib_lookup", 208),
STACK_USAGE("bpf_xdp_fib_lookup", 0),
STACK_USAGE("bpf_skb_fib_lookup", 32),
STACK_USAGE("bpf_skb_check_mtu", 40),
STACK_USAGE("bpf_xdp_check_mtu", 24),
STACK_USAGE("bpf_push_seg6_encap", 24),
STACK_USAGE("bpf_lwt_in_push_encap", 0),
STACK_USAGE("bpf_lwt_xmit_push_encap", 0),
STACK_USAGE("bpf_lwt_seg6_store_bytes", 64),
STACK_USAGE("bpf_update_srh_state", 32),
STACK_USAGE("bpf_lwt_seg6_action", 56),
STACK_USAGE("bpf_lwt_seg6_adjust_srh", 80),
STACK_USAGE("sk_lookup", 56),
STACK_USAGE("__bpf_skc_lookup", 48),
STACK_USAGE("bpf_skc_lookup_tcp", 0),
STACK_USAGE("bpf_sk_lookup_tcp", 0),
STACK_USAGE("bpf_sk_lookup_udp", 0),
STACK_USAGE("bpf_sk_release", 0),
STACK_USAGE("bpf_xdp_sk_lookup_udp", 16),
STACK_USAGE("bpf_xdp_skc_lookup_tcp", 0),
STACK_USAGE("bpf_xdp_sk_lookup_tcp", 16),
STACK_USAGE("bpf_sock_addr_skc_lookup_tcp", 0),
STACK_USAGE("bpf_sock_addr_sk_lookup_tcp", 8),
STACK_USAGE("bpf_sock_addr_sk_lookup_udp", 8),
STACK_USAGE("bpf_tcp_sock_is_valid_access", 0),
STACK_USAGE("bpf_tcp_sock_convert_ctx_access", 0),
STACK_USAGE("bpf_tcp_sock", 0),
STACK_USAGE("bpf_get_listener_sock", 0),
STACK_USAGE("bpf_skb_ecn_set_ce", 64),
STACK_USAGE("bpf_xdp_sock_is_valid_access", 0),
STACK_USAGE("bpf_xdp_sock_convert_ctx_access", 0),
STACK_USAGE("bpf_tcp_check_syncookie", 56),
STACK_USAGE("bpf_tcp_gen_syncookie", 16),
STACK_USAGE("bpf_sk_assign", 24),
STACK_USAGE("bpf_sock_ops_load_hdr_opt", 72),
STACK_USAGE("bpf_sock_ops_store_hdr_opt", 88),
STACK_USAGE("bpf_sock_ops_reserve_hdr_opt", 0),
STACK_USAGE("bpf_skb_set_tstamp", 0),
STACK_USAGE("bpf_helper_changes_pkt_data", 0),
STACK_USAGE("sock_filter_func_proto", 0),
STACK_USAGE("sock_addr_func_proto", 8),
STACK_USAGE("sk_filter_func_proto", 8),
STACK_USAGE("cg_skb_func_proto", 0),
STACK_USAGE("tc_cls_act_func_proto", 8),
STACK_USAGE("xdp_func_proto", 8),
STACK_USAGE("sock_ops_func_proto", 8),
STACK_USAGE("sk_msg_func_proto", 8),
STACK_USAGE("sk_skb_func_proto", 8),
STACK_USAGE("flow_dissector_func_proto", 8),
STACK_USAGE("lwt_out_func_proto", 8),
STACK_USAGE("lwt_in_func_proto", 0),
STACK_USAGE("lwt_xmit_func_proto", 8),
STACK_USAGE("lwt_seg6local_func_proto", 0),
STACK_USAGE("bpf_skb_is_valid_access", 0),
STACK_USAGE("sk_filter_is_valid_access", 0),
STACK_USAGE("cg_skb_is_valid_access", 40),
STACK_USAGE("lwt_is_valid_access", 0),
STACK_USAGE("bpf_sock_common_is_valid_access", 0),
STACK_USAGE("bpf_sock_is_valid_access", 0),
STACK_USAGE("sock_filter_is_valid_access", 24),
STACK_USAGE("bpf_noop_prologue", 0),
STACK_USAGE("bpf_gen_ld_abs", 0),
STACK_USAGE("tc_cls_act_prologue", 0),
STACK_USAGE("tc_cls_act_is_valid_access", 0),
STACK_USAGE("xdp_is_valid_access", 0),
STACK_USAGE("bpf_warn_invalid_xdp_action", 0),
STACK_USAGE("sock_addr_is_valid_access", 0),
STACK_USAGE("copy_bpf_fprog_from_user", 24),
STACK_USAGE("sock_ops_is_valid_access", 0),
STACK_USAGE("sk_skb_prologue", 0),
STACK_USAGE("sk_skb_is_valid_access", 0),
STACK_USAGE("sk_msg_is_valid_access", 0),
STACK_USAGE("flow_dissector_is_valid_access", 0),
STACK_USAGE("flow_dissector_convert_ctx_access", 0),
STACK_USAGE("bpf_convert_tstamp_type_read", 0),
STACK_USAGE("bpf_convert_shinfo_access", 0),
STACK_USAGE("bpf_convert_tstamp_read", 0),
STACK_USAGE("bpf_convert_tstamp_write", 0),
STACK_USAGE("bpf_convert_ctx_access", 24),
STACK_USAGE("bpf_sock_convert_ctx_access", 0),
STACK_USAGE("tc_cls_act_convert_ctx_access", 0),
STACK_USAGE("xdp_convert_ctx_access", 0),
STACK_USAGE("sock_addr_convert_ctx_access", 0),
STACK_USAGE("sock_ops_convert_ctx_access", 0),
STACK_USAGE("__skb_flow_get_ports", 32),
STACK_USAGE("flow_get_u32_src", 0),
STACK_USAGE("flow_get_u32_dst", 0),
STACK_USAGE("flow_hash_from_keys", 24),
STACK_USAGE("___skb_get_hash", 16),
STACK_USAGE("make_flow_keys_digest", 0),
STACK_USAGE("__skb_get_hash_symmetric", 96),
STACK_USAGE("skb_flow_get_icmp_tci", 32),
STACK_USAGE("__skb_get_hash", 96),
STACK_USAGE("skb_get_hash_perturb", 88),
STACK_USAGE("__skb_get_poff", 32),
STACK_USAGE("skb_get_poff", 40),
STACK_USAGE("__get_hash_from_flowi6", 0),
STACK_USAGE("init_default_flow_dissectors", 0),
STACK_USAGE("skb_flow_dissect_meta", 0),
STACK_USAGE("skb_flow_dissect_ct", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("skb_flow_dissect_tunnel_info", 32),
STACK_USAGE("skb_flow_dissect_hash", 0),
STACK_USAGE("skb_flow_dissector_init", 0),
STACK_USAGE("flow_dissector_bpf_prog_attach_check", 0),
STACK_USAGE("bpf_flow_dissect", 56),
STACK_USAGE("__skb_flow_dissect", 248),
STACK_USAGE("flow_rule_match_ipv4_addrs", 0),
STACK_USAGE("flow_rule_match_ipv6_addrs", 0),
STACK_USAGE("flow_rule_alloc", 8),
STACK_USAGE("flow_rule_match_ip", 0),
STACK_USAGE("flow_rule_match_ports", 0),
STACK_USAGE("flow_rule_match_tcp", 0),
STACK_USAGE("flow_rule_match_icmp", 0),
STACK_USAGE("flow_rule_match_mpls", 0),
STACK_USAGE("flow_rule_match_enc_control", 0),
STACK_USAGE("flow_rule_match_enc_ipv4_addrs", 0),
STACK_USAGE("flow_rule_match_enc_ipv6_addrs", 0),
STACK_USAGE("flow_rule_match_enc_ip", 0),
STACK_USAGE("flow_rule_match_enc_ports", 0),
STACK_USAGE("flow_rule_match_enc_keyid", 0),
STACK_USAGE("flow_rule_match_enc_opts", 0),
STACK_USAGE("flow_action_cookie_create", 32),
STACK_USAGE("flow_action_cookie_destroy", 0),
STACK_USAGE("flow_rule_match_ct", 0),
STACK_USAGE("flow_block_cb_alloc", 32),
STACK_USAGE("flow_block_cb_free", 8),
STACK_USAGE("flow_block_cb_lookup", 0),
STACK_USAGE("flow_block_cb_priv", 0),
STACK_USAGE("flow_block_cb_incref", 0),
STACK_USAGE("flow_block_cb_decref", 0),
STACK_USAGE("flow_block_cb_is_busy", 0),
STACK_USAGE("flow_block_cb_setup_simple", 40),
STACK_USAGE("offload_action_alloc", 8),
STACK_USAGE("flow_indr_dev_register", 136),
STACK_USAGE("flow_indr_dev_unregister", 72),
STACK_USAGE("flow_indr_block_cb_alloc", 48),
STACK_USAGE("flow_indr_dev_setup_offload", 72),
STACK_USAGE("flow_rule_match_meta", 0),
STACK_USAGE("flow_rule_match_basic", 0),
STACK_USAGE("flow_rule_match_control", 0),
STACK_USAGE("flow_rule_match_eth_addrs", 0),
STACK_USAGE("flow_rule_match_vlan", 0),
STACK_USAGE("flow_rule_match_cvlan", 0),
STACK_USAGE("gen_new_estimator", 88),
STACK_USAGE("local_bh_disable", 0),
STACK_USAGE("gen_kill_estimator", 8),
STACK_USAGE("gen_replace_estimator", 0),
STACK_USAGE("gen_estimator_active", 0),
STACK_USAGE("gen_estimator_read", 48),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("local_bh_enable", 0),
STACK_USAGE("est_timer", 88),
STACK_USAGE("gnet_stats_start_copy", 0),
STACK_USAGE("gnet_stats_basic_sync_init", 0),
STACK_USAGE("gnet_stats_add_basic", 40),
STACK_USAGE("___gnet_stats_copy_basic", 80),
STACK_USAGE("gnet_stats_copy_basic", 0),
STACK_USAGE("gnet_stats_copy_basic_hw", 0),
STACK_USAGE("gnet_stats_copy_rate_est", 48),
STACK_USAGE("gnet_stats_add_queue", 56),
STACK_USAGE("gnet_stats_copy_queue", 96),
STACK_USAGE("gnet_stats_copy_app", 32),
STACK_USAGE("gnet_stats_finish_copy", 16),
STACK_USAGE("gnet_stats_start_copy_compat", 32),
STACK_USAGE("skb_eth_gso_segment", 32),
STACK_USAGE("skb_mac_gso_segment", 48),
STACK_USAGE("skb_gro_receive", 48),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("napi_gro_complete", 40),
STACK_USAGE("dev_add_offload", 8),
STACK_USAGE("napi_gro_flush", 56),
STACK_USAGE("skb_frag_unref", 8),
STACK_USAGE("gro_flush_oldest", 0),
STACK_USAGE("nf_reset_ct", 8),
STACK_USAGE("dev_gro_receive", 120),
STACK_USAGE("gro_find_receive_by_type", 0),
STACK_USAGE("gro_find_complete_by_type", 0),
STACK_USAGE("napi_gro_receive", 32),
STACK_USAGE("napi_reuse_skb", 16),
STACK_USAGE("skb_metadata_dst_cmp", 24),
STACK_USAGE("napi_get_frags", 8),
STACK_USAGE("napi_gro_frags", 48),
STACK_USAGE("__skb_gro_checksum_complete", 32),
STACK_USAGE("dev_remove_offload", 8),
STACK_USAGE("gro_cells_destroy", 48),
STACK_USAGE("gro_cells_receive", 32),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("gro_cell_poll", 32),
STACK_USAGE("gro_cells_init", 40),
STACK_USAGE("percpu_free_defer_callback", 8),
STACK_USAGE("linkwatch_do_dev", 16),
STACK_USAGE("__linkwatch_run_queue", 64),
STACK_USAGE("linkwatch_forget_dev", 8),
STACK_USAGE("linkwatch_run_queue", 0),
STACK_USAGE("linkwatch_event", 0),
STACK_USAGE("linkwatch_fire_event", 16),
STACK_USAGE("linkwatch_init_dev", 16),
STACK_USAGE("linkwatch_urgent_event", 16),
STACK_USAGE("skb_dst", 8),
STACK_USAGE("bpf_input", 40),
STACK_USAGE("bpf_output", 40),
STACK_USAGE("local_bh_disable", 0),
STACK_USAGE("bpf_xmit", 144),
STACK_USAGE("bpf_destroy_state", 8),
STACK_USAGE("local_bh_enable", 0),
STACK_USAGE("bpf_build_state", 120),
STACK_USAGE("run_lwt_bpf", 120),
STACK_USAGE("bpf_fill_encap_info", 40),
STACK_USAGE("bpf_encap_nlsize", 0),
STACK_USAGE("bpf_encap_cmp", 24),
STACK_USAGE("bpf_lwt_push_ip_encap", 56),
STACK_USAGE("bpf_lwt_init", 0),
STACK_USAGE("lwtunnel_build_state", 64),
STACK_USAGE("lwtunnel_valid_encap_type", 40),
STACK_USAGE("lwtunnel_valid_encap_type_attr", 32),
STACK_USAGE("lwtstate_free", 16),
STACK_USAGE("lwtunnel_fill_encap", 64),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("lwtunnel_get_encap_size", 24),
STACK_USAGE("lwtunnel_cmp_encap", 32),
STACK_USAGE("lwtunnel_output", 40),
STACK_USAGE("lwtunnel_xmit", 24),
STACK_USAGE("lwtunnel_input", 24),
STACK_USAGE("lwtunnel_state_alloc", 0),
STACK_USAGE("rcu_read_unlock", 0),
STACK_USAGE("lwtunnel_encap_add_ops", 0),
STACK_USAGE("lwtunnel_encap_del_ops", 8),
STACK_USAGE("neigh_invalidate", 32),
STACK_USAGE("neigh_timer_handler", 48),
STACK_USAGE("neigh_rand_reach_time", 8),
STACK_USAGE("__neigh_event_send", 48),
STACK_USAGE("__neigh_update", 96),
STACK_USAGE("neigh_update", 0),
STACK_USAGE("__neigh_set_probe_once", 16),
STACK_USAGE("neigh_event_ns", 48),
STACK_USAGE("nla_put_msecs", 40),
STACK_USAGE("neigh_resolve_output", 40),
STACK_USAGE("neigh_connected_output", 40),
STACK_USAGE("neigh_direct_output", 0),
STACK_USAGE("neigh_managed_work", 32),
STACK_USAGE("neigh_proxy_process", 72),
STACK_USAGE("pneigh_enqueue", 40),
STACK_USAGE("neigh_parms_alloc", 48),
STACK_USAGE("neigh_rcu_free_parms", 0),
STACK_USAGE("neigh_parms_release", 16),
STACK_USAGE("neigh_table_init", 40),
STACK_USAGE("neigh_table_clear", 16),
STACK_USAGE("neigh_delete", 48),
STACK_USAGE("local_bh_disable", 0),
STACK_USAGE("neigh_add", 216),
STACK_USAGE("neightbl_fill_parms", 40),
STACK_USAGE("neightbl_set", 328),
STACK_USAGE("neigh_remove_one", 40),
STACK_USAGE("neightbl_dump_info", 288),
STACK_USAGE("neigh_fill_info", 152),
STACK_USAGE("pneigh_fill_info", 64),
STACK_USAGE("refcount_inc", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("neigh_dump_info", 312),
STACK_USAGE("neigh_add_timer", 16),
STACK_USAGE("neigh_get", 232),
STACK_USAGE("___neigh_lookup_noref", 40),
STACK_USAGE("neigh_del_timer", 16),
STACK_USAGE("neigh_for_each", 48),
STACK_USAGE("__skb_queue_purge", 8),
STACK_USAGE("__neigh_for_each_release", 56),
STACK_USAGE("neigh_xmit", 48),
STACK_USAGE("neigh_get_first", 64),
STACK_USAGE("neigh_get_next", 40),
STACK_USAGE("local_bh_enable", 0),
STACK_USAGE("neigh_flush_dev", 72),
STACK_USAGE("pneigh_get_first", 0),
STACK_USAGE("neigh_seq_start", 56),
STACK_USAGE("neigh_seq_next", 24),
STACK_USAGE("neigh_seq_stop", 0),
STACK_USAGE("neigh_stat_seq_start", 0),
STACK_USAGE("neigh_stat_seq_next", 0),
STACK_USAGE("neigh_stat_seq_stop", 0),
STACK_USAGE("neigh_stat_seq_show", 0),
STACK_USAGE("__neigh_notify", 48),
STACK_USAGE("neigh_app_ns", 0),
STACK_USAGE("neigh_proc_update", 48),
STACK_USAGE("neigh_proc_dointvec_zero_intmax", 96),
STACK_USAGE("neigh_proc_dointvec", 24),
STACK_USAGE("neigh_proc_dointvec_jiffies", 24),
STACK_USAGE("neigh_proc_dointvec_userhz_jiffies", 24),
STACK_USAGE("neigh_proc_dointvec_ms_jiffies", 24),
STACK_USAGE("neigh_proc_dointvec_unres_qlen", 104),
STACK_USAGE("neigh_proc_base_reachable_time", 56),
STACK_USAGE("neigh_sysctl_register", 104),
STACK_USAGE("neigh_changeaddr", 24),
STACK_USAGE("neigh_sysctl_unregister", 8),
STACK_USAGE("neigh_init", 0),
STACK_USAGE("__neigh_ifdown", 32),
STACK_USAGE("neigh_carrier_down", 0),
STACK_USAGE("neigh_ifdown", 0),
STACK_USAGE("neigh_release", 0),
STACK_USAGE("neigh_hash_alloc", 32),
STACK_USAGE("neigh_event_send", 0),
STACK_USAGE("neigh_hash_free_rcu", 16),
STACK_USAGE("neigh_lookup", 24),
STACK_USAGE("neigh_lookup_nodev", 48),
STACK_USAGE("___neigh_create", 136),
STACK_USAGE("__neigh_create", 0),
STACK_USAGE("__pneigh_lookup", 40),
STACK_USAGE("pneigh_lookup", 72),
STACK_USAGE("nlmsg_parse_deprecated_strict", 8),
STACK_USAGE("pneigh_delete", 64),
STACK_USAGE("read_seqbegin", 40),
STACK_USAGE("neigh_destroy", 32),
STACK_USAGE("neigh_periodic_work", 56),
STACK_USAGE("neigh_blackhole", 0),
STACK_USAGE("neigh_cleanup_and_release", 8),
STACK_USAGE("dev_seq_show", 224),
STACK_USAGE("softnet_seq_start", 0),
STACK_USAGE("softnet_seq_next", 0),
STACK_USAGE("softnet_seq_stop", 0),
STACK_USAGE("softnet_seq_show", 24),
STACK_USAGE("local_bh_disable", 0),
STACK_USAGE("ptype_seq_start", 16),
STACK_USAGE("ptype_seq_next", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("ptype_seq_stop", 0),
STACK_USAGE("ptype_seq_show", 16),
STACK_USAGE("dev_proc_net_init", 16),
STACK_USAGE("dev_proc_net_exit", 8),
STACK_USAGE("dev_mc_seq_show", 48),
STACK_USAGE("dev_mc_net_init", 8),
STACK_USAGE("dev_mc_net_exit", 0),
STACK_USAGE("dev_proc_init", 0),
STACK_USAGE("dev_seq_start", 16),
STACK_USAGE("dev_seq_next", 0),
STACK_USAGE("dev_seq_stop", 0),
STACK_USAGE("rx_queue_namespace", 0),
STACK_USAGE("rx_queue_get_ownership", 16),
STACK_USAGE("dev_id_show", 24),
STACK_USAGE("dev_port_show", 24),
STACK_USAGE("addr_assign_type_show", 24),
STACK_USAGE("net_rx_queue_update_kobjects", 56),
STACK_USAGE("addr_len_show", 24),
STACK_USAGE("ifindex_show", 24),
STACK_USAGE("type_show", 24),
STACK_USAGE("link_mode_show", 24),
STACK_USAGE("iflink_show", 8),
STACK_USAGE("netdev_queue_attr_show", 0),
STACK_USAGE("netdev_queue_attr_store", 0),
STACK_USAGE("tx_timeout_show", 0),
STACK_USAGE("traffic_class_show", 32),
STACK_USAGE("tx_maxrate_show", 0),
STACK_USAGE("tx_maxrate_store", 56),
STACK_USAGE("name_assign_type_show", 24),
STACK_USAGE("bql_show_hold_time", 8),
STACK_USAGE("bql_set_hold_time", 32),
STACK_USAGE("bql_show_inflight", 0),
STACK_USAGE("bql_set_limit", 48),
STACK_USAGE("bql_show_limit", 0),
STACK_USAGE("bql_set_limit_max", 48),
STACK_USAGE("bql_show_limit_max", 0),
STACK_USAGE("bql_set_limit_min", 48),
STACK_USAGE("bql_show_limit_min", 0),
STACK_USAGE("xps_queue_show", 64),
STACK_USAGE("address_show", 24),
STACK_USAGE("xps_cpus_show", 40),
STACK_USAGE("xps_cpus_store", 72),
STACK_USAGE("xps_rxqs_show", 32),
STACK_USAGE("xps_rxqs_store", 48),
STACK_USAGE("broadcast_show", 0),
STACK_USAGE("netdev_queue_release", 0),
STACK_USAGE("netdev_queue_namespace", 0),
STACK_USAGE("netdev_queue_get_ownership", 16),
STACK_USAGE("netdev_queue_update_kobjects", 56),
STACK_USAGE("carrier_store", 48),
STACK_USAGE("net_current_may_mount", 0),
STACK_USAGE("net_grab_current_ns", 8),
STACK_USAGE("net_initial_ns", 0),
STACK_USAGE("net_netlink_ns", 0),
STACK_USAGE("netdev_uevent", 16),
STACK_USAGE("netdev_release", 8),
STACK_USAGE("carrier_show", 0),
STACK_USAGE("net_namespace", 0),
STACK_USAGE("net_get_ownership", 0),
STACK_USAGE("netdev_unregister_kobject", 24),
STACK_USAGE("netdev_register_kobject", 48),
STACK_USAGE("speed_show", 136),
STACK_USAGE("netdev_change_owner", 96),
STACK_USAGE("netdev_class_create_file_ns", 0),
STACK_USAGE("netdev_class_remove_file_ns", 0),
STACK_USAGE("netdev_kobject_init", 0),
STACK_USAGE("duplex_show", 136),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("testing_show", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("dormant_show", 0),
STACK_USAGE("operstate_show", 24),
STACK_USAGE("carrier_changes_show", 0),
STACK_USAGE("carrier_up_count_show", 0),
STACK_USAGE("carrier_down_count_show", 0),
STACK_USAGE("mtu_store", 40),
STACK_USAGE("mtu_show", 24),
STACK_USAGE("flags_store", 40),
STACK_USAGE("flags_show", 24),
STACK_USAGE("tx_queue_len_store", 40),
STACK_USAGE("tx_queue_len_show", 24),
STACK_USAGE("gro_flush_timeout_store", 40),
STACK_USAGE("gro_flush_timeout_show", 24),
STACK_USAGE("napi_defer_hard_irqs_store", 40),
STACK_USAGE("napi_defer_hard_irqs_show", 24),
STACK_USAGE("ifalias_store", 32),
STACK_USAGE("ifalias_show", 280),
STACK_USAGE("group_store", 40),
STACK_USAGE("group_show", 24),
STACK_USAGE("proto_down_store", 40),
STACK_USAGE("proto_down_show", 24),
STACK_USAGE("phys_port_id_show", 72),
STACK_USAGE("phys_port_name_show", 56),
STACK_USAGE("phys_switch_id_show", 72),
STACK_USAGE("threaded_show", 24),
STACK_USAGE("threaded_store", 40),
STACK_USAGE("rx_packets_show", 224),
STACK_USAGE("tx_packets_show", 224),
STACK_USAGE("rx_bytes_show", 224),
STACK_USAGE("tx_bytes_show", 224),
STACK_USAGE("rx_errors_show", 224),
STACK_USAGE("tx_errors_show", 224),
STACK_USAGE("rx_dropped_show", 224),
STACK_USAGE("tx_dropped_show", 224),
STACK_USAGE("multicast_show", 224),
STACK_USAGE("collisions_show", 224),
STACK_USAGE("rx_length_errors_show", 224),
STACK_USAGE("rx_over_errors_show", 224),
STACK_USAGE("rx_crc_errors_show", 224),
STACK_USAGE("rx_frame_errors_show", 224),
STACK_USAGE("rx_fifo_errors_show", 224),
STACK_USAGE("rx_missed_errors_show", 224),
STACK_USAGE("tx_aborted_errors_show", 224),
STACK_USAGE("tx_carrier_errors_show", 224),
STACK_USAGE("tx_fifo_errors_show", 224),
STACK_USAGE("tx_heartbeat_errors_show", 224),
STACK_USAGE("tx_window_errors_show", 224),
STACK_USAGE("rx_compressed_show", 224),
STACK_USAGE("tx_compressed_show", 224),
STACK_USAGE("rx_nohandler_show", 224),
STACK_USAGE("rx_queue_attr_show", 0),
STACK_USAGE("rx_queue_attr_store", 0),
STACK_USAGE("show_rps_map", 56),
STACK_USAGE("store_rps_map", 88),
STACK_USAGE("show_rps_dev_flow_table_cnt", 16),
STACK_USAGE("rps_dev_flow_table_release", 0),
STACK_USAGE("store_rps_dev_flow_table_cnt", 56),
STACK_USAGE("rx_queue_release", 8),
STACK_USAGE("__bpf_trace_qdisc_destroy", 0),
STACK_USAGE("__traceiter_qdisc_destroy", 16),
STACK_USAGE("perf_trace_qdisc_destroy", 88),
STACK_USAGE("trace_event_raw_event_qdisc_destroy", 96),
STACK_USAGE("trace_raw_output_qdisc_destroy", 24),
STACK_USAGE("__bpf_trace_consume_skb", 0),
STACK_USAGE("__traceiter_consume_skb", 16),
STACK_USAGE("__traceiter_tcp_send_reset", 24),
STACK_USAGE("perf_trace_consume_skb", 56),
STACK_USAGE("trace_event_raw_event_consume_skb", 72),
STACK_USAGE("trace_raw_output_consume_skb", 24),
STACK_USAGE("__bpf_trace_udp_fail_queue_rcv_skb", 0),
STACK_USAGE("__traceiter_udp_fail_queue_rcv_skb", 24),
STACK_USAGE("perf_trace_udp_fail_queue_rcv_skb", 64),
STACK_USAGE("trace_event_raw_event_udp_fail_queue_rcv_skb", 80),
STACK_USAGE("trace_raw_output_udp_fail_queue_rcv_skb", 24),
STACK_USAGE("__bpf_trace_net_dev_template", 0),
STACK_USAGE("__bpf_trace_tcp_event_sk", 0),
STACK_USAGE("perf_trace_net_dev_template", 80),
STACK_USAGE("perf_trace_tcp_event_sk", 64),
STACK_USAGE("trace_event_raw_event_net_dev_template", 88),
STACK_USAGE("trace_event_raw_event_tcp_event_sk", 72),
STACK_USAGE("trace_raw_output_net_dev_template", 24),
STACK_USAGE("trace_raw_output_tcp_event_sk", 24),
STACK_USAGE("__bpf_trace_skb_copy_datagram_iovec", 0),
STACK_USAGE("__traceiter_skb_copy_datagram_iovec", 24),
STACK_USAGE("perf_trace_skb_copy_datagram_iovec", 64),
STACK_USAGE("trace_event_raw_event_skb_copy_datagram_iovec", 80),
STACK_USAGE("trace_raw_output_skb_copy_datagram_iovec", 24),
STACK_USAGE("__bpf_trace_qdisc_create", 0),
STACK_USAGE("__traceiter_qdisc_create", 32),
STACK_USAGE("perf_trace_qdisc_create", 96),
STACK_USAGE("trace_event_raw_event_qdisc_create", 112),
STACK_USAGE("trace_raw_output_qdisc_create", 24),
STACK_USAGE("__bpf_trace_br_fdb_add", 0),
STACK_USAGE("__traceiter_br_fdb_add", 48),
STACK_USAGE("perf_trace_br_fdb_add", 112),
STACK_USAGE("trace_event_raw_event_br_fdb_add", 112),
STACK_USAGE("trace_raw_output_br_fdb_add", 40),
STACK_USAGE("__bpf_trace_inet_sock_set_state", 0),
STACK_USAGE("__traceiter_inet_sock_set_state", 32),
STACK_USAGE("perf_trace_inet_sock_set_state", 72),
STACK_USAGE("trace_event_raw_event_inet_sock_set_state", 88),
STACK_USAGE("trace_raw_output_inet_sock_set_state", 104),
STACK_USAGE("__bpf_trace_fib_table_lookup", 0),
STACK_USAGE("__traceiter_fib_table_lookup", 40),
STACK_USAGE("perf_trace_fib_table_lookup", 80),
STACK_USAGE("trace_event_raw_event_fib_table_lookup", 96),
STACK_USAGE("trace_raw_output_fib_table_lookup", 80),
STACK_USAGE("__traceiter_net_dev_queue", 16),
STACK_USAGE("__bpf_trace_napi_poll", 0),
STACK_USAGE("__bpf_trace_net_dev_start_xmit", 0),
STACK_USAGE("__bpf_trace_page_pool_release", 0),
STACK_USAGE("__bpf_trace_qdisc_dequeue", 0),
STACK_USAGE("__traceiter_napi_poll", 32),
STACK_USAGE("__traceiter_net_dev_start_xmit", 24),
STACK_USAGE("__traceiter_page_pool_release", 40),
STACK_USAGE("__traceiter_qdisc_dequeue", 40),
STACK_USAGE("perf_trace_napi_poll", 88),
STACK_USAGE("perf_trace_net_dev_start_xmit", 88),
STACK_USAGE("perf_trace_page_pool_release", 72),
STACK_USAGE("perf_trace_qdisc_dequeue", 80),
STACK_USAGE("trace_event_raw_event_napi_poll", 104),
STACK_USAGE("trace_event_raw_event_net_dev_start_xmit", 88),
STACK_USAGE("trace_event_raw_event_page_pool_release", 96),
STACK_USAGE("trace_event_raw_event_qdisc_dequeue", 96),
STACK_USAGE("trace_raw_output_napi_poll", 24),
STACK_USAGE("trace_raw_output_net_dev_start_xmit", 96),
STACK_USAGE("trace_raw_output_page_pool_release", 24),
STACK_USAGE("trace_raw_output_qdisc_dequeue", 24),
STACK_USAGE("__traceiter_netif_receive_skb", 16),
STACK_USAGE("__bpf_trace_neigh__update", 0),
STACK_USAGE("perf_trace_neigh__update", 80),
STACK_USAGE("trace_event_raw_event_neigh__update", 88),
STACK_USAGE("trace_raw_output_neigh__update", 88),
STACK_USAGE("__traceiter_netif_rx", 16),
STACK_USAGE("__bpf_trace_net_dev_rx_verbose_template", 0),
STACK_USAGE("perf_trace_net_dev_rx_verbose_template", 80),
STACK_USAGE("trace_event_raw_event_net_dev_rx_verbose_template", 88),
STACK_USAGE("trace_raw_output_net_dev_rx_verbose_template", 112),
STACK_USAGE("__traceiter_tcp_receive_reset", 16),
STACK_USAGE("__traceiter_tcp_destroy_sock", 16),
STACK_USAGE("__traceiter_tcp_rcv_space_adjust", 16),
STACK_USAGE("__bpf_trace_tcp_retransmit_synack", 0),
STACK_USAGE("__traceiter_tcp_retransmit_synack", 24),
STACK_USAGE("perf_trace_tcp_retransmit_synack", 64),
STACK_USAGE("trace_event_raw_event_tcp_retransmit_synack", 80),
STACK_USAGE("trace_raw_output_tcp_retransmit_synack", 24),
STACK_USAGE("__bpf_trace_inet_sk_error_report", 0),
STACK_USAGE("__traceiter_inet_sk_error_report", 16),
STACK_USAGE("perf_trace_inet_sk_error_report", 56),
STACK_USAGE("trace_event_raw_event_inet_sk_error_report", 72),
STACK_USAGE("trace_raw_output_inet_sk_error_report", 48),
STACK_USAGE("__traceiter_neigh_update_done", 24),
STACK_USAGE("__traceiter_napi_gro_frags_entry", 16),
STACK_USAGE("__traceiter_neigh_timer_handler", 24),
STACK_USAGE("__traceiter_napi_gro_receive_entry", 16),
STACK_USAGE("__traceiter_neigh_event_send_done", 24),
STACK_USAGE("__bpf_trace_tcp_probe", 0),
STACK_USAGE("__traceiter_tcp_probe", 24),
STACK_USAGE("perf_trace_tcp_probe", 72),
STACK_USAGE("trace_event_raw_event_tcp_probe", 80),
STACK_USAGE("trace_raw_output_tcp_probe", 72),
STACK_USAGE("__bpf_trace_neigh_create", 0),
STACK_USAGE("__traceiter_neigh_create", 48),
STACK_USAGE("perf_trace_neigh_create", 88),
STACK_USAGE("trace_event_raw_event_neigh_create", 104),
STACK_USAGE("trace_raw_output_neigh_create", 24),
STACK_USAGE("__traceiter_neigh_event_send_dead", 24),
STACK_USAGE("__traceiter_netif_receive_skb_entry", 16),
STACK_USAGE("__traceiter_neigh_cleanup_and_release", 24),
STACK_USAGE("__traceiter_netif_receive_skb_list_entry", 16),
STACK_USAGE("__traceiter_netif_rx_entry", 16),
STACK_USAGE("__bpf_trace_net_dev_rx_exit_template", 0),
STACK_USAGE("perf_trace_net_dev_rx_exit_template", 56),
STACK_USAGE("trace_event_raw_event_net_dev_rx_exit_template", 72),
STACK_USAGE("trace_raw_output_net_dev_rx_exit_template", 24),
STACK_USAGE("__traceiter_napi_gro_frags_exit", 16),
STACK_USAGE("__traceiter_napi_gro_receive_exit", 16),
STACK_USAGE("__traceiter_netif_receive_skb_exit", 16),
STACK_USAGE("__traceiter_netif_rx_exit", 16),
STACK_USAGE("__traceiter_netif_receive_skb_list_exit", 16),
STACK_USAGE("__bpf_trace_tcp_event_skb", 0),
STACK_USAGE("perf_trace_tcp_event_skb", 56),
STACK_USAGE("trace_event_raw_event_tcp_event_skb", 72),
STACK_USAGE("trace_raw_output_tcp_event_skb", 24),
STACK_USAGE("__traceiter_tcp_bad_csum", 16),
STACK_USAGE("__bpf_trace_br_fdb_external_learn_add", 0),
STACK_USAGE("__bpf_trace_page_pool_state_release", 0),
STACK_USAGE("__traceiter_br_fdb_external_learn_add", 40),
STACK_USAGE("__traceiter_page_pool_state_release", 32),
STACK_USAGE("perf_trace_br_fdb_external_learn_add", 112),
STACK_USAGE("perf_trace_page_pool_state_release", 72),
STACK_USAGE("trace_event_raw_event_br_fdb_external_learn_add", 136),
STACK_USAGE("trace_event_raw_event_page_pool_state_release", 88),
STACK_USAGE("trace_raw_output_br_fdb_external_learn_add", 32),
STACK_USAGE("trace_raw_output_page_pool_state_release", 24),
STACK_USAGE("__bpf_trace_qdisc_enqueue", 0),
STACK_USAGE("__traceiter_qdisc_enqueue", 32),
STACK_USAGE("perf_trace_qdisc_enqueue", 72),
STACK_USAGE("trace_event_raw_event_qdisc_enqueue", 88),
STACK_USAGE("trace_raw_output_qdisc_enqueue", 24),
STACK_USAGE("__bpf_trace_tcp_event_sk_skb", 0),
STACK_USAGE("perf_trace_tcp_event_sk_skb", 64),
STACK_USAGE("trace_event_raw_event_tcp_event_sk_skb", 80),
STACK_USAGE("trace_raw_output_tcp_event_sk_skb", 80),
STACK_USAGE("__bpf_trace_page_pool_state_hold", 0),
STACK_USAGE("__traceiter_page_pool_state_hold", 32),
STACK_USAGE("perf_trace_page_pool_state_hold", 72),
STACK_USAGE("trace_event_raw_event_page_pool_state_hold", 88),
STACK_USAGE("trace_raw_output_page_pool_state_hold", 24),
STACK_USAGE("__bpf_trace_fdb_delete", 0),
STACK_USAGE("__traceiter_fdb_delete", 24),
STACK_USAGE("perf_trace_fdb_delete", 104),
STACK_USAGE("trace_event_raw_event_fdb_delete", 112),
STACK_USAGE("trace_raw_output_fdb_delete", 32),
STACK_USAGE("__bpf_trace_net_dev_xmit", 0),
STACK_USAGE("__bpf_trace_sock_rcvqueue_full", 0),
STACK_USAGE("__traceiter_net_dev_xmit", 40),
STACK_USAGE("__traceiter_sock_rcvqueue_full", 24),
STACK_USAGE("perf_trace_net_dev_xmit", 104),
STACK_USAGE("perf_trace_sock_rcvqueue_full", 64),
STACK_USAGE("trace_event_raw_event_net_dev_xmit", 104),
STACK_USAGE("trace_event_raw_event_sock_rcvqueue_full", 80),
STACK_USAGE("trace_raw_output_net_dev_xmit", 24),
STACK_USAGE("trace_raw_output_sock_rcvqueue_full", 24),
STACK_USAGE("__bpf_trace_neigh_update", 0),
STACK_USAGE("__traceiter_neigh_update", 48),
STACK_USAGE("perf_trace_neigh_update", 104),
STACK_USAGE("trace_event_raw_event_neigh_update", 112),
STACK_USAGE("trace_raw_output_neigh_update", 136),
STACK_USAGE("__bpf_trace_qdisc_reset", 0),
STACK_USAGE("__traceiter_qdisc_reset", 16),
STACK_USAGE("perf_trace_qdisc_reset", 88),
STACK_USAGE("trace_event_raw_event_qdisc_reset", 96),
STACK_USAGE("trace_raw_output_qdisc_reset", 24),
STACK_USAGE("__bpf_trace_kfree_skb", 0),
STACK_USAGE("__traceiter_kfree_skb", 32),
STACK_USAGE("perf_trace_kfree_skb", 72),
STACK_USAGE("trace_event_raw_event_kfree_skb", 88),
STACK_USAGE("trace_raw_output_kfree_skb", 48),
STACK_USAGE("__bpf_trace_page_pool_update_nid", 0),
STACK_USAGE("__traceiter_page_pool_update_nid", 24),
STACK_USAGE("perf_trace_page_pool_update_nid", 64),
STACK_USAGE("trace_event_raw_event_page_pool_update_nid", 80),
STACK_USAGE("trace_raw_output_page_pool_update_nid", 24),
STACK_USAGE("__bpf_trace_sock_exceed_buf_limit", 0),
STACK_USAGE("__traceiter_sock_exceed_buf_limit", 40),
STACK_USAGE("perf_trace_sock_exceed_buf_limit", 88),
STACK_USAGE("trace_event_raw_event_sock_exceed_buf_limit", 96),
STACK_USAGE("trace_raw_output_sock_exceed_buf_limit", 104),
STACK_USAGE("__bpf_trace_br_fdb_update", 0),
STACK_USAGE("__traceiter_br_fdb_update", 48),
STACK_USAGE("perf_trace_br_fdb_update", 120),
STACK_USAGE("trace_event_raw_event_br_fdb_update", 128),
STACK_USAGE("trace_raw_output_br_fdb_update", 40),
STACK_USAGE("__bpf_trace_net_dev_xmit_timeout", 0),
STACK_USAGE("__traceiter_net_dev_xmit_timeout", 24),
STACK_USAGE("__traceiter_tcp_retransmit_skb", 24),
STACK_USAGE("perf_trace_net_dev_xmit_timeout", 104),
STACK_USAGE("trace_event_raw_event_net_dev_xmit_timeout", 120),
STACK_USAGE("trace_raw_output_net_dev_xmit_timeout", 24),
STACK_USAGE("rtnl_net_dumpid", 184),
STACK_USAGE("rtnl_net_notifyid", 88),
STACK_USAGE("net_ns_init", 0),
STACK_USAGE("free_exit_list", 24),
STACK_USAGE("ops_init", 56),
STACK_USAGE("register_pernet_operations", 64),
STACK_USAGE("register_pernet_subsys", 8),
STACK_USAGE("unregister_pernet_subsys", 32),
STACK_USAGE("register_pernet_device", 24),
STACK_USAGE("unregister_pernet_device", 32),
STACK_USAGE("netns_get", 16),
STACK_USAGE("netns_put", 0),
STACK_USAGE("netns_install", 32),
STACK_USAGE("netns_owner", 0),
STACK_USAGE("ops_free_list", 40),
STACK_USAGE("net_eq_idr", 0),
STACK_USAGE("peernet2id_alloc", 56),
STACK_USAGE("peernet2id", 24),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("peernet_has_id", 0),
STACK_USAGE("get_net_ns_by_id", 16),
STACK_USAGE("setup_net", 72),
STACK_USAGE("net_defaults_init_net", 0),
STACK_USAGE("net_defaults_init", 0),
STACK_USAGE("net_drop_ns", 8),
STACK_USAGE("copy_net_ns", 40),
STACK_USAGE("net_ns_get_ownership", 32),
STACK_USAGE("cleanup_net", 80),
STACK_USAGE("net_ns_barrier", 0),
STACK_USAGE("__put_net", 0),
STACK_USAGE("get_net_ns", 8),
STACK_USAGE("get_net_ns_by_fd", 16),
STACK_USAGE("get_net_ns_by_pid", 16),
STACK_USAGE("net_ns_net_init", 0),
STACK_USAGE("net_ns_net_exit", 0),
STACK_USAGE("rtnl_net_newid", 152),
STACK_USAGE("rtnl_net_fill", 48),
STACK_USAGE("rtnl_net_getid", 168),
STACK_USAGE("rtnl_net_dumpid_one", 16),
STACK_USAGE("read_classid", 0),
STACK_USAGE("write_classid", 168),
STACK_USAGE("task_cls_state", 16),
STACK_USAGE("cgrp_css_alloc", 0),
STACK_USAGE("cgrp_css_online", 0),
STACK_USAGE("cgrp_css_free", 0),
STACK_USAGE("update_classid_sock", 16),
STACK_USAGE("cgrp_attach", 72),
STACK_USAGE("register_netevent_notifier", 0),
STACK_USAGE("unregister_netevent_notifier", 0),
STACK_USAGE("call_netevent_notifiers", 0),
STACK_USAGE("queue_process", 80),
STACK_USAGE("netpoll_poll_dev", 48),
STACK_USAGE("netpoll_poll_disable", 16),
STACK_USAGE("netpoll_poll_enable", 8),
STACK_USAGE("zap_completion_queue", 32),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("netpoll_send_skb", 96),
STACK_USAGE("netpoll_send_udp", 96),
STACK_USAGE("netpoll_print_options", 8),
STACK_USAGE("netpoll_parse_options", 64),
STACK_USAGE("__netpoll_setup", 32),
STACK_USAGE("netpoll_setup", 80),
STACK_USAGE("netpoll_start_xmit", 48),
STACK_USAGE("netpoll_init", 0),
STACK_USAGE("rcu_cleanup_netpoll_info", 24),
STACK_USAGE("__netpoll_cleanup", 16),
STACK_USAGE("__netpoll_free", 8),
STACK_USAGE("netpoll_cleanup", 8),
STACK_USAGE("put_page", 0),
STACK_USAGE("page_pool_create", 24),
STACK_USAGE("page_pool_refill_alloc_cache", 8),
STACK_USAGE("__page_pool_alloc_page_order", 24),
STACK_USAGE("__page_pool_alloc_pages_slow", 48),
STACK_USAGE("page_pool_alloc_pages", 16),
STACK_USAGE("page_pool_release_page", 16),
STACK_USAGE("page_pool_return_page", 8),
STACK_USAGE("page_pool_put_defragged_page", 32),
STACK_USAGE("page_pool_put_page_bulk", 48),
STACK_USAGE("page_pool_alloc_frag", 40),
STACK_USAGE("trace_page_pool_state_hold", 0),
STACK_USAGE("page_pool_release", 32),
STACK_USAGE("page_pool_release_retry", 8),
STACK_USAGE("page_pool_use_xdp_mem", 24),
STACK_USAGE("page_pool_destroy", 16),
STACK_USAGE("page_pool_update_nid", 16),
STACK_USAGE("page_pool_return_skb_page", 16),
STACK_USAGE("ptp_classify_raw", 32),
STACK_USAGE("ptp_parse_header", 0),
STACK_USAGE("ptp_msg_is_sync", 0),
STACK_USAGE("ptp_classifier_init", 24),
STACK_USAGE("reqsk_queue_alloc", 8),
STACK_USAGE("reqsk_fastopen_remove", 32),
STACK_USAGE("if_nlmsg_size", 64),
STACK_USAGE("rtnl_unlock", 0),
STACK_USAGE("rtnl_port_fill", 64),
STACK_USAGE("rtnl_phys_port_id_fill", 56),
STACK_USAGE("rtnl_phys_port_name_fill", 56),
STACK_USAGE("rtnl_trylock", 0),
STACK_USAGE("rtnl_phys_switch_id_fill", 64),
STACK_USAGE("rtnl_fill_stats", 32),
STACK_USAGE("rtnl_fill_vfinfo", 392),
STACK_USAGE("rtnl_is_locked", 0),
STACK_USAGE("refcount_dec_and_rtnl_lock", 0),
STACK_USAGE("lockdep_rtnl_is_held", 0),
STACK_USAGE("rtnl_fill_vf", 64),
STACK_USAGE("rtnl_fill_link_ifmap", 40),
STACK_USAGE("rtnl_xdp_fill", 64),
STACK_USAGE("nla_put_string", 24),
STACK_USAGE("put_master_ifindex", 32),
STACK_USAGE("nla_put_ifalias", 296),
STACK_USAGE("rtnl_fill_link_netnsid", 48),
STACK_USAGE("rtnl_fill_link_af", 48),
STACK_USAGE("rtnl_get_link", 16),
STACK_USAGE("rtnl_fill_prop_list", 48),
STACK_USAGE("rtnl_fill_proto_down", 48),
STACK_USAGE("rtnl_fill_ifinfo", 72),
STACK_USAGE("rtnl_register_internal", 56),
STACK_USAGE("nla_nest_cancel", 0),
STACK_USAGE("local_bh_disable", 0),
STACK_USAGE("rtnl_get_net_ns_capable", 24),
STACK_USAGE("rtnl_dump_ifinfo", 744),
STACK_USAGE("rtnl_nla_parse_ifla", 0),
STACK_USAGE("rtnl_link_get_net", 8),
STACK_USAGE("rtnl_link_get_net_capable", 24),
STACK_USAGE("validate_linkmsg", 56),
STACK_USAGE("rtnl_register_module", 0),
STACK_USAGE("do_set_proto_down", 72),
STACK_USAGE("do_setlink", 312),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rtnl_register", 16),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("rtnl_unregister", 24),
STACK_USAGE("rtnl_setlink", 536),
STACK_USAGE("rtnl_delete_link", 32),
STACK_USAGE("rtnl_dellink", 680),
STACK_USAGE("rtnl_configure_link", 16),
STACK_USAGE("rtnl_create_link", 56),
STACK_USAGE("rtnl_unregister_all", 16),
STACK_USAGE("rtnl_newlink", 1096),
STACK_USAGE("rtnl_getlink", 680),
STACK_USAGE("rtnl_linkprop", 696),
STACK_USAGE("rtnl_newlinkprop", 0),
STACK_USAGE("rtnl_dellinkprop", 0),
STACK_USAGE("__rtnl_link_register", 32),
STACK_USAGE("rtnl_dump_all", 72),
STACK_USAGE("rtmsg_ifinfo_build_skb", 64),
STACK_USAGE("rtmsg_ifinfo_send", 0),
STACK_USAGE("rtmsg_ifinfo", 16),
STACK_USAGE("rtmsg_ifinfo_newnet", 16),
STACK_USAGE("nlmsg_populate_fdb_fill", 56),
STACK_USAGE("rtnl_fdb_notify", 56),
STACK_USAGE("ndo_dflt_fdb_add", 8),
STACK_USAGE("rtnl_link_register", 32),
STACK_USAGE("fdb_vid_parse", 8),
STACK_USAGE("rtnl_fdb_add", 200),
STACK_USAGE("ndo_dflt_fdb_del", 0),
STACK_USAGE("rtnl_fdb_del", 200),
STACK_USAGE("ndo_dflt_fdb_dump", 72),
STACK_USAGE("__rtnl_link_unregister", 72),
STACK_USAGE("rtnl_fdb_dump", 600),
STACK_USAGE("rtnl_fdb_get", 232),
STACK_USAGE("ndo_dflt_bridge_getlink", 80),
STACK_USAGE("rtnl_bridge_getlink", 584),
STACK_USAGE("rtnl_link_unregister", 96),
STACK_USAGE("rtnl_bridge_notify", 24),
STACK_USAGE("rtnl_bridge_setlink", 48),
STACK_USAGE("rtnl_bridge_dellink", 40),
STACK_USAGE("rtnl_fill_statsinfo", 120),
STACK_USAGE("rtnl_af_lookup", 8),
STACK_USAGE("if_nlmsg_stats_size", 48),
STACK_USAGE("rtnl_stats_get_parse", 136),
STACK_USAGE("rtnl_af_register", 8),
STACK_USAGE("rtnl_stats_get", 88),
STACK_USAGE("rtnl_stats_dump", 112),
STACK_USAGE("rtnl_af_unregister", 8),
STACK_USAGE("rtnl_offload_xstats_notify", 72),
STACK_USAGE("rtnl_stats_set", 72),
STACK_USAGE("rtnetlink_rcv_msg", 568),
STACK_USAGE("rtnetlink_rcv", 0),
STACK_USAGE("rtnetlink_bind", 0),
STACK_USAGE("rtnetlink_event", 8),
STACK_USAGE("rtnetlink_net_init", 72),
STACK_USAGE("rtnl_have_link_slave_info", 8),
STACK_USAGE("rtnetlink_net_exit", 8),
STACK_USAGE("rtnetlink_init", 0),
STACK_USAGE("rtnl_link_fill", 56),
STACK_USAGE("rtnl_lock", 0),
STACK_USAGE("rtnetlink_send", 0),
STACK_USAGE("rtnl_unicast", 0),
STACK_USAGE("rcu_read_unlock", 0),
STACK_USAGE("rtnl_notify", 0),
STACK_USAGE("rtnl_set_sk_err", 0),
STACK_USAGE("rtnetlink_put_metrics", 104),
STACK_USAGE("rtnl_lock_killable", 0),
STACK_USAGE("nlmsg_parse_deprecated_strict", 16),
STACK_USAGE("rtnl_put_cacheinfo", 64),
STACK_USAGE("set_operstate", 16),
STACK_USAGE("rtnl_kfree_skbs", 0),
STACK_USAGE("__rtnl_unlock", 16),
STACK_USAGE("__scm_destroy", 24),
STACK_USAGE("__scm_send", 96),
STACK_USAGE("put_cmsg", 24),
STACK_USAGE("put_cmsg_scm_timestamping64", 56),
STACK_USAGE("put_cmsg_scm_timestamping", 56),
STACK_USAGE("scm_detach_fds", 56),
STACK_USAGE("scm_fp_dup", 16),
STACK_USAGE("secure_tcp_ts_off", 32),
STACK_USAGE("secure_tcp_seq", 48),
STACK_USAGE("secure_ipv4_port_ephemeral", 40),
STACK_USAGE("secure_tcpv6_ts_off", 48),
STACK_USAGE("secure_tcpv6_seq", 64),
STACK_USAGE("secure_ipv6_port_ephemeral", 56),
STACK_USAGE("net_test_loopback_validate", 40),
STACK_USAGE("__net_test_loopback", 80),
STACK_USAGE("net_test_netif_carrier", 0),
STACK_USAGE("net_test_phy_phydev", 0),
STACK_USAGE("net_test_phy_loopback_enable", 0),
STACK_USAGE("net_test_phy_loopback_disable", 0),
STACK_USAGE("net_test_phy_loopback_udp", 56),
STACK_USAGE("net_test_phy_loopback_udp_mtu", 56),
STACK_USAGE("net_test_phy_loopback_tcp", 56),
STACK_USAGE("net_selftest", 80),
STACK_USAGE("net_selftest_get_count", 0),
STACK_USAGE("net_selftest_get_strings", 8),
STACK_USAGE("__copy_skb_header", 24),
STACK_USAGE("csum_block_add_ext", 4),
STACK_USAGE("__skb_clone", 16),
STACK_USAGE("alloc_skb_for_msg", 16),
STACK_USAGE("trace_consume_skb", 0),
STACK_USAGE("skb_morph", 16),
STACK_USAGE("mm_account_pinned_pages", 32),
STACK_USAGE("mm_unaccount_pinned_pages", 0),
STACK_USAGE("msg_zerocopy_alloc", 32),
STACK_USAGE("skb_over_panic", 8),
STACK_USAGE("csum_partial_ext", 0),
STACK_USAGE("msg_zerocopy_realloc", 40),
STACK_USAGE("skb_under_panic", 8),
STACK_USAGE("kfree_skb", 8),
STACK_USAGE("msg_zerocopy_callback", 56),
STACK_USAGE("msg_zerocopy_put_abort", 0),
STACK_USAGE("skb_zerocopy_iter_dgram", 0),
STACK_USAGE("skb_zerocopy_iter_stream", 96),
STACK_USAGE("skb_zerocopy_clone", 24),
STACK_USAGE("__napi_alloc_frag_align", 16),
STACK_USAGE("skb_copy_ubufs", 128),
STACK_USAGE("__netdev_alloc_frag_align", 32),
STACK_USAGE("skb_clone", 16),
STACK_USAGE("skb_headers_offset_update", 0),
STACK_USAGE("skb_copy_header", 16),
STACK_USAGE("skb_copy", 24),
STACK_USAGE("__pskb_copy_fclone", 32),
STACK_USAGE("net_zcopy_get", 0),
STACK_USAGE("pskb_expand_head", 88),
STACK_USAGE("skb_realloc_headroom", 16),
STACK_USAGE("__skb_unclone_keeptruesize", 32),
STACK_USAGE("skb_expand_head", 40),
STACK_USAGE("skb_copy_expand", 32),
STACK_USAGE("local_bh_disable", 0),
STACK_USAGE("__skb_pad", 40),
STACK_USAGE("pskb_put", 0),
STACK_USAGE("skb_put", 0),
STACK_USAGE("skb_push", 0),
STACK_USAGE("skb_pull", 0),
STACK_USAGE("skb_pull_data", 0),
STACK_USAGE("skb_trim", 0),
STACK_USAGE("___pskb_trim", 56),
STACK_USAGE("pskb_trim_rcsum_slow", 56),
STACK_USAGE("__kunmap_atomic", 0),
STACK_USAGE("__pskb_pull_tail", 56),
STACK_USAGE("__build_skb", 24),
STACK_USAGE("skb_copy_bits", 88),
STACK_USAGE("skb_fill_page_desc", 0),
STACK_USAGE("sock_spd_release", 0),
STACK_USAGE("__splice_segment", 72),
STACK_USAGE("build_skb", 24),
STACK_USAGE("__skb_splice_bits", 56),
STACK_USAGE("skb_splice_bits", 488),
STACK_USAGE("sendmsg_unlocked", 0),
STACK_USAGE("sendpage_unlocked", 0),
STACK_USAGE("__skb_send_sock", 216),
STACK_USAGE("build_skb_around", 24),
STACK_USAGE("skb_send_sock_locked", 0),
STACK_USAGE("skb_send_sock", 0),
STACK_USAGE("skb_store_bits", 88),
STACK_USAGE("__skb_checksum", 120),
STACK_USAGE("skb_checksum", 24),
STACK_USAGE("skb_copy_and_csum_bits", 112),
STACK_USAGE("__napi_build_skb", 24),
STACK_USAGE("__skb_checksum_complete_head", 40),
STACK_USAGE("__skb_checksum_complete", 56),
STACK_USAGE("warn_crc32c_csum_update", 0),
STACK_USAGE("warn_crc32c_csum_combine", 0),
STACK_USAGE("skb_zerocopy_headlen", 0),
STACK_USAGE("skb_zerocopy", 48),
STACK_USAGE("local_bh_enable", 0),
STACK_USAGE("skb_copy_and_csum_dev", 24),
STACK_USAGE("napi_build_skb", 16),
STACK_USAGE("skb_dequeue", 24),
STACK_USAGE("skb_dequeue_tail", 24),
STACK_USAGE("__skb_frag_ref", 0),
STACK_USAGE("skb_queue_purge", 24),
STACK_USAGE("refcount_dec_and_test", 8),
STACK_USAGE("skb_rbtree_purge", 32),
STACK_USAGE("__skb_frag_unref", 8),
STACK_USAGE("skb_queue_head", 24),
STACK_USAGE("skb_queue_tail", 24),
STACK_USAGE("skb_unlink", 24),
STACK_USAGE("skb_append", 32),
STACK_USAGE("skb_split", 48),
STACK_USAGE("skb_prepare_for_shift", 24),
STACK_USAGE("skb_shift", 80),
STACK_USAGE("skb_prepare_seq_read", 0),
STACK_USAGE("skb_seq_read", 64),
STACK_USAGE("skb_abort_seq_read", 0),
STACK_USAGE("skb_ts_get_next_block", 0),
STACK_USAGE("skb_ts_finish", 0),
STACK_USAGE("skb_find_text", 96),
STACK_USAGE("skb_append_pagefrags", 0),
STACK_USAGE("skb_pull_rcsum", 8),
STACK_USAGE("skb_segment_list", 112),
STACK_USAGE("__alloc_skb", 64),
STACK_USAGE("skb_segment", 256),
STACK_USAGE("skb_init", 0),
STACK_USAGE("__skb_to_sgvec", 64),
STACK_USAGE("skb_to_sgvec", 8),
STACK_USAGE("skb_to_sgvec_nomark", 0),
STACK_USAGE("skb_cow_data", 64),
STACK_USAGE("nf_reset_ct", 8),
STACK_USAGE("sock_rmem_free", 0),
STACK_USAGE("sock_queue_err_skb", 32),
STACK_USAGE("sock_dequeue_err_skb", 48),
STACK_USAGE("skb_clone_sk", 32),
STACK_USAGE("__skb_complete_tx_timestamp", 8),
STACK_USAGE("__netdev_alloc_skb", 56),
STACK_USAGE("skb_complete_tx_timestamp", 48),
STACK_USAGE("__skb_tstamp_tx", 64),
STACK_USAGE("skb_tstamp_tx", 0),
STACK_USAGE("skb_complete_wifi_ack", 32),
STACK_USAGE("skb_partial_csum_set", 24),
STACK_USAGE("skb_checksum_setup_ip", 40),
STACK_USAGE("skb_checksum_setup", 64),
STACK_USAGE("skb_checksum_trimmed", 48),
STACK_USAGE("__skb_warn_lro_forwarding", 8),
STACK_USAGE("kfree_skb_partial", 8),
STACK_USAGE("skb_try_coalesce", 80),
STACK_USAGE("skb_scrub_packet", 16),
STACK_USAGE("skb_gso_validate_network_len", 0),
STACK_USAGE("skb_gso_validate_mac_len", 0),
STACK_USAGE("__napi_alloc_skb", 32),
STACK_USAGE("skb_vlan_untag", 24),
STACK_USAGE("skb_ensure_writable", 24),
STACK_USAGE("__skb_vlan_pop", 32),
STACK_USAGE("skb_vlan_pop", 40),
STACK_USAGE("skb_vlan_push", 48),
STACK_USAGE("skb_eth_pop", 16),
STACK_USAGE("skb_eth_push", 40),
STACK_USAGE("skb_mpls_push", 64),
STACK_USAGE("skb_mpls_pop", 64),
STACK_USAGE("skb_mpls_update_lse", 48),
STACK_USAGE("skb_mpls_dec_ttl", 16),
STACK_USAGE("alloc_skb_with_frags", 64),
STACK_USAGE("skb_add_rx_frag", 0),
STACK_USAGE("skb_coalesce_rx_frag", 0),
STACK_USAGE("pskb_carve", 88),
STACK_USAGE("pskb_extract", 32),
STACK_USAGE("skb_condense", 8),
STACK_USAGE("__skb_ext_alloc", 0),
STACK_USAGE("__skb_ext_set", 24),
STACK_USAGE("skb_ext_add", 56),
STACK_USAGE("__skb_ext_del", 32),
STACK_USAGE("__skb_ext_put", 32),
STACK_USAGE("skb_release_data", 48),
STACK_USAGE("skb_release_head_state", 8),
STACK_USAGE("__kfree_skb", 8),
STACK_USAGE("kfree_skb_reason", 8),
STACK_USAGE("kfree_skb_list_reason", 24),
STACK_USAGE("skb_dump", 208),
STACK_USAGE("trace_kfree_skb", 0),
STACK_USAGE("virt_to_head_page", 0),
STACK_USAGE("skb_tx_error", 8),
STACK_USAGE("consume_skb", 8),
STACK_USAGE("__consume_stateless_skb", 8),
STACK_USAGE("__kfree_skb_defer", 8),
STACK_USAGE("napi_skb_free_stolen_head", 8),
STACK_USAGE("napi_consume_skb", 8),
STACK_USAGE("sk_psock_write_space", 16),
STACK_USAGE("sk_psock_strp_read", 48),
STACK_USAGE("sk_psock_strp_read_done", 0),
STACK_USAGE("sk_psock_strp_parse", 40),
STACK_USAGE("sk_psock_strp_data_ready", 16),
STACK_USAGE("sk_psock_init_strp", 0),
STACK_USAGE("sk_psock_start_strp", 0),
STACK_USAGE("sk_psock_stop_strp", 16),
STACK_USAGE("sk_psock_verdict_recv", 56),
STACK_USAGE("sk_psock_verdict_data_ready", 40),
STACK_USAGE("sk_psock_start_verdict", 0),
STACK_USAGE("sk_psock_stop_verdict", 16),
STACK_USAGE("sk_msg_return_zero", 48),
STACK_USAGE("sk_msg_return", 48),
STACK_USAGE("sk_msg_free_elem", 16),
STACK_USAGE("sk_msg_free_nocharge", 48),
STACK_USAGE("sk_msg_free", 40),
STACK_USAGE("__sk_msg_free_partial", 64),
STACK_USAGE("sk_msg_free_partial", 0),
STACK_USAGE("sk_msg_free_partial_nocharge", 40),
STACK_USAGE("sk_msg_trim", 48),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("sk_msg_alloc", 56),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("sock_drop", 0),
STACK_USAGE("sk_msg_zerocopy_from_iter", 232),
STACK_USAGE("sk_psock_next_msg", 24),
STACK_USAGE("sk_msg_memcopy_from_iter", 48),
STACK_USAGE("sk_msg_recvmsg", 112),
STACK_USAGE("sk_msg_is_readable", 8),
STACK_USAGE("sk_psock_skb_ingress_enqueue", 64),
STACK_USAGE("sk_psock_skb_ingress_self", 48),
STACK_USAGE("sk_psock_backlog", 80),
STACK_USAGE("sk_psock_init", 40),
STACK_USAGE("sk_psock_link_pop", 24),
STACK_USAGE("sk_psock_stop", 88),
STACK_USAGE("sk_psock_destroy", 48),
STACK_USAGE("sk_psock_drop", 24),
STACK_USAGE("sk_psock_msg_verdict", 48),
STACK_USAGE("sk_msg_clone", 64),
STACK_USAGE("sk_psock_skb_redirect", 40),
STACK_USAGE("sk_psock_tls_strp_read", 48),
STACK_USAGE("sk_psock_verdict_apply", 40),
STACK_USAGE("sock_setsockopt", 104),
STACK_USAGE("sk_backlog_rcv", 16),
STACK_USAGE("sk_get_peer_cred", 16),
STACK_USAGE("cred_to_ucred", 24),
STACK_USAGE("groups_to_user", 40),
STACK_USAGE("sock_getsockopt", 216),
STACK_USAGE("sk_ns_capable", 16),
STACK_USAGE("sk_capable", 8),
STACK_USAGE("sock_lock_init", 16),
STACK_USAGE("sk_net_capable", 16),
STACK_USAGE("sk_prot_alloc", 40),
STACK_USAGE("sk_alloc", 40),
STACK_USAGE("__sk_destruct", 32),
STACK_USAGE("sk_destruct", 16),
STACK_USAGE("__sk_free", 16),
STACK_USAGE("sk_free", 0),
STACK_USAGE("sk_init_common", 16),
STACK_USAGE("dst_negative_advice", 16),
STACK_USAGE("sk_clone_lock", 40),
STACK_USAGE("sk_free_unlock_clone", 8),
STACK_USAGE("sk_setup_caps", 16),
STACK_USAGE("sock_wfree", 8),
STACK_USAGE("__sock_wfree", 0),
STACK_USAGE("skb_set_owner_w", 16),
STACK_USAGE("skb_orphan_partial", 24),
STACK_USAGE("sock_rfree", 0),
STACK_USAGE("sock_efree", 0),
STACK_USAGE("sock_pfree", 0),
STACK_USAGE("sock_i_uid", 16),
STACK_USAGE("sock_i_ino", 24),
STACK_USAGE("sock_wmalloc", 24),
STACK_USAGE("sk_wake_async", 24),
STACK_USAGE("sock_ofree", 0),
STACK_USAGE("sock_omalloc", 16),
STACK_USAGE("sk_stream_moderate_sndbuf", 0),
STACK_USAGE("sock_kmalloc", 16),
STACK_USAGE("sock_kfree_s", 16),
STACK_USAGE("sock_kzfree_s", 16),
STACK_USAGE("sock_alloc_send_pskb", 120),
STACK_USAGE("sock_alloc_send_skb", 0),
STACK_USAGE("__sock_cmsg_send", 24),
STACK_USAGE("sock_cmsg_send", 32),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("skb_page_frag_refill", 24),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("sk_page_frag_refill", 16),
STACK_USAGE("__lock_sock", 96),
STACK_USAGE("__release_sock", 40),
STACK_USAGE("__sk_flush_backlog", 16),
STACK_USAGE("put_cred", 8),
STACK_USAGE("sk_wait_data", 88),
STACK_USAGE("__sk_mem_raise_allocated", 56),
STACK_USAGE("__sk_mem_schedule", 16),
STACK_USAGE("sk_set_memalloc", 0),
STACK_USAGE("__sk_mem_reduce_allocated", 8),
STACK_USAGE("__sk_mem_reclaim", 0),
STACK_USAGE("sk_set_peek_off", 0),
STACK_USAGE("sock_no_bind", 0),
STACK_USAGE("sock_no_connect", 0),
STACK_USAGE("sock_no_socketpair", 0),
STACK_USAGE("sock_no_accept", 0),
STACK_USAGE("sk_clear_memalloc", 8),
STACK_USAGE("sock_no_getname", 0),
STACK_USAGE("sock_no_ioctl", 0),
STACK_USAGE("sock_no_listen", 0),
STACK_USAGE("sock_no_shutdown", 0),
STACK_USAGE("sock_no_sendmsg", 0),
STACK_USAGE("sock_no_sendmsg_locked", 0),
STACK_USAGE("sock_no_recvmsg", 0),
STACK_USAGE("sock_no_mmap", 0),
STACK_USAGE("__receive_sock", 0),
STACK_USAGE("sock_no_sendpage", 152),
STACK_USAGE("sock_gen_cookie", 8),
STACK_USAGE("sock_no_sendpage_locked", 152),
STACK_USAGE("skb_dst_force", 16),
STACK_USAGE("sock_def_wakeup", 8),
STACK_USAGE("sock_def_error_report", 16),
STACK_USAGE("sock_def_readable", 16),
STACK_USAGE("sock_def_write_space", 16),
STACK_USAGE("sock_def_destruct", 0),
STACK_USAGE("sk_send_sigurg", 8),
STACK_USAGE("__sk_backlog_rcv", 16),
STACK_USAGE("sk_reset_timer", 8),
STACK_USAGE("sk_stop_timer", 8),
STACK_USAGE("sk_stop_timer_sync", 8),
STACK_USAGE("sock_init_data", 16),
STACK_USAGE("lock_sock_nested", 16),
STACK_USAGE("release_sock", 16),
STACK_USAGE("__lock_sock_fast", 24),
STACK_USAGE("sock_gettstamp", 56),
STACK_USAGE("sk_error_report", 8),
STACK_USAGE("sock_enable_timestamp", 0),
STACK_USAGE("sock_recv_errqueue", 56),
STACK_USAGE("sock_common_getsockopt", 0),
STACK_USAGE("sock_common_recvmsg", 24),
STACK_USAGE("sock_common_setsockopt", 0),
STACK_USAGE("sk_common_release", 16),
STACK_USAGE("sk_get_meminfo", 0),
STACK_USAGE("sock_get_timeout", 0),
STACK_USAGE("sock_prot_inuse_get", 48),
STACK_USAGE("sock_inuse_get", 32),
STACK_USAGE("sock_inuse_init_net", 8),
STACK_USAGE("sock_inuse_exit_net", 0),
STACK_USAGE("net_inuse_init", 0),
STACK_USAGE("proto_register", 40),
STACK_USAGE("proto_unregister", 16),
STACK_USAGE("sock_load_diag_module", 8),
STACK_USAGE("proto_seq_start", 8),
STACK_USAGE("proto_seq_next", 0),
STACK_USAGE("proto_seq_stop", 0),
STACK_USAGE("sock_copy_user_timeval", 32),
STACK_USAGE("proto_seq_show", 168),
STACK_USAGE("proto_init_net", 8),
STACK_USAGE("proto_exit_net", 0),
STACK_USAGE("proto_init", 0),
STACK_USAGE("sk_busy_loop_end", 8),
STACK_USAGE("sock_bind_add", 0),
STACK_USAGE("sock_update_classid", 32),
STACK_USAGE("sock_set_timeout", 40),
STACK_USAGE("__sock_queue_rcv_skb", 40),
STACK_USAGE("sock_queue_rcv_skb", 16),
STACK_USAGE("__sk_receive_skb", 56),
STACK_USAGE("copy_from_sockptr", 0),
STACK_USAGE("__sk_dst_check", 24),
STACK_USAGE("sk_dst_check", 32),
STACK_USAGE("sock_bindtoindex_locked", 24),
STACK_USAGE("sock_bindtoindex", 32),
STACK_USAGE("sock_getbindtodevice", 56),
STACK_USAGE("sk_mc_loop", 0),
STACK_USAGE("sock_set_reuseaddr", 8),
STACK_USAGE("sock_set_reuseport", 8),
STACK_USAGE("sock_no_linger", 8),
STACK_USAGE("sock_set_priority", 16),
STACK_USAGE("sock_set_sndtimeo", 16),
STACK_USAGE("sock_enable_timestamps", 8),
STACK_USAGE("sock_set_timestamp", 0),
STACK_USAGE("sock_set_timestamping", 72),
STACK_USAGE("sock_set_keepalive", 8),
STACK_USAGE("sock_set_rcvbuf", 16),
STACK_USAGE("__sock_set_mark", 0),
STACK_USAGE("sock_set_mark", 16),
STACK_USAGE("sock_release_reserved_memory", 0),
STACK_USAGE("sock_reserve_memory", 32),
STACK_USAGE("sock_diag_broadcast_destroy_work", 40),
STACK_USAGE("sock_diag_broadcast_destroy", 16),
STACK_USAGE("sock_diag_register_inet_compat", 8),
STACK_USAGE("sock_diag_unregister_inet_compat", 0),
STACK_USAGE("sock_diag_register", 16),
STACK_USAGE("sock_diag_unregister", 16),
STACK_USAGE("sock_diag_rcv_msg", 24),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("__sock_gen_cookie", 16),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("sock_diag_rcv", 8),
STACK_USAGE("sock_diag_bind", 0),
STACK_USAGE("sock_diag_destroy", 16),
STACK_USAGE("diag_net_init", 72),
STACK_USAGE("diag_net_exit", 8),
STACK_USAGE("sock_diag_init", 0),
STACK_USAGE("sock_diag_check_cookie", 24),
STACK_USAGE("sock_diag_save_cookie", 24),
STACK_USAGE("sock_diag_put_meminfo", 88),
STACK_USAGE("sock_diag_put_filterinfo", 40),
STACK_USAGE("sock_hash_get_next_key", 64),
STACK_USAGE("sock_hash_alloc", 24),
STACK_USAGE("sock_hash_free", 80),
STACK_USAGE("sock_hash_lookup_sys", 40),
STACK_USAGE("sock_hash_lookup", 40),
STACK_USAGE("sock_hash_release_progs", 8),
STACK_USAGE("bpf_sock_hash_update", 32),
STACK_USAGE("bpf_sk_redirect_hash", 56),
STACK_USAGE("bpf_msg_redirect_hash", 56),
STACK_USAGE("sock_hash_seq_find_next", 24),
STACK_USAGE("sock_hash_seq_start", 24),
STACK_USAGE("sock_hash_seq_next", 0),
STACK_USAGE("sock_hash_seq_show", 88),
STACK_USAGE("sock_hash_seq_stop", 80),
STACK_USAGE("sock_hash_init_seq_private", 0),
STACK_USAGE("sock_map_prog_update", 0),
STACK_USAGE("sock_map_bpf_prog_query", 80),
STACK_USAGE("sock_map_remove_links", 80),
STACK_USAGE("sock_map_unhash", 24),
STACK_USAGE("sock_map_close", 40),
STACK_USAGE("sock_map_iter_attach_target", 24),
STACK_USAGE("sock_map_iter_detach_target", 0),
STACK_USAGE("bpf_sockmap_iter_init", 0),
STACK_USAGE("sock_map_unref", 72),
STACK_USAGE("local_bh_disable", 0),
STACK_USAGE("sock_map_link", 72),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("local_bh_enable", 0),
STACK_USAGE("sock_map_alloc", 24),
STACK_USAGE("sock_map_free", 40),
STACK_USAGE("sock_map_release_progs", 8),
STACK_USAGE("sock_map_lookup", 16),
STACK_USAGE("sock_map_lookup_sys", 16),
STACK_USAGE("sock_map_delete_elem", 32),
STACK_USAGE("sk_psock_put", 0),
STACK_USAGE("sock_map_get_next_key", 0),
STACK_USAGE("sock_map_update_common", 64),
STACK_USAGE("sock_map_update_elem_sys", 56),
STACK_USAGE("sock_map_update_elem", 48),
STACK_USAGE("bpf_sock_map_update", 32),
STACK_USAGE("sock_map_get_from_fd", 40),
STACK_USAGE("bpf_sk_redirect_map", 32),
STACK_USAGE("bpf_msg_redirect_map", 32),
STACK_USAGE("bpf_iter_sockmap", 0),
STACK_USAGE("sock_map_seq_start", 24),
STACK_USAGE("rcu_read_unlock", 0),
STACK_USAGE("sock_map_seq_next", 24),
STACK_USAGE("sock_map_seq_show", 88),
STACK_USAGE("sock_map_seq_stop", 80),
STACK_USAGE("sock_map_init_seq_private", 0),
STACK_USAGE("sock_map_prog_detach", 48),
STACK_USAGE("sock_hash_bucket_hash", 0),
STACK_USAGE("sock_hash_delete_elem", 56),
STACK_USAGE("sock_hash_update_common", 120),
STACK_USAGE("reuseport_alloc", 32),
STACK_USAGE("reuseport_grow", 32),
STACK_USAGE("reuseport_free_rcu", 8),
STACK_USAGE("reuseport_add_sock", 32),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("reuseport_resurrect", 40),
STACK_USAGE("reuseport_detach_sock", 16),
STACK_USAGE("reuseport_stop_listen_sock", 16),
STACK_USAGE("reuseport_select_sock", 152),
STACK_USAGE("reuseport_migrate_sock", 56),
STACK_USAGE("reuseport_attach_prog", 24),
STACK_USAGE("reuseport_detach_prog", 16),
STACK_USAGE("sk_stream_wait_memory", 96),
STACK_USAGE("sk_stream_error", 0),
STACK_USAGE("sk_stream_kill_queues", 16),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("sk_stream_write_space", 16),
STACK_USAGE("sk_stream_wait_connect", 96),
STACK_USAGE("sk_stream_wait_close", 88),
STACK_USAGE("flow_limit_cpu_sysctl", 200),
STACK_USAGE("flow_limit_table_len_sysctl", 56),
STACK_USAGE("set_default_qdisc", 136),
STACK_USAGE("proc_do_dev_weight", 0),
STACK_USAGE("proc_do_rss_key", 280),
STACK_USAGE("proc_dointvec_minmax_bpf_enable", 128),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("proc_dointvec_minmax_bpf_restricted", 40),
STACK_USAGE("proc_dolongvec_minmax_bpf_restricted", 40),
STACK_USAGE("rps_sock_flow_sysctl", 144),
STACK_USAGE("fb_tunnels_only_for_init_net_sysctl_setup", 8),
STACK_USAGE("sysctl_core_net_init", 16),
STACK_USAGE("sysctl_core_net_exit", 8),
STACK_USAGE("sysctl_core_init", 0),
STACK_USAGE("tso_build_hdr", 56),
STACK_USAGE("tso_build_data", 0),
STACK_USAGE("tso_start", 64),
STACK_USAGE("tso_count_descs", 0),
STACK_USAGE("in4_pton", 88),
STACK_USAGE("in6_pton", 136),
STACK_USAGE("inet6_pton", 104),
STACK_USAGE("inet_pton_with_scope", 56),
STACK_USAGE("net_ratelimit", 0),
STACK_USAGE("inet_addr_is_any", 40),
STACK_USAGE("inet_proto_csum_replace4", 24),
STACK_USAGE("inet_proto_csum_replace16", 56),
STACK_USAGE("inet_proto_csum_replace_by_diff", 12),
STACK_USAGE("in_aton", 0),
STACK_USAGE("xdp_unreg_mem_model", 16),
STACK_USAGE("xdp_rxq_info_unreg_mem_model", 0),
STACK_USAGE("xdp_rxq_info_unreg", 8),
STACK_USAGE("__xdp_rxq_info_reg", 40),
STACK_USAGE("local_bh_disable", 0),
STACK_USAGE("xdp_rxq_info_unused", 0),
STACK_USAGE("xdp_rxq_info_is_reg", 0),
STACK_USAGE("xdp_update_skb_shared_info", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("__xdp_reg_mem_model", 64),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("local_bh_enable", 0),
STACK_USAGE("rht_lock", 16),
STACK_USAGE("xdp_reg_mem_model", 0),
STACK_USAGE("rht_unlock", 8),
STACK_USAGE("xdp_rxq_info_reg_mem_model", 16),
STACK_USAGE("xdp_mem_id_hashfn", 0),
STACK_USAGE("__xdp_return", 32),
STACK_USAGE("rht_assign_unlock", 16),
STACK_USAGE("xdp_return_frame", 48),
STACK_USAGE("xdp_return_frame_rx_napi", 48),
STACK_USAGE("xdp_flush_frame_bulk", 8),
STACK_USAGE("xdp_return_frame_bulk", 48),
STACK_USAGE("xdp_mem_id_cmp", 0),
STACK_USAGE("xdp_return_buff", 40),
STACK_USAGE("__xdp_release_frame", 16),
STACK_USAGE("xdp_attachment_setup", 16),
STACK_USAGE("xdp_convert_zc_to_xdp_frame", 48),
STACK_USAGE("xdp_warn", 0),
STACK_USAGE("xdp_alloc_skb_bulk", 0),
STACK_USAGE("__xdp_build_skb_from_frame", 56),
STACK_USAGE("rhashtable_lookup", 88),
STACK_USAGE("xdp_build_skb_from_frame", 24),
STACK_USAGE("xdpf_clone", 48),
STACK_USAGE("__xdp_mem_allocator_rcu_free", 8),
STACK_USAGE("mem_allocator_disconnect", 144),
STACK_USAGE("register_dcbevent_notifier", 0),
STACK_USAGE("unregister_dcbevent_notifier", 0),
STACK_USAGE("call_dcbevent_notifiers", 0),
STACK_USAGE("dcbnl_ieee_fill", 432),
STACK_USAGE("dcbnl_cee_pg_fill", 88),
STACK_USAGE("dcbnl_cee_fill", 96),
STACK_USAGE("dcbnl_notify", 64),
STACK_USAGE("dcbnl_ieee_notify", 0),
STACK_USAGE("dcbnl_cee_notify", 0),
STACK_USAGE("dcbnl_ieee_set", 168),
STACK_USAGE("dcbnl_ieee_get", 0),
STACK_USAGE("dcbnl_ieee_del", 168),
STACK_USAGE("dcbnl_getdcbx", 24),
STACK_USAGE("dcbnl_setdcbx", 24),
STACK_USAGE("dcbnl_getfeatcfg", 120),
STACK_USAGE("dcbnl_setfeatcfg", 104),
STACK_USAGE("dcbnl_cee_get", 0),
STACK_USAGE("dcb_doit", 232),
STACK_USAGE("nla_nest_cancel", 0),
STACK_USAGE("dcb_getapp", 16),
STACK_USAGE("dcb_setapp", 64),
STACK_USAGE("dcb_ieee_getapp_mask", 16),
STACK_USAGE("dcb_ieee_setapp", 64),
STACK_USAGE("dcb_ieee_delapp", 56),
STACK_USAGE("dcb_ieee_getapp_prio_dscp_mask_map", 16),
STACK_USAGE("dcb_ieee_getapp_dscp_prio_mask_map", 16),
STACK_USAGE("dcb_ieee_getapp_default_prio_mask", 16),
STACK_USAGE("dcbnl_getstate", 24),
STACK_USAGE("dcbnl_netdevice_event", 40),
STACK_USAGE("dcbnl_init", 8),
STACK_USAGE("dcbnl_getpfccfg", 152),
STACK_USAGE("dcbnl_getperm_hwaddr", 72),
STACK_USAGE("dcbnl_getcap", 152),
STACK_USAGE("dcbnl_getnumtcs", 104),
STACK_USAGE("dcbnl_setnumtcs", 88),
STACK_USAGE("dcbnl_getpfcstate", 24),
STACK_USAGE("dcbnl_setpfcstate", 24),
STACK_USAGE("dcbnl_getapp", 104),
STACK_USAGE("dcbnl_setapp", 104),
STACK_USAGE("__dcbnl_pg_getcfg", 312),
STACK_USAGE("dcbnl_pgtx_getcfg", 0),
STACK_USAGE("dcbnl_pgrx_getcfg", 0),
STACK_USAGE("dcbnl_setstate", 24),
STACK_USAGE("dcbnl_setpfccfg", 136),
STACK_USAGE("dcbnl_setall", 40),
STACK_USAGE("__dcbnl_pg_setcfg", 296),
STACK_USAGE("dcbnl_pgtx_setcfg", 0),
STACK_USAGE("dcbnl_pgrx_setcfg", 0),
STACK_USAGE("dcbnl_bcn_getcfg", 296),
STACK_USAGE("dcbnl_bcn_setcfg", 264),
STACK_USAGE("dcbnl_build_peer_app", 80),
STACK_USAGE("devm_free_netdev", 0),
STACK_USAGE("devm_alloc_etherdev_mqs", 40),
STACK_USAGE("devm_unregister_netdev", 0),
STACK_USAGE("netdev_devres_match", 0),
STACK_USAGE("devm_register_netdev", 24),
STACK_USAGE("dns_resolver_free_preparse", 0),
STACK_USAGE("dns_resolver_cmp", 32),
STACK_USAGE("dns_resolver_match_preparse", 0),
STACK_USAGE("dns_resolver_describe", 16),
STACK_USAGE("dns_resolver_read", 0),
STACK_USAGE("init_dns_resolver", 24),
STACK_USAGE("exit_dns_resolver", 8),
STACK_USAGE("dns_resolver_preparse", 216),
STACK_USAGE("user_key_payload_locked", 8),
STACK_USAGE("dns_query", 72),
STACK_USAGE("eth_get_headlen", 40),
STACK_USAGE("eth_type_trans", 16),
STACK_USAGE("eth_header_parse", 0),
STACK_USAGE("eth_header_cache", 0),
STACK_USAGE("eth_header_cache_update", 0),
STACK_USAGE("eth_header_parse_protocol", 0),
STACK_USAGE("eth_prepare_mac_addr_change", 0),
STACK_USAGE("eth_commit_mac_addr_change", 0),
STACK_USAGE("eth_mac_addr", 8),
STACK_USAGE("eth_validate_addr", 0),
STACK_USAGE("ether_setup", 0),
STACK_USAGE("alloc_etherdev_mqs", 0),
STACK_USAGE("skb_header_pointer", 8),
STACK_USAGE("sysfs_format_mac", 0),
STACK_USAGE("eth_gro_receive", 32),
STACK_USAGE("eth_gro_complete", 16),
STACK_USAGE("eth_offload_init", 0),
STACK_USAGE("arch_get_platform_mac_address", 0),
STACK_USAGE("eth_platform_get_mac_address", 8),
STACK_USAGE("platform_get_ethdev_address", 32),
STACK_USAGE("nvmem_get_mac_address", 40),
STACK_USAGE("fwnode_get_mac_address", 16),
STACK_USAGE("device_get_mac_address", 8),
STACK_USAGE("device_get_ethdev_address", 32),
STACK_USAGE("eth_header", 40),
STACK_USAGE("convert_legacy_settings_to_link_ksettings", 24),
STACK_USAGE("__ethtool_get_link", 0),
STACK_USAGE("ethtool_get_max_rxfh_channel", 48),
STACK_USAGE("ethtool_check_ops", 0),
STACK_USAGE("__ethtool_get_ts_info", 0),
STACK_USAGE("ethtool_get_phc_vclocks", 64),
STACK_USAGE("ethtool_set_ethtool_phy_ops", 8),
STACK_USAGE("ethtool_params_from_link_mode", 0),
STACK_USAGE("ethtool_copy_validate_indir", 24),
STACK_USAGE("netdev_rss_key_fill", 32),
STACK_USAGE("ethtool_get_rxfh_indir", 48),
STACK_USAGE("ethtool_set_rxfh_indir", 264),
STACK_USAGE("ethtool_get_rxfh", 104),
STACK_USAGE("ethtool_set_features", 88),
STACK_USAGE("ethtool_set_rxfh", 296),
STACK_USAGE("ethtool_get_regs", 80),
STACK_USAGE("ethtool_reset", 32),
STACK_USAGE("ethtool_get_wol", 48),
STACK_USAGE("ethtool_set_wol", 40),
STACK_USAGE("ethtool_get_eee", 56),
STACK_USAGE("ethtool_set_eee", 56),
STACK_USAGE("ethtool_get_link", 24),
STACK_USAGE("ethtool_get_any_eeprom", 80),
STACK_USAGE("ethtool_get_eeprom", 32),
STACK_USAGE("ethtool_set_eeprom", 72),
STACK_USAGE("ethtool_get_coalesce", 128),
STACK_USAGE("ethtool_set_coalesce", 128),
STACK_USAGE("ethtool_get_ringparam", 88),
STACK_USAGE("ethtool_set_ringparam", 112),
STACK_USAGE("ethtool_get_channels", 64),
STACK_USAGE("ethtool_set_channels", 128),
STACK_USAGE("ethtool_get_pauseparam", 40),
STACK_USAGE("ethtool_set_pauseparam", 32),
STACK_USAGE("ethtool_self_test", 64),
STACK_USAGE("ethtool_get_strings", 56),
STACK_USAGE("ethtool_sprintf", 104),
STACK_USAGE("ethtool_phys_id", 64),
STACK_USAGE("ethtool_get_stats", 64),
STACK_USAGE("ethtool_get_phy_stats", 80),
STACK_USAGE("ethtool_get_perm_addr", 32),
STACK_USAGE("ethtool_set_value_void", 32),
STACK_USAGE("ethtool_set_value", 32),
STACK_USAGE("ethtool_flash_device", 8),
STACK_USAGE("ethtool_set_dump", 32),
STACK_USAGE("ethtool_get_dump_flag", 48),
STACK_USAGE("ethtool_get_dump_data", 88),
STACK_USAGE("ethtool_get_ts_info", 64),
STACK_USAGE("ethtool_get_module_info_call", 0),
STACK_USAGE("ethtool_get_module_info", 72),
STACK_USAGE("ethtool_get_module_eeprom_call", 0),
STACK_USAGE("ethtool_get_module_eeprom", 72),
STACK_USAGE("ethtool_get_tunable", 64),
STACK_USAGE("ethtool_set_tunable", 56),
STACK_USAGE("ethtool_get_per_queue_coalesce", 680),
STACK_USAGE("ethtool_set_per_queue_coalesce", 696),
STACK_USAGE("ethtool_get_one_feature", 16),
STACK_USAGE("ethtool_set_per_queue", 552),
STACK_USAGE("get_phy_tunable", 72),
STACK_USAGE("set_phy_tunable", 64),
STACK_USAGE("ethtool_set_one_feature", 32),
STACK_USAGE("ethtool_get_fecparam", 32),
STACK_USAGE("ethtool_set_fecparam", 32),
STACK_USAGE("dev_ethtool", 72),
STACK_USAGE("ethtool_rx_flow_rule_create", 24),
STACK_USAGE("__ethtool_set_flags", 0),
STACK_USAGE("ethtool_rx_flow_rule_destroy", 8),
STACK_USAGE("ethtool_intersect_link_masks", 0),
STACK_USAGE("ethtool_convert_legacy_u32_to_link_mode", 0),
STACK_USAGE("ethtool_convert_link_mode_to_legacy_u32", 56),
STACK_USAGE("__ethtool_get_link_ksettings", 16),
STACK_USAGE("ethtool_virtdev_validate_cmd", 64),
STACK_USAGE("ethtool_get_link_ksettings", 216),
STACK_USAGE("ethtool_set_link_ksettings", 224),
STACK_USAGE("ethtool_virtdev_set_link_ksettings", 104),
STACK_USAGE("ethtool_op_get_link", 0),
STACK_USAGE("ethtool_get_settings", 216),
STACK_USAGE("ethtool_set_settings", 176),
STACK_USAGE("ethtool_op_get_ts_info", 0),
STACK_USAGE("ethtool_get_drvinfo", 24),
STACK_USAGE("ethtool_get_sset_info", 80),
STACK_USAGE("ethtool_rxnfc_copy_from_compat", 232),
STACK_USAGE("ethtool_get_features", 88),
STACK_USAGE("ethtool_rxnfc_copy_to_user", 216),
STACK_USAGE("ethtool_set_rxnfc", 232),
STACK_USAGE("ethtool_get_rxnfc", 248),
STACK_USAGE("inet_compat_ioctl", 160),
STACK_USAGE("sock_rps_record_flow", 16),
STACK_USAGE("inet_register_protosw", 16),
STACK_USAGE("inet_unregister_protosw", 8),
STACK_USAGE("inet_sk_rebuild_header", 80),
STACK_USAGE("inet_sk_set_state", 16),
STACK_USAGE("inet_sk_state_store", 16),
STACK_USAGE("inet_gso_segment", 88),
STACK_USAGE("inet_sock_destruct", 16),
STACK_USAGE("trace_inet_sock_set_state", 0),
STACK_USAGE("ipip_gso_segment", 0),
STACK_USAGE("inet_gro_receive", 48),
STACK_USAGE("ipip_gro_receive", 0),
STACK_USAGE("inet_current_timestamp", 24),
STACK_USAGE("inet_recv_error", 0),
STACK_USAGE("inet_gro_complete", 32),
STACK_USAGE("ipip_gro_complete", 0),
STACK_USAGE("inet_ctl_sock_create", 32),
STACK_USAGE("snmp_fold_field", 32),
STACK_USAGE("ipv4_mib_init_net", 16),
STACK_USAGE("ipv4_mib_exit_net", 8),
STACK_USAGE("inet_init_net", 16),
STACK_USAGE("ipv4_offload_init", 0),
STACK_USAGE("inet_init", 16),
STACK_USAGE("inet_listen", 104),
STACK_USAGE("ipv4_proc_init", 0),
STACK_USAGE("inet_create", 64),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("inet_release", 16),
STACK_USAGE("inet_bind", 40),
STACK_USAGE("__inet_bind", 56),
STACK_USAGE("inet_dgram_connect", 24),
STACK_USAGE("__inet_stream_connect", 120),
STACK_USAGE("inet_stream_connect", 32),
STACK_USAGE("rcu_read_unlock", 0),
STACK_USAGE("inet_accept", 40),
STACK_USAGE("inet_getname", 40),
STACK_USAGE("inet_send_prepare", 16),
STACK_USAGE("inet_sendmsg", 24),
STACK_USAGE("inet_sendpage", 48),
STACK_USAGE("inet_recvmsg", 48),
STACK_USAGE("inet_shutdown", 32),
STACK_USAGE("inet_ioctl", 152),
STACK_USAGE("arp_req_set", 120),
STACK_USAGE("arp_req_get", 48),
STACK_USAGE("arp_invalidate", 32),
STACK_USAGE("arp_req_delete", 88),
STACK_USAGE("arp_ioctl", 112),
STACK_USAGE("skb_rtable", 8),
STACK_USAGE("arp_netdev_event", 8),
STACK_USAGE("arp_ifdown", 0),
STACK_USAGE("arp_seq_show", 120),
STACK_USAGE("arp_seq_start", 0),
STACK_USAGE("arp_net_init", 8),
STACK_USAGE("arp_net_exit", 0),
STACK_USAGE("arp_init", 0),
STACK_USAGE("arp_mc_map", 0),
STACK_USAGE("arp_hash", 0),
STACK_USAGE("arp_key_eq", 0),
STACK_USAGE("arp_constructor", 48),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("skb_metadata_dst", 8),
STACK_USAGE("arp_error_report", 8),
STACK_USAGE("arp_send_dst", 8),
STACK_USAGE("NF_HOOK", 24),
STACK_USAGE("arp_send", 0),
STACK_USAGE("arp_solicit", 136),
STACK_USAGE("arp_ignore", 0),
STACK_USAGE("arp_filter", 104),
STACK_USAGE("neigh_release", 0),
STACK_USAGE("arp_fwd_proxy", 16),
STACK_USAGE("arp_create", 64),
STACK_USAGE("__neigh_lookup", 24),
STACK_USAGE("arp_xmit", 8),
STACK_USAGE("arp_is_garp", 32),
STACK_USAGE("arp_process", 112),
STACK_USAGE("parp_redo", 0),
STACK_USAGE("arp_is_multicast", 0),
STACK_USAGE("arp_rcv", 24),
STACK_USAGE("arp_req_set_proxy", 16),
STACK_USAGE("bpf_tcp_send_ack", 0),
STACK_USAGE("bpf_tcp_ca_get_func_proto", 0),
STACK_USAGE("bpf_tcp_ca_init_member", 24),
STACK_USAGE("bpf_tcp_ca_check_member", 0),
STACK_USAGE("bpf_tcp_ca_reg", 0),
STACK_USAGE("bpf_tcp_ca_unreg", 0),
STACK_USAGE("bpf_tcp_ca_kfunc_init", 0),
STACK_USAGE("bpf_tcp_ca_init", 16),
STACK_USAGE("bpf_tcp_ca_is_valid_access", 8),
STACK_USAGE("bpf_tcp_ca_btf_struct_access", 0),
STACK_USAGE("bpfilter_umh_cleanup", 8),
STACK_USAGE("bpfilter_mbox_request", 56),
STACK_USAGE("bpfilter_ip_set_sockopt", 0),
STACK_USAGE("bpfilter_ip_get_sockopt", 32),
STACK_USAGE("bpfilter_sockopt_init", 0),
STACK_USAGE("cipso_v4_optptr", 0),
STACK_USAGE("cipso_v4_map_cache_hash", 0),
STACK_USAGE("cipso_v4_validate", 72),
STACK_USAGE("cipso_v4_cache_init", 16),
STACK_USAGE("cipso_v4_error", 104),
STACK_USAGE("cipso_v4_genopt", 152),
STACK_USAGE("cipso_v4_sock_setattr", 48),
STACK_USAGE("cipso_v4_req_setattr", 48),
STACK_USAGE("cipso_v4_cache_invalidate", 56),
STACK_USAGE("cipso_v4_delopt", 16),
STACK_USAGE("cipso_v4_sock_delattr", 8),
STACK_USAGE("cipso_v4_req_delattr", 0),
STACK_USAGE("cipso_v4_getattr", 80),
STACK_USAGE("cipso_v4_sock_getattr", 24),
STACK_USAGE("cipso_v4_skbuff_setattr", 136),
STACK_USAGE("cipso_v4_skbuff_delattr", 24),
STACK_USAGE("cipso_v4_init", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("cipso_v4_cache_add", 48),
STACK_USAGE("cipso_v4_doi_add", 48),
STACK_USAGE("cipso_v4_doi_free", 8),
STACK_USAGE("cipso_v4_doi_free_rcu", 0),
STACK_USAGE("cipso_v4_doi_remove", 40),
STACK_USAGE("cipso_v4_doi_getdef", 16),
STACK_USAGE("cipso_v4_doi_putdef", 8),
STACK_USAGE("cipso_v4_doi_walk", 64),
STACK_USAGE("cipso_v4_map_cat_rbm_valid", 32),
STACK_USAGE("__ip4_datagram_connect", 56),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("ip4_datagram_connect", 24),
STACK_USAGE("ip4_datagram_release_cb", 128),
STACK_USAGE("devinet_ioctl", 80),
STACK_USAGE("inet_gifconf", 104),
STACK_USAGE("in_dev_select_addr", 24),
STACK_USAGE("inet_select_addr", 56),
STACK_USAGE("confirm_addr_indev", 64),
STACK_USAGE("inet_confirm_addr", 48),
STACK_USAGE("register_inetaddr_notifier", 0),
STACK_USAGE("unregister_inetaddr_notifier", 0),
STACK_USAGE("register_inetaddr_validator_notifier", 0),
STACK_USAGE("unregister_inetaddr_validator_notifier", 0),
STACK_USAGE("inetdev_event", 88),
STACK_USAGE("__ip_dev_find", 152),
STACK_USAGE("put_cacheinfo", 24),
STACK_USAGE("inet_fill_ifaddr", 64),
STACK_USAGE("in_dev_dump_addr", 48),
STACK_USAGE("inet_dump_ifaddr", 248),
STACK_USAGE("inet_lookup_ifaddr_rcu", 0),
STACK_USAGE("rtmsg_ifa", 72),
STACK_USAGE("inet_get_link_af_size", 8),
STACK_USAGE("inet_fill_link_af", 16),
STACK_USAGE("inet_validate_link_af", 56),
STACK_USAGE("inet_set_link_af", 56),
STACK_USAGE("inet_netconf_fill_devconf", 56),
STACK_USAGE("inet_netconf_notify_devconf", 48),
STACK_USAGE("inet_netconf_get_devconf", 152),
STACK_USAGE("inet_netconf_dump_devconf", 72),
STACK_USAGE("inet_rcu_free_ifa", 24),
STACK_USAGE("devinet_conf_proc", 72),
STACK_USAGE("in_dev_finish_destroy", 16),
STACK_USAGE("devinet_sysctl_forward", 80),
STACK_USAGE("ipv4_doint_and_flush", 40),
STACK_USAGE("inetdev_init", 24),
STACK_USAGE("__devinet_sysctl_register", 104),
STACK_USAGE("devinet_sysctl_register", 24),
STACK_USAGE("devinet_init_net", 48),
STACK_USAGE("refcount_inc", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("devinet_exit_net", 24),
STACK_USAGE("devinet_init", 0),
STACK_USAGE("in_dev_rcu_put", 16),
STACK_USAGE("inet_addr_onlink", 32),
STACK_USAGE("__inet_del_ifa", 88),
STACK_USAGE("__inet_insert_ifa", 88),
STACK_USAGE("inet_set_ifa", 16),
STACK_USAGE("inetdev_by_index", 16),
STACK_USAGE("inet_ifa_byprefix", 24),
STACK_USAGE("ip_mc_autojoin_config", 40),
STACK_USAGE("inet_rtm_deladdr", 168),
STACK_USAGE("check_lifetime", 56),
STACK_USAGE("inet_rtm_newaddr", 184),
STACK_USAGE("inet_abc_len", 0),
STACK_USAGE("esp_destroy", 0),
STACK_USAGE("esp_init_state", 200),
STACK_USAGE("get_page", 0),
STACK_USAGE("esp4_rcv_cb", 0),
STACK_USAGE("esp4_init", 0),
STACK_USAGE("esp4_fini", 0),
STACK_USAGE("refcount_add", 0),
STACK_USAGE("__skb_fill_page_desc", 0),
STACK_USAGE("esp_output_done", 48),
STACK_USAGE("esp_output_done_esn", 0),
STACK_USAGE("esp_output_head", 112),
STACK_USAGE("esp_output_tail", 136),
STACK_USAGE("esp_output", 96),
STACK_USAGE("esp_input_done2", 80),
STACK_USAGE("esp_input_done", 8),
STACK_USAGE("esp_input_done_esn", 8),
STACK_USAGE("esp_input", 88),
STACK_USAGE("esp4_err", 32),
STACK_USAGE("esp_ssg_unref", 8),
STACK_USAGE("fib_add_ifaddr", 216),
STACK_USAGE("fib_get_table", 0),
STACK_USAGE("fib_modify_prefix_metric", 200),
STACK_USAGE("fib_del_ifaddr", 232),
STACK_USAGE("l3mdev_fib_table", 8),
STACK_USAGE("nl_fib_input", 152),
STACK_USAGE("fib_disable_ip", 40),
STACK_USAGE("fib_inetaddr_event", 40),
STACK_USAGE("fib_netdev_event", 48),
STACK_USAGE("fib_unmerge", 24),
STACK_USAGE("ip_fib_net_exit", 48),
STACK_USAGE("fib_net_init", 72),
STACK_USAGE("fib_net_exit", 8),
STACK_USAGE("fib_net_exit_batch", 16),
STACK_USAGE("ip_fib_init", 0),
STACK_USAGE("fib_flush", 32),
STACK_USAGE("local_bh_disable", 0),
STACK_USAGE("__inet_dev_addr_type", 152),
STACK_USAGE("inet_addr_type_table", 0),
STACK_USAGE("inet_addr_type", 0),
STACK_USAGE("__in_dev_get_rtnl", 8),
STACK_USAGE("inet_dev_addr_type", 24),
STACK_USAGE("inet_addr_type_dev_table", 16),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("fib_compute_spec_dst", 160),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("nexthop_num_path", 16),
STACK_USAGE("fib_info_nh_uses_dev", 32),
STACK_USAGE("local_bh_enable", 0),
STACK_USAGE("nexthop_fib_nhc", 24),
STACK_USAGE("fib_lookup", 40),
STACK_USAGE("fib_validate_source", 272),
STACK_USAGE("nexthop_uses_dev", 40),
STACK_USAGE("ip_rt_ioctl", 216),
STACK_USAGE("fib_gw_from_via", 8),
STACK_USAGE("rcu_read_unlock", 0),
STACK_USAGE("rtm_to_fib_config", 64),
STACK_USAGE("fib_new_table", 24),
STACK_USAGE("nlmsg_parse_deprecated_strict", 8),
STACK_USAGE("inet_rtm_delroute", 152),
STACK_USAGE("inet_rtm_newroute", 152),
STACK_USAGE("ip_valid_fib_dump_req", 312),
STACK_USAGE("inet_dump_fib", 104),
STACK_USAGE("call_fib4_notifier", 0),
STACK_USAGE("call_fib4_notifiers", 24),
STACK_USAGE("fib4_seq_read", 16),
STACK_USAGE("fib4_dump", 24),
STACK_USAGE("fib4_notifier_init", 8),
STACK_USAGE("fib4_notifier_exit", 0),
STACK_USAGE("fib4_rule_action", 24),
STACK_USAGE("fib4_rule_suppress", 40),
STACK_USAGE("fib4_rule_match", 0),
STACK_USAGE("fib_empty_table", 16),
STACK_USAGE("fib4_rule_configure", 40),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("fib4_rule_delete", 16),
STACK_USAGE("fib4_rule_compare", 0),
STACK_USAGE("fib4_rule_fill", 40),
STACK_USAGE("fib4_rule_nlmsg_payload", 0),
STACK_USAGE("fib4_rule_flush_cache", 0),
STACK_USAGE("fib4_rules_init", 24),
STACK_USAGE("fib4_rules_exit", 0),
STACK_USAGE("fib4_rule_default", 8),
STACK_USAGE("fib4_rules_dump", 0),
STACK_USAGE("fib4_rules_seq_read", 0),
STACK_USAGE("__fib_lookup", 64),
STACK_USAGE("fib_metrics_match", 88),
STACK_USAGE("fib_check_nh", 320),
STACK_USAGE("fib_info_hash_move", 72),
STACK_USAGE("fib_info_update_nhc_saddr", 16),
STACK_USAGE("fib_result_prefsrc", 16),
STACK_USAGE("fib_valid_prefsrc", 24),
STACK_USAGE("fib_create_info", 72),
STACK_USAGE("fib_nexthop_info", 64),
STACK_USAGE("fib_add_nexthop", 72),
STACK_USAGE("fib_add_multipath", 88),
STACK_USAGE("fib_dump_info", 80),
STACK_USAGE("fib_sync_down_addr", 24),
STACK_USAGE("call_fib_nh_notifiers", 56),
STACK_USAGE("local_bh_disable", 0),
STACK_USAGE("fib_nhc_update_mtu", 0),
STACK_USAGE("rt_fibinfo_free_cpus", 32),
STACK_USAGE("fib_sync_mtu", 0),
STACK_USAGE("fib_sync_down_dev", 80),
STACK_USAGE("fib_select_default", 112),
STACK_USAGE("fib_sync_up", 88),
STACK_USAGE("fib_nh_common_release", 40),
STACK_USAGE("fib_select_multipath", 80),
STACK_USAGE("fib_nh_release", 0),
STACK_USAGE("fib_select_path", 32),
STACK_USAGE("free_fib_info_rcu", 40),
STACK_USAGE("nexthop_get", 8),
STACK_USAGE("free_fib_info", 0),
STACK_USAGE("fib_release_info", 40),
STACK_USAGE("refcount_inc", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("nexthop_num_path", 16),
STACK_USAGE("nexthop_mpath_fill_node", 80),
STACK_USAGE("local_bh_enable", 0),
STACK_USAGE("nexthop_is_blackhole", 8),
STACK_USAGE("nexthop_path_fib_result", 16),
STACK_USAGE("fib_info_hashfn", 48),
STACK_USAGE("nexthop_fib_nhc", 24),
STACK_USAGE("__ipv6_neigh_lookup_noref_stub", 24),
STACK_USAGE("fib_find_info", 40),
STACK_USAGE("ip_fib_check_default", 24),
STACK_USAGE("fib_nlmsg_size", 56),
STACK_USAGE("rtmsg_fib", 88),
STACK_USAGE("fib_detect_death", 56),
STACK_USAGE("fib_nh_common_init", 64),
STACK_USAGE("fib_nh_init", 24),
STACK_USAGE("fib_get_nhs", 216),
STACK_USAGE("fib_rebalance", 64),
STACK_USAGE("fib_nh_match", 208),
STACK_USAGE("fib_alias_hw_flags_set", 40),
STACK_USAGE("fib_insert_alias", 88),
STACK_USAGE("fib_table_insert", 144),
STACK_USAGE("trace_fib_table_lookup", 0),
STACK_USAGE("fib_lookup_good_nhc", 32),
STACK_USAGE("fib_table_lookup", 128),
STACK_USAGE("fib_remove_alias", 40),
STACK_USAGE("fib_table_delete", 152),
STACK_USAGE("leaf_walk_rcu", 48),
STACK_USAGE("fib_trie_unmerge", 80),
STACK_USAGE("fib_table_flush_external", 48),
STACK_USAGE("fib_table_flush", 136),
STACK_USAGE("fib_info_notify_update", 64),
STACK_USAGE("fib_notify", 120),
STACK_USAGE("__trie_free_rcu", 0),
STACK_USAGE("fib_free_table", 0),
STACK_USAGE("fib_table_dump", 160),
STACK_USAGE("fib_trie_init", 0),
STACK_USAGE("fib_trie_table", 16),
STACK_USAGE("fib_trie_get_next", 32),
STACK_USAGE("fib_triestat_seq_show", 304),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("fib_trie_seq_start", 72),
STACK_USAGE("fib_trie_seq_next", 56),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("fib_trie_seq_stop", 0),
STACK_USAGE("fib_trie_seq_show", 136),
STACK_USAGE("fib_route_seq_start", 24),
STACK_USAGE("nexthop_num_path", 16),
STACK_USAGE("fib_route_seq_next", 8),
STACK_USAGE("fib_route_seq_stop", 0),
STACK_USAGE("__alias_free_mem", 0),
STACK_USAGE("fib_route_seq_show", 64),
STACK_USAGE("fib_proc_init", 16),
STACK_USAGE("fib_proc_exit", 8),
STACK_USAGE("__node_free_rcu", 0),
STACK_USAGE("nexthop_is_blackhole", 8),
STACK_USAGE("nexthop_fib_nhc", 24),
STACK_USAGE("nexthop_get_nhc_lookup", 56),
STACK_USAGE("put_child", 24),
STACK_USAGE("update_children", 24),
STACK_USAGE("replace", 32),
STACK_USAGE("update_suffix", 40),
STACK_USAGE("resize", 120),
STACK_USAGE("call_fib_entry_notifiers", 48),
STACK_USAGE("fib_find_node", 32),
STACK_USAGE("fou_build_header", 64),
STACK_USAGE("gue_build_header", 64),
STACK_USAGE("gue_err_proto_handler", 24),
STACK_USAGE("gue_err", 48),
STACK_USAGE("gue_udp_recv", 48),
STACK_USAGE("fou_init_net", 0),
STACK_USAGE("fou_exit_net", 56),
STACK_USAGE("fou_init", 16),
STACK_USAGE("fou_fini", 0),
STACK_USAGE("fou_gro_receive", 24),
STACK_USAGE("fou_gro_complete", 24),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("gue_gro_remcsum", 80),
STACK_USAGE("gue_gro_receive", 80),
STACK_USAGE("skb_postpull_rcsum", 8),
STACK_USAGE("net_generic", 16),
STACK_USAGE("iptunnel_pull_offloads", 8),
STACK_USAGE("gue_gro_complete", 32),
STACK_USAGE("fou_recv_pull", 8),
STACK_USAGE("parse_nl_config", 48),
STACK_USAGE("fou_udp_recv", 16),
STACK_USAGE("fou_nl_cmd_add_port", 176),
STACK_USAGE("fou_nl_cmd_rm_port", 104),
STACK_USAGE("fou_dump_info", 56),
STACK_USAGE("fou_nl_cmd_get_port", 120),
STACK_USAGE("fou_nl_dump", 48),
STACK_USAGE("gue_remcsum", 72),
STACK_USAGE("fou_encap_hlen", 0),
STACK_USAGE("gue_encap_hlen", 0),
STACK_USAGE("__fou_build_header", 48),
STACK_USAGE("__gue_build_header", 72),
STACK_USAGE("gre_rcv", 16),
STACK_USAGE("gre_err", 32),
STACK_USAGE("gre_init", 0),
STACK_USAGE("gre_exit", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("gre_add_protocol", 0),
STACK_USAGE("gre_del_protocol", 0),
STACK_USAGE("gre_parse_header", 96),
STACK_USAGE("gre_gro_receive", 64),
STACK_USAGE("gre_gso_segment", 80),
STACK_USAGE("__skb_gro_checksum_validate_needed", 0),
STACK_USAGE("__skb_gro_checksum_validate_complete", 4),
STACK_USAGE("skb_gro_incr_csum_unnecessary", 0),
STACK_USAGE("gre_gro_complete", 24),
STACK_USAGE("gre_offload_init", 8),
STACK_USAGE("icmp_build_probe", 120),
STACK_USAGE("icmp_timestamp", 136),
STACK_USAGE("icmp_discard", 0),
STACK_USAGE("icmp_rcv", 56),
STACK_USAGE("skb_rtable", 8),
STACK_USAGE("ip_icmp_error_rfc4884", 56),
STACK_USAGE("icmp_err", 0),
STACK_USAGE("icmp_sk_init", 0),
STACK_USAGE("icmp_init", 32),
STACK_USAGE("local_bh_disable", 0),
STACK_USAGE("ip_route_input", 40),
STACK_USAGE("dst_mtu", 0),
STACK_USAGE("__in_dev_get_rcu", 8),
STACK_USAGE("icmp_global_allow", 16),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("icmpv4_xrlim_allow", 56),
STACK_USAGE("local_bh_enable", 0),
STACK_USAGE("icmp_out_count", 0),
STACK_USAGE("icmp_glue_bits", 32),
STACK_USAGE("inet_iif", 8),
STACK_USAGE("icmp_push_reply", 56),
STACK_USAGE("icmp_reply", 216),
STACK_USAGE("skb_header_pointer", 8),
STACK_USAGE("icmp_route_lookup", 192),
STACK_USAGE("__icmp_send", 328),
STACK_USAGE("l3mdev_master_ifindex", 8),
STACK_USAGE("rcu_read_unlock", 0),
STACK_USAGE("icmp_ndo_send", 80),
STACK_USAGE("icmp_socket_deliver", 24),
STACK_USAGE("icmp_tag_validation", 8),
STACK_USAGE("icmp_unreach", 48),
STACK_USAGE("icmp_redirect", 8),
STACK_USAGE("icmp_echo", 128),
STACK_USAGE("igmp_rcv", 88),
STACK_USAGE("igmpv3_add_delrec", 48),
STACK_USAGE("igmpv3_del_delrec", 56),
STACK_USAGE("igmpv3_clear_delrec", 56),
STACK_USAGE("__igmp_group_dropped", 88),
STACK_USAGE("igmp_group_added", 88),
STACK_USAGE("____ip_mc_inc_group", 56),
STACK_USAGE("__ip_mc_inc_group", 0),
STACK_USAGE("ip_mc_inc_group", 0),
STACK_USAGE("ip_mc_validate_checksum", 16),
STACK_USAGE("ip_mc_check_igmp", 40),
STACK_USAGE("__ip_mc_dec_group", 40),
STACK_USAGE("ip_ma_put", 8),
STACK_USAGE("ip_mc_unmap", 8),
STACK_USAGE("ip_mc_remap", 16),
STACK_USAGE("ip_mc_down", 16),
STACK_USAGE("ip_mc_init_dev", 8),
STACK_USAGE("ip_mc_up", 16),
STACK_USAGE("ip_mc_destroy_dev", 40),
STACK_USAGE("ip_mc_find_dev", 96),
STACK_USAGE("ip_mc_del1_src", 40),
STACK_USAGE("ip_mc_del_src", 64),
STACK_USAGE("sf_setstate", 48),
STACK_USAGE("ip_mc_add_src", 88),
STACK_USAGE("__ip_mc_join_group", 72),
STACK_USAGE("ip_mc_join_group", 0),
STACK_USAGE("ip_mc_join_group_ssm", 0),
STACK_USAGE("ip_mc_leave_src", 32),
STACK_USAGE("igmp_gq_start_timer", 8),
STACK_USAGE("ip_mc_leave_group", 56),
STACK_USAGE("ip_mc_source", 104),
STACK_USAGE("ip_mc_msfilter", 80),
STACK_USAGE("ip_mc_msfget", 80),
STACK_USAGE("pskb_may_pull", 0),
STACK_USAGE("ip_mc_gsfget", 184),
STACK_USAGE("ip_mc_sf_allow", 56),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("ip_mc_drop_socket", 32),
STACK_USAGE("ip_check_mc_rcu", 40),
STACK_USAGE("is_in", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("igmp_mc_get_first", 32),
STACK_USAGE("igmp_mc_get_next", 32),
STACK_USAGE("igmp_mc_seq_start", 24),
STACK_USAGE("igmp_mc_seq_next", 8),
STACK_USAGE("igmp_mc_seq_stop", 0),
STACK_USAGE("igmp_mc_seq_show", 40),
STACK_USAGE("igmp_mcf_get_first", 48),
STACK_USAGE("igmp_mcf_get_next", 32),
STACK_USAGE("igmp_mcf_seq_start", 24),
STACK_USAGE("igmp_mcf_seq_next", 8),
STACK_USAGE("igmp_mcf_seq_stop", 8),
STACK_USAGE("igmp_mcf_seq_show", 0),
STACK_USAGE("igmp_net_init", 16),
STACK_USAGE("igmp_net_exit", 8),
STACK_USAGE("igmp_netdev_event", 24),
STACK_USAGE("igmp_mc_init", 8),
STACK_USAGE("igmpv3_newpack", 144),
STACK_USAGE("igmpv3_sendpack", 24),
STACK_USAGE("add_grhead", 32),
STACK_USAGE("add_grec", 128),
STACK_USAGE("igmpv3_send_report", 32),
STACK_USAGE("igmp_send_report", 136),
STACK_USAGE("igmp_gq_timer_expire", 16),
STACK_USAGE("igmp_ifc_timer_expire", 88),
STACK_USAGE("igmp_ifc_event", 8),
STACK_USAGE("igmp_timer_expire", 40),
STACK_USAGE("igmp_heard_report", 24),
STACK_USAGE("inet_csk_prepare_forced_close", 8),
STACK_USAGE("inet_csk_listen_start", 16),
STACK_USAGE("inet_child_forget", 32),
STACK_USAGE("inet_csk_reqsk_queue_add", 32),
STACK_USAGE("inet_csk_complete_hashdance", 40),
STACK_USAGE("inet_rcv_saddr_any", 0),
STACK_USAGE("inet_csk_listen_stop", 72),
STACK_USAGE("inet_get_local_port_range", 56),
STACK_USAGE("inet_csk_addr2sockaddr", 0),
STACK_USAGE("inet_csk_rebuild_route", 64),
STACK_USAGE("inet_csk_update_pmtu", 16),
STACK_USAGE("inet_sk_bound_l3mdev", 24),
STACK_USAGE("reqsk_put", 8),
STACK_USAGE("inet_csk_bind_conflict", 64),
STACK_USAGE("local_bh_disable", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("inet_csk_update_fastreuse", 24),
STACK_USAGE("local_bh_enable", 0),
STACK_USAGE("ipv6_rcv_saddr_equal", 56),
STACK_USAGE("inet_csk_get_port", 160),
STACK_USAGE("inet_csk_accept", 88),
STACK_USAGE("inet_csk_init_xmit_timers", 24),
STACK_USAGE("inet_csk_clear_xmit_timers", 8),
STACK_USAGE("inet_csk_delete_keepalive_timer", 0),
STACK_USAGE("inet_csk_reset_keepalive_timer", 0),
STACK_USAGE("inet_csk_route_req", 48),
STACK_USAGE("inet_csk_route_child_sock", 56),
STACK_USAGE("inet_rtx_syn_ack", 8),
STACK_USAGE("inet_reqsk_clone", 24),
STACK_USAGE("inet_csk_reqsk_queue_drop", 32),
STACK_USAGE("inet_csk_reqsk_queue_drop_and_put", 8),
STACK_USAGE("reqsk_timer_handler", 72),
STACK_USAGE("inet_rcv_saddr_equal", 56),
STACK_USAGE("inet_csk_reqsk_queue_hash_add", 32),
STACK_USAGE("inet_csk_clone_lock", 24),
STACK_USAGE("inet_csk_destroy_sock", 8),
STACK_USAGE("inet_frags_init", 16),
STACK_USAGE("inet_frags_fini", 8),
STACK_USAGE("inet_frags_free_cb", 24),
STACK_USAGE("fqdir_free_fn", 16),
STACK_USAGE("fqdir_work_fn", 8),
STACK_USAGE("fqdir_init", 32),
STACK_USAGE("local_bh_disable", 0),
STACK_USAGE("inet_frag_wq_init", 0),
STACK_USAGE("fqdir_exit", 16),
STACK_USAGE("inet_frag_kill", 88),
STACK_USAGE("inet_frag_destroy_rcu", 16),
STACK_USAGE("inet_frag_rbtree_purge", 40),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("inet_frag_destroy", 64),
STACK_USAGE("local_bh_enable", 0),
STACK_USAGE("rht_lock", 16),
STACK_USAGE("rht_unlock", 8),
STACK_USAGE("inet_frag_find", 120),
STACK_USAGE("inet_frag_queue_insert", 24),
STACK_USAGE("rht_assign_unlock", 16),
STACK_USAGE("inet_frag_reasm_prepare", 48),
STACK_USAGE("inet_frag_reasm_finish", 96),
STACK_USAGE("inet_frag_pull_head", 24),
STACK_USAGE("inet_put_port", 24),
STACK_USAGE("__inet_inherit_port", 72),
STACK_USAGE("inet_lhash2_bucket_sk", 0),
STACK_USAGE("local_bh_disable", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("inet_lhash2_lookup", 56),
STACK_USAGE("inet_ehashfn", 56),
STACK_USAGE("local_bh_enable", 0),
STACK_USAGE("__inet_lookup_listener", 176),
STACK_USAGE("sock_gen_put", 8),
STACK_USAGE("sock_edemux", 0),
STACK_USAGE("__inet_lookup_established", 72),
STACK_USAGE("__inet_check_established", 96),
STACK_USAGE("inet_ehash_insert", 48),
STACK_USAGE("inet_ehash_nolisten", 16),
STACK_USAGE("__inet_hash", 64),
STACK_USAGE("inet_bind_bucket_create", 32),
STACK_USAGE("inet_hash", 0),
STACK_USAGE("__inet_unhash", 24),
STACK_USAGE("inet_unhash", 16),
STACK_USAGE("__inet_hash_connect", 144),
STACK_USAGE("l3mdev_master_ifindex_by_index", 16),
STACK_USAGE("inet_hash_connect", 16),
STACK_USAGE("inet_hashinfo_init", 24),
STACK_USAGE("inet_bind_bucket_destroy", 0),
STACK_USAGE("init_hashinfo_lhash2", 24),
STACK_USAGE("inet_hashinfo2_init", 16),
STACK_USAGE("inet_hashinfo2_init_mod", 32),
STACK_USAGE("inet_ehash_locks_alloc", 40),
STACK_USAGE("inet_bind_hash", 0),
STACK_USAGE("inet_twsk_hashdance", 40),
STACK_USAGE("tw_timer_handler", 0),
STACK_USAGE("inet_twsk_alloc", 32),
STACK_USAGE("local_bh_disable", 0),
STACK_USAGE("inet_twsk_deschedule_put", 16),
STACK_USAGE("__inet_twsk_schedule", 24),
STACK_USAGE("inet_twsk_purge", 56),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("inet_twsk_bind_unhash", 8),
STACK_USAGE("local_bh_enable", 0),
STACK_USAGE("inet_twsk_kill", 24),
STACK_USAGE("inet_twsk_free", 16),
STACK_USAGE("inet_twsk_put", 16),
STACK_USAGE("inetpeer_free_rcu", 0),
STACK_USAGE("inet_getpeer", 360),
STACK_USAGE("inet_putpeer", 0),
STACK_USAGE("inet_peer_xrlim_allow", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("inetpeer_invalidate_tree", 24),
STACK_USAGE("inet_peer_base_init", 16),
STACK_USAGE("inet_initpeers", 0),
STACK_USAGE("skb_dst", 8),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("NF_HOOK", 96),
STACK_USAGE("skb_cow", 0),
STACK_USAGE("ip_exceeds_mtu", 8),
STACK_USAGE("ip_dst_mtu_maybe_forward", 0),
STACK_USAGE("ip_forward_finish", 24),
STACK_USAGE("ip_forward", 40),
STACK_USAGE("skb_rtable", 8),
STACK_USAGE("ip_expire", 40),
STACK_USAGE("skb_share_check", 16),
STACK_USAGE("pskb_may_pull", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("ip_defrag", 120),
STACK_USAGE("ip_check_defrag", 72),
STACK_USAGE("ipv4_frags_init_net", 24),
STACK_USAGE("ipv4_frags_pre_exit_net", 0),
STACK_USAGE("ipv4_frags_exit_net", 16),
STACK_USAGE("ip4_key_hashfn", 0),
STACK_USAGE("ip4_obj_hashfn", 0),
STACK_USAGE("ip4_obj_cmpfn", 0),
STACK_USAGE("ipfrag_init", 0),
STACK_USAGE("ip4_frag_init", 40),
STACK_USAGE("ip4_frag_free", 0),
STACK_USAGE("ipgre_init_net", 0),
STACK_USAGE("ipgre_exit_batch_net", 0),
STACK_USAGE("ipgre_tunnel_validate", 0),
STACK_USAGE("ipgre_tap_validate", 0),
STACK_USAGE("erspan_validate", 0),
STACK_USAGE("gre_build_header", 48),
STACK_USAGE("ipgre_netlink_parms", 0),
STACK_USAGE("gre_tap_init", 0),
STACK_USAGE("erspan_tunnel_init", 0),
STACK_USAGE("ipgre_tap_setup", 8),
STACK_USAGE("ipgre_newlink", 96),
STACK_USAGE("erspan_newlink", 96),
STACK_USAGE("ipgre_changelink", 96),
STACK_USAGE("erspan_changelink", 96),
STACK_USAGE("ipgre_get_size", 0),
STACK_USAGE("ipgre_fill_info", 40),
STACK_USAGE("erspan_setup", 8),
STACK_USAGE("gretap_fb_dev_create", 600),
STACK_USAGE("ipgre_tap_init_net", 0),
STACK_USAGE("ipgre_tap_exit_batch_net", 0),
STACK_USAGE("erspan_init_net", 0),
STACK_USAGE("erspan_exit_batch_net", 0),
STACK_USAGE("erspan_build_header", 56),
STACK_USAGE("ipgre_init", 16),
STACK_USAGE("ipgre_fini", 0),
STACK_USAGE("gre_err", 72),
STACK_USAGE("erspan_build_header_v2", 64),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("pskb_trim", 0),
STACK_USAGE("__ipgre_rcv", 56),
STACK_USAGE("net_generic", 16),
STACK_USAGE("skb_tunnel_info", 8),
STACK_USAGE("gre_rcv", 104),
STACK_USAGE("gre_fb_xmit", 40),
STACK_USAGE("gre_fill_metadata_dst", 128),
STACK_USAGE("ipgre_xmit", 32),
STACK_USAGE("erspan_xmit", 40),
STACK_USAGE("gre_tap_xmit", 24),
STACK_USAGE("ipgre_link_update", 0),
STACK_USAGE("ipgre_tunnel_ctl", 24),
STACK_USAGE("ipgre_header", 32),
STACK_USAGE("ipgre_header_parse", 0),
STACK_USAGE("ipgre_open", 88),
STACK_USAGE("ipgre_close", 8),
STACK_USAGE("ipgre_tunnel_setup", 0),
STACK_USAGE("ipgre_tunnel_init", 16),
STACK_USAGE("ip_call_ra_chain", 56),
STACK_USAGE("ip_protocol_deliver_rcu", 48),
STACK_USAGE("ip_local_deliver_finish", 16),
STACK_USAGE("__in_dev_get_rcu", 8),
STACK_USAGE("ip_local_deliver", 16),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("NF_HOOK", 104),
STACK_USAGE("ip_rcv_finish_core", 48),
STACK_USAGE("ip_rcv_finish", 32),
STACK_USAGE("ip_rcv_core", 40),
STACK_USAGE("ip_rcv", 16),
STACK_USAGE("ip_sublist_rcv_finish", 48),
STACK_USAGE("ip_sublist_rcv", 112),
STACK_USAGE("ip_list_rcv", 80),
STACK_USAGE("ip_options_fragment", 32),
STACK_USAGE("__ip_options_compile", 120),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("ip_options_build", 32),
STACK_USAGE("ip_options_compile", 32),
STACK_USAGE("ip_options_undo", 16),
STACK_USAGE("ip_options_get", 72),
STACK_USAGE("ip_forward_options", 56),
STACK_USAGE("ip_options_rcv_srr", 80),
STACK_USAGE("__ip_options_echo", 72),
STACK_USAGE("skb_dst", 8),
STACK_USAGE("ip_local_out", 24),
STACK_USAGE("ip_setup_cork", 48),
STACK_USAGE("ip_append_data", 56),
STACK_USAGE("ip_append_page", 152),
STACK_USAGE("ip_build_and_send_pkt", 64),
STACK_USAGE("__ip_make_skb", 64),
STACK_USAGE("ip_send_skb", 8),
STACK_USAGE("ip_push_pending_frames", 24),
STACK_USAGE("ip_flush_pending_frames", 16),
STACK_USAGE("ip_make_skb", 152),
STACK_USAGE("ip_reply_glue_bits", 24),
STACK_USAGE("ip_send_unicast_reply", 256),
STACK_USAGE("ip_init", 0),
STACK_USAGE("local_bh_disable", 0),
STACK_USAGE("ip_finish_output2", 72),
STACK_USAGE("nf_hook", 112),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("__ip_finish_output", 48),
STACK_USAGE("ip_finish_output", 32),
STACK_USAGE("local_bh_enable", 0),
STACK_USAGE("ip_mc_finish_output", 48),
STACK_USAGE("ip_mc_output", 40),
STACK_USAGE("ip_neigh_gw4", 40),
STACK_USAGE("ip_output", 24),
STACK_USAGE("ip_neigh_gw6", 24),
STACK_USAGE("dst_output", 24),
STACK_USAGE("__ip_queue_xmit", 72),
STACK_USAGE("ip_skb_dst_mtu", 16),
STACK_USAGE("ip_queue_xmit", 0),
STACK_USAGE("ip_copy_metadata", 24),
STACK_USAGE("ip_fragment", 8),
STACK_USAGE("ip_fraglist_init", 40),
STACK_USAGE("ip_fraglist_prepare", 56),
STACK_USAGE("ip_frag_init", 0),
STACK_USAGE("ip_frag_next", 32),
STACK_USAGE("ip_do_fragment", 160),
STACK_USAGE("ip_send_check", 0),
STACK_USAGE("ip_generic_getfrag", 48),
STACK_USAGE("__ip_append_data", 248),
STACK_USAGE("__ip_local_out", 24),
STACK_USAGE("ipv4_pktinfo_prepare", 8),
STACK_USAGE("ip_setsockopt", 104),
STACK_USAGE("ip_get_mcast_msfilter", 312),
STACK_USAGE("compat_ip_get_mcast_msfilter", 584),
STACK_USAGE("lockdep_sock_is_held", 8),
STACK_USAGE("ip_cmsg_recv_offset", 152),
STACK_USAGE("ip_getsockopt", 200),
STACK_USAGE("dst_mtu", 0),
STACK_USAGE("sk_dst_get", 16),
STACK_USAGE("ip_cmsg_send", 64),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("ip_ra_destroy_rcu", 8),
STACK_USAGE("ip_ra_control", 64),
STACK_USAGE("ip_icmp_error", 48),
STACK_USAGE("ip_local_error", 48),
STACK_USAGE("ip_recv_error", 96),
STACK_USAGE("copy_from_sockptr", 0),
STACK_USAGE("__ip_sock_set_tos", 0),
STACK_USAGE("ip_sock_set_tos", 16),
STACK_USAGE("ip_sock_set_freebind", 8),
STACK_USAGE("ip_sock_set_recverr", 8),
STACK_USAGE("ip_sock_set_mtu_discover", 24),
STACK_USAGE("ip_sock_set_pktinfo", 8),
STACK_USAGE("l3mdev_master_ifindex", 8),
STACK_USAGE("set_mcast_msfilter", 56),
STACK_USAGE("memdup_sockptr", 32),
STACK_USAGE("do_mcast_group_source", 576),
STACK_USAGE("ip_set_mcast_msfilter", 48),
STACK_USAGE("compat_ip_set_mcast_msfilter", 48),
STACK_USAGE("ip_mcast_join_leave", 184),
STACK_USAGE("compat_ip_mcast_join_leave", 184),
STACK_USAGE("ip_tunnel_change_mtu", 0),
STACK_USAGE("ip_tunnel_dev_free", 8),
STACK_USAGE("ip_tunnel_dellink", 16),
STACK_USAGE("ip_tunnel_get_link_net", 0),
STACK_USAGE("ip_tunnel_get_iflink", 0),
STACK_USAGE("ip_tunnel_init_net", 112),
STACK_USAGE("ip_tunnel_delete_nets", 96),
STACK_USAGE("ip_tunnel_newlink", 72),
STACK_USAGE("ip_tunnel_changelink", 64),
STACK_USAGE("ip_tunnel_init", 24),
STACK_USAGE("ip_tunnel_uninit", 8),
STACK_USAGE("ip_tunnel_setup", 0),
STACK_USAGE("__ip_tunnel_create", 72),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("ip_tunnel_bind_dev", 136),
STACK_USAGE("ip_encap_hlen", 24),
STACK_USAGE("ip_tunnel_rcv", 104),
STACK_USAGE("net_generic", 16),
STACK_USAGE("skb_tunnel_info", 8),
STACK_USAGE("dst_link_failure", 8),
STACK_USAGE("ip_tunnel_encap_add_ops", 0),
STACK_USAGE("ip_tunnel_encap_del_ops", 8),
STACK_USAGE("ip_tunnel_encap_setup", 16),
STACK_USAGE("tnl_update_pmtu", 56),
STACK_USAGE("ip_md_tunnel_xmit", 160),
STACK_USAGE("ip_tunnel_xmit", 208),
STACK_USAGE("ip_tunnel_update", 48),
STACK_USAGE("ip_tunnel_lookup", 32),
STACK_USAGE("ip_tunnel_ctl", 64),
STACK_USAGE("ip_tunnel_siocdevprivate", 96),
STACK_USAGE("__ip_tunnel_change_mtu", 0),
STACK_USAGE("ip6_tun_fill_encap_info", 40),
STACK_USAGE("ip6_tun_encap_nlsize", 0),
STACK_USAGE("ip_tunnel_core_init", 0),
STACK_USAGE("ip_tunnel_need_metadata", 0),
STACK_USAGE("ip_tunnel_unneed_metadata", 0),
STACK_USAGE("ip_tunnel_parse_protocol", 0),
STACK_USAGE("iptunnel_metadata_reply", 16),
STACK_USAGE("iptunnel_handle_offloads", 16),
STACK_USAGE("iptunnel_pmtud_build_icmp", 80),
STACK_USAGE("pskb_may_pull", 0),
STACK_USAGE("iptunnel_pmtud_build_icmpv6", 104),
STACK_USAGE("skb_tunnel_check_pmtu", 56),
STACK_USAGE("iptunnel_xmit", 80),
STACK_USAGE("ip_tun_parse_opts", 168),
STACK_USAGE("ip_tun_build_state", 152),
STACK_USAGE("ip_tun_destroy_state", 0),
STACK_USAGE("ip_tun_fill_encap_opts", 72),
STACK_USAGE("ip_tun_fill_encap_info", 40),
STACK_USAGE("ip_tun_encap_nlsize", 0),
STACK_USAGE("ip_tun_cmp_encap", 16),
STACK_USAGE("__iptunnel_pull_header", 48),
STACK_USAGE("ip6_tun_build_state", 152),
STACK_USAGE("ic_dynamic", 64),
STACK_USAGE("pnp_seq_show", 8),
STACK_USAGE("ipconfig_proc_net_init", 8),
STACK_USAGE("ntp_servers_show", 8),
STACK_USAGE("ntp_servers_open", 0),
STACK_USAGE("root_nfs_parse_addr", 24),
STACK_USAGE("wait_for_devices", 24),
STACK_USAGE("ip_auto_config", 24),
STACK_USAGE("ic_proto_name", 16),
STACK_USAGE("ip_auto_config_setup", 32),
STACK_USAGE("nfsaddrs_config_setup", 0),
STACK_USAGE("vendor_class_identifier_setup", 0),
STACK_USAGE("set_carrier_timeout", 0),
STACK_USAGE("ic_is_init_dev", 0),
STACK_USAGE("ic_open_devs", 48),
STACK_USAGE("pskb_may_pull", 0),
STACK_USAGE("ic_close_devs", 64),
STACK_USAGE("ic_setup_if", 56),
STACK_USAGE("ic_setup_routes", 128),
STACK_USAGE("ic_defaults", 8),
STACK_USAGE("ic_rarp_recv", 48),
STACK_USAGE("ic_rarp_send_if", 0),
STACK_USAGE("ic_dhcp_init_options", 24),
STACK_USAGE("ic_bootp_init_ext", 0),
STACK_USAGE("ic_bootp_send_if", 48),
STACK_USAGE("ic_do_bootp_ext", 24),
STACK_USAGE("ic_bootp_recv", 56),
STACK_USAGE("ipip_err", 48),
STACK_USAGE("ipip_tunnel_rcv", 56),
STACK_USAGE("ipip_rcv", 0),
STACK_USAGE("mplsip_rcv", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("ipip_tunnel_xmit", 24),
STACK_USAGE("ipip_tunnel_ctl", 0),
STACK_USAGE("ipip_tunnel_setup", 0),
STACK_USAGE("ipip_tunnel_init", 8),
STACK_USAGE("ipip_tunnel_validate", 0),
STACK_USAGE("net_generic", 16),
STACK_USAGE("ipip_newlink", 96),
STACK_USAGE("ipip_changelink", 112),
STACK_USAGE("ipip_get_size", 0),
STACK_USAGE("ipip_fill_info", 32),
STACK_USAGE("ipip_init_net", 0),
STACK_USAGE("ipip_exit_batch_net", 0),
STACK_USAGE("ipip_init", 8),
STACK_USAGE("ipip_fini", 0),
STACK_USAGE("ipmr_cache_report", 88),
STACK_USAGE("ipmr_cache_unresolved", 72),
STACK_USAGE("rhltable_remove", 88),
STACK_USAGE("skb_dst", 8),
STACK_USAGE("ipmr_mfc_delete", 72),
STACK_USAGE("ipmr_mfc_add", 136),
STACK_USAGE("mroute_clean_tables", 128),
STACK_USAGE("mrtsock_destruct", 24),
STACK_USAGE("ip_mroute_setsockopt", 136),
STACK_USAGE("ip_mroute_getsockopt", 48),
STACK_USAGE("ipmr_ioctl", 80),
STACK_USAGE("ipmr_compat_ioctl", 64),
STACK_USAGE("ipmr_device_event", 32),
STACK_USAGE("ipmr_forward_finish", 24),
STACK_USAGE("ipmr_queue_xmit", 208),
STACK_USAGE("local_bh_disable", 0),
STACK_USAGE("ip_mr_forward", 72),
STACK_USAGE("ip_mr_input", 64),
STACK_USAGE("pim_rcv_v1", 32),
STACK_USAGE("pim_rcv", 16),
STACK_USAGE("ipmr_get_route", 72),
STACK_USAGE("ipmr_fill_mroute", 64),
STACK_USAGE("_ipmr_fill_mroute", 0),
STACK_USAGE("mroute_netlink_event", 40),
STACK_USAGE("ipmr_rtm_getroute", 344),
STACK_USAGE("ipmr_rtm_dumproute", 48),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("ipmr_rtm_route", 120),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("ipmr_rtm_dumplink", 104),
STACK_USAGE("ipmr_vif_seq_start", 16),
STACK_USAGE("ipmr_vif_seq_stop", 0),
STACK_USAGE("ipmr_vif_seq_show", 8),
STACK_USAGE("ipmr_mfc_seq_start", 0),
STACK_USAGE("ipmr_mfc_seq_show", 32),
STACK_USAGE("ipmr_mr_table_iter", 0),
STACK_USAGE("ipmr_seq_read", 8),
STACK_USAGE("ipmr_dump", 0),
STACK_USAGE("ipmr_net_init", 16),
STACK_USAGE("ipmr_net_exit", 8),
STACK_USAGE("ipmr_net_exit_batch", 16),
STACK_USAGE("ip_mr_init", 8),
STACK_USAGE("local_bh_enable", 0),
STACK_USAGE("rht_lock", 16),
STACK_USAGE("ipmr_rules_exit", 16),
STACK_USAGE("ipmr_rules_dump", 0),
STACK_USAGE("rht_unlock", 8),
STACK_USAGE("ipmr_rule_default", 0),
STACK_USAGE("ipmr_hash_cmp", 0),
STACK_USAGE("ipmr_new_table_set", 0),
STACK_USAGE("rht_assign_unlock", 16),
STACK_USAGE("ipmr_init_vif_indev", 8),
STACK_USAGE("mr_mfc_seq_stop", 0),
STACK_USAGE("nf_reset_ct", 8),
STACK_USAGE("reg_vif_xmit", 24),
STACK_USAGE("reg_vif_get_iflink", 0),
STACK_USAGE("reg_vif_setup", 0),
STACK_USAGE("copy_from_sockptr", 0),
STACK_USAGE("__pim_rcv", 40),
STACK_USAGE("vif_delete", 104),
STACK_USAGE("ipmr_cache_free_rcu", 0),
STACK_USAGE("ipmr_destroy_unres", 40),
STACK_USAGE("ipmr_expire_process", 56),
STACK_USAGE("nlmsg_parse_deprecated_strict", 8),
STACK_USAGE("vif_add", 216),
STACK_USAGE("mr_vif_seq_idx", 0),
STACK_USAGE("mr_vif_seq_next", 0),
STACK_USAGE("mr_mfc_seq_idx", 24),
STACK_USAGE("mr_mfc_seq_next", 16),
STACK_USAGE("mr_fill_mroute", 96),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("mr_table_dump", 112),
STACK_USAGE("mr_table_alloc", 48),
STACK_USAGE("mr_rtm_dumproute", 80),
STACK_USAGE("mr_dump", 112),
STACK_USAGE("mr_mfc_find_parent", 8),
STACK_USAGE("rhltable_lookup", 88),
STACK_USAGE("mr_mfc_find_any_parent", 24),
STACK_USAGE("mr_mfc_find_any", 40),
STACK_USAGE("vif_device_init", 8),
STACK_USAGE("ip_fib_metrics_init", 104),
STACK_USAGE("ip_route_me_harder", 224),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("nf_ip_route", 16),
STACK_USAGE("__do_replace", 96),
STACK_USAGE("compat_copy_entries_to_user", 96),
STACK_USAGE("do_ipt_set_ctl", 320),
STACK_USAGE("do_ipt_get_ctl", 296),
STACK_USAGE("ipt_register_table", 120),
STACK_USAGE("ipt_unregister_table_pre_exit", 8),
STACK_USAGE("ipt_unregister_table_exit", 40),
STACK_USAGE("icmp_match", 40),
STACK_USAGE("icmp_checkentry", 0),
STACK_USAGE("ip_tables_net_init", 0),
STACK_USAGE("ip_tables_net_exit", 0),
STACK_USAGE("local_bh_disable", 0),
STACK_USAGE("ip_tables_init", 16),
STACK_USAGE("ip_tables_fini", 0),
STACK_USAGE("ipt_do_table", 152),
STACK_USAGE("local_bh_enable", 0),
STACK_USAGE("ipt_alloc_initial_table", 48),
STACK_USAGE("cleanup_entry", 72),
STACK_USAGE("translate_table", 224),
STACK_USAGE("alloc_counters", 96),
STACK_USAGE("compat_standard_from_user", 16),
STACK_USAGE("compat_standard_to_user", 32),
STACK_USAGE("compat_table_info", 56),
STACK_USAGE("ipt_error", 8),
STACK_USAGE("reject_tg_init", 0),
STACK_USAGE("reject_tg_exit", 0),
STACK_USAGE("reject_tg", 0),
STACK_USAGE("reject_tg_check", 0),
STACK_USAGE("synproxy_tg4_init", 0),
STACK_USAGE("synproxy_tg4_exit", 0),
STACK_USAGE("synproxy_tg4", 112),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("synproxy_pernet", 16),
STACK_USAGE("synproxy_tg4_check", 24),
STACK_USAGE("synproxy_tg4_destroy", 8),
STACK_USAGE("iptable_filter_fini", 0),
STACK_USAGE("iptable_filter_table_init", 24),
STACK_USAGE("iptable_filter_net_init", 24),
STACK_USAGE("iptable_filter_net_pre_exit", 0),
STACK_USAGE("iptable_filter_net_exit", 0),
STACK_USAGE("iptable_filter_init", 8),
STACK_USAGE("iptable_mangle_net_exit", 0),
STACK_USAGE("iptable_mangle_init", 8),
STACK_USAGE("iptable_mangle_fini", 0),
STACK_USAGE("iptable_mangle_hook", 56),
STACK_USAGE("iptable_mangle_table_init", 24),
STACK_USAGE("iptable_mangle_net_pre_exit", 0),
STACK_USAGE("iptable_nat_table_init", 56),
STACK_USAGE("iptable_nat_net_pre_exit", 16),
STACK_USAGE("iptable_nat_net_exit", 0),
STACK_USAGE("iptable_nat_init", 8),
STACK_USAGE("iptable_nat_exit", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("net_generic", 16),
STACK_USAGE("iptable_raw_fini", 0),
STACK_USAGE("iptable_raw_table_init", 24),
STACK_USAGE("iptable_raw_net_pre_exit", 0),
STACK_USAGE("iptable_raw_net_exit", 0),
STACK_USAGE("iptable_raw_init", 16),
STACK_USAGE("defrag4_net_exit", 8),
STACK_USAGE("nf_defrag_init", 0),
STACK_USAGE("nf_defrag_fini", 0),
STACK_USAGE("nf_defrag_ipv4_enable", 16),
STACK_USAGE("nf_defrag_ipv4_disable", 8),
STACK_USAGE("local_bh_disable", 0),
STACK_USAGE("local_bh_enable", 0),
STACK_USAGE("ipv4_conntrack_defrag", 24),
STACK_USAGE("nf_reject_ip_tcphdr_get", 24),
STACK_USAGE("nf_reject_iphdr_validate", 16),
STACK_USAGE("nf_reject_iphdr_put", 40),
STACK_USAGE("nf_reject_ip_tcphdr_put", 48),
STACK_USAGE("nf_send_reset", 200),
STACK_USAGE("nf_send_unreach", 144),
STACK_USAGE("nf_reject_skb_v4_tcp_reset", 88),
STACK_USAGE("nf_reject_skb_v4_unreach", 72),
STACK_USAGE("nf_reject_verify_csum", 0),
STACK_USAGE("rtm_getroute_parse_ip_proto", 8),
STACK_USAGE("nexthop_select_path", 72),
STACK_USAGE("nh_notifier_mpath_info_init", 40),
STACK_USAGE("nexthop_for_each_fib6_nh", 48),
STACK_USAGE("fib6_check_nexthop", 24),
STACK_USAGE("l3mdev_fib_table", 8),
STACK_USAGE("fib_check_nexthop", 32),
STACK_USAGE("nh_res_table_upkeep", 144),
STACK_USAGE("nh_res_table_upkeep_dw", 0),
STACK_USAGE("replace_nexthop_grp_res", 72),
STACK_USAGE("__remove_nexthop", 176),
STACK_USAGE("remove_nexthop", 24),
STACK_USAGE("local_bh_disable", 0),
STACK_USAGE("nh_notifier_info_init", 48),
STACK_USAGE("replace_nexthop_single_notify", 88),
STACK_USAGE("nh_notifier_info_fini", 16),
STACK_USAGE("call_nexthop_notifiers", 80),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("rtm_new_nexthop", 456),
STACK_USAGE("nh_valid_get_del_req", 56),
STACK_USAGE("rtm_del_nexthop", 48),
STACK_USAGE("rtm_get_nexthop", 56),
STACK_USAGE("nh_dump_filtered", 32),
STACK_USAGE("local_bh_enable", 0),
STACK_USAGE("rtm_dump_nexthop", 184),
STACK_USAGE("nexthop_find_group_resilient", 16),
STACK_USAGE("__call_nexthop_res_bucket_notifiers", 96),
STACK_USAGE("rtm_dump_nexthop_bucket_nh", 88),
STACK_USAGE("rtm_dump_nexthop_bucket", 264),
STACK_USAGE("rtm_get_nexthop_bucket", 200),
STACK_USAGE("nh_netdev_event", 32),
STACK_USAGE("register_nexthop_notifier", 96),
STACK_USAGE("unregister_nexthop_notifier", 96),
STACK_USAGE("nexthop_set_hw_flags", 32),
STACK_USAGE("nexthop_bucket_set_hw_flags", 40),
STACK_USAGE("nexthop_res_grp_activity_update", 32),
STACK_USAGE("nexthop_net_exit_batch", 32),
STACK_USAGE("nexthop_net_init", 8),
STACK_USAGE("nexthop_init", 0),
STACK_USAGE("nexthop_free_rcu", 32),
STACK_USAGE("nexthop_find_by_id", 0),
STACK_USAGE("nh_fill_node", 64),
STACK_USAGE("nexthop_notify", 56),
STACK_USAGE("nh_fill_res_bucket", 72),
STACK_USAGE("ping_get_idx", 0),
STACK_USAGE("ping_seq_start", 16),
STACK_USAGE("ping_v4_seq_start", 16),
STACK_USAGE("ping_seq_next", 0),
STACK_USAGE("ping_seq_stop", 0),
STACK_USAGE("ping_v4_seq_show", 88),
STACK_USAGE("ping_v4_proc_init_net", 8),
STACK_USAGE("ping_v4_proc_exit_net", 0),
STACK_USAGE("ping_proc_init", 0),
STACK_USAGE("ping_proc_exit", 0),
STACK_USAGE("ping_init", 0),
STACK_USAGE("ping_hash", 0),
STACK_USAGE("ping_unhash", 8),
STACK_USAGE("ping_lookup", 40),
STACK_USAGE("ping_init_sock", 56),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("ping_close", 0),
STACK_USAGE("ping_bind", 64),
STACK_USAGE("ping_err", 64),
STACK_USAGE("ping_getfrag", 32),
STACK_USAGE("ping_v4_push_pending_frames", 32),
STACK_USAGE("ping_common_sendmsg", 32),
STACK_USAGE("ping_v4_sendmsg", 296),
STACK_USAGE("rcu_read_unlock", 0),
STACK_USAGE("ping_get_port", 32),
STACK_USAGE("ping_recvmsg", 72),
STACK_USAGE("ping_queue_rcv_skb", 8),
STACK_USAGE("ping_rcv", 32),
STACK_USAGE("snmp_seq_show", 344),
STACK_USAGE("netstat_seq_show", 40),
STACK_USAGE("sockstat_seq_show", 32),
STACK_USAGE("ip_proc_init_net", 16),
STACK_USAGE("ip_proc_exit_net", 8),
STACK_USAGE("ip_misc_proc_init", 0),
STACK_USAGE("inet_add_protocol", 0),
STACK_USAGE("inet_add_offload", 0),
STACK_USAGE("inet_del_protocol", 8),
STACK_USAGE("inet_del_offload", 8),
STACK_USAGE("raw_seq_start", 16),
STACK_USAGE("raw_seq_next", 0),
STACK_USAGE("raw_seq_stop", 0),
STACK_USAGE("raw_seq_show", 80),
STACK_USAGE("raw_init_net", 0),
STACK_USAGE("raw_exit_net", 0),
STACK_USAGE("raw_unhash_sk", 16),
STACK_USAGE("raw_proc_init", 0),
STACK_USAGE("raw_proc_exit", 0),
STACK_USAGE("raw_sysctl_init", 0),
STACK_USAGE("raw_init", 0),
STACK_USAGE("skb_dst", 8),
STACK_USAGE("__raw_v4_lookup", 0),
STACK_USAGE("raw_local_deliver", 72),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("raw_icmp_error", 64),
STACK_USAGE("NF_HOOK", 96),
STACK_USAGE("raw_rcv_skb", 16),
STACK_USAGE("raw_rcv", 24),
STACK_USAGE("raw_send_hdrinc", 136),
STACK_USAGE("dst_output", 24),
STACK_USAGE("raw_getfrag", 64),
STACK_USAGE("raw_sendmsg", 296),
STACK_USAGE("ip_select_ident", 0),
STACK_USAGE("raw_close", 8),
STACK_USAGE("raw_destroy", 8),
STACK_USAGE("raw_bind", 40),
STACK_USAGE("raw_recvmsg", 80),
STACK_USAGE("l3mdev_master_ifindex_by_index", 16),
STACK_USAGE("raw_sk_init", 0),
STACK_USAGE("raw_setsockopt", 0),
STACK_USAGE("raw_getsockopt", 40),
STACK_USAGE("raw_ioctl", 40),
STACK_USAGE("compat_raw_ioctl", 0),
STACK_USAGE("raw_abort", 16),
STACK_USAGE("raw_hash_sk", 24),
STACK_USAGE("__ip_rt_update_pmtu", 104),
STACK_USAGE("ip_rt_update_pmtu", 136),
STACK_USAGE("ipv4_update_pmtu", 128),
STACK_USAGE("ipv4_sk_update_pmtu", 160),
STACK_USAGE("ipv4_redirect", 120),
STACK_USAGE("skb_dst_set_noref", 16),
STACK_USAGE("ipv4_sk_redirect", 112),
STACK_USAGE("ipv4_dst_check", 0),
STACK_USAGE("ipv4_link_failure", 48),
STACK_USAGE("ip_rt_bug", 0),
STACK_USAGE("ip_rt_get_source", 152),
STACK_USAGE("ipv4_default_advmss", 0),
STACK_USAGE("ipv4_mtu", 0),
STACK_USAGE("find_exception", 56),
STACK_USAGE("ip_mtu_from_fib_result", 16),
STACK_USAGE("rt_bind_exception", 56),
STACK_USAGE("ipv4_cow_metrics", 0),
STACK_USAGE("rt_cache_route", 24),
STACK_USAGE("rt_add_uncached_list", 16),
STACK_USAGE("rt_del_uncached_list", 24),
STACK_USAGE("ipv4_dst_destroy", 24),
STACK_USAGE("rt_flush_dev", 32),
STACK_USAGE("rt_set_nexthop", 40),
STACK_USAGE("rt_dst_alloc", 24),
STACK_USAGE("rt_dst_clone", 16),
STACK_USAGE("ip_mc_validate_source", 0),
STACK_USAGE("local_bh_disable", 0),
STACK_USAGE("rt_cache_seq_start", 0),
STACK_USAGE("fib_multipath_hash", 248),
STACK_USAGE("rt_cache_seq_next", 0),
STACK_USAGE("rt_cache_seq_stop", 0),
STACK_USAGE("ip_mkroute_input", 120),
STACK_USAGE("rt_cache_seq_show", 0),
STACK_USAGE("ip_route_use_hint", 88),
STACK_USAGE("__ipv4_neigh_lookup_noref", 24),
STACK_USAGE("rt_cpu_seq_start", 0),
STACK_USAGE("ip_route_input_noref", 96),
STACK_USAGE("ip_route_input_rcu", 272),
STACK_USAGE("rt_cpu_seq_next", 0),
STACK_USAGE("rt_cpu_seq_stop", 0),
STACK_USAGE("ip_route_output_key_hash", 80),
STACK_USAGE("ip_route_output_key_hash_rcu", 104),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rt_cpu_seq_show", 40),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("ipv4_blackhole_route", 24),
STACK_USAGE("ip_route_output_flow", 24),
STACK_USAGE("ip_route_output_tunnel", 128),
STACK_USAGE("rt_fill_info", 184),
STACK_USAGE("fib_dump_info_fnhe", 104),
STACK_USAGE("local_bh_enable", 0),
STACK_USAGE("inet_rtm_getroute", 504),
STACK_USAGE("ip_rt_do_proc_init", 16),
STACK_USAGE("ip_rt_multicast_event", 0),
STACK_USAGE("ipv4_sysctl_rtcache_flush", 0),
STACK_USAGE("inet_iif", 8),
STACK_USAGE("sysctl_route_net_init", 24),
STACK_USAGE("sysctl_route_net_exit", 8),
STACK_USAGE("netns_ip_rt_init", 0),
STACK_USAGE("rt_genid_init", 8),
STACK_USAGE("fib_lookup", 32),
STACK_USAGE("ip_rt_do_proc_exit", 8),
STACK_USAGE("ipv4_inetpeer_init", 16),
STACK_USAGE("ip_neigh_gw4", 24),
STACK_USAGE("ipv4_inetpeer_exit", 8),
STACK_USAGE("ip_rt_init", 8),
STACK_USAGE("ip_static_sysctl_init", 0),
STACK_USAGE("__ipv4_neigh_lookup", 16),
STACK_USAGE("dst_discard", 0),
STACK_USAGE("__ipv6_neigh_lookup_noref_stub", 24),
STACK_USAGE("skb_header_pointer", 8),
STACK_USAGE("rt_cache_flush", 0),
STACK_USAGE("ipv4_neigh_lookup", 48),
STACK_USAGE("ip_neigh_gw6", 16),
STACK_USAGE("ipv4_confirm_neigh", 16),
STACK_USAGE("neigh_release", 0),
STACK_USAGE("neigh_event_send", 0),
STACK_USAGE("__ip_select_ident", 40),
STACK_USAGE("fnhe_flush_routes", 16),
STACK_USAGE("update_or_create_fnhe", 104),
STACK_USAGE("__ip_do_redirect", 144),
STACK_USAGE("nlmsg_parse_deprecated_strict", 8),
STACK_USAGE("ip_do_redirect", 136),
STACK_USAGE("ipv4_negative_advice", 0),
STACK_USAGE("ip_rt_send_redirect", 72),
STACK_USAGE("ip_error", 80),
STACK_USAGE("l3mdev_master_dev_rcu", 0),
STACK_USAGE("reqsk_free", 8),
STACK_USAGE("__cookie_v4_init_sequence", 72),
STACK_USAGE("cookie_v4_init_sequence", 0),
STACK_USAGE("__cookie_v4_check", 72),
STACK_USAGE("tcp_get_cookie_sock", 56),
STACK_USAGE("cookie_timestamp_decode", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("cookie_ecn_ok", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("cookie_tcp_reqsk_alloc", 32),
STACK_USAGE("cookie_v4_check", 168),
STACK_USAGE("cookie_init_timestamp", 0),
STACK_USAGE("ipv4_privileged_ports", 104),
STACK_USAGE("ipv4_sysctl_init_net", 24),
STACK_USAGE("ipv4_sysctl_exit_net", 8),
STACK_USAGE("sysctl_ipv4_init", 16),
STACK_USAGE("ipv4_ping_group_range", 160),
STACK_USAGE("ipv4_fwd_update_priority", 24),
STACK_USAGE("proc_tcp_congestion_control", 136),
STACK_USAGE("proc_tcp_available_congestion_control", 104),
STACK_USAGE("proc_allowed_congestion_control", 112),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("proc_tcp_fastopen_key", 248),
STACK_USAGE("proc_configure_early_demux", 24),
STACK_USAGE("proc_tcp_early_demux", 16),
STACK_USAGE("proc_udp_early_demux", 16),
STACK_USAGE("proc_tfo_blackhole_detect_timeout", 16),
STACK_USAGE("proc_tcp_available_ulp", 104),
STACK_USAGE("proc_fib_multipath_hash_policy", 24),
STACK_USAGE("proc_fib_multipath_hash_fields", 24),
STACK_USAGE("ipv4_local_port_range", 128),
STACK_USAGE("do_tcp_sendpages", 136),
STACK_USAGE("sock_rps_record_flow", 16),
STACK_USAGE("tcp_sendpage_locked", 40),
STACK_USAGE("tcp_sendpage", 40),
STACK_USAGE("tcp_free_fastopen_req", 8),
STACK_USAGE("tcp_sendmsg_fastopen", 56),
STACK_USAGE("tcp_sendmsg_locked", 216),
STACK_USAGE("tcp_sendmsg", 32),
STACK_USAGE("tcp_peek_sndq", 40),
STACK_USAGE("tcp_cleanup_rbuf", 16),
STACK_USAGE("sk_wmem_schedule", 0),
STACK_USAGE("__sk_defer_free_flush", 8),
STACK_USAGE("sk_mem_reclaim_partial", 0),
STACK_USAGE("tcp_recv_skb", 64),
STACK_USAGE("tcp_read_sock", 104),
STACK_USAGE("tcp_peek_len", 0),
STACK_USAGE("tcp_set_rcvlowat", 16),
STACK_USAGE("tcp_update_recv_tstamps", 16),
STACK_USAGE("tcp_mmap", 0),
STACK_USAGE("local_bh_disable", 0),
STACK_USAGE("tcp_recv_timestamp", 48),
STACK_USAGE("tcp_recvmsg_locked", 160),
STACK_USAGE("sk_stream_moderate_sndbuf", 0),
STACK_USAGE("tcp_recvmsg", 104),
STACK_USAGE("tcp_set_state", 96),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("tcp_shutdown", 16),
STACK_USAGE("tcp_orphan_count_sum", 24),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("tcp_orphan_update", 24),
STACK_USAGE("tcp_check_oom", 24),
STACK_USAGE("__tcp_close", 40),
STACK_USAGE("tcp_close", 16),
STACK_USAGE("tcp_write_queue_purge", 32),
STACK_USAGE("tcp_disconnect", 16),
STACK_USAGE("local_bh_enable", 0),
STACK_USAGE("__tcp_sock_set_cork", 8),
STACK_USAGE("tcp_sock_set_cork", 16),
STACK_USAGE("__tcp_sock_set_nodelay", 8),
STACK_USAGE("tcp_sock_set_nodelay", 8),
STACK_USAGE("tcp_enter_memory_pressure", 0),
STACK_USAGE("tcp_sock_set_quickack", 16),
STACK_USAGE("tcp_sock_set_syncnt", 24),
STACK_USAGE("tcp_sock_set_user_timeout", 16),
STACK_USAGE("tcp_sock_set_keepidle_locked", 8),
STACK_USAGE("tcp_sock_set_keepidle", 24),
STACK_USAGE("tcp_sock_set_keepintvl", 24),
STACK_USAGE("tcp_sock_set_keepcnt", 24),
STACK_USAGE("tcp_set_window_clamp", 0),
STACK_USAGE("tcp_leave_memory_pressure", 8),
STACK_USAGE("tcp_setsockopt", 104),
STACK_USAGE("tcp_get_info", 56),
STACK_USAGE("tcp_get_timestamping_opt_stats", 64),
STACK_USAGE("memcpy_to_msg", 0),
STACK_USAGE("tcp_init_sock", 8),
STACK_USAGE("tcp_bpf_bypass_getsockopt", 0),
STACK_USAGE("tcp_getsockopt", 632),
STACK_USAGE("__tcp_alloc_md5sig_pool", 40),
STACK_USAGE("tcp_alloc_md5sig_pool", 0),
STACK_USAGE("tcp_get_md5sig_pool", 0),
STACK_USAGE("tcp_md5_hash_skb_data", 112),
STACK_USAGE("tcp_md5_hash_key", 64),
STACK_USAGE("tcp_inbound_md5_hash", 104),
STACK_USAGE("tcp_done", 16),
STACK_USAGE("tcp_abort", 24),
STACK_USAGE("set_thash_entries", 0),
STACK_USAGE("tcp_init", 16),
STACK_USAGE("tcp_poll", 32),
STACK_USAGE("tcp_ioctl", 40),
STACK_USAGE("tcp_mark_push", 0),
STACK_USAGE("tcp_skb_entail", 16),
STACK_USAGE("tcp_push", 0),
STACK_USAGE("tcp_fast_path_check", 0),
STACK_USAGE("tcp_splice_data_recv", 8),
STACK_USAGE("tcp_splice_read", 120),
STACK_USAGE("tcp_stream_alloc_skb", 32),
STACK_USAGE("tcp_send_mss", 24),
STACK_USAGE("tcp_remove_empty_skb", 16),
STACK_USAGE("tcp_bpf_sendmsg_redir", 88),
STACK_USAGE("tcp_msg_wait_data", 88),
STACK_USAGE("tcp_bpf_recvmsg_parser", 64),
STACK_USAGE("tcp_bpf_recvmsg", 72),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("tcp_bpf_send_verdict", 88),
STACK_USAGE("tcp_bpf_sendmsg", 832),
STACK_USAGE("sk_psock_get", 16),
STACK_USAGE("tcp_bpf_sendpage", 784),
STACK_USAGE("tcp_bpf_v4_build_proto", 0),
STACK_USAGE("tcp_bpf_update_proto", 32),
STACK_USAGE("tcp_bpf_clone", 0),
STACK_USAGE("tcp_bpf_push", 104),
STACK_USAGE("tcp_unregister_congestion_control", 8),
STACK_USAGE("tcp_ca_get_key_by_name", 16),
STACK_USAGE("tcp_ca_get_name_by_key", 16),
STACK_USAGE("tcp_assign_congestion_control", 16),
STACK_USAGE("tcp_init_congestion_control", 8),
STACK_USAGE("tcp_cleanup_congestion_control", 8),
STACK_USAGE("tcp_set_default_congestion_control", 32),
STACK_USAGE("tcp_congestion_default", 0),
STACK_USAGE("tcp_ca_find", 32),
STACK_USAGE("tcp_get_available_congestion_control", 48),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("tcp_get_default_congestion_control", 16),
STACK_USAGE("tcp_get_allowed_congestion_control", 48),
STACK_USAGE("tcp_set_allowed_congestion_control", 72),
STACK_USAGE("tcp_set_congestion_control", 40),
STACK_USAGE("tcp_ca_find_autoload", 32),
STACK_USAGE("tcp_slow_start", 0),
STACK_USAGE("tcp_cong_avoid_ai", 0),
STACK_USAGE("tcp_reno_cong_avoid", 0),
STACK_USAGE("tcp_reno_ssthresh", 0),
STACK_USAGE("tcp_reno_undo_cwnd", 0),
STACK_USAGE("tcp_ca_find_key", 0),
STACK_USAGE("tcp_register_congestion_control", 16),
STACK_USAGE("cubictcp_init", 0),
STACK_USAGE("cubictcp_cwnd_event", 0),
STACK_USAGE("cubictcp_cong_avoid", 40),
STACK_USAGE("cubictcp_recalc_ssthresh", 0),
STACK_USAGE("cubictcp_state", 0),
STACK_USAGE("cubictcp_acked", 0),
STACK_USAGE("cubictcp_register", 0),
STACK_USAGE("cubictcp_unregister", 0),
STACK_USAGE("tcp_fastopen_add_skb", 16),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("tcp_fastopen_ctx_free", 0),
STACK_USAGE("tcp_try_fastopen", 120),
STACK_USAGE("tcp_fastopen_destroy_cipher", 0),
STACK_USAGE("tcp_fastopen_cookie_check", 24),
STACK_USAGE("tcp_fastopen_defer_connect", 56),
STACK_USAGE("tcp_fastopen_active_disable", 0),
STACK_USAGE("tcp_fastopen_ctx_destroy", 0),
STACK_USAGE("tcp_fastopen_active_should_disable", 0),
STACK_USAGE("tcp_fastopen_active_disable_ofo_check", 24),
STACK_USAGE("tcp_fastopen_active_detect_blackhole", 0),
STACK_USAGE("tcp_fastopen_reset_cipher", 32),
STACK_USAGE("tcp_fastopen_init_key_once", 56),
STACK_USAGE("tcp_fastopen_get_cipher", 32),
STACK_USAGE("tcp_mark_skb_lost", 0),
STACK_USAGE("tcp_sacktag_one", 48),
STACK_USAGE("tcp_shifted_skb", 48),
STACK_USAGE("tcp_skb_shift", 0),
STACK_USAGE("tcp_sacktag_walk", 96),
STACK_USAGE("sock_owned_by_me", 8),
STACK_USAGE("sock_owned_by_user", 8),
STACK_USAGE("tcp_sacktag_write_queue", 168),
STACK_USAGE("local_bh_disable", 0),
STACK_USAGE("tcp_gro_dev_warn", 24),
STACK_USAGE("tcp_clear_retrans", 0),
STACK_USAGE("tcp_enter_loss", 48),
STACK_USAGE("tcp_mark_head_lost", 40),
STACK_USAGE("sk_wake_async", 24),
STACK_USAGE("tcp_try_undo_recovery", 16),
STACK_USAGE("tcp_try_undo_loss", 8),
STACK_USAGE("tcp_cwnd_reduction", 0),
STACK_USAGE("tcp_enter_cwr", 8),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("tcp_mtup_probe_success", 24),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("tcp_simple_retransmit", 16),
STACK_USAGE("tcp_enter_recovery", 8),
STACK_USAGE("tcp_enter_quickack_mode", 0),
STACK_USAGE("tcp_fastretrans_alert", 56),
STACK_USAGE("tcp_ack_update_rtt", 112),
STACK_USAGE("tcp_synack_rtt_meas", 96),
STACK_USAGE("tcp_rearm_rto", 16),
STACK_USAGE("local_bh_enable", 0),
STACK_USAGE("tcp_oow_rate_limited", 0),
STACK_USAGE("tcp_send_challenge_ack", 32),
STACK_USAGE("tcp_process_tlp_ack", 16),
STACK_USAGE("tcp_ecn_check_ce", 8),
STACK_USAGE("tcp_ack", 312),
STACK_USAGE("tcp_parse_options", 80),
STACK_USAGE("tcp_parse_md5sig_option", 0),
STACK_USAGE("tcp_reset", 16),
STACK_USAGE("tcp_fin", 8),
STACK_USAGE("tcp_send_dupack", 24),
STACK_USAGE("tcp_try_coalesce", 48),
STACK_USAGE("tcp_drop_reason", 0),
STACK_USAGE("tcp_drop", 0),
STACK_USAGE("tcp_try_rmem_schedule", 80),
STACK_USAGE("tcp_queue_rcv", 48),
STACK_USAGE("tcp_send_rcvq", 64),
STACK_USAGE("tcp_grow_window", 8),
STACK_USAGE("tcp_data_ready", 0),
STACK_USAGE("tcp_data_queue", 120),
STACK_USAGE("tcp_rbtree_insert", 0),
STACK_USAGE("tcp_collapse", 192),
STACK_USAGE("tcp_prune_ofo_queue", 56),
STACK_USAGE("tcp_check_space", 32),
STACK_USAGE("tcp_data_snd_check", 8),
STACK_USAGE("__tcp_ack_snd_check", 24),
STACK_USAGE("tcp_check_urg", 16),
STACK_USAGE("tcp_urg", 40),
STACK_USAGE("tcp_validate_incoming", 112),
STACK_USAGE("tcp_rcv_established", 56),
STACK_USAGE("tcp_init_transfer", 112),
STACK_USAGE("tcp_initialize_rcv_mss", 0),
STACK_USAGE("tcp_finish_connect", 16),
STACK_USAGE("tcp_rcv_fastopen_synack", 64),
STACK_USAGE("tcp_rcv_synrecv_state_fastopen", 8),
STACK_USAGE("tcp_rcv_state_process", 72),
STACK_USAGE("tcp_rcv_rtt_measure_ts", 0),
STACK_USAGE("inet_reqsk_alloc", 40),
STACK_USAGE("tcp_get_syncookie_mss", 56),
STACK_USAGE("tcp_conn_request", 328),
STACK_USAGE("tcp_rcv_space_adjust", 40),
STACK_USAGE("tcp_rto_min_us", 16),
STACK_USAGE("tcp_event_data_recv", 24),
STACK_USAGE("tcp_update_pacing_rate", 0),
STACK_USAGE("tcp_init_cwnd", 0),
STACK_USAGE("tcp_v4_reqsk_destructor", 0),
STACK_USAGE("tcp_v4_init_ts_off", 0),
STACK_USAGE("__tcp_md5_do_lookup", 40),
STACK_USAGE("tcp_twsk_unique", 32),
STACK_USAGE("tcp_md5_do_lookup_exact", 64),
STACK_USAGE("xfrm4_policy_check", 0),
STACK_USAGE("tcp_v4_md5_lookup", 16),
STACK_USAGE("tcp_md5_do_add", 72),
STACK_USAGE("skb_dst_set_noref", 16),
STACK_USAGE("tcp_md5_do_del", 8),
STACK_USAGE("tcp_v4_parse_md5_keys", 264),
STACK_USAGE("reqsk_put", 8),
STACK_USAGE("tcp_v4_md5_hash_hdr", 96),
STACK_USAGE("tcp_v4_md5_hash_skb", 112),
STACK_USAGE("tcp_checksum_complete", 0),
STACK_USAGE("tcp_v4_route_req", 48),
STACK_USAGE("tcp_v4_conn_request", 16),
STACK_USAGE("tcp_v4_syn_recv_sock", 80),
STACK_USAGE("tcp_v4_get_syncookie", 48),
STACK_USAGE("tcp_v4_do_rcv", 24),
STACK_USAGE("tcp_v4_early_demux", 24),
STACK_USAGE("tcp_add_backlog", 104),
STACK_USAGE("sock_owned_by_user", 8),
STACK_USAGE("tcp_v4_pre_connect", 32),
STACK_USAGE("tcp_filter", 0),
STACK_USAGE("tcp_v4_fill_cb", 0),
STACK_USAGE("local_bh_disable", 0),
STACK_USAGE("tcp_v4_rcv", 160),
STACK_USAGE("sock_put", 0),
STACK_USAGE("tcp_v4_connect", 112),
STACK_USAGE("inet_sk_rx_dst_set", 16),
STACK_USAGE("tcp_segs_in", 0),
STACK_USAGE("tcp_v4_init_sock", 8),
STACK_USAGE("tcp_v4_destroy_sock", 24),
STACK_USAGE("listening_get_first", 40),
STACK_USAGE("listening_get_next", 16),
STACK_USAGE("established_get_first", 40),
STACK_USAGE("established_get_next", 16),
STACK_USAGE("tcp_get_idx", 24),
STACK_USAGE("tcp_seek_last_pos", 40),
STACK_USAGE("tcp_seq_start", 24),
STACK_USAGE("tcp_seq_next", 24),
STACK_USAGE("tcp_seq_stop", 0),
STACK_USAGE("tcp4_seq_show", 168),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("bpf_iter_tcp_realloc_batch", 24),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("bpf_iter_tcp_batch", 72),
STACK_USAGE("bpf_iter_tcp_seq_start", 0),
STACK_USAGE("bpf_iter_tcp_seq_next", 24),
STACK_USAGE("bpf_iter_tcp_seq_show", 88),
STACK_USAGE("bpf_iter_tcp_seq_stop", 72),
STACK_USAGE("tcp4_proc_init_net", 0),
STACK_USAGE("tcp4_proc_exit_net", 0),
STACK_USAGE("tcp4_proc_init", 0),
STACK_USAGE("tcp4_proc_exit", 0),
STACK_USAGE("tcp_stream_memory_free", 0),
STACK_USAGE("tcp_sk_exit", 8),
STACK_USAGE("tcp_sk_init", 8),
STACK_USAGE("tcp_sk_exit_batch", 16),
STACK_USAGE("bpf_iter_tcp", 0),
STACK_USAGE("bpf_iter_init_tcp", 16),
STACK_USAGE("local_bh_enable", 0),
STACK_USAGE("bpf_iter_fini_tcp", 8),
STACK_USAGE("bpf_iter_tcp_get_func_proto", 0),
STACK_USAGE("bpf_iter_register", 0),
STACK_USAGE("tcp_v4_init", 32),
STACK_USAGE("ip_route_newports", 16),
STACK_USAGE("tcp_v4_mtu_reduced", 24),
STACK_USAGE("trace_tcp_bad_csum", 0),
STACK_USAGE("tcp_req_err", 16),
STACK_USAGE("tcp_ld_RTO_revert", 24),
STACK_USAGE("nf_reset_ct", 8),
STACK_USAGE("tcp_v4_err", 88),
STACK_USAGE("dst_check", 0),
STACK_USAGE("__tcp_v4_send_check", 12),
STACK_USAGE("tcp_v4_send_check", 12),
STACK_USAGE("tcp_v4_send_reset", 200),
STACK_USAGE("rcu_read_unlock", 0),
STACK_USAGE("l3mdev_master_ifindex_by_index", 16),
STACK_USAGE("tcp_v4_send_ack", 168),
STACK_USAGE("tcp_v4_timewait_ack", 48),
STACK_USAGE("tcp_v4_reqsk_send_ack", 80),
STACK_USAGE("tcp_v4_init_seq", 0),
STACK_USAGE("tcp_v4_send_synack", 208),
STACK_USAGE("tcp_net_metrics_exit_batch", 0),
STACK_USAGE("tcp_metrics_init", 0),
STACK_USAGE("__tcp_get_metrics", 40),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("tcp_get_metrics", 104),
STACK_USAGE("tcp_update_metrics", 24),
STACK_USAGE("tcp_init_metrics", 40),
STACK_USAGE("tcp_peer_is_proven", 80),
STACK_USAGE("tcp_fastopen_cache_get", 40),
STACK_USAGE("tcp_fastopen_cache_set", 48),
STACK_USAGE("tcp_metrics_fill_info", 120),
STACK_USAGE("tcp_metrics_nl_dump", 64),
STACK_USAGE("tcp_metrics_nl_cmd_get", 112),
STACK_USAGE("read_seqbegin", 24),
STACK_USAGE("tcp_metrics_flush_all", 40),
STACK_USAGE("tcp_metrics_nl_cmd_del", 96),
STACK_USAGE("tcpm_suck_dst", 0),
STACK_USAGE("set_tcpmhash_entries", 0),
STACK_USAGE("tcp_net_metrics_init", 16),
STACK_USAGE("local_bh_disable", 0),
STACK_USAGE("tcp_time_wait", 40),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("local_bh_enable", 0),
STACK_USAGE("tcp_twsk_destructor", 0),
STACK_USAGE("tcp_openreq_init_rwin", 120),
STACK_USAGE("tcp_ca_openreq_child", 24),
STACK_USAGE("tcp_create_openreq_child", 32),
STACK_USAGE("tcp_check_req", 112),
STACK_USAGE("rcu_read_unlock", 0),
STACK_USAGE("tcp_child_process", 32),
STACK_USAGE("tcp_timewait_state_process", 64),
STACK_USAGE("tcp_gro_receive", 56),
STACK_USAGE("tcp_gro_complete", 0),
STACK_USAGE("refcount_sub_and_test", 16),
STACK_USAGE("tcp4_gso_segment", 16),
STACK_USAGE("tcp4_gro_receive", 32),
STACK_USAGE("tcp4_gro_complete", 12),
STACK_USAGE("tcpv4_offload_init", 0),
STACK_USAGE("tcp_gso_segment", 88),
STACK_USAGE("tcp_tsq_write", 8),
STACK_USAGE("tcp_tsq_handler", 16),
STACK_USAGE("tcp_tasklet_func", 72),
STACK_USAGE("tcp_release_cb", 16),
STACK_USAGE("tcp_tasklet_init", 8),
STACK_USAGE("tcp_wfree", 32),
STACK_USAGE("tcp_pace_kick", 16),
STACK_USAGE("tcp_update_skb_after_send", 0),
STACK_USAGE("__tcp_transmit_skb", 240),
STACK_USAGE("tcp_cwnd_restart", 32),
STACK_USAGE("tcp_adjust_pcount", 0),
STACK_USAGE("mptcp_skb_ext_copy", 16),
STACK_USAGE("tcp_fragment", 72),
STACK_USAGE("__pskb_trim_head", 64),
STACK_USAGE("tcp_trim_head", 24),
STACK_USAGE("__tcp_mtu_to_mss", 24),
STACK_USAGE("tcp_mtu_to_mss", 8),
STACK_USAGE("tcp_mss_to_mtu", 24),
STACK_USAGE("tcp_mtup_init", 8),
STACK_USAGE("sock_owned_by_me", 8),
STACK_USAGE("tcp_sync_mss", 24),
STACK_USAGE("tcp_current_mss", 128),
STACK_USAGE("tcp_init_tso_segs", 0),
STACK_USAGE("tcp_select_initial_window", 16),
STACK_USAGE("tcp_mtu_check_reprobe", 8),
STACK_USAGE("tcp_can_coalesce_send_queue_head", 0),
STACK_USAGE("tcp_call_bpf_3arg", 104),
STACK_USAGE("tcp_chrono_start", 0),
STACK_USAGE("tcp_chrono_stop", 0),
STACK_USAGE("tcp_write_xmit", 120),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("tcp_schedule_loss_probe", 24),
STACK_USAGE("tcp_send_loss_probe", 24),
STACK_USAGE("__tcp_push_pending_frames", 16),
STACK_USAGE("tcp_push_one", 0),
STACK_USAGE("tcp_wmem_free_skb", 8),
STACK_USAGE("__tcp_select_window", 40),
STACK_USAGE("tcp_skb_collapse_tstamp", 0),
STACK_USAGE("tcp_retrans_try_collapse", 56),
STACK_USAGE("__tcp_retransmit_skb", 40),
STACK_USAGE("tcp_retransmit_skb", 16),
STACK_USAGE("tcp_xmit_retransmit_queue", 72),
STACK_USAGE("sk_forced_mem_schedule", 0),
STACK_USAGE("tcp_send_fin", 24),
STACK_USAGE("tcp_send_active_reset", 24),
STACK_USAGE("tcp_send_synack", 112),
STACK_USAGE("tcp_make_synack", 248),
STACK_USAGE("tcp_connect", 136),
STACK_USAGE("tcp_send_delayed_ack", 24),
STACK_USAGE("__tcp_send_ack", 16),
STACK_USAGE("tcp_send_ack", 0),
STACK_USAGE("tcp_send_window_probe", 8),
STACK_USAGE("tcp_write_wakeup", 32),
STACK_USAGE("tcp_send_probe0", 16),
STACK_USAGE("tcp_rtx_synack", 136),
STACK_USAGE("bpf_skops_hdr_opt_len", 112),
STACK_USAGE("tcp_mstamp_refresh", 8),
STACK_USAGE("tcp_options_write", 48),
STACK_USAGE("tcp_event_new_data_sent", 24),
STACK_USAGE("tcp_syn_options", 136),
STACK_USAGE("tcp_established_options", 64),
STACK_USAGE("tcp_rate_gen", 0),
STACK_USAGE("tcp_rate_check_app_limited", 0),
STACK_USAGE("tcp_rate_skb_sent", 0),
STACK_USAGE("tcp_rate_skb_delivered", 0),
STACK_USAGE("tcp_rack_advance", 0),
STACK_USAGE("tcp_rack_reo_timeout", 40),
STACK_USAGE("tcp_rack_update_reo_wnd", 0),
STACK_USAGE("tcp_newreno_mark_lost", 16),
STACK_USAGE("tcp_rack_skb_timeout", 0),
STACK_USAGE("tcp_rack_detect_loss", 48),
STACK_USAGE("tcp_rack_mark_lost", 32),
STACK_USAGE("tcp_out_of_resources", 16),
STACK_USAGE("sk_mem_reclaim", 0),
STACK_USAGE("retransmits_timed_out", 104),
STACK_USAGE("__sk_dst_reset", 8),
STACK_USAGE("tcp_delack_timer_handler", 8),
STACK_USAGE("tcp_delack_timer", 24),
STACK_USAGE("tcp_clamp_probe0_to_user_timeout", 16),
STACK_USAGE("tcp_retransmit_timer", 136),
STACK_USAGE("tcp_write_timer_handler", 16),
STACK_USAGE("tcp_write_timer", 24),
STACK_USAGE("tcp_syn_ack_timeout", 8),
STACK_USAGE("tcp_set_keepalive", 0),
STACK_USAGE("tcp_keepalive_timer", 32),
STACK_USAGE("tcp_write_err", 8),
STACK_USAGE("tcp_compressed_ack_kick", 24),
STACK_USAGE("tcp_init_xmit_timers", 8),
STACK_USAGE("tcp_update_ulp", 0),
STACK_USAGE("tcp_cleanup_ulp", 8),
STACK_USAGE("tcp_set_ulp", 32),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("tcp_register_ulp", 32),
STACK_USAGE("tcp_unregister_ulp", 8),
STACK_USAGE("tcp_get_available_ulp", 48),
STACK_USAGE("tunnel64_rcv", 16),
STACK_USAGE("tunnelmpls4_rcv", 16),
STACK_USAGE("tunnel4_err", 32),
STACK_USAGE("tunnel64_err", 32),
STACK_USAGE("tunnelmpls4_err", 32),
STACK_USAGE("tunnel4_init", 0),
STACK_USAGE("tunnel4_fini", 0),
STACK_USAGE("xfrm4_tunnel_register", 24),
STACK_USAGE("xfrm4_tunnel_deregister", 16),
STACK_USAGE("tunnel4_rcv", 16),
STACK_USAGE("udp_cmsg_send", 0),
STACK_USAGE("udp_sendmsg", 352),
STACK_USAGE("xfrm4_policy_check", 0),
STACK_USAGE("udp_lib_checksum_complete", 0),
STACK_USAGE("udp_sendpage", 168),
STACK_USAGE("udp_lib_lport_inuse", 56),
STACK_USAGE("udp_rmem_release", 40),
STACK_USAGE("netif_index_is_l3_master", 16),
STACK_USAGE("udp_skb_destructor", 0),
STACK_USAGE("__udp_enqueue_schedule_skb", 48),
STACK_USAGE("udp_destruct_sock", 32),
STACK_USAGE("udp_init_sock", 16),
STACK_USAGE("skb_consume_udp", 24),
STACK_USAGE("__first_packet_length", 48),
STACK_USAGE("first_packet_length", 64),
STACK_USAGE("udp_lib_lport_inuse2", 56),
STACK_USAGE("udp_ioctl", 16),
STACK_USAGE("lock_sock_fast", 8),
STACK_USAGE("__skb_recv_udp", 136),
STACK_USAGE("unlock_sock_fast", 8),
STACK_USAGE("udp_tunnel_encap_enable", 0),
STACK_USAGE("udp_lib_hash", 0),
STACK_USAGE("udp_read_sock", 72),
STACK_USAGE("udp_recvmsg", 112),
STACK_USAGE("udp_lib_close", 0),
STACK_USAGE("udp_pre_connect", 40),
STACK_USAGE("__udp_disconnect", 8),
STACK_USAGE("udp_disconnect", 8),
STACK_USAGE("udp_lib_unhash", 56),
STACK_USAGE("udp_lib_rehash", 56),
STACK_USAGE("udp_v4_rehash", 0),
STACK_USAGE("udplite_getfrag", 16),
STACK_USAGE("udp_queue_rcv_one_skb", 32),
STACK_USAGE("udp_queue_rcv_skb", 24),
STACK_USAGE("udp_sk_rx_dst_set", 16),
STACK_USAGE("__udp4_lib_mcast_deliver", 120),
STACK_USAGE("udp_lib_get_port", 152),
STACK_USAGE("udp_unicast_rcv_skb", 16),
STACK_USAGE("__udp4_lib_rcv", 112),
STACK_USAGE("dst_clone", 0),
STACK_USAGE("udp_v4_early_demux", 104),
STACK_USAGE("udp_rcv", 0),
STACK_USAGE("udp_destroy_sock", 32),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("udp_lib_setsockopt", 56),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("udp_setsockopt", 0),
STACK_USAGE("udp_lib_getsockopt", 56),
STACK_USAGE("udp_getsockopt", 0),
STACK_USAGE("udp_poll", 24),
STACK_USAGE("udp_abort", 16),
STACK_USAGE("udp_get_first", 40),
STACK_USAGE("udp_get_idx", 24),
STACK_USAGE("udp_seq_start", 0),
STACK_USAGE("udp_seq_next", 24),
STACK_USAGE("udp_seq_stop", 0),
STACK_USAGE("udp4_seq_show", 80),
STACK_USAGE("bpf_iter_udp_seq_show", 104),
STACK_USAGE("bpf_iter_udp_seq_stop", 80),
STACK_USAGE("udp4_proc_init_net", 0),
STACK_USAGE("udp4_proc_exit_net", 0),
STACK_USAGE("udp4_proc_init", 0),
STACK_USAGE("udp4_proc_exit", 0),
STACK_USAGE("set_uhash_entries", 8),
STACK_USAGE("udp_table_init", 16),
STACK_USAGE("udp_flow_hashrnd", 16),
STACK_USAGE("udp_sysctl_init", 0),
STACK_USAGE("bpf_iter_udp", 0),
STACK_USAGE("bpf_iter_init_udp", 32),
STACK_USAGE("bpf_iter_fini_udp", 8),
STACK_USAGE("refcount_dec_and_test", 8),
STACK_USAGE("bpf_iter_register", 0),
STACK_USAGE("udp_init", 16),
STACK_USAGE("udp_v4_get_port", 0),
STACK_USAGE("lookup_reuseport", 72),
STACK_USAGE("udp4_lib_lookup2", 80),
STACK_USAGE("udp_rcv_segment", 24),
STACK_USAGE("nf_reset_ct", 8),
STACK_USAGE("__udp4_lib_lookup", 168),
STACK_USAGE("udp_post_segment_fix_csum", 0),
STACK_USAGE("__udp4_lib_lookup_skb", 64),
STACK_USAGE("udp4_lib_lookup_skb", 48),
STACK_USAGE("udp_encap_enable", 0),
STACK_USAGE("udp_encap_disable", 0),
STACK_USAGE("__udp4_lib_err", 104),
STACK_USAGE("rcu_read_unlock", 0),
STACK_USAGE("l3mdev_master_ifindex_by_index", 16),
STACK_USAGE("udp_err", 0),
STACK_USAGE("udp_flush_pending_frames", 0),
STACK_USAGE("udp4_hwcsum", 72),
STACK_USAGE("udp_set_csum", 80),
STACK_USAGE("udp_send_skb", 72),
STACK_USAGE("udp_push_pending_frames", 24),
STACK_USAGE("udp_bpf_v4_build_proto", 0),
STACK_USAGE("udp_bpf_update_proto", 24),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("udp_bpf_recvmsg", 160),
STACK_USAGE("skb_udp_tunnel_segment", 112),
STACK_USAGE("skb_gro_postpull_rcsum", 8),
STACK_USAGE("__udpv4_gso_segment_csum", 72),
STACK_USAGE("pskb_may_pull", 0),
STACK_USAGE("__udp_gso_segment", 80),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("refcount_sub_and_test", 16),
STACK_USAGE("udp4_ufo_fragment", 64),
STACK_USAGE("skb_gro_receive_list", 16),
STACK_USAGE("udp_gro_receive", 48),
STACK_USAGE("udp4_gro_receive", 88),
STACK_USAGE("udp_gro_complete", 24),
STACK_USAGE("udp4_gro_complete", 12),
STACK_USAGE("udpv4_offload_init", 0),
STACK_USAGE("udp_sock_create4", 56),
STACK_USAGE("udp_tunnel_notify_add_rx_port", 40),
STACK_USAGE("udp_tunnel_notify_del_rx_port", 40),
STACK_USAGE("udp_tunnel_xmit_skb", 64),
STACK_USAGE("udp_tunnel_sock_release", 8),
STACK_USAGE("udp_tun_rx_dst", 64),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("setup_udp_tunnel_sock", 0),
STACK_USAGE("udp_tunnel_push_rx_port", 16),
STACK_USAGE("udp_tunnel_drop_rx_port", 16),
STACK_USAGE("udp_tunnel_get_rx_info", 8),
STACK_USAGE("udp_tunnel_nic_is_empty", 0),
STACK_USAGE("__udp_tunnel_nic_get_port", 0),
STACK_USAGE("__udp_tunnel_nic_set_port_priv", 0),
STACK_USAGE("__udp_tunnel_nic_device_sync", 64),
STACK_USAGE("udp_tunnel_nic_try_existing", 40),
STACK_USAGE("__udp_tunnel_nic_add_port", 32),
STACK_USAGE("__udp_tunnel_nic_del_port", 24),
STACK_USAGE("__udp_tunnel_nic_reset_ntf", 24),
STACK_USAGE("__udp_tunnel_nic_dump_size", 0),
STACK_USAGE("__udp_tunnel_nic_dump_write", 80),
STACK_USAGE("udp_tunnel_nic_flush", 24),
STACK_USAGE("udp_tunnel_nic_device_sync_work", 48),
STACK_USAGE("udp_tunnel_nic_netdevice_event", 48),
STACK_USAGE("udp_tunnel_nic_init_module", 8),
STACK_USAGE("udp_tunnel_nic_cleanup_module", 0),
STACK_USAGE("udplite4_register", 8),
STACK_USAGE("udp_lib_hash", 0),
STACK_USAGE("udp_lib_close", 0),
STACK_USAGE("udplite_rcv", 0),
STACK_USAGE("udplite_err", 0),
STACK_USAGE("udplite_sk_init", 8),
STACK_USAGE("udplite4_proc_init_net", 0),
STACK_USAGE("udplite4_proc_exit_net", 0),
STACK_USAGE("xfrm4_rcv", 0),
STACK_USAGE("xfrm4_rcv_encap_finish2", 8),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("xfrm4_rcv_encap_finish", 16),
STACK_USAGE("xfrm4_transport_finish", 88),
STACK_USAGE("xfrm4_udp_encap_rcv", 40),
STACK_USAGE("__xfrm4_output", 24),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("xfrm4_output", 104),
STACK_USAGE("xfrm4_local_error", 0),
STACK_USAGE("xfrm4_update_pmtu", 0),
STACK_USAGE("xfrm4_redirect", 0),
STACK_USAGE("xfrm4_dst_destroy", 16),
STACK_USAGE("xfrm4_dst_ifdown", 0),
STACK_USAGE("__xfrm4_dst_lookup", 40),
STACK_USAGE("xfrm4_net_init", 24),
STACK_USAGE("xfrm4_net_exit", 16),
STACK_USAGE("xfrm4_init", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("xfrm4_dst_lookup", 72),
STACK_USAGE("xfrm4_get_saddr", 80),
STACK_USAGE("xfrm4_fill_dst", 0),
STACK_USAGE("xfrm4_esp_err", 32),
STACK_USAGE("xfrm4_ah_rcv", 24),
STACK_USAGE("xfrm4_ah_err", 32),
STACK_USAGE("xfrm4_ipcomp_rcv", 24),
STACK_USAGE("xfrm4_ipcomp_err", 32),
STACK_USAGE("xfrm4_protocol_register", 48),
STACK_USAGE("xfrm4_protocol_deregister", 40),
STACK_USAGE("xfrm4_protocol_init", 0),
STACK_USAGE("xfrm4_rcv_cb", 32),
STACK_USAGE("xfrm4_rcv_encap", 40),
STACK_USAGE("xfrm4_esp_rcv", 24),
STACK_USAGE("xfrm4_state_init", 0),
STACK_USAGE("ipv6_add_addr_hash", 40),
STACK_USAGE("ipv6_add_addr", 88),
STACK_USAGE("rfc3315_s14_backoff_update", 16),
STACK_USAGE("check_cleanup_prefix_route", 48),
STACK_USAGE("cleanup_prefix_route", 24),
STACK_USAGE("ipv6_del_addr", 56),
STACK_USAGE("ipv6_create_tempaddr", 200),
STACK_USAGE("l3mdev_fib_table", 8),
STACK_USAGE("ipv6_get_saddr_eval", 40),
STACK_USAGE("__ipv6_dev_get_saddr", 64),
STACK_USAGE("ipv6_dev_get_saddr", 168),
STACK_USAGE("ipv6_get_lladdr", 40),
STACK_USAGE("ipv6_count_addresses", 16),
STACK_USAGE("ipv6_chk_addr", 0),
STACK_USAGE("local_bh_disable", 0),
STACK_USAGE("__ipv6_chk_addr_and_flags", 56),
STACK_USAGE("ipv6_chk_addr_and_flags", 0),
STACK_USAGE("ipv6_chk_custom_prefix", 32),
STACK_USAGE("ipv6_chk_prefix", 24),
STACK_USAGE("ipv6_dev_find", 0),
STACK_USAGE("ipv6_get_ifaddr", 40),
STACK_USAGE("addrconf_dad_stop", 32),
STACK_USAGE("addrconf_dad_failure", 120),
STACK_USAGE("addrconf_join_solict", 24),
STACK_USAGE("addrconf_leave_solict", 24),
STACK_USAGE("ipv6_generate_eui64", 0),
STACK_USAGE("ipv6_inherit_eui64", 32),
STACK_USAGE("addrconf_prefix_route", 232),
STACK_USAGE("addrconf_get_prefix_route", 56),
STACK_USAGE("addrconf_add_dev", 200),
STACK_USAGE("manage_tempaddrs", 96),
STACK_USAGE("addrconf_prefix_rcv_add_addr", 128),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("addrconf_prefix_rcv", 128),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("addrconf_set_dstaddr", 112),
STACK_USAGE("ipv6_mc_config", 32),
STACK_USAGE("inet6_addr_add", 72),
STACK_USAGE("inet6_addr_del", 64),
STACK_USAGE("addrconf_link_ready", 0),
STACK_USAGE("addrconf_add_ifaddr", 112),
STACK_USAGE("addrconf_del_ifaddr", 56),
STACK_USAGE("add_addr", 80),
STACK_USAGE("add_v4_addrs", 272),
STACK_USAGE("init_loopback", 8),
STACK_USAGE("addrconf_add_linklocal", 264),
STACK_USAGE("addrconf_mod_rs_timer", 16),
STACK_USAGE("local_bh_enable", 0),
STACK_USAGE("ipv6_generate_stable_address", 72),
STACK_USAGE("addrconf_mod_dad_work", 24),
STACK_USAGE("addrconf_addr_gen", 216),
STACK_USAGE("addrconf_dev_config", 16),
STACK_USAGE("fib6_info_release", 0),
STACK_USAGE("addrconf_sit_config", 192),
STACK_USAGE("addrconf_gre_config", 192),
STACK_USAGE("addrconf_permanent_addr", 272),
STACK_USAGE("addrconf_notify", 48),
STACK_USAGE("in6_dev_get", 8),
STACK_USAGE("ipv6_add_dev", 40),
STACK_USAGE("addrconf_ifdown", 136),
STACK_USAGE("in6_dev_put", 0),
STACK_USAGE("addrconf_rs_timer", 56),
STACK_USAGE("in6_dev_hold", 0),
STACK_USAGE("addrconf_dad_start", 16),
STACK_USAGE("addrconf_dad_work", 80),
STACK_USAGE("in6_ifa_put", 0),
STACK_USAGE("addrconf_dad_completed", 80),
STACK_USAGE("in6_ifa_hold", 0),
STACK_USAGE("addrconf_dad_run", 88),
STACK_USAGE("if6_seq_start", 16),
STACK_USAGE("if6_seq_next", 0),
STACK_USAGE("if6_seq_stop", 0),
STACK_USAGE("if6_seq_show", 0),
STACK_USAGE("if6_proc_net_init", 8),
STACK_USAGE("if6_proc_net_exit", 0),
STACK_USAGE("if6_proc_init", 0),
STACK_USAGE("if6_proc_exit", 0),
STACK_USAGE("ipv6_chk_home_addr", 24),
STACK_USAGE("ipv6_chk_rpl_srh_loop", 24),
STACK_USAGE("addrconf_verify_rtnl", 96),
STACK_USAGE("addrconf_verify_work", 8),
STACK_USAGE("inet6_rtm_deladdr", 136),
STACK_USAGE("modify_prefix_route", 240),
STACK_USAGE("ipv6_find_idev", 16),
STACK_USAGE("inet6_rtm_newaddr", 424),
STACK_USAGE("inet6_fill_ifaddr", 80),
STACK_USAGE("in6_dump_addrs", 120),
STACK_USAGE("inet6_netconf_fill_devconf", 56),
STACK_USAGE("inet6_dump_addr", 232),
STACK_USAGE("inet6_dump_ifaddr", 0),
STACK_USAGE("inet6_dump_ifmcaddr", 0),
STACK_USAGE("inet6_dump_ifacaddr", 0),
STACK_USAGE("inet6_rtm_getaddr", 216),
STACK_USAGE("snmp6_fill_stats", 344),
STACK_USAGE("inet6_fill_ifla6_attrs", 392),
STACK_USAGE("inet6_get_link_af_size", 8),
STACK_USAGE("inet6_fill_link_af", 24),
STACK_USAGE("inet6_netconf_notify_devconf", 48),
STACK_USAGE("inet6_validate_link_af", 136),
STACK_USAGE("inet6_set_link_af", 168),
STACK_USAGE("inet6_fill_ifinfo", 64),
STACK_USAGE("inet6_dump_ifinfo", 64),
STACK_USAGE("inet6_ifinfo_notify", 32),
STACK_USAGE("__ipv6_ifa_notify", 232),
STACK_USAGE("addrconf_sysctl_forward", 144),
STACK_USAGE("addrconf_sysctl_mtu", 80),
STACK_USAGE("dev_disable_change", 32),
STACK_USAGE("addrconf_sysctl_disable", 128),
STACK_USAGE("addrconf_sysctl_proxy_ndp", 40),
STACK_USAGE("addrconf_sysctl_addr_gen_mode", 136),
STACK_USAGE("addrconf_sysctl_stable_secret", 216),
STACK_USAGE("inet6_netconf_get_devconf", 168),
STACK_USAGE("addrconf_sysctl_ignore_routes_with_linkdown", 144),
STACK_USAGE("addrconf_disable_policy_idev", 64),
STACK_USAGE("addrconf_sysctl_disable_policy", 128),
STACK_USAGE("__addrconf_sysctl_register", 104),
STACK_USAGE("addrconf_sysctl_register", 24),
STACK_USAGE("inet6_netconf_dump_devconf", 72),
STACK_USAGE("addrconf_sysctl_unregister", 32),
STACK_USAGE("addrconf_init_net", 40),
STACK_USAGE("addrconf_exit_net", 24),
STACK_USAGE("addrconf_init", 8),
STACK_USAGE("addrconf_cleanup", 24),
STACK_USAGE("rcu_read_lock_bh", 0),
STACK_USAGE("rcu_read_unlock_bh", 0),
STACK_USAGE("nlmsg_parse_deprecated_strict", 16),
STACK_USAGE("dev_forward_change", 80),
STACK_USAGE("inet6_ifa_finish_destroy", 8),
STACK_USAGE("ipv6_link_dev_addr", 32),
STACK_USAGE("unregister_inet6addr_notifier", 0),
STACK_USAGE("inet6addr_notifier_call_chain", 0),
STACK_USAGE("register_inet6addr_validator_notifier", 0),
STACK_USAGE("unregister_inet6addr_validator_notifier", 0),
STACK_USAGE("inet6addr_validator_notifier_call_chain", 0),
STACK_USAGE("eafnosupport_ipv6_dst_lookup_flow", 0),
STACK_USAGE("eafnosupport_ipv6_route_input", 0),
STACK_USAGE("eafnosupport_fib6_get_table", 0),
STACK_USAGE("eafnosupport_fib6_table_lookup", 0),
STACK_USAGE("eafnosupport_fib6_lookup", 0),
STACK_USAGE("eafnosupport_fib6_select_path", 0),
STACK_USAGE("eafnosupport_ip6_mtu_from_fib6", 0),
STACK_USAGE("eafnosupport_fib6_nh_init", 8),
STACK_USAGE("eafnosupport_ip6_del_rt", 0),
STACK_USAGE("eafnosupport_ipv6_fragment", 0),
STACK_USAGE("eafnosupport_ipv6_dev_find", 0),
STACK_USAGE("in6_dev_finish_destroy_rcu", 16),
STACK_USAGE("in6_dev_finish_destroy", 0),
STACK_USAGE("__ipv6_addr_type", 0),
STACK_USAGE("register_inet6addr_notifier", 0),
STACK_USAGE("ipv6_addr_label", 32),
STACK_USAGE("ip6addrlbl_add", 72),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("ip6addrlbl_del", 64),
STACK_USAGE("ip6addrlbl_net_init", 40),
STACK_USAGE("ip6addrlbl_net_exit", 24),
STACK_USAGE("ipv6_addr_label_init", 0),
STACK_USAGE("ipv6_addr_label_cleanup", 0),
STACK_USAGE("addrlbl_ifindex_exists", 16),
STACK_USAGE("ip6addrlbl_newdel", 88),
STACK_USAGE("ip6addrlbl_fill", 56),
STACK_USAGE("ip6addrlbl_dump", 56),
STACK_USAGE("ip6addrlbl_get", 104),
STACK_USAGE("ipv6_addr_label_rtnl_register", 0),
STACK_USAGE("nlmsg_parse_deprecated_strict", 8),
STACK_USAGE("inet6_net_exit", 8),
STACK_USAGE("ipv6_route_input", 8),
STACK_USAGE("inet6_init", 8),
STACK_USAGE("inet6_create", 64),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("__inet6_bind", 88),
STACK_USAGE("inet6_bind", 48),
STACK_USAGE("inet6_release", 16),
STACK_USAGE("inet6_destroy_sock", 24),
STACK_USAGE("inet6_getname", 48),
STACK_USAGE("inet6_ioctl", 104),
STACK_USAGE("inet6_compat_ioctl", 120),
STACK_USAGE("inet6_sendmsg", 24),
STACK_USAGE("inet6_recvmsg", 64),
STACK_USAGE("rcu_read_unlock", 0),
STACK_USAGE("inet6_register_protosw", 16),
STACK_USAGE("inet6_unregister_protosw", 8),
STACK_USAGE("inet6_sk_rebuild_header", 160),
STACK_USAGE("ipv6_opt_accepted", 0),
STACK_USAGE("inet6_net_init", 16),
STACK_USAGE("ipv6_mod_enabled", 0),
STACK_USAGE("sg_set_buf", 0),
STACK_USAGE("ipv6_clear_mutable_options", 88),
STACK_USAGE("ah6_output_done", 48),
STACK_USAGE("ah6_output", 168),
STACK_USAGE("ah6_input_done", 72),
STACK_USAGE("ah6_input", 176),
STACK_USAGE("ah6_err", 40),
STACK_USAGE("ah6_init_state", 32),
STACK_USAGE("ah6_destroy", 8),
STACK_USAGE("ah6_rcv_cb", 0),
STACK_USAGE("ah6_init", 0),
STACK_USAGE("ah6_fini", 0),
STACK_USAGE("ipv6_sock_ac_drop", 48),
STACK_USAGE("__ipv6_sock_ac_close", 56),
STACK_USAGE("ipv6_sock_ac_close", 8),
STACK_USAGE("aca_free_rcu", 8),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("__ipv6_dev_ac_inc", 56),
STACK_USAGE("__ipv6_dev_ac_dec", 32),
STACK_USAGE("ipv6_ac_destroy_dev", 24),
STACK_USAGE("ipv6_chk_acast_addr", 40),
STACK_USAGE("ipv6_chk_acast_addr_src", 24),
STACK_USAGE("ac6_get_next", 32),
STACK_USAGE("ac6_seq_start", 48),
STACK_USAGE("ac6_seq_next", 8),
STACK_USAGE("ac6_seq_stop", 8),
STACK_USAGE("ac6_seq_show", 0),
STACK_USAGE("ac6_proc_init", 8),
STACK_USAGE("ac6_proc_exit", 0),
STACK_USAGE("ipv6_anycast_init", 0),
STACK_USAGE("ipv6_anycast_cleanup", 0),
STACK_USAGE("ipv6_sock_ac_join", 72),
STACK_USAGE("calipso_opt_getattr", 88),
STACK_USAGE("calipso_sock_getattr", 24),
STACK_USAGE("calipso_sock_setattr", 32),
STACK_USAGE("calipso_sock_delattr", 40),
STACK_USAGE("calipso_req_setattr", 32),
STACK_USAGE("calipso_map_cache_hash", 0),
STACK_USAGE("calipso_req_delattr", 40),
STACK_USAGE("calipso_skbuff_optptr", 16),
STACK_USAGE("calipso_skbuff_setattr", 376),
STACK_USAGE("calipso_cache_init", 16),
STACK_USAGE("calipso_skbuff_delattr", 64),
STACK_USAGE("calipso_init", 8),
STACK_USAGE("calipso_exit", 0),
STACK_USAGE("calipso_cache_invalidate", 56),
STACK_USAGE("calipso_cache_add", 48),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("calipso_doi_add", 48),
STACK_USAGE("txopt_get", 16),
STACK_USAGE("calipso_doi_free", 0),
STACK_USAGE("calipso_doi_free_rcu", 0),
STACK_USAGE("calipso_doi_remove", 40),
STACK_USAGE("calipso_doi_getdef", 16),
STACK_USAGE("calipso_doi_putdef", 8),
STACK_USAGE("calipso_doi_walk", 64),
STACK_USAGE("calipso_validate", 16),
STACK_USAGE("calipso_genopt", 80),
STACK_USAGE("calipso_opt_update", 24),
STACK_USAGE("calipso_opt_find", 24),
STACK_USAGE("calipso_opt_insert", 80),
STACK_USAGE("calipso_opt_del", 64),
STACK_USAGE("__ip6_dgram_sock_seq_show", 136),
STACK_USAGE("ip6_datagram_release_cb", 16),
STACK_USAGE("__ip6_datagram_connect", 96),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("ip6_datagram_connect", 24),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("ip6_datagram_connect_v6_only", 24),
STACK_USAGE("sk_dev_equal_l3scope", 32),
STACK_USAGE("ipv6_icmp_error", 48),
STACK_USAGE("ipv6_local_error", 40),
STACK_USAGE("ipv6_local_rxpmtu", 32),
STACK_USAGE("ipv6_recv_error", 144),
STACK_USAGE("reuseport_has_conns", 8),
STACK_USAGE("ipv6_recv_rxpmtu", 96),
STACK_USAGE("ip6_datagram_recv_common_ctl", 32),
STACK_USAGE("ip6_datagram_recv_specific_ctl", 104),
STACK_USAGE("ip6_datagram_dst_update", 160),
STACK_USAGE("rcu_read_unlock", 0),
STACK_USAGE("ip6_datagram_recv_ctl", 56),
STACK_USAGE("ip6_datagram_send_ctl", 96),
STACK_USAGE("esp6_err", 40),
STACK_USAGE("esp6_destroy", 0),
STACK_USAGE("esp_ssg_unref", 8),
STACK_USAGE("get_page", 0),
STACK_USAGE("esp6_init_state", 200),
STACK_USAGE("esp6_rcv_cb", 0),
STACK_USAGE("esp6_init", 0),
STACK_USAGE("esp6_fini", 0),
STACK_USAGE("refcount_add", 0),
STACK_USAGE("__skb_fill_page_desc", 0),
STACK_USAGE("esp_output_done", 72),
STACK_USAGE("esp_output_done_esn", 0),
STACK_USAGE("esp6_output_head", 112),
STACK_USAGE("esp6_output_tail", 136),
STACK_USAGE("esp6_output", 96),
STACK_USAGE("esp6_input_done2", 88),
STACK_USAGE("esp_input_done", 8),
STACK_USAGE("esp_input_done_esn", 8),
STACK_USAGE("esp6_input", 88),
STACK_USAGE("ipv6_parse_hopopts", 24),
STACK_USAGE("ip6_parse_tlv", 120),
STACK_USAGE("skb_dst", 8),
STACK_USAGE("ipv6_push_nfrag_opts", 64),
STACK_USAGE("ipv6_push_frag_opts", 24),
STACK_USAGE("ipv6_dup_options", 24),
STACK_USAGE("ipv6_renew_options", 56),
STACK_USAGE("__ipv6_fixup_options", 0),
STACK_USAGE("fl6_update_dst", 0),
STACK_USAGE("ipv6_destopt_rcv", 48),
STACK_USAGE("__skb_tunnel_rx", 0),
STACK_USAGE("ipv6_srh_rcv", 104),
STACK_USAGE("skb_postpull_rcsum", 8),
STACK_USAGE("dst_discard", 0),
STACK_USAGE("dst_input", 8),
STACK_USAGE("ipv6_rpl_srh_rcv", 104),
STACK_USAGE("skb_valid_dst", 8),
STACK_USAGE("ipv6_rthdr_rcv", 80),
STACK_USAGE("ipv6_exthdrs_init", 8),
STACK_USAGE("ipv6_exthdrs_exit", 0),
STACK_USAGE("ipv6_skb_net", 8),
STACK_USAGE("ipv6_find_tlv", 0),
STACK_USAGE("ipv6_ext_hdr", 0),
STACK_USAGE("ipv6_find_hdr", 144),
STACK_USAGE("ipv6_skip_exthdr", 80),
STACK_USAGE("ipv6_exthdrs_offload_init", 8),
STACK_USAGE("call_fib6_notifier", 0),
STACK_USAGE("call_fib6_notifiers", 0),
STACK_USAGE("fib6_seq_read", 16),
STACK_USAGE("fib6_dump", 24),
STACK_USAGE("fib6_notifier_init", 8),
STACK_USAGE("fib6_notifier_exit", 0),
STACK_USAGE("fib6_rule_saddr", 48),
STACK_USAGE("fib6_rule_action", 64),
STACK_USAGE("fib6_rule_suppress", 0),
STACK_USAGE("fib6_rule_match", 0),
STACK_USAGE("fib6_rule_configure", 64),
STACK_USAGE("fib6_rule_delete", 0),
STACK_USAGE("fib6_rule_compare", 24),
STACK_USAGE("fib6_rule_default", 8),
STACK_USAGE("fib6_rule_fill", 24),
STACK_USAGE("fib6_rule_nlmsg_payload", 0),
STACK_USAGE("fib6_rules_net_init", 32),
STACK_USAGE("fib6_rules_net_exit_batch", 16),
STACK_USAGE("fib6_rules_init", 0),
STACK_USAGE("fib6_rules_cleanup", 0),
STACK_USAGE("fib6_rules_dump", 0),
STACK_USAGE("fib6_rules_seq_read", 0),
STACK_USAGE("fib6_lookup", 96),
STACK_USAGE("fib6_rule_lookup", 128),
STACK_USAGE("fou6_init", 16),
STACK_USAGE("fou6_fini", 0),
STACK_USAGE("fou6_build_header", 64),
STACK_USAGE("gue6_build_header", 64),
STACK_USAGE("gue6_err_proto_handler", 48),
STACK_USAGE("gue6_err", 80),
STACK_USAGE("icmpv6_flow_init", 0),
STACK_USAGE("icmpv6_init", 40),
STACK_USAGE("icmpv6_cleanup", 0),
STACK_USAGE("__xfrm_policy_check2", 24),
STACK_USAGE("icmpv6_err_convert", 0),
STACK_USAGE("ipv6_icmp_sysctl_init", 8),
STACK_USAGE("local_bh_disable", 0),
STACK_USAGE("icmpv6_xrlim_allow", 64),
STACK_USAGE("skb_rt6_info", 8),
STACK_USAGE("icmpv6_rt_has_prefsrc", 24),
STACK_USAGE("pskb_may_pull", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("icmpv6_push_pending_frames", 48),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("icmpv6_getfrag", 40),
STACK_USAGE("__in6_dev_get", 8),
STACK_USAGE("local_bh_enable", 0),
STACK_USAGE("icmpv6_route_lookup", 168),
STACK_USAGE("icmp6_send", 264),
STACK_USAGE("icmpv6_param_prob", 8),
STACK_USAGE("ip6_err_gen_icmpv6_unreach", 80),
STACK_USAGE("icmpv6_echo_reply", 248),
STACK_USAGE("rcu_read_unlock", 0),
STACK_USAGE("icmpv6_err", 48),
STACK_USAGE("icmpv6_notify", 64),
STACK_USAGE("icmpv6_rcv", 64),
STACK_USAGE("inet6_csk_xmit", 144),
STACK_USAGE("inet6_csk_update_pmtu", 128),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("inet6_csk_route_req", 56),
STACK_USAGE("inet6_csk_addr2sockaddr", 16),
STACK_USAGE("inet6_csk_route_socket", 72),
STACK_USAGE("inet6_lhash2_lookup", 72),
STACK_USAGE("inet6_lookup_listener", 168),
STACK_USAGE("inet6_lookup", 64),
STACK_USAGE("__inet6_check_established", 88),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("inet6_ehashfn", 64),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("inet6_hash_connect", 16),
STACK_USAGE("inet6_hash", 0),
STACK_USAGE("__inet6_lookup_established", 72),
STACK_USAGE("ipv6_portaddr_hash", 0),
STACK_USAGE("ioam6_genl_addns", 72),
STACK_USAGE("rhashtable_remove_fast", 80),
STACK_USAGE("ioam6_genl_delns", 56),
STACK_USAGE("local_bh_disable", 0),
STACK_USAGE("ioam6_genl_dumpns_start", 16),
STACK_USAGE("ioam6_genl_dumpns_done", 8),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("ioam6_genl_dumpns", 72),
STACK_USAGE("ioam6_genl_addsc", 64),
STACK_USAGE("local_bh_enable", 0),
STACK_USAGE("rht_lock", 16),
STACK_USAGE("ioam6_free_ns", 0),
STACK_USAGE("rht_unlock", 8),
STACK_USAGE("ioam6_genl_delsc", 56),
STACK_USAGE("rht_assign_unlock", 16),
STACK_USAGE("ioam6_free_sc", 0),
STACK_USAGE("ioam6_genl_dumpsc_start", 16),
STACK_USAGE("ioam6_genl_dumpsc_done", 8),
STACK_USAGE("ioam6_genl_dumpsc", 64),
STACK_USAGE("ioam6_genl_ns_set_schema", 56),
STACK_USAGE("ioam6_ns_cmpfn", 0),
STACK_USAGE("ioam6_sc_cmpfn", 0),
STACK_USAGE("ioam6_namespace", 16),
STACK_USAGE("rhashtable_lookup_fast", 88),
STACK_USAGE("ioam6_fill_trace_data", 104),
STACK_USAGE("rhashtable_lookup_insert_fast", 112),
STACK_USAGE("ioam6_net_init", 32),
STACK_USAGE("ioam6_net_exit", 8),
STACK_USAGE("ioam6_init", 8),
STACK_USAGE("ioam6_exit", 0),
STACK_USAGE("udp6_set_csum", 40),
STACK_USAGE("udp6_csum_init", 24),
STACK_USAGE("fib6_purge_rt", 88),
STACK_USAGE("fib6_update_sernum", 16),
STACK_USAGE("fib6_force_start_gc", 0),
STACK_USAGE("__fib6_update_sernum_upto_root", 24),
STACK_USAGE("fib6_update_sernum_upto_root", 0),
STACK_USAGE("fib6_update_sernum_stub", 16),
STACK_USAGE("fib6_add", 168),
STACK_USAGE("fib6_info_alloc", 0),
STACK_USAGE("fib6_node_lookup_1", 40),
STACK_USAGE("fib6_node_lookup", 72),
STACK_USAGE("fib6_locate_1", 56),
STACK_USAGE("fib6_info_destroy_rcu", 8),
STACK_USAGE("fib6_locate", 24),
STACK_USAGE("fib6_find_prefix", 32),
STACK_USAGE("fib6_repair_tree", 104),
STACK_USAGE("local_bh_disable", 0),
STACK_USAGE("fib6_del", 168),
STACK_USAGE("node_free_rcu", 0),
STACK_USAGE("fib6_walk_continue", 16),
STACK_USAGE("fib6_clean_node", 64),
STACK_USAGE("__fib6_clean_all", 208),
STACK_USAGE("fib6_clean_all", 0),
STACK_USAGE("fib6_clean_all_skip_notify", 0),
STACK_USAGE("fib6_flush_trees", 0),
STACK_USAGE("fib6_age", 0),
STACK_USAGE("fib6_run_gc", 40),
STACK_USAGE("fib6_gc_timer_cb", 0),
STACK_USAGE("fib6_net_init", 16),
STACK_USAGE("fib6_net_exit", 48),
STACK_USAGE("fib6_init", 16),
STACK_USAGE("fib6_gc_cleanup", 0),
STACK_USAGE("ipv6_route_yield", 8),
STACK_USAGE("ipv6_route_seq_next_table", 24),
STACK_USAGE("fib6_new_table", 24),
STACK_USAGE("ipv6_route_seq_next", 56),
STACK_USAGE("ipv6_route_seq_start", 64),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("ipv6_route_seq_show", 96),
STACK_USAGE("ipv6_route_seq_stop", 64),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("fib6_get_table", 24),
STACK_USAGE("local_bh_enable", 0),
STACK_USAGE("fib6_tables_seq_read", 8),
STACK_USAGE("call_fib6_entry_notifiers", 40),
STACK_USAGE("call_fib6_multipath_entry_notifiers", 40),
STACK_USAGE("call_fib6_entry_notifiers_replace", 40),
STACK_USAGE("fib6_node_dump", 48),
STACK_USAGE("fib6_tables_dump", 96),
STACK_USAGE("fib6_dump_node", 16),
STACK_USAGE("fib6_dump_done", 24),
STACK_USAGE("fib6_dump_table", 48),
STACK_USAGE("inet6_dump_fib", 120),
STACK_USAGE("fib6_metric_set", 24),
STACK_USAGE("fib6_add_1", 96),
STACK_USAGE("__fib6_drop_pcpu_from", 24),
STACK_USAGE("fib6_nh_drop_pcpu_from", 0),
STACK_USAGE("fl_free_rcu", 8),
STACK_USAGE("fl_free", 8),
STACK_USAGE("fl_release", 16),
STACK_USAGE("ip6_fl_gc", 40),
STACK_USAGE("local_bh_disable", 0),
STACK_USAGE("fl_intern", 40),
STACK_USAGE("__fl6_sock_lookup", 24),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("fl6_free_socklist", 16),
STACK_USAGE("fl6_merge_options", 0),
STACK_USAGE("local_bh_enable", 0),
STACK_USAGE("fl6_renew", 40),
STACK_USAGE("mem_check", 24),
STACK_USAGE("fl_link", 24),
STACK_USAGE("ipv6_flowlabel_opt_get", 32),
STACK_USAGE("copy_to_sockptr_offset", 0),
STACK_USAGE("ipv6_flowlabel_opt", 344),
STACK_USAGE("ip6fl_get_first", 24),
STACK_USAGE("rcu_read_unlock_bh", 0),
STACK_USAGE("ip6fl_get_next", 32),
STACK_USAGE("ip6fl_seq_start", 24),
STACK_USAGE("ip6fl_seq_next", 8),
STACK_USAGE("ip6fl_seq_stop", 0),
STACK_USAGE("ip6fl_seq_show", 40),
STACK_USAGE("fl_lookup", 32),
STACK_USAGE("ip6_flowlabel_proc_init", 8),
STACK_USAGE("ip6_flowlabel_net_exit", 32),
STACK_USAGE("ip6_flowlabel_init", 0),
STACK_USAGE("ip6_flowlabel_cleanup", 0),
STACK_USAGE("ip6gre_tnl_link_config_common", 16),
STACK_USAGE("gre_build_header", 48),
STACK_USAGE("ip6gre_tnl_link_config_route", 40),
STACK_USAGE("ip6gre_tunnel_lookup", 80),
STACK_USAGE("ip6gre_tnl_change", 16),
STACK_USAGE("ip6gre_tnl_parm_from_user", 0),
STACK_USAGE("ip6gre_tnl_parm_to_user", 0),
STACK_USAGE("ip6gre_tunnel_siocdevprivate", 232),
STACK_USAGE("ip6gre_header", 144),
STACK_USAGE("ip6gre_dev_free", 8),
STACK_USAGE("ip6gre_tunnel_setup", 8),
STACK_USAGE("ip6gre_tunnel_init_common", 24),
STACK_USAGE("ip6gre_tunnel_init", 16),
STACK_USAGE("ip6gre_init_net", 32),
STACK_USAGE("ip6gre_exit_batch_net", 88),
STACK_USAGE("ip6gre_tunnel_validate", 0),
STACK_USAGE("ip6gre_tap_validate", 32),
STACK_USAGE("ip6erspan_tap_validate", 32),
STACK_USAGE("erspan_build_header", 56),
STACK_USAGE("ip6gre_netlink_parms", 40),
STACK_USAGE("ip6gre_tap_init", 8),
STACK_USAGE("ip6erspan_tap_init", 24),
STACK_USAGE("ip6gre_tap_setup", 8),
STACK_USAGE("ip6gre_newlink_common", 48),
STACK_USAGE("ip6gre_newlink", 48),
STACK_USAGE("dst_mtu", 0),
STACK_USAGE("ip6gre_changelink_common", 56),
STACK_USAGE("ip6gre_changelink", 128),
STACK_USAGE("ip6gre_dellink", 16),
STACK_USAGE("ip6gre_get_size", 0),
STACK_USAGE("ip6gre_fill_info", 40),
STACK_USAGE("ip6erspan_tap_setup", 8),
STACK_USAGE("ip6erspan_newlink", 48),
STACK_USAGE("ip6erspan_changelink", 136),
STACK_USAGE("ip6gre_init", 8),
STACK_USAGE("ip6gre_fini", 0),
STACK_USAGE("erspan_build_header_v2", 64),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("ip6gre_tunnel_link", 32),
STACK_USAGE("ip6gre_tunnel_unlink", 16),
STACK_USAGE("ip6gre_tunnel_find", 40),
STACK_USAGE("ip6gre_tunnel_locate", 72),
STACK_USAGE("ip6erspan_tunnel_uninit", 16),
STACK_USAGE("net_generic", 16),
STACK_USAGE("ip6gre_tunnel_uninit", 24),
STACK_USAGE("ip6gre_err", 64),
STACK_USAGE("gre_rcv", 120),
STACK_USAGE("prepare_ip6gre_xmit_ipv4", 8),
STACK_USAGE("prepare_ip6gre_xmit_ipv6", 40),
STACK_USAGE("skb_tunnel_info_txcheck", 8),
STACK_USAGE("__gre6_xmit", 80),
STACK_USAGE("ip6gre_tunnel_xmit", 168),
STACK_USAGE("ip6erspan_tunnel_xmit", 168),
STACK_USAGE("icmpv6_ndo_send", 96),
STACK_USAGE("xfrm6_policy_check", 8),
STACK_USAGE("ip6_rcv_core", 56),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("ipv6_rcv", 16),
STACK_USAGE("NF_HOOK", 104),
STACK_USAGE("ip6_sublist_rcv", 120),
STACK_USAGE("ipv6_list_rcv", 80),
STACK_USAGE("ip6_protocol_deliver_rcu", 80),
STACK_USAGE("ip6_input_finish", 16),
STACK_USAGE("ip6_input", 0),
STACK_USAGE("ip6_mc_input", 24),
STACK_USAGE("ip6_rcv_finish_core", 16),
STACK_USAGE("ip6_rcv_finish", 16),
STACK_USAGE("rcu_read_unlock", 0),
STACK_USAGE("ip6_sublist_rcv_finish", 40),
STACK_USAGE("ipv6_gro_receive", 96),
STACK_USAGE("sit_ip6ip6_gro_receive", 0),
STACK_USAGE("ip4ip6_gro_receive", 0),
STACK_USAGE("ipv6_gro_complete", 48),
STACK_USAGE("sit_gro_complete", 0),
STACK_USAGE("ip6ip6_gro_complete", 0),
STACK_USAGE("ip4ip6_gro_complete", 0),
STACK_USAGE("sit_gso_segment", 0),
STACK_USAGE("ip4ip6_gso_segment", 0),
STACK_USAGE("ip6ip6_gso_segment", 0),
STACK_USAGE("ipv6_gso_pull_exthdrs", 24),
STACK_USAGE("ipv6_offload_init", 0),
STACK_USAGE("ipv6_gso_segment", 88),
STACK_USAGE("ip6_dst_lookup_tail", 56),
STACK_USAGE("skb_dst", 8),
STACK_USAGE("ip6_dst_lookup", 0),
STACK_USAGE("ip6_dst_lookup_flow", 48),
STACK_USAGE("ip6_sk_dst_lookup_flow", 64),
STACK_USAGE("ip6_dst_lookup_tunnel", 160),
STACK_USAGE("ip6_setup_cork", 64),
STACK_USAGE("__ip6_append_data", 256),
STACK_USAGE("skb_zcopy_set", 16),
STACK_USAGE("__ip6_finish_output", 40),
STACK_USAGE("ip6_append_data", 64),
STACK_USAGE("ip6_cork_release", 24),
STACK_USAGE("__ip6_make_skb", 176),
STACK_USAGE("local_bh_disable", 0),
STACK_USAGE("ip6_send_skb", 24),
STACK_USAGE("ip6_push_pending_frames", 0),
STACK_USAGE("__ip6_flush_pending_frames", 40),
STACK_USAGE("ip6_finish_output", 32),
STACK_USAGE("ip6_flush_pending_frames", 0),
STACK_USAGE("ip6_make_skb", 192),
STACK_USAGE("ip6_output", 40),
STACK_USAGE("nf_hook", 112),
STACK_USAGE("refcount_add", 0),
STACK_USAGE("ip6_autoflowlabel", 0),
STACK_USAGE("ip6_xmit", 216),
STACK_USAGE("ip6_skb_dst_mtu", 16),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("ip6_dst_mtu_maybe_forward", 16),
STACK_USAGE("local_bh_enable", 0),
STACK_USAGE("ip6_call_ra_chain", 48),
STACK_USAGE("skb_cow", 0),
STACK_USAGE("ip6_forward_finish", 40),
STACK_USAGE("ip6_pkt_too_big", 8),
STACK_USAGE("dst_output", 24),
STACK_USAGE("ip6_forward", 112),
STACK_USAGE("ip6_finish_output2", 88),
STACK_USAGE("ip6_copy_metadata", 24),
STACK_USAGE("ip6_fraglist_init", 56),
STACK_USAGE("ip6_fraglist_prepare", 40),
STACK_USAGE("ip6_frag_init", 0),
STACK_USAGE("ip6_frag_next", 56),
STACK_USAGE("ip6_fragment", 192),
STACK_USAGE("ip6_tnl_xmit_ctl", 48),
STACK_USAGE("ip6_tnl_xmit", 208),
STACK_USAGE("skb_dst", 8),
STACK_USAGE("ip6_tnl_lookup", 48),
STACK_USAGE("ip6_tnl_start_xmit", 160),
STACK_USAGE("ip6_tnl_link_config", 48),
STACK_USAGE("ip6_tnl_update", 24),
STACK_USAGE("ip6tunnel_xmit", 40),
STACK_USAGE("ip_route_output_ports", 40),
STACK_USAGE("ip6_tnl_siocdevprivate", 216),
STACK_USAGE("ip6_tnl_change_mtu", 0),
STACK_USAGE("ip6_tnl_get_iflink", 0),
STACK_USAGE("ip6_tnl_encap_add_ops", 0),
STACK_USAGE("ip6_tnl_encap_del_ops", 8),
STACK_USAGE("ip6_tnl_encap_setup", 32),
STACK_USAGE("ip6_tnl_dev_setup", 8),
STACK_USAGE("ip6_tnl_dev_init", 24),
STACK_USAGE("ip6_tnl_validate", 0),
STACK_USAGE("ip6_tnl_netlink_parms", 40),
STACK_USAGE("ip_route_input", 40),
STACK_USAGE("dst_mtu", 0),
STACK_USAGE("ip6_tnl_newlink", 72),
STACK_USAGE("ip6_tnl_changelink", 144),
STACK_USAGE("ip6_tnl_link", 24),
STACK_USAGE("ip6_tnl_dellink", 16),
STACK_USAGE("ip6_tnl_get_size", 0),
STACK_USAGE("ip6_tnl_fill_info", 32),
STACK_USAGE("ip6_tnl_get_link_net", 0),
STACK_USAGE("ip6_tnl_init_net", 24),
STACK_USAGE("ip6_tnl_unlink", 16),
STACK_USAGE("ip6_tnl_exit_batch_net", 88),
STACK_USAGE("ip6_tunnel_init", 16),
STACK_USAGE("ip6_tunnel_cleanup", 0),
STACK_USAGE("ip6_dev_free", 8),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("IP6_ECN_decapsulate", 80),
STACK_USAGE("ip6_tnl_locate", 72),
STACK_USAGE("skb_clone_writable", 0),
STACK_USAGE("ip6_tnl_dev_uninit", 8),
STACK_USAGE("ip6_tnl_parse_tlv_enc_lim", 48),
STACK_USAGE("net_generic", 16),
STACK_USAGE("skb_tunnel_info", 8),
STACK_USAGE("ip6_tnl_err", 72),
STACK_USAGE("skb_dst_update_pmtu_no_confirm", 16),
STACK_USAGE("ip4ip6_err", 160),
STACK_USAGE("ip6ip6_err", 56),
STACK_USAGE("mplsip6_err", 24),
STACK_USAGE("ip4ip6_dscp_ecn_decapsulate", 0),
STACK_USAGE("ip6ip6_dscp_ecn_decapsulate", 0),
STACK_USAGE("mplsip6_dscp_ecn_decapsulate", 0),
STACK_USAGE("ip6_tnl_get_cap", 24),
STACK_USAGE("ip6_tnl_rcv_ctl", 48),
STACK_USAGE("__ip6_tnl_rcv", 56),
STACK_USAGE("ip6_make_flowlabel", 104),
STACK_USAGE("ip6_tnl_rcv", 0),
STACK_USAGE("ipxip6_rcv", 72),
STACK_USAGE("ip4ip6_rcv", 0),
STACK_USAGE("ip6ip6_rcv", 0),
STACK_USAGE("mplsip6_rcv", 0),
STACK_USAGE("udp_sock_create6", 80),
STACK_USAGE("udp_tunnel6_xmit_skb", 48),
STACK_USAGE("ipv6_setsockopt", 696),
STACK_USAGE("ipv6_update_options", 16),
STACK_USAGE("ipv6_get_msfilter", 320),
STACK_USAGE("compat_ipv6_get_msfilter", 592),
STACK_USAGE("ipv6_getsockopt", 200),
STACK_USAGE("dst_mtu", 0),
STACK_USAGE("__sk_dst_get", 16),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("ip6_ra_control", 32),
STACK_USAGE("rcu_read_unlock", 0),
STACK_USAGE("ipv6_chk_mcast_addr", 40),
STACK_USAGE("igmp6_group_queried", 24),
STACK_USAGE("skb_dst", 8),
STACK_USAGE("mld_in_v1_mode", 0),
STACK_USAGE("igmp6_event_query", 24),
STACK_USAGE("mld_query_work", 200),
STACK_USAGE("igmp6_event_report", 24),
STACK_USAGE("mld_report_work", 168),
STACK_USAGE("is_in", 0),
STACK_USAGE("lockdep_sock_is_held", 8),
STACK_USAGE("__ipv6_sock_mc_join", 72),
STACK_USAGE("mld_newpack", 80),
STACK_USAGE("mld_sendpack", 168),
STACK_USAGE("add_grec", 136),
STACK_USAGE("mld_send_report", 24),
STACK_USAGE("mld_clear_zeros", 40),
STACK_USAGE("igmp6_send", 216),
STACK_USAGE("mld_send_initial_cr", 24),
STACK_USAGE("ipv6_mc_dad_complete", 32),
STACK_USAGE("mld_dad_work", 40),
STACK_USAGE("ip6_mc_del1_src", 48),
STACK_USAGE("ip6_mc_del_src", 72),
STACK_USAGE("ipv6_sock_mc_join", 0),
STACK_USAGE("sf_markstate", 32),
STACK_USAGE("ipv6_sock_mc_join_ssm", 0),
STACK_USAGE("sf_setstate", 64),
STACK_USAGE("ip6_mc_add_src", 96),
STACK_USAGE("ipv6_sock_mc_drop", 64),
STACK_USAGE("ip6_mc_clear_src", 32),
STACK_USAGE("igmp6_join_group", 24),
STACK_USAGE("ip6_mc_leave_src", 32),
STACK_USAGE("mld_gq_work", 24),
STACK_USAGE("mld_ifc_work", 72),
STACK_USAGE("mld_ifc_event", 8),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("mld_mca_work", 16),
STACK_USAGE("ipv6_mc_unmap", 24),
STACK_USAGE("ipv6_mc_remap", 0),
STACK_USAGE("ipv6_mc_down", 32),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("ipv6_mc_up", 32),
STACK_USAGE("ipv6_mc_init_dev", 16),
STACK_USAGE("ipv6_mc_destroy_dev", 32),
STACK_USAGE("ipv6_mc_netdev_event", 32),
STACK_USAGE("igmp6_mc_get_next", 32),
STACK_USAGE("ip6_mc_find_dev_rtnl", 16),
STACK_USAGE("igmp6_mc_seq_start", 48),
STACK_USAGE("igmp6_mc_seq_next", 8),
STACK_USAGE("igmp6_mc_seq_stop", 0),
STACK_USAGE("igmp6_mc_seq_show", 48),
STACK_USAGE("igmp6_mcf_get_first", 48),
STACK_USAGE("igmp6_mcf_get_next", 32),
STACK_USAGE("NF_HOOK", 96),
STACK_USAGE("igmp6_mcf_seq_start", 24),
STACK_USAGE("igmp6_mcf_seq_next", 8),
STACK_USAGE("igmp6_mcf_seq_stop", 0),
STACK_USAGE("igmp6_mcf_seq_show", 0),
STACK_USAGE("igmp6_net_init", 32),
STACK_USAGE("igmp6_net_exit", 8),
STACK_USAGE("igmp6_init", 0),
STACK_USAGE("__ipv6_sock_mc_close", 56),
STACK_USAGE("igmp6_late_init", 0),
STACK_USAGE("igmp6_cleanup", 0),
STACK_USAGE("igmp6_late_cleanup", 0),
STACK_USAGE("ipv6_sock_mc_close", 8),
STACK_USAGE("in6_dev_get", 8),
STACK_USAGE("ip6_mc_source", 96),
STACK_USAGE("dst_output", 24),
STACK_USAGE("ip6_mc_msfilter", 80),
STACK_USAGE("ip6_mc_msfget", 184),
STACK_USAGE("inet6_mc_check", 32),
STACK_USAGE("igmp6_group_added", 72),
STACK_USAGE("igmp6_group_dropped", 88),
STACK_USAGE("mld_del_delrec", 40),
STACK_USAGE("mld_clear_delrec", 32),
STACK_USAGE("ma_put", 8),
STACK_USAGE("__ipv6_dev_mc_inc", 48),
STACK_USAGE("ipv6_dev_mc_inc", 0),
STACK_USAGE("__ipv6_dev_mc_dec", 40),
STACK_USAGE("ipv6_dev_mc_dec", 16),
STACK_USAGE("ipv6_mc_validate_checksum", 16),
STACK_USAGE("ipv6_mc_check_mld", 56),
STACK_USAGE("mip6_destopt_input", 40),
STACK_USAGE("mip6_destopt_output", 40),
STACK_USAGE("mip6_destopt_reject", 144),
STACK_USAGE("mip6_destopt_init_state", 0),
STACK_USAGE("mip6_destopt_destroy", 0),
STACK_USAGE("mip6_rthdr_input", 40),
STACK_USAGE("mip6_rthdr_output", 32),
STACK_USAGE("mip6_rthdr_init_state", 0),
STACK_USAGE("mip6_rthdr_destroy", 0),
STACK_USAGE("mip6_init", 0),
STACK_USAGE("mip6_fini", 0),
STACK_USAGE("mip6_mh_filter", 40),
STACK_USAGE("ndisc_recv_rs", 208),
STACK_USAGE("skb_dst", 8),
STACK_USAGE("ndisc_router_discovery", 288),
STACK_USAGE("__ndisc_fill_addr_option", 56),
STACK_USAGE("ndisc_redirect_rcv", 192),
STACK_USAGE("ndisc_fill_redirect_hdr_option", 16),
STACK_USAGE("ndisc_send_redirect", 280),
STACK_USAGE("pndisc_redo", 8),
STACK_USAGE("ndisc_is_multicast", 0),
STACK_USAGE("ndisc_rcv", 16),
STACK_USAGE("ndisc_fill_redirect_addr_option", 72),
STACK_USAGE("ndisc_netdev_event", 32),
STACK_USAGE("ndisc_ifinfo_sysctl_change", 64),
STACK_USAGE("ndisc_net_init", 32),
STACK_USAGE("ndisc_net_exit", 0),
STACK_USAGE("ndisc_init", 16),
STACK_USAGE("ndisc_late_init", 0),
STACK_USAGE("ndisc_late_cleanup", 0),
STACK_USAGE("ndisc_cleanup", 0),
STACK_USAGE("ndisc_parse_options", 64),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("ndisc_mc_map", 0),
STACK_USAGE("ndisc_hash", 0),
STACK_USAGE("ndisc_key_eq", 0),
STACK_USAGE("ndisc_constructor", 40),
STACK_USAGE("fib6_info_release", 0),
STACK_USAGE("ndisc_redirect_opt_addr_space", 16),
STACK_USAGE("in6_dev_get", 8),
STACK_USAGE("pndisc_constructor", 56),
STACK_USAGE("pndisc_destructor", 48),
STACK_USAGE("ndisc_allow_add", 16),
STACK_USAGE("ndisc_alloc_skb", 32),
STACK_USAGE("dst_output", 24),
STACK_USAGE("neigh_release", 0),
STACK_USAGE("ndisc_send_skb", 200),
STACK_USAGE("ndisc_send_na", 128),
STACK_USAGE("__neigh_lookup", 24),
STACK_USAGE("ndisc_send_unsol_na", 40),
STACK_USAGE("ndisc_ns_create", 96),
STACK_USAGE("ndisc_send_ns", 64),
STACK_USAGE("ndisc_send_rs", 80),
STACK_USAGE("ndisc_error_report", 8),
STACK_USAGE("ndisc_solicit", 88),
STACK_USAGE("pndisc_is_router", 16),
STACK_USAGE("ndisc_update", 40),
STACK_USAGE("ndisc_recv_ns", 240),
STACK_USAGE("ndisc_recv_na", 232),
STACK_USAGE("__nf_ip6_route", 16),
STACK_USAGE("br_ip6_fragment", 200),
STACK_USAGE("ip6_route_me_harder", 240),
STACK_USAGE("ipv6_netfilter_init", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("ipv6_netfilter_fini", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("nf_ip6_reroute", 0),
STACK_USAGE("__do_replace", 96),
STACK_USAGE("ip6t_error", 8),
STACK_USAGE("compat_copy_entries_to_user", 96),
STACK_USAGE("do_ip6t_set_ctl", 320),
STACK_USAGE("do_ip6t_get_ctl", 296),
STACK_USAGE("ip6t_register_table", 120),
STACK_USAGE("ip6t_unregister_table_pre_exit", 8),
STACK_USAGE("ip6t_unregister_table_exit", 40),
STACK_USAGE("icmp6_match", 40),
STACK_USAGE("icmp6_checkentry", 0),
STACK_USAGE("ip6_tables_net_init", 0),
STACK_USAGE("ip6_tables_net_exit", 0),
STACK_USAGE("local_bh_disable", 0),
STACK_USAGE("ip6_tables_init", 16),
STACK_USAGE("ip6_tables_fini", 0),
STACK_USAGE("ip6t_do_table", 160),
STACK_USAGE("local_bh_enable", 0),
STACK_USAGE("ip6t_alloc_initial_table", 56),
STACK_USAGE("cleanup_entry", 72),
STACK_USAGE("translate_table", 224),
STACK_USAGE("alloc_counters", 96),
STACK_USAGE("compat_standard_from_user", 16),
STACK_USAGE("compat_standard_to_user", 32),
STACK_USAGE("compat_table_info", 56),
STACK_USAGE("reject_tg6_init", 0),
STACK_USAGE("reject_tg6_exit", 0),
STACK_USAGE("reject_tg6", 0),
STACK_USAGE("reject_tg6_check", 0),
STACK_USAGE("ipv6header_mt6_check", 0),
STACK_USAGE("ipv6header_mt6_init", 0),
STACK_USAGE("ipv6header_mt6_exit", 0),
STACK_USAGE("ipv6header_mt6", 80),
STACK_USAGE("ip6table_filter_fini", 0),
STACK_USAGE("ip6table_filter_table_init", 24),
STACK_USAGE("ip6table_filter_net_init", 24),
STACK_USAGE("ip6table_filter_net_pre_exit", 0),
STACK_USAGE("ip6table_filter_net_exit", 0),
STACK_USAGE("ip6table_filter_init", 8),
STACK_USAGE("ip6table_mangle_init", 8),
STACK_USAGE("ip6table_mangle_fini", 0),
STACK_USAGE("ip6table_mangle_hook", 72),
STACK_USAGE("ip6table_mangle_table_init", 24),
STACK_USAGE("ip6table_mangle_net_pre_exit", 0),
STACK_USAGE("ip6table_mangle_net_exit", 0),
STACK_USAGE("jhash2", 0),
STACK_USAGE("nf_ct_frag6_expire", 48),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("nf_ct_frag6_reasm", 56),
STACK_USAGE("ip6frag_init", 0),
STACK_USAGE("nf_frag_pernet", 16),
STACK_USAGE("ip6frag_key_hashfn", 0),
STACK_USAGE("nf_ct_frag6_gather", 160),
STACK_USAGE("ip6frag_obj_hashfn", 0),
STACK_USAGE("nf_ct_net_init", 32),
STACK_USAGE("nf_ct_net_pre_exit", 0),
STACK_USAGE("nf_ct_net_exit", 24),
STACK_USAGE("nf_ct_frag6_init", 8),
STACK_USAGE("nf_ct_frag6_cleanup", 0),
STACK_USAGE("ip6frag_obj_cmpfn", 0),
STACK_USAGE("nf_defrag_init", 8),
STACK_USAGE("nf_defrag_fini", 0),
STACK_USAGE("nf_defrag_ipv6_enable", 16),
STACK_USAGE("nf_defrag_ipv6_disable", 8),
STACK_USAGE("ipv6_defrag", 0),
STACK_USAGE("defrag6_net_exit", 8),
STACK_USAGE("nf_reject_ip6_tcphdr_get", 56),
STACK_USAGE("nf_reject_ip6hdr_put", 40),
STACK_USAGE("nf_reject_ip6_tcphdr_put", 32),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("nf_send_reset6", 200),
STACK_USAGE("nf_send_unreach6", 144),
STACK_USAGE("nf_reject_skb_v6_tcp_reset", 88),
STACK_USAGE("nf_reject_skb_v6_unreach", 96),
STACK_USAGE("ip6_dst_hoplimit", 16),
STACK_USAGE("skb_dst", 8),
STACK_USAGE("__ip6_local_out", 96),
STACK_USAGE("ip6_local_out", 24),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("ipv6_proxy_select_ident", 56),
STACK_USAGE("dst_output", 24),
STACK_USAGE("ipv6_select_ident", 0),
STACK_USAGE("ip6_find_1stfragopt", 56),
STACK_USAGE("ping_v6_seq_start", 0),
STACK_USAGE("ping_v6_seq_show", 0),
STACK_USAGE("ping_v6_proc_init_net", 8),
STACK_USAGE("ping_v6_proc_exit_net", 0),
STACK_USAGE("pingv6_init", 0),
STACK_USAGE("dummy_ipv6_recv_error", 0),
STACK_USAGE("pingv6_exit", 0),
STACK_USAGE("dummy_ip6_datagram_recv_ctl", 0),
STACK_USAGE("dummy_icmpv6_err_convert", 0),
STACK_USAGE("dummy_ipv6_icmp_error", 0),
STACK_USAGE("dummy_ipv6_chk_addr", 0),
STACK_USAGE("ping_v6_sendmsg", 264),
STACK_USAGE("snmp6_seq_show_icmpv6msg", 88),
STACK_USAGE("snmp6_seq_show_item", 376),
STACK_USAGE("snmp6_seq_show", 360),
STACK_USAGE("snmp6_dev_seq_show", 344),
STACK_USAGE("snmp6_register_dev", 8),
STACK_USAGE("snmp6_unregister_dev", 8),
STACK_USAGE("ipv6_proc_init_net", 16),
STACK_USAGE("ipv6_proc_exit_net", 8),
STACK_USAGE("ipv6_misc_proc_init", 0),
STACK_USAGE("ipv6_misc_proc_exit", 0),
STACK_USAGE("sockstat6_seq_show", 16),
STACK_USAGE("inet6_add_protocol", 0),
STACK_USAGE("inet6_del_protocol", 8),
STACK_USAGE("inet6_add_offload", 0),
STACK_USAGE("inet6_del_offload", 8),
STACK_USAGE("rawv6_setsockopt", 40),
STACK_USAGE("rawv6_getsockopt", 64),
STACK_USAGE("skb_dst", 8),
STACK_USAGE("rawv6_ioctl", 40),
STACK_USAGE("compat_rawv6_ioctl", 0),
STACK_USAGE("rawv6_close", 8),
STACK_USAGE("raw6_destroy", 8),
STACK_USAGE("rawv6_init_sk", 0),
STACK_USAGE("raw6_seq_show", 0),
STACK_USAGE("raw6_init_net", 0),
STACK_USAGE("raw6_exit_net", 0),
STACK_USAGE("raw6_proc_init", 0),
STACK_USAGE("raw6_proc_exit", 0),
STACK_USAGE("rawv6_mh_filter_register", 0),
STACK_USAGE("rawv6_init", 0),
STACK_USAGE("rawv6_exit", 0),
STACK_USAGE("rawv6_mh_filter_unregister", 0),
STACK_USAGE("raw6_local_deliver", 104),
STACK_USAGE("rawv6_bind", 64),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("raw6_icmp_error", 128),
STACK_USAGE("txopt_get", 16),
STACK_USAGE("rawv6_rcv_skb", 24),
STACK_USAGE("fl6_sock_lookup", 0),
STACK_USAGE("rawv6_rcv", 24),
STACK_USAGE("dst_output", 24),
STACK_USAGE("rawv6_recvmsg", 88),
STACK_USAGE("rawv6_push_pending_frames", 80),
STACK_USAGE("rawv6_send_hdrinc", 192),
STACK_USAGE("__raw_v6_lookup", 56),
STACK_USAGE("rawv6_probe_proto_opt", 32),
STACK_USAGE("rcu_read_unlock", 0),
STACK_USAGE("raw6_getfrag", 64),
STACK_USAGE("rawv6_sendmsg", 328),
STACK_USAGE("skb_dst", 8),
STACK_USAGE("jhash2", 0),
STACK_USAGE("ip6_frag_reasm", 72),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("ipv6_frag_rcv", 176),
STACK_USAGE("ip6frag_init", 0),
STACK_USAGE("ip6frag_key_hashfn", 0),
STACK_USAGE("ip6frag_obj_hashfn", 0),
STACK_USAGE("ipv6_frags_init_net", 24),
STACK_USAGE("ipv6_frags_pre_exit_net", 0),
STACK_USAGE("ipv6_frags_exit_net", 16),
STACK_USAGE("ipv6_frag_init", 8),
STACK_USAGE("ip6frag_obj_cmpfn", 0),
STACK_USAGE("ipv6_frag_exit", 0),
STACK_USAGE("ip6_frag_expire", 48),
STACK_USAGE("ip6_rt_copy_init", 40),
STACK_USAGE("ip6_create_rt_rcu", 48),
STACK_USAGE("ip6_pol_route_lookup", 192),
STACK_USAGE("ip6_route_lookup", 0),
STACK_USAGE("rt6_lookup", 104),
STACK_USAGE("ip6_ins_rt", 56),
STACK_USAGE("ip6_rt_cache_alloc", 56),
STACK_USAGE("l3mdev_fib_table", 8),
STACK_USAGE("ip6_route_get_saddr", 24),
STACK_USAGE("rt6_uncached_list_add", 16),
STACK_USAGE("__bpf_trace_fib6_table_lookup", 0),
STACK_USAGE("__traceiter_fib6_table_lookup", 40),
STACK_USAGE("perf_trace_fib6_table_lookup", 88),
STACK_USAGE("trace_event_raw_event_fib6_table_lookup", 96),
STACK_USAGE("trace_fib6_table_lookup", 0),
STACK_USAGE("trace_raw_output_fib6_table_lookup", 72),
STACK_USAGE("rt6_remove_exception", 16),
STACK_USAGE("rt6_uncached_list_del", 24),
STACK_USAGE("__rt6_find_exception_spinlock", 80),
STACK_USAGE("__rt6_find_exception_rcu", 80),
STACK_USAGE("rt6_insert_exception", 72),
STACK_USAGE("fib6_nh_flush_exceptions", 32),
STACK_USAGE("rt6_nh_flush_exceptions", 0),
STACK_USAGE("rt6_flush_exceptions", 0),
STACK_USAGE("rt6_find_cached_rt", 64),
STACK_USAGE("fib6_nh_remove_exception", 40),
STACK_USAGE("rt6_nh_remove_exception_rt", 0),
STACK_USAGE("rt6_remove_exception_rt", 40),
STACK_USAGE("local_bh_disable", 0),
STACK_USAGE("fib6_nh_find_match", 0),
STACK_USAGE("ip6_neigh_lookup", 32),
STACK_USAGE("fib6_nh_age_exceptions", 48),
STACK_USAGE("rt6_nh_age_exceptions", 0),
STACK_USAGE("rt6_age_exceptions", 24),
STACK_USAGE("fib6_table_lookup", 136),
STACK_USAGE("ip6_pol_route", 104),
STACK_USAGE("ip6_dst_neigh_lookup", 0),
STACK_USAGE("ip6_pol_route_input", 0),
STACK_USAGE("ip6_route_input_lookup", 40),
STACK_USAGE("nexthop_get", 8),
STACK_USAGE("ip6_confirm_neigh", 16),
STACK_USAGE("rt6_multipath_hash", 256),
STACK_USAGE("ip6_route_input", 216),
STACK_USAGE("ip6_pol_route_output", 0),
STACK_USAGE("ip6_route_output_flags_noref", 48),
STACK_USAGE("ip6_route_output_flags", 32),
STACK_USAGE("ip6_blackhole_route", 32),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("ip6_dst_check", 32),
STACK_USAGE("ip6_negative_advice", 16),
STACK_USAGE("ip6_link_failure", 16),
STACK_USAGE("rt6_do_update_pmtu", 24),
STACK_USAGE("__ip6_rt_update_pmtu", 104),
STACK_USAGE("ip6_rt_update_pmtu", 0),
STACK_USAGE("ip6_update_pmtu", 128),
STACK_USAGE("ip6_sk_update_pmtu", 144),
STACK_USAGE("ip6_sk_dst_store_flow", 128),
STACK_USAGE("fib6_nh_redirect_match", 32),
STACK_USAGE("__ip6_route_redirect", 144),
STACK_USAGE("ip6_redirect", 176),
STACK_USAGE("ip6_redirect_no_header", 224),
STACK_USAGE("ip6_sk_redirect", 176),
STACK_USAGE("ip6_default_advmss", 8),
STACK_USAGE("local_bh_enable", 0),
STACK_USAGE("ip6_mtu", 16),
STACK_USAGE("ip6_mtu_from_fib6", 16),
STACK_USAGE("icmp6_dst_alloc", 40),
STACK_USAGE("ip6_dst_gc", 48),
STACK_USAGE("ip6_nh_lookup_table", 144),
STACK_USAGE("nexthop_is_blackhole", 8),
STACK_USAGE("ip6_dst_alloc", 8),
STACK_USAGE("fib6_nh_init", 224),
STACK_USAGE("in6_dev_get", 8),
STACK_USAGE("ip6_dst_destroy", 24),
STACK_USAGE("fib6_nh_release", 32),
STACK_USAGE("fib6_nh_release_dsts", 24),
STACK_USAGE("ip6_route_info_create", 88),
STACK_USAGE("ip6_dst_ifdown", 16),
STACK_USAGE("in6_dev_put", 0),
STACK_USAGE("__ipv6_neigh_lookup_noref", 24),
STACK_USAGE("ip6_route_add", 40),
STACK_USAGE("dst_discard", 0),
STACK_USAGE("__ip6_del_rt", 24),
STACK_USAGE("ip6_del_rt", 32),
STACK_USAGE("__ip6_del_rt_siblings", 80),
STACK_USAGE("skb_header_pointer", 8),
STACK_USAGE("fib6_nh_del_cached_rt", 48),
STACK_USAGE("ip6_route_del", 104),
STACK_USAGE("rt6_do_redirect", 280),
STACK_USAGE("fib6_select_path", 64),
STACK_USAGE("rt6_get_route_info", 48),
STACK_USAGE("rt6_add_route_info", 232),
STACK_USAGE("rt6_get_dflt_router", 24),
STACK_USAGE("rt6_add_dflt_router", 224),
STACK_USAGE("rt6_purge_dflt_routers", 80),
STACK_USAGE("ipv6_route_ioctl", 216),
STACK_USAGE("ip6_pkt_drop", 40),
STACK_USAGE("neigh_release", 0),
STACK_USAGE("ip6_pkt_discard", 0),
STACK_USAGE("ip6_pkt_discard_out", 8),
STACK_USAGE("ip6_pkt_prohibit", 0),
STACK_USAGE("ip6_pkt_prohibit_out", 8),
STACK_USAGE("addrconf_f6i_alloc", 224),
STACK_USAGE("fib6_remove_prefsrc", 8),
STACK_USAGE("rt6_remove_prefsrc", 32),
STACK_USAGE("fib6_clean_tohost", 32),
STACK_USAGE("rt6_clean_tohost", 0),
STACK_USAGE("rt6_upper_bound_set", 40),
STACK_USAGE("rt6_multipath_rebalance", 56),
STACK_USAGE("fib6_ifup", 8),
STACK_USAGE("rt6_sync_up", 24),
STACK_USAGE("rt6_multipath_dead_count", 0),
STACK_USAGE("nexthop_fib6_nh", 8),
STACK_USAGE("rt6_multipath_nh_flags_set", 0),
STACK_USAGE("fib6_ifdown", 48),
STACK_USAGE("rt6_sync_down_dev", 24),
STACK_USAGE("rt6_disable_ip", 96),
STACK_USAGE("fib6_nh_mtu_change", 56),
STACK_USAGE("rt6_mtu_change_route", 24),
STACK_USAGE("ip_fib_metrics_put", 0),
STACK_USAGE("rt6_mtu_change", 32),
STACK_USAGE("__rt6_nh_dev_match", 0),
STACK_USAGE("rtm_to_fib6_config", 328),
STACK_USAGE("nexthop_path_fib6_result", 24),
STACK_USAGE("inet6_rtm_delroute", 424),
STACK_USAGE("inet6_rtm_newroute", 472),
STACK_USAGE("rt6_nh_nlmsg_size", 8),
STACK_USAGE("__neigh_lookup", 16),
STACK_USAGE("rt6_fill_node_nexthop", 48),
STACK_USAGE("rt6_fill_node", 120),
STACK_USAGE("fib6_info_nh_uses_dev", 0),
STACK_USAGE("rt6_nh_dump_exceptions", 56),
STACK_USAGE("rt6_dump_route", 96),
STACK_USAGE("inet6_rtm_getroute", 440),
STACK_USAGE("rt6_probe_deferred", 32),
STACK_USAGE("inet6_rt_notify", 72),
STACK_USAGE("fib6_rt_update", 56),
STACK_USAGE("fib6_info_hw_flags_set", 48),
STACK_USAGE("ip6_route_dev_notify", 16),
STACK_USAGE("rt6_stats_seq_show", 56),
STACK_USAGE("ipv6_sysctl_rtcache_flush", 24),
STACK_USAGE("ipv6_route_sysctl_init", 8),
STACK_USAGE("ip6_route_net_init", 40),
STACK_USAGE("ip6_route_net_exit", 8),
STACK_USAGE("ip6_route_net_init_late", 8),
STACK_USAGE("ip6_route_net_exit_late", 8),
STACK_USAGE("ipv6_inetpeer_init", 16),
STACK_USAGE("ipv6_inetpeer_exit", 8),
STACK_USAGE("ip6_route_init_special_entries", 0),
STACK_USAGE("bpf_iter_ipv6_route", 0),
STACK_USAGE("ip6_route_init", 16),
STACK_USAGE("ip6_route_cleanup", 0),
STACK_USAGE("rt6_score_route", 40),
STACK_USAGE("rcu_read_unlock", 0),
STACK_USAGE("find_match", 88),
STACK_USAGE("rt6_nh_find_match", 0),
STACK_USAGE("__find_rr_leaf", 104),
STACK_USAGE("nlmsg_parse_deprecated_strict", 8),
STACK_USAGE("rt6_route_rcv", 128),
STACK_USAGE("ipv6_rpl_srh_size", 0),
STACK_USAGE("ipv6_rpl_srh_decompress", 80),
STACK_USAGE("ipv6_rpl_srh_compress", 96),
STACK_USAGE("seg6_icmp_srh", 24),
STACK_USAGE("seg6_genl_sethmac", 0),
STACK_USAGE("seg6_genl_set_tunsrc", 32),
STACK_USAGE("seg6_genl_get_tunsrc", 40),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("seg6_validate_srh", 0),
STACK_USAGE("seg6_genl_dumphmac_start", 0),
STACK_USAGE("seg6_genl_dumphmac_done", 0),
STACK_USAGE("seg6_genl_dumphmac", 0),
STACK_USAGE("seg6_net_init", 24),
STACK_USAGE("seg6_net_exit", 8),
STACK_USAGE("seg6_init", 8),
STACK_USAGE("seg6_exit", 0),
STACK_USAGE("seg6_get_srh", 32),
STACK_USAGE("skb_dst", 8),
STACK_USAGE("seg6_do_srh_encap", 88),
STACK_USAGE("seg6_do_srh_inline", 72),
STACK_USAGE("seg6_do_srh", 16),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("NF_HOOK", 120),
STACK_USAGE("seg6_input_finish", 8),
STACK_USAGE("seg6_input_core", 32),
STACK_USAGE("seg6_input", 8),
STACK_USAGE("seg6_output_core", 152),
STACK_USAGE("dst_output", 24),
STACK_USAGE("seg6_output", 24),
STACK_USAGE("seg6_build_state", 88),
STACK_USAGE("seg6_destroy_state", 0),
STACK_USAGE("seg6_fill_encap_info", 16),
STACK_USAGE("seg6_encap_nlsize", 0),
STACK_USAGE("seg6_encap_cmp", 0),
STACK_USAGE("seg6_iptunnel_init", 0),
STACK_USAGE("seg6_iptunnel_exit", 0),
STACK_USAGE("seg6_local_input_core", 32),
STACK_USAGE("seg6_local_input", 0),
STACK_USAGE("parse_nla_srh", 32),
STACK_USAGE("skb_dst", 8),
STACK_USAGE("put_nla_srh", 16),
STACK_USAGE("cmp_nla_srh", 0),
STACK_USAGE("destroy_attr_srh", 0),
STACK_USAGE("parse_nla_table", 0),
STACK_USAGE("put_nla_table", 16),
STACK_USAGE("cmp_nla_table", 0),
STACK_USAGE("parse_nla_vrftable", 0),
STACK_USAGE("put_nla_vrftable", 16),
STACK_USAGE("cmp_nla_vrftable", 0),
STACK_USAGE("parse_nla_nh4", 0),
STACK_USAGE("put_nla_nh4", 8),
STACK_USAGE("cmp_nla_nh4", 0),
STACK_USAGE("parse_nla_nh6", 0),
STACK_USAGE("put_nla_nh6", 8),
STACK_USAGE("cmp_nla_nh6", 0),
STACK_USAGE("parse_nla_iif", 0),
STACK_USAGE("put_nla_iif", 16),
STACK_USAGE("cmp_nla_iif", 0),
STACK_USAGE("parse_nla_oif", 0),
STACK_USAGE("put_nla_oif", 16),
STACK_USAGE("cmp_nla_oif", 0),
STACK_USAGE("parse_nla_bpf", 72),
STACK_USAGE("put_nla_bpf", 48),
STACK_USAGE("cmp_nla_bpf", 0),
STACK_USAGE("destroy_attr_bpf", 8),
STACK_USAGE("parse_nla_counters", 72),
STACK_USAGE("put_nla_counters", 72),
STACK_USAGE("cmp_nla_counters", 0),
STACK_USAGE("destroy_attr_counters", 0),
STACK_USAGE("decap_and_validate", 40),
STACK_USAGE("seg6_local_build_state", 216),
STACK_USAGE("seg6_local_destroy_state", 40),
STACK_USAGE("seg6_local_fill_encap", 40),
STACK_USAGE("seg6_local_get_encap_size", 0),
STACK_USAGE("seg6_local_cmp_encap", 32),
STACK_USAGE("seg6_local_init", 0),
STACK_USAGE("seg6_local_exit", 0),
STACK_USAGE("ip_route_input", 32),
STACK_USAGE("seg6_lookup_any_nexthop", 136),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("seg6_lookup_nexthop", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("input_action_end", 16),
STACK_USAGE("input_action_end_x", 16),
STACK_USAGE("NF_HOOK", 120),
STACK_USAGE("input_action_end_t", 24),
STACK_USAGE("input_action_end_dx2", 32),
STACK_USAGE("input_action_end_dx6_finish", 8),
STACK_USAGE("input_action_end_dx6", 16),
STACK_USAGE("input_action_end_dx4_finish", 32),
STACK_USAGE("input_action_end_dx4", 16),
STACK_USAGE("skb_warn_if_lro", 0),
STACK_USAGE("end_dt_vrf_core", 48),
STACK_USAGE("input_action_end_dt4", 16),
STACK_USAGE("seg6_end_dt4_build", 24),
STACK_USAGE("seg6_end_dt6_build", 24),
STACK_USAGE("input_action_end_dt6", 16),
STACK_USAGE("seg6_end_dt46_build", 24),
STACK_USAGE("input_action_end_dt46", 32),
STACK_USAGE("input_action_end_b6", 16),
STACK_USAGE("input_action_end_b6_encap", 24),
STACK_USAGE("seg6_bpf_has_valid_srh", 16),
STACK_USAGE("input_action_end_bpf", 120),
STACK_USAGE("sit_tunnel_xmit", 160),
STACK_USAGE("ipip6_tunnel_bind_dev", 120),
STACK_USAGE("ipip6_tunnel_update", 40),
STACK_USAGE("ipip6_tunnel_ctl", 32),
STACK_USAGE("ipip6_tunnel_siocdevprivate", 72),
STACK_USAGE("ipip6_dev_free", 8),
STACK_USAGE("ipip6_tunnel_setup", 0),
STACK_USAGE("ipip6_tunnel_init", 16),
STACK_USAGE("ipip6_validate", 0),
STACK_USAGE("ipip6_netlink_parms", 0),
STACK_USAGE("ipip6_newlink", 56),
STACK_USAGE("ipip6_changelink", 120),
STACK_USAGE("ipip6_get_size", 0),
STACK_USAGE("ipip6_fill_info", 32),
STACK_USAGE("ipip6_dellink", 16),
STACK_USAGE("sit_init_net", 24),
STACK_USAGE("sit_exit_batch_net", 96),
STACK_USAGE("sit_cleanup", 0),
STACK_USAGE("sit_init", 8),
STACK_USAGE("ipip6_tunnel_create", 24),
STACK_USAGE("ipip6_tunnel_locate", 88),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("skb_clone_writable", 0),
STACK_USAGE("net_generic", 16),
STACK_USAGE("prl_list_destroy_rcu", 8),
STACK_USAGE("ipip6_tunnel_del_prl", 24),
STACK_USAGE("dst_link_failure", 8),
STACK_USAGE("ipip6_tunnel_uninit", 24),
STACK_USAGE("ipip6_err", 48),
STACK_USAGE("skb_dst_update_pmtu_no_confirm", 16),
STACK_USAGE("ipip6_rcv", 88),
STACK_USAGE("sit_tunnel_rcv", 24),
STACK_USAGE("ipip_rcv", 0),
STACK_USAGE("mplsip_rcv", 0),
STACK_USAGE("ipip6_tunnel_lookup", 64),
STACK_USAGE("cookie_v6_init_sequence", 0),
STACK_USAGE("inet_request_bound_dev_if", 24),
STACK_USAGE("__cookie_v6_check", 112),
STACK_USAGE("cookie_v6_check", 224),
STACK_USAGE("refcount_inc", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("__cookie_v6_init_sequence", 120),
STACK_USAGE("ipv6_sysctl_net_init", 32),
STACK_USAGE("ipv6_sysctl_net_exit", 32),
STACK_USAGE("ipv6_sysctl_register", 8),
STACK_USAGE("ipv6_sysctl_unregister", 0),
STACK_USAGE("proc_rt6_multipath_hash_policy", 24),
STACK_USAGE("proc_rt6_multipath_hash_fields", 24),
STACK_USAGE("inet6_sk_rx_dst_set", 16),
STACK_USAGE("tcp_v6_timewait_ack", 56),
STACK_USAGE("tcp_v6_reqsk_send_ack", 80),
STACK_USAGE("xfrm6_policy_check", 16),
STACK_USAGE("tcp_v6_get_syncookie", 48),
STACK_USAGE("tcp_v6_conn_request", 16),
STACK_USAGE("tcp_v6_init_seq", 0),
STACK_USAGE("skb_dst_set_noref", 16),
STACK_USAGE("tcp_v6_syn_recv_sock", 192),
STACK_USAGE("tcp_v6_init_ts_off", 0),
STACK_USAGE("tcp_v6_pre_connect", 32),
STACK_USAGE("reqsk_put", 8),
STACK_USAGE("tcp_checksum_complete", 0),
STACK_USAGE("tcp_v6_do_rcv", 40),
STACK_USAGE("tcp_v6_connect", 208),
STACK_USAGE("tcp_v6_fill_cb", 0),
STACK_USAGE("tcp_v6_rcv", 168),
STACK_USAGE("sock_owned_by_user", 8),
STACK_USAGE("tcp_v6_early_demux", 24),
STACK_USAGE("tcp_v6_send_check", 24),
STACK_USAGE("sock_put", 0),
STACK_USAGE("tcp_v6_init_sock", 8),
STACK_USAGE("tcp_v6_destroy_sock", 8),
STACK_USAGE("tcp6_seq_show", 216),
STACK_USAGE("tcp6_proc_init", 0),
STACK_USAGE("tcp6_proc_exit", 0),
STACK_USAGE("tcpv6_net_init", 0),
STACK_USAGE("tcp_segs_in", 0),
STACK_USAGE("tcpv6_net_exit", 0),
STACK_USAGE("tcpv6_net_exit_batch", 0),
STACK_USAGE("tcpv6_init", 8),
STACK_USAGE("tcpv6_exit", 0),
STACK_USAGE("skb_set_owner_r", 16),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("ip6_sk_accept_pmtu", 0),
STACK_USAGE("sk_dev_equal_l3scope", 16),
STACK_USAGE("rt6_get_cookie", 16),
STACK_USAGE("local_bh_enable", 0),
STACK_USAGE("tcp_v6_mtu_reduced", 24),
STACK_USAGE("trace_tcp_bad_csum", 0),
STACK_USAGE("tcp_v6_err", 88),
STACK_USAGE("dst_check", 0),
STACK_USAGE("tcp_v6_send_synack", 120),
STACK_USAGE("tcp_v6_reqsk_destructor", 8),
STACK_USAGE("tcp_v6_md5_lookup", 16),
STACK_USAGE("tcp_v6_parse_md5_keys", 264),
STACK_USAGE("rcu_read_unlock", 0),
STACK_USAGE("tcp_v6_md5_hash_skb", 112),
STACK_USAGE("l3mdev_master_ifindex_by_index", 16),
STACK_USAGE("tcp_v6_route_req", 40),
STACK_USAGE("tcp_v6_send_response", 232),
STACK_USAGE("tcp_v6_send_reset", 104),
STACK_USAGE("tcp6_gro_receive", 24),
STACK_USAGE("tcp6_gro_complete", 24),
STACK_USAGE("tcp6_gso_segment", 16),
STACK_USAGE("__tcp_v6_send_check", 24),
STACK_USAGE("tcpv6_offload_init", 0),
STACK_USAGE("tunnelmpls6_rcv", 16),
STACK_USAGE("tunnel6_rcv", 16),
STACK_USAGE("tunnel46_rcv", 16),
STACK_USAGE("tunnel6_err", 56),
STACK_USAGE("tunnel46_err", 56),
STACK_USAGE("tunnelmpls6_err", 56),
STACK_USAGE("tunnel6_init", 0),
STACK_USAGE("tunnel6_fini", 0),
STACK_USAGE("xfrm6_tunnel_register", 32),
STACK_USAGE("xfrm6_tunnel_deregister", 24),
STACK_USAGE("udp_v6_early_demux", 72),
STACK_USAGE("udpv6_rcv", 0),
STACK_USAGE("udpv6_pre_connect", 40),
STACK_USAGE("xfrm6_policy_check", 16),
STACK_USAGE("udp_lib_checksum_complete", 0),
STACK_USAGE("udp_v6_send_skb", 72),
STACK_USAGE("udp_v6_push_pending_frames", 24),
STACK_USAGE("udpv6_sendmsg", 400),
STACK_USAGE("lookup_reuseport", 72),
STACK_USAGE("udpv6_destroy_sock", 8),
STACK_USAGE("udpv6_setsockopt", 0),
STACK_USAGE("udpv6_getsockopt", 0),
STACK_USAGE("udp6_lib_lookup2", 96),
STACK_USAGE("udp6_seq_show", 0),
STACK_USAGE("udp6_proc_init", 0),
STACK_USAGE("udp6_proc_exit", 0),
STACK_USAGE("udpv6_init", 8),
STACK_USAGE("udpv6_exit", 0),
STACK_USAGE("udp_lib_hash", 0),
STACK_USAGE("udp_lib_close", 0),
STACK_USAGE("sock_put", 0),
STACK_USAGE("udplite_getfrag", 16),
STACK_USAGE("__udp6_lib_lookup", 168),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("__udp6_lib_lookup_skb", 16),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("udp6_lib_lookup_skb", 16),
STACK_USAGE("udpv6_recvmsg", 120),
STACK_USAGE("txopt_get", 16),
STACK_USAGE("fl6_sock_lookup", 0),
STACK_USAGE("udpv6_encap_enable", 0),
STACK_USAGE("udp_rcv_segment", 24),
STACK_USAGE("udp_post_segment_fix_csum", 0),
STACK_USAGE("__udp6_lib_err", 152),
STACK_USAGE("udpv6_err", 0),
STACK_USAGE("udpv6_queue_rcv_one_skb", 40),
STACK_USAGE("ipv6_portaddr_hash", 0),
STACK_USAGE("udpv6_queue_rcv_skb", 24),
STACK_USAGE("__udp6_lib_mcast_deliver", 136),
STACK_USAGE("udp_v6_get_port", 32),
STACK_USAGE("udp6_sk_rx_dst_set", 24),
STACK_USAGE("udp6_unicast_rcv_skb", 16),
STACK_USAGE("__udp6_lib_rcv", 72),
STACK_USAGE("udp_v6_rehash", 8),
STACK_USAGE("udp6_gro_receive", 40),
STACK_USAGE("udp6_gro_complete", 32),
STACK_USAGE("udp6_ufo_fragment", 64),
STACK_USAGE("udpv6_offload_init", 0),
STACK_USAGE("udpv6_offload_exit", 0),
STACK_USAGE("udplite6_proc_exit_net", 0),
STACK_USAGE("udplite6_proc_init", 0),
STACK_USAGE("udplite6_proc_exit", 0),
STACK_USAGE("udplitev6_rcv", 0),
STACK_USAGE("udp_lib_hash", 0),
STACK_USAGE("udp_lib_close", 0),
STACK_USAGE("udplitev6_err", 0),
STACK_USAGE("udplite_sk_init", 8),
STACK_USAGE("udplitev6_init", 8),
STACK_USAGE("udplitev6_exit", 0),
STACK_USAGE("udplite6_proc_init_net", 0),
STACK_USAGE("xfrm6_rcv_tnl", 0),
STACK_USAGE("xfrm6_rcv", 0),
STACK_USAGE("xfrm6_input_addr", 72),
STACK_USAGE("xfrm6_rcv_spi", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("xfrm6_transport_finish2", 16),
STACK_USAGE("xfrm6_transport_finish", 96),
STACK_USAGE("xfrm6_udp_encap_rcv", 40),
STACK_USAGE("xfrm6_output", 104),
STACK_USAGE("skb_dst", 8),
STACK_USAGE("xfrm6_local_rxpmtu", 104),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("xfrm6_local_error", 104),
STACK_USAGE("__xfrm6_output_finish", 0),
STACK_USAGE("__xfrm6_output", 136),
STACK_USAGE("xfrm6_redirect", 0),
STACK_USAGE("xfrm6_dst_destroy", 16),
STACK_USAGE("xfrm6_dst_ifdown", 40),
STACK_USAGE("xfrm6_net_init", 24),
STACK_USAGE("xfrm6_net_exit", 16),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("xfrm6_dst_lookup", 144),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("xfrm6_init", 8),
STACK_USAGE("xfrm6_fini", 0),
STACK_USAGE("in6_dev_get", 8),
STACK_USAGE("xfrm6_get_saddr", 24),
STACK_USAGE("xfrm6_fill_dst", 32),
STACK_USAGE("xfrm6_update_pmtu", 0),
STACK_USAGE("xfrm6_esp_rcv", 24),
STACK_USAGE("xfrm6_esp_err", 56),
STACK_USAGE("xfrm6_ah_rcv", 24),
STACK_USAGE("xfrm6_ah_err", 56),
STACK_USAGE("xfrm6_ipcomp_rcv", 24),
STACK_USAGE("xfrm6_ipcomp_err", 56),
STACK_USAGE("xfrm6_protocol_register", 48),
STACK_USAGE("xfrm6_protocol_deregister", 40),
STACK_USAGE("xfrm6_protocol_init", 0),
STACK_USAGE("xfrm6_protocol_fini", 0),
STACK_USAGE("xfrm6_rcv_cb", 32),
STACK_USAGE("xfrm6_rcv_encap", 152),
STACK_USAGE("xfrm6_state_init", 0),
STACK_USAGE("xfrm6_state_fini", 0),
STACK_USAGE("l3mdev_master_ifindex_rcu", 8),
STACK_USAGE("l3mdev_master_upper_ifindex_by_index_rcu", 8),
STACK_USAGE("l3mdev_fib_table_rcu", 0),
STACK_USAGE("l3mdev_fib_table_by_index", 16),
STACK_USAGE("l3mdev_link_scope_lookup", 16),
STACK_USAGE("l3mdev_fib_rule_match", 24),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("l3mdev_update_flow", 32),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("l3mdev_table_lookup_register", 16),
STACK_USAGE("l3mdev_table_lookup_unregister", 8),
STACK_USAGE("l3mdev_ifindex_lookup_by_table_id", 24),
STACK_USAGE("llc_sap_close", 8),
STACK_USAGE("llc_init", 0),
STACK_USAGE("llc_exit", 0),
STACK_USAGE("local_bh_disable", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("local_bh_enable", 0),
STACK_USAGE("llc_sap_find", 16),
STACK_USAGE("llc_sap_open", 24),
STACK_USAGE("llc_rcv", 56),
STACK_USAGE("llc_add_pack", 0),
STACK_USAGE("llc_remove_pack", 0),
STACK_USAGE("llc_set_station_handler", 0),
STACK_USAGE("llc_mac_hdr_init", 0),
STACK_USAGE("llc_build_and_send_ui_pkt", 32),
STACK_USAGE("nlmsg_cancel", 0),
STACK_USAGE("mpls_fill_stats_af", 88),
STACK_USAGE("mpls_get_stats_af_size", 8),
STACK_USAGE("mpls_dev_mtu", 0),
STACK_USAGE("mpls_netconf_fill_devconf", 48),
STACK_USAGE("mpls_netconf_notify_devconf", 40),
STACK_USAGE("mpls_pkt_too_big", 0),
STACK_USAGE("mpls_netconf_get_devconf", 136),
STACK_USAGE("mpls_netconf_dump_devconf", 72),
STACK_USAGE("mpls_stats_inc_outucastpkts", 24),
STACK_USAGE("mpls_conf_proc", 32),
STACK_USAGE("mpls_dev_sysctl_register", 88),
STACK_USAGE("mpls_dev_sysctl_unregister", 24),
STACK_USAGE("mpls_dev_destroy_rcu", 8),
STACK_USAGE("mpls_ifdown", 64),
STACK_USAGE("mpls_ifup", 56),
STACK_USAGE("mpls_dev_notify", 40),
STACK_USAGE("nla_put_via", 32),
STACK_USAGE("nla_put_labels", 24),
STACK_USAGE("nla_get_labels", 24),
STACK_USAGE("rtm_to_route_config", 360),
STACK_USAGE("mpls_dev_get", 8),
STACK_USAGE("mpls_rtm_delroute", 56),
STACK_USAGE("mpls_rtm_newroute", 128),
STACK_USAGE("mpls_dump_route", 104),
STACK_USAGE("mpls_dump_routes", 80),
STACK_USAGE("mpls_select_multipath", 64),
STACK_USAGE("mpls_getroute", 504),
STACK_USAGE("mpls_platform_labels", 160),
STACK_USAGE("mpls_net_init", 16),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("mpls_net_exit", 40),
STACK_USAGE("mpls_egress", 32),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("mpls_init", 8),
STACK_USAGE("mpls_exit", 0),
STACK_USAGE("mpls_forward", 72),
STACK_USAGE("skb_cow", 0),
STACK_USAGE("ipgre_mpls_encap_hlen", 0),
STACK_USAGE("skb_warn_if_lro", 0),
STACK_USAGE("mpls_notify_route", 72),
STACK_USAGE("mpls_route_update", 48),
STACK_USAGE("mpls_nh_assign_dev", 128),
STACK_USAGE("nla_get_via", 32),
STACK_USAGE("mpls_route_input_rcu", 16),
STACK_USAGE("nlmsg_parse_deprecated_strict", 16),
STACK_USAGE("mpls_output_possible", 0),
STACK_USAGE("mpls_label_ok", 40),
STACK_USAGE("mpls_gso_segment", 56),
STACK_USAGE("mpls_gso_init", 0),
STACK_USAGE("mpls_gso_exit", 0),
STACK_USAGE("mpls_build_state", 88),
STACK_USAGE("mpls_fill_encap_info", 40),
STACK_USAGE("mpls_encap_nlsize", 0),
STACK_USAGE("mpls_encap_cmp", 0),
STACK_USAGE("mpls_iptunnel_init", 0),
STACK_USAGE("mpls_iptunnel_exit", 0),
STACK_USAGE("mpls_xmit", 56),
STACK_USAGE("mptcp_crypto_key_sha", 88),
STACK_USAGE("mptcp_crypto_hmac_sha", 312),
STACK_USAGE("mptcp_net_init", 24),
STACK_USAGE("mptcp_net_exit", 8),
STACK_USAGE("mptcp_init", 0),
STACK_USAGE("mptcpv6_init", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("mptcp_get_pernet", 16),
STACK_USAGE("mptcp_is_enabled", 0),
STACK_USAGE("mptcp_get_add_addr_timeout", 0),
STACK_USAGE("mptcp_is_checksum_enabled", 0),
STACK_USAGE("mptcp_allow_join_id0", 0),
STACK_USAGE("mptcp_stale_loss_cnt", 0),
STACK_USAGE("mptcp_diag_subflow_init", 0),
STACK_USAGE("subflow_get_info", 56),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("rcu_read_unlock", 0),
STACK_USAGE("subflow_get_info_size", 0),
STACK_USAGE("mptcp_mib_alloc", 16),
STACK_USAGE("mptcp_seq_show", 424),
STACK_USAGE("__mptcp_expand_seq", 0),
STACK_USAGE("mptcp_update_rcv_data_fin", 0),
STACK_USAGE("add_addr_hmac_valid", 88),
STACK_USAGE("mptcp_incoming_options", 208),
STACK_USAGE("__mptcp_make_csum", 24),
STACK_USAGE("mptcp_write_options", 64),
STACK_USAGE("mptcp_get_reset_option", 0),
STACK_USAGE("sock_owned_by_user", 8),
STACK_USAGE("mptcp_get_options", 64),
STACK_USAGE("mptcp_syn_options", 24),
STACK_USAGE("mptcp_subflow_delegate", 40),
STACK_USAGE("add_addr_generate_hmac", 88),
STACK_USAGE("mptcp_established_options_rst", 0),
STACK_USAGE("mptcp_established_options", 112),
STACK_USAGE("mptcp_synack_options", 0),
STACK_USAGE("mptcp_pm_fully_established", 40),
STACK_USAGE("mptcp_pm_connection_closed", 0),
STACK_USAGE("mptcp_pm_subflow_established", 16),
STACK_USAGE("mptcp_pm_subflow_check_next", 24),
STACK_USAGE("mptcp_pm_announce_addr", 32),
STACK_USAGE("mptcp_pm_add_addr_received", 32),
STACK_USAGE("mptcp_pm_add_addr_echoed", 24),
STACK_USAGE("mptcp_pm_add_addr_send_ack", 0),
STACK_USAGE("mptcp_pm_rm_addr_received", 32),
STACK_USAGE("mptcp_pm_mp_prio_received", 0),
STACK_USAGE("mptcp_pm_mp_fail_received", 0),
STACK_USAGE("mptcp_pm_add_addr_signal", 56),
STACK_USAGE("mptcp_pm_rm_addr_signal", 32),
STACK_USAGE("mptcp_pm_get_local_id", 0),
STACK_USAGE("mptcp_pm_subflow_chk_stale", 0),
STACK_USAGE("mptcp_pm_data_reset", 0),
STACK_USAGE("mptcp_pm_data_init", 8),
STACK_USAGE("mptcp_pm_init", 0),
STACK_USAGE("mptcp_pm_remove_addr", 0),
STACK_USAGE("mptcp_pm_remove_subflow", 24),
STACK_USAGE("mptcp_pm_new_connection", 0),
STACK_USAGE("mptcp_pm_allow_new_subflow", 32),
STACK_USAGE("mptcp_pm_nl_get_local_id", 96),
STACK_USAGE("mptcp_pm_nl_data_init", 24),
STACK_USAGE("mptcp_pm_nl_subflow_chk_stale", 48),
STACK_USAGE("lookup_subflow_by_saddr", 48),
STACK_USAGE("mptcp_pm_parse_addr", 136),
STACK_USAGE("mptcp_nl_cmd_add_addr", 256),
STACK_USAGE("mptcp_pm_get_flags_and_ifindex_by_id", 32),
STACK_USAGE("remove_anno_list_by_saddr", 24),
STACK_USAGE("mptcp_nl_cmd_del_addr", 208),
STACK_USAGE("mptcp_nl_cmd_flush_addrs", 120),
STACK_USAGE("mptcp_nl_fill_addr", 48),
STACK_USAGE("mptcp_nl_cmd_get_addr", 104),
STACK_USAGE("mptcp_nl_cmd_dump_addrs", 72),
STACK_USAGE("mptcp_nl_cmd_set_limits", 24),
STACK_USAGE("mptcp_nl_cmd_get_limits", 56),
STACK_USAGE("mptcp_nl_cmd_set_flags", 208),
STACK_USAGE("mptcp_nl_mcast_send", 0),
STACK_USAGE("mptcp_event_add_subflow", 40),
STACK_USAGE("mptcp_event_put_token_and_ssk", 48),
STACK_USAGE("mptcp_event_addr_removed", 56),
STACK_USAGE("mptcp_event_addr_announced", 56),
STACK_USAGE("mptcp_event", 64),
STACK_USAGE("mptcp_pm_get_add_addr_signal_max", 0),
STACK_USAGE("pm_nl_init_net", 0),
STACK_USAGE("mptcp_pm_get_add_addr_accept_max", 0),
STACK_USAGE("pm_nl_exit_net", 40),
STACK_USAGE("mptcp_pm_nl_init", 0),
STACK_USAGE("mptcp_pm_get_subflows_max", 0),
STACK_USAGE("mptcp_pm_get_local_addr_max", 0),
STACK_USAGE("mptcp_pm_nl_check_work_pending", 24),
STACK_USAGE("mptcp_lookup_anno_list_by_saddr", 16),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("mptcp_pm_sport_in_anno_list", 64),
STACK_USAGE("mptcp_pm_add_timer", 40),
STACK_USAGE("mptcp_pm_del_add_timer", 40),
STACK_USAGE("mptcp_pm_free_anno_list", 56),
STACK_USAGE("net_generic", 16),
STACK_USAGE("lookup_id_by_addr", 24),
STACK_USAGE("mptcp_pm_create_subflow_or_signal_addr", 376),
STACK_USAGE("mptcp_pm_nl_addr_send_ack", 16),
STACK_USAGE("mptcp_pm_nl_rm_addr_or_subflow", 96),
STACK_USAGE("mptcp_pm_nl_rm_subflow_received", 0),
STACK_USAGE("mptcp_pm_nl_work", 280),
STACK_USAGE("mptcp_pm_nl_append_new_local_addr", 40),
STACK_USAGE("__mptcp_clean_una", 40),
STACK_USAGE("__mptcp_clean_una_wakeup", 8),
STACK_USAGE("mptcp_enter_memory_pressure", 32),
STACK_USAGE("__traceiter_mptcp_sendmsg_frag", 16),
STACK_USAGE("__traceiter_get_mapping_status", 16),
STACK_USAGE("mptcp_sendmsg_frag", 120),
STACK_USAGE("__bpf_trace_ack_update_msk", 0),
STACK_USAGE("__traceiter_ack_update_msk", 48),
STACK_USAGE("perf_trace_ack_update_msk", 88),
STACK_USAGE("trace_event_raw_event_ack_update_msk", 104),
STACK_USAGE("trace_raw_output_ack_update_msk", 24),
STACK_USAGE("mptcp_drop", 0),
STACK_USAGE("mptcp_subflow_set_active", 0),
STACK_USAGE("mptcp_subflow_active", 0),
STACK_USAGE("mptcp_subflow_get_send", 88),
STACK_USAGE("mptcp_check_and_set_pending", 0),
STACK_USAGE("__mptcp_push_pending", 96),
STACK_USAGE("__bpf_trace_subflow_check_data_avail", 0),
STACK_USAGE("__traceiter_subflow_check_data_avail", 24),
STACK_USAGE("perf_trace_subflow_check_data_avail", 64),
STACK_USAGE("trace_event_raw_event_subflow_check_data_avail", 80),
STACK_USAGE("trace_raw_output_subflow_check_data_avail", 24),
STACK_USAGE("__mptcp_subflow_push_pending", 96),
STACK_USAGE("mptcp_sendmsg", 104),
STACK_USAGE("lock_sock_fast", 8),
STACK_USAGE("unlock_sock_fast", 8),
STACK_USAGE("sock_owned_by_user", 8),
STACK_USAGE("mptcp_rfree", 0),
STACK_USAGE("__bpf_trace_mptcp_subflow_get_send", 0),
STACK_USAGE("__traceiter_mptcp_subflow_get_send", 16),
STACK_USAGE("perf_trace_mptcp_subflow_get_send", 64),
STACK_USAGE("trace_event_raw_event_mptcp_subflow_get_send", 72),
STACK_USAGE("trace_raw_output_mptcp_subflow_get_send", 24),
STACK_USAGE("__mptcp_update_rmem", 8),
STACK_USAGE("__mptcp_move_skbs", 64),
STACK_USAGE("mptcp_recvmsg", 208),
STACK_USAGE("mptcp_retransmit_timer", 24),
STACK_USAGE("mptcp_timeout_timer", 16),
STACK_USAGE("__mptcp_retransmit_pending_data", 32),
STACK_USAGE("__mptcp_close_ssk", 40),
STACK_USAGE("mptcp_close_ssk", 24),
STACK_USAGE("mptcp_sync_mss", 0),
STACK_USAGE("__mptcp_retrans", 96),
STACK_USAGE("sk_wake_async", 16),
STACK_USAGE("mptcp_worker", 72),
STACK_USAGE("mptcp_init_sock", 48),
STACK_USAGE("mptcp_subflow_shutdown", 32),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("__mptcp_check_send_data_fin", 24),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("__mptcp_destroy_sock", 48),
STACK_USAGE("mptcp_close", 64),
STACK_USAGE("mptcp_disconnect", 24),
STACK_USAGE("mptcp_sk_clone", 48),
STACK_USAGE("mptcp_rcv_space_init", 0),
STACK_USAGE("mptcp_accept", 24),
STACK_USAGE("mptcp_destroy_common", 32),
STACK_USAGE("mptcp_destroy", 8),
STACK_USAGE("__mptcp_data_acked", 16),
STACK_USAGE("__mptcp_check_push", 16),
STACK_USAGE("mptcp_release_cb", 96),
STACK_USAGE("mptcp_subflow_process_delegated", 32),
STACK_USAGE("mptcp_hash", 0),
STACK_USAGE("mptcp_unhash", 0),
STACK_USAGE("mptcp_get_port", 0),
STACK_USAGE("mptcp_finish_connect", 40),
STACK_USAGE("mptcp_sock_graft", 24),
STACK_USAGE("mptcp_finish_join", 56),
STACK_USAGE("mptcp_shutdown", 16),
STACK_USAGE("mptcp_forward_alloc_get", 0),
STACK_USAGE("mptcp_ioctl", 40),
STACK_USAGE("mptcp_bind", 48),
STACK_USAGE("mptcp_stream_connect", 56),
STACK_USAGE("mptcp_listen", 48),
STACK_USAGE("mptcp_stream_accept", 64),
STACK_USAGE("mptcp_poll", 40),
STACK_USAGE("mptcp_napi_poll", 56),
STACK_USAGE("mptcp_proto_init", 16),
STACK_USAGE("mptcp_v6_destroy", 8),
STACK_USAGE("mptcp_proto_v6_init", 8),
STACK_USAGE("mptcp_subflow_send_ack", 40),
STACK_USAGE("mptcp_subflow_delegate", 40),
STACK_USAGE("mptcp_check_data_fin", 24),
STACK_USAGE("__mptcp_move_skbs_from_subflow", 176),
STACK_USAGE("__bpf_trace_mptcp_dump_mpext", 0),
STACK_USAGE("__mptcp_nmpc_socket", 0),
STACK_USAGE("perf_trace_mptcp_dump_mpext", 56),
STACK_USAGE("trace_event_raw_event_mptcp_dump_mpext", 72),
STACK_USAGE("trace_raw_output_mptcp_dump_mpext", 80),
STACK_USAGE("__mptcp_ofo_queue", 72),
STACK_USAGE("mptcp_data_ready", 40),
STACK_USAGE("mptcp_schedule_work", 16),
STACK_USAGE("mptcp_subflow_eof", 16),
STACK_USAGE("mptcp_check_for_eof", 8),
STACK_USAGE("__mptcp_mem_reclaim_partial", 16),
STACK_USAGE("mptcp_mem_reclaim_partial", 16),
STACK_USAGE("dfrag_clear", 24),
STACK_USAGE("mptcp_put_int_option", 48),
STACK_USAGE("mptcp_getsockopt", 368),
STACK_USAGE("sync_socket_options", 16),
STACK_USAGE("mptcp_sockopt_sync", 48),
STACK_USAGE("mptcp_sockopt_sync_locked", 24),
STACK_USAGE("mptcp_sol_socket_sync_intval", 72),
STACK_USAGE("mptcp_setsockopt", 120),
STACK_USAGE("mptcp_diag_fill_info", 40),
STACK_USAGE("mptcp_get_subflow_data", 32),
STACK_USAGE("mptcp_subflow_data_available", 96),
STACK_USAGE("mptcp_space", 0),
STACK_USAGE("__mptcp_error_report", 32),
STACK_USAGE("subflow_error_report", 40),
STACK_USAGE("subflow_data_ready", 24),
STACK_USAGE("subflow_write_space", 8),
STACK_USAGE("subflow_check_req", 248),
STACK_USAGE("mptcpv6_handle_mapped", 0),
STACK_USAGE("mptcp_info2sockaddr", 0),
STACK_USAGE("__mptcp_subflow_connect", 240),
STACK_USAGE("mptcp_subflow_create_socket", 80),
STACK_USAGE("subflow_state_change", 32),
STACK_USAGE("subflow_ulp_init", 8),
STACK_USAGE("subflow_ulp_release", 24),
STACK_USAGE("subflow_ulp_clone", 24),
STACK_USAGE("tcp_release_cb_override", 8),
STACK_USAGE("mptcp_subflow_init", 0),
STACK_USAGE("sock_put", 0),
STACK_USAGE("mptcp_subflow_init_cookie_req", 176),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("subflow_v4_route_req", 32),
STACK_USAGE("subflow_v6_route_req", 32),
STACK_USAGE("mptcp_subflow_reset", 24),
STACK_USAGE("__mptcp_set_connected", 8),
STACK_USAGE("mptcp_set_connected", 16),
STACK_USAGE("subflow_req_destructor", 8),
STACK_USAGE("subflow_finish_connect", 264),
STACK_USAGE("subflow_rebuild_header", 16),
STACK_USAGE("subflow_v6_rebuild_header", 16),
STACK_USAGE("subflow_v4_conn_request", 16),
STACK_USAGE("subflow_v6_conn_request", 16),
STACK_USAGE("mptcp_sock_destruct", 16),
STACK_USAGE("subflow_drop_ctx", 8),
STACK_USAGE("mptcp_subflow_fully_established", 0),
STACK_USAGE("subflow_syn_recv_sock", 296),
STACK_USAGE("mptcp_join_cookie_init", 8),
STACK_USAGE("mptcp_join_entry_hash", 48),
STACK_USAGE("subflow_init_req_cookie_join_save", 24),
STACK_USAGE("mptcp_token_join_cookie_init_state", 40),
STACK_USAGE("mptcp_token_new_request", 48),
STACK_USAGE("mptcp_token_new_connect", 64),
STACK_USAGE("mptcp_token_accept", 40),
STACK_USAGE("mptcp_token_exists", 16),
STACK_USAGE("mptcp_token_get_sock", 48),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("mptcp_token_iter_next", 72),
STACK_USAGE("mptcp_token_destroy_request", 32),
STACK_USAGE("mptcp_token_destroy", 32),
STACK_USAGE("mptcp_token_init", 8),
STACK_USAGE("nf_hook_entries_grow", 48),
STACK_USAGE("nf_hook_entries_insert_raw", 32),
STACK_USAGE("__nf_hook_entries_try_shrink", 64),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("nf_hook_entry_head", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("__nf_register_net_hook", 48),
STACK_USAGE("__nf_unregister_net_hook", 48),
STACK_USAGE("nf_unregister_net_hook", 16),
STACK_USAGE("nf_hook_entries_delete_raw", 8),
STACK_USAGE("nf_register_net_hook", 24),
STACK_USAGE("nf_register_net_hooks", 48),
STACK_USAGE("nf_unregister_net_hooks", 24),
STACK_USAGE("nf_hook_slow", 48),
STACK_USAGE("nf_hook_slow_list", 96),
STACK_USAGE("__nf_hook_entries_free", 0),
STACK_USAGE("nf_ct_attach", 24),
STACK_USAGE("nf_conntrack_destroy", 16),
STACK_USAGE("nf_ct_get_tuple_skb", 24),
STACK_USAGE("netfilter_net_init", 16),
STACK_USAGE("netfilter_net_exit", 0),
STACK_USAGE("netfilter_init", 8),
STACK_USAGE("accept_all", 0),
STACK_USAGE("ip_vs_app_inc_get", 8),
STACK_USAGE("ip_vs_app_inc_put", 0),
STACK_USAGE("register_ip_vs_app_inc", 40),
STACK_USAGE("register_ip_vs_app", 24),
STACK_USAGE("unregister_ip_vs_app", 72),
STACK_USAGE("ip_vs_bind_app", 0),
STACK_USAGE("ip_vs_unbind_app", 16),
STACK_USAGE("ip_vs_app_pkt_out", 64),
STACK_USAGE("ip_vs_app_pkt_in", 64),
STACK_USAGE("ip_vs_app_seq_start", 16),
STACK_USAGE("ip_vs_app_seq_next", 0),
STACK_USAGE("ip_vs_app_seq_stop", 0),
STACK_USAGE("ip_vs_app_seq_show", 16),
STACK_USAGE("ip_vs_app_net_init", 0),
STACK_USAGE("ip_vs_app_net_cleanup", 8),
STACK_USAGE("ip_vs_app_inc_rcu_free", 8),
STACK_USAGE("ip_vs_conn_seq_start", 24),
STACK_USAGE("ip_vs_conn_seq_next", 40),
STACK_USAGE("ip_vs_conn_seq_stop", 0),
STACK_USAGE("ip_vs_conn_seq_show", 392),
STACK_USAGE("ip_vs_conn_sync_seq_show", 104),
STACK_USAGE("__ip_vs_conn_get", 8),
STACK_USAGE("ip_vs_random_dropentry", 32),
STACK_USAGE("ip_vs_expire_nodest_conn_flush", 40),
STACK_USAGE("ip_vs_conn_hashkey_conn", 64),
STACK_USAGE("ip_vs_conn_net_init", 8),
STACK_USAGE("ip_vs_conn_net_cleanup", 40),
STACK_USAGE("ip_vs_conn_init", 8),
STACK_USAGE("ip_vs_conn_cleanup", 0),
STACK_USAGE("ip_vs_conn_hash", 32),
STACK_USAGE("cond_resched_rcu", 0),
STACK_USAGE("__ip_vs_conn_in_get", 24),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("ip_vs_conn_in_get", 72),
STACK_USAGE("ip_vs_conn_in_get_proto", 152),
STACK_USAGE("ip_vs_ct_in_get", 24),
STACK_USAGE("ip_vs_conn_out_get", 24),
STACK_USAGE("ip_vs_conn_out_get_proto", 104),
STACK_USAGE("ip_vs_conn_put", 8),
STACK_USAGE("ip_vs_conn_fill_cport", 32),
STACK_USAGE("ip_vs_try_bind_dest", 32),
STACK_USAGE("rcu_read_unlock", 0),
STACK_USAGE("ip_vs_check_template", 32),
STACK_USAGE("ip_vs_conn_rcu_free", 8),
STACK_USAGE("ip_vs_conn_expire", 40),
STACK_USAGE("ip_vs_conn_expire_now", 0),
STACK_USAGE("ip_vs_conn_new", 80),
STACK_USAGE("is_sctp_abort", 32),
STACK_USAGE("is_tcp_reset", 48),
STACK_USAGE("ip_vs_new_conn_out", 160),
STACK_USAGE("ip_vs_init_hash_table", 0),
STACK_USAGE("__ip_vs_rs_conn_out", 64),
STACK_USAGE("ip_vs_in_stats", 32),
STACK_USAGE("ip_vs_fill_iph_skb", 56),
STACK_USAGE("handle_response", 48),
STACK_USAGE("ip_vs_out_hook", 144),
STACK_USAGE("ipvs_udp_decap", 80),
STACK_USAGE("ipvs_gre_decap", 56),
STACK_USAGE("ip_vs_in_icmp", 240),
STACK_USAGE("ip_vs_out_stats", 32),
STACK_USAGE("local_bh_disable", 0),
STACK_USAGE("ip_vs_in_hook", 160),
STACK_USAGE("dst_mtu", 0),
STACK_USAGE("ip_vs_forward_icmp", 16),
STACK_USAGE("ip_vs_register_hooks", 8),
STACK_USAGE("ip_vs_unregister_hooks", 8),
STACK_USAGE("__ip_vs_init", 24),
STACK_USAGE("__ip_vs_cleanup_batch", 24),
STACK_USAGE("__ip_vs_dev_cleanup_batch", 24),
STACK_USAGE("ip_vs_init", 8),
STACK_USAGE("ip_vs_cleanup", 0),
STACK_USAGE("pskb_pull", 16),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("local_bh_enable", 0),
STACK_USAGE("skb_header_pointer", 8),
STACK_USAGE("ip_vs_schedule", 192),
STACK_USAGE("frag_safe_skb_hp", 8),
STACK_USAGE("ip_vs_leave", 144),
STACK_USAGE("ip_vs_checksum_complete", 0),
STACK_USAGE("ip_vs_gather_frags", 24),
STACK_USAGE("ip_vs_nat_icmp", 48),
STACK_USAGE("ip_vs_proto_name", 8),
STACK_USAGE("ip_vs_out_icmp", 184),
STACK_USAGE("ip_vs_add_dest", 64),
STACK_USAGE("ip_vs_edit_dest", 40),
STACK_USAGE("__ip_vs_del_dest", 40),
STACK_USAGE("ip_vs_del_dest", 32),
STACK_USAGE("ip_vs_dest_trash_expire", 56),
STACK_USAGE("ip_vs_add_service", 64),
STACK_USAGE("ip_vs_edit_service", 48),
STACK_USAGE("nla_put_string", 24),
STACK_USAGE("ip_vs_unlink_service", 48),
STACK_USAGE("ip_vs_flush", 32),
STACK_USAGE("ip_vs_service_nets_cleanup", 40),
STACK_USAGE("ip_vs_dst_event", 56),
STACK_USAGE("ip_vs_zero_service", 40),
STACK_USAGE("ip_vs_zero_all", 24),
STACK_USAGE("proc_do_defense_mode", 112),
STACK_USAGE("proc_do_sync_threshold", 96),
STACK_USAGE("proc_do_sync_ports", 96),
STACK_USAGE("local_bh_disable", 0),
STACK_USAGE("ip_vs_info_seq_start", 16),
STACK_USAGE("ip_vs_info_seq_next", 16),
STACK_USAGE("ip_vs_info_seq_stop", 0),
STACK_USAGE("ip_vs_info_seq_show", 48),
STACK_USAGE("expire_nodest_conn_handler", 0),
STACK_USAGE("ip_vs_stats_show", 120),
STACK_USAGE("ip_vs_stats_percpu_show", 120),
STACK_USAGE("defense_work_handler", 16),
STACK_USAGE("ip_vs_set_timeout", 24),
STACK_USAGE("do_ip_vs_set_ctl", 280),
STACK_USAGE("ip_vs_use_count_inc", 0),
STACK_USAGE("ip_vs_use_count_dec", 0),
STACK_USAGE("ip_vs_copy_service", 120),
STACK_USAGE("__ip_vs_get_service_entries", 168),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("__ip_vs_get_dest_entries", 248),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("__ip_vs_get_timeouts", 16),
STACK_USAGE("do_ip_vs_get_ctl", 232),
STACK_USAGE("ip_vs_genl_fill_stats", 48),
STACK_USAGE("ip_vs_genl_fill_stats64", 48),
STACK_USAGE("ip_vs_genl_fill_service", 144),
STACK_USAGE("ip_vs_genl_dump_services", 88),
STACK_USAGE("local_bh_enable", 0),
STACK_USAGE("ip_vs_genl_parse_service", 200),
STACK_USAGE("ip_vs_genl_dump_dests", 264),
STACK_USAGE("ip_vs_genl_dump_daemon", 64),
STACK_USAGE("ip_vs_genl_dump_daemons", 32),
STACK_USAGE("ip_vs_genl_set_daemon", 168),
STACK_USAGE("ip_vs_genl_set_cmd", 312),
STACK_USAGE("__ip_vs_service_find", 0),
STACK_USAGE("ip_vs_genl_get_cmd", 128),
STACK_USAGE("__ip_vs_svc_fwm_find", 0),
STACK_USAGE("ip_vs_control_net_init", 32),
STACK_USAGE("ip_vs_service_find", 8),
STACK_USAGE("ip_vs_control_net_cleanup", 40),
STACK_USAGE("ip_vs_register_nl_ioctl", 16),
STACK_USAGE("ip_vs_unregister_nl_ioctl", 0),
STACK_USAGE("ip_vs_control_init", 0),
STACK_USAGE("ip_vs_control_cleanup", 0),
STACK_USAGE("ip_vs_service_rcu_free", 8),
STACK_USAGE("ip_vs_has_real_service", 0),
STACK_USAGE("ip_vs_find_real_service", 0),
STACK_USAGE("ip_vs_find_tunnel", 0),
STACK_USAGE("ip_vs_find_dest", 32),
STACK_USAGE("ip_vs_dest_dst_rcu_free", 8),
STACK_USAGE("rcu_read_unlock", 0),
STACK_USAGE("ip_vs_dest_free", 16),
STACK_USAGE("ip_vs_copy_stats", 24),
STACK_USAGE("__ip_vs_update_dest", 56),
STACK_USAGE("update_defense_level", 152),
STACK_USAGE("ip_vs_start_estimator", 32),
STACK_USAGE("ip_vs_stop_estimator", 16),
STACK_USAGE("ip_vs_zero_estimator", 0),
STACK_USAGE("ip_vs_read_estimator", 0),
STACK_USAGE("ip_vs_estimator_net_init", 8),
STACK_USAGE("ip_vs_estimator_net_cleanup", 0),
STACK_USAGE("estimation_timer", 96),
STACK_USAGE("ip_vs_confirm_conntrack", 8),
STACK_USAGE("ip_vs_nfct_expect_callback", 120),
STACK_USAGE("ip_vs_nfct_expect_related", 64),
STACK_USAGE("ip_vs_conn_drop_conntrack", 56),
STACK_USAGE("ip_vs_update_conntrack", 72),
STACK_USAGE("__ip_vs_pe_getbyname", 24),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("ip_vs_pe_getbyname", 8),
STACK_USAGE("register_ip_vs_pe", 24),
STACK_USAGE("unregister_ip_vs_pe", 8),
STACK_USAGE("ip_vs_proto_get", 0),
STACK_USAGE("ip_vs_proto_data_get", 0),
STACK_USAGE("ip_vs_protocol_timeout_change", 32),
STACK_USAGE("ip_vs_create_timeout_table", 0),
STACK_USAGE("ip_vs_state_name", 0),
STACK_USAGE("ip_vs_tcpudp_debug_packet", 200),
STACK_USAGE("ip_vs_protocol_net_init", 40),
STACK_USAGE("ip_vs_protocol_net_cleanup", 24),
STACK_USAGE("ip_vs_protocol_init", 104),
STACK_USAGE("ip_vs_protocol_cleanup", 8),
STACK_USAGE("register_ip_vs_protocol", 0),
STACK_USAGE("tcp_snat_handler", 80),
STACK_USAGE("tcp_dnat_handler", 80),
STACK_USAGE("tcp_csum_check", 32),
STACK_USAGE("tcp_conn_schedule", 112),
STACK_USAGE("skb_header_pointer", 8),
STACK_USAGE("tcp_state_name", 0),
STACK_USAGE("tcp_timeout_change", 0),
STACK_USAGE("tcp_state_transition", 72),
STACK_USAGE("tcp_register_app", 24),
STACK_USAGE("tcp_unregister_app", 8),
STACK_USAGE("tcp_app_conn_bind", 24),
STACK_USAGE("ip_vs_tcp_conn_listen", 24),
STACK_USAGE("__ip_vs_tcp_init", 8),
STACK_USAGE("__ip_vs_tcp_exit", 0),
STACK_USAGE("udp_snat_handler", 80),
STACK_USAGE("udp_dnat_handler", 80),
STACK_USAGE("udp_csum_check", 64),
STACK_USAGE("udp_conn_schedule", 88),
STACK_USAGE("udp_register_app", 24),
STACK_USAGE("udp_unregister_app", 8),
STACK_USAGE("skb_header_pointer", 8),
STACK_USAGE("udp_app_conn_bind", 24),
STACK_USAGE("udp_state_name", 0),
STACK_USAGE("udp_state_transition", 0),
STACK_USAGE("__udp_init", 8),
STACK_USAGE("__udp_exit", 0),
STACK_USAGE("ip_vs_rr_init", 0),
STACK_USAGE("ip_vs_rr_cleanup", 0),
STACK_USAGE("ip_vs_rr_init_svc", 0),
STACK_USAGE("ip_vs_rr_del_dest", 24),
STACK_USAGE("ip_vs_rr_schedule", 24),
STACK_USAGE("ip_vs_scheduler_get", 24),
STACK_USAGE("ip_vs_scheduler_put", 0),
STACK_USAGE("ip_vs_scheduler_err", 32),
STACK_USAGE("register_ip_vs_scheduler", 24),
STACK_USAGE("unregister_ip_vs_scheduler", 16),
STACK_USAGE("ip_vs_bind_scheduler", 24),
STACK_USAGE("ip_vs_unbind_scheduler", 0),
STACK_USAGE("master_wakeup_work_handler", 24),
STACK_USAGE("sync_thread_master", 184),
STACK_USAGE("sync_thread_backup", 328),
STACK_USAGE("start_sync_thread", 192),
STACK_USAGE("stop_sync_thread", 56),
STACK_USAGE("ip_vs_sync_net_init", 8),
STACK_USAGE("ip_vs_sync_net_cleanup", 8),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("sb_dequeue", 24),
STACK_USAGE("sb_queue_tail", 32),
STACK_USAGE("get_curr_sync_buff", 32),
STACK_USAGE("ip_vs_sync_conn_needed", 16),
STACK_USAGE("ip_vs_sync_conn", 80),
STACK_USAGE("ip_vs_proc_conn", 80),
STACK_USAGE("ipvs_gre_encap", 48),
STACK_USAGE("ip_vs_tunnel_xmit", 112),
STACK_USAGE("skb_dst", 8),
STACK_USAGE("do_output_route4", 128),
STACK_USAGE("ip_vs_dr_xmit", 24),
STACK_USAGE("ip_vs_icmp_xmit", 56),
STACK_USAGE("dst_mtu", 0),
STACK_USAGE("maybe_update_pmtu", 24),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("NF_HOOK", 96),
STACK_USAGE("__ip_vs_get_out_rt", 144),
STACK_USAGE("skb_header_pointer", 8),
STACK_USAGE("dst_output", 24),
STACK_USAGE("ip_vs_nat_send_or_cont", 24),
STACK_USAGE("ip_vs_send_or_cont", 24),
STACK_USAGE("ip_vs_null_xmit", 8),
STACK_USAGE("ip_vs_bypass_xmit", 32),
STACK_USAGE("__ip_vs_dst_set", 24),
STACK_USAGE("ip_vs_nat_xmit", 72),
STACK_USAGE("nf_conntrack_acct_pernet_init", 0),
STACK_USAGE("nf_conntrack_lock", 8),
STACK_USAGE("nf_ct_resolve_clash", 48),
STACK_USAGE("__nf_conntrack_confirm", 80),
STACK_USAGE("nf_conntrack_double_unlock", 16),
STACK_USAGE("nf_conntrack_tuple_taken", 136),
STACK_USAGE("nf_conntrack_double_lock", 48),
STACK_USAGE("early_drop", 88),
STACK_USAGE("gc_worker", 104),
STACK_USAGE("__nf_conntrack_alloc", 48),
STACK_USAGE("nf_conntrack_alloc", 0),
STACK_USAGE("nf_conntrack_free", 24),
STACK_USAGE("init_conntrack", 96),
STACK_USAGE("nf_ct_put", 0),
STACK_USAGE("nf_conntrack_handle_icmp", 16),
STACK_USAGE("local_bh_disable", 0),
STACK_USAGE("nf_conntrack_in", 176),
STACK_USAGE("nf_conntrack_alter_reply", 8),
STACK_USAGE("__nf_ct_refresh_acct", 0),
STACK_USAGE("nf_ct_kill_acct", 0),
STACK_USAGE("nf_ct_port_tuple_to_nlattr", 32),
STACK_USAGE("nf_ct_port_nlattr_to_tuple", 0),
STACK_USAGE("nf_ct_port_nlattr_tuple_size", 0),
STACK_USAGE("nf_conntrack_attach", 0),
STACK_USAGE("nf_conntrack_update", 104),
STACK_USAGE("nf_conntrack_get_tuple_skb", 88),
STACK_USAGE("nf_ct_iterate_cleanup", 56),
STACK_USAGE("iter_net_only", 0),
STACK_USAGE("__nf_ct_unconfirmed_destroy", 40),
STACK_USAGE("nf_ct_unconfirmed_destroy", 16),
STACK_USAGE("nf_ct_iterate_cleanup_net", 80),
STACK_USAGE("nf_ct_iterate_destroy", 40),
STACK_USAGE("hash_conntrack", 72),
STACK_USAGE("kill_all", 0),
STACK_USAGE("nf_conntrack_cleanup_start", 0),
STACK_USAGE("nf_conntrack_cleanup_end", 0),
STACK_USAGE("nf_conntrack_cleanup_net", 24),
STACK_USAGE("nf_conntrack_cleanup_net_list", 48),
STACK_USAGE("nf_ct_alloc_hashtable", 16),
STACK_USAGE("nf_conntrack_hash_resize", 136),
STACK_USAGE("nf_conntrack_set_hashsize", 16),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("nf_conntrack_init_start", 24),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("nf_ct_get_tuple", 120),
STACK_USAGE("nf_conntrack_init_end", 0),
STACK_USAGE("nf_conntrack_init_net", 48),
STACK_USAGE("local_bh_enable", 0),
STACK_USAGE("nf_conntrack_get_ht", 40),
STACK_USAGE("nf_ct_pernet", 16),
STACK_USAGE("get_l4proto", 72),
STACK_USAGE("nf_ct_get_tuplepr", 56),
STACK_USAGE("nf_ct_invert_tuple", 0),
STACK_USAGE("nf_ct_get_id", 40),
STACK_USAGE("nf_ct_add_to_dying_list", 32),
STACK_USAGE("nf_ct_tmpl_alloc", 8),
STACK_USAGE("nf_ct_tmpl_free", 8),
STACK_USAGE("nf_ct_destroy", 16),
STACK_USAGE("nf_ct_delete", 80),
STACK_USAGE("nf_ct_gc_expired", 16),
STACK_USAGE("__nf_conntrack_find_get", 88),
STACK_USAGE("nf_conntrack_find_get", 72),
STACK_USAGE("nf_conntrack_hash_check_insert", 72),
STACK_USAGE("nf_ct_acct_add", 0),
STACK_USAGE("__nf_ct_resolve_clash", 64),
STACK_USAGE("nf_ct_exp_equal", 0),
STACK_USAGE("nf_ct_remove_expect", 16),
STACK_USAGE("__nf_ct_expect_find", 32),
STACK_USAGE("nf_ct_expect_find_get", 32),
STACK_USAGE("nf_ct_find_expectation", 32),
STACK_USAGE("nf_ct_remove_expectations", 16),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("nf_ct_unexpect_related", 8),
STACK_USAGE("nf_ct_expect_alloc", 8),
STACK_USAGE("nf_ct_expect_init", 48),
STACK_USAGE("nf_ct_pernet", 16),
STACK_USAGE("nf_ct_expect_free_rcu", 0),
STACK_USAGE("nf_ct_expect_put", 0),
STACK_USAGE("nf_ct_unlink_expect_report", 32),
STACK_USAGE("nf_ct_expect_related_report", 72),
STACK_USAGE("nf_ct_expect_iterate_destroy", 40),
STACK_USAGE("nf_ct_expect_iterate_net", 48),
STACK_USAGE("ct_expect_get_next", 16),
STACK_USAGE("exp_seq_start", 32),
STACK_USAGE("exp_seq_next", 0),
STACK_USAGE("exp_seq_stop", 0),
STACK_USAGE("exp_seq_show", 24),
STACK_USAGE("nf_conntrack_expect_pernet_init", 32),
STACK_USAGE("nf_conntrack_expect_pernet_fini", 0),
STACK_USAGE("nf_conntrack_expect_init", 8),
STACK_USAGE("nf_ct_expectation_timed_out", 16),
STACK_USAGE("nf_conntrack_expect_fini", 0),
STACK_USAGE("nf_ct_expect_dst_hash", 48),
STACK_USAGE("nf_ct_ext_add", 48),
STACK_USAGE("try_rfc959", 40),
STACK_USAGE("try_rfc1123", 40),
STACK_USAGE("try_eprt", 88),
STACK_USAGE("try_epsv_response", 0),
STACK_USAGE("help", 192),
STACK_USAGE("nf_ct_ftp_from_nlattr", 0),
STACK_USAGE("nf_conntrack_ftp_fini", 0),
STACK_USAGE("nf_conntrack_ftp_init", 24),
STACK_USAGE("nf_conntrack_helper_put", 8),
STACK_USAGE("nf_nat_helper_try_module_get", 88),
STACK_USAGE("nf_nat_helper_put", 24),
STACK_USAGE("nf_ct_helper_ext_add", 0),
STACK_USAGE("__nf_ct_try_assign_helper", 40),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("unhelp", 0),
STACK_USAGE("nf_ct_helper_destroy", 16),
STACK_USAGE("nf_ct_helper_expectfn_register", 8),
STACK_USAGE("nf_ct_helper_expectfn_unregister", 8),
STACK_USAGE("nf_ct_helper_expectfn_find_by_name", 24),
STACK_USAGE("nf_ct_helper_expectfn_find_by_symbol", 0),
STACK_USAGE("nf_ct_pernet", 16),
STACK_USAGE("nf_ct_helper_log", 136),
STACK_USAGE("nf_conntrack_helper_register", 56),
STACK_USAGE("expect_iter_me", 16),
STACK_USAGE("nf_conntrack_helper_unregister", 8),
STACK_USAGE("nf_ct_helper_init", 48),
STACK_USAGE("nf_conntrack_helpers_register", 32),
STACK_USAGE("nf_conntrack_helpers_unregister", 16),
STACK_USAGE("nf_nat_helper_register", 8),
STACK_USAGE("nf_nat_helper_unregister", 8),
STACK_USAGE("nf_ct_set_auto_assign_helper_warned", 0),
STACK_USAGE("nf_conntrack_helper_pernet_init", 0),
STACK_USAGE("nf_conntrack_helper_init", 8),
STACK_USAGE("nf_conntrack_helper_fini", 0),
STACK_USAGE("__nf_conntrack_helper_find", 56),
STACK_USAGE("nf_conntrack_helper_try_module_get", 56),
STACK_USAGE("help", 160),
STACK_USAGE("nf_conntrack_irc_init", 16),
STACK_USAGE("nf_conntrack_irc_fini", 0),
STACK_USAGE("ctnetlink_start", 8),
STACK_USAGE("ctnetlink_filter_match_tuple", 0),
STACK_USAGE("ctnetlink_dump_tuples_ip", 40),
STACK_USAGE("ctnetlink_dump_table", 168),
STACK_USAGE("ctnetlink_dump_tuples", 56),
STACK_USAGE("ctnetlink_parse_tuple_filter", 200),
STACK_USAGE("ctnetlink_flush_iterate", 32),
STACK_USAGE("ctnetlink_del_conntrack", 104),
STACK_USAGE("ctnetlink_get_conntrack", 104),
STACK_USAGE("ctnetlink_done_list", 0),
STACK_USAGE("ctnetlink_dump_list", 96),
STACK_USAGE("nf_ct_put", 0),
STACK_USAGE("ctnetlink_dump_dying", 0),
STACK_USAGE("ctnetlink_get_ct_dying", 56),
STACK_USAGE("ctnetlink_dump_unconfirmed", 0),
STACK_USAGE("ctnetlink_get_ct_unconfirmed", 56),
STACK_USAGE("ctnetlink_parse_nat_setup", 32),
STACK_USAGE("ctnetlink_change_status", 0),
STACK_USAGE("local_bh_disable", 0),
STACK_USAGE("ctnetlink_change_protoinfo", 72),
STACK_USAGE("ctnetlink_change_seq_adj", 88),
STACK_USAGE("ctnetlink_change_synproxy", 56),
STACK_USAGE("ctnetlink_create_conntrack", 136),
STACK_USAGE("ctnetlink_new_conntrack", 184),
STACK_USAGE("dump_counters", 56),
STACK_USAGE("ctnetlink_ct_stat_cpu_dump", 80),
STACK_USAGE("ctnetlink_stat_ct_cpu", 56),
STACK_USAGE("ctnetlink_stat_ct", 64),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("nf_expect_get_id", 40),
STACK_USAGE("ctnetlink_exp_fill_info", 168),
STACK_USAGE("ctnetlink_exp_done", 0),
STACK_USAGE("ctnetlink_exp_dump_table", 56),
STACK_USAGE("local_bh_enable", 0),
STACK_USAGE("ctnetlink_exp_ct_dump_table", 56),
STACK_USAGE("ctnetlink_get_expect", 152),
STACK_USAGE("expect_iter_name", 0),
STACK_USAGE("expect_iter_all", 0),
STACK_USAGE("ctnetlink_del_expect", 96),
STACK_USAGE("ctnetlink_new_expect", 312),
STACK_USAGE("ctnetlink_exp_stat_cpu_dump", 80),
STACK_USAGE("ctnetlink_stat_exp_cpu", 56),
STACK_USAGE("ctnetlink_net_init", 0),
STACK_USAGE("ctnetlink_net_pre_exit", 0),
STACK_USAGE("ctnetlink_init", 16),
STACK_USAGE("ctnetlink_exit", 0),
STACK_USAGE("dump_ct_seq_adj", 48),
STACK_USAGE("ctnetlink_dump_extinfo", 64),
STACK_USAGE("ctnetlink_fill_info", 80),
STACK_USAGE("rcu_read_unlock", 0),
STACK_USAGE("ctnetlink_done", 8),
STACK_USAGE("ctnetlink_alloc_filter", 88),
STACK_USAGE("nf_confirm", 40),
STACK_USAGE("ipv4_confirm", 8),
STACK_USAGE("ipv4_conntrack_in", 0),
STACK_USAGE("ipv4_conntrack_local", 0),
STACK_USAGE("getorigdst", 96),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("ipv6_getorigdst", 128),
STACK_USAGE("nf_ct_pernet", 16),
STACK_USAGE("ipv6_confirm", 48),
STACK_USAGE("ipv6_conntrack_in", 0),
STACK_USAGE("ipv6_conntrack_local", 0),
STACK_USAGE("nf_ct_tcp_fixup", 0),
STACK_USAGE("nf_ct_netns_do_get", 32),
STACK_USAGE("nf_l4proto_log_invalid", 104),
STACK_USAGE("nf_ct_netns_inet_get", 24),
STACK_USAGE("nf_ct_netns_get", 16),
STACK_USAGE("nf_ct_netns_put", 24),
STACK_USAGE("nf_ct_bridge_register", 8),
STACK_USAGE("nf_ct_bridge_unregister", 0),
STACK_USAGE("nf_conntrack_proto_init", 8),
STACK_USAGE("nf_conntrack_proto_fini", 0),
STACK_USAGE("nf_conntrack_proto_pernet_init", 8),
STACK_USAGE("nf_ct_l4proto_log_invalid", 104),
STACK_USAGE("nf_ct_l4proto_find", 0),
STACK_USAGE("dccp_new", 0),
STACK_USAGE("nf_conntrack_dccp_packet", 88),
STACK_USAGE("dccp_can_early_drop", 0),
STACK_USAGE("dccp_print_conntrack", 0),
STACK_USAGE("dccp_to_nlattr", 64),
STACK_USAGE("nlattr_to_dccp", 88),
STACK_USAGE("nf_conntrack_dccp_init_net", 0),
STACK_USAGE("nf_conntrack_generic_init_net", 0),
STACK_USAGE("nf_conntrack_inet_error", 136),
STACK_USAGE("nf_conntrack_icmpv4_error", 64),
STACK_USAGE("icmp_tuple_to_nlattr", 32),
STACK_USAGE("icmp_nlattr_to_tuple", 0),
STACK_USAGE("icmp_pkt_to_tuple", 32),
STACK_USAGE("icmp_nlattr_tuple_size", 0),
STACK_USAGE("nf_conntrack_icmp_init_net", 0),
STACK_USAGE("nf_conntrack_invert_icmp_tuple", 0),
STACK_USAGE("nf_conntrack_icmp_packet", 8),
STACK_USAGE("nf_conntrack_icmpv6_error", 72),
STACK_USAGE("icmpv6_tuple_to_nlattr", 32),
STACK_USAGE("icmpv6_nlattr_to_tuple", 0),
STACK_USAGE("icmpv6_nlattr_tuple_size", 0),
STACK_USAGE("nf_conntrack_icmpv6_init_net", 0),
STACK_USAGE("icmpv6_pkt_to_tuple", 32),
STACK_USAGE("nf_conntrack_invert_icmpv6_tuple", 0),
STACK_USAGE("nf_conntrack_icmpv6_packet", 8),
STACK_USAGE("sctp_print_conntrack", 0),
STACK_USAGE("sctp_new", 80),
STACK_USAGE("sctp_csum_update", 0),
STACK_USAGE("nf_conntrack_sctp_packet", 440),
STACK_USAGE("sctp_csum_combine", 8),
STACK_USAGE("sctp_can_early_drop", 0),
STACK_USAGE("sctp_to_nlattr", 56),
STACK_USAGE("nlattr_to_sctp", 72),
STACK_USAGE("nf_conntrack_sctp_init_net", 0),
STACK_USAGE("tcp_to_nlattr", 56),
STACK_USAGE("nlattr_to_tcp", 88),
STACK_USAGE("tcp_nlattr_tuple_size", 0),
STACK_USAGE("nf_conntrack_tcp_init_net", 0),
STACK_USAGE("tcp_print_conntrack", 0),
STACK_USAGE("tcp_options", 88),
STACK_USAGE("tcp_new", 16),
STACK_USAGE("tcp_can_early_drop", 0),
STACK_USAGE("nf_conntrack_tcp_packet", 296),
STACK_USAGE("nf_conntrack_udplite_packet", 72),
STACK_USAGE("nf_conntrack_udp_init_net", 0),
STACK_USAGE("nf_conntrack_udp_packet", 72),
STACK_USAGE("nf_ct_seqadj_init", 0),
STACK_USAGE("nf_ct_seq_adjust", 104),
STACK_USAGE("nf_ct_seq_offset", 0),
STACK_USAGE("nf_ct_seqadj_set", 40),
STACK_USAGE("nf_ct_tcp_seqadj_set", 0),
STACK_USAGE("word_len", 0),
STACK_USAGE("process_sdp", 392),
STACK_USAGE("callid_len", 24),
STACK_USAGE("process_invite_response", 16),
STACK_USAGE("process_update_response", 16),
STACK_USAGE("process_prack_response", 16),
STACK_USAGE("process_invite_request", 72),
STACK_USAGE("process_bye_request", 8),
STACK_USAGE("process_register_request", 144),
STACK_USAGE("media_len", 0),
STACK_USAGE("process_register_response", 136),
STACK_USAGE("process_sip_msg", 128),
STACK_USAGE("sip_help_tcp", 160),
STACK_USAGE("sip_help_udp", 64),
STACK_USAGE("nf_conntrack_sip_fini", 0),
STACK_USAGE("nf_conntrack_sip_init", 32),
STACK_USAGE("epaddr_len", 48),
STACK_USAGE("skp_epaddr_len", 0),
STACK_USAGE("ct_sip_parse_request", 96),
STACK_USAGE("sip_skip_whitespace", 0),
STACK_USAGE("ct_sip_header_search", 40),
STACK_USAGE("ct_sip_get_header", 128),
STACK_USAGE("ct_sip_parse_header_uri", 136),
STACK_USAGE("ct_sip_parse_address_param", 96),
STACK_USAGE("ct_sip_parse_numerical_param", 96),
STACK_USAGE("ct_sip_parse_transport", 56),
STACK_USAGE("sdp_addr_len", 40),
STACK_USAGE("ct_sip_get_sdp_header", 120),
STACK_USAGE("digits_len", 0),
STACK_USAGE("nf_conntrack_pernet_init", 32),
STACK_USAGE("nf_conntrack_pernet_exit", 24),
STACK_USAGE("nf_conntrack_standalone_init", 8),
STACK_USAGE("ct_get_next", 16),
STACK_USAGE("nf_conntrack_standalone_fini", 0),
STACK_USAGE("ct_seq_start", 48),
STACK_USAGE("ct_seq_next", 0),
STACK_USAGE("ct_seq_stop", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("ct_seq_show", 72),
STACK_USAGE("nf_ct_pernet", 16),
STACK_USAGE("print_tuple", 24),
STACK_USAGE("ct_cpu_seq_start", 0),
STACK_USAGE("ct_cpu_seq_next", 0),
STACK_USAGE("ct_cpu_seq_stop", 0),
STACK_USAGE("ct_cpu_seq_show", 72),
STACK_USAGE("nf_conntrack_count", 0),
STACK_USAGE("nf_conntrack_hash_sysctl", 8),
STACK_USAGE("nf_hooks_lwtunnel_sysctl_handler", 80),
STACK_USAGE("nf_log_unregister", 16),
STACK_USAGE("nf_log_bind_pf", 32),
STACK_USAGE("nf_log_unbind_pf", 16),
STACK_USAGE("nf_logger_find_get", 24),
STACK_USAGE("nf_logger_put", 8),
STACK_USAGE("local_bh_disable", 0),
STACK_USAGE("nf_log_packet", 296),
STACK_USAGE("nf_log_trace", 296),
STACK_USAGE("nf_log_buf_add", 104),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("nf_log_buf_open", 0),
STACK_USAGE("__find_logger", 32),
STACK_USAGE("nf_log_buf_close", 8),
STACK_USAGE("seq_start", 16),
STACK_USAGE("local_bh_enable", 0),
STACK_USAGE("seq_next", 0),
STACK_USAGE("seq_stop", 0),
STACK_USAGE("seq_show", 24),
STACK_USAGE("nf_log_proc_dostring", 184),
STACK_USAGE("nf_log_set", 24),
STACK_USAGE("nf_log_net_init", 32),
STACK_USAGE("nf_log_net_exit", 16),
STACK_USAGE("netfilter_log_init", 0),
STACK_USAGE("nf_log_unset", 24),
STACK_USAGE("nf_log_register", 24),
STACK_USAGE("nf_log_syslog_net_exit", 8),
STACK_USAGE("nf_log_syslog_init", 16),
STACK_USAGE("nf_log_dump_packet_common", 32),
STACK_USAGE("nf_log_syslog_exit", 0),
STACK_USAGE("nf_log_arp_packet", 56),
STACK_USAGE("nf_log_dump_sk_uid_gid", 32),
STACK_USAGE("nf_log_dump_tcp_header", 136),
STACK_USAGE("nf_log_dump_udp_header", 56),
STACK_USAGE("dump_ipv4_packet", 168),
STACK_USAGE("skb_header_pointer", 8),
STACK_USAGE("dump_ipv6_packet", 160),
STACK_USAGE("dump_arp_packet", 72),
STACK_USAGE("nf_log_ip_packet", 56),
STACK_USAGE("nf_log_ip6_packet", 72),
STACK_USAGE("nf_log_netdev_packet", 48),
STACK_USAGE("nf_log_syslog_net_init", 16),
STACK_USAGE("nf_nat_unregister_fn", 64),
STACK_USAGE("nf_nat_init", 8),
STACK_USAGE("nf_nat_cleanup", 16),
STACK_USAGE("__nf_nat_decode_session", 0),
STACK_USAGE("hash_by_src", 56),
STACK_USAGE("in_range", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("net_generic", 16),
STACK_USAGE("nf_ct_nat_ext_add", 0),
STACK_USAGE("nf_nat_setup_info", 208),
STACK_USAGE("nf_nat_alloc_null_binding", 72),
STACK_USAGE("nf_nat_packet", 0),
STACK_USAGE("nf_nat_inet_fn", 136),
STACK_USAGE("nf_nat_cleanup_conntrack", 16),
STACK_USAGE("nf_nat_proto_clean", 24),
STACK_USAGE("nfnetlink_parse_nat_setup", 152),
STACK_USAGE("nf_nat_register_fn", 72),
STACK_USAGE("nf_nat_ftp_fini", 0),
STACK_USAGE("nf_nat_ftp_init", 0),
STACK_USAGE("warn_set", 0),
STACK_USAGE("nf_nat_ftp", 152),
STACK_USAGE("nf_nat_mangle_udp_packet", 56),
STACK_USAGE("nf_nat_follow_master", 80),
STACK_USAGE("mangle_contents", 48),
STACK_USAGE("__nf_nat_mangle_tcp_packet", 80),
STACK_USAGE("nf_nat_irc_init", 0),
STACK_USAGE("warn_set", 0),
STACK_USAGE("help", 104),
STACK_USAGE("nf_nat_irc_fini", 0),
STACK_USAGE("device_cmp", 0),
STACK_USAGE("masq_device_event", 0),
STACK_USAGE("inet_cmp", 0),
STACK_USAGE("masq_inet_event", 24),
STACK_USAGE("nf_nat_masquerade_ipv6", 104),
STACK_USAGE("masq_inet6_event", 24),
STACK_USAGE("nf_nat_masquerade_ipv4", 96),
STACK_USAGE("nf_nat_masquerade_inet_register_notifiers", 16),
STACK_USAGE("nf_nat_masquerade_inet_unregister_notifiers", 0),
STACK_USAGE("iterate_cleanup_work", 8),
STACK_USAGE("nf_nat_masq_schedule", 56),
STACK_USAGE("nf_nat_ipv6_register_fn", 0),
STACK_USAGE("nf_nat_ipv6_unregister_fn", 0),
STACK_USAGE("l4proto_manip_pkt", 64),
STACK_USAGE("sctp_csum_update", 0),
STACK_USAGE("nf_nat_ipv4_manip_pkt", 56),
STACK_USAGE("__udp_manip_pkt", 48),
STACK_USAGE("sctp_csum_combine", 8),
STACK_USAGE("nf_nat_manip_pkt", 80),
STACK_USAGE("nf_nat_csum_recalc", 32),
STACK_USAGE("nf_nat_icmp_reply_translation", 104),
STACK_USAGE("nf_nat_ipv4_pre_routing", 24),
STACK_USAGE("nf_xfrm_me_harder", 136),
STACK_USAGE("nf_nat_ipv4_local_in", 32),
STACK_USAGE("nf_nat_ipv4_out", 16),
STACK_USAGE("nf_nat_ipv4_local_fn", 16),
STACK_USAGE("nf_nat_ipv4_register_fn", 0),
STACK_USAGE("nf_nat_ipv4_unregister_fn", 0),
STACK_USAGE("nf_nat_icmpv6_reply_translation", 160),
STACK_USAGE("nf_nat_ipv6_fn", 56),
STACK_USAGE("nf_nat_ipv6_in", 40),
STACK_USAGE("nf_nat_ipv6_out", 16),
STACK_USAGE("nf_nat_ipv6_local_fn", 16),
STACK_USAGE("nf_nat_sip", 232),
STACK_USAGE("nf_nat_sip_seq_adjust", 0),
STACK_USAGE("nf_nat_sip_expected", 88),
STACK_USAGE("mangle_packet", 48),
STACK_USAGE("nf_nat_sip_expect", 168),
STACK_USAGE("mangle_content_len", 104),
STACK_USAGE("mangle_sdp_packet", 72),
STACK_USAGE("nf_nat_sdp_addr", 136),
STACK_USAGE("nf_nat_sdp_port", 80),
STACK_USAGE("nf_nat_sdp_session", 152),
STACK_USAGE("nf_nat_sdp_media", 64),
STACK_USAGE("nf_nat_sip_fini", 0),
STACK_USAGE("nf_nat_sip_init", 0),
STACK_USAGE("map_addr", 168),
STACK_USAGE("nf_queue_nf_hook_drop", 16),
STACK_USAGE("local_bh_disable", 0),
STACK_USAGE("nf_queue", 56),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("nf_reinject", 56),
STACK_USAGE("local_bh_enable", 0),
STACK_USAGE("nf_register_queue_handler", 0),
STACK_USAGE("nf_unregister_queue_handler", 0),
STACK_USAGE("nf_queue_entry_free", 8),
STACK_USAGE("nf_queue_entry_get_refs", 16),
STACK_USAGE("nf_getsockopt", 56),
STACK_USAGE("nf_register_sockopt", 16),
STACK_USAGE("nf_unregister_sockopt", 8),
STACK_USAGE("nf_setsockopt", 64),
STACK_USAGE("synproxy_recv_client_ack_ipv6", 72),
STACK_USAGE("ipv6_synproxy_hook", 120),
STACK_USAGE("nf_synproxy_ipv6_init", 8),
STACK_USAGE("nf_synproxy_ipv6_fini", 0),
STACK_USAGE("synproxy_init_timestamp_cookie", 16),
STACK_USAGE("synproxy_tstamp_adjust", 48),
STACK_USAGE("synproxy_cpu_seq_start", 16),
STACK_USAGE("synproxy_cpu_seq_next", 8),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("synproxy_cpu_seq_stop", 0),
STACK_USAGE("synproxy_cpu_seq_show", 0),
STACK_USAGE("synproxy_parse_options", 88),
STACK_USAGE("synproxy_pernet", 16),
STACK_USAGE("synproxy_net_init", 32),
STACK_USAGE("synproxy_net_exit", 16),
STACK_USAGE("synproxy_core_init", 0),
STACK_USAGE("synproxy_core_exit", 0),
STACK_USAGE("synproxy_send_tcp", 56),
STACK_USAGE("synproxy_send_client_synack", 88),
STACK_USAGE("synproxy_send_server_ack", 72),
STACK_USAGE("synproxy_send_client_ack", 64),
STACK_USAGE("synproxy_recv_client_ack", 80),
STACK_USAGE("ipv4_synproxy_hook", 112),
STACK_USAGE("nf_synproxy_ipv4_init", 8),
STACK_USAGE("nf_synproxy_ipv4_fini", 0),
STACK_USAGE("synproxy_send_tcp_ipv6", 160),
STACK_USAGE("synproxy_send_client_synack_ipv6", 88),
STACK_USAGE("synproxy_send_server_ack_ipv6", 64),
STACK_USAGE("synproxy_send_client_ack_ipv6", 64),
STACK_USAGE("lockdep_nfnl_is_held", 0),
STACK_USAGE("nfnetlink_subsys_register", 16),
STACK_USAGE("nfnetlink_subsys_unregister", 8),
STACK_USAGE("nfnetlink_has_listeners", 8),
STACK_USAGE("nfnetlink_send", 40),
STACK_USAGE("nfnetlink_set_err", 24),
STACK_USAGE("nfnetlink_unicast", 16),
STACK_USAGE("nfnetlink_broadcast", 32),
STACK_USAGE("nfnetlink_rcv_msg", 488),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("nfnetlink_rcv", 536),
STACK_USAGE("nfnetlink_bind", 16),
STACK_USAGE("nfnetlink_net_init", 80),
STACK_USAGE("nfnetlink_net_exit_batch", 16),
STACK_USAGE("nfnetlink_init", 24),
STACK_USAGE("nfnetlink_exit", 0),
STACK_USAGE("nfnl_pernet", 16),
STACK_USAGE("nfnl_lock", 0),
STACK_USAGE("nfnl_unlock", 0),
STACK_USAGE("get_next", 24),
STACK_USAGE("seq_start", 32),
STACK_USAGE("seq_next", 0),
STACK_USAGE("seq_stop", 0),
STACK_USAGE("seq_show", 0),
STACK_USAGE("nfnl_log_net_init", 32),
STACK_USAGE("nfnl_log_net_exit", 16),
STACK_USAGE("nfnetlink_log_init", 8),
STACK_USAGE("nfnetlink_log_fini", 0),
STACK_USAGE("instance_lookup_get", 16),
STACK_USAGE("nfulnl_instance_free_rcu", 8),
STACK_USAGE("local_bh_disable", 0),
STACK_USAGE("__instance_destroy", 16),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("local_bh_enable", 0),
STACK_USAGE("__nfulnl_send", 16),
STACK_USAGE("nfulnl_timer", 24),
STACK_USAGE("nfulnl_put_bridge", 48),
STACK_USAGE("br_port_get_rcu", 8),
STACK_USAGE("nfulnl_log_packet", 184),
STACK_USAGE("nfulnl_rcv_nl_event", 32),
STACK_USAGE("nfulnl_recv_unsupp", 0),
STACK_USAGE("nfulnl_recv_config", 88),
STACK_USAGE("nfnl_log_pernet", 16),
STACK_USAGE("nfqnl_recv_verdict_batch", 72),
STACK_USAGE("instance_create", 40),
STACK_USAGE("nfqnl_recv_verdict", 136),
STACK_USAGE("nfqnl_recv_unsupp", 0),
STACK_USAGE("nfqnl_recv_config", 64),
STACK_USAGE("seq_start", 32),
STACK_USAGE("seq_next", 16),
STACK_USAGE("seq_stop", 0),
STACK_USAGE("seq_show", 8),
STACK_USAGE("nfnl_queue_net_init", 8),
STACK_USAGE("nfnl_queue_net_exit", 16),
STACK_USAGE("nfnetlink_queue_init", 8),
STACK_USAGE("nfnetlink_queue_fini", 0),
STACK_USAGE("instance_destroy_rcu", 48),
STACK_USAGE("instance_destroy", 16),
STACK_USAGE("nfqnl_reinject", 24),
STACK_USAGE("nfqnl_put_packet_info", 16),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("nfqnl_put_sk_uidgid", 48),
STACK_USAGE("__nfqnl_enqueue_packet", 192),
STACK_USAGE("nfqnl_enqueue_packet", 72),
STACK_USAGE("nfnl_queue_pernet", 16),
STACK_USAGE("nfqnl_rcv_dev_event", 64),
STACK_USAGE("nfqnl_nf_hook_drop", 64),
STACK_USAGE("nfqnl_rcv_nl_event", 40),
STACK_USAGE("nf_ip_checksum", 32),
STACK_USAGE("nf_checksum", 0),
STACK_USAGE("nf_checksum_partial", 64),
STACK_USAGE("nf_route", 0),
STACK_USAGE("nf_reroute", 24),
STACK_USAGE("nf_ip6_checksum", 72),
STACK_USAGE("xt_check_target", 184),
STACK_USAGE("xt_unregister_target", 16),
STACK_USAGE("xt_copy_counters", 96),
STACK_USAGE("xt_compat_target_offset", 0),
STACK_USAGE("xt_register_targets", 24),
STACK_USAGE("xt_compat_target_from_user", 120),
STACK_USAGE("xt_compat_target_to_user", 64),
STACK_USAGE("xt_alloc_table_info", 8),
STACK_USAGE("xt_free_table_info", 24),
STACK_USAGE("xt_find_table", 40),
STACK_USAGE("xt_find_table_lock", 48),
STACK_USAGE("xt_request_find_table_lock", 32),
STACK_USAGE("xt_table_unlock", 0),
STACK_USAGE("xt_compat_lock", 0),
STACK_USAGE("xt_compat_unlock", 0),
STACK_USAGE("xt_unregister_targets", 40),
STACK_USAGE("xt_counters_alloc", 0),
STACK_USAGE("xt_replace_table", 56),
STACK_USAGE("xt_register_match", 16),
STACK_USAGE("xt_register_table", 80),
STACK_USAGE("xt_unregister_table", 16),
STACK_USAGE("xt_table_seq_start", 24),
STACK_USAGE("xt_unregister_match", 16),
STACK_USAGE("xt_table_seq_next", 24),
STACK_USAGE("xt_table_seq_stop", 0),
STACK_USAGE("xt_table_seq_show", 0),
STACK_USAGE("xt_mttg_seq_next", 24),
STACK_USAGE("xt_register_matches", 24),
STACK_USAGE("xt_mttg_seq_stop", 0),
STACK_USAGE("xt_match_seq_start", 40),
STACK_USAGE("xt_match_seq_next", 0),
STACK_USAGE("xt_match_seq_show", 0),
STACK_USAGE("xt_target_seq_start", 40),
STACK_USAGE("xt_target_seq_next", 0),
STACK_USAGE("xt_target_seq_show", 0),
STACK_USAGE("xt_hook_ops_alloc", 40),
STACK_USAGE("xt_register_template", 48),
STACK_USAGE("xt_unregister_template", 32),
STACK_USAGE("xt_proto_init", 120),
STACK_USAGE("xt_unregister_matches", 40),
STACK_USAGE("xt_proto_fini", 72),
STACK_USAGE("local_bh_disable", 0),
STACK_USAGE("xt_percpu_counter_alloc", 24),
STACK_USAGE("xt_percpu_counter_free", 0),
STACK_USAGE("xt_net_init", 0),
STACK_USAGE("xt_net_exit", 0),
STACK_USAGE("xt_find_match", 56),
STACK_USAGE("xt_init", 24),
STACK_USAGE("xt_fini", 0),
STACK_USAGE("xt_request_find_match", 32),
STACK_USAGE("xt_find_target", 56),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("xt_request_find_target", 32),
STACK_USAGE("xt_obj_to_user", 48),
STACK_USAGE("xt_data_to_user", 40),
STACK_USAGE("local_bh_enable", 0),
STACK_USAGE("xt_match_to_user", 48),
STACK_USAGE("xt_target_to_user", 48),
STACK_USAGE("xt_find_revision", 88),
STACK_USAGE("net_generic", 16),
STACK_USAGE("textify_hooks", 56),
STACK_USAGE("xt_check_proc_name", 16),
STACK_USAGE("xt_check_match", 184),
STACK_USAGE("xt_check_table_hooks", 32),
STACK_USAGE("xt_compat_add_offset", 32),
STACK_USAGE("xt_compat_flush_offsets", 8),
STACK_USAGE("xt_compat_calc_jump", 0),
STACK_USAGE("xt_compat_init_offsets", 24),
STACK_USAGE("xt_compat_match_offset", 0),
STACK_USAGE("xt_compat_match_from_user", 120),
STACK_USAGE("xt_compat_match_to_user", 64),
STACK_USAGE("xt_compat_check_entry_offsets", 32),
STACK_USAGE("xt_register_target", 16),
STACK_USAGE("xt_check_entry_offsets", 32),
STACK_USAGE("xt_alloc_entry_offsets", 0),
STACK_USAGE("xt_find_jump_offset", 0),
STACK_USAGE("connsecmark_tg_destroy", 0),
STACK_USAGE("connsecmark_tg_init", 0),
STACK_USAGE("connsecmark_tg_exit", 0),
STACK_USAGE("connsecmark_tg", 0),
STACK_USAGE("connsecmark_tg_check", 24),
STACK_USAGE("xt_ct_tg_check", 56),
STACK_USAGE("xt_ct_tg_check_v0", 88),
STACK_USAGE("xt_ct_tg_check_v1", 0),
STACK_USAGE("xt_ct_tg_check_v2", 0),
STACK_USAGE("xt_ct_tg_destroy", 16),
STACK_USAGE("xt_ct_tg_destroy_v0", 80),
STACK_USAGE("xt_ct_tg_destroy_v1", 0),
STACK_USAGE("notrack_tg", 0),
STACK_USAGE("xt_ct_tg_init", 8),
STACK_USAGE("xt_ct_target_v0", 16),
STACK_USAGE("xt_ct_tg_exit", 0),
STACK_USAGE("xt_ct_target_v1", 16),
STACK_USAGE("xt_ct_set_helper", 24),
STACK_USAGE("log_tg_init", 0),
STACK_USAGE("log_tg_exit", 0),
STACK_USAGE("log_tg", 24),
STACK_USAGE("log_tg_check", 16),
STACK_USAGE("log_tg_destroy", 0),
STACK_USAGE("masquerade_tg_exit", 0),
STACK_USAGE("masquerade_tg_check", 0),
STACK_USAGE("masquerade_tg", 56),
STACK_USAGE("masquerade_tg_destroy", 0),
STACK_USAGE("masquerade_tg6", 0),
STACK_USAGE("masquerade_tg6_checkentry", 0),
STACK_USAGE("masquerade_tg_init", 8),
STACK_USAGE("nflog_tg", 24),
STACK_USAGE("nflog_tg_check", 8),
STACK_USAGE("nflog_tg_destroy", 0),
STACK_USAGE("nflog_tg_init", 0),
STACK_USAGE("nflog_tg_exit", 0),
STACK_USAGE("secmark_tg_destroy", 0),
STACK_USAGE("secmark_tg_check_v0", 288),
STACK_USAGE("secmark_tg_v0", 0),
STACK_USAGE("secmark_tg_check_v1", 0),
STACK_USAGE("secmark_tg_v1", 0),
STACK_USAGE("secmark_tg_init", 0),
STACK_USAGE("secmark_tg_exit", 0),
STACK_USAGE("secmark_tg_check", 32),
STACK_USAGE("skb_dst", 8),
STACK_USAGE("tcpmss_tg4", 8),
STACK_USAGE("dst_mtu", 0),
STACK_USAGE("tcpmss_tg6", 48),
STACK_USAGE("tcpmss_tg4_check", 24),
STACK_USAGE("tcpmss_tg6_check", 24),
STACK_USAGE("tcpmss_tg_init", 0),
STACK_USAGE("tcpmss_tg_exit", 0),
STACK_USAGE("tcpmss_reverse_mtu", 120),
STACK_USAGE("tcpmss_mangle_packet", 80),
STACK_USAGE("addrtype_mt_v0", 48),
STACK_USAGE("addrtype_mt_v1", 40),
STACK_USAGE("addrtype_mt_checkentry_v1", 16),
STACK_USAGE("addrtype_mt_init", 0),
STACK_USAGE("addrtype_mt_exit", 0),
STACK_USAGE("match_type6", 160),
STACK_USAGE("bpf_mt_destroy", 0),
STACK_USAGE("bpf_mt_destroy_v1", 0),
STACK_USAGE("bpf_mt_init", 0),
STACK_USAGE("bpf_mt_exit", 0),
STACK_USAGE("bpf_mt_check", 32),
STACK_USAGE("bpf_mt_check_v1", 48),
STACK_USAGE("bpf_mt", 32),
STACK_USAGE("bpf_mt_v1", 104),
STACK_USAGE("connmark_tg_check", 16),
STACK_USAGE("connmark_tg_destroy", 0),
STACK_USAGE("connmark_mt", 0),
STACK_USAGE("connmark_mt_check", 16),
STACK_USAGE("connmark_mt_destroy", 0),
STACK_USAGE("connmark_mt_init", 8),
STACK_USAGE("connmark_mt_exit", 0),
STACK_USAGE("connmark_tg_shift", 0),
STACK_USAGE("connmark_tg", 0),
STACK_USAGE("connmark_tg_v2", 0),
STACK_USAGE("conntrack_mt", 8),
STACK_USAGE("conntrack_mt_v1", 0),
STACK_USAGE("conntrack_mt_v2", 0),
STACK_USAGE("conntrack_mt_v3", 0),
STACK_USAGE("conntrack_mt_check", 16),
STACK_USAGE("conntrack_mt_destroy", 0),
STACK_USAGE("conntrack_mt_init", 0),
STACK_USAGE("conntrack_mt_exit", 0),
STACK_USAGE("ipvs_mt_check", 16),
STACK_USAGE("ipvs_mt_init", 0),
STACK_USAGE("ipvs_mt_exit", 0),
STACK_USAGE("ipvs_mt", 136),
STACK_USAGE("mark_tg", 0),
STACK_USAGE("mark_mt", 0),
STACK_USAGE("mark_mt_init", 8),
STACK_USAGE("mark_mt_exit", 0),
STACK_USAGE("xt_dnat_target_v1", 56),
STACK_USAGE("xt_snat_target_v2", 0),
STACK_USAGE("xt_dnat_target_v2", 0),
STACK_USAGE("xt_nat_checkentry_v0", 0),
STACK_USAGE("xt_nat_init", 0),
STACK_USAGE("xt_nat_exit", 0),
STACK_USAGE("xt_nat_checkentry", 0),
STACK_USAGE("xt_nat_destroy", 0),
STACK_USAGE("xt_snat_target_v0", 56),
STACK_USAGE("xt_dnat_target_v0", 56),
STACK_USAGE("xt_snat_target_v1", 56),
STACK_USAGE("policy_mt", 56),
STACK_USAGE("policy_mt_check", 16),
STACK_USAGE("policy_mt_init", 0),
STACK_USAGE("policy_mt_exit", 0),
STACK_USAGE("match_xfrm_state", 0),
STACK_USAGE("state_mt", 0),
STACK_USAGE("state_mt_check", 16),
STACK_USAGE("state_mt_destroy", 0),
STACK_USAGE("state_mt_init", 0),
STACK_USAGE("state_mt_exit", 0),
STACK_USAGE("statistic_mt", 16),
STACK_USAGE("statistic_mt_check", 8),
STACK_USAGE("statistic_mt_destroy", 0),
STACK_USAGE("statistic_mt_init", 0),
STACK_USAGE("statistic_mt_exit", 0),
STACK_USAGE("tcp_mt_check", 0),
STACK_USAGE("udp_mt", 40),
STACK_USAGE("udp_mt_check", 0),
STACK_USAGE("tcpudp_mt_init", 0),
STACK_USAGE("tcpudp_mt_exit", 0),
STACK_USAGE("tcp_find_option", 104),
STACK_USAGE("tcp_mt", 64),
STACK_USAGE("netlbl_af6list_search_exact", 0),
STACK_USAGE("netlbl_af4list_add", 0),
STACK_USAGE("netlbl_af6list_add", 16),
STACK_USAGE("netlbl_af4list_remove_entry", 0),
STACK_USAGE("netlbl_af4list_remove", 0),
STACK_USAGE("netlbl_af6list_remove_entry", 0),
STACK_USAGE("netlbl_af6list_remove", 0),
STACK_USAGE("netlbl_af4list_audit_addr", 40),
STACK_USAGE("netlbl_af6list_audit_addr", 32),
STACK_USAGE("netlbl_af4list_search", 0),
STACK_USAGE("netlbl_af4list_search_exact", 0),
STACK_USAGE("netlbl_af6list_search", 0),
STACK_USAGE("netlbl_calipso_list", 56),
STACK_USAGE("netlbl_calipso_listall_cb", 48),
STACK_USAGE("netlbl_calipso_listall", 56),
STACK_USAGE("netlbl_calipso_remove_cb", 0),
STACK_USAGE("netlbl_calipso_remove", 64),
STACK_USAGE("netlbl_calipso_genl_init", 0),
STACK_USAGE("netlbl_calipso_ops_register", 0),
STACK_USAGE("calipso_doi_add", 0),
STACK_USAGE("calipso_doi_free", 0),
STACK_USAGE("calipso_doi_remove", 0),
STACK_USAGE("calipso_doi_getdef", 0),
STACK_USAGE("calipso_doi_putdef", 0),
STACK_USAGE("calipso_doi_walk", 0),
STACK_USAGE("calipso_sock_getattr", 0),
STACK_USAGE("calipso_sock_setattr", 0),
STACK_USAGE("calipso_sock_delattr", 0),
STACK_USAGE("calipso_req_setattr", 0),
STACK_USAGE("calipso_req_delattr", 0),
STACK_USAGE("calipso_optptr", 0),
STACK_USAGE("calipso_getattr", 0),
STACK_USAGE("calipso_skbuff_setattr", 0),
STACK_USAGE("calipso_skbuff_delattr", 0),
STACK_USAGE("calipso_cache_invalidate", 0),
STACK_USAGE("calipso_cache_add", 0),
STACK_USAGE("netlbl_calipso_add", 48),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("netlbl_cipsov4_add", 80),
STACK_USAGE("netlbl_cipsov4_list", 104),
STACK_USAGE("netlbl_cipsov4_listall_cb", 48),
STACK_USAGE("netlbl_cipsov4_listall", 56),
STACK_USAGE("netlbl_cipsov4_remove_cb", 0),
STACK_USAGE("netlbl_cipsov4_remove", 64),
STACK_USAGE("netlbl_cipsov4_genl_init", 0),
STACK_USAGE("netlbl_domhsh_hash", 16),
STACK_USAGE("netlbl_domhsh_search", 40),
STACK_USAGE("netlbl_domhsh_search_def", 16),
STACK_USAGE("netlbl_domhsh_audit_add", 48),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("netlbl_domhsh_init", 24),
STACK_USAGE("netlbl_domhsh_add", 72),
STACK_USAGE("netlbl_domhsh_add_default", 0),
STACK_USAGE("netlbl_domhsh_remove_entry", 32),
STACK_USAGE("netlbl_domhsh_free_entry", 32),
STACK_USAGE("netlbl_domhsh_remove_af4", 48),
STACK_USAGE("netlbl_domhsh_remove_af6", 48),
STACK_USAGE("netlbl_domhsh_remove", 32),
STACK_USAGE("netlbl_domhsh_remove_default", 0),
STACK_USAGE("netlbl_domhsh_getentry", 0),
STACK_USAGE("netlbl_domhsh_getentry_af4", 8),
STACK_USAGE("netlbl_domhsh_getentry_af6", 8),
STACK_USAGE("netlbl_domhsh_walk", 88),
STACK_USAGE("netlbl_sock_delattr", 0),
STACK_USAGE("netlbl_sock_getattr", 0),
STACK_USAGE("netlbl_conn_setattr", 32),
STACK_USAGE("netlbl_req_setattr", 24),
STACK_USAGE("netlbl_req_delattr", 0),
STACK_USAGE("netlbl_skbuff_setattr", 24),
STACK_USAGE("netlbl_skbuff_getattr", 24),
STACK_USAGE("netlbl_skbuff_err", 24),
STACK_USAGE("netlbl_cache_invalidate", 0),
STACK_USAGE("netlbl_cache_add", 8),
STACK_USAGE("netlbl_audit_start", 0),
STACK_USAGE("netlbl_init", 0),
STACK_USAGE("netlbl_cfg_unlbl_static_add", 0),
STACK_USAGE("netlbl_cfg_unlbl_static_del", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("netlbl_cfg_cipsov4_add", 0),
STACK_USAGE("netlbl_cfg_cipsov4_del", 0),
STACK_USAGE("netlbl_cfg_cipsov4_map_add", 64),
STACK_USAGE("netlbl_cfg_calipso_add", 0),
STACK_USAGE("netlbl_cfg_calipso_del", 0),
STACK_USAGE("netlbl_cfg_calipso_map_add", 64),
STACK_USAGE("netlbl_cfg_map_del", 0),
STACK_USAGE("netlbl_catmap_walk", 0),
STACK_USAGE("netlbl_catmap_walkrng", 0),
STACK_USAGE("netlbl_catmap_getlong", 0),
STACK_USAGE("netlbl_catmap_setbit", 24),
STACK_USAGE("netlbl_catmap_setrng", 40),
STACK_USAGE("netlbl_catmap_setlong", 32),
STACK_USAGE("netlbl_bitmap_walk", 16),
STACK_USAGE("netlbl_bitmap_setbit", 0),
STACK_USAGE("netlbl_enabled", 0),
STACK_USAGE("netlbl_cfg_unlbl_map_add", 80),
STACK_USAGE("netlbl_sock_setattr", 40),
STACK_USAGE("__af6list_valid_rcu", 16),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("netlbl_mgmt_listentry", 80),
STACK_USAGE("netlbl_mgmt_add", 40),
STACK_USAGE("netlbl_mgmt_remove", 40),
STACK_USAGE("netlbl_mgmt_listall_cb", 24),
STACK_USAGE("netlbl_mgmt_listall", 56),
STACK_USAGE("netlbl_mgmt_adddef", 40),
STACK_USAGE("netlbl_mgmt_removedef", 32),
STACK_USAGE("netlbl_mgmt_listdef", 32),
STACK_USAGE("netlbl_mgmt_protocols_cb", 40),
STACK_USAGE("netlbl_mgmt_protocols", 16),
STACK_USAGE("netlbl_mgmt_version", 48),
STACK_USAGE("netlbl_mgmt_add_common", 80),
STACK_USAGE("netlbl_mgmt_genl_init", 0),
STACK_USAGE("netlbl_unlabel_staticremovedef", 40),
STACK_USAGE("netlbl_unlabel_staticlist_gen", 72),
STACK_USAGE("netlbl_unlabel_staticlist", 144),
STACK_USAGE("netlbl_unlabel_staticlistdef", 88),
STACK_USAGE("netlbl_unlabel_genl_init", 0),
STACK_USAGE("netlbl_unlabel_init", 24),
STACK_USAGE("netlbl_unlabel_getattr", 32),
STACK_USAGE("netlbl_unlhsh_free_iface", 32),
STACK_USAGE("netlbl_unlabel_defconf", 48),
STACK_USAGE("netlbl_unlhsh_search_iface", 24),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("netlbl_unlhsh_add", 96),
STACK_USAGE("netlbl_unlhsh_remove", 88),
STACK_USAGE("netlbl_unlhsh_netdev_handler", 8),
STACK_USAGE("netlbl_unlabel_accept", 56),
STACK_USAGE("netlbl_unlabel_list", 48),
STACK_USAGE("netlbl_unlabel_staticadd", 72),
STACK_USAGE("netlbl_unlabel_staticadddef", 64),
STACK_USAGE("netlbl_unlabel_staticremove", 40),
STACK_USAGE("netlbl_netlink_init", 0),
STACK_USAGE("netlbl_audit_start_common", 40),
STACK_USAGE("netlink_connect", 32),
STACK_USAGE("netlink_getname", 16),
STACK_USAGE("netlink_ioctl", 0),
STACK_USAGE("netlink_getsockbyfilp", 8),
STACK_USAGE("netlink_attachskb", 88),
STACK_USAGE("__netlink_sendskb", 24),
STACK_USAGE("netlink_sendskb", 24),
STACK_USAGE("netlink_detachskb", 8),
STACK_USAGE("netlink_trim", 32),
STACK_USAGE("netlink_unicast", 64),
STACK_USAGE("netlink_has_listeners", 32),
STACK_USAGE("netlink_strict_get_check", 0),
STACK_USAGE("netlink_broadcast", 104),
STACK_USAGE("do_trace_netlink_extack", 0),
STACK_USAGE("netlink_set_err", 56),
STACK_USAGE("netlink_update_socket_mc", 0),
STACK_USAGE("netlink_setsockopt", 48),
STACK_USAGE("netlink_getsockopt", 64),
STACK_USAGE("netlink_sendmsg", 120),
STACK_USAGE("local_bh_disable", 0),
STACK_USAGE("netlink_recvmsg", 120),
STACK_USAGE("netlink_add_tap", 32),
STACK_USAGE("netlink_data_ready", 0),
STACK_USAGE("__netlink_kernel_create", 72),
STACK_USAGE("netlink_kernel_release", 0),
STACK_USAGE("__netlink_change_ngroups", 48),
STACK_USAGE("netlink_change_ngroups", 16),
STACK_USAGE("__netlink_clear_multicast_users", 16),
STACK_USAGE("__nlmsg_put", 56),
STACK_USAGE("netlink_dump", 120),
STACK_USAGE("__netlink_dump_start", 40),
STACK_USAGE("netlink_remove_tap", 24),
STACK_USAGE("netlink_ack", 136),
STACK_USAGE("netlink_rcv_skb", 88),
STACK_USAGE("netlink_tap_init_net", 0),
STACK_USAGE("nlmsg_notify", 56),
STACK_USAGE("__netlink_seq_next", 32),
STACK_USAGE("netlink_seq_start", 32),
STACK_USAGE("netlink_seq_next", 0),
STACK_USAGE("refcount_inc", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("bpf_iter_netlink", 0),
STACK_USAGE("netlink_seq_show", 128),
STACK_USAGE("netlink_seq_stop", 64),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("netlink_register_notifier", 0),
STACK_USAGE("netlink_unregister_notifier", 0),
STACK_USAGE("netlink_net_init", 8),
STACK_USAGE("netlink_net_exit", 0),
STACK_USAGE("netlink_add_usersock_entry", 8),
STACK_USAGE("netlink_hash", 0),
STACK_USAGE("netlink_proto_init", 16),
STACK_USAGE("__netlink_deliver_tap", 72),
STACK_USAGE("local_bh_enable", 0),
STACK_USAGE("rht_lock", 16),
STACK_USAGE("netlink_deliver_tap", 16),
STACK_USAGE("rht_unlock", 8),
STACK_USAGE("netlink_skb_destructor", 8),
STACK_USAGE("rht_assign_unlock", 16),
STACK_USAGE("netlink_sock_destruct", 8),
STACK_USAGE("net_generic", 16),
STACK_USAGE("netlink_sock_destruct_work", 0),
STACK_USAGE("netlink_table_grab", 56),
STACK_USAGE("netlink_table_ungrab", 0),
STACK_USAGE("netlink_lock_table", 0),
STACK_USAGE("netlink_unlock_table", 0),
STACK_USAGE("netlink_compare", 0),
STACK_USAGE("__netlink_lookup", 64),
STACK_USAGE("netlink_lookup", 24),
STACK_USAGE("netlink_update_listeners", 16),
STACK_USAGE("netlink_insert", 136),
STACK_USAGE("__netlink_create", 32),
STACK_USAGE("netlink_create", 80),
STACK_USAGE("deferred_put_nlk_sk", 16),
STACK_USAGE("netlink_release", 96),
STACK_USAGE("netlink_autobind", 48),
STACK_USAGE("__netlink_ns_capable", 16),
STACK_USAGE("netlink_ns_capable", 16),
STACK_USAGE("netlink_capable", 8),
STACK_USAGE("netlink_net_capable", 16),
STACK_USAGE("netlink_allowed", 0),
STACK_USAGE("netlink_realloc_groups", 40),
STACK_USAGE("netlink_undo_bind", 40),
STACK_USAGE("netlink_bind", 72),
STACK_USAGE("__bpf_trace_netlink_extack", 0),
STACK_USAGE("__traceiter_netlink_extack", 16),
STACK_USAGE("perf_trace_netlink_extack", 80),
STACK_USAGE("trace_event_raw_event_netlink_extack", 88),
STACK_USAGE("trace_raw_output_netlink_extack", 24),
STACK_USAGE("ctrl_getfamily", 56),
STACK_USAGE("genl_ctrl_event", 72),
STACK_USAGE("ctrl_dumppolicy_start", 64),
STACK_USAGE("ctrl_dumppolicy", 96),
STACK_USAGE("ctrl_dumppolicy_done", 0),
STACK_USAGE("genl_bind", 48),
STACK_USAGE("genl_pernet_init", 72),
STACK_USAGE("genl_pernet_exit", 8),
STACK_USAGE("genl_init", 0),
STACK_USAGE("genlmsg_multicast_allns", 64),
STACK_USAGE("nla_put_string", 24),
STACK_USAGE("genl_notify", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("genl_lock", 0),
STACK_USAGE("genl_unlock", 0),
STACK_USAGE("genl_register_family", 88),
STACK_USAGE("genl_unregister_family", 80),
STACK_USAGE("genlmsg_put", 16),
STACK_USAGE("genl_family_rcv_msg_attrs_parse", 48),
STACK_USAGE("genl_start", 40),
STACK_USAGE("genl_lock_dumpit", 24),
STACK_USAGE("genl_lock_done", 16),
STACK_USAGE("genl_parallel_done", 16),
STACK_USAGE("genl_rcv_msg", 232),
STACK_USAGE("genl_rcv", 8),
STACK_USAGE("ctrl_fill_info", 112),
STACK_USAGE("ctrl_dumpfamily", 72),
STACK_USAGE("netlink_policy_dump_add_policy", 72),
STACK_USAGE("netlink_policy_dump_loop", 0),
STACK_USAGE("netlink_policy_dump_attr_size_estimate", 0),
STACK_USAGE("__netlink_policy_dump_write_attr", 88),
STACK_USAGE("netlink_policy_dump_write_attr", 0),
STACK_USAGE("netlink_policy_dump_write", 56),
STACK_USAGE("netlink_policy_dump_free", 0),
STACK_USAGE("netlink_policy_dump_get_policy_idx", 0),
STACK_USAGE("packet_increment_rx_head", 0),
STACK_USAGE("__packet_rcv_has_room", 0),
STACK_USAGE("packet_sock_destruct", 8),
STACK_USAGE("fanout_demux_rollover", 128),
STACK_USAGE("packet_rcv_fanout", 72),
STACK_USAGE("__fanout_link", 24),
STACK_USAGE("match_fanout_group", 0),
STACK_USAGE("__fanout_set_data_bpf", 32),
STACK_USAGE("fanout_set_data", 48),
STACK_USAGE("virtio_net_hdr_from_skb", 0),
STACK_USAGE("fanout_add", 56),
STACK_USAGE("skb_get", 8),
STACK_USAGE("packet_rcv_spkt", 32),
STACK_USAGE("packet_parse_headers", 32),
STACK_USAGE("packet_sendmsg_spkt", 136),
STACK_USAGE("run_filter", 32),
STACK_USAGE("packet_rcv", 72),
STACK_USAGE("tpacket_rcv", 152),
STACK_USAGE("skb_set_owner_r", 16),
STACK_USAGE("nf_hook_direct_egress", 104),
STACK_USAGE("tpacket_destruct_skb", 40),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("skb_setup_tx_timestamp", 40),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("packet_direct_xmit", 24),
STACK_USAGE("packet_cached_dev_get", 8),
STACK_USAGE("packet_sendmsg", 272),
STACK_USAGE("packet_release", 72),
STACK_USAGE("packet_do_bind", 48),
STACK_USAGE("packet_bind_spkt", 24),
STACK_USAGE("packet_bind", 0),
STACK_USAGE("packet_create", 48),
STACK_USAGE("__register_prot_hook", 24),
STACK_USAGE("packet_recvmsg", 96),
STACK_USAGE("packet_getname_spkt", 16),
STACK_USAGE("packet_getname", 24),
STACK_USAGE("packet_mc_add", 64),
STACK_USAGE("__unregister_prot_hook", 48),
STACK_USAGE("packet_mc_drop", 56),
STACK_USAGE("packet_setsockopt", 104),
STACK_USAGE("packet_getsockopt", 88),
STACK_USAGE("__packet_set_status", 0),
STACK_USAGE("skb_clear_delivery_time", 8),
STACK_USAGE("packet_notifier", 40),
STACK_USAGE("packet_ioctl", 40),
STACK_USAGE("packet_poll", 24),
STACK_USAGE("skb_csum_unnecessary", 0),
STACK_USAGE("packet_mm_open", 0),
STACK_USAGE("packet_mm_close", 0),
STACK_USAGE("free_pg_vec", 40),
STACK_USAGE("packet_set_ring", 240),
STACK_USAGE("packet_mmap", 88),
STACK_USAGE("tpacket_get_timestamp", 16),
STACK_USAGE("packet_seq_start", 16),
STACK_USAGE("packet_seq_next", 0),
STACK_USAGE("packet_seq_stop", 0),
STACK_USAGE("packet_seq_show", 72),
STACK_USAGE("packet_net_init", 8),
STACK_USAGE("virtio_net_hdr_to_skb", 80),
STACK_USAGE("packet_net_exit", 8),
STACK_USAGE("packet_exit", 0),
STACK_USAGE("packet_init", 8),
STACK_USAGE("copy_from_sockptr", 0),
STACK_USAGE("prb_retire_rx_blk_timer_expired", 72),
STACK_USAGE("rcu_read_unlock", 0),
STACK_USAGE("prb_dispatch_next_block", 40),
STACK_USAGE("prb_retire_current_block", 64),
STACK_USAGE("tcf_action_exec", 80),
STACK_USAGE("tcf_action_set_ctrlact", 0),
STACK_USAGE("tcf_action_destroy", 48),
STACK_USAGE("tcf_action_dump_old", 0),
STACK_USAGE("tcf_action_dump_1", 64),
STACK_USAGE("tcf_action_dump", 64),
STACK_USAGE("tcf_idr_insert_many", 32),
STACK_USAGE("tc_action_load_ops", 168),
STACK_USAGE("tcf_action_init_1", 200),
STACK_USAGE("tcf_action_init", 632),
STACK_USAGE("tcf_action_update_stats", 48),
STACK_USAGE("tcf_action_copy_stats", 128),
STACK_USAGE("tca_get_fill", 40),
STACK_USAGE("tcf_action_reoffload_cb", 376),
STACK_USAGE("tca_action_gd", 856),
STACK_USAGE("tc_ctl_action", 520),
STACK_USAGE("tc_dump_action", 504),
STACK_USAGE("tc_action_init", 0),
STACK_USAGE("tcf_action_offload_add_ex", 344),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("tcf_action_update_hw_stats", 104),
STACK_USAGE("tcf_dev_queue_xmit", 0),
STACK_USAGE("tcf_action_cleanup", 104),
STACK_USAGE("tcf_idr_release", 40),
STACK_USAGE("tcf_action_fill_size", 24),
STACK_USAGE("tcf_action_dump_terse", 56),
STACK_USAGE("tcf_free_cookie_rcu", 8),
STACK_USAGE("tcf_generic_walker", 120),
STACK_USAGE("tcf_idr_search", 32),
STACK_USAGE("tcf_action_check_ctrlact", 24),
STACK_USAGE("tcf_idr_create", 64),
STACK_USAGE("tcf_idr_create_from_flags", 0),
STACK_USAGE("tcf_idr_cleanup", 16),
STACK_USAGE("tcf_idr_check_alloc", 48),
STACK_USAGE("tcf_idrinfo_destroy", 56),
STACK_USAGE("tcf_pernet_del_id_list", 8),
STACK_USAGE("tcf_register_action", 40),
STACK_USAGE("tcf_unregister_action", 24),
STACK_USAGE("tcf_bpf_dump", 104),
STACK_USAGE("tcf_bpf_init_from_ops", 64),
STACK_USAGE("tcf_bpf_init_from_efd", 32),
STACK_USAGE("tcf_bpf_cfg_cleanup", 8),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("tcf_bpf_init", 264),
STACK_USAGE("tcf_bpf_act", 48),
STACK_USAGE("tcf_bpf_cleanup", 16),
STACK_USAGE("tcf_bpf_walker", 40),
STACK_USAGE("net_generic", 16),
STACK_USAGE("tcf_bpf_search", 16),
STACK_USAGE("bpf_init_net", 16),
STACK_USAGE("bpf_exit_net", 32),
STACK_USAGE("bpf_init_module", 0),
STACK_USAGE("bpf_cleanup_module", 0),
STACK_USAGE("tcf_get_next_proto", 16),
STACK_USAGE("__tcf_qdisc_find", 48),
STACK_USAGE("__tcf_block_find", 16),
STACK_USAGE("__tcf_block_put", 64),
STACK_USAGE("tcf_block_netif_keep_dst", 0),
STACK_USAGE("tcf_block_get_ext", 72),
STACK_USAGE("tcf_chain_head_change_dflt", 0),
STACK_USAGE("tcf_block_get", 40),
STACK_USAGE("tcf_block_put_ext", 24),
STACK_USAGE("tcf_block_put", 56),
STACK_USAGE("tcf_block_playback_offloads", 112),
STACK_USAGE("tcf_proto_lookup_ops", 40),
STACK_USAGE("tcf_block_unbind", 56),
STACK_USAGE("tcf_block_setup", 64),
STACK_USAGE("tcf_classify", 72),
STACK_USAGE("tcf_chain_tp_prev", 8),
STACK_USAGE("tcf_chain_tp_remove", 40),
STACK_USAGE("tcf_chain_tp_insert_unique", 72),
STACK_USAGE("tcf_chain_tp_delete_empty", 72),
STACK_USAGE("register_tcf_proto_ops", 32),
STACK_USAGE("tcf_chain_tp_find", 56),
STACK_USAGE("tcf_fill_node", 72),
STACK_USAGE("tfilter_notify", 96),
STACK_USAGE("tfilter_del_notify", 72),
STACK_USAGE("tfilter_notify_chain", 88),
STACK_USAGE("tc_new_tfilter", 344),
STACK_USAGE("unregister_tcf_proto_ops", 8),
STACK_USAGE("tc_del_tfilter", 296),
STACK_USAGE("tcf_queue_work", 16),
STACK_USAGE("tc_get_tfilter", 296),
STACK_USAGE("tcf_node_dump", 16),
STACK_USAGE("tcf_proto_is_unlocked", 8),
STACK_USAGE("tc_dump_tfilter", 360),
STACK_USAGE("tc_chain_fill_node", 80),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("tcf_proto_create", 56),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("tc_ctl_chain", 296),
STACK_USAGE("tc_dump_chain", 232),
STACK_USAGE("tcf_exts_destroy", 8),
STACK_USAGE("tcf_exts_validate_ex", 216),
STACK_USAGE("tcf_exts_validate", 0),
STACK_USAGE("tcf_exts_change", 8),
STACK_USAGE("tcf_proto_destroy", 24),
STACK_USAGE("tcf_exts_dump", 40),
STACK_USAGE("tcf_exts_terse_dump", 32),
STACK_USAGE("tcf_exts_dump_stats", 0),
STACK_USAGE("tcf_proto_put", 0),
STACK_USAGE("tc_setup_cb_call", 64),
STACK_USAGE("tc_setup_cb_add", 88),
STACK_USAGE("tc_setup_cb_replace", 88),
STACK_USAGE("tc_setup_cb_destroy", 96),
STACK_USAGE("tc_setup_cb_reoffload", 40),
STACK_USAGE("local_lock_release", 8),
STACK_USAGE("tc_cleanup_offload_action", 24),
STACK_USAGE("tc_setup_action", 88),
STACK_USAGE("tc_setup_offload_action", 0),
STACK_USAGE("tcf_exts_num_actions", 0),
STACK_USAGE("tcf_qevent_init", 8),
STACK_USAGE("tcf_qevent_destroy", 24),
STACK_USAGE("tcf_qevent_validate_change", 16),
STACK_USAGE("tcf_qevent_handle", 64),
STACK_USAGE("tcf_qevent_dump", 16),
STACK_USAGE("tcf_net_init", 8),
STACK_USAGE("tcf_net_exit", 0),
STACK_USAGE("tc_filter_init", 8),
STACK_USAGE("net_generic", 16),
STACK_USAGE("__tcf_chain_get", 56),
STACK_USAGE("tcf_chain_get_by_act", 0),
STACK_USAGE("__tcf_chain_put", 64),
STACK_USAGE("tc_skb_ext_tc_enable", 0),
STACK_USAGE("tcf_chain_put_by_act", 0),
STACK_USAGE("tcf_chain_flush", 48),
STACK_USAGE("tc_skb_ext_tc_disable", 0),
STACK_USAGE("tc_block_indr_cleanup", 168),
STACK_USAGE("tcf_block_offload_cmd", 112),
STACK_USAGE("tcf_proto_signal_destroying", 24),
STACK_USAGE("tcf_chain0_head_change_cb_del", 24),
STACK_USAGE("tcf_block_refcnt_get", 16),
STACK_USAGE("__tcf_get_next_chain", 32),
STACK_USAGE("tcf_get_next_chain", 16),
STACK_USAGE("__tcf_get_next_proto", 32),
STACK_USAGE("cls_bpf_offload_cmd", 128),
STACK_USAGE("tcf_unbind_filter", 0),
STACK_USAGE("tcf_exts_get_net", 24),
STACK_USAGE("cls_bpf_init", 16),
STACK_USAGE("cls_bpf_free_parms", 8),
STACK_USAGE("__cls_bpf_delete_prog", 8),
STACK_USAGE("cls_bpf_delete_prog_work", 8),
STACK_USAGE("__cls_bpf_delete", 112),
STACK_USAGE("cls_bpf_delete", 40),
STACK_USAGE("cls_bpf_destroy", 32),
STACK_USAGE("cls_bpf_get", 16),
STACK_USAGE("cls_bpf_change", 248),
STACK_USAGE("cls_bpf_dump", 128),
STACK_USAGE("cls_bpf_bind_class", 16),
STACK_USAGE("cls_bpf_walk", 32),
STACK_USAGE("cls_bpf_reoffload", 160),
STACK_USAGE("cls_bpf_init_mod", 0),
STACK_USAGE("cls_bpf_exit_mod", 0),
STACK_USAGE("cls_bpf_classify", 80),
STACK_USAGE("cls_cgroup_destroy", 24),
STACK_USAGE("cls_cgroup_delete", 0),
STACK_USAGE("cls_cgroup_walk", 16),
STACK_USAGE("cls_cgroup_dump", 40),
STACK_USAGE("init_cgroup_cls", 0),
STACK_USAGE("exit_cgroup_cls", 0),
STACK_USAGE("tcf_exts_get_net", 24),
STACK_USAGE("cls_cgroup_classify", 32),
STACK_USAGE("cls_cgroup_get", 0),
STACK_USAGE("cls_cgroup_init", 0),
STACK_USAGE("cls_cgroup_destroy_work", 8),
STACK_USAGE("cls_cgroup_change", 104),
STACK_USAGE("fl_set_geneve_opt", 120),
STACK_USAGE("rhashtable_remove_fast", 80),
STACK_USAGE("fl_set_vxlan_opt", 88),
STACK_USAGE("fl_set_erspan_opt", 120),
STACK_USAGE("fl_set_gtp_opt", 88),
STACK_USAGE("fl_set_key", 120),
STACK_USAGE("tcf_bind_filter", 32),
STACK_USAGE("fl_init_dissector", 504),
STACK_USAGE("local_bh_disable", 0),
STACK_USAGE("tcf_unbind_filter", 0),
STACK_USAGE("fl_check_assign_mask", 96),
STACK_USAGE("fl_ht_insert_unique", 72),
STACK_USAGE("fl_change", 128),
STACK_USAGE("fl_delete", 48),
STACK_USAGE("fl_walk", 64),
STACK_USAGE("fl_reoffload", 208),
STACK_USAGE("fl_hw_add", 24),
STACK_USAGE("fl_hw_del", 16),
STACK_USAGE("fl_tmplt_create", 152),
STACK_USAGE("fl_tmplt_destroy", 112),
STACK_USAGE("fl_dump_key_val", 56),
STACK_USAGE("fl_dump_key_port_range", 24),
STACK_USAGE("__fl_lookup", 96),
STACK_USAGE("refcount_inc", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("fl_dump_key_ip", 48),
STACK_USAGE("fl_dump_key_vlan", 64),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("fl_dump_key_flags", 48),
STACK_USAGE("fl_mask_lookup", 544),
STACK_USAGE("fl_dump_key_ct", 32),
STACK_USAGE("fl_dump_key_options", 72),
STACK_USAGE("fl_dump_key_enc_opt", 16),
STACK_USAGE("fl_dump_key", 88),
STACK_USAGE("fl_classify", 592),
STACK_USAGE("fl_dump", 80),
STACK_USAGE("local_bh_enable", 0),
STACK_USAGE("fl_terse_dump", 80),
STACK_USAGE("rht_lock", 16),
STACK_USAGE("fl_tmplt_dump", 40),
STACK_USAGE("fl_bind_class", 16),
STACK_USAGE("fl_delete_empty", 24),
STACK_USAGE("cls_fl_init", 0),
STACK_USAGE("cls_fl_exit", 0),
STACK_USAGE("rht_unlock", 8),
STACK_USAGE("fl_init", 16),
STACK_USAGE("fl_mask_free_work", 8),
STACK_USAGE("fl_uninit_mask_free_work", 0),
STACK_USAGE("fl_mask_put", 24),
STACK_USAGE("rht_assign_unlock", 16),
STACK_USAGE("fl_destroy_filter_work", 8),
STACK_USAGE("fl_hw_destroy_filter", 104),
STACK_USAGE("fl_hw_replace_filter", 280),
STACK_USAGE("fl_hw_update_stats", 176),
STACK_USAGE("__fl_put", 24),
STACK_USAGE("__fl_delete", 168),
STACK_USAGE("fl_destroy_sleepable", 8),
STACK_USAGE("fl_destroy", 88),
STACK_USAGE("fl_put", 0),
STACK_USAGE("fl_get", 16),
STACK_USAGE("__rhashtable_insert_fast", 112),
STACK_USAGE("fl_set_key_mpls_opts", 104),
STACK_USAGE("tcf_em_register", 8),
STACK_USAGE("tcf_em_unregister", 8),
STACK_USAGE("tcf_em_tree_validate", 168),
STACK_USAGE("tcf_em_tree_destroy", 32),
STACK_USAGE("tcf_em_tree_dump", 96),
STACK_USAGE("__tcf_em_tree_match", 216),
STACK_USAGE("qdisc_graft", 120),
STACK_USAGE("qdisc_create", 104),
STACK_USAGE("trace_qdisc_create", 0),
STACK_USAGE("register_qdisc", 24),
STACK_USAGE("qdisc_change", 32),
STACK_USAGE("qdisc_refcount_inc", 0),
STACK_USAGE("check_loop", 48),
STACK_USAGE("check_loop_fn", 56),
STACK_USAGE("tc_get_qdisc", 216),
STACK_USAGE("tc_modify_qdisc", 248),
STACK_USAGE("tc_dump_qdisc_root", 64),
STACK_USAGE("tc_dump_qdisc", 216),
STACK_USAGE("unregister_qdisc", 8),
STACK_USAGE("tc_fill_tclass", 168),
STACK_USAGE("tclass_notify", 48),
STACK_USAGE("tclass_del_notify", 64),
STACK_USAGE("tcf_node_bind", 40),
STACK_USAGE("tc_bind_class_walker", 112),
STACK_USAGE("qdisc_get_default", 16),
STACK_USAGE("tc_ctl_tclass", 264),
STACK_USAGE("qdisc_class_dump", 0),
STACK_USAGE("tc_dump_tclass_root", 136),
STACK_USAGE("qdisc_set_default", 24),
STACK_USAGE("tc_dump_tclass", 104),
STACK_USAGE("psched_show", 0),
STACK_USAGE("psched_net_init", 8),
STACK_USAGE("psched_net_exit", 0),
STACK_USAGE("pktsched_init", 8),
STACK_USAGE("sch_default_qdisc", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("qdisc_hash_add", 16),
STACK_USAGE("qdisc_hash_del", 8),
STACK_USAGE("qdisc_lookup", 16),
STACK_USAGE("qdisc_lookup_rcu", 24),
STACK_USAGE("__detect_linklayer", 0),
STACK_USAGE("qdisc_get_rtab", 40),
STACK_USAGE("qdisc_put_rtab", 0),
STACK_USAGE("qdisc_get_stab", 104),
STACK_USAGE("qdisc_put_stab", 0),
STACK_USAGE("__qdisc_calculate_pkt_len", 0),
STACK_USAGE("qdisc_warn_nonwc", 8),
STACK_USAGE("qdisc_watchdog", 8),
STACK_USAGE("qdisc_watchdog_init_clockid", 16),
STACK_USAGE("qdisc_watchdog_init", 16),
STACK_USAGE("qdisc_watchdog_schedule_range_ns", 0),
STACK_USAGE("qdisc_watchdog_cancel", 0),
STACK_USAGE("qdisc_class_hash_grow", 64),
STACK_USAGE("qdisc_class_hash_init", 8),
STACK_USAGE("qdisc_class_hash_destroy", 0),
STACK_USAGE("qdisc_class_hash_insert", 0),
STACK_USAGE("qdisc_class_hash_remove", 0),
STACK_USAGE("qdisc_tree_reduce_backlog", 56),
STACK_USAGE("qdisc_offload_dump_helper", 16),
STACK_USAGE("qdisc_offload_graft_helper", 24),
STACK_USAGE("tc_fill_qdisc", 160),
STACK_USAGE("qdisc_notify", 56),
STACK_USAGE("blackhole_enqueue", 0),
STACK_USAGE("blackhole_dequeue", 0),
STACK_USAGE("blackhole_init", 0),
STACK_USAGE("qdisc_dequeue_head", 0),
STACK_USAGE("__qdisc_queue_drop_head", 0),
STACK_USAGE("qdisc_peek_head", 0),
STACK_USAGE("qdisc_reset_queue", 16),
STACK_USAGE("fifo_init", 40),
STACK_USAGE("fifo_hd_init", 0),
STACK_USAGE("fifo_destroy", 40),
STACK_USAGE("fifo_dump", 56),
STACK_USAGE("fifo_hd_dump", 24),
STACK_USAGE("bfifo_enqueue", 0),
STACK_USAGE("fifo_set_limit", 24),
STACK_USAGE("fifo_create_dflt", 32),
STACK_USAGE("pfifo_enqueue", 0),
STACK_USAGE("pfifo_tail_enqueue", 32),
STACK_USAGE("qdisc_peek_dequeued", 16),
STACK_USAGE("INET_ECN_set_ce", 64),
STACK_USAGE("fq_codel_enqueue", 96),
STACK_USAGE("fq_codel_dequeue", 88),
STACK_USAGE("fq_codel_reset", 32),
STACK_USAGE("fq_codel_change", 152),
STACK_USAGE("fq_codel_destroy", 8),
STACK_USAGE("fq_codel_init", 24),
STACK_USAGE("fq_codel_dump", 56),
STACK_USAGE("fq_codel_dump_stats", 72),
STACK_USAGE("fq_codel_leaf", 0),
STACK_USAGE("fq_codel_find", 0),
STACK_USAGE("fq_codel_bind", 0),
STACK_USAGE("fq_codel_unbind", 0),
STACK_USAGE("fq_codel_tcf_block", 0),
STACK_USAGE("fq_codel_dump_class", 0),
STACK_USAGE("fq_codel_dump_class_stats", 128),
STACK_USAGE("fq_codel_walk", 24),
STACK_USAGE("fq_codel_module_init", 0),
STACK_USAGE("fq_codel_module_exit", 0),
STACK_USAGE("sch_frag_xmit_hook", 312),
STACK_USAGE("sch_frag_xmit", 32),
STACK_USAGE("sch_frag_dst_get_mtu", 0),
STACK_USAGE("qdisc_reset", 24),
STACK_USAGE("qdisc_free", 8),
STACK_USAGE("qdisc_free_cb", 8),
STACK_USAGE("qdisc_destroy", 16),
STACK_USAGE("qdisc_put", 0),
STACK_USAGE("qdisc_put_unlocked", 8),
STACK_USAGE("dev_graft_qdisc", 32),
STACK_USAGE("dev_activate", 40),
STACK_USAGE("dev_reset_queue", 24),
STACK_USAGE("dev_deactivate_many", 72),
STACK_USAGE("dev_deactivate", 24),
STACK_USAGE("dev_qdisc_change_real_num_tx", 16),
STACK_USAGE("mq_change_real_num_tx", 40),
STACK_USAGE("dev_qdisc_change_tx_queue_len", 64),
STACK_USAGE("dev_init_scheduler", 8),
STACK_USAGE("dev_shutdown", 24),
STACK_USAGE("psched_ratecfg_precompute", 0),
STACK_USAGE("psched_ppscfg_precompute", 0),
STACK_USAGE("mini_qdisc_pair_swap", 40),
STACK_USAGE("mini_qdisc_pair_block_init", 0),
STACK_USAGE("mini_qdisc_pair_init", 16),
STACK_USAGE("local_bh_disable", 0),
STACK_USAGE("sch_direct_xmit", 64),
STACK_USAGE("local_bh_enable", 0),
STACK_USAGE("__qdisc_run", 96),
STACK_USAGE("dev_trans_start", 0),
STACK_USAGE("netif_freeze_queues", 48),
STACK_USAGE("netif_tx_lock", 48),
STACK_USAGE("netif_unfreeze_queues", 24),
STACK_USAGE("netif_tx_unlock", 24),
STACK_USAGE("dev_watchdog", 32),
STACK_USAGE("__netdev_watchdog_up", 16),
STACK_USAGE("netif_carrier_on", 16),
STACK_USAGE("netif_carrier_off", 0),
STACK_USAGE("netif_carrier_event", 0),
STACK_USAGE("noop_enqueue", 0),
STACK_USAGE("noop_dequeue", 0),
STACK_USAGE("noqueue_init", 0),
STACK_USAGE("pfifo_fast_enqueue", 48),
STACK_USAGE("pfifo_fast_dequeue", 24),
STACK_USAGE("pfifo_fast_peek", 0),
STACK_USAGE("pfifo_fast_reset", 8),
STACK_USAGE("pfifo_fast_dump", 40),
STACK_USAGE("pfifo_fast_init", 40),
STACK_USAGE("pfifo_fast_destroy", 8),
STACK_USAGE("pfifo_fast_change_tx_queue_len", 136),
STACK_USAGE("qdisc_alloc", 40),
STACK_USAGE("qdisc_create_dflt", 40),
STACK_USAGE("trace_net_dev_xmit_timeout", 0),
STACK_USAGE("ingress_destroy", 0),
STACK_USAGE("ingress_dump", 16),
STACK_USAGE("clsact_find", 0),
STACK_USAGE("clsact_bind_filter", 0),
STACK_USAGE("clsact_tcf_block", 0),
STACK_USAGE("clsact_ingress_block_set", 0),
STACK_USAGE("clsact_egress_block_set", 0),
STACK_USAGE("clsact_ingress_block_get", 0),
STACK_USAGE("clsact_egress_block_get", 0),
STACK_USAGE("clsact_init", 40),
STACK_USAGE("ingress_leaf", 0),
STACK_USAGE("clsact_destroy", 8),
STACK_USAGE("ingress_module_init", 8),
STACK_USAGE("ingress_find", 0),
STACK_USAGE("ingress_module_exit", 0),
STACK_USAGE("ingress_bind_filter", 0),
STACK_USAGE("ingress_unbind_filter", 0),
STACK_USAGE("ingress_walk", 0),
STACK_USAGE("ingress_tcf_block", 0),
STACK_USAGE("clsact_chain_head_change", 0),
STACK_USAGE("ingress_ingress_block_set", 0),
STACK_USAGE("ingress_ingress_block_get", 0),
STACK_USAGE("ingress_init", 40),
STACK_USAGE("mq_attach", 32),
STACK_USAGE("mq_dump", 96),
STACK_USAGE("mq_select_queue", 0),
STACK_USAGE("mq_graft", 88),
STACK_USAGE("mq_leaf", 0),
STACK_USAGE("mq_find", 0),
STACK_USAGE("mq_dump_class", 0),
STACK_USAGE("mq_dump_class_stats", 48),
STACK_USAGE("mq_walk", 32),
STACK_USAGE("mq_destroy", 56),
STACK_USAGE("mq_init", 88),
STACK_USAGE("sock_splice_read", 0),
STACK_USAGE("sock_read_iter", 136),
STACK_USAGE("sock_write_iter", 120),
STACK_USAGE("brioctl_set", 8),
STACK_USAGE("br_ioctl_call", 40),
STACK_USAGE("vlan_ioctl_set", 8),
STACK_USAGE("sock_do_ioctl", 88),
STACK_USAGE("sock_ioctl", 96),
STACK_USAGE("sock_create_lite", 56),
STACK_USAGE("sock_poll", 32),
STACK_USAGE("sock_mmap", 0),
STACK_USAGE("sock_close", 32),
STACK_USAGE("sock_fasync", 40),
STACK_USAGE("sock_wake_async", 8),
STACK_USAGE("sock_show_fdinfo", 0),
STACK_USAGE("__sock_create", 80),
STACK_USAGE("sock_create", 0),
STACK_USAGE("sock_create_kern", 0),
STACK_USAGE("__sys_socket", 40),
STACK_USAGE("__ia32_sys_socket", 0),
STACK_USAGE("__x64_sys_socket", 0),
STACK_USAGE("__sys_socketpair", 88),
STACK_USAGE("__ia32_sys_socketpair", 0),
STACK_USAGE("__x64_sys_socketpair", 0),
STACK_USAGE("__sys_bind", 176),
STACK_USAGE("__ia32_sys_bind", 0),
STACK_USAGE("__x64_sys_bind", 0),
STACK_USAGE("__sys_listen", 32),
STACK_USAGE("__ia32_sys_listen", 0),
STACK_USAGE("__x64_sys_listen", 0),
STACK_USAGE("do_accept", 200),
STACK_USAGE("__sys_accept4_file", 48),
STACK_USAGE("__sys_accept4", 48),
STACK_USAGE("__ia32_sys_accept4", 0),
STACK_USAGE("__x64_sys_accept4", 0),
STACK_USAGE("__ia32_sys_accept", 0),
STACK_USAGE("__x64_sys_accept", 0),
STACK_USAGE("__sys_connect_file", 32),
STACK_USAGE("__sys_connect", 176),
STACK_USAGE("__ia32_sys_connect", 0),
STACK_USAGE("__x64_sys_connect", 0),
STACK_USAGE("__sys_getsockname", 176),
STACK_USAGE("__ia32_sys_getsockname", 0),
STACK_USAGE("__x64_sys_getsockname", 0),
STACK_USAGE("__sys_getpeername", 176),
STACK_USAGE("__ia32_sys_getpeername", 0),
STACK_USAGE("__x64_sys_getpeername", 0),
STACK_USAGE("__sys_sendto", 296),
STACK_USAGE("__ia32_sys_sendto", 0),
STACK_USAGE("__x64_sys_sendto", 0),
STACK_USAGE("__ia32_sys_send", 0),
STACK_USAGE("__x64_sys_send", 0),
STACK_USAGE("__sys_recvfrom", 304),
STACK_USAGE("__ia32_sys_recvfrom", 0),
STACK_USAGE("__x64_sys_recvfrom", 0),
STACK_USAGE("__ia32_sys_recv", 0),
STACK_USAGE("__x64_sys_recv", 0),
STACK_USAGE("__sys_setsockopt", 72),
STACK_USAGE("__ia32_sys_setsockopt", 0),
STACK_USAGE("__x64_sys_setsockopt", 0),
STACK_USAGE("__sys_getsockopt", 72),
STACK_USAGE("__ia32_sys_getsockopt", 0),
STACK_USAGE("__x64_sys_getsockopt", 0),
STACK_USAGE("__sys_shutdown_sock", 16),
STACK_USAGE("__sys_shutdown", 32),
STACK_USAGE("__ia32_sys_shutdown", 0),
STACK_USAGE("__se_sys_shutdown", 32),
STACK_USAGE("__x64_sys_shutdown", 0),
STACK_USAGE("__copy_msghdr_from_user", 104),
STACK_USAGE("____sys_sendmsg", 112),
STACK_USAGE("sendmsg_copy_msghdr", 80),
STACK_USAGE("move_addr_to_kernel", 16),
STACK_USAGE("___sys_sendmsg", 392),
STACK_USAGE("__sys_sendmsg_sock", 0),
STACK_USAGE("__sys_sendmsg", 136),
STACK_USAGE("__ia32_sys_sendmsg", 136),
STACK_USAGE("__x64_sys_sendmsg", 136),
STACK_USAGE("__sys_sendmmsg", 320),
STACK_USAGE("__ia32_sys_sendmmsg", 0),
STACK_USAGE("__x64_sys_sendmmsg", 0),
STACK_USAGE("recvmsg_copy_msghdr", 88),
STACK_USAGE("____sys_recvmsg", 208),
STACK_USAGE("___sys_recvmsg", 264),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("__sys_recvmsg_sock", 0),
STACK_USAGE("__sys_recvmsg", 136),
STACK_USAGE("__ia32_sys_recvmsg", 136),
STACK_USAGE("__x64_sys_recvmsg", 136),
STACK_USAGE("move_addr_to_user", 40),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("do_recvmmsg", 224),
STACK_USAGE("__sys_recvmmsg", 80),
STACK_USAGE("__ia32_sys_recvmmsg", 72),
STACK_USAGE("__x64_sys_recvmmsg", 72),
STACK_USAGE("__ia32_sys_recvmmsg_time32", 72),
STACK_USAGE("__x64_sys_recvmmsg_time32", 72),
STACK_USAGE("__ia32_sys_socketcall", 0),
STACK_USAGE("__se_sys_socketcall", 216),
STACK_USAGE("__x64_sys_socketcall", 0),
STACK_USAGE("sock_alloc_inode", 8),
STACK_USAGE("sock_register", 16),
STACK_USAGE("sock_unregister", 8),
STACK_USAGE("sock_is_registered", 0),
STACK_USAGE("sock_init", 8),
STACK_USAGE("socket_seq_show", 8),
STACK_USAGE("get_user_ifreq", 16),
STACK_USAGE("put_user_ifreq", 0),
STACK_USAGE("sock_free_inode", 0),
STACK_USAGE("init_once", 0),
STACK_USAGE("compat_sock_ioctl", 96),
STACK_USAGE("kernel_bind", 0),
STACK_USAGE("kernel_listen", 0),
STACK_USAGE("kernel_accept", 32),
STACK_USAGE("kernel_connect", 0),
STACK_USAGE("kernel_getsockname", 0),
STACK_USAGE("kernel_getpeername", 0),
STACK_USAGE("kernel_sendpage", 40),
STACK_USAGE("kernel_sendpage_locked", 0),
STACK_USAGE("kernel_sock_shutdown", 0),
STACK_USAGE("kernel_sock_ip_overhead", 24),
STACK_USAGE("sockfs_dname", 0),
STACK_USAGE("sockfs_xattr_get", 8),
STACK_USAGE("sockfs_security_xattr_set", 0),
STACK_USAGE("sockfs_init_fs_context", 0),
STACK_USAGE("sock_alloc_file", 32),
STACK_USAGE("sock_from_file", 0),
STACK_USAGE("sockfd_lookup", 8),
STACK_USAGE("sockfs_listxattr", 16),
STACK_USAGE("sockfs_setattr", 16),
STACK_USAGE("sock_alloc", 16),
STACK_USAGE("sock_release", 16),
STACK_USAGE("__sock_tx_timestamp", 0),
STACK_USAGE("sock_sendmsg_nosec", 0),
STACK_USAGE("sock_sendmsg", 16),
STACK_USAGE("rcu_read_unlock", 0),
STACK_USAGE("kernel_sendmsg", 16),
STACK_USAGE("kernel_sendmsg_locked", 24),
STACK_USAGE("__sock_recv_timestamp", 128),
STACK_USAGE("__sock_recv_wifi_status", 16),
STACK_USAGE("__sock_recv_ts_and_drops", 40),
STACK_USAGE("sock_recvmsg_nosec", 0),
STACK_USAGE("sock_recvmsg", 24),
STACK_USAGE("kernel_recvmsg", 24),
STACK_USAGE("sock_sendpage", 0),
STACK_USAGE("pskb_pull", 16),
STACK_USAGE("strp_process", 40),
STACK_USAGE("strp_recv", 0),
STACK_USAGE("default_read_sock_done", 0),
STACK_USAGE("strp_data_ready", 48),
STACK_USAGE("strp_abort_strp", 16),
STACK_USAGE("strp_work", 56),
STACK_USAGE("strp_msg_timeout", 16),
STACK_USAGE("strp_sock_lock", 0),
STACK_USAGE("strp_sock_unlock", 0),
STACK_USAGE("strp_init", 32),
STACK_USAGE("__strp_unpause", 48),
STACK_USAGE("strp_unpause", 0),
STACK_USAGE("strp_done", 8),
STACK_USAGE("strp_stop", 0),
STACK_USAGE("strp_check_rcv", 0),
STACK_USAGE("strp_dev_init", 0),
STACK_USAGE("__strp_recv", 128),
STACK_USAGE("rpc_ntop", 56),
STACK_USAGE("rpc_pton", 88),
STACK_USAGE("rpc_sockaddr2uaddr", 104),
STACK_USAGE("rpc_ntop6_noscopeid", 0),
STACK_USAGE("rpc_uaddr2sockaddr", 136),
STACK_USAGE("rpcauth_register", 0),
STACK_USAGE("rpcauth_unregister", 0),
STACK_USAGE("rpcauth_get_authops", 24),
STACK_USAGE("rpcauth_get_pseudoflavor", 24),
STACK_USAGE("rpcauth_get_gssinfo", 24),
STACK_USAGE("rpcauth_create", 24),
STACK_USAGE("rpcauth_release", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("rpcauth_init_credcache", 24),
STACK_USAGE("rpcauth_stringify_acceptor", 0),
STACK_USAGE("refcount_dec_and_test", 8),
STACK_USAGE("rpcauth_lru_remove", 16),
STACK_USAGE("rpcauth_clear_credcache", 72),
STACK_USAGE("rpcauth_destroy_credcache", 8),
STACK_USAGE("rpcauth_cache_do_shrink", 80),
STACK_USAGE("rpcauth_cache_shrink_scan", 0),
STACK_USAGE("rpcauth_cache_shrink_count", 0),
STACK_USAGE("rpcauth_lookup_credcache", 104),
STACK_USAGE("rpc_machine_cred", 0),
STACK_USAGE("rpcauth_lookupcred", 24),
STACK_USAGE("rpcauth_init_cred", 16),
STACK_USAGE("param_set_hashtbl_sz", 40),
STACK_USAGE("put_rpccred", 24),
STACK_USAGE("rpcauth_marshcred", 0),
STACK_USAGE("rpcauth_wrap_req_encode", 0),
STACK_USAGE("rpcauth_wrap_req", 0),
STACK_USAGE("rpcauth_checkverf", 0),
STACK_USAGE("rpcauth_unwrap_resp_decode", 0),
STACK_USAGE("param_get_hashtbl_sz", 0),
STACK_USAGE("rpcauth_unwrap_resp", 0),
STACK_USAGE("rpcauth_xmit_need_reencode", 0),
STACK_USAGE("rpcauth_refreshcred", 96),
STACK_USAGE("rpcauth_invalcred", 0),
STACK_USAGE("rpcauth_uptodatecred", 0),
STACK_USAGE("rpcauth_init_module", 8),
STACK_USAGE("rpcauth_remove_module", 0),
STACK_USAGE("gss_put_ctx", 0),
STACK_USAGE("gss_put_auth", 24),
STACK_USAGE("gss_destroy", 24),
STACK_USAGE("gss_auth_find_or_add_hashed", 48),
STACK_USAGE("trace_rpcgss_import_ctx", 0),
STACK_USAGE("gss_create", 96),
STACK_USAGE("gss_free_ctx_callback", 16),
STACK_USAGE("gss_free_cred_callback", 0),
STACK_USAGE("gss_destroy_nullcred", 32),
STACK_USAGE("gss_cred_get_ctx", 8),
STACK_USAGE("gss_destroy_cred", 64),
STACK_USAGE("gss_hash_cred", 8),
STACK_USAGE("gss_lookup_cred", 0),
STACK_USAGE("gss_create_cred", 24),
STACK_USAGE("trace_rpcgss_get_mic", 0),
STACK_USAGE("gss_cred_init", 176),
STACK_USAGE("trace_rpcgss_verify_mic", 0),
STACK_USAGE("gss_stringify_acceptor", 40),
STACK_USAGE("gss_key_timeout", 32),
STACK_USAGE("gss_match", 24),
STACK_USAGE("gss_marshal", 176),
STACK_USAGE("gss_fill_context", 72),
STACK_USAGE("gss_refresh", 64),
STACK_USAGE("gss_refresh_null", 0),
STACK_USAGE("gss_validate", 160),
STACK_USAGE("gss_wrap_req_integ", 152),
STACK_USAGE("priv_release_snd_buf", 16),
STACK_USAGE("gss_wrap_req_priv", 64),
STACK_USAGE("gss_wrap_req", 40),
STACK_USAGE("gss_update_rslack", 0),
STACK_USAGE("gss_unwrap_resp_integ", 168),
STACK_USAGE("gss_unwrap_resp_priv", 64),
STACK_USAGE("gss_xmit_need_reencode", 32),
STACK_USAGE("gss_unwrap_resp", 40),
STACK_USAGE("rpcsec_gss_init_net", 0),
STACK_USAGE("rpcsec_gss_exit_net", 0),
STACK_USAGE("init_rpcsec_gss", 8),
STACK_USAGE("exit_rpcsec_gss", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("simple_get_netobj", 24),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("gss_release_msg", 16),
STACK_USAGE("__gss_find_upcall", 8),
STACK_USAGE("trace_rpcgss_unwrap_failed", 0),
STACK_USAGE("__gss_unhash_msg", 8),
STACK_USAGE("trace_rpcgss_bad_seqno", 0),
STACK_USAGE("gss_unhash_msg", 24),
STACK_USAGE("gss_handle_downcall_result", 24),
STACK_USAGE("gss_upcall_callback", 32),
STACK_USAGE("net_generic", 16),
STACK_USAGE("gss_v0_upcall", 32),
STACK_USAGE("gss_v1_upcall", 88),
STACK_USAGE("gss_setup_upcall", 40),
STACK_USAGE("trace_rpcgss_upcall_result", 0),
STACK_USAGE("trace_rpcgss_context", 0),
STACK_USAGE("gss_pipe_downcall", 72),
STACK_USAGE("gss_pipe_open_v0", 16),
STACK_USAGE("gss_pipe_open_v1", 16),
STACK_USAGE("gss_pipe_release", 40),
STACK_USAGE("gss_pipe_destroy_msg", 8),
STACK_USAGE("gss_pipe_dentry_destroy", 8),
STACK_USAGE("gss_pipe_dentry_create", 8),
STACK_USAGE("gss_pipe_match_pdo", 24),
STACK_USAGE("gss_pipe_alloc_pdo", 32),
STACK_USAGE("gss_get_ctx", 8),
STACK_USAGE("g_token_size", 0),
STACK_USAGE("g_make_token_header", 16),
STACK_USAGE("g_verify_token_header", 48),
STACK_USAGE("gss_mech_unregister", 32),
STACK_USAGE("gss_mech_get", 8),
STACK_USAGE("_gss_mech_get_by_name", 32),
STACK_USAGE("gss_mech_get_by_name", 8),
STACK_USAGE("gss_mech_get_by_OID", 88),
STACK_USAGE("_gss_mech_get_by_pseudoflavor", 24),
STACK_USAGE("gss_mech_get_by_pseudoflavor", 8),
STACK_USAGE("gss_svc_to_pseudoflavor", 0),
STACK_USAGE("gss_mech_info2flavor", 16),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("gss_mech_flavor2info", 40),
STACK_USAGE("gss_pseudoflavor_to_service", 0),
STACK_USAGE("gss_pseudoflavor_to_datatouch", 0),
STACK_USAGE("gss_service_to_auth_domain_name", 0),
STACK_USAGE("gss_mech_put", 0),
STACK_USAGE("gss_import_sec_context", 48),
STACK_USAGE("gss_get_mic", 0),
STACK_USAGE("gss_verify_mic", 0),
STACK_USAGE("gss_wrap", 0),
STACK_USAGE("gss_unwrap", 0),
STACK_USAGE("gss_delete_sec_context", 8),
STACK_USAGE("gss_mech_register", 48),
STACK_USAGE("init_gssp_clnt", 8),
STACK_USAGE("set_gssp_clnt", 176),
STACK_USAGE("clear_gssp_clnt", 16),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("gssp_accept_sec_context_upcall", 600),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("gssp_free_upcall_data", 8),
STACK_USAGE("net_generic", 16),
STACK_USAGE("dummy_dec_opt_array", 24),
STACK_USAGE("gssx_dec_option_array", 64),
STACK_USAGE("gssx_enc_name", 24),
STACK_USAGE("gssx_dec_name", 96),
STACK_USAGE("gssx_dec_buffer", 32),
STACK_USAGE("gssx_enc_cb", 24),
STACK_USAGE("gssx_enc_accept_sec_context", 40),
STACK_USAGE("gssx_dec_accept_sec_context", 40),
STACK_USAGE("rsi_put", 0),
STACK_USAGE("svcauth_gss_set_client", 8),
STACK_USAGE("rsi_match", 24),
STACK_USAGE("svcauth_gss_legacy_init", 208),
STACK_USAGE("svcauth_gss_proxy_init", 512),
STACK_USAGE("rsi_init", 0),
STACK_USAGE("set_gss_proxy", 8),
STACK_USAGE("use_gss_proxy", 16),
STACK_USAGE("write_gssp", 72),
STACK_USAGE("read_gssp", 64),
STACK_USAGE("svcauth_gss_accept", 56),
STACK_USAGE("update_rsi", 0),
STACK_USAGE("rsi_alloc", 0),
STACK_USAGE("svcauth_gss_release", 160),
STACK_USAGE("rsi_upcall", 0),
STACK_USAGE("svcauth_gss_domain_release_rcu", 8),
STACK_USAGE("rsi_request", 24),
STACK_USAGE("svcauth_gss_domain_release", 0),
STACK_USAGE("cache_get", 0),
STACK_USAGE("gss_svc_init_net", 32),
STACK_USAGE("gss_svc_shutdown_net", 24),
STACK_USAGE("gss_svc_init", 0),
STACK_USAGE("gss_svc_shutdown", 0),
STACK_USAGE("rsi_parse", 312),
STACK_USAGE("trace_rpcgss_svc_mic", 0),
STACK_USAGE("trace_rpcgss_svc_unwrap_failed", 0),
STACK_USAGE("trace_rpcgss_svc_seqno_bad", 0),
STACK_USAGE("get_int", 104),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("trace_rpcgss_svc_authenticate", 0),
STACK_USAGE("rsi_update", 32),
STACK_USAGE("rsc_free", 8),
STACK_USAGE("rsc_free_rcu", 8),
STACK_USAGE("rsc_put", 8),
STACK_USAGE("rsc_match", 0),
STACK_USAGE("rsc_init", 0),
STACK_USAGE("net_generic", 16),
STACK_USAGE("update_rsc", 16),
STACK_USAGE("rsc_alloc", 0),
STACK_USAGE("rsc_upcall", 0),
STACK_USAGE("rsc_parse", 424),
STACK_USAGE("trace_rpcgss_svc_seqno_large", 0),
STACK_USAGE("gss_svc_searchbyctx", 272),
STACK_USAGE("gss_check_seq_num", 32),
STACK_USAGE("gss_verify_header", 144),
STACK_USAGE("gss_write_verf", 168),
STACK_USAGE("svcauth_gss_flavor", 0),
STACK_USAGE("svcauth_gss_register_pseudoflavor", 24),
STACK_USAGE("unwrap_integ_data", 152),
STACK_USAGE("rsi_free_rcu", 16),
STACK_USAGE("unwrap_priv_data", 48),
STACK_USAGE("__bpf_trace_rpcgss_import_ctx", 0),
STACK_USAGE("__traceiter_rpcgss_import_ctx", 16),
STACK_USAGE("perf_trace_rpcgss_import_ctx", 56),
STACK_USAGE("trace_event_raw_event_rpcgss_import_ctx", 72),
STACK_USAGE("trace_raw_output_rpcgss_import_ctx", 24),
STACK_USAGE("__traceiter_rpcgss_get_mic", 24),
STACK_USAGE("__traceiter_rpcgss_verify_mic", 24),
STACK_USAGE("__traceiter_rpcgss_wrap", 24),
STACK_USAGE("__traceiter_rpcgss_unwrap", 24),
STACK_USAGE("__bpf_trace_rpcgss_ctx_class", 0),
STACK_USAGE("perf_trace_rpcgss_ctx_class", 80),
STACK_USAGE("trace_event_raw_event_rpcgss_ctx_class", 88),
STACK_USAGE("trace_raw_output_rpcgss_ctx_class", 32),
STACK_USAGE("__traceiter_rpcgss_ctx_init", 16),
STACK_USAGE("__traceiter_rpcgss_ctx_destroy", 16),
STACK_USAGE("__bpf_trace_rpcgss_svc_gssapi_class", 0),
STACK_USAGE("perf_trace_rpcgss_svc_gssapi_class", 80),
STACK_USAGE("trace_event_raw_event_rpcgss_svc_gssapi_class", 96),
STACK_USAGE("trace_raw_output_rpcgss_svc_gssapi_class", 40),
STACK_USAGE("__traceiter_rpcgss_svc_unwrap", 24),
STACK_USAGE("__traceiter_rpcgss_svc_mic", 24),
STACK_USAGE("__bpf_trace_rpcgss_svc_unwrap_failed", 0),
STACK_USAGE("__traceiter_rpcgss_svc_unwrap_failed", 16),
STACK_USAGE("perf_trace_rpcgss_svc_unwrap_failed", 80),
STACK_USAGE("trace_event_raw_event_rpcgss_svc_unwrap_failed", 88),
STACK_USAGE("trace_raw_output_rpcgss_svc_unwrap_failed", 24),
STACK_USAGE("__bpf_trace_rpcgss_svc_seqno_bad", 0),
STACK_USAGE("__traceiter_rpcgss_svc_seqno_bad", 32),
STACK_USAGE("perf_trace_rpcgss_svc_seqno_bad", 88),
STACK_USAGE("trace_event_raw_event_rpcgss_svc_seqno_bad", 104),
STACK_USAGE("trace_raw_output_rpcgss_svc_seqno_bad", 24),
STACK_USAGE("__bpf_trace_rpcgss_svc_accept_upcall", 0),
STACK_USAGE("__traceiter_rpcgss_svc_accept_upcall", 32),
STACK_USAGE("perf_trace_rpcgss_svc_accept_upcall", 88),
STACK_USAGE("trace_event_raw_event_rpcgss_svc_accept_upcall", 104),
STACK_USAGE("trace_raw_output_rpcgss_svc_accept_upcall", 40),
STACK_USAGE("__bpf_trace_rpcgss_svc_authenticate", 0),
STACK_USAGE("__traceiter_rpcgss_svc_authenticate", 24),
STACK_USAGE("perf_trace_rpcgss_svc_authenticate", 88),
STACK_USAGE("trace_event_raw_event_rpcgss_svc_authenticate", 96),
STACK_USAGE("trace_raw_output_rpcgss_svc_authenticate", 24),
STACK_USAGE("__bpf_trace_rpcgss_unwrap_failed", 0),
STACK_USAGE("__traceiter_rpcgss_unwrap_failed", 16),
STACK_USAGE("perf_trace_rpcgss_unwrap_failed", 56),
STACK_USAGE("trace_event_raw_event_rpcgss_unwrap_failed", 72),
STACK_USAGE("trace_raw_output_rpcgss_unwrap_failed", 24),
STACK_USAGE("__bpf_trace_rpcgss_bad_seqno", 0),
STACK_USAGE("__traceiter_rpcgss_bad_seqno", 32),
STACK_USAGE("perf_trace_rpcgss_bad_seqno", 72),
STACK_USAGE("trace_event_raw_event_rpcgss_bad_seqno", 88),
STACK_USAGE("trace_raw_output_rpcgss_bad_seqno", 24),
STACK_USAGE("__bpf_trace_rpcgss_seqno", 0),
STACK_USAGE("__traceiter_rpcgss_seqno", 16),
STACK_USAGE("perf_trace_rpcgss_seqno", 56),
STACK_USAGE("trace_event_raw_event_rpcgss_seqno", 72),
STACK_USAGE("trace_raw_output_rpcgss_seqno", 24),
STACK_USAGE("__bpf_trace_rpcgss_need_reencode", 0),
STACK_USAGE("__traceiter_rpcgss_need_reencode", 32),
STACK_USAGE("perf_trace_rpcgss_need_reencode", 72),
STACK_USAGE("trace_event_raw_event_rpcgss_need_reencode", 88),
STACK_USAGE("trace_raw_output_rpcgss_need_reencode", 24),
STACK_USAGE("__bpf_trace_rpcgss_update_slack", 0),
STACK_USAGE("__traceiter_rpcgss_update_slack", 24),
STACK_USAGE("perf_trace_rpcgss_update_slack", 64),
STACK_USAGE("trace_event_raw_event_rpcgss_update_slack", 80),
STACK_USAGE("trace_raw_output_rpcgss_update_slack", 24),
STACK_USAGE("__bpf_trace_rpcgss_svc_seqno_class", 0),
STACK_USAGE("perf_trace_rpcgss_svc_seqno_class", 64),
STACK_USAGE("trace_event_raw_event_rpcgss_svc_seqno_class", 80),
STACK_USAGE("trace_raw_output_rpcgss_svc_seqno_class", 24),
STACK_USAGE("__traceiter_rpcgss_svc_seqno_large", 24),
STACK_USAGE("__traceiter_rpcgss_svc_seqno_seen", 24),
STACK_USAGE("__bpf_trace_rpcgss_svc_seqno_low", 0),
STACK_USAGE("__traceiter_rpcgss_svc_seqno_low", 40),
STACK_USAGE("perf_trace_rpcgss_svc_seqno_low", 72),
STACK_USAGE("trace_event_raw_event_rpcgss_svc_seqno_low", 96),
STACK_USAGE("trace_raw_output_rpcgss_svc_seqno_low", 24),
STACK_USAGE("__bpf_trace_rpcgss_upcall_msg", 0),
STACK_USAGE("__traceiter_rpcgss_upcall_msg", 16),
STACK_USAGE("perf_trace_rpcgss_upcall_msg", 80),
STACK_USAGE("trace_event_raw_event_rpcgss_upcall_msg", 88),
STACK_USAGE("trace_raw_output_rpcgss_upcall_msg", 24),
STACK_USAGE("__bpf_trace_rpcgss_upcall_result", 0),
STACK_USAGE("__traceiter_rpcgss_upcall_result", 24),
STACK_USAGE("perf_trace_rpcgss_upcall_result", 64),
STACK_USAGE("trace_event_raw_event_rpcgss_upcall_result", 80),
STACK_USAGE("trace_raw_output_rpcgss_upcall_result", 24),
STACK_USAGE("__bpf_trace_rpcgss_context", 0),
STACK_USAGE("__traceiter_rpcgss_context", 48),
STACK_USAGE("perf_trace_rpcgss_context", 96),
STACK_USAGE("trace_event_raw_event_rpcgss_context", 120),
STACK_USAGE("trace_raw_output_rpcgss_context", 24),
STACK_USAGE("__bpf_trace_rpcgss_createauth", 0),
STACK_USAGE("__traceiter_rpcgss_createauth", 24),
STACK_USAGE("perf_trace_rpcgss_createauth", 64),
STACK_USAGE("trace_event_raw_event_rpcgss_createauth", 80),
STACK_USAGE("trace_raw_output_rpcgss_createauth", 24),
STACK_USAGE("__bpf_trace_rpcgss_oid_to_mech", 0),
STACK_USAGE("__traceiter_rpcgss_oid_to_mech", 16),
STACK_USAGE("perf_trace_rpcgss_oid_to_mech", 80),
STACK_USAGE("trace_event_raw_event_rpcgss_oid_to_mech", 88),
STACK_USAGE("trace_raw_output_rpcgss_oid_to_mech", 24),
STACK_USAGE("__bpf_trace_rpcgss_gssapi_event", 0),
STACK_USAGE("perf_trace_rpcgss_gssapi_event", 64),
STACK_USAGE("trace_event_raw_event_rpcgss_gssapi_event", 80),
STACK_USAGE("trace_raw_output_rpcgss_gssapi_event", 40),
STACK_USAGE("nul_create", 0),
STACK_USAGE("nul_destroy", 0),
STACK_USAGE("nul_lookup_cred", 8),
STACK_USAGE("nul_destroy_cred", 0),
STACK_USAGE("nul_match", 0),
STACK_USAGE("nul_marshal", 0),
STACK_USAGE("nul_refresh", 0),
STACK_USAGE("nul_validate", 0),
STACK_USAGE("unx_marshal", 64),
STACK_USAGE("unx_refresh", 0),
STACK_USAGE("unx_validate", 32),
STACK_USAGE("rpc_init_authunix", 0),
STACK_USAGE("rpc_destroy_authunix", 0),
STACK_USAGE("unx_create", 0),
STACK_USAGE("unx_destroy", 0),
STACK_USAGE("unx_lookup_cred", 40),
STACK_USAGE("unx_free_cred_callback", 16),
STACK_USAGE("unx_destroy_cred", 0),
STACK_USAGE("unx_match", 0),
STACK_USAGE("cache_open", 40),
STACK_USAGE("cache_release", 48),
STACK_USAGE("qword_add", 40),
STACK_USAGE("qword_addhex", 16),
STACK_USAGE("sunrpc_cache_pipe_upcall", 48),
STACK_USAGE("sunrpc_cache_pipe_upcall_timeout", 48),
STACK_USAGE("qword_get", 64),
STACK_USAGE("cache_seq_start_rcu", 16),
STACK_USAGE("cache_seq_next_rcu", 0),
STACK_USAGE("cache_seq_stop_rcu", 0),
STACK_USAGE("c_show", 64),
STACK_USAGE("sunrpc_cache_lookup_rcu", 80),
STACK_USAGE("write_flush", 104),
STACK_USAGE("cache_read_procfs", 0),
STACK_USAGE("cache_write_procfs", 0),
STACK_USAGE("cache_poll_procfs", 24),
STACK_USAGE("cache_ioctl_procfs", 32),
STACK_USAGE("cache_open_procfs", 0),
STACK_USAGE("cache_release_procfs", 0),
STACK_USAGE("content_open_procfs", 24),
STACK_USAGE("content_release_procfs", 16),
STACK_USAGE("open_flush_procfs", 16),
STACK_USAGE("release_flush_procfs", 0),
STACK_USAGE("read_flush_procfs", 88),
STACK_USAGE("write_flush_procfs", 0),
STACK_USAGE("cache_initialize", 0),
STACK_USAGE("cache_register_net", 32),
STACK_USAGE("cache_unregister_net", 8),
STACK_USAGE("cache_create_net", 24),
STACK_USAGE("cache_fresh_unlocked", 64),
STACK_USAGE("cache_destroy_net", 8),
STACK_USAGE("cache_read_pipefs", 0),
STACK_USAGE("cache_write_pipefs", 0),
STACK_USAGE("cache_poll_pipefs", 24),
STACK_USAGE("cache_ioctl_pipefs", 32),
STACK_USAGE("cache_open_pipefs", 0),
STACK_USAGE("cache_release_pipefs", 0),
STACK_USAGE("content_open_pipefs", 24),
STACK_USAGE("content_release_pipefs", 16),
STACK_USAGE("cache_make_negative", 0),
STACK_USAGE("open_flush_pipefs", 16),
STACK_USAGE("release_flush_pipefs", 0),
STACK_USAGE("read_flush_pipefs", 88),
STACK_USAGE("write_flush_pipefs", 0),
STACK_USAGE("sunrpc_cache_register_pipefs", 8),
STACK_USAGE("sunrpc_cache_unregister_pipefs", 8),
STACK_USAGE("cache_entry_update", 16),
STACK_USAGE("sunrpc_cache_unhash", 24),
STACK_USAGE("sunrpc_cache_update", 72),
STACK_USAGE("trace_cache_entry_expired", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("cache_check", 208),
STACK_USAGE("sunrpc_init_cache_detail", 8),
STACK_USAGE("sunrpc_destroy_cache_detail", 16),
STACK_USAGE("cache_clean", 64),
STACK_USAGE("do_cache_clean", 0),
STACK_USAGE("cache_flush", 0),
STACK_USAGE("cache_purge", 40),
STACK_USAGE("cache_restart_thread", 0),
STACK_USAGE("cache_revisit_request", 48),
STACK_USAGE("cache_clean_deferred", 40),
STACK_USAGE("cache_read", 96),
STACK_USAGE("cache_write", 48),
STACK_USAGE("rpc_task_release_transport", 16),
STACK_USAGE("rpc_task_release_client", 24),
STACK_USAGE("rpc_task_set_transport", 24),
STACK_USAGE("trace_xprt_ping", 0),
STACK_USAGE("rpc_default_callback", 0),
STACK_USAGE("rpc_run_task", 32),
STACK_USAGE("rpc_call_sync", 88),
STACK_USAGE("rpc_setup_pipedir_sb", 64),
STACK_USAGE("rpc_call_async", 80),
STACK_USAGE("rpc_prepare_reply_pages", 16),
STACK_USAGE("rpc_call_start", 0),
STACK_USAGE("rpc_peeraddr", 24),
STACK_USAGE("rpc_peeraddr2str", 16),
STACK_USAGE("trace_rpc_clnt_new", 0),
STACK_USAGE("rpc_localaddr", 200),
STACK_USAGE("rpc_setbufsize", 24),
STACK_USAGE("rpc_net_ns", 8),
STACK_USAGE("rpc_max_payload", 8),
STACK_USAGE("rpc_max_bc_payload", 8),
STACK_USAGE("rpc_num_bc_slots", 8),
STACK_USAGE("rpc_force_rebind", 8),
STACK_USAGE("rpc_restart_call", 0),
STACK_USAGE("rpc_restart_call_prepare", 0),
STACK_USAGE("rpc_proc_name", 0),
STACK_USAGE("__rpc_call_rpcerror", 24),
STACK_USAGE("call_start", 24),
STACK_USAGE("call_reserve", 0),
STACK_USAGE("call_reserveresult", 8),
STACK_USAGE("call_retry_reserve", 0),
STACK_USAGE("call_refresh", 0),
STACK_USAGE("call_refreshresult", 16),
STACK_USAGE("call_allocate", 16),
STACK_USAGE("call_encode", 112),
STACK_USAGE("call_bind", 16),
STACK_USAGE("call_bind_status", 8),
STACK_USAGE("call_connect", 8),
STACK_USAGE("call_connect_status", 32),
STACK_USAGE("call_transmit", 8),
STACK_USAGE("call_transmit_status", 8),
STACK_USAGE("call_status", 24),
STACK_USAGE("rpc_pipefs_event", 48),
STACK_USAGE("rpc_check_timeout", 16),
STACK_USAGE("call_decode", 112),
STACK_USAGE("rpc_clients_notifier_register", 0),
STACK_USAGE("rpc_decode_header", 32),
STACK_USAGE("rpc_clients_notifier_unregister", 0),
STACK_USAGE("refcount_inc", 0),
STACK_USAGE("rpc_clnt_set_transport", 40),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rpcproc_encode_null", 0),
STACK_USAGE("rpcproc_decode_null", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("rpc_null_call_prepare", 0),
STACK_USAGE("trace_rpc_retry_refresh_status", 0),
STACK_USAGE("rpc_call_null", 112),
STACK_USAGE("rpc_cb_add_xprt_done", 0),
STACK_USAGE("rpc_cb_add_xprt_release", 8),
STACK_USAGE("rpc_clnt_test_and_add_xprt", 160),
STACK_USAGE("rpc_clnt_setup_test_and_add_xprt", 152),
STACK_USAGE("rpc_client_register", 64),
STACK_USAGE("rpc_clnt_add_xprt", 72),
STACK_USAGE("rpc_xprt_set_connect_timeout", 0),
STACK_USAGE("rpc_set_connect_timeout", 24),
STACK_USAGE("rpc_clnt_xprt_switch_put", 8),
STACK_USAGE("rpc_clnt_xprt_switch_add_xprt", 16),
STACK_USAGE("rpc_clnt_xprt_switch_has_addr", 16),
STACK_USAGE("rpc_cleanup_clids", 0),
STACK_USAGE("rpc_new_client", 80),
STACK_USAGE("net_generic", 16),
STACK_USAGE("rpc_create_xprt", 144),
STACK_USAGE("trace_rpc__prog_unavail", 0),
STACK_USAGE("trace_rpc__prog_mismatch", 0),
STACK_USAGE("trace_rpc__proc_unavail", 0),
STACK_USAGE("trace_rpc__garbage_args", 0),
STACK_USAGE("trace_rpc__mismatch", 0),
STACK_USAGE("trace_rpc__stale_creds", 0),
STACK_USAGE("trace_rpc__bad_creds", 0),
STACK_USAGE("trace_rpc__auth_tooweak", 0),
STACK_USAGE("trace_rpcb_prog_unavail_err", 0),
STACK_USAGE("rpc_create", 184),
STACK_USAGE("trace_rpcb_timeout_err", 0),
STACK_USAGE("trace_rpcb_bind_version_err", 0),
STACK_USAGE("trace_rpcb_unrecognized_err", 0),
STACK_USAGE("__rpc_clone_client", 32),
STACK_USAGE("rpc_clone_client", 136),
STACK_USAGE("rpc_clone_client_set_auth", 136),
STACK_USAGE("rpc_switch_client_transport", 80),
STACK_USAGE("rcu_read_unlock", 0),
STACK_USAGE("rpc_clnt_iterate_for_each_xprt", 80),
STACK_USAGE("rpc_killall_tasks", 32),
STACK_USAGE("rpc_shutdown_client", 80),
STACK_USAGE("rpc_free_client_work", 24),
STACK_USAGE("rpc_release_client", 48),
STACK_USAGE("rpc_bind_new_program", 264),
STACK_USAGE("rpc_task_get_xprt", 16),
STACK_USAGE("rpc_clntdir_populate", 0),
STACK_USAGE("rpc_pipe_generic_upcall", 16),
STACK_USAGE("rpc_create_client_dir", 32),
STACK_USAGE("rpc_remove_client_dir", 40),
STACK_USAGE("rpc_cachedir_populate", 0),
STACK_USAGE("rpc_create_cache_dir", 0),
STACK_USAGE("rpc_remove_cache_dir", 40),
STACK_USAGE("rpc_d_lookup_sb", 40),
STACK_USAGE("rpc_pipefs_init_net", 16),
STACK_USAGE("rpc_pipefs_exit_net", 0),
STACK_USAGE("rpc_get_sb_net", 16),
STACK_USAGE("rpc_put_sb_net", 0),
STACK_USAGE("dummy_downcall", 0),
STACK_USAGE("rpc_dummy_info_show", 8),
STACK_USAGE("rpc_dummy_info_open", 0),
STACK_USAGE("rpc_fill_super", 88),
STACK_USAGE("rpc_queue_upcall", 32),
STACK_USAGE("gssd_running", 0),
STACK_USAGE("rpc_fs_get_tree", 16),
STACK_USAGE("rpc_fs_free_fc", 0),
STACK_USAGE("rpc_init_fs_context", 16),
STACK_USAGE("rpc_kill_sb", 32),
STACK_USAGE("init_once", 8),
STACK_USAGE("register_rpc_pipefs", 8),
STACK_USAGE("unregister_rpc_pipefs", 0),
STACK_USAGE("rpc_alloc_inode", 0),
STACK_USAGE("rpc_free_inode", 0),
STACK_USAGE("rpc_pipe_open", 32),
STACK_USAGE("rpc_pipe_release", 72),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("rpc_pipe_read", 56),
STACK_USAGE("rpc_pipe_write", 40),
STACK_USAGE("rpc_pipe_poll", 24),
STACK_USAGE("rpc_pipe_ioctl", 48),
STACK_USAGE("rpc_show_info", 24),
STACK_USAGE("net_generic", 16),
STACK_USAGE("rpc_info_open", 40),
STACK_USAGE("rpc_info_release", 16),
STACK_USAGE("__rpc_create_common", 48),
STACK_USAGE("__rpc_mkdir", 24),
STACK_USAGE("rpc_pipefs_notifier_register", 0),
STACK_USAGE("rpc_destroy_pipe_data", 0),
STACK_USAGE("rpc_mkpipe_data", 24),
STACK_USAGE("rpc_pipefs_notifier_unregister", 0),
STACK_USAGE("__rpc_rmdir", 24),
STACK_USAGE("__rpc_unlink", 24),
STACK_USAGE("__rpc_rmpipe", 96),
STACK_USAGE("__rpc_depopulate", 80),
STACK_USAGE("rpc_populate", 112),
STACK_USAGE("rpc_mkdir_populate", 80),
STACK_USAGE("rpc_mkpipe_dentry", 88),
STACK_USAGE("rpc_timeout_upcall_queue", 56),
STACK_USAGE("rpc_unlink", 32),
STACK_USAGE("rpc_init_pipe_dir_head", 0),
STACK_USAGE("rpc_init_pipe_dir_object", 0),
STACK_USAGE("rpc_add_pipe_dir_object", 32),
STACK_USAGE("rpc_remove_pipe_dir_object", 24),
STACK_USAGE("rpc_find_or_alloc_pipe_dir_object", 48),
STACK_USAGE("rpcb_map_release", 8),
STACK_USAGE("rpcb_put_local", 32),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("rpcb_create_local", 176),
STACK_USAGE("net_generic", 16),
STACK_USAGE("rpcb_register", 144),
STACK_USAGE("rpcb_v4_register", 128),
STACK_USAGE("rpcb_call_async", 112),
STACK_USAGE("rpcb_getport_async", 328),
STACK_USAGE("rpcb_getport_done", 16),
STACK_USAGE("rpcb_enc_mapping", 8),
STACK_USAGE("rpcb_dec_getport", 8),
STACK_USAGE("rpcb_dec_set", 8),
STACK_USAGE("rpcb_enc_getaddr", 40),
STACK_USAGE("rpcb_dec_getaddr", 176),
STACK_USAGE("__traceiter_xprt_create", 16),
STACK_USAGE("__traceiter_xprt_connect", 16),
STACK_USAGE("__traceiter_xprt_disconnect_auto", 16),
STACK_USAGE("__traceiter_xprt_disconnect_done", 16),
STACK_USAGE("__traceiter_xprt_disconnect_force", 16),
STACK_USAGE("__traceiter_xprt_destroy", 16),
STACK_USAGE("__bpf_trace_rpc_xprt_event", 0),
STACK_USAGE("perf_trace_rpc_xprt_event", 104),
STACK_USAGE("trace_event_raw_event_rpc_xprt_event", 112),
STACK_USAGE("trace_raw_output_rpc_xprt_event", 24),
STACK_USAGE("rpc_async_schedule", 16),
STACK_USAGE("rpc_malloc", 24),
STACK_USAGE("__traceiter_xprt_timer", 32),
STACK_USAGE("__traceiter_xprt_lookup_rqst", 32),
STACK_USAGE("__bpf_trace_xprt_transmit", 0),
STACK_USAGE("__traceiter_xprt_transmit", 24),
STACK_USAGE("perf_trace_xprt_transmit", 64),
STACK_USAGE("trace_event_raw_event_xprt_transmit", 80),
STACK_USAGE("trace_raw_output_xprt_transmit", 24),
STACK_USAGE("__traceiter_rpc_xdr_sendto", 24),
STACK_USAGE("__traceiter_rpc_xdr_recvfrom", 24),
STACK_USAGE("rpc_free", 0),
STACK_USAGE("__traceiter_rpc_xdr_reply_pages", 24),
STACK_USAGE("__bpf_trace_xprt_retransmit", 0),
STACK_USAGE("__traceiter_xprt_retransmit", 16),
STACK_USAGE("perf_trace_xprt_retransmit", 88),
STACK_USAGE("trace_event_raw_event_xprt_retransmit", 104),
STACK_USAGE("trace_raw_output_xprt_retransmit", 24),
STACK_USAGE("__bpf_trace_rpc_clnt_class", 0),
STACK_USAGE("perf_trace_rpc_clnt_class", 56),
STACK_USAGE("trace_event_raw_event_rpc_clnt_class", 72),
STACK_USAGE("trace_raw_output_rpc_clnt_class", 24),
STACK_USAGE("__bpf_trace_xprt_ping", 0),
STACK_USAGE("__traceiter_xprt_ping", 24),
STACK_USAGE("perf_trace_xprt_ping", 96),
STACK_USAGE("trace_event_raw_event_xprt_ping", 104),
STACK_USAGE("trace_raw_output_xprt_ping", 24),
STACK_USAGE("rpc_new_task", 40),
STACK_USAGE("__bpf_trace_xprt_writelock_event", 0),
STACK_USAGE("perf_trace_xprt_writelock_event", 64),
STACK_USAGE("trace_event_raw_event_xprt_writelock_event", 80),
STACK_USAGE("trace_raw_output_xprt_writelock_event", 24),
STACK_USAGE("rpc_async_release", 32),
STACK_USAGE("__traceiter_xprt_reserve_xprt", 24),
STACK_USAGE("__traceiter_xprt_release_xprt", 24),
STACK_USAGE("__bpf_trace_xprt_cong_event", 0),
STACK_USAGE("perf_trace_xprt_cong_event", 64),
STACK_USAGE("trace_event_raw_event_xprt_cong_event", 80),
STACK_USAGE("trace_raw_output_xprt_cong_event", 24),
STACK_USAGE("rpc_final_put_task", 32),
STACK_USAGE("rpc_do_put_task", 24),
STACK_USAGE("rpc_put_task", 0),
STACK_USAGE("rpc_put_task_async", 0),
STACK_USAGE("__traceiter_xprt_reserve_cong", 24),
STACK_USAGE("__traceiter_xprt_release_cong", 24),
STACK_USAGE("__traceiter_xprt_get_cong", 24),
STACK_USAGE("__traceiter_xprt_put_cong", 24),
STACK_USAGE("__bpf_trace_xprt_reserve", 0),
STACK_USAGE("__traceiter_xprt_reserve", 16),
STACK_USAGE("perf_trace_xprt_reserve", 56),
STACK_USAGE("rpciod_up", 8),
STACK_USAGE("trace_event_raw_event_xprt_reserve", 72),
STACK_USAGE("trace_raw_output_xprt_reserve", 24),
STACK_USAGE("rpciod_down", 0),
STACK_USAGE("__bpf_trace_xs_stream_read_data", 0),
STACK_USAGE("__traceiter_xs_stream_read_data", 32),
STACK_USAGE("perf_trace_xs_stream_read_data", 104),
STACK_USAGE("trace_event_raw_event_xs_stream_read_data", 120),
STACK_USAGE("trace_raw_output_xs_stream_read_data", 24),
STACK_USAGE("__bpf_trace_xs_stream_read_request", 0),
STACK_USAGE("__traceiter_xs_stream_read_request", 16),
STACK_USAGE("perf_trace_xs_stream_read_request", 88),
STACK_USAGE("trace_event_raw_event_xs_stream_read_request", 96),
STACK_USAGE("trace_raw_output_xs_stream_read_request", 24),
STACK_USAGE("rpc_destroy_mempool", 0),
STACK_USAGE("rpc_init_mempool", 0),
STACK_USAGE("__bpf_trace_rpcb_getport", 0),
STACK_USAGE("__traceiter_rpcb_getport", 32),
STACK_USAGE("perf_trace_rpcb_getport", 88),
STACK_USAGE("trace_event_raw_event_rpcb_getport", 104),
STACK_USAGE("trace_raw_output_rpcb_getport", 24),
STACK_USAGE("__traceiter_rpc_clnt_free", 16),
STACK_USAGE("__bpf_trace_rpcb_setport", 0),
STACK_USAGE("__traceiter_rpcb_setport", 32),
STACK_USAGE("perf_trace_rpcb_setport", 72),
STACK_USAGE("trace_event_raw_event_rpcb_setport", 88),
STACK_USAGE("trace_raw_output_rpcb_setport", 24),
STACK_USAGE("__traceiter_rpc_clnt_killall", 16),
STACK_USAGE("__traceiter_rpc_clnt_shutdown", 16),
STACK_USAGE("__traceiter_rpc_clnt_release", 16),
STACK_USAGE("__bpf_trace_pmap_register", 0),
STACK_USAGE("__traceiter_pmap_register", 40),
STACK_USAGE("perf_trace_pmap_register", 72),
STACK_USAGE("trace_event_raw_event_pmap_register", 96),
STACK_USAGE("trace_raw_output_pmap_register", 24),
STACK_USAGE("__traceiter_rpc_clnt_replace_xprt", 16),
STACK_USAGE("__traceiter_rpc_clnt_replace_xprt_err", 16),
STACK_USAGE("__bpf_trace_rpcb_register", 0),
STACK_USAGE("__traceiter_rpcb_register", 40),
STACK_USAGE("perf_trace_rpcb_register", 112),
STACK_USAGE("trace_event_raw_event_rpcb_register", 112),
STACK_USAGE("trace_raw_output_rpcb_register", 24),
STACK_USAGE("__bpf_trace_rpc_clnt_new", 0),
STACK_USAGE("__traceiter_rpc_clnt_new", 40),
STACK_USAGE("perf_trace_rpc_clnt_new", 144),
STACK_USAGE("trace_event_raw_event_rpc_clnt_new", 144),
STACK_USAGE("trace_raw_output_rpc_clnt_new", 24),
STACK_USAGE("__bpf_trace_rpcb_unregister", 0),
STACK_USAGE("__traceiter_rpcb_unregister", 32),
STACK_USAGE("perf_trace_rpcb_unregister", 96),
STACK_USAGE("trace_event_raw_event_rpcb_unregister", 96),
STACK_USAGE("trace_raw_output_rpcb_unregister", 24),
STACK_USAGE("__bpf_trace_svc_xdr_msg_class", 0),
STACK_USAGE("perf_trace_svc_xdr_msg_class", 56),
STACK_USAGE("trace_event_raw_event_svc_xdr_msg_class", 72),
STACK_USAGE("trace_raw_output_svc_xdr_msg_class", 24),
STACK_USAGE("__traceiter_svc_xdr_recvfrom", 16),
STACK_USAGE("__bpf_trace_svc_xdr_buf_class", 0),
STACK_USAGE("perf_trace_svc_xdr_buf_class", 64),
STACK_USAGE("trace_event_raw_event_svc_xdr_buf_class", 80),
STACK_USAGE("trace_raw_output_svc_xdr_buf_class", 24),
STACK_USAGE("__traceiter_svc_xdr_sendto", 24),
STACK_USAGE("__bpf_trace_svc_authenticate", 0),
STACK_USAGE("__traceiter_svc_authenticate", 24),
STACK_USAGE("perf_trace_svc_authenticate", 88),
STACK_USAGE("trace_event_raw_event_svc_authenticate", 104),
STACK_USAGE("trace_raw_output_svc_authenticate", 64),
STACK_USAGE("__bpf_trace_svc_process", 0),
STACK_USAGE("__traceiter_svc_process", 24),
STACK_USAGE("perf_trace_svc_process", 112),
STACK_USAGE("trace_event_raw_event_svc_process", 120),
STACK_USAGE("trace_raw_output_svc_process", 24),
STACK_USAGE("__bpf_trace_svc_rqst_event", 0),
STACK_USAGE("perf_trace_svc_rqst_event", 96),
STACK_USAGE("trace_event_raw_event_svc_rqst_event", 96),
STACK_USAGE("trace_raw_output_svc_rqst_event", 48),
STACK_USAGE("__traceiter_svc_defer", 16),
STACK_USAGE("__traceiter_svc_drop", 16),
STACK_USAGE("__bpf_trace_svc_rqst_status", 0),
STACK_USAGE("perf_trace_svc_rqst_status", 96),
STACK_USAGE("trace_event_raw_event_svc_rqst_status", 104),
STACK_USAGE("trace_raw_output_svc_rqst_status", 56),
STACK_USAGE("__bpf_trace_rpc_clnt_new_err", 0),
STACK_USAGE("__traceiter_rpc_clnt_new_err", 32),
STACK_USAGE("perf_trace_rpc_clnt_new_err", 104),
STACK_USAGE("trace_event_raw_event_rpc_clnt_new_err", 112),
STACK_USAGE("trace_raw_output_rpc_clnt_new_err", 24),
STACK_USAGE("__traceiter_svc_send", 24),
STACK_USAGE("__bpf_trace_svc_stats_latency", 0),
STACK_USAGE("__traceiter_svc_stats_latency", 16),
STACK_USAGE("perf_trace_svc_stats_latency", 96),
STACK_USAGE("trace_event_raw_event_svc_stats_latency", 104),
STACK_USAGE("trace_raw_output_svc_stats_latency", 24),
STACK_USAGE("__bpf_trace_svc_xprt_create_err", 0),
STACK_USAGE("__traceiter_svc_xprt_create_err", 48),
STACK_USAGE("perf_trace_svc_xprt_create_err", 128),
STACK_USAGE("trace_event_raw_event_svc_xprt_create_err", 136),
STACK_USAGE("trace_raw_output_svc_xprt_create_err", 24),
STACK_USAGE("__bpf_trace_svc_xprt_enqueue", 0),
STACK_USAGE("__traceiter_svc_xprt_enqueue", 24),
STACK_USAGE("perf_trace_svc_xprt_enqueue", 96),
STACK_USAGE("trace_event_raw_event_svc_xprt_enqueue", 104),
STACK_USAGE("trace_raw_output_svc_xprt_enqueue", 40),
STACK_USAGE("__bpf_trace_svc_xprt_dequeue", 0),
STACK_USAGE("__traceiter_svc_xprt_dequeue", 16),
STACK_USAGE("perf_trace_svc_xprt_dequeue", 88),
STACK_USAGE("trace_event_raw_event_svc_xprt_dequeue", 96),
STACK_USAGE("trace_raw_output_svc_xprt_dequeue", 40),
STACK_USAGE("__bpf_trace_svc_xprt_event", 0),
STACK_USAGE("perf_trace_svc_xprt_event", 88),
STACK_USAGE("trace_event_raw_event_svc_xprt_event", 96),
STACK_USAGE("trace_raw_output_svc_xprt_event", 40),
STACK_USAGE("__traceiter_svc_xprt_no_write_space", 16),
STACK_USAGE("__traceiter_svc_xprt_close", 16),
STACK_USAGE("__traceiter_svc_xprt_detach", 16),
STACK_USAGE("__traceiter_svc_xprt_free", 16),
STACK_USAGE("__bpf_trace_svc_xprt_accept", 0),
STACK_USAGE("__traceiter_svc_xprt_accept", 24),
STACK_USAGE("perf_trace_svc_xprt_accept", 120),
STACK_USAGE("trace_event_raw_event_svc_xprt_accept", 128),
STACK_USAGE("trace_raw_output_svc_xprt_accept", 40),
STACK_USAGE("__bpf_trace_svc_wake_up", 0),
STACK_USAGE("__traceiter_svc_wake_up", 16),
STACK_USAGE("perf_trace_svc_wake_up", 56),
STACK_USAGE("trace_event_raw_event_svc_wake_up", 72),
STACK_USAGE("trace_raw_output_svc_wake_up", 24),
STACK_USAGE("__bpf_trace_svc_alloc_arg_err", 0),
STACK_USAGE("__traceiter_svc_alloc_arg_err", 16),
STACK_USAGE("perf_trace_svc_alloc_arg_err", 56),
STACK_USAGE("trace_event_raw_event_svc_alloc_arg_err", 72),
STACK_USAGE("trace_raw_output_svc_alloc_arg_err", 24),
STACK_USAGE("__bpf_trace_rpc_clnt_clone_err", 0),
STACK_USAGE("__traceiter_rpc_clnt_clone_err", 24),
STACK_USAGE("perf_trace_rpc_clnt_clone_err", 64),
STACK_USAGE("trace_event_raw_event_rpc_clnt_clone_err", 80),
STACK_USAGE("trace_raw_output_rpc_clnt_clone_err", 24),
STACK_USAGE("__bpf_trace_svc_deferred_event", 0),
STACK_USAGE("perf_trace_svc_deferred_event", 64),
STACK_USAGE("trace_event_raw_event_svc_deferred_event", 72),
STACK_USAGE("trace_raw_output_svc_deferred_event", 24),
STACK_USAGE("__traceiter_svc_defer_drop", 16),
STACK_USAGE("__traceiter_svc_defer_queue", 16),
STACK_USAGE("__traceiter_svc_defer_recv", 16),
STACK_USAGE("__bpf_trace_svcsock_new_socket", 0),
STACK_USAGE("__traceiter_svcsock_new_socket", 16),
STACK_USAGE("perf_trace_svcsock_new_socket", 56),
STACK_USAGE("trace_event_raw_event_svcsock_new_socket", 72),
STACK_USAGE("trace_raw_output_svcsock_new_socket", 40),
STACK_USAGE("__bpf_trace_svcsock_marker", 0),
STACK_USAGE("__traceiter_svcsock_marker", 24),
STACK_USAGE("perf_trace_svcsock_marker", 88),
STACK_USAGE("trace_event_raw_event_svcsock_marker", 88),
STACK_USAGE("trace_raw_output_svcsock_marker", 24),
STACK_USAGE("__bpf_trace_svcsock_class", 0),
STACK_USAGE("perf_trace_svcsock_class", 96),
STACK_USAGE("trace_event_raw_event_svcsock_class", 96),
STACK_USAGE("trace_raw_output_svcsock_class", 40),
STACK_USAGE("__traceiter_svcsock_udp_send", 24),
STACK_USAGE("__traceiter_svcsock_udp_recv", 24),
STACK_USAGE("__traceiter_svcsock_udp_recv_err", 24),
STACK_USAGE("__traceiter_svcsock_tcp_send", 24),
STACK_USAGE("__traceiter_svcsock_tcp_recv", 24),
STACK_USAGE("__traceiter_svcsock_tcp_recv_eagain", 24),
STACK_USAGE("__traceiter_svcsock_tcp_recv_err", 24),
STACK_USAGE("__traceiter_svcsock_data_ready", 24),
STACK_USAGE("__traceiter_svcsock_write_space", 24),
STACK_USAGE("__bpf_trace_svcsock_tcp_recv_short", 0),
STACK_USAGE("__traceiter_svcsock_tcp_recv_short", 32),
STACK_USAGE("perf_trace_svcsock_tcp_recv_short", 104),
STACK_USAGE("trace_event_raw_event_svcsock_tcp_recv_short", 104),
STACK_USAGE("trace_raw_output_svcsock_tcp_recv_short", 32),
STACK_USAGE("__bpf_trace_svcsock_tcp_state", 0),
STACK_USAGE("__traceiter_svcsock_tcp_state", 24),
STACK_USAGE("perf_trace_svcsock_tcp_state", 96),
STACK_USAGE("trace_event_raw_event_svcsock_tcp_state", 96),
STACK_USAGE("trace_raw_output_svcsock_tcp_state", 56),
STACK_USAGE("__bpf_trace_svcsock_accept_class", 0),
STACK_USAGE("perf_trace_svcsock_accept_class", 96),
STACK_USAGE("trace_event_raw_event_svcsock_accept_class", 112),
STACK_USAGE("trace_raw_output_svcsock_accept_class", 24),
STACK_USAGE("__traceiter_svcsock_accept_err", 32),
STACK_USAGE("__traceiter_svcsock_getpeername_err", 32),
STACK_USAGE("__bpf_trace_cache_event", 0),
STACK_USAGE("perf_trace_cache_event", 88),
STACK_USAGE("trace_event_raw_event_cache_event", 96),
STACK_USAGE("trace_raw_output_cache_event", 24),
STACK_USAGE("__traceiter_cache_entry_expired", 24),
STACK_USAGE("__traceiter_cache_entry_upcall", 24),
STACK_USAGE("__traceiter_cache_entry_update", 24),
STACK_USAGE("__traceiter_cache_entry_make_negative", 24),
STACK_USAGE("__traceiter_cache_entry_no_listener", 24),
STACK_USAGE("__bpf_trace_register_class", 0),
STACK_USAGE("perf_trace_register_class", 104),
STACK_USAGE("trace_event_raw_event_register_class", 112),
STACK_USAGE("trace_raw_output_register_class", 56),
STACK_USAGE("__traceiter_svc_register", 48),
STACK_USAGE("__traceiter_svc_noregister", 48),
STACK_USAGE("__bpf_trace_svc_unregister", 0),
STACK_USAGE("__traceiter_svc_unregister", 32),
STACK_USAGE("perf_trace_svc_unregister", 96),
STACK_USAGE("trace_event_raw_event_svc_unregister", 96),
STACK_USAGE("trace_raw_output_svc_unregister", 24),
STACK_USAGE("__rpc_init_priority_wait_queue", 24),
STACK_USAGE("__bpf_trace_rpc_task_status", 0),
STACK_USAGE("perf_trace_rpc_task_status", 56),
STACK_USAGE("trace_event_raw_event_rpc_task_status", 72),
STACK_USAGE("trace_raw_output_rpc_task_status", 24),
STACK_USAGE("rpc_init_priority_wait_queue", 0),
STACK_USAGE("rpc_init_wait_queue", 0),
STACK_USAGE("rpc_destroy_wait_queue", 0),
STACK_USAGE("rpc_wait_bit_killable", 16),
STACK_USAGE("__traceiter_rpc_call_status", 16),
STACK_USAGE("__traceiter_rpc_connect_status", 16),
STACK_USAGE("__traceiter_rpc_timeout_status", 16),
STACK_USAGE("__traceiter_rpc_retry_refresh_status", 16),
STACK_USAGE("__traceiter_rpc_refresh_status", 16),
STACK_USAGE("__bpf_trace_rpc_request", 0),
STACK_USAGE("__traceiter_rpc_request", 16),
STACK_USAGE("perf_trace_rpc_request", 88),
STACK_USAGE("trace_event_raw_event_rpc_request", 96),
STACK_USAGE("trace_raw_output_rpc_request", 24),
STACK_USAGE("__bpf_trace_rpc_task_running", 0),
STACK_USAGE("perf_trace_rpc_task_running", 64),
STACK_USAGE("trace_event_raw_event_rpc_task_running", 80),
STACK_USAGE("trace_raw_output_rpc_task_running", 64),
STACK_USAGE("__rpc_wait_for_completion_task", 0),
STACK_USAGE("__rpc_do_sleep_on_priority", 24),
STACK_USAGE("__traceiter_rpc_task_begin", 24),
STACK_USAGE("__traceiter_rpc_task_run_action", 24),
STACK_USAGE("__traceiter_rpc_task_sync_sleep", 24),
STACK_USAGE("__traceiter_rpc_task_sync_wake", 24),
STACK_USAGE("__traceiter_rpc_task_complete", 24),
STACK_USAGE("__traceiter_rpc_task_timeout", 24),
STACK_USAGE("__traceiter_rpc_task_signalled", 24),
STACK_USAGE("trace_rpc_task_signalled", 0),
STACK_USAGE("__traceiter_rpc_task_end", 24),
STACK_USAGE("__traceiter_rpc_task_call_done", 24),
STACK_USAGE("__bpf_trace_rpc_task_queued", 0),
STACK_USAGE("perf_trace_rpc_task_queued", 88),
STACK_USAGE("trace_event_raw_event_rpc_task_queued", 88),
STACK_USAGE("trace_raw_output_rpc_task_queued", 56),
STACK_USAGE("rpc_sleep_on_timeout", 32),
STACK_USAGE("__traceiter_rpc_task_sleep", 24),
STACK_USAGE("__traceiter_rpc_task_wakeup", 24),
STACK_USAGE("__bpf_trace_rpc_failure", 0),
STACK_USAGE("perf_trace_rpc_failure", 56),
STACK_USAGE("trace_event_raw_event_rpc_failure", 72),
STACK_USAGE("trace_raw_output_rpc_failure", 24),
STACK_USAGE("rpc_sleep_on", 16),
STACK_USAGE("rpc_sleep_on_priority_timeout", 32),
STACK_USAGE("__traceiter_rpc_bad_callhdr", 16),
STACK_USAGE("__traceiter_rpc_bad_verifier", 16),
STACK_USAGE("__bpf_trace_rpc_reply_event", 0),
STACK_USAGE("perf_trace_rpc_reply_event", 104),
STACK_USAGE("trace_event_raw_event_rpc_reply_event", 120),
STACK_USAGE("trace_raw_output_rpc_reply_event", 24),
STACK_USAGE("rpc_sleep_on_priority", 24),
STACK_USAGE("__traceiter_rpc__prog_unavail", 16),
STACK_USAGE("__traceiter_rpc__prog_mismatch", 16),
STACK_USAGE("__traceiter_rpc__proc_unavail", 16),
STACK_USAGE("__traceiter_rpc__garbage_args", 16),
STACK_USAGE("__traceiter_rpc__unparsable", 16),
STACK_USAGE("__traceiter_rpc__mismatch", 16),
STACK_USAGE("__traceiter_rpc__stale_creds", 16),
STACK_USAGE("__traceiter_rpc__bad_creds", 16),
STACK_USAGE("__traceiter_rpc__auth_tooweak", 16),
STACK_USAGE("rpc_wake_up_task_on_wq_queue_action_locked", 48),
STACK_USAGE("__traceiter_rpcb_prog_unavail_err", 16),
STACK_USAGE("__traceiter_rpcb_timeout_err", 16),
STACK_USAGE("__traceiter_rpcb_bind_version_err", 16),
STACK_USAGE("__traceiter_rpcb_unreachable_err", 16),
STACK_USAGE("__traceiter_rpcb_unrecognized_err", 16),
STACK_USAGE("__bpf_trace_rpc_buf_alloc", 0),
STACK_USAGE("__traceiter_rpc_buf_alloc", 24),
STACK_USAGE("perf_trace_rpc_buf_alloc", 64),
STACK_USAGE("trace_event_raw_event_rpc_buf_alloc", 80),
STACK_USAGE("trace_raw_output_rpc_buf_alloc", 24),
STACK_USAGE("__bpf_trace_rpc_xdr_buf_class", 0),
STACK_USAGE("perf_trace_rpc_xdr_buf_class", 64),
STACK_USAGE("trace_event_raw_event_rpc_xdr_buf_class", 80),
STACK_USAGE("trace_raw_output_rpc_xdr_buf_class", 24),
STACK_USAGE("rpc_wake_up_queued_task", 16),
STACK_USAGE("__bpf_trace_rpc_call_rpcerror", 0),
STACK_USAGE("__traceiter_rpc_call_rpcerror", 32),
STACK_USAGE("perf_trace_rpc_call_rpcerror", 72),
STACK_USAGE("rpc_task_action_set_status", 0),
STACK_USAGE("trace_event_raw_event_rpc_call_rpcerror", 88),
STACK_USAGE("trace_raw_output_rpc_call_rpcerror", 24),
STACK_USAGE("rpc_wake_up_queued_task_set_status", 40),
STACK_USAGE("__bpf_trace_rpc_stats_latency", 0),
STACK_USAGE("__traceiter_rpc_stats_latency", 40),
STACK_USAGE("perf_trace_rpc_stats_latency", 120),
STACK_USAGE("trace_event_raw_event_rpc_stats_latency", 128),
STACK_USAGE("trace_raw_output_rpc_stats_latency", 24),
STACK_USAGE("rpc_task_gfp_mask", 0),
STACK_USAGE("__bpf_trace_rpc_xdr_overflow", 0),
STACK_USAGE("__traceiter_rpc_xdr_overflow", 24),
STACK_USAGE("perf_trace_rpc_xdr_overflow", 96),
STACK_USAGE("trace_event_raw_event_rpc_xdr_overflow", 112),
STACK_USAGE("trace_raw_output_rpc_xdr_overflow", 24),
STACK_USAGE("rpc_wake_up_first_on_wq", 40),
STACK_USAGE("rpc_wake_up_first", 0),
STACK_USAGE("rpc_wake_up_next_func", 0),
STACK_USAGE("rpc_task_timeout", 0),
STACK_USAGE("rpc_wake_up_next", 0),
STACK_USAGE("__bpf_trace_rpc_xdr_alignment", 0),
STACK_USAGE("__traceiter_rpc_xdr_alignment", 32),
STACK_USAGE("perf_trace_rpc_xdr_alignment", 104),
STACK_USAGE("trace_event_raw_event_rpc_xdr_alignment", 112),
STACK_USAGE("trace_raw_output_rpc_xdr_alignment", 32),
STACK_USAGE("rpc_wake_up", 24),
STACK_USAGE("rpc_wake_up_status", 56),
STACK_USAGE("__rpc_queue_timer_fn", 64),
STACK_USAGE("__rpc_atrun", 0),
STACK_USAGE("rpc_delay", 0),
STACK_USAGE("rpc_prepare_task", 0),
STACK_USAGE("__bpf_trace_xs_socket_event", 0),
STACK_USAGE("perf_trace_xs_socket_event", 56),
STACK_USAGE("trace_event_raw_event_xs_socket_event", 72),
STACK_USAGE("trace_raw_output_xs_socket_event", 80),
STACK_USAGE("rpc_exit_task", 8),
STACK_USAGE("rpc_signal_task", 32),
STACK_USAGE("__bpf_trace_xs_socket_event_done", 0),
STACK_USAGE("perf_trace_xs_socket_event_done", 64),
STACK_USAGE("trace_event_raw_event_xs_socket_event_done", 80),
STACK_USAGE("trace_raw_output_xs_socket_event_done", 88),
STACK_USAGE("rpc_exit", 16),
STACK_USAGE("rpc_release_calldata", 0),
STACK_USAGE("__rpc_execute", 88),
STACK_USAGE("__traceiter_rpc_socket_state_change", 24),
STACK_USAGE("__traceiter_rpc_socket_connect", 32),
STACK_USAGE("__traceiter_rpc_socket_error", 32),
STACK_USAGE("__traceiter_rpc_socket_reset_connection", 32),
STACK_USAGE("__traceiter_rpc_socket_close", 24),
STACK_USAGE("__traceiter_rpc_socket_shutdown", 24),
STACK_USAGE("__bpf_trace_rpc_socket_nospace", 0),
STACK_USAGE("__traceiter_rpc_socket_nospace", 24),
STACK_USAGE("perf_trace_rpc_socket_nospace", 64),
STACK_USAGE("trace_event_raw_event_rpc_socket_nospace", 80),
STACK_USAGE("trace_raw_output_rpc_socket_nospace", 24),
STACK_USAGE("__bpf_trace_rpc_xprt_lifetime_class", 0),
STACK_USAGE("perf_trace_rpc_xprt_lifetime_class", 96),
STACK_USAGE("trace_event_raw_event_rpc_xprt_lifetime_class", 96),
STACK_USAGE("trace_raw_output_rpc_xprt_lifetime_class", 40),
STACK_USAGE("rpc_execute", 40),
STACK_USAGE("csum_partial_copy_to_xdr", 64),
STACK_USAGE("xprt_sock_sendmsg", 136),
STACK_USAGE("xdr_skb_read_bits", 16),
STACK_USAGE("xdr_skb_read_and_csum_bits", 32),
STACK_USAGE("xdr_partial_copy_from_skb", 80),
STACK_USAGE("rpc_alloc_iostats", 24),
STACK_USAGE("rpc_free_iostats", 0),
STACK_USAGE("rpc_count_iostats_metrics", 40),
STACK_USAGE("rpc_count_iostats", 0),
STACK_USAGE("do_print_stats", 0),
STACK_USAGE("rpc_clnt_show_stats", 104),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("rpc_proc_register", 16),
STACK_USAGE("rpc_proc_unregister", 8),
STACK_USAGE("svc_proc_register", 24),
STACK_USAGE("svc_proc_unregister", 8),
STACK_USAGE("rpc_proc_init", 16),
STACK_USAGE("rpc_proc_exit", 0),
STACK_USAGE("rpc_proc_show", 40),
STACK_USAGE("net_generic", 16),
STACK_USAGE("rpc_proc_open", 0),
STACK_USAGE("svc_seq_show", 40),
STACK_USAGE("cleanup_sunrpc", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("sunrpc_init_net", 24),
STACK_USAGE("net_generic", 16),
STACK_USAGE("sunrpc_exit_net", 16),
STACK_USAGE("init_sunrpc", 8),
STACK_USAGE("svc_rpcbind_set_version", 96),
STACK_USAGE("svc_generic_rpcbind_set", 16),
STACK_USAGE("svc_register", 56),
STACK_USAGE("param_get_pool_mode", 0),
STACK_USAGE("svc_unregister", 48),
STACK_USAGE("svc_generic_init_request", 48),
STACK_USAGE("svc_process", 64),
STACK_USAGE("svc_max_payload", 0),
STACK_USAGE("svc_proc_name", 0),
STACK_USAGE("svc_encode_result_payload", 0),
STACK_USAGE("svc_fill_write_vector", 0),
STACK_USAGE("svc_fill_symlink_pathname", 48),
STACK_USAGE("svc_pool_for_cpu", 0),
STACK_USAGE("svc_rpcb_setup", 24),
STACK_USAGE("svc_rpcb_cleanup", 8),
STACK_USAGE("svc_bind", 16),
STACK_USAGE("__svc_create", 48),
STACK_USAGE("svc_create", 0),
STACK_USAGE("svc_create_pooled", 80),
STACK_USAGE("svc_destroy", 16),
STACK_USAGE("svc_rqst_alloc", 40),
STACK_USAGE("param_set_pool_mode", 24),
STACK_USAGE("svc_set_num_threads", 88),
STACK_USAGE("svc_rqst_replace_page", 16),
STACK_USAGE("svc_rqst_free", 16),
STACK_USAGE("svc_exit_thread", 32),
STACK_USAGE("svc_delete_xprt", 32),
STACK_USAGE("svc_xprt_close", 8),
STACK_USAGE("svc_xprt_destroy_all", 80),
STACK_USAGE("svc_revisit", 40),
STACK_USAGE("svc_defer", 24),
STACK_USAGE("svc_print_xprts", 152),
STACK_USAGE("svc_deferred_recv", 16),
STACK_USAGE("svc_find_xprt", 64),
STACK_USAGE("svc_xprt_names", 64),
STACK_USAGE("svc_pool_stats_start", 0),
STACK_USAGE("svc_pool_stats_next", 0),
STACK_USAGE("svc_pool_stats_stop", 0),
STACK_USAGE("svc_pool_stats_show", 0),
STACK_USAGE("svc_pool_stats_open", 16),
STACK_USAGE("svc_xprt_deferred_close", 0),
STACK_USAGE("svc_xprt_put", 24),
STACK_USAGE("svc_xprt_init", 32),
STACK_USAGE("trace_svc_wake_up", 0),
STACK_USAGE("memalloc_retry_wait", 0),
STACK_USAGE("svc_xprt_received", 8),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("svc_add_new_perm_xprt", 24),
STACK_USAGE("_svc_xprt_create", 120),
STACK_USAGE("svc_xprt_create", 48),
STACK_USAGE("svc_xprt_copy_addrs", 16),
STACK_USAGE("svc_print_addr", 8),
STACK_USAGE("svc_xprt_enqueue", 24),
STACK_USAGE("svc_reserve", 0),
STACK_USAGE("svc_xprt_release", 24),
STACK_USAGE("svc_wake_up", 16),
STACK_USAGE("svc_port_is_privileged", 0),
STACK_USAGE("svc_alloc_arg", 40),
STACK_USAGE("svc_get_next_xprt", 48),
STACK_USAGE("svc_reg_xprt_class", 32),
STACK_USAGE("svc_recv", 48),
STACK_USAGE("svc_drop", 8),
STACK_USAGE("svc_send", 16),
STACK_USAGE("svc_age_temp_xprts", 32),
STACK_USAGE("svc_age_temp_xprts_now", 96),
STACK_USAGE("svc_unreg_xprt_class", 8),
STACK_USAGE("svc_authorise", 16),
STACK_USAGE("svc_auth_register", 0),
STACK_USAGE("svc_auth_unregister", 0),
STACK_USAGE("auth_domain_put", 8),
STACK_USAGE("auth_domain_lookup", 40),
STACK_USAGE("auth_domain_find", 16),
STACK_USAGE("auth_domain_cleanup", 16),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("svc_authenticate", 24),
STACK_USAGE("svc_set_client", 0),
STACK_USAGE("ip_map_put", 16),
STACK_USAGE("ip_map_match", 16),
STACK_USAGE("ip_map_init", 16),
STACK_USAGE("update", 16),
STACK_USAGE("ip_map_alloc", 0),
STACK_USAGE("ip_map_upcall", 0),
STACK_USAGE("ip_map_request", 88),
STACK_USAGE("ip_map_parse", 248),
STACK_USAGE("cache_put", 0),
STACK_USAGE("ip_map_show", 24),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("__ip_map_update", 120),
STACK_USAGE("svcauth_unix_purge", 0),
STACK_USAGE("svcauth_unix_info_release", 8),
STACK_USAGE("net_generic", 16),
STACK_USAGE("unix_gid_put", 16),
STACK_USAGE("unix_gid_match", 0),
STACK_USAGE("svcauth_unix_domain_release_rcu", 8),
STACK_USAGE("unix_gid_init", 0),
STACK_USAGE("unix_gid_update", 0),
STACK_USAGE("unix_gid_alloc", 0),
STACK_USAGE("unix_gid_upcall", 0),
STACK_USAGE("unix_gid_request", 72),
STACK_USAGE("unix_gid_parse", 248),
STACK_USAGE("svcauth_unix_domain_release", 0),
STACK_USAGE("unix_gid_show", 40),
STACK_USAGE("unix_domain_find", 24),
STACK_USAGE("unix_gid_cache_create", 32),
STACK_USAGE("unix_gid_cache_destroy", 16),
STACK_USAGE("unix_gid_lookup", 96),
STACK_USAGE("svcauth_unix_set_client", 208),
STACK_USAGE("svcauth_null_accept", 8),
STACK_USAGE("svcauth_null_release", 8),
STACK_USAGE("svcauth_tls_accept", 8),
STACK_USAGE("svcauth_unix_accept", 40),
STACK_USAGE("svcauth_unix_release", 8),
STACK_USAGE("ip_map_cache_create", 32),
STACK_USAGE("ip_map_cache_destroy", 16),
STACK_USAGE("svc_tcp_sendto", 200),
STACK_USAGE("svc_tcp_release_rqst", 0),
STACK_USAGE("svc_tcp_create", 0),
STACK_USAGE("svc_init_xprt_sock", 0),
STACK_USAGE("svc_cleanup_xprt_sock", 0),
STACK_USAGE("svc_sock_update_bufs", 16),
STACK_USAGE("svc_setup_socket", 48),
STACK_USAGE("svc_alien_sock", 24),
STACK_USAGE("svc_udp_release_rqst", 0),
STACK_USAGE("svc_addsock", 192),
STACK_USAGE("svc_create_socket", 208),
STACK_USAGE("svc_sock_detach", 16),
STACK_USAGE("svc_tcp_sock_detach", 24),
STACK_USAGE("svc_sock_free", 8),
STACK_USAGE("svc_sock_result_payload", 0),
STACK_USAGE("local_bh_disable", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("svc_sock_secure_port", 8),
STACK_USAGE("local_bh_enable", 0),
STACK_USAGE("svc_data_ready", 8),
STACK_USAGE("svc_write_space", 16),
STACK_USAGE("svc_tcp_has_wspace", 0),
STACK_USAGE("svc_tcp_kill_temp_xprt", 0),
STACK_USAGE("svc_udp_recvfrom", 216),
STACK_USAGE("svc_udp_sendto", 184),
STACK_USAGE("svc_udp_has_wspace", 0),
STACK_USAGE("svc_udp_accept", 0),
STACK_USAGE("svc_udp_kill_temp_xprt", 0),
STACK_USAGE("svc_udp_create", 0),
STACK_USAGE("svc_tcp_listen_data_ready", 16),
STACK_USAGE("svc_tcp_state_change", 16),
STACK_USAGE("svc_tcp_accept", 176),
STACK_USAGE("svc_tcp_recvfrom", 184),
STACK_USAGE("rpc_sysfs_xprt_srcaddr_show", 24),
STACK_USAGE("rpc_sysfs_xprt_info_show", 64),
STACK_USAGE("rpc_sysfs_xprt_state_show", 56),
STACK_USAGE("free_xprt_addr", 8),
STACK_USAGE("rpc_sysfs_xprt_switch_info_show", 16),
STACK_USAGE("rpc_sysfs_xprt_dstaddr_store", 56),
STACK_USAGE("rpc_sysfs_xprt_state_change", 64),
STACK_USAGE("rpc_sysfs_object_release", 0),
STACK_USAGE("rpc_sysfs_object_child_ns_type", 0),
STACK_USAGE("rpc_sysfs_init", 24),
STACK_USAGE("rpc_sysfs_client_release", 0),
STACK_USAGE("rpc_sysfs_xprt_switch_release", 0),
STACK_USAGE("rpc_sysfs_xprt_release", 0),
STACK_USAGE("rpc_sysfs_client_namespace", 0),
STACK_USAGE("rpc_sysfs_xprt_switch_namespace", 0),
STACK_USAGE("rpc_sysfs_xprt_namespace", 0),
STACK_USAGE("rpc_sysfs_exit", 0),
STACK_USAGE("rpc_sysfs_client_setup", 64),
STACK_USAGE("rpc_sysfs_xprt_switch_setup", 40),
STACK_USAGE("rpc_sysfs_xprt_setup", 32),
STACK_USAGE("rpc_sysfs_client_destroy", 32),
STACK_USAGE("rpc_sysfs_xprt_switch_destroy", 16),
STACK_USAGE("rpc_sysfs_xprt_destroy", 16),
STACK_USAGE("rpc_sysfs_xprt_dstaddr_show", 16),
STACK_USAGE("rpc_calc_rto", 0),
STACK_USAGE("rpc_init_rtt", 0),
STACK_USAGE("rpc_update_rtt", 0),
STACK_USAGE("xdr_reserve_space", 40),
STACK_USAGE("xdr_reserve_space_vec", 72),
STACK_USAGE("xdr_decode_string_inplace", 0),
STACK_USAGE("xdr_truncate_encode", 40),
STACK_USAGE("xdr_restrict_buflen", 0),
STACK_USAGE("xdr_write_pages", 0),
STACK_USAGE("xdr_set_page", 0),
STACK_USAGE("xdr_terminate_string", 24),
STACK_USAGE("xdr_set_next_buffer", 8),
STACK_USAGE("xdr_init_decode", 8),
STACK_USAGE("xdr_init_decode_pages", 0),
STACK_USAGE("xdr_buf_pagecount", 0),
STACK_USAGE("xdr_inline_decode", 40),
STACK_USAGE("xdr_align_pages", 40),
STACK_USAGE("xdr_read_pages", 24),
STACK_USAGE("xdr_alloc_bvec", 16),
STACK_USAGE("xdr_align_data", 152),
STACK_USAGE("xdr_expand_hole", 64),
STACK_USAGE("xdr_enter_page", 8),
STACK_USAGE("xdr_buf_from_iov", 0),
STACK_USAGE("xdr_buf_subsegment", 0),
STACK_USAGE("xdr_free_bvec", 8),
STACK_USAGE("xdr_stream_subsegment", 32),
STACK_USAGE("xdr_buf_trim", 0),
STACK_USAGE("read_bytes_from_xdr_buf", 96),
STACK_USAGE("write_bytes_to_xdr_buf", 104),
STACK_USAGE("xdr_decode_word", 24),
STACK_USAGE("xdr_inline_pages", 0),
STACK_USAGE("xdr_encode_word", 16),
STACK_USAGE("xdr_xcode_array2", 128),
STACK_USAGE("xdr_decode_array2", 0),
STACK_USAGE("xdr_encode_array2", 0),
STACK_USAGE("xdr_process_buf", 120),
STACK_USAGE("xdr_stream_decode_opaque", 40),
STACK_USAGE("xdr_stream_decode_opaque_dup", 48),
STACK_USAGE("xdr_stream_decode_string", 40),
STACK_USAGE("xdr_stream_decode_string_dup", 48),
STACK_USAGE("xdr_encode_netobj", 16),
STACK_USAGE("_copy_from_pages", 64),
STACK_USAGE("xdr_decode_netobj", 0),
STACK_USAGE("xdr_buf_try_expand", 64),
STACK_USAGE("trace_rpc_xdr_overflow", 0),
STACK_USAGE("xdr_buf_pages_shift_right", 104),
STACK_USAGE("xdr_buf_tail_copy_left", 96),
STACK_USAGE("xdr_encode_opaque_fixed", 40),
STACK_USAGE("trace_rpc_xdr_alignment", 0),
STACK_USAGE("xdr_shrink_bufhead", 104),
STACK_USAGE("xdr_shift_buf", 0),
STACK_USAGE("xdr_stream_pos", 0),
STACK_USAGE("xdr_page_pos", 0),
STACK_USAGE("xdr_init_encode", 0),
STACK_USAGE("xdr_encode_opaque", 40),
STACK_USAGE("xdr_commit_encode", 24),
STACK_USAGE("xdr_get_next_encode_buffer", 0),
STACK_USAGE("xdr_encode_string", 40),
STACK_USAGE("xprt_register_transport", 8),
STACK_USAGE("trace_xprt_lookup_rqst", 0),
STACK_USAGE("trace_xprt_transmit", 0),
STACK_USAGE("xprt_lookup_rqst", 24),
STACK_USAGE("xprt_pin_rqst", 0),
STACK_USAGE("xprt_unpin_rqst", 0),
STACK_USAGE("xprt_request_enqueue_receive", 40),
STACK_USAGE("xprt_update_rtt", 24),
STACK_USAGE("xprt_complete_rqst", 16),
STACK_USAGE("xprt_timer", 24),
STACK_USAGE("xprt_wait_for_reply_request_def", 0),
STACK_USAGE("xprt_wait_for_reply_request_rtt", 40),
STACK_USAGE("xprt_request_wait_receive", 24),
STACK_USAGE("xprt_request_enqueue_transmit", 40),
STACK_USAGE("xprt_unregister_transport", 8),
STACK_USAGE("xprt_request_dequeue_xprt", 120),
STACK_USAGE("xprt_request_need_retransmit", 0),
STACK_USAGE("xprt_prepare_transmit", 32),
STACK_USAGE("xprt_end_transmit", 24),
STACK_USAGE("xprt_transmit", 96),
STACK_USAGE("xprt_complete_request_init", 0),
STACK_USAGE("xprt_add_backlog", 0),
STACK_USAGE("__xprt_set_rq", 24),
STACK_USAGE("xprt_wake_up_backlog", 8),
STACK_USAGE("xprt_alloc_slot", 32),
STACK_USAGE("xprt_free_slot", 24),
STACK_USAGE("xprt_cleanup_ids", 0),
STACK_USAGE("xprt_alloc", 48),
STACK_USAGE("xprt_free", 32),
STACK_USAGE("xprt_request_init", 40),
STACK_USAGE("xprt_reserve", 24),
STACK_USAGE("xprt_retry_reserve", 8),
STACK_USAGE("xprt_release", 32),
STACK_USAGE("xprt_create_transport", 40),
STACK_USAGE("xprt_destroy_cb", 16),
STACK_USAGE("xprt_destroy", 16),
STACK_USAGE("xprt_get", 16),
STACK_USAGE("xprt_put", 0),
STACK_USAGE("xprt_find_transport_ident", 32),
STACK_USAGE("xprt_reserve_xprt", 24),
STACK_USAGE("xprt_reserve_xprt_cong", 24),
STACK_USAGE("__xprt_lock_write_func", 0),
STACK_USAGE("xprt_release_xprt", 16),
STACK_USAGE("xprt_release_xprt_cong", 16),
STACK_USAGE("xprt_release_write", 24),
STACK_USAGE("__xprt_put_cong", 8),
STACK_USAGE("xprt_request_get_cong", 32),
STACK_USAGE("xprt_release_rqst_cong", 0),
STACK_USAGE("xprt_adjust_cwnd", 24),
STACK_USAGE("xprt_wake_pending_tasks", 0),
STACK_USAGE("xprt_wait_for_buffer_space", 0),
STACK_USAGE("xprt_write_space", 24),
STACK_USAGE("xprt_adjust_timeout", 24),
STACK_USAGE("xprt_autoclose", 48),
STACK_USAGE("xprt_disconnect_done", 16),
STACK_USAGE("xprt_force_disconnect", 16),
STACK_USAGE("xprt_conditional_disconnect", 24),
STACK_USAGE("xprt_init_autodisconnect", 0),
STACK_USAGE("xprt_lock_connect", 32),
STACK_USAGE("xprt_unlock_connect", 24),
STACK_USAGE("xprt_connect", 40),
STACK_USAGE("xprt_reconnect_delay", 0),
STACK_USAGE("xprt_reconnect_backoff", 0),
STACK_USAGE("xprt_switch_alloc", 32),
STACK_USAGE("xprt_switch_get", 16),
STACK_USAGE("xprt_switch_put", 32),
STACK_USAGE("rpc_xprt_switch_set_roundrobin", 0),
STACK_USAGE("xprt_iter_no_rewind", 0),
STACK_USAGE("xprt_iter_default_rewind", 0),
STACK_USAGE("xprt_iter_first_entry", 8),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("xprt_iter_current_entry", 16),
STACK_USAGE("rpc_xprt_switch_has_addr", 48),
STACK_USAGE("xprt_iter_next_entry_roundrobin", 24),
STACK_USAGE("xprt_iter_next_entry_all", 16),
STACK_USAGE("xprt_iter_init", 24),
STACK_USAGE("xprt_iter_init_listall", 24),
STACK_USAGE("xprt_iter_xchg_switch", 24),
STACK_USAGE("xprt_iter_destroy", 0),
STACK_USAGE("xprt_iter_xprt", 16),
STACK_USAGE("rpc_xprt_switch_add_xprt", 16),
STACK_USAGE("xprt_iter_get_xprt", 24),
STACK_USAGE("xprt_iter_get_next", 24),
STACK_USAGE("rpc_xprt_switch_remove_xprt", 16),
STACK_USAGE("xprt_multipath_cleanup_ids", 0),
STACK_USAGE("xs_tcp_send_request", 304),
STACK_USAGE("xs_error_report", 8),
STACK_USAGE("xs_reset_transport", 48),
STACK_USAGE("xs_close", 8),
STACK_USAGE("xs_inject_disconnect", 0),
STACK_USAGE("xs_destroy", 8),
STACK_USAGE("xs_udp_data_receive_workfn", 128),
STACK_USAGE("xs_data_ready", 8),
STACK_USAGE("xs_local_state_change", 0),
STACK_USAGE("xs_tcp_state_change", 16),
STACK_USAGE("xs_udp_write_space", 8),
STACK_USAGE("xs_tcp_write_space", 8),
STACK_USAGE("xs_udp_set_buffer_size", 0),
STACK_USAGE("xs_udp_timer", 24),
STACK_USAGE("xs_set_port", 8),
STACK_USAGE("xs_sock_srcport", 160),
STACK_USAGE("xs_sock_srcaddr", 168),
STACK_USAGE("xs_local_rpcbind", 0),
STACK_USAGE("xs_local_set_port", 0),
STACK_USAGE("xs_reclassify_socket", 16),
STACK_USAGE("xs_dummy_setup_socket", 0),
STACK_USAGE("xs_create_sock", 192),
STACK_USAGE("xs_local_connect", 48),
STACK_USAGE("xs_enable_swap", 0),
STACK_USAGE("xs_disable_swap", 0),
STACK_USAGE("xs_udp_setup_socket", 48),
STACK_USAGE("xs_tcp_shutdown", 16),
STACK_USAGE("xs_tcp_set_socket_timeouts", 48),
STACK_USAGE("xs_tcp_set_connect_timeout", 32),
STACK_USAGE("xs_tcp_setup_socket", 48),
STACK_USAGE("xs_connect", 16),
STACK_USAGE("xs_error_handle", 24),
STACK_USAGE("xs_local_print_stats", 0),
STACK_USAGE("xs_udp_print_stats", 0),
STACK_USAGE("xs_tcp_print_stats", 0),
STACK_USAGE("bc_malloc", 16),
STACK_USAGE("bc_free", 0),
STACK_USAGE("bc_send_request", 160),
STACK_USAGE("bc_close", 0),
STACK_USAGE("bc_destroy", 8),
STACK_USAGE("xs_setup_local", 24),
STACK_USAGE("xs_format_common_peer_ports", 168),
STACK_USAGE("xs_setup_udp", 24),
STACK_USAGE("xs_setup_tcp", 24),
STACK_USAGE("xs_format_peer_addresses", 168),
STACK_USAGE("xs_setup_bc_tcp", 32),
STACK_USAGE("init_socket_xprt", 0),
STACK_USAGE("cleanup_socket_xprt", 0),
STACK_USAGE("param_set_portnr", 0),
STACK_USAGE("param_set_slot_table_size", 0),
STACK_USAGE("param_set_max_slot_table_size", 0),
STACK_USAGE("xs_stream_data_receive_workfn", 304),
STACK_USAGE("xs_nospace", 32),
STACK_USAGE("xs_stream_nospace", 32),
STACK_USAGE("xs_stream_prepare_request", 16),
STACK_USAGE("xs_local_send_request", 160),
STACK_USAGE("trace_rpc_socket_connect", 0),
STACK_USAGE("xs_udp_send_request", 144),
STACK_USAGE("register_net_sysctl", 48),
STACK_USAGE("unregister_net_sysctl_table", 0),
STACK_USAGE("net_ctl_header_lookup", 0),
STACK_USAGE("is_seen", 0),
STACK_USAGE("net_ctl_permissions", 8),
STACK_USAGE("net_ctl_set_ownership", 24),
STACK_USAGE("sysctl_net_init", 0),
STACK_USAGE("sysctl_net_exit", 0),
STACK_USAGE("net_sysctl_init", 8),
STACK_USAGE("tls_unregister", 0),
STACK_USAGE("tls_push_sg", 72),
STACK_USAGE("tls_proccess_cmsg", 32),
STACK_USAGE("tls_push_partial_record", 0),
STACK_USAGE("tls_free_partial_record", 32),
STACK_USAGE("tls_write_space", 16),
STACK_USAGE("tls_ctx_free", 16),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("tls_sk_proto_close", 80),
STACK_USAGE("tls_getsockopt", 48),
STACK_USAGE("update_sk_prot", 0),
STACK_USAGE("tls_setsockopt", 64),
STACK_USAGE("tls_ctx_create", 16),
STACK_USAGE("wait_on_pending_writer", 88),
STACK_USAGE("tls_init", 32),
STACK_USAGE("tls_update", 0),
STACK_USAGE("tls_get_info", 48),
STACK_USAGE("tls_get_info_size", 0),
STACK_USAGE("tls_init_net", 16),
STACK_USAGE("tls_exit_net", 8),
STACK_USAGE("tls_register", 8),
STACK_USAGE("tls_statistics_seq_show", 104),
STACK_USAGE("tls_proc_init", 8),
STACK_USAGE("tls_proc_fini", 0),
STACK_USAGE("tls_sw_do_sendpage", 136),
STACK_USAGE("tls_sw_sendpage_locked", 0),
STACK_USAGE("tls_sw_sendpage", 48),
STACK_USAGE("tls_wait_data", 128),
STACK_USAGE("decrypt_internal", 328),
STACK_USAGE("decrypt_skb_update", 80),
STACK_USAGE("decrypt_skb", 16),
STACK_USAGE("tls_decrypt_done", 80),
STACK_USAGE("process_rx_list", 104),
STACK_USAGE("tls_sw_recvmsg", 216),
STACK_USAGE("tls_sw_splice_read", 104),
STACK_USAGE("tls_sw_sock_is_readable", 24),
STACK_USAGE("tls_read_size", 72),
STACK_USAGE("tls_queue", 0),
STACK_USAGE("tls_data_ready", 24),
STACK_USAGE("tls_sw_cancel_work_tx", 0),
STACK_USAGE("tls_sw_release_resources_tx", 56),
STACK_USAGE("tls_sw_free_ctx_tx", 0),
STACK_USAGE("tls_sw_release_resources_rx", 32),
STACK_USAGE("tls_sw_strparser_done", 0),
STACK_USAGE("tls_sw_free_ctx_rx", 0),
STACK_USAGE("tls_sw_free_resources_rx", 8),
STACK_USAGE("tx_work_handler", 16),
STACK_USAGE("tls_sw_write_space", 0),
STACK_USAGE("tls_sw_strparser_arm", 24),
STACK_USAGE("tls_set_sw_offload", 192),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("tls_get_rec", 40),
STACK_USAGE("tls_tx_records", 56),
STACK_USAGE("sk_psock_get", 16),
STACK_USAGE("tls_encrypt_done", 24),
STACK_USAGE("tls_err_abort", 0),
STACK_USAGE("__skb_nsg", 56),
STACK_USAGE("tls_merge_open_record", 32),
STACK_USAGE("tls_push_record", 128),
STACK_USAGE("bpf_exec_tx_verdict", 816),
STACK_USAGE("tls_sw_push_pending_record", 16),
STACK_USAGE("tls_sw_sendmsg", 168),
STACK_USAGE("__bpf_trace_tls_device_rx_resync_nh_schedule", 0),
STACK_USAGE("__traceiter_tls_device_rx_resync_nh_schedule", 16),
STACK_USAGE("perf_trace_tls_device_rx_resync_nh_schedule", 56),
STACK_USAGE("trace_event_raw_event_tls_device_rx_resync_nh_schedule", 72),
STACK_USAGE("trace_raw_output_tls_device_rx_resync_nh_schedule", 24),
STACK_USAGE("__bpf_trace_tls_device_rx_resync_nh_delay", 0),
STACK_USAGE("__traceiter_tls_device_rx_resync_nh_delay", 32),
STACK_USAGE("perf_trace_tls_device_rx_resync_nh_delay", 72),
STACK_USAGE("trace_event_raw_event_tls_device_rx_resync_nh_delay", 88),
STACK_USAGE("trace_raw_output_tls_device_rx_resync_nh_delay", 24),
STACK_USAGE("__bpf_trace_tls_device_tx_resync_req", 0),
STACK_USAGE("__traceiter_tls_device_tx_resync_req", 32),
STACK_USAGE("perf_trace_tls_device_tx_resync_req", 72),
STACK_USAGE("trace_event_raw_event_tls_device_tx_resync_req", 88),
STACK_USAGE("trace_raw_output_tls_device_tx_resync_req", 24),
STACK_USAGE("__bpf_trace_tls_device_offload_set", 0),
STACK_USAGE("__traceiter_tls_device_offload_set", 48),
STACK_USAGE("perf_trace_tls_device_offload_set", 80),
STACK_USAGE("trace_event_raw_event_tls_device_offload_set", 104),
STACK_USAGE("trace_raw_output_tls_device_offload_set", 24),
STACK_USAGE("__bpf_trace_tls_device_tx_resync_send", 0),
STACK_USAGE("__traceiter_tls_device_tx_resync_send", 32),
STACK_USAGE("perf_trace_tls_device_tx_resync_send", 72),
STACK_USAGE("trace_event_raw_event_tls_device_tx_resync_send", 88),
STACK_USAGE("trace_raw_output_tls_device_tx_resync_send", 24),
STACK_USAGE("__bpf_trace_tls_device_decrypted", 0),
STACK_USAGE("__traceiter_tls_device_decrypted", 56),
STACK_USAGE("perf_trace_tls_device_decrypted", 80),
STACK_USAGE("trace_event_raw_event_tls_device_decrypted", 104),
STACK_USAGE("trace_raw_output_tls_device_decrypted", 24),
STACK_USAGE("__bpf_trace_tls_device_rx_resync_send", 0),
STACK_USAGE("__traceiter_tls_device_rx_resync_send", 40),
STACK_USAGE("perf_trace_tls_device_rx_resync_send", 72),
STACK_USAGE("trace_event_raw_event_tls_device_rx_resync_send", 96),
STACK_USAGE("trace_raw_output_tls_device_rx_resync_send", 24),
STACK_USAGE("unix_find_other", 72),
STACK_USAGE("unix_autobind", 104),
STACK_USAGE("scm_recv", 56),
STACK_USAGE("unix_bind", 104),
STACK_USAGE("unix_state_double_lock", 16),
STACK_USAGE("unix_dgram_connect", 64),
STACK_USAGE("unix_wait_for_peer", 88),
STACK_USAGE("unix_stream_connect", 128),
STACK_USAGE("unix_socketpair", 32),
STACK_USAGE("unix_table_double_lock", 8),
STACK_USAGE("unix_accept", 56),
STACK_USAGE("unix_getname", 24),
STACK_USAGE("unix_scm_to_skb", 32),
STACK_USAGE("maybe_add_creds", 24),
STACK_USAGE("unix_dgram_sendmsg", 160),
STACK_USAGE("sock_put", 0),
STACK_USAGE("queue_oob", 56),
STACK_USAGE("unix_stream_sendmsg", 168),
STACK_USAGE("unix_stream_sendpage", 168),
STACK_USAGE("unix_peer_get", 16),
STACK_USAGE("unix_seqpacket_sendmsg", 0),
STACK_USAGE("unix_seqpacket_recvmsg", 0),
STACK_USAGE("__unix_dgram_recvmsg", 144),
STACK_USAGE("sk_wake_async", 24),
STACK_USAGE("unix_dgram_recvmsg", 0),
STACK_USAGE("unix_read_sock", 64),
STACK_USAGE("unix_stream_recv_urg", 40),
STACK_USAGE("unix_stream_read_sock", 0),
STACK_USAGE("refcount_inc", 0),
STACK_USAGE("unix_stream_read_generic", 224),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("unix_stream_read_actor", 8),
STACK_USAGE("__unix_stream_recvmsg", 56),
STACK_USAGE("unix_stream_recvmsg", 56),
STACK_USAGE("unix_stream_splice_actor", 0),
STACK_USAGE("unix_stream_splice_read", 56),
STACK_USAGE("unix_shutdown", 40),
STACK_USAGE("unix_inq_len", 32),
STACK_USAGE("unix_outq_len", 0),
STACK_USAGE("unix_ioctl", 64),
STACK_USAGE("__unix_set_addr_hash", 24),
STACK_USAGE("unix_compat_ioctl", 0),
STACK_USAGE("unix_poll", 24),
STACK_USAGE("unix_dgram_poll", 32),
STACK_USAGE("unix_seq_start", 40),
STACK_USAGE("unix_seq_next", 40),
STACK_USAGE("unix_seq_stop", 0),
STACK_USAGE("unix_seq_show", 56),
STACK_USAGE("bpf_iter_unix_realloc_batch", 24),
STACK_USAGE("bpf_iter_unix_batch", 64),
STACK_USAGE("bpf_iter_unix_seq_start", 0),
STACK_USAGE("bpf_iter_unix_seq_next", 24),
STACK_USAGE("bpf_iter_unix_seq_show", 104),
STACK_USAGE("bpf_iter_unix_seq_stop", 72),
STACK_USAGE("unix_net_init", 16),
STACK_USAGE("unix_net_exit", 8),
STACK_USAGE("bpf_iter_unix", 0),
STACK_USAGE("bpf_iter_init_unix", 16),
STACK_USAGE("bpf_iter_fini_unix", 8),
STACK_USAGE("bpf_iter_unix_get_func_proto", 0),
STACK_USAGE("bpf_iter_register", 0),
STACK_USAGE("af_unix_init", 8),
STACK_USAGE("af_unix_exit", 0),
STACK_USAGE("unix_dgram_peer_wake_relay", 0),
STACK_USAGE("unix_dgram_peer_wake_disconnect_wakeup", 24),
STACK_USAGE("unix_dgram_peer_wake_me", 32),
STACK_USAGE("unix_write_space", 16),
STACK_USAGE("unix_dgram_disconnected", 16),
STACK_USAGE("unix_sock_destructor", 8),
STACK_USAGE("unix_release_sock", 64),
STACK_USAGE("init_peercred", 48),
STACK_USAGE("copy_peercred", 48),
STACK_USAGE("unix_listen", 32),
STACK_USAGE("scm_destroy", 8),
STACK_USAGE("unix_set_peek_off", 24),
STACK_USAGE("unix_show_fdinfo", 0),
STACK_USAGE("unix_close", 0),
STACK_USAGE("unix_unhash", 0),
STACK_USAGE("unix_create1", 48),
STACK_USAGE("unix_create", 0),
STACK_USAGE("unix_release", 16),
STACK_USAGE("scan_children", 72),
STACK_USAGE("dec_inflight", 0),
STACK_USAGE("inc_inflight", 0),
STACK_USAGE("inc_inflight_move_tail", 0),
STACK_USAGE("wait_for_unix_gc", 56),
STACK_USAGE("unix_gc", 168),
STACK_USAGE("scan_inflight", 88),
STACK_USAGE("unix_attach_fds", 24),
STACK_USAGE("unix_detach_fds", 16),
STACK_USAGE("unix_destruct_scm", 72),
STACK_USAGE("unix_get_socket", 0),
STACK_USAGE("unix_inflight", 16),
STACK_USAGE("unix_notinflight", 16),
STACK_USAGE("unix_sysctl_register", 16),
STACK_USAGE("unix_sysctl_unregister", 8),
STACK_USAGE("unix_dgram_bpf_update_proto", 24),
STACK_USAGE("unix_stream_bpf_update_proto", 24),
STACK_USAGE("unix_bpf_build_proto", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("__unix_recvmsg", 0),
STACK_USAGE("unix_bpf_recvmsg", 152),
STACK_USAGE("xdp_umem_create", 32),
STACK_USAGE("xdp_umem_release", 8),
STACK_USAGE("xdp_umem_release_deferred", 0),
STACK_USAGE("xdp_get_umem", 0),
STACK_USAGE("xdp_put_umem", 16),
STACK_USAGE("xsk_setsockopt", 80),
STACK_USAGE("xsk_clear_pool_at_qid", 0),
STACK_USAGE("xsk_getsockopt", 184),
STACK_USAGE("xsk_reg_pool_at_qid", 0),
STACK_USAGE("xsk_mmap", 0),
STACK_USAGE("xsk_notifier", 40),
STACK_USAGE("xsk_destruct", 8),
STACK_USAGE("xsk_create", 48),
STACK_USAGE("xsk_net_init", 8),
STACK_USAGE("xsk_net_exit", 0),
STACK_USAGE("xsk_init", 8),
STACK_USAGE("__xsk_rcv", 32),
STACK_USAGE("xsk_generic_rcv", 32),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("__xsk_map_redirect", 24),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("xskq_cons_peek_desc", 0),
STACK_USAGE("__xsk_map_flush", 24),
STACK_USAGE("xsk_tx_completed", 0),
STACK_USAGE("xsk_tx_release", 16),
STACK_USAGE("xsk_tx_peek_desc", 32),
STACK_USAGE("xsk_tx_peek_release_desc_batch", 64),
STACK_USAGE("xsk_set_rx_need_wakeup", 0),
STACK_USAGE("xsk_destruct_skb", 32),
STACK_USAGE("xsk_set_tx_need_wakeup", 8),
STACK_USAGE("xsk_xmit", 120),
STACK_USAGE("xsk_clear_rx_need_wakeup", 0),
STACK_USAGE("xsk_sendmsg", 16),
STACK_USAGE("xsk_recvmsg", 24),
STACK_USAGE("xsk_poll", 16),
STACK_USAGE("rcu_read_unlock", 0),
STACK_USAGE("xsk_init_queue", 8),
STACK_USAGE("xsk_clear_tx_need_wakeup", 8),
STACK_USAGE("xsk_release", 56),
STACK_USAGE("xsk_lookup_xsk_from_fd", 16),
STACK_USAGE("xsk_bind", 56),
STACK_USAGE("xsk_uses_need_wakeup", 0),
STACK_USAGE("xsk_get_pool_from_qid", 0),
STACK_USAGE("xp_set_rxq_info", 0),
STACK_USAGE("xp_add_xsk", 24),
STACK_USAGE("xp_disable_drv_zc", 48),
STACK_USAGE("xp_assign_dev", 88),
STACK_USAGE("xp_assign_dev_shared", 0),
STACK_USAGE("xp_clear_dev", 8),
STACK_USAGE("xp_del_xsk", 16),
STACK_USAGE("xp_release_deferred", 16),
STACK_USAGE("xp_get_pool", 0),
STACK_USAGE("xp_put_pool", 16),
STACK_USAGE("xp_dma_unmap", 48),
STACK_USAGE("xp_destroy", 8),
STACK_USAGE("xp_dma_map", 80),
STACK_USAGE("xp_alloc_tx_descs", 8),
STACK_USAGE("xp_alloc", 8),
STACK_USAGE("xp_create_and_assign_umem", 48),
STACK_USAGE("xp_alloc_reused", 0),
STACK_USAGE("xp_alloc_batch", 40),
STACK_USAGE("xp_can_alloc", 0),
STACK_USAGE("xp_free", 0),
STACK_USAGE("xp_raw_get_data", 0),
STACK_USAGE("xp_raw_get_dma", 0),
STACK_USAGE("xp_dma_sync_for_cpu_slow", 0),
STACK_USAGE("xp_dma_sync_for_device_slow", 0),
STACK_USAGE("xsk_diag_dump", 168),
STACK_USAGE("xsk_diag_handler_dump", 56),
STACK_USAGE("xsk_diag_init", 0),
STACK_USAGE("xsk_diag_exit", 0),
STACK_USAGE("xskq_create", 32),
STACK_USAGE("xskq_destroy", 8),
STACK_USAGE("xsk_map_gen_lookup", 0),
STACK_USAGE("xsk_map_lookup_elem", 8),
STACK_USAGE("xsk_map_lookup_elem_sys_only", 0),
STACK_USAGE("xsk_map_update_elem", 72),
STACK_USAGE("xsk_map_delete_elem", 64),
STACK_USAGE("xsk_map_redirect", 40),
STACK_USAGE("xsk_map_try_sock_delete", 56),
STACK_USAGE("xsk_map_meta_equal", 0),
STACK_USAGE("xsk_map_sock_delete", 56),
STACK_USAGE("xsk_map_alloc", 16),
STACK_USAGE("xsk_map_free", 8),
STACK_USAGE("xsk_map_get_next_key", 0),
STACK_USAGE("xfrm_aalg_get_byid", 16),
STACK_USAGE("xfrm_ealg_get_byid", 16),
STACK_USAGE("xfrm_calg_get_byid", 16),
STACK_USAGE("xfrm_aalg_get_byname", 40),
STACK_USAGE("xfrm_ealg_get_byname", 40),
STACK_USAGE("xfrm_calg_get_byname", 40),
STACK_USAGE("xfrm_aead_get_byname", 40),
STACK_USAGE("xfrm_aalg_get_byidx", 0),
STACK_USAGE("xfrm_ealg_get_byidx", 0),
STACK_USAGE("xfrm_probe_algs", 16),
STACK_USAGE("xfrm_count_pfkey_auth_supported", 0),
STACK_USAGE("xfrm_count_pfkey_enc_supported", 0),
STACK_USAGE("xfrm_dev_event", 8),
STACK_USAGE("xfrm_dev_init", 0),
STACK_USAGE("xfrm_hash_alloc", 8),
STACK_USAGE("xfrm_hash_free", 8),
STACK_USAGE("xfrm_rcv_cb", 40),
STACK_USAGE("secpath_set", 16),
STACK_USAGE("xfrm_parse_spi", 48),
STACK_USAGE("xfrm_offload", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("xfrm_input", 96),
STACK_USAGE("xfrm_input_register_afinfo", 8),
STACK_USAGE("xfrm_input_unregister_afinfo", 16),
STACK_USAGE("rcu_read_unlock", 0),
STACK_USAGE("xfrm_input_resume", 0),
STACK_USAGE("xfrm_trans_reinject", 104),
STACK_USAGE("xfrm_trans_queue_net", 32),
STACK_USAGE("xfrm_trans_queue", 32),
STACK_USAGE("xfrm_input_init", 8),
STACK_USAGE("xfrmi_fini", 0),
STACK_USAGE("skb_dst", 8),
STACK_USAGE("xfrmi_dev_free", 8),
STACK_USAGE("xfrmi_dev_uninit", 24),
STACK_USAGE("xfrmi_scrub_packet", 16),
STACK_USAGE("xfrmi_rcv_cb", 48),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("xfrmi_xmit", 168),
STACK_USAGE("net_generic", 16),
STACK_USAGE("xfrmi4_err", 48),
STACK_USAGE("xfrmi6_err", 48),
STACK_USAGE("xfrmi_get_iflink", 0),
STACK_USAGE("xfrmi_dev_setup", 0),
STACK_USAGE("xfrmi_dev_init", 40),
STACK_USAGE("xfrmi_validate", 0),
STACK_USAGE("xfrmi_newlink", 40),
STACK_USAGE("xfrmi_dellink", 0),
STACK_USAGE("xfrmi_changelink", 48),
STACK_USAGE("xfrmi_get_size", 0),
STACK_USAGE("xfrmi_lookup", 16),
STACK_USAGE("xfrmi_fill_info", 32),
STACK_USAGE("xfrmi_get_link_net", 0),
STACK_USAGE("xfrmi_exit_batch_net", 72),
STACK_USAGE("xfrmi_decode_session", 0),
STACK_USAGE("xfrmi4_init", 16),
STACK_USAGE("xfrmi4_fini", 0),
STACK_USAGE("xfrmi6_init", 16),
STACK_USAGE("xfrmi6_fini", 0),
STACK_USAGE("xfrmi_init", 16),
STACK_USAGE("skb_dst", 8),
STACK_USAGE("xfrm6_hdr_offset", 72),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("xfrm_output_resume", 120),
STACK_USAGE("xfrm_output2", 0),
STACK_USAGE("xfrm_output", 32),
STACK_USAGE("xfrm_inner_extract_output", 32),
STACK_USAGE("xfrm_local_error", 16),
STACK_USAGE("xfrm_policy_inexact_gc_tree", 48),
STACK_USAGE("__xfrm_policy_inexact_prune_bin", 56),
STACK_USAGE("xfrm_policy_inexact_alloc_chain", 72),
STACK_USAGE("skb_dst", 8),
STACK_USAGE("xfrm_policy_inexact_insert", 48),
STACK_USAGE("xfrm_hash_rebuild", 120),
STACK_USAGE("xfrm_policy_hash_rebuild", 0),
STACK_USAGE("xfrm_policy_requeue", 136),
STACK_USAGE("xfrm_pol_bin_key", 0),
STACK_USAGE("xfrm_pol_bin_obj", 0),
STACK_USAGE("xfrm_pol_bin_cmp", 0),
STACK_USAGE("xfrm_policy_insert_list", 0),
STACK_USAGE("xfrm_policy_insert", 48),
STACK_USAGE("__xfrm_policy_bysel_ctx", 0),
STACK_USAGE("xfrm_policy_bysel_ctx", 120),
STACK_USAGE("xfrm_policy_byid", 64),
STACK_USAGE("xfrm_policy_flush", 64),
STACK_USAGE("xfrm_policy_walk", 56),
STACK_USAGE("xfrm_policy_walk_init", 0),
STACK_USAGE("xfrm_policy_walk_done", 16),
STACK_USAGE("local_bh_disable", 0),
STACK_USAGE("xfrm_policy_lookup_inexact_addr", 104),
STACK_USAGE("xfrm_policy_lookup_bytype", 192),
STACK_USAGE("xfrm_sk_policy_lookup", 64),
STACK_USAGE("xfrm_selector_match", 48),
STACK_USAGE("xfrm_policy_delete", 24),
STACK_USAGE("xfrm_sk_policy_insert", 56),
STACK_USAGE("__xfrm_sk_clone_policy", 56),
STACK_USAGE("xfrm_policy_get_afinfo", 8),
STACK_USAGE("xfrm_alloc_dst", 16),
STACK_USAGE("xfrm_init_path", 32),
STACK_USAGE("__xfrm_dst_lookup", 40),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("xfrm_expand_policies", 24),
STACK_USAGE("xfrm_resolve_and_create_bundle", 312),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("xfrm_policy_queue_process", 256),
STACK_USAGE("xdst_queue_output", 40),
STACK_USAGE("xfrm_lookup_with_ifid", 136),
STACK_USAGE("skb_dst_force", 16),
STACK_USAGE("xfrm_policy_timer", 56),
STACK_USAGE("xfrm_lookup", 0),
STACK_USAGE("xfrm_lookup_route", 24),
STACK_USAGE("local_bh_enable", 0),
STACK_USAGE("rht_lock", 16),
STACK_USAGE("rht_unlock", 8),
STACK_USAGE("__xfrm_decode_session", 64),
STACK_USAGE("__xfrm_policy_check", 328),
STACK_USAGE("__xfrm_route_forward", 136),
STACK_USAGE("xfrm_dst_check", 104),
STACK_USAGE("xfrm_dst_ifdown", 0),
STACK_USAGE("xfrm_link_failure", 0),
STACK_USAGE("xfrm_negative_advice", 0),
STACK_USAGE("dst_discard", 0),
STACK_USAGE("xfrm_default_advmss", 0),
STACK_USAGE("xfrm_mtu", 0),
STACK_USAGE("xfrm_policy_alloc", 16),
STACK_USAGE("xfrm_neigh_lookup", 0),
STACK_USAGE("xfrm_confirm_neigh", 0),
STACK_USAGE("xfrm_policy_register_afinfo", 16),
STACK_USAGE("rht_assign_unlock", 16),
STACK_USAGE("xfrm_policy_unregister_afinfo", 8),
STACK_USAGE("xfrm_if_register_cb", 8),
STACK_USAGE("xfrm_if_unregister_cb", 0),
STACK_USAGE("xfrm_policy_fini", 24),
STACK_USAGE("xfrm_net_init", 32),
STACK_USAGE("xfrm_policy_destroy_rcu", 0),
STACK_USAGE("xfrm_net_exit", 8),
STACK_USAGE("xfrm_init", 0),
STACK_USAGE("xfrm_audit_common_policyinfo", 24),
STACK_USAGE("xfrm_audit_policy_add", 40),
STACK_USAGE("xfrm_policy_destroy", 8),
STACK_USAGE("xfrm_audit_policy_delete", 40),
STACK_USAGE("xfrm_policy_kill", 32),
STACK_USAGE("policy_hash_bysel", 48),
STACK_USAGE("__xfrm6_pref_hash", 0),
STACK_USAGE("rhashtable_lookup", 88),
STACK_USAGE("xfrm_spd_getinfo", 0),
STACK_USAGE("xfrm_hash_resize", 160),
STACK_USAGE("xfrm_policy_inexact_alloc_bin", 104),
STACK_USAGE("rcu_read_unlock", 0),
STACK_USAGE("xfrm_pols_put", 24),
STACK_USAGE("xfrm_policy_inexact_list_reinsert", 96),
STACK_USAGE("xfrm_policy_inexact_insert_node", 200),
STACK_USAGE("xfrm_replay_seqhi", 0),
STACK_USAGE("xfrm_replay_advance", 56),
STACK_USAGE("xfrm_aevent_is_on", 8),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("xfrm_replay_notify", 64),
STACK_USAGE("xfrm_replay_check_esn", 8),
STACK_USAGE("xfrm_replay_check", 16),
STACK_USAGE("xfrm_replay_recheck", 8),
STACK_USAGE("xfrm_replay_overflow", 16),
STACK_USAGE("xfrm_init_replay", 0),
STACK_USAGE("__xfrm_src_hash", 0),
STACK_USAGE("xfrm_state_find", 152),
STACK_USAGE("xfrm_stateonly_find", 72),
STACK_USAGE("xfrm_state_lookup_byspi", 40),
STACK_USAGE("__xfrm_state_insert", 40),
STACK_USAGE("xfrm_hash_resize", 136),
STACK_USAGE("__xfrm_state_bump_genids", 64),
STACK_USAGE("xfrm_state_insert", 16),
STACK_USAGE("__find_acq_core", 88),
STACK_USAGE("xfrm_state_add", 104),
STACK_USAGE("xfrm_state_update", 88),
STACK_USAGE("xfrm_state_check_expire", 48),
STACK_USAGE("xfrm_state_lookup", 48),
STACK_USAGE("xfrm_state_lookup_byaddr", 56),
STACK_USAGE("xfrm_find_acq", 64),
STACK_USAGE("xfrm_tmpl_sort", 72),
STACK_USAGE("xfrm_state_sort", 72),
STACK_USAGE("xfrm_find_acq_byseq", 40),
STACK_USAGE("xfrm_get_acqseq", 0),
STACK_USAGE("verify_spi_info", 0),
STACK_USAGE("xfrm_register_type", 8),
STACK_USAGE("xfrm_alloc_spi", 88),
STACK_USAGE("xfrm_state_walk", 88),
STACK_USAGE("xfrm_state_walk_init", 0),
STACK_USAGE("xfrm_state_walk_done", 16),
STACK_USAGE("xfrm_replay_timer_handler", 32),
STACK_USAGE("km_policy_notify", 40),
STACK_USAGE("km_state_notify", 32),
STACK_USAGE("km_state_expired", 32),
STACK_USAGE("km_query", 48),
STACK_USAGE("__km_new_mapping", 48),
STACK_USAGE("km_new_mapping", 0),
STACK_USAGE("km_policy_expired", 32),
STACK_USAGE("km_report", 56),
STACK_USAGE("xfrm_user_policy", 64),
STACK_USAGE("xfrm_register_km", 8),
STACK_USAGE("xfrm_unregister_km", 8),
STACK_USAGE("xfrm_unregister_type", 8),
STACK_USAGE("xfrm_state_register_afinfo", 8),
STACK_USAGE("xfrm_state_unregister_afinfo", 24),
STACK_USAGE("xfrm_state_afinfo_get_rcu", 8),
STACK_USAGE("xfrm_state_get_afinfo", 8),
STACK_USAGE("xfrm_flush_gc", 0),
STACK_USAGE("xfrm_state_delete_tunnel", 24),
STACK_USAGE("xfrm_state_mtu", 0),
STACK_USAGE("__xfrm_init_state", 56),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("xfrm_init_state", 8),
STACK_USAGE("xfrm_state_init", 24),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("xfrm_state_fini", 16),
STACK_USAGE("xfrm_audit_state_add", 40),
STACK_USAGE("xfrm_audit_state_delete", 40),
STACK_USAGE("xfrm_audit_state_replay_overflow", 24),
STACK_USAGE("xfrm_audit_state_replay", 32),
STACK_USAGE("xfrm_audit_state_notfound_simple", 24),
STACK_USAGE("xfrm_audit_state_notfound", 40),
STACK_USAGE("xfrm_audit_state_icvfail", 48),
STACK_USAGE("xfrm_register_type_offload", 8),
STACK_USAGE("xfrm_unregister_type_offload", 8),
STACK_USAGE("xfrm_state_free", 0),
STACK_USAGE("___xfrm_state_destroy", 8),
STACK_USAGE("xfrm_state_gc_task", 24),
STACK_USAGE("xfrm_timer_handler", 80),
STACK_USAGE("xfrm_state_alloc", 16),
STACK_USAGE("__xfrm_state_destroy", 8),
STACK_USAGE("__xfrm_state_delete", 32),
STACK_USAGE("xfrm_state_delete", 16),
STACK_USAGE("rcu_read_unlock", 0),
STACK_USAGE("xfrm_state_flush", 96),
STACK_USAGE("xfrm_state_hold", 0),
STACK_USAGE("xfrm_dev_state_flush", 88),
STACK_USAGE("__xfrm_dst_hash", 0),
STACK_USAGE("xfrm_sad_getinfo", 24),
STACK_USAGE("__xfrm_state_lookup", 56),
STACK_USAGE("__xfrm_state_lookup_byaddr", 56),
STACK_USAGE("xfrm_sysctl_init", 16),
STACK_USAGE("xfrm_sysctl_fini", 8),
STACK_USAGE("dump_one_state", 32),
STACK_USAGE("xfrm_dump_sa_done", 0),
STACK_USAGE("xfrm_dump_sa", 360),
STACK_USAGE("verify_replay", 0),
STACK_USAGE("xfrm_set_spdinfo", 48),
STACK_USAGE("xfrm_get_spdinfo", 144),
STACK_USAGE("xfrm_get_sadinfo", 80),
STACK_USAGE("xfrm_get_sa", 72),
STACK_USAGE("xfrm_alloc_userspi", 96),
STACK_USAGE("copy_templates", 0),
STACK_USAGE("xfrm_policy_construct", 40),
STACK_USAGE("xfrm_add_policy", 64),
STACK_USAGE("copy_to_user_tmpl", 408),
STACK_USAGE("dump_one_policy", 56),
STACK_USAGE("xfrm_dump_policy_done", 0),
STACK_USAGE("xfrm_dump_policy_start", 0),
STACK_USAGE("xfrm_dump_policy", 40),
STACK_USAGE("xfrm_set_default", 16),
STACK_USAGE("xfrm_get_default", 32),
STACK_USAGE("xfrm_get_policy", 96),
STACK_USAGE("xfrm_flush_sa", 56),
STACK_USAGE("build_aevent", 56),
STACK_USAGE("xfrm_get_ae", 80),
STACK_USAGE("xfrm_new_ae", 112),
STACK_USAGE("xfrm_flush_policy", 64),
STACK_USAGE("xfrm_add_pol_expire", 40),
STACK_USAGE("xfrm_add_sa_expire", 32),
STACK_USAGE("xfrm_add_acquire", 80),
STACK_USAGE("xfrm_do_migrate", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("xfrm_send_migrate", 0),
STACK_USAGE("xfrm_user_rcv_msg", 344),
STACK_USAGE("xfrm_netlink_rcv", 16),
STACK_USAGE("xfrm_send_state_notify", 72),
STACK_USAGE("xfrm_send_acquire", 72),
STACK_USAGE("xfrm_compile_policy", 32),
STACK_USAGE("xfrm_send_policy_notify", 80),
STACK_USAGE("xfrm_send_report", 48),
STACK_USAGE("xfrm_send_mapping", 40),
STACK_USAGE("xfrm_is_alive", 8),
STACK_USAGE("xfrm_user_net_init", 72),
STACK_USAGE("xfrm_user_net_pre_exit", 0),
STACK_USAGE("xfrm_user_net_exit", 16),
STACK_USAGE("xfrm_user_init", 8),
STACK_USAGE("xfrm_user_exit", 0),
STACK_USAGE("xfrm_alloc_replay_state_esn", 56),
STACK_USAGE("xfrm_update_ae_params", 64),
STACK_USAGE("xfrm_add_sa", 96),
STACK_USAGE("xfrm_del_sa", 64),
STACK_USAGE("copy_sec_ctx", 16),
STACK_USAGE("copy_user_offload", 8),
STACK_USAGE("xfrm_smark_put", 32),
STACK_USAGE("copy_to_user_state_extra", 64),
STACK_USAGE("main", 8),
STACK_USAGE("bpf_lsm_init", 0),
STACK_USAGE("cap_inode_removexattr", 32),
STACK_USAGE("cap_task_fix_setuid", 32),
STACK_USAGE("cap_settime", 0),
STACK_USAGE("cap_safe_nice", 16),
STACK_USAGE("cap_task_setscheduler", 0),
STACK_USAGE("cap_task_setioprio", 0),
STACK_USAGE("cap_task_setnice", 0),
STACK_USAGE("cap_task_prctl", 24),
STACK_USAGE("cap_ptrace_access_check", 24),
STACK_USAGE("cap_vm_enough_memory", 0),
STACK_USAGE("cap_mmap_addr", 0),
STACK_USAGE("cap_mmap_file", 0),
STACK_USAGE("capability_init", 0),
STACK_USAGE("cap_ptrace_traceme", 16),
STACK_USAGE("cap_capget", 32),
STACK_USAGE("cap_capset", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("cap_inode_need_killpriv", 0),
STACK_USAGE("cap_inode_killpriv", 0),
STACK_USAGE("cap_inode_getsecurity", 80),
STACK_USAGE("cap_convert_nscap", 56),
STACK_USAGE("get_vfs_caps_from_disk", 80),
STACK_USAGE("cap_capable", 0),
STACK_USAGE("cap_bprm_creds_from_file", 96),
STACK_USAGE("cap_inode_setxattr", 24),
STACK_USAGE("dev_exception_rm", 32),
STACK_USAGE("devcgroup_online", 24),
STACK_USAGE("devcgroup_offline", 8),
STACK_USAGE("devcgroup_css_alloc", 0),
STACK_USAGE("devcgroup_css_free", 32),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("devcgroup_seq_show", 88),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("parent_has_perm", 32),
STACK_USAGE("dev_exceptions_copy", 40),
STACK_USAGE("devcgroup_access_write", 128),
STACK_USAGE("devcgroup_check_permission", 48),
STACK_USAGE("dev_exception_add", 32),
STACK_USAGE("securityfs_create_dentry", 80),
STACK_USAGE("securityfs_create_file", 0),
STACK_USAGE("securityfs_create_dir", 0),
STACK_USAGE("securityfs_create_symlink", 40),
STACK_USAGE("securityfs_free_inode", 8),
STACK_USAGE("securityfs_remove", 24),
STACK_USAGE("lsm_read", 32),
STACK_USAGE("securityfs_init", 8),
STACK_USAGE("securityfs_fill_super", 8),
STACK_USAGE("securityfs_get_tree", 0),
STACK_USAGE("securityfs_init_fs_context", 0),
STACK_USAGE("integrity_inode_free", 16),
STACK_USAGE("init_once", 8),
STACK_USAGE("integrity_iintcache_init", 0),
STACK_USAGE("integrity_kernel_read", 16),
STACK_USAGE("integrity_load_keys", 0),
STACK_USAGE("integrity_fs_init", 8),
STACK_USAGE("integrity_iint_find", 16),
STACK_USAGE("integrity_inode_get", 16),
STACK_USAGE("ima_store_template", 56),
STACK_USAGE("ima_add_violation", 152),
STACK_USAGE("ima_get_action", 0),
STACK_USAGE("ima_collect_measurement", 136),
STACK_USAGE("ima_free_template_entry", 24),
STACK_USAGE("ima_store_measurement", 160),
STACK_USAGE("ima_audit_measurement", 48),
STACK_USAGE("ima_alloc_init_template", 56),
STACK_USAGE("ima_d_path", 24),
STACK_USAGE("ima_post_key_create_or_update", 24),
STACK_USAGE("ima_init_crypto", 32),
STACK_USAGE("param_set_bufsize", 8),
STACK_USAGE("ima_calc_file_hash", 616),
STACK_USAGE("ima_calc_field_array_hash_tfm", 744),
STACK_USAGE("ima_calc_field_array_hash", 24),
STACK_USAGE("ima_init_ima_crypto", 16),
STACK_USAGE("ima_calc_buffer_hash", 472),
STACK_USAGE("ima_calc_boot_aggregate", 504),
STACK_USAGE("ima_alloc_tfm", 16),
STACK_USAGE("ima_measurements_stop", 0),
STACK_USAGE("ima_putc", 32),
STACK_USAGE("ima_measurements_show", 64),
STACK_USAGE("ima_measurements_open", 0),
STACK_USAGE("ima_print_digest", 32),
STACK_USAGE("ima_ascii_measurements_show", 40),
STACK_USAGE("ima_ascii_measurements_open", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("default_canonical_fmt_setup", 0),
STACK_USAGE("ima_write_policy", 64),
STACK_USAGE("ima_open_policy", 8),
STACK_USAGE("ima_release_policy", 8),
STACK_USAGE("ima_fs_init", 16),
STACK_USAGE("ima_show_htable_violations", 88),
STACK_USAGE("ima_show_measurements_count", 88),
STACK_USAGE("ima_measurements_start", 16),
STACK_USAGE("ima_measurements_next", 24),
STACK_USAGE("ima_init", 8),
STACK_USAGE("ima_add_boot_aggregate", 400),
STACK_USAGE("ima_measure_critical_data", 8),
STACK_USAGE("init_ima", 16),
STACK_USAGE("ima_file_free", 32),
STACK_USAGE("process_measurement", 424),
STACK_USAGE("ima_file_mmap", 24),
STACK_USAGE("ima_file_mprotect", 328),
STACK_USAGE("hash_setup", 8),
STACK_USAGE("ima_bprm_check", 24),
STACK_USAGE("ima_file_check", 32),
STACK_USAGE("__ima_inode_hash", 280),
STACK_USAGE("ima_file_hash", 0),
STACK_USAGE("ima_inode_hash", 0),
STACK_USAGE("ima_post_create_tmpfile", 0),
STACK_USAGE("ima_post_path_mknod", 0),
STACK_USAGE("ima_read_file", 32),
STACK_USAGE("ima_post_read_file", 48),
STACK_USAGE("ima_load_data", 16),
STACK_USAGE("ima_get_current_hash_algo", 0),
STACK_USAGE("ima_post_load_data", 0),
STACK_USAGE("mmap_violation_check", 24),
STACK_USAGE("process_buffer_measurement", 568),
STACK_USAGE("ima_kexec_cmdline", 32),
STACK_USAGE("ima_parse_add_rule", 264),
STACK_USAGE("ima_delete_rules", 48),
STACK_USAGE("ima_policy_start", 24),
STACK_USAGE("ima_policy_next", 16),
STACK_USAGE("ima_policy_stop", 0),
STACK_USAGE("ima_policy_show", 136),
STACK_USAGE("default_measure_policy_setup", 0),
STACK_USAGE("policy_setup", 32),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("default_appraise_policy_setup", 0),
STACK_USAGE("ima_alloc_rule_opt_list", 64),
STACK_USAGE("ima_lsm_free_rule", 8),
STACK_USAGE("ima_rule_contains_lsm_cond", 0),
STACK_USAGE("ima_lsm_policy_change", 48),
STACK_USAGE("uid_eq", 0),
STACK_USAGE("gid_eq", 0),
STACK_USAGE("ima_match_policy", 120),
STACK_USAGE("uid_gt", 0),
STACK_USAGE("ima_update_policy_flags", 16),
STACK_USAGE("gid_gt", 0),
STACK_USAGE("add_rules", 0),
STACK_USAGE("ima_init_policy", 0),
STACK_USAGE("uid_lt", 0),
STACK_USAGE("gid_lt", 0),
STACK_USAGE("ima_check_policy", 0),
STACK_USAGE("ima_update_policy", 24),
STACK_USAGE("ima_get_binary_runtime_size", 0),
STACK_USAGE("ima_add_template_entry", 136),
STACK_USAGE("ima_restore_measurement_entry", 16),
STACK_USAGE("ima_init_digests", 24),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("ima_queue_key", 40),
STACK_USAGE("ima_process_queued_keys", 40),
STACK_USAGE("ima_should_queue_key", 0),
STACK_USAGE("ima_keys_handler", 0),
STACK_USAGE("ima_init_key_queue", 0),
STACK_USAGE("ima_template_setup", 24),
STACK_USAGE("ima_template_fmt_setup", 8),
STACK_USAGE("lookup_template_desc", 24),
STACK_USAGE("template_desc_init_fields", 248),
STACK_USAGE("ima_init_template_list", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("ima_template_desc_current", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("ima_template_desc_buf", 0),
STACK_USAGE("ima_init_template", 16),
STACK_USAGE("ima_restore_measurement_list", 280),
STACK_USAGE("ima_template_has_modsig", 40),
STACK_USAGE("ima_show_template_field_data", 56),
STACK_USAGE("ima_show_template_digest", 0),
STACK_USAGE("ima_show_template_digest_ng", 0),
STACK_USAGE("ima_show_template_string", 0),
STACK_USAGE("ima_show_template_sig", 0),
STACK_USAGE("ima_show_template_buf", 0),
STACK_USAGE("ima_show_template_uint", 0),
STACK_USAGE("ima_parse_buf", 40),
STACK_USAGE("ima_eventdigest_init", 328),
STACK_USAGE("ima_eventdigest_ng_init", 264),
STACK_USAGE("ima_eventdigest_modsig_init", 248),
STACK_USAGE("ima_eventname_init_common", 48),
STACK_USAGE("ima_eventname_init", 0),
STACK_USAGE("ima_eventname_ng_init", 48),
STACK_USAGE("ima_eventsig_init", 32),
STACK_USAGE("ima_eventbuf_init", 40),
STACK_USAGE("ima_eventmodsig_init", 0),
STACK_USAGE("ima_eventevmsig_init", 56),
STACK_USAGE("ima_eventinodeuid_init", 24),
STACK_USAGE("ima_eventinodegid_init", 24),
STACK_USAGE("ima_eventinodemode_init", 24),
STACK_USAGE("ima_eventinodexattrnames_init", 0),
STACK_USAGE("ima_eventinodexattrlengths_init", 0),
STACK_USAGE("ima_eventinodexattrvalues_init", 0),
STACK_USAGE("integrity_audit_setup", 16),
STACK_USAGE("integrity_audit_msg", 0),
STACK_USAGE("integrity_audit_message", 104),
STACK_USAGE("__ia32_compat_sys_keyctl", 8),
STACK_USAGE("key_gc_unused_keys", 48),
STACK_USAGE("key_garbage_collector", 56),
STACK_USAGE("key_schedule_gc", 8),
STACK_USAGE("key_schedule_gc_links", 0),
STACK_USAGE("key_gc_timer_func", 0),
STACK_USAGE("key_gc_keytype", 0),
STACK_USAGE("key_update", 120),
STACK_USAGE("key_revoke", 16),
STACK_USAGE("key_invalidate", 16),
STACK_USAGE("generic_key_instantiate", 16),
STACK_USAGE("register_key_type", 24),
STACK_USAGE("unregister_key_type", 8),
STACK_USAGE("key_init", 8),
STACK_USAGE("key_user_put", 8),
STACK_USAGE("key_alloc", 104),
STACK_USAGE("key_ref_put", 0),
STACK_USAGE("key_payload_reserve", 48),
STACK_USAGE("__key_instantiate_and_link", 56),
STACK_USAGE("key_instantiate_and_link", 136),
STACK_USAGE("key_user_lookup", 32),
STACK_USAGE("key_reject_and_link", 80),
STACK_USAGE("key_put", 0),
STACK_USAGE("key_lookup", 24),
STACK_USAGE("key_type_lookup", 24),
STACK_USAGE("key_set_timeout", 24),
STACK_USAGE("key_type_put", 0),
STACK_USAGE("__key_update", 40),
STACK_USAGE("key_create_or_update", 216),
STACK_USAGE("keyctl_setperm_key", 32),
STACK_USAGE("keyctl_change_reqkey_auth", 16),
STACK_USAGE("keyctl_instantiate_key_common", 56),
STACK_USAGE("keyctl_instantiate_key", 80),
STACK_USAGE("keyctl_instantiate_key_iov", 216),
STACK_USAGE("keyctl_negate_key", 0),
STACK_USAGE("keyctl_reject_key", 40),
STACK_USAGE("keyctl_set_reqkey_keyring", 32),
STACK_USAGE("keyctl_set_timeout", 24),
STACK_USAGE("keyctl_assume_authority", 24),
STACK_USAGE("keyctl_get_security", 56),
STACK_USAGE("keyctl_session_to_parent", 48),
STACK_USAGE("__ia32_sys_request_key", 0),
STACK_USAGE("__se_sys_request_key", 88),
STACK_USAGE("__x64_sys_request_key", 0),
STACK_USAGE("keyctl_restrict_keyring", 88),
STACK_USAGE("keyctl_capabilities", 32),
STACK_USAGE("__ia32_sys_keyctl", 0),
STACK_USAGE("__se_sys_keyctl", 232),
STACK_USAGE("__x64_sys_keyctl", 0),
STACK_USAGE("keyctl_get_keyring_ID", 8),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("keyctl_join_session_keyring", 16),
STACK_USAGE("keyctl_update_key", 40),
STACK_USAGE("keyctl_revoke_key", 16),
STACK_USAGE("keyctl_invalidate_key", 24),
STACK_USAGE("keyctl_keyring_clear", 24),
STACK_USAGE("keyctl_keyring_link", 24),
STACK_USAGE("keyctl_keyring_unlink", 32),
STACK_USAGE("keyctl_keyring_move", 40),
STACK_USAGE("keyctl_describe_key", 56),
STACK_USAGE("keyctl_keyring_search", 104),
STACK_USAGE("__ia32_sys_add_key", 0),
STACK_USAGE("__se_sys_add_key", 104),
STACK_USAGE("__x64_sys_add_key", 0),
STACK_USAGE("keyctl_read_key", 56),
STACK_USAGE("keyctl_chown_key", 72),
STACK_USAGE("keyctl_pkey_params_get_2", 88),
STACK_USAGE("keyctl_pkey_query", 88),
STACK_USAGE("keyctl_pkey_e_d_s", 96),
STACK_USAGE("keyctl_pkey_verify", 136),
STACK_USAGE("keyctl_pkey_params_get", 136),
STACK_USAGE("keyring_restrict", 48),
STACK_USAGE("find_key_to_update", 16),
STACK_USAGE("find_keyring_by_name", 64),
STACK_USAGE("keyring_detect_cycle_iterator", 0),
STACK_USAGE("__key_link_lock", 24),
STACK_USAGE("keyring_preparse", 0),
STACK_USAGE("__key_move_lock", 24),
STACK_USAGE("__key_link_begin", 32),
STACK_USAGE("keyring_free_preparse", 0),
STACK_USAGE("__key_link_check_live_key", 136),
STACK_USAGE("__key_link", 16),
STACK_USAGE("__key_link_end", 24),
STACK_USAGE("keyring_instantiate", 16),
STACK_USAGE("key_link", 48),
STACK_USAGE("key_unlink", 32),
STACK_USAGE("key_move", 56),
STACK_USAGE("keyring_clear", 24),
STACK_USAGE("keyring_revoke", 8),
STACK_USAGE("keyring_gc_select_iterator", 8),
STACK_USAGE("keyring_gc_check_iterator", 0),
STACK_USAGE("keyring_gc", 40),
STACK_USAGE("keyring_restriction_gc", 16),
STACK_USAGE("key_set_index_key", 80),
STACK_USAGE("key_put_tag", 8),
STACK_USAGE("key_remove_domain", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("keyring_get_key_chunk", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("keyring_get_object_key_chunk", 0),
STACK_USAGE("keyring_compare_object", 0),
STACK_USAGE("keyring_diff_objects", 8),
STACK_USAGE("keyring_free_object", 0),
STACK_USAGE("keyring_destroy", 16),
STACK_USAGE("keyring_describe", 16),
STACK_USAGE("keyring_read_iterator", 0),
STACK_USAGE("keyring_read", 40),
STACK_USAGE("keyring_alloc", 16),
STACK_USAGE("restrict_link_reject", 0),
STACK_USAGE("key_default_cmp", 0),
STACK_USAGE("keyring_search_iterator", 32),
STACK_USAGE("key_free_user_ns", 8),
STACK_USAGE("search_nested_keyrings", 216),
STACK_USAGE("keyring_search_rcu", 16),
STACK_USAGE("keyring_search", 168),
STACK_USAGE("key_validate", 8),
STACK_USAGE("key_task_permission", 40),
STACK_USAGE("proc_keys_start", 32),
STACK_USAGE("proc_keys_next", 24),
STACK_USAGE("proc_keys_stop", 0),
STACK_USAGE("proc_keys_show", 264),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("proc_key_users_start", 40),
STACK_USAGE("proc_key_users_next", 16),
STACK_USAGE("proc_key_users_stop", 0),
STACK_USAGE("proc_key_users_show", 32),
STACK_USAGE("key_proc_init", 0),
STACK_USAGE("get_user_session_keyring_rcu", 184),
STACK_USAGE("install_thread_keyring_to_cred", 16),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("install_process_keyring_to_cred", 16),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("put_cred", 8),
STACK_USAGE("install_session_keyring_to_cred", 16),
STACK_USAGE("key_fsuid_changed", 8),
STACK_USAGE("key_fsgid_changed", 8),
STACK_USAGE("search_cred_keyrings_rcu", 40),
STACK_USAGE("search_process_keyrings_rcu", 32),
STACK_USAGE("lookup_user_key_possessed", 0),
STACK_USAGE("lookup_user_key", 208),
STACK_USAGE("look_up_user_keyrings", 120),
STACK_USAGE("join_session_keyring", 32),
STACK_USAGE("key_change_session_keyring", 32),
STACK_USAGE("init_root_keyring", 0),
STACK_USAGE("call_sbin_request_key", 328),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("request_key_and_link", 216),
STACK_USAGE("complete_request_key", 0),
STACK_USAGE("wait_for_key_construction", 16),
STACK_USAGE("request_key_tag", 32),
STACK_USAGE("request_key_with_auxdata", 16),
STACK_USAGE("request_key_rcu", 152),
STACK_USAGE("umh_keys_init", 0),
STACK_USAGE("umh_keys_cleanup", 0),
STACK_USAGE("free_request_key_auth", 16),
STACK_USAGE("request_key_auth_rcu_disposal", 0),
STACK_USAGE("request_key_auth_revoke", 8),
STACK_USAGE("request_key_auth_destroy", 0),
STACK_USAGE("request_key_auth_new", 120),
STACK_USAGE("key_get_instantiation_authkey", 168),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("request_key_auth_preparse", 0),
STACK_USAGE("request_key_auth_free_preparse", 0),
STACK_USAGE("request_key_auth_instantiate", 0),
STACK_USAGE("request_key_auth_describe", 24),
STACK_USAGE("request_key_auth_read", 24),
STACK_USAGE("user_update", 24),
STACK_USAGE("user_revoke", 16),
STACK_USAGE("user_destroy", 0),
STACK_USAGE("user_describe", 16),
STACK_USAGE("user_read", 24),
STACK_USAGE("logon_vet_description", 8),
STACK_USAGE("user_preparse", 16),
STACK_USAGE("user_free_preparse", 0),
STACK_USAGE("user_free_payload_rcu", 0),
STACK_USAGE("ipv6_skb_to_auditdata", 64),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("ipv4_skb_to_auditdata", 0),
STACK_USAGE("common_lsm_audit", 104),
STACK_USAGE("mmap_min_addr_handler", 40),
STACK_USAGE("init_mmap_min_addr", 0),
STACK_USAGE("security_sb_clone_mnt_opts", 40),
STACK_USAGE("security_move_mount", 24),
STACK_USAGE("security_path_notify", 32),
STACK_USAGE("security_inode_alloc", 24),
STACK_USAGE("inode_free_by_rcu", 0),
STACK_USAGE("fsnotify_perm", 16),
STACK_USAGE("security_inode_free", 16),
STACK_USAGE("security_dentry_init_security", 56),
STACK_USAGE("security_dentry_create_files_as", 48),
STACK_USAGE("security_inode_init_security", 168),
STACK_USAGE("security_inode_init_security_anon", 32),
STACK_USAGE("security_old_inode_init_security", 56),
STACK_USAGE("security_inode_create", 40),
STACK_USAGE("security_inode_link", 40),
STACK_USAGE("security_inode_unlink", 32),
STACK_USAGE("security_inode_symlink", 40),
STACK_USAGE("security_inode_mkdir", 40),
STACK_USAGE("security_inode_rmdir", 32),
STACK_USAGE("security_inode_mknod", 48),
STACK_USAGE("security_inode_rename", 48),
STACK_USAGE("security_inode_readlink", 24),
STACK_USAGE("security_inode_follow_link", 40),
STACK_USAGE("security_inode_permission", 32),
STACK_USAGE("security_inode_setattr", 32),
STACK_USAGE("security_inode_getattr", 24),
STACK_USAGE("security_inode_setxattr", 56),
STACK_USAGE("security_inode_post_setxattr", 48),
STACK_USAGE("security_inode_getxattr", 32),
STACK_USAGE("security_inode_listxattr", 24),
STACK_USAGE("security_inode_removexattr", 40),
STACK_USAGE("security_inode_need_killpriv", 16),
STACK_USAGE("security_inode_killpriv", 24),
STACK_USAGE("security_inode_getsecurity", 48),
STACK_USAGE("security_inode_setsecurity", 48),
STACK_USAGE("append_ordered_lsm", 0),
STACK_USAGE("security_inode_listsecurity", 40),
STACK_USAGE("security_inode_getsecid", 24),
STACK_USAGE("security_inode_copy_up", 24),
STACK_USAGE("security_inode_copy_up_xattr", 16),
STACK_USAGE("security_kernfs_init_security", 24),
STACK_USAGE("security_file_permission", 24),
STACK_USAGE("security_file_alloc", 24),
STACK_USAGE("security_file_free", 16),
STACK_USAGE("security_file_ioctl", 32),
STACK_USAGE("security_mmap_file", 64),
STACK_USAGE("security_mmap_addr", 16),
STACK_USAGE("security_file_mprotect", 32),
STACK_USAGE("security_file_lock", 24),
STACK_USAGE("security_file_fcntl", 32),
STACK_USAGE("security_file_set_fowner", 16),
STACK_USAGE("security_file_send_sigiotask", 32),
STACK_USAGE("security_file_receive", 16),
STACK_USAGE("security_file_open", 16),
STACK_USAGE("security_task_alloc", 32),
STACK_USAGE("lsm_allowed", 0),
STACK_USAGE("security_task_free", 16),
STACK_USAGE("security_cred_alloc_blank", 32),
STACK_USAGE("security_cred_free", 16),
STACK_USAGE("security_prepare_creds", 40),
STACK_USAGE("security_transfer_creds", 24),
STACK_USAGE("security_cred_getsecid", 24),
STACK_USAGE("security_kernel_act_as", 24),
STACK_USAGE("security_kernel_create_files_as", 24),
STACK_USAGE("security_kernel_module_request", 16),
STACK_USAGE("security_kernel_read_file", 32),
STACK_USAGE("security_kernel_post_read_file", 40),
STACK_USAGE("security_kernel_load_data", 24),
STACK_USAGE("security_kernel_post_load_data", 40),
STACK_USAGE("security_task_fix_setuid", 32),
STACK_USAGE("security_task_fix_setgid", 32),
STACK_USAGE("security_task_setpgid", 24),
STACK_USAGE("security_task_getpgid", 16),
STACK_USAGE("security_task_getsid", 16),
STACK_USAGE("security_current_getsecid_subj", 16),
STACK_USAGE("security_task_getsecid_obj", 24),
STACK_USAGE("security_task_setnice", 24),
STACK_USAGE("security_task_setioprio", 24),
STACK_USAGE("security_task_getioprio", 16),
STACK_USAGE("security_task_prlimit", 32),
STACK_USAGE("security_task_setrlimit", 32),
STACK_USAGE("security_task_setscheduler", 16),
STACK_USAGE("security_task_getscheduler", 16),
STACK_USAGE("security_task_movememory", 16),
STACK_USAGE("security_task_kill", 40),
STACK_USAGE("security_task_prctl", 56),
STACK_USAGE("security_task_to_inode", 24),
STACK_USAGE("security_ipc_permission", 24),
STACK_USAGE("security_ipc_getsecid", 24),
STACK_USAGE("lsm_set_blob_sizes", 0),
STACK_USAGE("security_msg_msg_alloc", 24),
STACK_USAGE("security_msg_msg_free", 16),
STACK_USAGE("security_msg_queue_alloc", 24),
STACK_USAGE("security_msg_queue_free", 16),
STACK_USAGE("security_msg_queue_associate", 24),
STACK_USAGE("security_msg_queue_msgctl", 24),
STACK_USAGE("security_msg_queue_msgsnd", 32),
STACK_USAGE("security_msg_queue_msgrcv", 48),
STACK_USAGE("security_shm_alloc", 24),
STACK_USAGE("security_shm_free", 16),
STACK_USAGE("security_shm_associate", 24),
STACK_USAGE("security_shm_shmctl", 24),
STACK_USAGE("security_shm_shmat", 32),
STACK_USAGE("security_sem_alloc", 24),
STACK_USAGE("security_sem_free", 16),
STACK_USAGE("security_sem_associate", 24),
STACK_USAGE("security_sem_semctl", 24),
STACK_USAGE("security_sem_semop", 40),
STACK_USAGE("security_d_instantiate", 24),
STACK_USAGE("security_getprocattr", 40),
STACK_USAGE("security_setprocattr", 40),
STACK_USAGE("security_netlink_send", 24),
STACK_USAGE("security_ismaclabel", 16),
STACK_USAGE("security_secid_to_secctx", 32),
STACK_USAGE("security_secctx_to_secid", 32),
STACK_USAGE("security_release_secctx", 24),
STACK_USAGE("security_inode_invalidate_secctx", 16),
STACK_USAGE("prepare_lsm", 8),
STACK_USAGE("security_inode_notifysecctx", 32),
STACK_USAGE("security_inode_setsecctx", 32),
STACK_USAGE("security_inode_getsecctx", 32),
STACK_USAGE("security_unix_stream_connect", 32),
STACK_USAGE("security_unix_may_send", 24),
STACK_USAGE("security_socket_create", 40),
STACK_USAGE("security_socket_post_create", 48),
STACK_USAGE("security_socket_socketpair", 24),
STACK_USAGE("security_socket_bind", 32),
STACK_USAGE("security_socket_connect", 32),
STACK_USAGE("security_socket_listen", 24),
STACK_USAGE("security_socket_accept", 24),
STACK_USAGE("security_socket_sendmsg", 32),
STACK_USAGE("security_socket_recvmsg", 40),
STACK_USAGE("security_socket_getsockname", 16),
STACK_USAGE("security_socket_getpeername", 16),
STACK_USAGE("security_socket_getsockopt", 32),
STACK_USAGE("security_socket_setsockopt", 32),
STACK_USAGE("security_socket_shutdown", 24),
STACK_USAGE("security_sock_rcv_skb", 24),
STACK_USAGE("security_socket_getpeersec_stream", 40),
STACK_USAGE("security_socket_getpeersec_dgram", 32),
STACK_USAGE("security_sk_alloc", 32),
STACK_USAGE("security_sk_free", 16),
STACK_USAGE("security_sk_clone", 24),
STACK_USAGE("security_sk_classify_flow", 24),
STACK_USAGE("security_req_classify_flow", 24),
STACK_USAGE("security_sock_graft", 24),
STACK_USAGE("security_inet_conn_request", 32),
STACK_USAGE("security_inet_csk_clone", 24),
STACK_USAGE("initialize_lsm", 8),
STACK_USAGE("security_inet_conn_established", 24),
STACK_USAGE("security_secmark_relabel_packet", 16),
STACK_USAGE("security_secmark_refcount_inc", 8),
STACK_USAGE("security_secmark_refcount_dec", 8),
STACK_USAGE("security_tun_dev_alloc_security", 16),
STACK_USAGE("security_tun_dev_free_security", 16),
STACK_USAGE("security_tun_dev_create", 8),
STACK_USAGE("security_tun_dev_attach_queue", 16),
STACK_USAGE("security_tun_dev_attach", 24),
STACK_USAGE("security_tun_dev_open", 16),
STACK_USAGE("security_sctp_assoc_request", 24),
STACK_USAGE("security_sctp_bind_connect", 40),
STACK_USAGE("security_sctp_sk_clone", 32),
STACK_USAGE("security_sctp_assoc_established", 24),
STACK_USAGE("ordered_lsm_parse", 80),
STACK_USAGE("security_key_alloc", 32),
STACK_USAGE("security_key_free", 16),
STACK_USAGE("security_key_permission", 32),
STACK_USAGE("security_key_getsecurity", 24),
STACK_USAGE("security_audit_rule_init", 40),
STACK_USAGE("security_audit_rule_known", 16),
STACK_USAGE("security_audit_rule_free", 16),
STACK_USAGE("security_audit_rule_match", 40),
STACK_USAGE("security_bpf", 32),
STACK_USAGE("security_bpf_map", 24),
STACK_USAGE("security_bpf_prog", 16),
STACK_USAGE("security_bpf_map_alloc", 16),
STACK_USAGE("security_bpf_prog_alloc", 16),
STACK_USAGE("security_bpf_map_free", 16),
STACK_USAGE("security_bpf_prog_free", 16),
STACK_USAGE("security_locked_down", 16),
STACK_USAGE("security_perf_event_open", 24),
STACK_USAGE("security_perf_event_alloc", 16),
STACK_USAGE("security_perf_event_free", 16),
STACK_USAGE("security_perf_event_read", 16),
STACK_USAGE("security_perf_event_write", 16),
STACK_USAGE("security_uring_override_creds", 16),
STACK_USAGE("security_uring_sqpoll", 8),
STACK_USAGE("ordered_lsm_init", 8),
STACK_USAGE("early_security_init", 16),
STACK_USAGE("security_init", 16),
STACK_USAGE("choose_major_lsm", 0),
STACK_USAGE("choose_lsm_order", 0),
STACK_USAGE("enable_debug", 0),
STACK_USAGE("lsm_append", 16),
STACK_USAGE("security_add_hooks", 16),
STACK_USAGE("call_blocking_lsm_notifier", 0),
STACK_USAGE("register_blocking_lsm_notifier", 0),
STACK_USAGE("unregister_blocking_lsm_notifier", 0),
STACK_USAGE("lsm_early_cred", 8),
STACK_USAGE("lsm_inode_alloc", 8),
STACK_USAGE("lsm_early_task", 8),
STACK_USAGE("security_binder_set_context_mgr", 16),
STACK_USAGE("security_binder_transaction", 24),
STACK_USAGE("security_binder_transfer_binder", 24),
STACK_USAGE("security_binder_transfer_file", 32),
STACK_USAGE("security_ptrace_access_check", 24),
STACK_USAGE("security_ptrace_traceme", 16),
STACK_USAGE("security_capget", 40),
STACK_USAGE("security_capset", 48),
STACK_USAGE("security_capable", 40),
STACK_USAGE("security_quotactl", 40),
STACK_USAGE("security_quota_on", 16),
STACK_USAGE("security_syslog", 16),
STACK_USAGE("security_settime64", 24),
STACK_USAGE("security_vm_enough_memory_mm", 24),
STACK_USAGE("security_bprm_creds_for_exec", 16),
STACK_USAGE("security_bprm_creds_from_file", 24),
STACK_USAGE("security_bprm_check", 16),
STACK_USAGE("security_bprm_committing_creds", 16),
STACK_USAGE("security_bprm_committed_creds", 16),
STACK_USAGE("security_fs_context_dup", 24),
STACK_USAGE("security_fs_context_parse_param", 32),
STACK_USAGE("security_sb_alloc", 24),
STACK_USAGE("security_sb_delete", 16),
STACK_USAGE("security_sb_free", 16),
STACK_USAGE("security_free_mnt_opts", 16),
STACK_USAGE("security_sb_eat_lsm_opts", 24),
STACK_USAGE("security_sb_mnt_opts_compat", 24),
STACK_USAGE("security_sb_remount", 24),
STACK_USAGE("security_sb_kern_mount", 16),
STACK_USAGE("security_sb_show_options", 24),
STACK_USAGE("security_sb_statfs", 16),
STACK_USAGE("security_sb_mount", 48),
STACK_USAGE("security_sb_umount", 24),
STACK_USAGE("security_sb_pivotroot", 24),
STACK_USAGE("security_sb_set_mnt_opts", 40),
STACK_USAGE("avc_compute_av", 80),
STACK_USAGE("avc_denied", 24),
STACK_USAGE("avc_has_extended_perms", 288),
STACK_USAGE("avc_get_cache_threshold", 0),
STACK_USAGE("avc_has_perm_noaudit", 120),
STACK_USAGE("avc_set_cache_threshold", 0),
STACK_USAGE("avc_has_perm", 88),
STACK_USAGE("avc_policy_seqno", 0),
STACK_USAGE("avc_disable", 0),
STACK_USAGE("avc_init", 0),
STACK_USAGE("__bpf_trace_selinux_audited", 0),
STACK_USAGE("__traceiter_selinux_audited", 40),
STACK_USAGE("perf_trace_selinux_audited", 120),
STACK_USAGE("trace_event_raw_event_selinux_audited", 136),
STACK_USAGE("trace_raw_output_selinux_audited", 24),
STACK_USAGE("avc_get_hash_stats", 32),
STACK_USAGE("avc_xperms_allow_perm", 0),
STACK_USAGE("avc_xperms_free", 48),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("avc_xperms_decision_alloc", 16),
STACK_USAGE("avc_xperms_populate", 48),
STACK_USAGE("avc_node_free", 8),
STACK_USAGE("avc_alloc_node", 96),
STACK_USAGE("avc_audit_pre_callback", 40),
STACK_USAGE("avc_audit_post_callback", 56),
STACK_USAGE("rcu_read_unlock", 0),
STACK_USAGE("slow_avc_audit", 80),
STACK_USAGE("avc_add_callback", 16),
STACK_USAGE("avc_update_node", 120),
STACK_USAGE("avc_flush", 48),
STACK_USAGE("selinux_avc_init", 24),
STACK_USAGE("avc_ss_reset", 32),
STACK_USAGE("show_sid", 48),
STACK_USAGE("selinux_sb_show_options", 56),
STACK_USAGE("inode_mode_to_security_class", 0),
STACK_USAGE("socket_type_to_security_class", 0),
STACK_USAGE("enforcing_setup", 16),
STACK_USAGE("selinux_genfs_get_sid", 48),
STACK_USAGE("inode_doinit_use_xattr", 56),
STACK_USAGE("inode_doinit_with_dentry", 88),
STACK_USAGE("checkreqprot_setup", 16),
STACK_USAGE("dentry_has_perm", 88),
STACK_USAGE("path_has_perm", 88),
STACK_USAGE("file_has_perm", 80),
STACK_USAGE("selinux_determine_inode_label", 56),
STACK_USAGE("may_create", 104),
STACK_USAGE("may_link", 96),
STACK_USAGE("selinux_netcache_avc_callback", 0),
STACK_USAGE("selinux_lsm_notifier_avc_callback", 0),
STACK_USAGE("selinux_binder_set_context_mgr", 0),
STACK_USAGE("selinux_binder_transaction", 16),
STACK_USAGE("selinux_binder_transfer_binder", 0),
STACK_USAGE("selinux_binder_transfer_file", 88),
STACK_USAGE("selinux_ptrace_access_check", 16),
STACK_USAGE("selinux_ptrace_traceme", 8),
STACK_USAGE("selinux_capget", 8),
STACK_USAGE("selinux_capset", 0),
STACK_USAGE("selinux_capable", 104),
STACK_USAGE("selinux_quotactl", 0),
STACK_USAGE("selinux_quota_on", 0),
STACK_USAGE("selinux_syslog", 0),
STACK_USAGE("selinux_vm_enough_memory", 32),
STACK_USAGE("ptrace_parent_sid", 16),
STACK_USAGE("selinux_bprm_creds_for_exec", 96),
STACK_USAGE("task_sid_obj", 8),
STACK_USAGE("match_file", 8),
STACK_USAGE("selinux_bprm_committing_creds", 104),
STACK_USAGE("selinux_bprm_committed_creds", 8),
STACK_USAGE("selinux_sb_alloc_security", 16),
STACK_USAGE("selinux_sb_eat_lsm_opts", 72),
STACK_USAGE("selinux_sb_mnt_opts_compat", 56),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("selinux_sb_remount", 64),
STACK_USAGE("selinux_sb_kern_mount", 40),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("selinux_sb_statfs", 40),
STACK_USAGE("selinux_mount", 0),
STACK_USAGE("selinux_move_mount", 0),
STACK_USAGE("selinux_umount", 0),
STACK_USAGE("selinux_fs_context_dup", 8),
STACK_USAGE("selinux_fs_context_parse_param", 40),
STACK_USAGE("selinux_inode_alloc_security", 24),
STACK_USAGE("selinux_inode_free_security", 16),
STACK_USAGE("selinux_dentry_init_security", 40),
STACK_USAGE("selinux_dentry_create_files_as", 24),
STACK_USAGE("selinux_inode_init_security", 72),
STACK_USAGE("selinux_inode_init_security_anon", 72),
STACK_USAGE("selinux_inode_create", 0),
STACK_USAGE("selinux_inode_link", 0),
STACK_USAGE("selinux_inode_unlink", 0),
STACK_USAGE("selinux_inode_symlink", 0),
STACK_USAGE("selinux_inode_mkdir", 0),
STACK_USAGE("selinux_inode_rmdir", 0),
STACK_USAGE("selinux_inode_mknod", 0),
STACK_USAGE("selinux_inode_rename", 120),
STACK_USAGE("selinux_inode_readlink", 0),
STACK_USAGE("selinux_inode_follow_link", 80),
STACK_USAGE("audit_inode_permission", 40),
STACK_USAGE("selinux_inode_permission", 80),
STACK_USAGE("selinux_inode_setattr", 0),
STACK_USAGE("selinux_inode_getattr", 0),
STACK_USAGE("has_cap_mac_admin", 88),
STACK_USAGE("selinux_inode_setxattr", 128),
STACK_USAGE("selinux_inode_post_setxattr", 56),
STACK_USAGE("selinux_inode_getxattr", 0),
STACK_USAGE("selinux_inode_listxattr", 0),
STACK_USAGE("selinux_inode_removexattr", 24),
STACK_USAGE("selinux_path_notify", 56),
STACK_USAGE("selinux_inode_getsecurity", 80),
STACK_USAGE("selinux_inode_setsecurity", 48),
STACK_USAGE("selinux_inode_listsecurity", 0),
STACK_USAGE("selinux_inode_getsecid", 0),
STACK_USAGE("selinux_inode_copy_up", 16),
STACK_USAGE("selinux_inode_copy_up_xattr", 0),
STACK_USAGE("selinux_free_mnt_opts", 0),
STACK_USAGE("selinux_kernfs_init_security", 104),
STACK_USAGE("selinux_file_permission", 72),
STACK_USAGE("selinux_file_alloc_security", 0),
STACK_USAGE("ioctl_has_perm", 112),
STACK_USAGE("selinux_file_ioctl", 88),
STACK_USAGE("file_map_prot_check", 32),
STACK_USAGE("selinux_mmap_addr", 0),
STACK_USAGE("selinux_mmap_file", 88),
STACK_USAGE("selinux_file_mprotect", 32),
STACK_USAGE("selinux_file_lock", 0),
STACK_USAGE("selinux_file_fcntl", 0),
STACK_USAGE("selinux_file_set_fowner", 0),
STACK_USAGE("selinux_file_send_sigiotask", 16),
STACK_USAGE("selinux_file_receive", 0),
STACK_USAGE("selinux_file_open", 88),
STACK_USAGE("selinux_task_alloc", 0),
STACK_USAGE("selinux_cred_prepare", 0),
STACK_USAGE("selinux_cred_transfer", 0),
STACK_USAGE("selinux_cred_getsecid", 0),
STACK_USAGE("selinux_kernel_act_as", 24),
STACK_USAGE("may_context_mount_sb_relabel", 24),
STACK_USAGE("selinux_kernel_create_files_as", 32),
STACK_USAGE("selinux_kernel_module_request", 40),
STACK_USAGE("selinux_kernel_module_from_file", 72),
STACK_USAGE("selinux_kernel_read_file", 0),
STACK_USAGE("selinux_kernel_load_data", 0),
STACK_USAGE("selinux_task_setpgid", 8),
STACK_USAGE("selinux_task_getpgid", 8),
STACK_USAGE("selinux_task_getsid", 8),
STACK_USAGE("selinux_current_getsecid_subj", 0),
STACK_USAGE("selinux_task_getsecid_obj", 8),
STACK_USAGE("selinux_task_setnice", 8),
STACK_USAGE("selinux_task_setioprio", 8),
STACK_USAGE("selinux_task_getioprio", 8),
STACK_USAGE("selinux_task_prlimit", 0),
STACK_USAGE("selinux_task_setrlimit", 8),
STACK_USAGE("selinux_task_setscheduler", 8),
STACK_USAGE("may_context_mount_inode_relabel", 16),
STACK_USAGE("selinux_task_getscheduler", 8),
STACK_USAGE("selinux_task_movememory", 8),
STACK_USAGE("selinux_task_kill", 16),
STACK_USAGE("selinux_task_to_inode", 32),
STACK_USAGE("selinux_parse_skb", 128),
STACK_USAGE("selinux_socket_create", 40),
STACK_USAGE("selinux_socket_post_create", 64),
STACK_USAGE("selinux_socket_socketpair", 0),
STACK_USAGE("selinux_socket_bind", 168),
STACK_USAGE("selinux_socket_connect_helper", 136),
STACK_USAGE("selinux_socket_connect", 16),
STACK_USAGE("selinux_socket_listen", 96),
STACK_USAGE("selinux_socket_accept", 136),
STACK_USAGE("selinux_socket_sendmsg", 96),
STACK_USAGE("selinux_socket_recvmsg", 96),
STACK_USAGE("selinux_socket_getsockname", 96),
STACK_USAGE("selinux_socket_getpeername", 96),
STACK_USAGE("selinux_socket_setsockopt", 120),
STACK_USAGE("selinux_socket_getsockopt", 96),
STACK_USAGE("selinux_socket_shutdown", 96),
STACK_USAGE("selinux_socket_unix_stream_connect", 120),
STACK_USAGE("selinux_socket_unix_may_send", 96),
STACK_USAGE("selinux_inet_sys_rcv_skb", 48),
STACK_USAGE("selinux_socket_sock_rcv_skb", 224),
STACK_USAGE("selinux_socket_getpeersec_stream", 64),
STACK_USAGE("selinux_socket_getpeersec_dgram", 32),
STACK_USAGE("selinux_sk_alloc_security", 16),
STACK_USAGE("selinux_sk_free_security", 8),
STACK_USAGE("selinux_sk_clone_security", 0),
STACK_USAGE("selinux_sk_getsecid", 0),
STACK_USAGE("selinux_sock_graft", 0),
STACK_USAGE("selinux_sctp_process_new_assoc", 136),
STACK_USAGE("sb_finish_set_opts", 64),
STACK_USAGE("selinux_sctp_assoc_request", 40),
STACK_USAGE("selinux_sctp_assoc_established", 0),
STACK_USAGE("selinux_sctp_bind_connect", 56),
STACK_USAGE("selinux_sctp_sk_clone", 0),
STACK_USAGE("selinux_inet_conn_request", 48),
STACK_USAGE("selinux_inet_csk_clone", 0),
STACK_USAGE("selinux_inet_conn_established", 24),
STACK_USAGE("selinux_secmark_relabel_packet", 0),
STACK_USAGE("selinux_secmark_refcount_inc", 0),
STACK_USAGE("selinux_secmark_refcount_dec", 0),
STACK_USAGE("selinux_req_classify_flow", 0),
STACK_USAGE("selinux_tun_dev_alloc_security", 8),
STACK_USAGE("selinux_tun_dev_free_security", 0),
STACK_USAGE("selinux_tun_dev_create", 0),
STACK_USAGE("selinux_tun_dev_attach_queue", 0),
STACK_USAGE("selinux_tun_dev_attach", 0),
STACK_USAGE("selinux_tun_dev_open", 16),
STACK_USAGE("selinux_ip_forward", 176),
STACK_USAGE("selinux_ip_output", 16),
STACK_USAGE("selinux_ip_postroute", 216),
STACK_USAGE("selinux_netlink_send", 160),
STACK_USAGE("selinux_msg_msg_alloc_security", 0),
STACK_USAGE("selinux_msg_queue_alloc_security", 40),
STACK_USAGE("selinux_msg_queue_associate", 40),
STACK_USAGE("selinux_set_mnt_opts", 120),
STACK_USAGE("selinux_msg_queue_msgctl", 40),
STACK_USAGE("selinux_msg_queue_msgsnd", 80),
STACK_USAGE("selinux_msg_queue_msgrcv", 72),
STACK_USAGE("selinux_shm_alloc_security", 40),
STACK_USAGE("selinux_shm_associate", 40),
STACK_USAGE("selinux_shm_shmctl", 40),
STACK_USAGE("selinux_shm_shmat", 40),
STACK_USAGE("selinux_sem_alloc_security", 40),
STACK_USAGE("selinux_sem_associate", 40),
STACK_USAGE("selinux_sem_semctl", 40),
STACK_USAGE("selinux_sem_semop", 40),
STACK_USAGE("selinux_ipc_permission", 40),
STACK_USAGE("selinux_ipc_getsecid", 0),
STACK_USAGE("selinux_d_instantiate", 0),
STACK_USAGE("selinux_getprocattr", 56),
STACK_USAGE("selinux_setprocattr", 64),
STACK_USAGE("selinux_ismaclabel", 0),
STACK_USAGE("selinux_secid_to_secctx", 0),
STACK_USAGE("selinux_secctx_to_secid", 0),
STACK_USAGE("selinux_release_secctx", 0),
STACK_USAGE("selinux_inode_invalidate_secctx", 16),
STACK_USAGE("selinux_inode_notifysecctx", 0),
STACK_USAGE("selinux_inode_setsecctx", 0),
STACK_USAGE("selinux_inode_getsecctx", 8),
STACK_USAGE("selinux_key_alloc", 16),
STACK_USAGE("selinux_key_free", 0),
STACK_USAGE("selinux_key_permission", 0),
STACK_USAGE("selinux_key_getsecurity", 32),
STACK_USAGE("selinux_bpf", 0),
STACK_USAGE("selinux_bpf_map", 0),
STACK_USAGE("selinux_bpf_prog", 0),
STACK_USAGE("selinux_bpf_map_alloc", 8),
STACK_USAGE("selinux_bpf_map_free", 0),
STACK_USAGE("selinux_bpf_prog_alloc", 8),
STACK_USAGE("selinux_bpf_prog_free", 0),
STACK_USAGE("selinux_perf_event_open", 0),
STACK_USAGE("selinux_perf_event_alloc", 8),
STACK_USAGE("selinux_perf_event_free", 0),
STACK_USAGE("selinux_perf_event_read", 0),
STACK_USAGE("selinux_perf_event_write", 0),
STACK_USAGE("selinux_uring_override_creds", 0),
STACK_USAGE("selinux_uring_sqpoll", 0),
STACK_USAGE("selinux_init", 0),
STACK_USAGE("delayed_superblock_init", 0),
STACK_USAGE("selinux_complete_init", 0),
STACK_USAGE("selinux_nf_register", 0),
STACK_USAGE("selinux_nf_unregister", 0),
STACK_USAGE("selinux_nf_ip_init", 0),
STACK_USAGE("selinux_sb_clone_mnt_opts", 80),
STACK_USAGE("selinux_add_opt", 40),
STACK_USAGE("selinux_ima_measure_state", 16),
STACK_USAGE("selinux_ima_measure_state_locked", 88),
STACK_USAGE("sel_netif_sid_slow", 48),
STACK_USAGE("sel_netif_sid", 24),
STACK_USAGE("sel_netif_flush", 32),
STACK_USAGE("sel_netif_netdev_notifier_handler", 16),
STACK_USAGE("sel_netif_init", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("rcu_read_unlock", 0),
STACK_USAGE("selinux_netlbl_cache_invalidate", 0),
STACK_USAGE("selinux_netlbl_err", 0),
STACK_USAGE("selinux_netlbl_sk_security_free", 24),
STACK_USAGE("selinux_netlbl_sk_security_reset", 0),
STACK_USAGE("selinux_netlbl_skbuff_getsid", 96),
STACK_USAGE("selinux_netlbl_skbuff_setsid", 88),
STACK_USAGE("selinux_netlbl_sctp_assoc_request", 120),
STACK_USAGE("selinux_netlbl_inet_conn_request", 72),
STACK_USAGE("selinux_netlbl_inet_csk_clone", 0),
STACK_USAGE("selinux_netlbl_sctp_sk_clone", 0),
STACK_USAGE("selinux_netlbl_socket_post_create", 24),
STACK_USAGE("selinux_netlbl_sock_rcv_skb", 112),
STACK_USAGE("selinux_netlbl_socket_setsockopt", 80),
STACK_USAGE("selinux_netlbl_socket_connect_locked", 24),
STACK_USAGE("selinux_netlbl_socket_connect", 32),
STACK_USAGE("selinux_netlbl_sock_genattr", 24),
STACK_USAGE("selnl_notify_policyload", 16),
STACK_USAGE("selnl_init", 56),
STACK_USAGE("selnl_notify", 32),
STACK_USAGE("selnl_notify_setenforce", 16),
STACK_USAGE("sel_netnode_sid", 48),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("sel_netnode_flush", 40),
STACK_USAGE("sel_netnode_init", 0),
STACK_USAGE("sel_netport_sid", 48),
STACK_USAGE("sel_netport_flush", 40),
STACK_USAGE("sel_netport_init", 0),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("selinux_nlmsg_lookup", 0),
STACK_USAGE("sel_write_relabel", 88),
STACK_USAGE("sel_write_user", 96),
STACK_USAGE("sel_write_member", 88),
STACK_USAGE("sel_read_enforce", 56),
STACK_USAGE("sel_read_bool", 72),
STACK_USAGE("sel_write_bool", 64),
STACK_USAGE("sel_commit_bools_write", 56),
STACK_USAGE("sel_write_enforce", 80),
STACK_USAGE("sel_read_avc_cache_threshold", 56),
STACK_USAGE("sel_write_avc_cache_threshold", 56),
STACK_USAGE("sel_read_avc_hash_stats", 40),
STACK_USAGE("sel_read_sidtab_hash_stats", 40),
STACK_USAGE("sel_avc_stats_seq_start", 0),
STACK_USAGE("sel_avc_stats_seq_next", 0),
STACK_USAGE("sel_avc_stats_seq_show", 0),
STACK_USAGE("sel_avc_stats_seq_stop", 0),
STACK_USAGE("sel_open_avc_cache_stats", 0),
STACK_USAGE("sel_read_initcon", 48),
STACK_USAGE("sel_read_class", 56),
STACK_USAGE("sel_read_perm", 56),
STACK_USAGE("sel_read_policycap", 56),
STACK_USAGE("sel_make_dir", 40),
STACK_USAGE("sel_read_handle_unknown", 56),
STACK_USAGE("sel_fill_super", 56),
STACK_USAGE("sel_get_tree", 0),
STACK_USAGE("sel_init_fs_context", 0),
STACK_USAGE("sel_kill_sb", 24),
STACK_USAGE("init_sel_fs", 32),
STACK_USAGE("sel_open_handle_status", 8),
STACK_USAGE("sel_read_handle_status", 0),
STACK_USAGE("sel_mmap_handle_status", 0),
STACK_USAGE("sel_read_policyvers", 56),
STACK_USAGE("sel_read_mls", 56),
STACK_USAGE("sel_open_policy", 48),
STACK_USAGE("sel_release_policy", 8),
STACK_USAGE("sel_read_policy", 32),
STACK_USAGE("sel_mmap_policy_fault", 8),
STACK_USAGE("sel_mmap_policy", 0),
STACK_USAGE("sel_remove_old_bool_data", 32),
STACK_USAGE("sel_make_policy_nodes", 200),
STACK_USAGE("sel_write_load", 72),
STACK_USAGE("sel_write_context", 48),
STACK_USAGE("sel_read_checkreqprot", 56),
STACK_USAGE("sel_write_checkreqprot", 88),
STACK_USAGE("sel_write_validatetrans", 88),
STACK_USAGE("selinux_transaction_write", 24),
STACK_USAGE("sel_write_access", 88),
STACK_USAGE("sel_write_create", 112),
STACK_USAGE("avtab_insert_nonunique", 56),
STACK_USAGE("avtab_search", 0),
STACK_USAGE("avtab_search_node", 0),
STACK_USAGE("avtab_search_node_next", 0),
STACK_USAGE("avtab_destroy", 32),
STACK_USAGE("avtab_init", 0),
STACK_USAGE("avtab_alloc", 24),
STACK_USAGE("avtab_alloc_dup", 24),
STACK_USAGE("avtab_hash_eval", 0),
STACK_USAGE("avtab_read_item", 184),
STACK_USAGE("avtab_insertf", 56),
STACK_USAGE("avtab_read", 48),
STACK_USAGE("avtab_write_item", 40),
STACK_USAGE("avtab_write", 40),
STACK_USAGE("avtab_cache_init", 0),
STACK_USAGE("evaluate_cond_nodes", 104),
STACK_USAGE("cond_policydb_init", 0),
STACK_USAGE("cond_policydb_destroy", 32),
STACK_USAGE("cond_init_bool_indexes", 8),
STACK_USAGE("cond_destroy_bool", 8),
STACK_USAGE("cond_index_bool", 0),
STACK_USAGE("cond_read_bool", 56),
STACK_USAGE("cond_insertf", 48),
STACK_USAGE("cond_read_list", 144),
STACK_USAGE("cond_write_bool", 24),
STACK_USAGE("cond_write_list", 56),
STACK_USAGE("cond_compute_xperms", 24),
STACK_USAGE("cond_compute_av", 32),
STACK_USAGE("cond_bools_destroy", 0),
STACK_USAGE("cond_bools_copy", 16),
STACK_USAGE("cond_bools_index", 0),
STACK_USAGE("cond_policydb_destroy_dup", 16),
STACK_USAGE("cond_policydb_dup", 96),
STACK_USAGE("context_compute_hash", 8),
STACK_USAGE("ebitmap_netlbl_export", 40),
STACK_USAGE("ebitmap_netlbl_import", 72),
STACK_USAGE("ebitmap_contains", 40),
STACK_USAGE("ebitmap_get_bit", 0),
STACK_USAGE("ebitmap_set_bit", 40),
STACK_USAGE("ebitmap_cmp", 24),
STACK_USAGE("ebitmap_destroy", 16),
STACK_USAGE("ebitmap_read", 48),
STACK_USAGE("ebitmap_write", 72),
STACK_USAGE("ebitmap_cpy", 32),
STACK_USAGE("ebitmap_hash", 0),
STACK_USAGE("ebitmap_cache_init", 0),
STACK_USAGE("ebitmap_and", 48),
STACK_USAGE("hashtab_stat", 0),
STACK_USAGE("hashtab_duplicate", 80),
STACK_USAGE("hashtab_cache_init", 0),
STACK_USAGE("hashtab_init", 32),
STACK_USAGE("__hashtab_insert", 32),
STACK_USAGE("hashtab_destroy", 24),
STACK_USAGE("hashtab_map", 40),
STACK_USAGE("mls_level_isvalid", 16),
STACK_USAGE("mls_range_isvalid", 40),
STACK_USAGE("mls_context_isvalid", 40),
STACK_USAGE("mls_context_to_sid", 120),
STACK_USAGE("mls_from_string", 24),
STACK_USAGE("mls_compute_context_len", 96),
STACK_USAGE("mls_range_set", 16),
STACK_USAGE("mls_setup_user_range", 72),
STACK_USAGE("mls_context_cpy", 32),
STACK_USAGE("mls_convert_context", 88),
STACK_USAGE("mls_compute_sid", 80),
STACK_USAGE("mls_export_netlbl_lvl", 0),
STACK_USAGE("mls_import_netlbl_lvl", 0),
STACK_USAGE("mls_export_netlbl_cat", 16),
STACK_USAGE("mls_context_cpy_low", 40),
STACK_USAGE("mls_import_netlbl_cat", 32),
STACK_USAGE("mls_context_cpy_high", 40),
STACK_USAGE("mls_sid_to_context", 112),
STACK_USAGE("mls_context_glblub", 24),
STACK_USAGE("context_read_and_validate", 24),
STACK_USAGE("perm_read", 56),
STACK_USAGE("common_read", 72),
STACK_USAGE("read_cons_helper", 96),
STACK_USAGE("class_read", 88),
STACK_USAGE("role_read", 80),
STACK_USAGE("type_read", 88),
STACK_USAGE("mls_read_level", 8),
STACK_USAGE("user_read", 88),
STACK_USAGE("sens_read", 56),
STACK_USAGE("cat_read", 56),
STACK_USAGE("policydb_lookup_compat", 0),
STACK_USAGE("user_bounds_sanity_check", 72),
STACK_USAGE("role_bounds_sanity_check", 72),
STACK_USAGE("type_bounds_sanity_check", 0),
STACK_USAGE("policydb_bounds_sanity_check", 8),
STACK_USAGE("string_to_security_class", 0),
STACK_USAGE("string_to_av_perm", 24),
STACK_USAGE("range_read", 72),
STACK_USAGE("perm_destroy", 8),
STACK_USAGE("common_destroy", 16),
STACK_USAGE("filename_trans_read", 128),
STACK_USAGE("genfs_read", 120),
STACK_USAGE("cls_destroy", 32),
STACK_USAGE("ocontext_read", 136),
STACK_USAGE("policydb_read", 104),
STACK_USAGE("role_destroy", 8),
STACK_USAGE("type_destroy", 8),
STACK_USAGE("sens_write", 32),
STACK_USAGE("user_destroy", 8),
STACK_USAGE("cat_write", 24),
STACK_USAGE("role_trans_write_one", 0),
STACK_USAGE("role_allow_write", 0),
STACK_USAGE("context_write", 56),
STACK_USAGE("perm_write", 24),
STACK_USAGE("common_write", 32),
STACK_USAGE("sens_destroy", 8),
STACK_USAGE("write_cons_helper", 48),
STACK_USAGE("class_write", 64),
STACK_USAGE("cat_destroy", 8),
STACK_USAGE("role_write", 72),
STACK_USAGE("type_write", 72),
STACK_USAGE("user_write", 80),
STACK_USAGE("ocontext_write", 80),
STACK_USAGE("filenametr_destroy", 16),
STACK_USAGE("genfs_write", 32),
STACK_USAGE("range_write_helper", 56),
STACK_USAGE("range_write", 24),
STACK_USAGE("range_tr_destroy", 8),
STACK_USAGE("filename_write_helper_compat", 48),
STACK_USAGE("filename_write_helper", 32),
STACK_USAGE("filename_trans_write", 0),
STACK_USAGE("role_tr_destroy", 8),
STACK_USAGE("policydb_write", 80),
STACK_USAGE("ocontext_destroy", 16),
STACK_USAGE("filenametr_hash", 0),
STACK_USAGE("filenametr_cmp", 0),
STACK_USAGE("policydb_filenametr_search", 40),
STACK_USAGE("policydb_rangetr_search", 0),
STACK_USAGE("role_trans_hash", 0),
STACK_USAGE("role_trans_cmp", 0),
STACK_USAGE("policydb_roletr_search", 0),
STACK_USAGE("common_index", 0),
STACK_USAGE("class_index", 0),
STACK_USAGE("role_index", 0),
STACK_USAGE("type_index", 0),
STACK_USAGE("user_index", 0),
STACK_USAGE("hashtab_insert", 56),
STACK_USAGE("sens_index", 0),
STACK_USAGE("cat_index", 0),
STACK_USAGE("policydb_index", 32),
STACK_USAGE("policydb_destroy", 32),
STACK_USAGE("policydb_load_isids", 40),
STACK_USAGE("policydb_class_isvalid", 0),
STACK_USAGE("policydb_role_isvalid", 0),
STACK_USAGE("policydb_type_isvalid", 0),
STACK_USAGE("policydb_context_isvalid", 24),
STACK_USAGE("mls_read_range_helper", 64),
STACK_USAGE("security_compute_xperms_decision", 112),
STACK_USAGE("security_compute_av", 64),
STACK_USAGE("security_is_socket_class", 0),
STACK_USAGE("security_compute_av_user", 56),
STACK_USAGE("context_struct_to_string", 64),
STACK_USAGE("security_sidtab_hash_stats", 16),
STACK_USAGE("security_get_initial_sid_context", 0),
STACK_USAGE("security_sid_to_context_core", 64),
STACK_USAGE("security_sid_to_context", 0),
STACK_USAGE("security_sid_to_context_force", 0),
STACK_USAGE("security_sid_to_context_inval", 0),
STACK_USAGE("string_to_context_struct", 56),
STACK_USAGE("security_context_to_sid_core", 160),
STACK_USAGE("security_context_to_sid", 0),
STACK_USAGE("security_context_str_to_sid", 32),
STACK_USAGE("security_context_to_sid_default", 0),
STACK_USAGE("security_context_to_sid_force", 0),
STACK_USAGE("security_compute_sid", 272),
STACK_USAGE("context_destroy", 8),
STACK_USAGE("security_transition_sid", 0),
STACK_USAGE("security_transition_sid_user", 0),
STACK_USAGE("security_member_sid", 0),
STACK_USAGE("security_change_sid", 0),
STACK_USAGE("convert_context", 72),
STACK_USAGE("selinux_policy_cancel", 16),
STACK_USAGE("selinux_policy_commit", 72),
STACK_USAGE("security_load_policy", 176),
STACK_USAGE("security_port_sid", 64),
STACK_USAGE("security_mls_enabled", 8),
STACK_USAGE("security_ib_pkey_sid", 64),
STACK_USAGE("security_ib_endport_sid", 64),
STACK_USAGE("security_netif_sid", 64),
STACK_USAGE("security_node_sid", 72),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("constraint_expr_eval", 168),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("security_get_user_sids", 264),
STACK_USAGE("__security_genfs_sid", 72),
STACK_USAGE("security_genfs_sid", 48),
STACK_USAGE("selinux_policy_genfs_sid", 0),
STACK_USAGE("security_fs_use", 64),
STACK_USAGE("security_get_bools", 40),
STACK_USAGE("security_set_bools", 112),
STACK_USAGE("security_get_bool_value", 24),
STACK_USAGE("security_sid_mls_copy", 168),
STACK_USAGE("security_net_peersid_resolve", 40),
STACK_USAGE("get_classes_callback", 16),
STACK_USAGE("security_get_classes", 32),
STACK_USAGE("get_permissions_callback", 16),
STACK_USAGE("security_get_permissions", 40),
STACK_USAGE("security_get_reject_unknown", 8),
STACK_USAGE("security_get_allow_unknown", 8),
STACK_USAGE("security_policycap_supported", 16),
STACK_USAGE("selinux_audit_rule_free", 8),
STACK_USAGE("selinux_audit_rule_init", 48),
STACK_USAGE("selinux_audit_rule_known", 0),
STACK_USAGE("selinux_audit_rule_match", 48),
STACK_USAGE("aurule_avc_callback", 0),
STACK_USAGE("aurule_init", 0),
STACK_USAGE("security_netlbl_secattr_to_sid", 136),
STACK_USAGE("security_netlbl_sid_to_secattr", 40),
STACK_USAGE("security_read_policy", 56),
STACK_USAGE("security_read_state_kernel", 56),
STACK_USAGE("dump_masked_av_helper", 0),
STACK_USAGE("security_dump_masked_av", 344),
STACK_USAGE("services_compute_xperms_drivers", 0),
STACK_USAGE("context_struct_compute_av", 336),
STACK_USAGE("security_compute_validatetrans", 152),
STACK_USAGE("security_validate_transition_user", 0),
STACK_USAGE("security_validate_transition", 0),
STACK_USAGE("security_bounded_transition", 80),
STACK_USAGE("services_compute_xperms_decision", 0),
STACK_USAGE("sidtab_hash_stats", 48),
STACK_USAGE("context_destroy", 8),
STACK_USAGE("sidtab_do_lookup", 64),
STACK_USAGE("sidtab_search_entry", 0),
STACK_USAGE("sidtab_search_entry_force", 0),
STACK_USAGE("sidtab_context_to_sid", 112),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("sidtab_init", 8),
STACK_USAGE("sidtab_convert_hashtable", 40),
STACK_USAGE("sidtab_convert_tree", 64),
STACK_USAGE("sidtab_convert", 72),
STACK_USAGE("sidtab_cancel_convert", 16),
STACK_USAGE("sidtab_freeze_begin", 16),
STACK_USAGE("sidtab_freeze_end", 0),
STACK_USAGE("sidtab_destroy_tree", 32),
STACK_USAGE("sidtab_destroy", 24),
STACK_USAGE("sidtab_sid2str_put", 72),
STACK_USAGE("context_to_sid", 48),
STACK_USAGE("sidtab_sid2str_get", 48),
STACK_USAGE("sidtab_set_initial", 48),
STACK_USAGE("symtab_init", 0),
STACK_USAGE("symtab_insert", 56),
STACK_USAGE("symtab_search", 32),
STACK_USAGE("selinux_status_update_policyload", 40),
STACK_USAGE("selinux_kernel_status_page", 32),
STACK_USAGE("selinux_status_update_setenforce", 24),
STACK_USAGE("yama_relation_cleanup", 24),
STACK_USAGE("yama_ptracer_add", 24),
STACK_USAGE("yama_ptracer_del", 24),
STACK_USAGE("yama_task_free", 0),
STACK_USAGE("yama_task_prctl", 32),
STACK_USAGE("rcu_lock_acquire", 0),
STACK_USAGE("rcu_lock_release", 0),
STACK_USAGE("task_is_descendant", 24),
STACK_USAGE("yama_ptrace_access_check", 48),
STACK_USAGE("yama_ptrace_traceme", 24),
STACK_USAGE("yama_dointvec_minmax", 112),
STACK_USAGE("yama_init_sysctl", 0),
STACK_USAGE("yama_init", 0),
STACK_USAGE("__report_access", 24),
STACK_USAGE("report_access", 88),
STACK_USAGE("bpf_core_dump_spec", 40),
STACK_USAGE("bpf_core_calc_relo_insn", 192),
STACK_USAGE("btf__resolve_size", 24),
STACK_USAGE("bpf_core_match_member", 136),
STACK_USAGE("bpf_core_calc_field_relo", 88),
STACK_USAGE("is_flex_arr", 8),
STACK_USAGE("bpf_core_calc_relo", 80),
STACK_USAGE("bpf_core_patch_insn", 48),
STACK_USAGE("irq_bypass_unregister_producer", 16),
STACK_USAGE("irq_bypass_register_consumer", 24),
STACK_USAGE("irq_bypass_unregister_consumer", 16),
STACK_USAGE("irq_bypass_register_producer", 24),